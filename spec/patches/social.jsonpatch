[
  {
    "op": "remove",
    "path": "/basePath"
  },
  {
    "op": "add",
    "path": "/host",
    "value": "demo.accelbyte.io"
  },
  {
    "op": "add",
    "path": "/schemes",
    "value": [
      "https"
    ]
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1stats"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1statitems~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1profiles~1{profileId}"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value~1reset"
  },
  {
    "op": "remove",
    "path": "/paths/~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value"
  },
  {
    "op": "remove",
    "path": "/paths/~1v2~1public~1namespaces~1{namespace}~1statitems~1value~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1slots"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1stats"
  },
  {
    "op": "remove",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1profiles~1{profileId}~1attributes~1{attributeName}"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1stats~1export"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1reset~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1reset~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1statitems~1value~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1statitems~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value~1reset"
  },
  {
    "op": "remove",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1slots~1{slotId}"
  },
  {
    "op": "remove",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1slots"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1stats~1import"
  },
  {
    "op": "remove",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1config"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems"
  },
  {
    "op": "remove",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1profiles"
  },
  {
    "op": "remove",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1slots~1{slotId}"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems"
  },
  {
    "op": "remove",
    "path": "/paths/~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1statitems~1value~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1statitems~1value~1reset~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v2~1admin~1namespaces~1{namespace}~1statitems~1value~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1reset~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1globalstatitems"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1stats~1{statCode}"
  },
  {
    "op": "remove",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1config"
  },
  {
    "op": "remove",
    "path": "/paths/~1admin~1namespaces~1{namespace}~1users~1{userId}~1profiles"
  },
  {
    "op": "remove",
    "path": "/paths/~1public~1namespaces~1{namespace}~1profiles"
  },
  {
    "op": "remove",
    "path": "/paths/~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1statitems~1value~1reset~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1profiles~1{profileId}"
  },
  {
    "op": "remove",
    "path": "/paths/~1v1~1admin~1namespaces~1{namespace}~1stats~1search"
  },
  {
    "op": "remove",
    "path": "/paths/~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1bulk"
  },
  {
    "op": "remove",
    "path": "/paths/~1public~1namespaces~1{namespace}~1users~1{userId}~1slots~1{slotId}~1metadata"
  },
  {
    "op": "remove",
    "path": "/paths/~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value"
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1reset~1bulk",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset user&#39;s statitem values for given namespace and user.  \nOther detail info:\n+ *Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItemValues",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/A DTO object for resetting user stat items"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk reset user's statitem values",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1bulk",
    "value": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk create user&#39;s statItems.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk created result&lt;/li&gt;",
        "operationId": "bulkCreateUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemCreate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk create user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1admin~1namespaces~1{namespace}~1users~1{userId}~1slots~1{slotId}",
    "value": {
      "get": {
        "description": "Get slot data.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: slot data&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getSlotData",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12141</td><td>Slot [{slotId}] not found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns slot data",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1globalstatitems",
    "value": {
      "get": {
        "description": "List global statItems by pagination.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STATITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;ul",
        "operationId": "getGlobalStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GlobalStatItemPagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List global statItems",
        "tags": [
          "GlobalStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value~1reset",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Reset user&#39;s statitem value for a given namespace and user.\nUser&#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Required permission*: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: updated user&#39;s statItem",
        "operationId": "resetUserStatItemValue_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public reset user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1public~1namespaces~1{namespace}~1users~1{userId}~1slots~1{slotId}~1metadata",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates the slot metadata.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated slot&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicUpdateUserNamespaceSlotMetadata",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SlotMetadataUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SlotInfo"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12141</td><td>Slot [{slotId}] not found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Updates the slot metadata",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1admin~1namespaces~1{namespace}~1users~1{userId}~1profiles",
    "value": {
      "get": {
        "description": "Returns all profiles&#39; header for a user.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of profiles&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getUserProfiles",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/GameProfileHeader"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns all profiles' header for a user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1public~1namespaces~1{namespace}~1profiles",
    "value": {
      "get": {
        "description": "Returns all profiles for specified users.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:GAMEPROFILE&#34;, action=2 (READ)\n&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of profiles&lt;/ul&gt;",
        "operationId": "publicGetUserGameProfiles",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "User IDs",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "userIds",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserGameProfiles"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12021</td><td>{totalUser} users is requested. Cannot retrieve more than {limitUser} users at once</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns all profiles for specified users",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:GAMEPROFILE"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value",
    "value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update user&#39;s statitem value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "incUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemInc"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1admin~1namespaces~1{namespace}~1config",
    "value": {
      "delete": {
        "description": "Deletes a namespace slot configuration, the configuration will be default after delete.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:SLOTCONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "deleteNamespaceSlotConfig",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful delete of namespace slot config"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes a namespace slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG"
        }
      },
      "get": {
        "description": "Get slot configuration for a given namespace. In case slot configuration is not set, the default will be returned.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:SLOTCONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: namespace slot config info&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getNamespaceSlotConfig",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NamespaceSlotConfigInfo"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns a namespace slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a slot namespace configuration.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:SLOTCONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated namespace slot config&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "updateNamespaceSlotConfig",
        "parameters": [
          {
            "description": "Namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SlotConfigUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/NamespaceSlotConfigInfo"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update a namespace slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1stats~1{statCode}",
    "value": {
      "delete": {
        "description": "Deletes stat template.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STAT&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "deleteStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful delete of stat"
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      },
      "get": {
        "description": "Get stat by statCode.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STAT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat info&lt;/ul&gt;",
        "operationId": "getStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat Code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Get stat by statCode",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Update stat.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STAT&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated stat&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "updateStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful update of stat",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1public~1namespaces~1{namespace}~1users~1{userId}~1profiles~1{profileId}~1attributes~1{attributeName}",
    "value": {
      "get": {
        "description": "Returns game profile attribute.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: attribute info&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicGetProfileAttribute",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attribute Name",
            "in": "path",
            "name": "attributeName",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12041</td><td>Game profile with id [{profileId}] is not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns game profile attribute",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates game profile attribute, returns updated profile.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated attribute&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicUpdateAttribute",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Attribute Name",
            "in": "path",
            "name": "attributeName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GameProfileInfo"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12022</td><td>Game profile attribute name [{attrName1}] passed in request url mismatch the name [{attrName2}] in body</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12041</td><td>Game profile with id [{profileId}] is not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Updates game profile attribute",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1bulk",
    "value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;",
        "operationId": "bulkIncUserStatItemValue_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicBulkIncUserStatItem_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1admin~1namespaces~1{namespace}~1users~1{userId}~1profiles~1{profileId}",
    "value": {
      "get": {
        "description": "Returns profile for a user.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: game profile info&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GameProfileInfo"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12041</td><td>Game profile with id [{profileId}] is not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns profile for a user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems",
    "value": {
      "delete": {
        "description": "This endpoint is for testing purpose. Use this endpoint for cleaning up after testing.&lt;br&gt;Delete user&#39;s statItems given stat code.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=8 (DELETE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: no content&lt;/li&gt;&lt;/li&gt;",
        "operationId": "deleteUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "delete successfully"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete User's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create statItem for a user.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "createUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create user statItem successfully"
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12274</td><td>Stat item with code [{statCode}] of user [{profileId}] already exists in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create user's statItem",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1statitems~1value~1bulk",
    "value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update multiple user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "bulkIncUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update multiple user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "bulkIncUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1statitems~1bulk",
    "value": {
      "get": {
        "description": "Public bulk fetch multiple user&#39;s statitem value for a given namespace and statCode.  \nOther detail info:\n+ *Required permission*: resource=&#34;NAMESPACE:{namespace}:STATITEM&#34;, action=2 (READ)\n+ *Returns*: list of user&#39;s statItem",
        "operationId": "bulkFetchStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "comma separated user Ids",
            "in": "query",
            "name": "userIds",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserStatItemInfo"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk fetch statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems~1bulk",
    "value": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk create statItems.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk created result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicBulkCreateUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemCreate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk create user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1reset~1bulk",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk reset user&#39;s statitems value for given namespace and user.  \nOther detail info:\n+ *Required permission*: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem_3",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemReset"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk reset user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v2~1admin~1namespaces~1{namespace}~1statitems~1value~1bulk",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update multiple user&#39;s statitems value with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nOther detail info:\n+ *Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkUpdateUserStatItemV2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemUpdate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1stats",
    "value": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create stat.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:STAT&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created stat template&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "createStat_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatCreate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create stat successfully",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12271</td><td>Stat template with code [{statCode}] already exists in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STAT [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:STAT"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems",
    "value": {
      "delete": {
        "description": "Delete user&#39;s stat items for given namespace, statCode, and user Id. \nIf query param *additionalKey* is provided, it will delete user stat items of specific key (i.e. characterName). \nOtherwise, it will delete all stat items related to the user Id. \n&lt;br&gt;Delete user&#39;s statItems given stat code.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=8 (DELETE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: no content&lt;/li&gt;&lt;/li&gt;",
        "operationId": "deleteUserStatItems_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "delete successfully"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete User's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1statitems~1value~1bulk",
    "value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update multiple user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicBulkIncUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update multiple user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicBulkIncUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update user&#39;s statitem value for a given namespace and user with a certain update strategy.\nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user&#39;s statitems, such as character&#39;s statitems. \nIf provided, user&#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: updated user&#39;s statItem",
        "operationId": "updateUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}] is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1reset~1bulk",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset user&#39;s statitems value for given namespace and user.  \nOther detail info:\n+ *Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemReset"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk reset user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1bulk",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update user&#39;s statitems value for given namespace and user with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user&#39;s statitems, such as character&#39;s statitems. \nIf provided, user&#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Required permission*: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkUpdateUserStatItem_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemUpdate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1public~1namespaces~1{namespace}~1users~1{userId}~1slots",
    "value": {
      "get": {
        "description": "Get\u00a0list of slots for a given user in namespace.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of slots&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicGetUserNamespaceSlots",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/SlotInfo"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns slots for given user",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Creates a slot.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created slot info&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicCreateUserNamespaceSlot",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Label",
            "in": "query",
            "name": "label",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          },
          {
            "description": "Custom attribute",
            "in": "formData",
            "name": "customAttribute",
            "required": false,
            "type": "string"
          },
          {
            "description": "File checksum, base64 encoded md5",
            "in": "formData",
            "name": "checksum",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Successful create of a slot"
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12121</td><td>Checksum mismatch for [{filename}]</td></tr><tr><td>12122</td><td>[{filename}] exceeds the upload limit size of [{sizeLimit}] bytes</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12171</td><td>User [{userId}] exceed max slot count [{maxCount}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Creates a slot",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1stats~1search",
    "value": {
      "get": {
        "description": "Query stats stats by keyword.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STAT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;i&gt;: stats&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "queryStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "keyword",
            "in": "query",
            "name": "keyword",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatPagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Query stats by keyword",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1statitems~1value~1reset~1bulk",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset multiple user&#39;s statitems value. \nUser&#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Required permission*: resource=&#34;NAMESPACE:{namespace}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem_2",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemReset"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk reset multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems",
    "value": {
      "delete": {
        "description": "Delete user&#39;s statItems given stat code.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=8 (DELETE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: no content&lt;/li&gt;&lt;/li&gt;",
        "operationId": "deleteUserStatItems_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "delete successfully"
          },
          "401": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20001</td><td>unauthorized access</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "403": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20013</td><td>insufficient permission</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Delete User's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create user&#39;s statItem.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicCreateUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create user statItem successfully"
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12274</td><td>Stat item with code [{statCode}] of user [{profileId}] already exists in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create user's statItem",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v2~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1bulk",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update user&#39;s statitems value for given namespace and user with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user&#39;s statitems, such as character&#39;s statitems. \nIf provided, user&#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkUpdateUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemUpdate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v2~1public~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public update user&#39;s statitem value for a given namespace and user with a certain update strategy. \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nThe *additionalKey* parameter will be suffixed to *userId* and is used to support multi level user&#39;s statitems, such as character&#39;s statitems. \nIf provided, user&#39;s statitems will be saved with key: *userId_additionalKey* \n\nOther detail info:\n+ *Required permission*: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: updated user&#39;s statItem",
        "operationId": "updateUserStatItemValue_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}] is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1admin~1namespaces~1{namespace}~1users~1{userId}~1config",
    "value": {
      "delete": {
        "description": "Deletes a user slot configuration in given namespace, the namespace slot configuration will be returned after delete.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/li&gt;",
        "operationId": "deleteUserSlotConfig",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful delete of user/namespace slot config"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes a user slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG"
        }
      },
      "get": {
        "description": "Get\u00a0a user slot configuration in given namespace. In case the user slot configuration is not set, the namespace configuration will be returned.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;Returns&lt;/i&gt;: slot config info&lt;/li&gt;",
        "operationId": "getUserSlotConfig",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserSlotConfigInfo"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns a user slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update a user slot configuration in given namespace.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated slot config&lt;/li&gt;",
        "operationId": "updateUserSlotConfig",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SlotConfigUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserSlotConfigInfo"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Update a user slot configuration",
        "tags": [
          "SlotConfig"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1public~1namespaces~1{namespace}~1users~1{userId}~1profiles~1{profileId}",
    "value": {
      "delete": {
        "description": "Deletes game profile.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicDeleteProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Game profile has been deleted"
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12041</td><td>Game profile with id [{profileId}] is not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes game profile",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      },
      "get": {
        "description": "Returns profile for a user.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: game profile info&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicGetProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GameProfileInfo"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12041</td><td>Game profile with id [{profileId}] is not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns profile for a user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Updates user game profile, returns updated profile.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated game profile&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicUpdateProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Game profile ID",
            "in": "path",
            "name": "profileId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GameProfileRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GameProfileInfo"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12041</td><td>Game profile with id [{profileId}] is not found</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Updates user game profile",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1statitems~1bulk",
    "value": {
      "get": {
        "description": "Bulk fetch multiple user&#39;s statitem value for a given namespace and statCode.  \nOther detail info:\n+ *Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:STATITEM&#34;, action=2 (READ)\n+ *Returns*: list of user&#39;s statItem",
        "operationId": "bulkFetchStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "query",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "comma separated user Ids",
            "in": "query",
            "name": "userIds",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserStatItemInfo"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk fetch statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems~1value~1bulk",
    "value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "bulkIncUserStatItemValue_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk update user&#39;s statitems value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: bulk updated result&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "bulkIncUserStatItem_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemInc"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk update user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1stats~1export",
    "value": {
      "get": {
        "description": "Export all stat configurations for a given namespace into file  At current, only JSON file is supported.&lt;p&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;*Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:STAT&#34;, action=2 (READ)&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "exportStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful export of stat configs"
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Export all stat configurations",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1admin~1namespaces~1{namespace}~1users~1{userId}~1slots",
    "value": {
      "get": {
        "description": "Get\u00a0slots for a given user.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of slots&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getUserNamespaceSlots",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/SlotInfo"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns list of slots for given user",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1statitems",
    "value": {
      "get": {
        "description": "List user&#39;s statItems.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          },
          {
            "description": "tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatItemPagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1statitems",
    "value": {
      "get": {
        "description": "Public list all statItems by pagination.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stat items&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicQueryUserStatItems",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat codes",
            "in": "query",
            "name": "statCodes",
            "required": false,
            "type": "string"
          },
          {
            "description": "tags",
            "in": "query",
            "name": "tags",
            "required": false,
            "type": "string"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserStatItemPagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public list user's statItems",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v2~1public~1namespaces~1{namespace}~1statitems~1value~1bulk",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public bulk update multiple user&#39;s statitems value with specific update strategy.  \nThere are four supported update strategies:\n+ *OVERRIDE*: update user statitem with the new value\n+ *INCREMENT*: increment user statitem with the specified value\n+ *MAX*: update user statitem with the specified value if it&#39;s larger than the existing value\n+ *MIN*: update user statitem with the specified value if it&#39;s lower than the existing value\n\nOther detail info:\n+ *Required permission*: resource=&#34;NAMESPACE:{namespace}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkUpdateUserStatItem_1",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemUpdate"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public bulk update multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1statitems~1value~1reset~1bulk",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Bulk reset multiple user&#39;s statitems value.\nUser&#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: bulk updated result",
        "operationId": "bulkResetUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkUserStatItemReset"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/BulkStatItemOperationResult"
              },
              "type": "array"
            }
          },
          "422": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Bulk reset multiple user's statitems value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1public~1namespaces~1{namespace}~1users~1{userId}~1profiles",
    "value": {
      "get": {
        "description": "Returns all profiles&#39; header for a user.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: list of profiles&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicGetUserProfiles",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/GameProfileHeader"
              },
              "type": "array"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns all profiles' header for a user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create new profile for user.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/li&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/li&gt;: created game profile&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicCreateProfile",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GameProfileRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Profile has been created"
          },
          "422": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>20002</td><td>validation error</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ValidationErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create a new profile for user",
        "tags": [
          "GameProfile"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1public~1namespaces~1{namespace}~1users~1{userId}~1slots~1{slotId}",
    "value": {
      "delete": {
        "description": "Deletes the slot.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA&#34;, action=8 (DELETE)&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicDeleteUserNamespaceSlot",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Successful delete of a slot"
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12141</td><td>Slot [{slotId}] not found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [DELETE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Deletes the slot",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "8",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      },
      "get": {
        "description": "Get slot data.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: slot data&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicGetSlotData",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12141</td><td>Slot [{slotId}] not found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "Returns slot data",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Updates a slot.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:SLOTDATA&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated slot&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicUpdateUserNamespaceSlot",
        "parameters": [
          {
            "description": "Namespace ID",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "User ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Slot ID",
            "in": "path",
            "name": "slotId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Label",
            "in": "query",
            "name": "label",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Tags",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "tags",
            "required": false,
            "type": "array"
          },
          {
            "description": "Custom attribute",
            "in": "formData",
            "name": "customAttribute",
            "required": false,
            "type": "string"
          },
          {
            "description": "File checksum",
            "in": "formData",
            "name": "checksum",
            "required": false,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SlotInfo"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12121</td><td>Checksum mismatch for [{filename}]</td></tr><tr><td>12122</td><td>[{filename}] exceeds the upload limit size of [{sizeLimit}] bytes</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12141</td><td>Slot [{slotId}] not found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Updates a slot",
        "tags": [
          "Slot"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1stats~1import",
    "value": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Import stat configurations for a given namespace from file. At current, only JSON file is supported.&lt;p&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;*Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:STAT&#34;, action=1 (CREATE)&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "importStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          },
          {
            "description": "replaceExisting",
            "in": "query",
            "name": "replaceExisting",
            "required": false,
            "type": "boolean",
            "x-omitempty": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatImportInfo"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>70138</td><td>Stats data for namespace [{namespace}] is invalid</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Import stat configurations",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value~1reset",
    "value": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Reset user&#39;s statitem value for a given namespace and user.\nUser&#39;s statitem value will be reset to the default value defined in the statistic configuration.\n\nOther detail info:\n+ *Required permission*: resource=&#34;ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)\n+ *Returns*: updated user&#39;s statItem",
        "operationId": "resetUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "description": "additional key",
            "in": "query",
            "name": "additionalKey",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatResetInfo"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>errorCode</td><td>errorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Reset user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1public~1namespaces~1{namespace}~1users~1{userId}~1stats~1{statCode}~1statitems~1value",
    "value": {
      "patch": {
        "consumes": [
          "application/json"
        ],
        "description": "Public update user&#39;s statitem value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicIncUserStatItemValue",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemInc"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Public update user&#39;s statitem value.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;NAMESPACE:{namespace}:USER:{userId}:STATITEM&#34;, action=4 (UPDATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: updated user&#39;s statItem&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "publicIncUserStatItem",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "description": "user ID",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "description": "stat code",
            "in": "path",
            "name": "statCode",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatItemInc"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatItemIncResult"
            }
          },
          "400": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12221</td><td>Invalid stat operator, expect [{expected}] but actual [{actual}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "404": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12241</td><td>Stat [{statCode}] cannot be found in namespace [{namespace}]</td></tr><tr><td>12242</td><td>Stat item of [{statCode}] of user [{profileId}] cannot be found in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12273</td><td>Stat [{statCode}] is not decreasable</td></tr><tr><td>12275</td><td>[{action}] value: [{value}] of stat [{statCode}]  is out of range while minimum [{minimum}] and maximum [{maximum}] in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Public update user's statitem value",
        "tags": [
          "UserStatistic"
        ],
        "x-authorization": {
          "action": "4",
          "resource": "NAMESPACE:{namespace}:USER:{userId}:STATITEM"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/paths/~1social~1v1~1admin~1namespaces~1{namespace}~1stats",
    "value": {
      "get": {
        "description": "List stats by pagination.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STAT&#34;, action=2 (READ)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: stats&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "getStats",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "default": 0,
            "format": "int32",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "format": "int32",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatPagingSlicedResult"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [READ]"
            ],
            "authorization": []
          }
        ],
        "summary": "List stats",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "2",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Create stat.&lt;br&gt;Other detail info:&lt;ul&gt;&lt;li&gt;&lt;i&gt;Required permission&lt;/i&gt;: resource=&#34;ADMIN:NAMESPACE:{namespace}:STAT&#34;, action=1 (CREATE)&lt;/li&gt;&lt;li&gt;&lt;i&gt;Returns&lt;/i&gt;: created stat template&lt;/li&gt;&lt;/ul&gt;",
        "operationId": "createStat",
        "parameters": [
          {
            "description": "namespace",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StatCreate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Create stat successfully",
            "schema": {
              "$ref": "#/definitions/StatInfo"
            }
          },
          "409": {
            "description": "<table><tr><td>ErrorCode</td><td>ErrorMessage</td></tr><tr><td>12271</td><td>Stat template with code [{statCode}] already exists in namespace [{namespace}]</td></tr></table>",
            "schema": {
              "$ref": "#/definitions/ErrorEntity"
            }
          }
        },
        "security": [
          {
            "authorization": []
          },
          {
            "HasPermission": [
              "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]"
            ],
            "authorization": []
          }
        ],
        "summary": "Create stat",
        "tags": [
          "StatConfiguration"
        ],
        "x-authorization": {
          "action": "1",
          "resource": "ADMIN:NAMESPACE:{namespace}:STAT"
        }
      }
    }
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasScope",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {},
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "add",
    "path": "/securityDefinitions/HasPermission",
    "value": {
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "flow": "accessCode",
      "scopes": {
        "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [DELETE]": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [READ]": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [READ]",
        "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [UPDATE]": "ADMIN:NAMESPACE:{namespace}:SLOTCONFIG [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]": "ADMIN:NAMESPACE:{namespace}:STAT [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]": "ADMIN:NAMESPACE:{namespace}:STAT [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:STAT [READ]": "ADMIN:NAMESPACE:{namespace}:STAT [READ]",
        "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]": "ADMIN:NAMESPACE:{namespace}:STAT [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]": "ADMIN:NAMESPACE:{namespace}:STATITEM [READ]",
        "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]": "ADMIN:NAMESPACE:{namespace}:STATITEM [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [DELETE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTCONFIG [UPDATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]",
        "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]": "ADMIN:NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]",
        "NAMESPACE:{namespace}:GAMEPROFILE [READ]": "NAMESPACE:{namespace}:GAMEPROFILE [READ]",
        "NAMESPACE:{namespace}:STAT [CREATE]": "NAMESPACE:{namespace}:STAT [CREATE]",
        "NAMESPACE:{namespace}:STATITEM [READ]": "NAMESPACE:{namespace}:STATITEM [READ]",
        "NAMESPACE:{namespace}:STATITEM [UPDATE]": "NAMESPACE:{namespace}:STATITEM [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [CREATE]": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [CREATE]",
        "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [DELETE]": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [DELETE]",
        "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:GAMEPROFILE [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [CREATE]": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [CREATE]",
        "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [DELETE]": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [DELETE]",
        "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:SLOTDATA [UPDATE]",
        "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [CREATE]",
        "NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [DELETE]",
        "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [READ]",
        "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]": "NAMESPACE:{namespace}:USER:{userId}:STATITEM [UPDATE]"
      },
      "tokenUrl": "https://dumy.oauth.net/token",
      "type": "oauth2"
    }
  },
  {
    "op": "add",
    "path": "/definitions/UserStatItemInfo/properties/updatedAt/x-nullable",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/UserStatItemInfo/properties/createdAt/x-nullable",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/StatInfo/properties/setAsGlobal/x-omitempty",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/StatInfo/properties/incrementOnly/x-omitempty",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/StatInfo/properties/updatedAt/x-nullable",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/StatInfo/properties/createdAt/x-nullable",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/SlotInfo/properties/dateModified/x-nullable",
    "value": true
  },
  {
    "op": "add",
    "path": "/definitions/SlotInfo/properties/dateAccessed/x-nullable",
    "value": true
  },
  {
    "op": "add",
    "path": "/definitions/SlotInfo/properties/dateCreated/x-nullable",
    "value": true
  },
  {
    "op": "add",
    "path": "/definitions/StatCreate/properties/setAsGlobal/x-omitempty",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/StatCreate/properties/incrementOnly/x-omitempty",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/BulkStatItemOperationResult/properties/success/x-omitempty",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/GlobalStatItemInfo/properties/updatedAt/x-nullable",
    "value": false
  },
  {
    "op": "add",
    "path": "/definitions/GlobalStatItemInfo/properties/createdAt/x-nullable",
    "value": false
  }
]
