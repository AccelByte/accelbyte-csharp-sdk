// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Ugc.Model;
using AccelByte.Sdk.Api.Ugc.Operation;
using AccelByte.Sdk.Api.Ugc.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class UgcPublicLikeLegacy_OpExts
    {
        public static Ugc.Model.ModelsPaginatedContentDownloadResponse? Execute(
            this GetLikedContent.GetLikedContentBuilder builder,
            string namespace_
        )
        {
            GetLikedContent op = builder.Build(
                namespace_
            );

            return ((Ugc.Wrapper.PublicLikeLegacy)builder.WrapperObject!).GetLikedContent(op);
        }
        public static async Task<Ugc.Model.ModelsPaginatedContentDownloadResponse?> ExecuteAsync(
            this GetLikedContent.GetLikedContentBuilder builder,
            string namespace_
        )
        {
            GetLikedContent op = builder.Build(
                namespace_
            );

            return await ((Ugc.Wrapper.PublicLikeLegacy)builder.WrapperObject!).GetLikedContentAsync(op);
        }
        public static Ugc.Model.ModelsContentLikeResponse? Execute(
            this UpdateContentLikeStatus.UpdateContentLikeStatusBuilder builder,
            ModelsContentLikeRequest body,
            string contentId,
            string namespace_
        )
        {
            UpdateContentLikeStatus op = builder.Build(
                body,
                contentId,
                namespace_
            );

            return ((Ugc.Wrapper.PublicLikeLegacy)builder.WrapperObject!).UpdateContentLikeStatus(op);
        }
        public static async Task<Ugc.Model.ModelsContentLikeResponse?> ExecuteAsync(
            this UpdateContentLikeStatus.UpdateContentLikeStatusBuilder builder,
            ModelsContentLikeRequest body,
            string contentId,
            string namespace_
        )
        {
            UpdateContentLikeStatus op = builder.Build(
                body,
                contentId,
                namespace_
            );

            return await ((Ugc.Wrapper.PublicLikeLegacy)builder.WrapperObject!).UpdateContentLikeStatusAsync(op);
        }
    }
}