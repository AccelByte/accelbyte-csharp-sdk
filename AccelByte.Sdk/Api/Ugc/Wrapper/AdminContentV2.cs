// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Ugc.Model;
using AccelByte.Sdk.Api.Ugc.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Ugc.Wrapper
{
    public class AdminContentV2
    {
        private readonly AccelByteSDK _sdk;

        public AdminContentV2(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminGetContentByChannelIDV2.AdminGetContentByChannelIDV2Builder AdminGetContentByChannelIDV2Op
        {
            get { return Operation.AdminGetContentByChannelIDV2.Builder.SetWrapperObject(this); }
        }
        public AdminCreateContentV2.AdminCreateContentV2Builder AdminCreateContentV2Op
        {
            get { return Operation.AdminCreateContentV2.Builder.SetWrapperObject(this); }
        }
        public AdminDeleteOfficialContentV2.AdminDeleteOfficialContentV2Builder AdminDeleteOfficialContentV2Op
        {
            get { return Operation.AdminDeleteOfficialContentV2.Builder.SetWrapperObject(this); }
        }
        public AdminUpdateOfficialContentV2.AdminUpdateOfficialContentV2Builder AdminUpdateOfficialContentV2Op
        {
            get { return Operation.AdminUpdateOfficialContentV2.Builder.SetWrapperObject(this); }
        }
        public AdminUpdateOfficialContentFileLocation.AdminUpdateOfficialContentFileLocationBuilder AdminUpdateOfficialContentFileLocationOp
        {
            get { return Operation.AdminUpdateOfficialContentFileLocation.Builder.SetWrapperObject(this); }
        }
        public AdminGenerateOfficialContentUploadURLV2.AdminGenerateOfficialContentUploadURLV2Builder AdminGenerateOfficialContentUploadURLV2Op
        {
            get { return Operation.AdminGenerateOfficialContentUploadURLV2.Builder.SetWrapperObject(this); }
        }
        public AdminListContentV2.AdminListContentV2Builder AdminListContentV2Op
        {
            get { return Operation.AdminListContentV2.Builder.SetWrapperObject(this); }
        }
        public AdminBulkGetContentByIDsV2.AdminBulkGetContentByIDsV2Builder AdminBulkGetContentByIDsV2Op
        {
            get { return Operation.AdminBulkGetContentByIDsV2.Builder.SetWrapperObject(this); }
        }
        public AdminGetContentBulkByShareCodesV2.AdminGetContentBulkByShareCodesV2Builder AdminGetContentBulkByShareCodesV2Op
        {
            get { return Operation.AdminGetContentBulkByShareCodesV2.Builder.SetWrapperObject(this); }
        }
        public AdminGetContentByShareCodeV2.AdminGetContentByShareCodeV2Builder AdminGetContentByShareCodeV2Op
        {
            get { return Operation.AdminGetContentByShareCodeV2.Builder.SetWrapperObject(this); }
        }
        public AdminGetContentByContentIDV2.AdminGetContentByContentIDV2Builder AdminGetContentByContentIDV2Op
        {
            get { return Operation.AdminGetContentByContentIDV2.Builder.SetWrapperObject(this); }
        }
        public RollbackContentVersionV2.RollbackContentVersionV2Builder RollbackContentVersionV2Op
        {
            get { return Operation.RollbackContentVersionV2.Builder.SetWrapperObject(this); }
        }
        public AdminUpdateScreenshotsV2.AdminUpdateScreenshotsV2Builder AdminUpdateScreenshotsV2Op
        {
            get { return Operation.AdminUpdateScreenshotsV2.Builder.SetWrapperObject(this); }
        }
        public AdminUploadContentScreenshotV2.AdminUploadContentScreenshotV2Builder AdminUploadContentScreenshotV2Op
        {
            get { return Operation.AdminUploadContentScreenshotV2.Builder.SetWrapperObject(this); }
        }
        public AdminDeleteContentScreenshotV2.AdminDeleteContentScreenshotV2Builder AdminDeleteContentScreenshotV2Op
        {
            get { return Operation.AdminDeleteContentScreenshotV2.Builder.SetWrapperObject(this); }
        }
        public ListContentVersionsV2.ListContentVersionsV2Builder ListContentVersionsV2Op
        {
            get { return Operation.ListContentVersionsV2.Builder.SetWrapperObject(this); }
        }
        public AdminUpdateContentByShareCodeV2.AdminUpdateContentByShareCodeV2Builder AdminUpdateContentByShareCodeV2Op
        {
            get { return Operation.AdminUpdateContentByShareCodeV2.Builder.SetWrapperObject(this); }
        }
        public AdminDeleteContentByShareCodeV2.AdminDeleteContentByShareCodeV2Builder AdminDeleteContentByShareCodeV2Op
        {
            get { return Operation.AdminDeleteContentByShareCodeV2.Builder.SetWrapperObject(this); }
        }
        public AdminDeleteUserContentV2.AdminDeleteUserContentV2Builder AdminDeleteUserContentV2Op
        {
            get { return Operation.AdminDeleteUserContentV2.Builder.SetWrapperObject(this); }
        }
        public AdminUpdateUserContentV2.AdminUpdateUserContentV2Builder AdminUpdateUserContentV2Op
        {
            get { return Operation.AdminUpdateUserContentV2.Builder.SetWrapperObject(this); }
        }
        public AdminUpdateUserContentFileLocation.AdminUpdateUserContentFileLocationBuilder AdminUpdateUserContentFileLocationOp
        {
            get { return Operation.AdminUpdateUserContentFileLocation.Builder.SetWrapperObject(this); }
        }
        public AdminGenerateUserContentUploadURLV2.AdminGenerateUserContentUploadURLV2Builder AdminGenerateUserContentUploadURLV2Op
        {
            get { return Operation.AdminGenerateUserContentUploadURLV2.Builder.SetWrapperObject(this); }
        }
        public AdminGetContentByUserIDV2.AdminGetContentByUserIDV2Builder AdminGetContentByUserIDV2Op
        {
            get { return Operation.AdminGetContentByUserIDV2.Builder.SetWrapperObject(this); }
        }
        public AdminUpdateContentHideStatusV2.AdminUpdateContentHideStatusV2Builder AdminUpdateContentHideStatusV2Op
        {
            get { return Operation.AdminUpdateContentHideStatusV2.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.ModelsPaginatedContentDownloadResponseV2? AdminGetContentByChannelIDV2(AdminGetContentByChannelIDV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsPaginatedContentDownloadResponseV2?> AdminGetContentByChannelIDV2Async(AdminGetContentByChannelIDV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsCreateContentResponseV2? AdminCreateContentV2(AdminCreateContentV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsCreateContentResponseV2?> AdminCreateContentV2Async(AdminCreateContentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsCreateContentResponseV2<T1>? AdminCreateContentV2<T1>(AdminCreateContentV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsCreateContentResponseV2<T1>?> AdminCreateContentV2Async<T1>(AdminCreateContentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteOfficialContentV2(AdminDeleteOfficialContentV2 input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminDeleteOfficialContentV2Async(AdminDeleteOfficialContentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsUpdateContentResponseV2? AdminUpdateOfficialContentV2(AdminUpdateOfficialContentV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUpdateContentResponseV2?> AdminUpdateOfficialContentV2Async(AdminUpdateOfficialContentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsUpdateContentResponseV2<T1>? AdminUpdateOfficialContentV2<T1>(AdminUpdateOfficialContentV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUpdateContentResponseV2<T1>?> AdminUpdateOfficialContentV2Async<T1>(AdminUpdateOfficialContentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsUpdateContentResponseV2? AdminUpdateOfficialContentFileLocation(AdminUpdateOfficialContentFileLocation input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUpdateContentResponseV2?> AdminUpdateOfficialContentFileLocationAsync(AdminUpdateOfficialContentFileLocation input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsUpdateContentResponseV2<T1>? AdminUpdateOfficialContentFileLocation<T1>(AdminUpdateOfficialContentFileLocation input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUpdateContentResponseV2<T1>?> AdminUpdateOfficialContentFileLocationAsync<T1>(AdminUpdateOfficialContentFileLocation input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsGenerateContentUploadURLResponse? AdminGenerateOfficialContentUploadURLV2(AdminGenerateOfficialContentUploadURLV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGenerateContentUploadURLResponse?> AdminGenerateOfficialContentUploadURLV2Async(AdminGenerateOfficialContentUploadURLV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPaginatedContentDownloadResponseV2? AdminListContentV2(AdminListContentV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsPaginatedContentDownloadResponseV2?> AdminListContentV2Async(AdminListContentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ModelsContentDownloadResponseV2>? AdminBulkGetContentByIDsV2(AdminBulkGetContentByIDsV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ModelsContentDownloadResponseV2>?> AdminBulkGetContentByIDsV2Async(AdminBulkGetContentByIDsV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.ModelsContentDownloadResponseV2<T1>>? AdminBulkGetContentByIDsV2<T1>(AdminBulkGetContentByIDsV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ModelsContentDownloadResponseV2<T1>>?> AdminBulkGetContentByIDsV2Async<T1>(AdminBulkGetContentByIDsV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.ModelsContentDownloadResponseV2>? AdminGetContentBulkByShareCodesV2(AdminGetContentBulkByShareCodesV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ModelsContentDownloadResponseV2>?> AdminGetContentBulkByShareCodesV2Async(AdminGetContentBulkByShareCodesV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.ModelsContentDownloadResponseV2<T1>>? AdminGetContentBulkByShareCodesV2<T1>(AdminGetContentBulkByShareCodesV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ModelsContentDownloadResponseV2<T1>>?> AdminGetContentBulkByShareCodesV2Async<T1>(AdminGetContentBulkByShareCodesV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsContentDownloadResponseV2? AdminGetContentByShareCodeV2(AdminGetContentByShareCodeV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsContentDownloadResponseV2?> AdminGetContentByShareCodeV2Async(AdminGetContentByShareCodeV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsContentDownloadResponseV2<T1>? AdminGetContentByShareCodeV2<T1>(AdminGetContentByShareCodeV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsContentDownloadResponseV2<T1>?> AdminGetContentByShareCodeV2Async<T1>(AdminGetContentByShareCodeV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsContentDownloadResponseV2? AdminGetContentByContentIDV2(AdminGetContentByContentIDV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsContentDownloadResponseV2?> AdminGetContentByContentIDV2Async(AdminGetContentByContentIDV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsContentDownloadResponseV2<T1>? AdminGetContentByContentIDV2<T1>(AdminGetContentByContentIDV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsContentDownloadResponseV2<T1>?> AdminGetContentByContentIDV2Async<T1>(AdminGetContentByContentIDV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsContentDownloadResponse? RollbackContentVersionV2(RollbackContentVersionV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsContentDownloadResponse?> RollbackContentVersionV2Async(RollbackContentVersionV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsContentDownloadResponse<T1>? RollbackContentVersionV2<T1>(RollbackContentVersionV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsContentDownloadResponse<T1>?> RollbackContentVersionV2Async<T1>(RollbackContentVersionV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsUpdateScreenshotResponse? AdminUpdateScreenshotsV2(AdminUpdateScreenshotsV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUpdateScreenshotResponse?> AdminUpdateScreenshotsV2Async(AdminUpdateScreenshotsV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsCreateScreenshotResponse? AdminUploadContentScreenshotV2(AdminUploadContentScreenshotV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsCreateScreenshotResponse?> AdminUploadContentScreenshotV2Async(AdminUploadContentScreenshotV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteContentScreenshotV2(AdminDeleteContentScreenshotV2 input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminDeleteContentScreenshotV2Async(AdminDeleteContentScreenshotV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsListContentVersionsResponse? ListContentVersionsV2(ListContentVersionsV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsListContentVersionsResponse?> ListContentVersionsV2Async(ListContentVersionsV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsCreateContentResponseV2? AdminUpdateContentByShareCodeV2(AdminUpdateContentByShareCodeV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsCreateContentResponseV2?> AdminUpdateContentByShareCodeV2Async(AdminUpdateContentByShareCodeV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsCreateContentResponseV2<T1>? AdminUpdateContentByShareCodeV2<T1>(AdminUpdateContentByShareCodeV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsCreateContentResponseV2<T1>?> AdminUpdateContentByShareCodeV2Async<T1>(AdminUpdateContentByShareCodeV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteContentByShareCodeV2(AdminDeleteContentByShareCodeV2 input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminDeleteContentByShareCodeV2Async(AdminDeleteContentByShareCodeV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteUserContentV2(AdminDeleteUserContentV2 input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminDeleteUserContentV2Async(AdminDeleteUserContentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsUpdateContentResponseV2? AdminUpdateUserContentV2(AdminUpdateUserContentV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUpdateContentResponseV2?> AdminUpdateUserContentV2Async(AdminUpdateUserContentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsUpdateContentResponseV2<T1>? AdminUpdateUserContentV2<T1>(AdminUpdateUserContentV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUpdateContentResponseV2<T1>?> AdminUpdateUserContentV2Async<T1>(AdminUpdateUserContentV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsUpdateContentResponseV2? AdminUpdateUserContentFileLocation(AdminUpdateUserContentFileLocation input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUpdateContentResponseV2?> AdminUpdateUserContentFileLocationAsync(AdminUpdateUserContentFileLocation input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsUpdateContentResponseV2<T1>? AdminUpdateUserContentFileLocation<T1>(AdminUpdateUserContentFileLocation input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUpdateContentResponseV2<T1>?> AdminUpdateUserContentFileLocationAsync<T1>(AdminUpdateUserContentFileLocation input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsGenerateContentUploadURLResponse? AdminGenerateUserContentUploadURLV2(AdminGenerateUserContentUploadURLV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGenerateContentUploadURLResponse?> AdminGenerateUserContentUploadURLV2Async(AdminGenerateUserContentUploadURLV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPaginatedContentDownloadResponseV2? AdminGetContentByUserIDV2(AdminGetContentByUserIDV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsPaginatedContentDownloadResponseV2?> AdminGetContentByUserIDV2Async(AdminGetContentByUserIDV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsCreateContentResponseV2? AdminUpdateContentHideStatusV2(AdminUpdateContentHideStatusV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsCreateContentResponseV2?> AdminUpdateContentHideStatusV2Async(AdminUpdateContentHideStatusV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsCreateContentResponseV2<T1>? AdminUpdateContentHideStatusV2<T1>(AdminUpdateContentHideStatusV2 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsCreateContentResponseV2<T1>?> AdminUpdateContentHideStatusV2Async<T1>(AdminUpdateContentHideStatusV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}