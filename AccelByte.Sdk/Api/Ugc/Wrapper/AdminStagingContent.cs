// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Ugc.Model;
using AccelByte.Sdk.Api.Ugc.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Ugc.Wrapper
{
    public class AdminStagingContent
    {
        private readonly AccelByteSDK _sdk;

        public AdminStagingContent(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminListStagingContents.AdminListStagingContentsBuilder AdminListStagingContentsOp
        {
            get { return Operation.AdminListStagingContents.Builder.SetWrapperObject(this); }
        }
        public AdminGetStagingContentByID.AdminGetStagingContentByIDBuilder AdminGetStagingContentByIDOp
        {
            get { return Operation.AdminGetStagingContentByID.Builder.SetWrapperObject(this); }
        }
        public AdminApproveStagingContent.AdminApproveStagingContentBuilder AdminApproveStagingContentOp
        {
            get { return Operation.AdminApproveStagingContent.Builder.SetWrapperObject(this); }
        }
        public AdminListUserStagingContents.AdminListUserStagingContentsBuilder AdminListUserStagingContentsOp
        {
            get { return Operation.AdminListUserStagingContents.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.ModelsPaginatedListStagingContentResponse? AdminListStagingContents(AdminListStagingContents input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsPaginatedListStagingContentResponse?> AdminListStagingContentsAsync(AdminListStagingContents input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsStagingContentResponse? AdminGetStagingContentByID(AdminGetStagingContentByID input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsStagingContentResponse?> AdminGetStagingContentByIDAsync(AdminGetStagingContentByID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsStagingContentResponse<T1>? AdminGetStagingContentByID<T1>(AdminGetStagingContentByID input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsStagingContentResponse<T1>?> AdminGetStagingContentByIDAsync<T1>(AdminGetStagingContentByID input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsStagingContentResponse? AdminApproveStagingContent(AdminApproveStagingContent input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsStagingContentResponse?> AdminApproveStagingContentAsync(AdminApproveStagingContent input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsStagingContentResponse<T1>? AdminApproveStagingContent<T1>(AdminApproveStagingContent input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsStagingContentResponse<T1>?> AdminApproveStagingContentAsync<T1>(AdminApproveStagingContent input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPaginatedListStagingContentResponse? AdminListUserStagingContents(AdminListUserStagingContents input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsPaginatedListStagingContentResponse?> AdminListUserStagingContentsAsync(AdminListUserStagingContents input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}