// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Ugc.Model;
using AccelByte.Sdk.Api.Ugc.Operation;
using AccelByte.Sdk.Api.Ugc.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class UgcAdminStagingContent_OpExts
    {
        public static Ugc.Model.ModelsPaginatedListStagingContentResponse? Execute(
            this AdminListStagingContents.AdminListStagingContentsBuilder builder,
            string namespace_
        )
        {
            AdminListStagingContents op = builder.Build(
                namespace_
            );

            return ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminListStagingContents(op);
        }
        public static async Task<Ugc.Model.ModelsPaginatedListStagingContentResponse?> ExecuteAsync(
            this AdminListStagingContents.AdminListStagingContentsBuilder builder,
            string namespace_
        )
        {
            AdminListStagingContents op = builder.Build(
                namespace_
            );

            return await ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminListStagingContentsAsync(op);
        }
        public static Ugc.Model.ModelsStagingContentResponse? Execute(
            this AdminGetStagingContentByID.AdminGetStagingContentByIDBuilder builder,
            string contentId,
            string namespace_
        )
        {
            AdminGetStagingContentByID op = builder.Build(
                contentId,
                namespace_
            );

            return ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminGetStagingContentByID(op);
        }
        public static async Task<Ugc.Model.ModelsStagingContentResponse?> ExecuteAsync(
            this AdminGetStagingContentByID.AdminGetStagingContentByIDBuilder builder,
            string contentId,
            string namespace_
        )
        {
            AdminGetStagingContentByID op = builder.Build(
                contentId,
                namespace_
            );

            return await ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminGetStagingContentByIDAsync(op);
        }

        public static Ugc.Model.ModelsStagingContentResponse<T1>? Execute<T1>(
            this AdminGetStagingContentByID.AdminGetStagingContentByIDBuilder builder,
            string contentId,
            string namespace_
        )
        {
            AdminGetStagingContentByID op = builder.Build(
                contentId,
                namespace_
            );

            return ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminGetStagingContentByID<T1>(op);
        }
        public static async Task<Ugc.Model.ModelsStagingContentResponse<T1>?> ExecuteAsync<T1>(
            this AdminGetStagingContentByID.AdminGetStagingContentByIDBuilder builder,
            string contentId,
            string namespace_
        )
        {
            AdminGetStagingContentByID op = builder.Build(
                contentId,
                namespace_
            );

            return await ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminGetStagingContentByIDAsync<T1>(op);
        }
        public static Ugc.Model.ModelsStagingContentResponse? Execute(
            this AdminApproveStagingContent.AdminApproveStagingContentBuilder builder,
            ModelsApproveStagingContentRequest body,
            string contentId,
            string namespace_
        )
        {
            AdminApproveStagingContent op = builder.Build(
                body,
                contentId,
                namespace_
            );

            return ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminApproveStagingContent(op);
        }
        public static async Task<Ugc.Model.ModelsStagingContentResponse?> ExecuteAsync(
            this AdminApproveStagingContent.AdminApproveStagingContentBuilder builder,
            ModelsApproveStagingContentRequest body,
            string contentId,
            string namespace_
        )
        {
            AdminApproveStagingContent op = builder.Build(
                body,
                contentId,
                namespace_
            );

            return await ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminApproveStagingContentAsync(op);
        }

        public static Ugc.Model.ModelsStagingContentResponse<T1>? Execute<T1>(
            this AdminApproveStagingContent.AdminApproveStagingContentBuilder builder,
            ModelsApproveStagingContentRequest body,
            string contentId,
            string namespace_
        )
        {
            AdminApproveStagingContent op = builder.Build(
                body,
                contentId,
                namespace_
            );

            return ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminApproveStagingContent<T1>(op);
        }
        public static async Task<Ugc.Model.ModelsStagingContentResponse<T1>?> ExecuteAsync<T1>(
            this AdminApproveStagingContent.AdminApproveStagingContentBuilder builder,
            ModelsApproveStagingContentRequest body,
            string contentId,
            string namespace_
        )
        {
            AdminApproveStagingContent op = builder.Build(
                body,
                contentId,
                namespace_
            );

            return await ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminApproveStagingContentAsync<T1>(op);
        }
        public static Ugc.Model.ModelsPaginatedListStagingContentResponse? Execute(
            this AdminListUserStagingContents.AdminListUserStagingContentsBuilder builder,
            string namespace_,
            string userId
        )
        {
            AdminListUserStagingContents op = builder.Build(
                namespace_,
                userId
            );

            return ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminListUserStagingContents(op);
        }
        public static async Task<Ugc.Model.ModelsPaginatedListStagingContentResponse?> ExecuteAsync(
            this AdminListUserStagingContents.AdminListUserStagingContentsBuilder builder,
            string namespace_,
            string userId
        )
        {
            AdminListUserStagingContents op = builder.Build(
                namespace_,
                userId
            );

            return await ((Ugc.Wrapper.AdminStagingContent)builder.WrapperObject!).AdminListUserStagingContentsAsync(op);
        }
    }
}