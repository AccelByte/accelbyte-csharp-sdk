// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Session.Model;
using AccelByte.Sdk.Api.Session.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Session.Wrapper
{
    public class Party
    {
        private readonly AccelByteSDK _sdk;

        public Party(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminQueryParties.AdminQueryPartiesBuilder AdminQueryPartiesOp
        {
            get { return Operation.AdminQueryParties.Builder.SetWrapperObject(this); }
        }
        public PublicPartyJoinCode.PublicPartyJoinCodeBuilder PublicPartyJoinCodeOp
        {
            get { return Operation.PublicPartyJoinCode.Builder.SetWrapperObject(this); }
        }
        public PublicGetParty.PublicGetPartyBuilder PublicGetPartyOp
        {
            get { return Operation.PublicGetParty.Builder.SetWrapperObject(this); }
        }
        public PublicUpdateParty.PublicUpdatePartyBuilder PublicUpdatePartyOp
        {
            get { return Operation.PublicUpdateParty.Builder.SetWrapperObject(this); }
        }
        public PublicPatchUpdateParty.PublicPatchUpdatePartyBuilder PublicPatchUpdatePartyOp
        {
            get { return Operation.PublicPatchUpdateParty.Builder.SetWrapperObject(this); }
        }
        public PublicGeneratePartyCode.PublicGeneratePartyCodeBuilder PublicGeneratePartyCodeOp
        {
            get { return Operation.PublicGeneratePartyCode.Builder.SetWrapperObject(this); }
        }
        public PublicRevokePartyCode.PublicRevokePartyCodeBuilder PublicRevokePartyCodeOp
        {
            get { return Operation.PublicRevokePartyCode.Builder.SetWrapperObject(this); }
        }
        public PublicPartyInvite.PublicPartyInviteBuilder PublicPartyInviteOp
        {
            get { return Operation.PublicPartyInvite.Builder.SetWrapperObject(this); }
        }
        public PublicPromotePartyLeader.PublicPromotePartyLeaderBuilder PublicPromotePartyLeaderOp
        {
            get { return Operation.PublicPromotePartyLeader.Builder.SetWrapperObject(this); }
        }
        public PublicPartyJoin.PublicPartyJoinBuilder PublicPartyJoinOp
        {
            get { return Operation.PublicPartyJoin.Builder.SetWrapperObject(this); }
        }
        public PublicPartyLeave.PublicPartyLeaveBuilder PublicPartyLeaveOp
        {
            get { return Operation.PublicPartyLeave.Builder.SetWrapperObject(this); }
        }
        public PublicPartyReject.PublicPartyRejectBuilder PublicPartyRejectOp
        {
            get { return Operation.PublicPartyReject.Builder.SetWrapperObject(this); }
        }
        public PublicPartyKick.PublicPartyKickBuilder PublicPartyKickOp
        {
            get { return Operation.PublicPartyKick.Builder.SetWrapperObject(this); }
        }
        public PublicCreateParty.PublicCreatePartyBuilder PublicCreatePartyOp
        {
            get { return Operation.PublicCreateParty.Builder.SetWrapperObject(this); }
        }
        public PublicQueryMyParties.PublicQueryMyPartiesBuilder PublicQueryMyPartiesOp
        {
            get { return Operation.PublicQueryMyParties.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.ApimodelsPartyQueryResponse? AdminQueryParties(AdminQueryParties input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartyQueryResponse?> AdminQueryPartiesAsync(AdminQueryParties input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsPartySessionResponse? PublicPartyJoinCode(PublicPartyJoinCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse?> PublicPartyJoinCodeAsync(PublicPartyJoinCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ApimodelsPartySessionResponse<T1, T2>? PublicPartyJoinCode<T1, T2>(PublicPartyJoinCode input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse<T1, T2>?> PublicPartyJoinCodeAsync<T1, T2>(PublicPartyJoinCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsPartySessionResponse? PublicGetParty(PublicGetParty input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse?> PublicGetPartyAsync(PublicGetParty input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ApimodelsPartySessionResponse<T1, T2>? PublicGetParty<T1, T2>(PublicGetParty input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse<T1, T2>?> PublicGetPartyAsync<T1, T2>(PublicGetParty input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsPartySessionResponse? PublicUpdateParty(PublicUpdateParty input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse?> PublicUpdatePartyAsync(PublicUpdateParty input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ApimodelsPartySessionResponse<T1, T2>? PublicUpdateParty<T1, T2>(PublicUpdateParty input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse<T1, T2>?> PublicUpdatePartyAsync<T1, T2>(PublicUpdateParty input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsPartySessionResponse? PublicPatchUpdateParty(PublicPatchUpdateParty input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse?> PublicPatchUpdatePartyAsync(PublicPatchUpdateParty input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ApimodelsPartySessionResponse<T1, T2>? PublicPatchUpdateParty<T1, T2>(PublicPatchUpdateParty input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse<T1, T2>?> PublicPatchUpdatePartyAsync<T1, T2>(PublicPatchUpdateParty input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsPartySessionResponse? PublicGeneratePartyCode(PublicGeneratePartyCode input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse?> PublicGeneratePartyCodeAsync(PublicGeneratePartyCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ApimodelsPartySessionResponse<T1, T2>? PublicGeneratePartyCode<T1, T2>(PublicGeneratePartyCode input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse<T1, T2>?> PublicGeneratePartyCodeAsync<T1, T2>(PublicGeneratePartyCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void PublicRevokePartyCode(PublicRevokePartyCode input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task PublicRevokePartyCodeAsync(PublicRevokePartyCode input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsSessionInviteResponse? PublicPartyInvite(PublicPartyInvite input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsSessionInviteResponse?> PublicPartyInviteAsync(PublicPartyInvite input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsPartySessionResponse? PublicPromotePartyLeader(PublicPromotePartyLeader input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse?> PublicPromotePartyLeaderAsync(PublicPromotePartyLeader input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ApimodelsPartySessionResponse<T1, T2>? PublicPromotePartyLeader<T1, T2>(PublicPromotePartyLeader input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse<T1, T2>?> PublicPromotePartyLeaderAsync<T1, T2>(PublicPromotePartyLeader input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsPartySessionResponse? PublicPartyJoin(PublicPartyJoin input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse?> PublicPartyJoinAsync(PublicPartyJoin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ApimodelsPartySessionResponse<T1, T2>? PublicPartyJoin<T1, T2>(PublicPartyJoin input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse<T1, T2>?> PublicPartyJoinAsync<T1, T2>(PublicPartyJoin input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void PublicPartyLeave(PublicPartyLeave input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task PublicPartyLeaveAsync(PublicPartyLeave input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void PublicPartyReject(PublicPartyReject input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task PublicPartyRejectAsync(PublicPartyReject input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsKickResponse? PublicPartyKick(PublicPartyKick input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsKickResponse?> PublicPartyKickAsync(PublicPartyKick input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsPartySessionResponse? PublicCreateParty(PublicCreateParty input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse?> PublicCreatePartyAsync(PublicCreateParty input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ApimodelsPartySessionResponse<T1, T2>? PublicCreateParty<T1, T2>(PublicCreateParty input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartySessionResponse<T1, T2>?> PublicCreatePartyAsync<T1, T2>(PublicCreateParty input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1, T2>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApimodelsPartyQueryResponse? PublicQueryMyParties(PublicQueryMyParties input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApimodelsPartyQueryResponse?> PublicQueryMyPartiesAsync(PublicQueryMyParties input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}