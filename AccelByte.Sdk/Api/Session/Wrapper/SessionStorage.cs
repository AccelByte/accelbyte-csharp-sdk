// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Session.Model;
using AccelByte.Sdk.Api.Session.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Session.Wrapper
{
    public class SessionStorage
    {
        private readonly AccelByteSDK _sdk;

        public SessionStorage(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminReadSessionStorage.AdminReadSessionStorageBuilder AdminReadSessionStorageOp
        {
            get { return Operation.AdminReadSessionStorage.Builder.SetWrapperObject(this); }
        }
        public AdminDeleteUserSessionStorage.AdminDeleteUserSessionStorageBuilder AdminDeleteUserSessionStorageOp
        {
            get { return Operation.AdminDeleteUserSessionStorage.Builder.SetWrapperObject(this); }
        }
        public AdminReadUserSessionStorage.AdminReadUserSessionStorageBuilder AdminReadUserSessionStorageOp
        {
            get { return Operation.AdminReadUserSessionStorage.Builder.SetWrapperObject(this); }
        }
        public PublicUpdateInsertSessionStorageLeader.PublicUpdateInsertSessionStorageLeaderBuilder PublicUpdateInsertSessionStorageLeaderOp
        {
            get { return Operation.PublicUpdateInsertSessionStorageLeader.Builder.SetWrapperObject(this); }
        }
        public PublicUpdateInsertSessionStorage.PublicUpdateInsertSessionStorageBuilder PublicUpdateInsertSessionStorageOp
        {
            get { return Operation.PublicUpdateInsertSessionStorage.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Dictionary<string, object>? AdminReadSessionStorage(AdminReadSessionStorage input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteUserSessionStorage(AdminDeleteUserSessionStorage input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? AdminReadUserSessionStorage(AdminReadUserSessionStorage input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? PublicUpdateInsertSessionStorageLeader(PublicUpdateInsertSessionStorageLeader input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Dictionary<string, object>? PublicUpdateInsertSessionStorage(PublicUpdateInsertSessionStorage input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}