// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;

namespace AccelByte.Sdk.Api.Session.Model
{
    public class ApimodelsPlayerAttributesRequestBody : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("crossplayEnabled")]
        public bool? CrossplayEnabled { get; set; }

        [JsonPropertyName("currentPlatform")]
        public string? CurrentPlatform { get; set; }

        [JsonPropertyName("data")]
        public Dictionary<string, object>? Data { get; set; }

        [JsonPropertyName("platforms")]
        public List<ModelsUserPlatformInfo>? Platforms { get; set; }

        [JsonPropertyName("roles")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<string>? Roles { get; set; }

        [JsonPropertyName("simultaneousPlatform")]
        public string? SimultaneousPlatform { get; set; }

    }

    public class ApimodelsPlayerAttributesRequestBody<T1> : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("crossplayEnabled")]
        public bool? CrossplayEnabled { get; set; }

        [JsonPropertyName("currentPlatform")]
        public string? CurrentPlatform { get; set; }

        [JsonPropertyName("data")]
        public T1? Data { get; set; }

        [JsonPropertyName("platforms")]
        public List<ModelsUserPlatformInfo>? Platforms { get; set; }

        [JsonPropertyName("roles")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<string>? Roles { get; set; }

        [JsonPropertyName("simultaneousPlatform")]
        public string? SimultaneousPlatform { get; set; }

    }

}