// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Session.Model
{
    public class ApimodelsUserResponse : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("id")]
        public string? Id { get; set; }

        [JsonPropertyName("platformID")]
        public string? PlatformID { get; set; }

        [JsonPropertyName("platformUserID")]
        public string? PlatformUserID { get; set; }

        [JsonPropertyName("previousStatus")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? PreviousStatus { get; set; }

        [JsonPropertyName("status")]
        [JsonStringEnum]
        public ApimodelsUserResponseStatus? Status { get; set; }

        [JsonPropertyName("statusV2")]
        [JsonStringEnum]
        public ApimodelsUserResponseStatusV2? StatusV2 { get; set; }

        [JsonPropertyName("updatedAt")]
        public string? UpdatedAt { get; set; }

    }



    public class ApimodelsUserResponseStatus : StringEnum<ApimodelsUserResponseStatus>
    {
        public static readonly ApimodelsUserResponseStatus CONNECTED
            = new ApimodelsUserResponseStatus("CONNECTED");

        public static readonly ApimodelsUserResponseStatus INVITED
            = new ApimodelsUserResponseStatus("INVITED");

        public static readonly ApimodelsUserResponseStatus JOINED
            = new ApimodelsUserResponseStatus("JOINED");

        public static readonly ApimodelsUserResponseStatus KICKED
            = new ApimodelsUserResponseStatus("KICKED");

        public static readonly ApimodelsUserResponseStatus LEFT
            = new ApimodelsUserResponseStatus("LEFT");

        public static readonly ApimodelsUserResponseStatus REJECTED
            = new ApimodelsUserResponseStatus("REJECTED");


        public static implicit operator ApimodelsUserResponseStatus(string value)
        {
            return NewValue(value);
        }

        public ApimodelsUserResponseStatus(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class ApimodelsUserResponseStatusV2 : StringEnum<ApimodelsUserResponseStatusV2>
    {
        public static readonly ApimodelsUserResponseStatusV2 CANCELLED
            = new ApimodelsUserResponseStatusV2("CANCELLED");

        public static readonly ApimodelsUserResponseStatusV2 CONNECTED
            = new ApimodelsUserResponseStatusV2("CONNECTED");

        public static readonly ApimodelsUserResponseStatusV2 DISCONNECTED
            = new ApimodelsUserResponseStatusV2("DISCONNECTED");

        public static readonly ApimodelsUserResponseStatusV2 DROPPED
            = new ApimodelsUserResponseStatusV2("DROPPED");

        public static readonly ApimodelsUserResponseStatusV2 INVITED
            = new ApimodelsUserResponseStatusV2("INVITED");

        public static readonly ApimodelsUserResponseStatusV2 JOINED
            = new ApimodelsUserResponseStatusV2("JOINED");

        public static readonly ApimodelsUserResponseStatusV2 KICKED
            = new ApimodelsUserResponseStatusV2("KICKED");

        public static readonly ApimodelsUserResponseStatusV2 LEFT
            = new ApimodelsUserResponseStatusV2("LEFT");

        public static readonly ApimodelsUserResponseStatusV2 REJECTED
            = new ApimodelsUserResponseStatusV2("REJECTED");

        public static readonly ApimodelsUserResponseStatusV2 TERMINATED
            = new ApimodelsUserResponseStatusV2("TERMINATED");

        public static readonly ApimodelsUserResponseStatusV2 TIMEOUT
            = new ApimodelsUserResponseStatusV2("TIMEOUT");


        public static implicit operator ApimodelsUserResponseStatusV2(string value)
        {
            return NewValue(value);
        }

        public ApimodelsUserResponseStatusV2(string enumValue)
            : base(enumValue)
        {

        }
    }
}