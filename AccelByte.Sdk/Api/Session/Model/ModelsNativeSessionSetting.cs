// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Session.Model
{
    public class ModelsNativeSessionSetting : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("PSNDisableSystemUIMenu")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public List<ModelsNativeSessionSettingPSNDisableSystemUIMenu>? PSNDisableSystemUIMenu { get; set; }

        [JsonPropertyName("PSNServiceLabel")]
        public int? PSNServiceLabel { get; set; }

        [JsonPropertyName("PSNSupportedPlatforms")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<string>? PSNSupportedPlatforms { get; set; }

        [JsonPropertyName("SessionTitle")]
        public string? SessionTitle { get; set; }

        [JsonPropertyName("ShouldSync")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public bool? ShouldSync { get; set; }

        [JsonPropertyName("XboxAllowCrossPlatform")]
        public bool? XboxAllowCrossPlatform { get; set; }

        [JsonPropertyName("XboxSandboxID")]
        public string? XboxSandboxID { get; set; }

        [JsonPropertyName("XboxServiceConfigID")]
        public string? XboxServiceConfigID { get; set; }

        [JsonPropertyName("XboxSessionTemplateName")]
        public string? XboxSessionTemplateName { get; set; }

        [JsonPropertyName("XboxTitleID")]
        public string? XboxTitleID { get; set; }

        [JsonPropertyName("localizedSessionName")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public Dictionary<string, object>? LocalizedSessionName { get; set; }

    }

    public class ModelsNativeSessionSetting<T1> : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("PSNDisableSystemUIMenu")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public List<ModelsNativeSessionSettingPSNDisableSystemUIMenu>? PSNDisableSystemUIMenu { get; set; }

        [JsonPropertyName("PSNServiceLabel")]
        public int? PSNServiceLabel { get; set; }

        [JsonPropertyName("PSNSupportedPlatforms")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<string>? PSNSupportedPlatforms { get; set; }

        [JsonPropertyName("SessionTitle")]
        public string? SessionTitle { get; set; }

        [JsonPropertyName("ShouldSync")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public bool? ShouldSync { get; set; }

        [JsonPropertyName("XboxAllowCrossPlatform")]
        public bool? XboxAllowCrossPlatform { get; set; }

        [JsonPropertyName("XboxSandboxID")]
        public string? XboxSandboxID { get; set; }

        [JsonPropertyName("XboxServiceConfigID")]
        public string? XboxServiceConfigID { get; set; }

        [JsonPropertyName("XboxSessionTemplateName")]
        public string? XboxSessionTemplateName { get; set; }

        [JsonPropertyName("XboxTitleID")]
        public string? XboxTitleID { get; set; }

        [JsonPropertyName("localizedSessionName")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public T1? LocalizedSessionName { get; set; }

    }


    public class ModelsNativeSessionSettingPSNDisableSystemUIMenu : StringEnum<ModelsNativeSessionSettingPSNDisableSystemUIMenu>
    {
        public static readonly ModelsNativeSessionSettingPSNDisableSystemUIMenu KICK
            = new ModelsNativeSessionSettingPSNDisableSystemUIMenu("KICK");

        public static readonly ModelsNativeSessionSettingPSNDisableSystemUIMenu PROMOTETOLEADER
            = new ModelsNativeSessionSettingPSNDisableSystemUIMenu("PROMOTE_TO_LEADER");

        public static readonly ModelsNativeSessionSettingPSNDisableSystemUIMenu UPDATEINVITABLEUSERTYPE
            = new ModelsNativeSessionSettingPSNDisableSystemUIMenu("UPDATE_INVITABLE_USER_TYPE");

        public static readonly ModelsNativeSessionSettingPSNDisableSystemUIMenu UPDATEJOINABLEUSERTYPE
            = new ModelsNativeSessionSettingPSNDisableSystemUIMenu("UPDATE_JOINABLE_USER_TYPE");


        public static implicit operator ModelsNativeSessionSettingPSNDisableSystemUIMenu(string value)
        {
            return NewValue(value);
        }

        public ModelsNativeSessionSettingPSNDisableSystemUIMenu(string enumValue)
            : base(enumValue)
        {

        }
    }
}