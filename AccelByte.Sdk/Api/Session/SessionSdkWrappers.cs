// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using AccelByte.Sdk.Api.Session.Wrapper;
using AccelByte.Sdk.Api.Session.Operation;

namespace AccelByte.Sdk.Core
{
    public class SessionSdkWrappers
    {
        private AccelByteSDK _SdkObject;

        public Operations Operations
        {
            get
            {
                if (_Operations == null)
                    _Operations = new Operations(_SdkObject);
                return _Operations;
            }
        }
        private Operations? _Operations = null;

        public DSMCDefaultConfiguration DSMCDefaultConfiguration
        {
            get
            {
                if (_DSMCDefaultConfiguration == null)
                    _DSMCDefaultConfiguration = new DSMCDefaultConfiguration(_SdkObject);
                return _DSMCDefaultConfiguration;
            }
        }
        private DSMCDefaultConfiguration? _DSMCDefaultConfiguration = null;

        public EnvironmentVariable EnvironmentVariable
        {
            get
            {
                if (_EnvironmentVariable == null)
                    _EnvironmentVariable = new EnvironmentVariable(_SdkObject);
                return _EnvironmentVariable;
            }
        }
        private EnvironmentVariable? _EnvironmentVariable = null;

        public GlobalConfiguration GlobalConfiguration
        {
            get
            {
                if (_GlobalConfiguration == null)
                    _GlobalConfiguration = new GlobalConfiguration(_SdkObject);
                return _GlobalConfiguration;
            }
        }
        private GlobalConfiguration? _GlobalConfiguration = null;

        public ConfigurationTemplate ConfigurationTemplate
        {
            get
            {
                if (_ConfigurationTemplate == null)
                    _ConfigurationTemplate = new ConfigurationTemplate(_SdkObject);
                return _ConfigurationTemplate;
            }
        }
        private ConfigurationTemplate? _ConfigurationTemplate = null;

        public Certificate Certificate
        {
            get
            {
                if (_Certificate == null)
                    _Certificate = new Certificate(_SdkObject);
                return _Certificate;
            }
        }
        private Certificate? _Certificate = null;

        public MaxActive MaxActive
        {
            get
            {
                if (_MaxActive == null)
                    _MaxActive = new MaxActive(_SdkObject);
                return _MaxActive;
            }
        }
        private MaxActive? _MaxActive = null;

        public GameSession GameSession
        {
            get
            {
                if (_GameSession == null)
                    _GameSession = new GameSession(_SdkObject);
                return _GameSession;
            }
        }
        private GameSession? _GameSession = null;

        public Party Party
        {
            get
            {
                if (_Party == null)
                    _Party = new Party(_SdkObject);
                return _Party;
            }
        }
        private Party? _Party = null;

        public PlatformCredential PlatformCredential
        {
            get
            {
                if (_PlatformCredential == null)
                    _PlatformCredential = new PlatformCredential(_SdkObject);
                return _PlatformCredential;
            }
        }
        private PlatformCredential? _PlatformCredential = null;

        public SessionStorage SessionStorage
        {
            get
            {
                if (_SessionStorage == null)
                    _SessionStorage = new SessionStorage(_SdkObject);
                return _SessionStorage;
            }
        }
        private SessionStorage? _SessionStorage = null;

        public Player Player
        {
            get
            {
                if (_Player == null)
                    _Player = new Player(_SdkObject);
                return _Player;
            }
        }
        private Player? _Player = null;

        internal SessionSdkWrappers(AccelByteSDK sdk)
        {
            _SdkObject = sdk;
        }
    }

    public partial class AccelByteSDK
    {
        public SessionSdkWrappers Session
        {
            get
            {
                if (_Session == null)
                    _Session = new SessionSdkWrappers(this);
                return _Session;
            }
        }
        private SessionSdkWrappers? _Session = null;
    }
}