// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Social.Model;
using AccelByte.Sdk.Api.Social.Operation;
using AccelByte.Sdk.Api.Social.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class SocialUserStatistic_OpExts
    {
        public static List<Social.Model.UserStatItemInfo>? Execute(
            this BulkFetchStatItems.BulkFetchStatItemsBuilder builder,
            string namespace_,
            string statCode,
            string userIds
        )
        {
            BulkFetchStatItems op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchStatItems(op);
        }
        public static async Task<List<Social.Model.UserStatItemInfo>?> ExecuteAsync(
            this BulkFetchStatItems.BulkFetchStatItemsBuilder builder,
            string namespace_,
            string statCode,
            string userIds
        )
        {
            BulkFetchStatItems op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchStatItemsAsync(op);
        }

        public static List<Social.Model.UserStatItemInfo<T1>>? Execute<T1>(
            this BulkFetchStatItems.BulkFetchStatItemsBuilder builder,
            string namespace_,
            string statCode,
            string userIds
        )
        {
            BulkFetchStatItems op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchStatItems<T1>(op);
        }
        public static async Task<List<Social.Model.UserStatItemInfo<T1>>?> ExecuteAsync<T1>(
            this BulkFetchStatItems.BulkFetchStatItemsBuilder builder,
            string namespace_,
            string statCode,
            string userIds
        )
        {
            BulkFetchStatItems op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchStatItemsAsync<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkIncUserStatItem.BulkIncUserStatItemBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            BulkIncUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItem(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkIncUserStatItem.BulkIncUserStatItemBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            BulkIncUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemAsync(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkIncUserStatItem.BulkIncUserStatItemBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            BulkIncUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItem<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkIncUserStatItem.BulkIncUserStatItemBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            BulkIncUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemAsync<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkIncUserStatItemValue.BulkIncUserStatItemValueBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            BulkIncUserStatItemValue op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkIncUserStatItemValue.BulkIncUserStatItemValueBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            BulkIncUserStatItemValue op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValueAsync(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkIncUserStatItemValue.BulkIncUserStatItemValueBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            BulkIncUserStatItemValue op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkIncUserStatItemValue.BulkIncUserStatItemValueBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            BulkIncUserStatItemValue op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValueAsync<T1>(op);
        }
        public static List<Social.Model.ADTOObjectForUserStatItemValue>? Execute(
            this BulkFetchOrDefaultStatItems.BulkFetchOrDefaultStatItemsBuilder builder,
            string namespace_,
            string statCode,
            List<string> userIds
        )
        {
            BulkFetchOrDefaultStatItems op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchOrDefaultStatItems(op);
        }
        public static async Task<List<Social.Model.ADTOObjectForUserStatItemValue>?> ExecuteAsync(
            this BulkFetchOrDefaultStatItems.BulkFetchOrDefaultStatItemsBuilder builder,
            string namespace_,
            string statCode,
            List<string> userIds
        )
        {
            BulkFetchOrDefaultStatItems op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchOrDefaultStatItemsAsync(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkResetUserStatItem.BulkResetUserStatItemBuilder builder,
            List<BulkUserStatItemReset> body,
            string namespace_
        )
        {
            BulkResetUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkResetUserStatItem.BulkResetUserStatItemBuilder builder,
            List<BulkUserStatItemReset> body,
            string namespace_
        )
        {
            BulkResetUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItemAsync(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkResetUserStatItem.BulkResetUserStatItemBuilder builder,
            List<BulkUserStatItemReset> body,
            string namespace_
        )
        {
            BulkResetUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkResetUserStatItem.BulkResetUserStatItemBuilder builder,
            List<BulkUserStatItemReset> body,
            string namespace_
        )
        {
            BulkResetUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItemAsync<T1>(op);
        }
        public static Social.Model.StatItemValuePagingSlicedResult? Execute(
            this GetStatItems.GetStatItemsBuilder builder,
            string namespace_,
            string statCode
        )
        {
            GetStatItems op = builder.Build(
                namespace_,
                statCode
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).GetStatItems(op);
        }
        public static async Task<Social.Model.StatItemValuePagingSlicedResult?> ExecuteAsync(
            this GetStatItems.GetStatItemsBuilder builder,
            string namespace_,
            string statCode
        )
        {
            GetStatItems op = builder.Build(
                namespace_,
                statCode
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).GetStatItemsAsync(op);
        }
        public static Social.Model.UserStatItemPagingSlicedResult? Execute(
            this GetUserStatItems.GetUserStatItemsBuilder builder,
            string namespace_,
            string userId
        )
        {
            GetUserStatItems op = builder.Build(
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).GetUserStatItems(op);
        }
        public static async Task<Social.Model.UserStatItemPagingSlicedResult?> ExecuteAsync(
            this GetUserStatItems.GetUserStatItemsBuilder builder,
            string namespace_,
            string userId
        )
        {
            GetUserStatItems op = builder.Build(
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).GetUserStatItemsAsync(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkCreateUserStatItems.BulkCreateUserStatItemsBuilder builder,
            List<BulkStatItemCreate> body,
            string namespace_,
            string userId
        )
        {
            BulkCreateUserStatItems op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkCreateUserStatItems(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkCreateUserStatItems.BulkCreateUserStatItemsBuilder builder,
            List<BulkStatItemCreate> body,
            string namespace_,
            string userId
        )
        {
            BulkCreateUserStatItems op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkCreateUserStatItemsAsync(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkCreateUserStatItems.BulkCreateUserStatItemsBuilder builder,
            List<BulkStatItemCreate> body,
            string namespace_,
            string userId
        )
        {
            BulkCreateUserStatItems op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkCreateUserStatItems<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkCreateUserStatItems.BulkCreateUserStatItemsBuilder builder,
            List<BulkStatItemCreate> body,
            string namespace_,
            string userId
        )
        {
            BulkCreateUserStatItems op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkCreateUserStatItemsAsync<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkIncUserStatItem1.BulkIncUserStatItem1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItem1(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkIncUserStatItem1.BulkIncUserStatItem1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItem1Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkIncUserStatItem1.BulkIncUserStatItem1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItem1<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkIncUserStatItem1.BulkIncUserStatItem1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItem1Async<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkIncUserStatItemValue1.BulkIncUserStatItemValue1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItemValue1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue1(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkIncUserStatItemValue1.BulkIncUserStatItemValue1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItemValue1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue1Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkIncUserStatItemValue1.BulkIncUserStatItemValue1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItemValue1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue1<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkIncUserStatItemValue1.BulkIncUserStatItemValue1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItemValue1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue1Async<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkResetUserStatItem1.BulkResetUserStatItem1Builder builder,
            List<BulkStatItemReset> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem1(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkResetUserStatItem1.BulkResetUserStatItem1Builder builder,
            List<BulkStatItemReset> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem1Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkResetUserStatItem1.BulkResetUserStatItem1Builder builder,
            List<BulkStatItemReset> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem1<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkResetUserStatItem1.BulkResetUserStatItem1Builder builder,
            List<BulkStatItemReset> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem1Async<T1>(op);
        }
        public static void Execute(
            this CreateUserStatItem.CreateUserStatItemBuilder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            CreateUserStatItem op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            ((Social.Wrapper.UserStatistic)builder.WrapperObject!).CreateUserStatItem(op);
        }
        public static async Task ExecuteAsync(
            this CreateUserStatItem.CreateUserStatItemBuilder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            CreateUserStatItem op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).CreateUserStatItemAsync(op);
        }
        public static void Execute(
            this DeleteUserStatItems.DeleteUserStatItemsBuilder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            DeleteUserStatItems op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            ((Social.Wrapper.UserStatistic)builder.WrapperObject!).DeleteUserStatItems(op);
        }
        public static async Task ExecuteAsync(
            this DeleteUserStatItems.DeleteUserStatItemsBuilder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            DeleteUserStatItems op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).DeleteUserStatItemsAsync(op);
        }
        public static Social.Model.StatItemIncResult? Execute(
            this IncUserStatItemValue.IncUserStatItemValueBuilder builder,
            StatItemInc body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            IncUserStatItemValue op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).IncUserStatItemValue(op);
        }
        public static async Task<Social.Model.StatItemIncResult?> ExecuteAsync(
            this IncUserStatItemValue.IncUserStatItemValueBuilder builder,
            StatItemInc body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            IncUserStatItemValue op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).IncUserStatItemValueAsync(op);
        }
        public static Social.Model.StatItemIncResult? Execute(
            this ResetUserStatItemValue.ResetUserStatItemValueBuilder builder,
            StatResetInfo body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            ResetUserStatItemValue op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).ResetUserStatItemValue(op);
        }
        public static async Task<Social.Model.StatItemIncResult?> ExecuteAsync(
            this ResetUserStatItemValue.ResetUserStatItemValueBuilder builder,
            StatResetInfo body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            ResetUserStatItemValue op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).ResetUserStatItemValueAsync(op);
        }
        public static List<Social.Model.UserStatItemInfo>? Execute(
            this BulkFetchStatItems1.BulkFetchStatItems1Builder builder,
            string namespace_,
            string statCode,
            string userIds
        )
        {
            BulkFetchStatItems1 op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchStatItems1(op);
        }
        public static async Task<List<Social.Model.UserStatItemInfo>?> ExecuteAsync(
            this BulkFetchStatItems1.BulkFetchStatItems1Builder builder,
            string namespace_,
            string statCode,
            string userIds
        )
        {
            BulkFetchStatItems1 op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchStatItems1Async(op);
        }

        public static List<Social.Model.UserStatItemInfo<T1>>? Execute<T1>(
            this BulkFetchStatItems1.BulkFetchStatItems1Builder builder,
            string namespace_,
            string statCode,
            string userIds
        )
        {
            BulkFetchStatItems1 op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchStatItems1<T1>(op);
        }
        public static async Task<List<Social.Model.UserStatItemInfo<T1>>?> ExecuteAsync<T1>(
            this BulkFetchStatItems1.BulkFetchStatItems1Builder builder,
            string namespace_,
            string statCode,
            string userIds
        )
        {
            BulkFetchStatItems1 op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchStatItems1Async<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this PublicBulkIncUserStatItem.PublicBulkIncUserStatItemBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            PublicBulkIncUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItem(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this PublicBulkIncUserStatItem.PublicBulkIncUserStatItemBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            PublicBulkIncUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItemAsync(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this PublicBulkIncUserStatItem.PublicBulkIncUserStatItemBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            PublicBulkIncUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItem<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this PublicBulkIncUserStatItem.PublicBulkIncUserStatItemBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            PublicBulkIncUserStatItem op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItemAsync<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this PublicBulkIncUserStatItemValue.PublicBulkIncUserStatItemValueBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            PublicBulkIncUserStatItemValue op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItemValue(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this PublicBulkIncUserStatItemValue.PublicBulkIncUserStatItemValueBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            PublicBulkIncUserStatItemValue op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItemValueAsync(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this PublicBulkIncUserStatItemValue.PublicBulkIncUserStatItemValueBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            PublicBulkIncUserStatItemValue op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItemValue<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this PublicBulkIncUserStatItemValue.PublicBulkIncUserStatItemValueBuilder builder,
            List<BulkUserStatItemInc> body,
            string namespace_
        )
        {
            PublicBulkIncUserStatItemValue op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItemValueAsync<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkResetUserStatItem2.BulkResetUserStatItem2Builder builder,
            List<BulkUserStatItemReset> body,
            string namespace_
        )
        {
            BulkResetUserStatItem2 op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem2(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkResetUserStatItem2.BulkResetUserStatItem2Builder builder,
            List<BulkUserStatItemReset> body,
            string namespace_
        )
        {
            BulkResetUserStatItem2 op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem2Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkResetUserStatItem2.BulkResetUserStatItem2Builder builder,
            List<BulkUserStatItemReset> body,
            string namespace_
        )
        {
            BulkResetUserStatItem2 op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem2<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkResetUserStatItem2.BulkResetUserStatItem2Builder builder,
            List<BulkUserStatItemReset> body,
            string namespace_
        )
        {
            BulkResetUserStatItem2 op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem2Async<T1>(op);
        }
        public static Social.Model.UserStatItemPagingSlicedResult? Execute(
            this PublicListMyStatItems.PublicListMyStatItemsBuilder builder,
            string namespace_
        )
        {
            PublicListMyStatItems op = builder.Build(
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicListMyStatItems(op);
        }
        public static async Task<Social.Model.UserStatItemPagingSlicedResult?> ExecuteAsync(
            this PublicListMyStatItems.PublicListMyStatItemsBuilder builder,
            string namespace_
        )
        {
            PublicListMyStatItems op = builder.Build(
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicListMyStatItemsAsync(op);
        }
        public static List<Social.Model.ADTOObjectForUserStatItemValue>? Execute(
            this PublicListAllMyStatItems.PublicListAllMyStatItemsBuilder builder,
            string namespace_
        )
        {
            PublicListAllMyStatItems op = builder.Build(
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicListAllMyStatItems(op);
        }
        public static async Task<List<Social.Model.ADTOObjectForUserStatItemValue>?> ExecuteAsync(
            this PublicListAllMyStatItems.PublicListAllMyStatItemsBuilder builder,
            string namespace_
        )
        {
            PublicListAllMyStatItems op = builder.Build(
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicListAllMyStatItemsAsync(op);
        }
        public static Social.Model.UserStatItemPagingSlicedResult? Execute(
            this PublicQueryUserStatItems.PublicQueryUserStatItemsBuilder builder,
            string namespace_,
            string userId
        )
        {
            PublicQueryUserStatItems op = builder.Build(
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicQueryUserStatItems(op);
        }
        public static async Task<Social.Model.UserStatItemPagingSlicedResult?> ExecuteAsync(
            this PublicQueryUserStatItems.PublicQueryUserStatItemsBuilder builder,
            string namespace_,
            string userId
        )
        {
            PublicQueryUserStatItems op = builder.Build(
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicQueryUserStatItemsAsync(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this PublicBulkCreateUserStatItems.PublicBulkCreateUserStatItemsBuilder builder,
            List<BulkStatItemCreate> body,
            string namespace_,
            string userId
        )
        {
            PublicBulkCreateUserStatItems op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkCreateUserStatItems(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this PublicBulkCreateUserStatItems.PublicBulkCreateUserStatItemsBuilder builder,
            List<BulkStatItemCreate> body,
            string namespace_,
            string userId
        )
        {
            PublicBulkCreateUserStatItems op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkCreateUserStatItemsAsync(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this PublicBulkCreateUserStatItems.PublicBulkCreateUserStatItemsBuilder builder,
            List<BulkStatItemCreate> body,
            string namespace_,
            string userId
        )
        {
            PublicBulkCreateUserStatItems op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkCreateUserStatItems<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this PublicBulkCreateUserStatItems.PublicBulkCreateUserStatItemsBuilder builder,
            List<BulkStatItemCreate> body,
            string namespace_,
            string userId
        )
        {
            PublicBulkCreateUserStatItems op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkCreateUserStatItemsAsync<T1>(op);
        }
        public static List<Social.Model.ADTOObjectForUserStatItemValue>? Execute(
            this PublicQueryUserStatItems1.PublicQueryUserStatItems1Builder builder,
            string namespace_,
            string userId
        )
        {
            PublicQueryUserStatItems1 op = builder.Build(
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicQueryUserStatItems1(op);
        }
        public static async Task<List<Social.Model.ADTOObjectForUserStatItemValue>?> ExecuteAsync(
            this PublicQueryUserStatItems1.PublicQueryUserStatItems1Builder builder,
            string namespace_,
            string userId
        )
        {
            PublicQueryUserStatItems1 op = builder.Build(
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicQueryUserStatItems1Async(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this PublicBulkIncUserStatItem1.PublicBulkIncUserStatItem1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            PublicBulkIncUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItem1(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this PublicBulkIncUserStatItem1.PublicBulkIncUserStatItem1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            PublicBulkIncUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItem1Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this PublicBulkIncUserStatItem1.PublicBulkIncUserStatItem1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            PublicBulkIncUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItem1<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this PublicBulkIncUserStatItem1.PublicBulkIncUserStatItem1Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            PublicBulkIncUserStatItem1 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicBulkIncUserStatItem1Async<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkIncUserStatItemValue2.BulkIncUserStatItemValue2Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItemValue2 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue2(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkIncUserStatItemValue2.BulkIncUserStatItemValue2Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItemValue2 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue2Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkIncUserStatItemValue2.BulkIncUserStatItemValue2Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItemValue2 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue2<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkIncUserStatItemValue2.BulkIncUserStatItemValue2Builder builder,
            List<BulkStatItemInc> body,
            string namespace_,
            string userId
        )
        {
            BulkIncUserStatItemValue2 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkIncUserStatItemValue2Async<T1>(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkResetUserStatItem3.BulkResetUserStatItem3Builder builder,
            List<BulkStatItemReset> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItem3 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem3(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkResetUserStatItem3.BulkResetUserStatItem3Builder builder,
            List<BulkStatItemReset> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItem3 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem3Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkResetUserStatItem3.BulkResetUserStatItem3Builder builder,
            List<BulkStatItemReset> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItem3 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem3<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkResetUserStatItem3.BulkResetUserStatItem3Builder builder,
            List<BulkStatItemReset> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItem3 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItem3Async<T1>(op);
        }
        public static void Execute(
            this PublicCreateUserStatItem.PublicCreateUserStatItemBuilder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            PublicCreateUserStatItem op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicCreateUserStatItem(op);
        }
        public static async Task ExecuteAsync(
            this PublicCreateUserStatItem.PublicCreateUserStatItemBuilder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            PublicCreateUserStatItem op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicCreateUserStatItemAsync(op);
        }
        public static void Execute(
            this DeleteUserStatItems1.DeleteUserStatItems1Builder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            DeleteUserStatItems1 op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            ((Social.Wrapper.UserStatistic)builder.WrapperObject!).DeleteUserStatItems1(op);
        }
        public static async Task ExecuteAsync(
            this DeleteUserStatItems1.DeleteUserStatItems1Builder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            DeleteUserStatItems1 op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).DeleteUserStatItems1Async(op);
        }
        public static Social.Model.StatItemIncResult? Execute(
            this PublicIncUserStatItem.PublicIncUserStatItemBuilder builder,
            StatItemInc body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            PublicIncUserStatItem op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicIncUserStatItem(op);
        }
        public static async Task<Social.Model.StatItemIncResult?> ExecuteAsync(
            this PublicIncUserStatItem.PublicIncUserStatItemBuilder builder,
            StatItemInc body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            PublicIncUserStatItem op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicIncUserStatItemAsync(op);
        }
        public static Social.Model.StatItemIncResult? Execute(
            this PublicIncUserStatItemValue.PublicIncUserStatItemValueBuilder builder,
            StatItemInc body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            PublicIncUserStatItemValue op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicIncUserStatItemValue(op);
        }
        public static async Task<Social.Model.StatItemIncResult?> ExecuteAsync(
            this PublicIncUserStatItemValue.PublicIncUserStatItemValueBuilder builder,
            StatItemInc body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            PublicIncUserStatItemValue op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicIncUserStatItemValueAsync(op);
        }
        public static Social.Model.StatItemIncResult? Execute(
            this ResetUserStatItemValue1.ResetUserStatItemValue1Builder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            ResetUserStatItemValue1 op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).ResetUserStatItemValue1(op);
        }
        public static async Task<Social.Model.StatItemIncResult?> ExecuteAsync(
            this ResetUserStatItemValue1.ResetUserStatItemValue1Builder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            ResetUserStatItemValue1 op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).ResetUserStatItemValue1Async(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkUpdateUserStatItemV2.BulkUpdateUserStatItemV2Builder builder,
            List<BulkUserStatItemUpdate> body,
            string namespace_
        )
        {
            BulkUpdateUserStatItemV2 op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItemV2(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkUpdateUserStatItemV2.BulkUpdateUserStatItemV2Builder builder,
            List<BulkUserStatItemUpdate> body,
            string namespace_
        )
        {
            BulkUpdateUserStatItemV2 op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItemV2Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkUpdateUserStatItemV2.BulkUpdateUserStatItemV2Builder builder,
            List<BulkUserStatItemUpdate> body,
            string namespace_
        )
        {
            BulkUpdateUserStatItemV2 op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItemV2<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkUpdateUserStatItemV2.BulkUpdateUserStatItemV2Builder builder,
            List<BulkUserStatItemUpdate> body,
            string namespace_
        )
        {
            BulkUpdateUserStatItemV2 op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItemV2Async<T1>(op);
        }
        public static List<Social.Model.ADTOObjectForUserStatItemValue>? Execute(
            this BulkFetchOrDefaultStatItems1.BulkFetchOrDefaultStatItems1Builder builder,
            string namespace_,
            string statCode,
            List<string> userIds
        )
        {
            BulkFetchOrDefaultStatItems1 op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchOrDefaultStatItems1(op);
        }
        public static async Task<List<Social.Model.ADTOObjectForUserStatItemValue>?> ExecuteAsync(
            this BulkFetchOrDefaultStatItems1.BulkFetchOrDefaultStatItems1Builder builder,
            string namespace_,
            string statCode,
            List<string> userIds
        )
        {
            BulkFetchOrDefaultStatItems1 op = builder.Build(
                namespace_,
                statCode,
                userIds
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkFetchOrDefaultStatItems1Async(op);
        }
        public static List<Social.Model.ADTOObjectForUserStatItemValue>? Execute(
            this AdminListUsersStatItems.AdminListUsersStatItemsBuilder builder,
            string namespace_,
            string userId
        )
        {
            AdminListUsersStatItems op = builder.Build(
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).AdminListUsersStatItems(op);
        }
        public static async Task<List<Social.Model.ADTOObjectForUserStatItemValue>?> ExecuteAsync(
            this AdminListUsersStatItems.AdminListUsersStatItemsBuilder builder,
            string namespace_,
            string userId
        )
        {
            AdminListUsersStatItems op = builder.Build(
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).AdminListUsersStatItemsAsync(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkUpdateUserStatItem.BulkUpdateUserStatItemBuilder builder,
            List<BulkStatItemUpdate> body,
            string namespace_,
            string userId
        )
        {
            BulkUpdateUserStatItem op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkUpdateUserStatItem.BulkUpdateUserStatItemBuilder builder,
            List<BulkStatItemUpdate> body,
            string namespace_,
            string userId
        )
        {
            BulkUpdateUserStatItem op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItemAsync(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkUpdateUserStatItem.BulkUpdateUserStatItemBuilder builder,
            List<BulkStatItemUpdate> body,
            string namespace_,
            string userId
        )
        {
            BulkUpdateUserStatItem op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkUpdateUserStatItem.BulkUpdateUserStatItemBuilder builder,
            List<BulkStatItemUpdate> body,
            string namespace_,
            string userId
        )
        {
            BulkUpdateUserStatItem op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItemAsync<T1>(op);
        }
        public static List<Social.Model.ADTOObjectForUserStatItemValue>? Execute(
            this BulkGetOrDefaultByUserId.BulkGetOrDefaultByUserIdBuilder builder,
            BulkUserStatItemByStatCodes body,
            string namespace_,
            string userId
        )
        {
            BulkGetOrDefaultByUserId op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkGetOrDefaultByUserId(op);
        }
        public static async Task<List<Social.Model.ADTOObjectForUserStatItemValue>?> ExecuteAsync(
            this BulkGetOrDefaultByUserId.BulkGetOrDefaultByUserIdBuilder builder,
            BulkUserStatItemByStatCodes body,
            string namespace_,
            string userId
        )
        {
            BulkGetOrDefaultByUserId op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkGetOrDefaultByUserIdAsync(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkResetUserStatItemValues.BulkResetUserStatItemValuesBuilder builder,
            List<ADTOObjectForResettingUserStatItems> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItemValues op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItemValues(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkResetUserStatItemValues.BulkResetUserStatItemValuesBuilder builder,
            List<ADTOObjectForResettingUserStatItems> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItemValues op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItemValuesAsync(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkResetUserStatItemValues.BulkResetUserStatItemValuesBuilder builder,
            List<ADTOObjectForResettingUserStatItems> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItemValues op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItemValues<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkResetUserStatItemValues.BulkResetUserStatItemValuesBuilder builder,
            List<ADTOObjectForResettingUserStatItems> body,
            string namespace_,
            string userId
        )
        {
            BulkResetUserStatItemValues op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkResetUserStatItemValuesAsync<T1>(op);
        }
        public static void Execute(
            this DeleteUserStatItems2.DeleteUserStatItems2Builder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            DeleteUserStatItems2 op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            ((Social.Wrapper.UserStatistic)builder.WrapperObject!).DeleteUserStatItems2(op);
        }
        public static async Task ExecuteAsync(
            this DeleteUserStatItems2.DeleteUserStatItems2Builder builder,
            string namespace_,
            string statCode,
            string userId
        )
        {
            DeleteUserStatItems2 op = builder.Build(
                namespace_,
                statCode,
                userId
            );

            await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).DeleteUserStatItems2Async(op);
        }
        public static Social.Model.StatItemIncResult? Execute(
            this UpdateUserStatItemValue.UpdateUserStatItemValueBuilder builder,
            StatItemUpdate body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            UpdateUserStatItemValue op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).UpdateUserStatItemValue(op);
        }
        public static async Task<Social.Model.StatItemIncResult?> ExecuteAsync(
            this UpdateUserStatItemValue.UpdateUserStatItemValueBuilder builder,
            StatItemUpdate body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            UpdateUserStatItemValue op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).UpdateUserStatItemValueAsync(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkUpdateUserStatItem1.BulkUpdateUserStatItem1Builder builder,
            List<BulkUserStatItemUpdate> body,
            string namespace_
        )
        {
            BulkUpdateUserStatItem1 op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem1(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkUpdateUserStatItem1.BulkUpdateUserStatItem1Builder builder,
            List<BulkUserStatItemUpdate> body,
            string namespace_
        )
        {
            BulkUpdateUserStatItem1 op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem1Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkUpdateUserStatItem1.BulkUpdateUserStatItem1Builder builder,
            List<BulkUserStatItemUpdate> body,
            string namespace_
        )
        {
            BulkUpdateUserStatItem1 op = builder.Build(
                body,
                namespace_
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem1<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkUpdateUserStatItem1.BulkUpdateUserStatItem1Builder builder,
            List<BulkUserStatItemUpdate> body,
            string namespace_
        )
        {
            BulkUpdateUserStatItem1 op = builder.Build(
                body,
                namespace_
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem1Async<T1>(op);
        }
        public static List<Social.Model.ADTOObjectForUserStatItemValue>? Execute(
            this PublicQueryUserStatItems2.PublicQueryUserStatItems2Builder builder,
            string namespace_,
            string userId
        )
        {
            PublicQueryUserStatItems2 op = builder.Build(
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicQueryUserStatItems2(op);
        }
        public static async Task<List<Social.Model.ADTOObjectForUserStatItemValue>?> ExecuteAsync(
            this PublicQueryUserStatItems2.PublicQueryUserStatItems2Builder builder,
            string namespace_,
            string userId
        )
        {
            PublicQueryUserStatItems2 op = builder.Build(
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).PublicQueryUserStatItems2Async(op);
        }
        public static List<Social.Model.BulkStatOperationResult>? Execute(
            this BulkUpdateUserStatItem2.BulkUpdateUserStatItem2Builder builder,
            List<BulkStatItemUpdate> body,
            string namespace_,
            string userId
        )
        {
            BulkUpdateUserStatItem2 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem2(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult>?> ExecuteAsync(
            this BulkUpdateUserStatItem2.BulkUpdateUserStatItem2Builder builder,
            List<BulkStatItemUpdate> body,
            string namespace_,
            string userId
        )
        {
            BulkUpdateUserStatItem2 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem2Async(op);
        }

        public static List<Social.Model.BulkStatOperationResult<T1>>? Execute<T1>(
            this BulkUpdateUserStatItem2.BulkUpdateUserStatItem2Builder builder,
            List<BulkStatItemUpdate> body,
            string namespace_,
            string userId
        )
        {
            BulkUpdateUserStatItem2 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem2<T1>(op);
        }
        public static async Task<List<Social.Model.BulkStatOperationResult<T1>>?> ExecuteAsync<T1>(
            this BulkUpdateUserStatItem2.BulkUpdateUserStatItem2Builder builder,
            List<BulkStatItemUpdate> body,
            string namespace_,
            string userId
        )
        {
            BulkUpdateUserStatItem2 op = builder.Build(
                body,
                namespace_,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).BulkUpdateUserStatItem2Async<T1>(op);
        }
        public static Social.Model.StatItemIncResult? Execute(
            this UpdateUserStatItemValue1.UpdateUserStatItemValue1Builder builder,
            StatItemUpdate body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            UpdateUserStatItemValue1 op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return ((Social.Wrapper.UserStatistic)builder.WrapperObject!).UpdateUserStatItemValue1(op);
        }
        public static async Task<Social.Model.StatItemIncResult?> ExecuteAsync(
            this UpdateUserStatItemValue1.UpdateUserStatItemValue1Builder builder,
            StatItemUpdate body,
            string namespace_,
            string statCode,
            string userId
        )
        {
            UpdateUserStatItemValue1 op = builder.Build(
                body,
                namespace_,
                statCode,
                userId
            );

            return await ((Social.Wrapper.UserStatistic)builder.WrapperObject!).UpdateUserStatItemValue1Async(op);
        }
    }
}