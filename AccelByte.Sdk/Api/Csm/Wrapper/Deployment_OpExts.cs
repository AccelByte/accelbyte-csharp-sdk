// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Csm.Model;
using AccelByte.Sdk.Api.Csm.Operation;
using AccelByte.Sdk.Api.Csm.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class CsmDeployment_OpExts
    {
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public static Csm.Model.GeneratedCreateDeploymentV1Response? Execute(
            this CreateDeploymentV1.CreateDeploymentV1Builder builder,
            GeneratedCreateDeploymentV1Request body,
            string app,
            string namespace_
        )
        {
            CreateDeploymentV1 op = builder.Build(
                body,
                app,
                namespace_
            );

            return ((Csm.Wrapper.Deployment)builder.WrapperObject!).CreateDeploymentV1(op);
        }
        public static async Task<Csm.Model.GeneratedCreateDeploymentV1Response?> ExecuteAsync(
            this CreateDeploymentV1.CreateDeploymentV1Builder builder,
            GeneratedCreateDeploymentV1Request body,
            string app,
            string namespace_
        )
        {
            CreateDeploymentV1 op = builder.Build(
                body,
                app,
                namespace_
            );

            return await ((Csm.Wrapper.Deployment)builder.WrapperObject!).CreateDeploymentV1Async(op);
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public static Csm.Model.GeneratedGetDeploymentListV1Response? Execute(
            this GetListOfDeploymentV1.GetListOfDeploymentV1Builder builder,
            GeneratedGetDeploymentListV1Request body,
            string namespace_
        )
        {
            GetListOfDeploymentV1 op = builder.Build(
                body,
                namespace_
            );

            return ((Csm.Wrapper.Deployment)builder.WrapperObject!).GetListOfDeploymentV1(op);
        }
        public static async Task<Csm.Model.GeneratedGetDeploymentListV1Response?> ExecuteAsync(
            this GetListOfDeploymentV1.GetListOfDeploymentV1Builder builder,
            GeneratedGetDeploymentListV1Request body,
            string namespace_
        )
        {
            GetListOfDeploymentV1 op = builder.Build(
                body,
                namespace_
            );

            return await ((Csm.Wrapper.Deployment)builder.WrapperObject!).GetListOfDeploymentV1Async(op);
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public static Csm.Model.GeneratedGetDeploymentV1Response? Execute(
            this GetDeploymentV1.GetDeploymentV1Builder builder,
            string deploymentId,
            string namespace_
        )
        {
            GetDeploymentV1 op = builder.Build(
                deploymentId,
                namespace_
            );

            return ((Csm.Wrapper.Deployment)builder.WrapperObject!).GetDeploymentV1(op);
        }
        public static async Task<Csm.Model.GeneratedGetDeploymentV1Response?> ExecuteAsync(
            this GetDeploymentV1.GetDeploymentV1Builder builder,
            string deploymentId,
            string namespace_
        )
        {
            GetDeploymentV1 op = builder.Build(
                deploymentId,
                namespace_
            );

            return await ((Csm.Wrapper.Deployment)builder.WrapperObject!).GetDeploymentV1Async(op);
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public static void Execute(
            this DeleteDeploymentV1.DeleteDeploymentV1Builder builder,
            string deploymentId,
            string namespace_
        )
        {
            DeleteDeploymentV1 op = builder.Build(
                deploymentId,
                namespace_
            );

            ((Csm.Wrapper.Deployment)builder.WrapperObject!).DeleteDeploymentV1(op);
        }
        public static async Task ExecuteAsync(
            this DeleteDeploymentV1.DeleteDeploymentV1Builder builder,
            string deploymentId,
            string namespace_
        )
        {
            DeleteDeploymentV1 op = builder.Build(
                deploymentId,
                namespace_
            );

            await ((Csm.Wrapper.Deployment)builder.WrapperObject!).DeleteDeploymentV1Async(op);
        }
    }
}