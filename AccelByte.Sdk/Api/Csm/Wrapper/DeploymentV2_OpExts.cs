// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Csm.Model;
using AccelByte.Sdk.Api.Csm.Operation;
using AccelByte.Sdk.Api.Csm.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class CsmDeploymentV2_OpExts
    {
        public static Csm.Model.ApimodelCreateDeploymentV2Response? Execute(
            this CreateDeploymentV2.CreateDeploymentV2Builder builder,
            ApimodelCreateDeploymentV2Request body,
            string app,
            string namespace_
        )
        {
            CreateDeploymentV2 op = builder.Build(
                body,
                app,
                namespace_
            );

            return ((Csm.Wrapper.DeploymentV2)builder.WrapperObject!).CreateDeploymentV2(op);
        }
        public static async Task<Csm.Model.ApimodelCreateDeploymentV2Response?> ExecuteAsync(
            this CreateDeploymentV2.CreateDeploymentV2Builder builder,
            ApimodelCreateDeploymentV2Request body,
            string app,
            string namespace_
        )
        {
            CreateDeploymentV2 op = builder.Build(
                body,
                app,
                namespace_
            );

            return await ((Csm.Wrapper.DeploymentV2)builder.WrapperObject!).CreateDeploymentV2Async(op);
        }
        public static Csm.Model.ApimodelGetDeploymentListV2Response? Execute(
            this GetListOfDeploymentV2.GetListOfDeploymentV2Builder builder,
            ApimodelGetDeploymentListV2Request body,
            string namespace_
        )
        {
            GetListOfDeploymentV2 op = builder.Build(
                body,
                namespace_
            );

            return ((Csm.Wrapper.DeploymentV2)builder.WrapperObject!).GetListOfDeploymentV2(op);
        }
        public static async Task<Csm.Model.ApimodelGetDeploymentListV2Response?> ExecuteAsync(
            this GetListOfDeploymentV2.GetListOfDeploymentV2Builder builder,
            ApimodelGetDeploymentListV2Request body,
            string namespace_
        )
        {
            GetListOfDeploymentV2 op = builder.Build(
                body,
                namespace_
            );

            return await ((Csm.Wrapper.DeploymentV2)builder.WrapperObject!).GetListOfDeploymentV2Async(op);
        }
        public static Csm.Model.ApimodelGetDeploymentListV2DataItem? Execute(
            this GetDeploymentV2.GetDeploymentV2Builder builder,
            string deploymentId,
            string namespace_
        )
        {
            GetDeploymentV2 op = builder.Build(
                deploymentId,
                namespace_
            );

            return ((Csm.Wrapper.DeploymentV2)builder.WrapperObject!).GetDeploymentV2(op);
        }
        public static async Task<Csm.Model.ApimodelGetDeploymentListV2DataItem?> ExecuteAsync(
            this GetDeploymentV2.GetDeploymentV2Builder builder,
            string deploymentId,
            string namespace_
        )
        {
            GetDeploymentV2 op = builder.Build(
                deploymentId,
                namespace_
            );

            return await ((Csm.Wrapper.DeploymentV2)builder.WrapperObject!).GetDeploymentV2Async(op);
        }
        public static void Execute(
            this DeleteDeploymentV2.DeleteDeploymentV2Builder builder,
            string deploymentId,
            string namespace_
        )
        {
            DeleteDeploymentV2 op = builder.Build(
                deploymentId,
                namespace_
            );

            ((Csm.Wrapper.DeploymentV2)builder.WrapperObject!).DeleteDeploymentV2(op);
        }
        public static async Task ExecuteAsync(
            this DeleteDeploymentV2.DeleteDeploymentV2Builder builder,
            string deploymentId,
            string namespace_
        )
        {
            DeleteDeploymentV2 op = builder.Build(
                deploymentId,
                namespace_
            );

            await ((Csm.Wrapper.DeploymentV2)builder.WrapperObject!).DeleteDeploymentV2Async(op);
        }
    }
}