// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Csm.Model;
using AccelByte.Sdk.Api.Csm.Operation;
using AccelByte.Sdk.Api.Csm.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class CsmNotificationSubscriptionV3_OpExts
    {
        public static Csm.Model.ApimodelGetNotificationSubscriberListResponseV2? Execute(
            this GetNotificationSubscriberListV3.GetNotificationSubscriberListV3Builder builder,
            string app,
            string namespace_,
            string notificationType
        )
        {
            GetNotificationSubscriberListV3 op = builder.Build(
                app,
                namespace_,
                notificationType
            );

            return ((Csm.Wrapper.NotificationSubscriptionV3)builder.WrapperObject!).GetNotificationSubscriberListV3(op);
        }
        public static async Task<Csm.Model.ApimodelGetNotificationSubscriberListResponseV2?> ExecuteAsync(
            this GetNotificationSubscriberListV3.GetNotificationSubscriberListV3Builder builder,
            string app,
            string namespace_,
            string notificationType
        )
        {
            GetNotificationSubscriberListV3 op = builder.Build(
                app,
                namespace_,
                notificationType
            );

            return await ((Csm.Wrapper.NotificationSubscriptionV3)builder.WrapperObject!).GetNotificationSubscriberListV3Async(op);
        }
        public static void Execute(
            this DeleteSubscriptionAppNotificationV3.DeleteSubscriptionAppNotificationV3Builder builder,
            string app,
            string namespace_
        )
        {
            DeleteSubscriptionAppNotificationV3 op = builder.Build(
                app,
                namespace_
            );

            ((Csm.Wrapper.NotificationSubscriptionV3)builder.WrapperObject!).DeleteSubscriptionAppNotificationV3(op);
        }
        public static async Task ExecuteAsync(
            this DeleteSubscriptionAppNotificationV3.DeleteSubscriptionAppNotificationV3Builder builder,
            string app,
            string namespace_
        )
        {
            DeleteSubscriptionAppNotificationV3 op = builder.Build(
                app,
                namespace_
            );

            await ((Csm.Wrapper.NotificationSubscriptionV3)builder.WrapperObject!).DeleteSubscriptionAppNotificationV3Async(op);
        }
    }
}