// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Csm.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Csm.Operation
{
    /// <summary>
    /// SubscribeV2Handler
    ///
    /// Required permission : `ADMIN:NAMESPACE:{namespace}:EXTEND:APP:ALERT:SELF:SUBSCRIPTION [CREATE]`
    /// 
    /// Subscribe to app down notification
    /// Request body:
    /// - notificationType : type of the app notification to be subscribed - Required.
    /// - values:
    /// - "all"
    /// - "app-down"
    /// - "critical-vulnerability"
    /// </summary>
    public class SubscribeV2Handler : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static SubscribeV2HandlerBuilder Builder { get => new SubscribeV2HandlerBuilder(); }

        public class SubscribeV2HandlerBuilder
            : OperationBuilder<SubscribeV2HandlerBuilder>
        {





            internal SubscribeV2HandlerBuilder() { }






            public SubscribeV2Handler Build(
                ApimodelSelfSubscribeNotificationRequest body,
                string app,
                string namespace_
            )
            {
                SubscribeV2Handler op = new SubscribeV2Handler(this,
                    body,
                    app,
                    namespace_
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;
                op.FlightId = FlightId;

                return op;
            }
        }

        private SubscribeV2Handler(SubscribeV2HandlerBuilder builder,
            ApimodelSelfSubscribeNotificationRequest body,
            string app,
            string namespace_
        )
        {
            PathParams["app"] = app;
            PathParams["namespace"] = namespace_;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public SubscribeV2Handler(
            string app,
            string namespace_,
            Model.ApimodelSelfSubscribeNotificationRequest body
        )
        {
            PathParams["app"] = app;
            PathParams["namespace"] = namespace_;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/csm/v2/admin/namespaces/{namespace}/apps/{app}/subscriptions/me";

        public override HttpMethod Method => HttpMethod.Post;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";

        public void ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return;
            }

            var payloadString = Helper.ConvertInputStreamToString(payload);

            throw new HttpResponseException(code, payloadString);
        }
    }

}