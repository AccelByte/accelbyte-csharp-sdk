// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Loginqueue.Model;
using AccelByte.Sdk.Api.Loginqueue.Operation;
using AccelByte.Sdk.Api.Loginqueue.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class LoginqueueTicketV1_OpExts
    {
        public static Loginqueue.Model.ApimodelsRefreshTicketResponse? Execute(
            this RefreshTicket.RefreshTicketBuilder builder,
            string namespace_
        )
        {
            RefreshTicket op = builder.Build(
                namespace_
            );

            return ((Loginqueue.Wrapper.TicketV1)builder.WrapperObject!).RefreshTicket(op);
        }
        public static async Task<Loginqueue.Model.ApimodelsRefreshTicketResponse?> ExecuteAsync(
            this RefreshTicket.RefreshTicketBuilder builder,
            string namespace_
        )
        {
            RefreshTicket op = builder.Build(
                namespace_
            );

            return await ((Loginqueue.Wrapper.TicketV1)builder.WrapperObject!).RefreshTicketAsync(op);
        }
        public static void Execute(
            this CancelTicket.CancelTicketBuilder builder,
            string namespace_
        )
        {
            CancelTicket op = builder.Build(
                namespace_
            );

            ((Loginqueue.Wrapper.TicketV1)builder.WrapperObject!).CancelTicket(op);
        }
        public static async Task ExecuteAsync(
            this CancelTicket.CancelTicketBuilder builder,
            string namespace_
        )
        {
            CancelTicket op = builder.Build(
                namespace_
            );

            await ((Loginqueue.Wrapper.TicketV1)builder.WrapperObject!).CancelTicketAsync(op);
        }
    }
}