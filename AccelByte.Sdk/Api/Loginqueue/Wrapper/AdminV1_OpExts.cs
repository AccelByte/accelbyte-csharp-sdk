// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Loginqueue.Model;
using AccelByte.Sdk.Api.Loginqueue.Operation;
using AccelByte.Sdk.Api.Loginqueue.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class LoginqueueAdminV1_OpExts
    {
        public static Loginqueue.Model.ApimodelsConfigurationResponse? Execute(
            this AdminGetConfiguration.AdminGetConfigurationBuilder builder,
            string namespace_
        )
        {
            AdminGetConfiguration op = builder.Build(
                namespace_
            );

            return ((Loginqueue.Wrapper.AdminV1)builder.WrapperObject!).AdminGetConfiguration(op);
        }
        public static async Task<Loginqueue.Model.ApimodelsConfigurationResponse?> ExecuteAsync(
            this AdminGetConfiguration.AdminGetConfigurationBuilder builder,
            string namespace_
        )
        {
            AdminGetConfiguration op = builder.Build(
                namespace_
            );

            return await ((Loginqueue.Wrapper.AdminV1)builder.WrapperObject!).AdminGetConfigurationAsync(op);
        }
        public static Loginqueue.Model.ApimodelsConfigurationResponse? Execute(
            this AdminUpdateConfiguration.AdminUpdateConfigurationBuilder builder,
            ApimodelsConfigurationRequest body,
            string namespace_
        )
        {
            AdminUpdateConfiguration op = builder.Build(
                body,
                namespace_
            );

            return ((Loginqueue.Wrapper.AdminV1)builder.WrapperObject!).AdminUpdateConfiguration(op);
        }
        public static async Task<Loginqueue.Model.ApimodelsConfigurationResponse?> ExecuteAsync(
            this AdminUpdateConfiguration.AdminUpdateConfigurationBuilder builder,
            ApimodelsConfigurationRequest body,
            string namespace_
        )
        {
            AdminUpdateConfiguration op = builder.Build(
                body,
                namespace_
            );

            return await ((Loginqueue.Wrapper.AdminV1)builder.WrapperObject!).AdminUpdateConfigurationAsync(op);
        }
        public static Loginqueue.Model.ApimodelsQueueStatusResponse? Execute(
            this AdminGetStatus.AdminGetStatusBuilder builder,
            string namespace_
        )
        {
            AdminGetStatus op = builder.Build(
                namespace_
            );

            return ((Loginqueue.Wrapper.AdminV1)builder.WrapperObject!).AdminGetStatus(op);
        }
        public static async Task<Loginqueue.Model.ApimodelsQueueStatusResponse?> ExecuteAsync(
            this AdminGetStatus.AdminGetStatusBuilder builder,
            string namespace_
        )
        {
            AdminGetStatus op = builder.Build(
                namespace_
            );

            return await ((Loginqueue.Wrapper.AdminV1)builder.WrapperObject!).AdminGetStatusAsync(op);
        }
    }
}