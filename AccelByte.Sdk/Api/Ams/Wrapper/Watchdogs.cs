// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Ams.Model;
using AccelByte.Sdk.Api.Ams.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Ams.Wrapper
{
    public class Watchdogs
    {
        private readonly AccelByteSDK _sdk;

        public Watchdogs(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public LocalWatchdogConnect.LocalWatchdogConnectBuilder LocalWatchdogConnectOp
        {
            get { return Operation.LocalWatchdogConnect.Builder.SetWrapperObject(this); }
        }
        public WatchdogConnect.WatchdogConnectBuilder WatchdogConnectOp
        {
            get { return Operation.WatchdogConnect.Builder.SetWrapperObject(this); }
        }
        #endregion

        public void LocalWatchdogConnect(LocalWatchdogConnect input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task LocalWatchdogConnectAsync(LocalWatchdogConnect input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void WatchdogConnect(WatchdogConnect input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task WatchdogConnectAsync(WatchdogConnect input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}