// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Ams.Model;
using AccelByte.Sdk.Api.Ams.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Ams.Wrapper
{
    public class Account
    {
        private readonly AccelByteSDK _sdk;

        public Account(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminAccountGet.AdminAccountGetBuilder AdminAccountGetOp
        {
            get { return Operation.AdminAccountGet.Builder.SetWrapperObject(this); }
        }
        public AdminAccountCreate.AdminAccountCreateBuilder AdminAccountCreateOp
        {
            get { return Operation.AdminAccountCreate.Builder.SetWrapperObject(this); }
        }
        public AdminAccountLinkTokenGet.AdminAccountLinkTokenGetBuilder AdminAccountLinkTokenGetOp
        {
            get { return Operation.AdminAccountLinkTokenGet.Builder.SetWrapperObject(this); }
        }
        public AdminAccountLink.AdminAccountLinkBuilder AdminAccountLinkOp
        {
            get { return Operation.AdminAccountLink.Builder.SetWrapperObject(this); }
        }
        public AccountGet.AccountGetBuilder AccountGetOp
        {
            get { return Operation.AccountGet.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.ApiAccountResponse? AdminAccountGet(AdminAccountGet input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiAccountResponse?> AdminAccountGetAsync(AdminAccountGet input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApiAccountCreateResponse? AdminAccountCreate(AdminAccountCreate input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiAccountCreateResponse?> AdminAccountCreateAsync(AdminAccountCreate input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApiAccountLinkTokenResponse? AdminAccountLinkTokenGet(AdminAccountLinkTokenGet input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiAccountLinkTokenResponse?> AdminAccountLinkTokenGetAsync(AdminAccountLinkTokenGet input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApiAccountLinkResponse? AdminAccountLink(AdminAccountLink input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiAccountLinkResponse?> AdminAccountLinkAsync(AdminAccountLink input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApiAccountResponse? AccountGet(AccountGet input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiAccountResponse?> AccountGetAsync(AccountGet input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}