// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Ams.Model;
using AccelByte.Sdk.Api.Ams.Operation;
using AccelByte.Sdk.Api.Ams.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class AmsFleetCommander_OpExts
    {
        public static void Execute(
            this PortalHealthCheck.PortalHealthCheckBuilder builder
        )
        {
            PortalHealthCheck op = builder.Build(
            );

            ((Ams.Wrapper.FleetCommander)builder.WrapperObject!).PortalHealthCheck(op);
        }
        public static async Task ExecuteAsync(
            this PortalHealthCheck.PortalHealthCheckBuilder builder
        )
        {
            PortalHealthCheck op = builder.Build(
            );

            await ((Ams.Wrapper.FleetCommander)builder.WrapperObject!).PortalHealthCheckAsync(op);
        }
        public static void Execute(
            this Func1.Func1Builder builder
        )
        {
            Func1 op = builder.Build(
            );

            ((Ams.Wrapper.FleetCommander)builder.WrapperObject!).Func1(op);
        }
        public static async Task ExecuteAsync(
            this Func1.Func1Builder builder
        )
        {
            Func1 op = builder.Build(
            );

            await ((Ams.Wrapper.FleetCommander)builder.WrapperObject!).Func1Async(op);
        }
        public static void Execute(
            this BasicHealthCheck.BasicHealthCheckBuilder builder
        )
        {
            BasicHealthCheck op = builder.Build(
            );

            ((Ams.Wrapper.FleetCommander)builder.WrapperObject!).BasicHealthCheck(op);
        }
        public static async Task ExecuteAsync(
            this BasicHealthCheck.BasicHealthCheckBuilder builder
        )
        {
            BasicHealthCheck op = builder.Build(
            );

            await ((Ams.Wrapper.FleetCommander)builder.WrapperObject!).BasicHealthCheckAsync(op);
        }
    }
}