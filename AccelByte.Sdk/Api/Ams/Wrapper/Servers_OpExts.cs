// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Ams.Model;
using AccelByte.Sdk.Api.Ams.Operation;
using AccelByte.Sdk.Api.Ams.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class AmsServers_OpExts
    {
        public static Ams.Model.ApiDSHistoryList? Execute(
            this FleetServerHistory.FleetServerHistoryBuilder builder,
            string fleetID,
            string namespace_
        )
        {
            FleetServerHistory op = builder.Build(
                fleetID,
                namespace_
            );

            return ((Ams.Wrapper.Servers)builder.WrapperObject!).FleetServerHistory(op);
        }
        public static Ams.Model.ApiFleetServerInfoResponse? Execute(
            this FleetServerInfo.FleetServerInfoBuilder builder,
            string namespace_,
            string serverID
        )
        {
            FleetServerInfo op = builder.Build(
                namespace_,
                serverID
            );

            return ((Ams.Wrapper.Servers)builder.WrapperObject!).FleetServerInfo(op);
        }
        public static Ams.Model.ApiFleetServerConnectionInfoResponse? Execute(
            this FleetServerConnectionInfo.FleetServerConnectionInfoBuilder builder,
            string namespace_,
            string serverID
        )
        {
            FleetServerConnectionInfo op = builder.Build(
                namespace_,
                serverID
            );

            return ((Ams.Wrapper.Servers)builder.WrapperObject!).FleetServerConnectionInfo(op);
        }
        public static Ams.Model.ApiFleetServerHistoryResponse? Execute(
            this ServerHistory.ServerHistoryBuilder builder,
            string namespace_,
            string serverID
        )
        {
            ServerHistory op = builder.Build(
                namespace_,
                serverID
            );

            return ((Ams.Wrapper.Servers)builder.WrapperObject!).ServerHistory(op);
        }
    }
}