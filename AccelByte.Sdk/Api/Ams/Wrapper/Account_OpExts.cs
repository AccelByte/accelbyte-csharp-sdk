// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Ams.Model;
using AccelByte.Sdk.Api.Ams.Operation;
using AccelByte.Sdk.Api.Ams.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class AmsAccount_OpExts
    {
        public static Ams.Model.ApiAccountResponse? Execute(
            this AdminAccountGet.AdminAccountGetBuilder builder,
            string namespace_
        )
        {
            AdminAccountGet op = builder.Build(
                namespace_
            );

            return ((Ams.Wrapper.Account)builder.WrapperObject!).AdminAccountGet(op);
        }
        public static async Task<Ams.Model.ApiAccountResponse?> ExecuteAsync(
            this AdminAccountGet.AdminAccountGetBuilder builder,
            string namespace_
        )
        {
            AdminAccountGet op = builder.Build(
                namespace_
            );

            return await ((Ams.Wrapper.Account)builder.WrapperObject!).AdminAccountGetAsync(op);
        }
        public static Ams.Model.ApiAccountCreateResponse? Execute(
            this AdminAccountCreate.AdminAccountCreateBuilder builder,
            ApiAccountCreateRequest body,
            string namespace_
        )
        {
            AdminAccountCreate op = builder.Build(
                body,
                namespace_
            );

            return ((Ams.Wrapper.Account)builder.WrapperObject!).AdminAccountCreate(op);
        }
        public static async Task<Ams.Model.ApiAccountCreateResponse?> ExecuteAsync(
            this AdminAccountCreate.AdminAccountCreateBuilder builder,
            ApiAccountCreateRequest body,
            string namespace_
        )
        {
            AdminAccountCreate op = builder.Build(
                body,
                namespace_
            );

            return await ((Ams.Wrapper.Account)builder.WrapperObject!).AdminAccountCreateAsync(op);
        }
        public static Ams.Model.ApiAccountLinkTokenResponse? Execute(
            this AdminAccountLinkTokenGet.AdminAccountLinkTokenGetBuilder builder,
            string namespace_
        )
        {
            AdminAccountLinkTokenGet op = builder.Build(
                namespace_
            );

            return ((Ams.Wrapper.Account)builder.WrapperObject!).AdminAccountLinkTokenGet(op);
        }
        public static async Task<Ams.Model.ApiAccountLinkTokenResponse?> ExecuteAsync(
            this AdminAccountLinkTokenGet.AdminAccountLinkTokenGetBuilder builder,
            string namespace_
        )
        {
            AdminAccountLinkTokenGet op = builder.Build(
                namespace_
            );

            return await ((Ams.Wrapper.Account)builder.WrapperObject!).AdminAccountLinkTokenGetAsync(op);
        }
        public static Ams.Model.ApiAccountLinkResponse? Execute(
            this AdminAccountLink.AdminAccountLinkBuilder builder,
            ApiAccountLinkRequest body,
            string namespace_
        )
        {
            AdminAccountLink op = builder.Build(
                body,
                namespace_
            );

            return ((Ams.Wrapper.Account)builder.WrapperObject!).AdminAccountLink(op);
        }
        public static async Task<Ams.Model.ApiAccountLinkResponse?> ExecuteAsync(
            this AdminAccountLink.AdminAccountLinkBuilder builder,
            ApiAccountLinkRequest body,
            string namespace_
        )
        {
            AdminAccountLink op = builder.Build(
                body,
                namespace_
            );

            return await ((Ams.Wrapper.Account)builder.WrapperObject!).AdminAccountLinkAsync(op);
        }
        public static Ams.Model.ApiAccountResponse? Execute(
            this AccountGet.AccountGetBuilder builder,
            string namespace_
        )
        {
            AccountGet op = builder.Build(
                namespace_
            );

            return ((Ams.Wrapper.Account)builder.WrapperObject!).AccountGet(op);
        }
        public static async Task<Ams.Model.ApiAccountResponse?> ExecuteAsync(
            this AccountGet.AccountGetBuilder builder,
            string namespace_
        )
        {
            AccountGet op = builder.Build(
                namespace_
            );

            return await ((Ams.Wrapper.Account)builder.WrapperObject!).AccountGetAsync(op);
        }
    }
}