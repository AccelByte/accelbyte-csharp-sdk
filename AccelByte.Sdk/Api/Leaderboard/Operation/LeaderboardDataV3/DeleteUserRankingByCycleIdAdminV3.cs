// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Leaderboard.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Leaderboard.Operation
{
    /// <summary>
    /// deleteUserRankingByCycleIdAdminV3
    ///
    /// Delete user ranking by cycle id
    /// 
    /// Remove entry with provided cycleId and userId from leaderboard.
    /// If leaderboard with given leaderboard code not found, it will return http status not found (404).
    /// If the leaderboard is found and no entry found in it, it will still return success (204)
    /// </summary>
    public class DeleteUserRankingByCycleIdAdminV3 : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static DeleteUserRankingByCycleIdAdminV3Builder Builder { get => new DeleteUserRankingByCycleIdAdminV3Builder(); }

        public class DeleteUserRankingByCycleIdAdminV3Builder
            : OperationBuilder<DeleteUserRankingByCycleIdAdminV3Builder>
        {





            internal DeleteUserRankingByCycleIdAdminV3Builder() { }






            public DeleteUserRankingByCycleIdAdminV3 Build(
                string cycleId,
                string leaderboardCode,
                string namespace_,
                string userId
            )
            {
                DeleteUserRankingByCycleIdAdminV3 op = new DeleteUserRankingByCycleIdAdminV3(this,
                    cycleId,
                    leaderboardCode,
                    namespace_,
                    userId
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;
                op.FlightId = FlightId;

                return op;
            }
        }

        private DeleteUserRankingByCycleIdAdminV3(DeleteUserRankingByCycleIdAdminV3Builder builder,
            string cycleId,
            string leaderboardCode,
            string namespace_,
            string userId
        )
        {
            PathParams["cycleId"] = cycleId;
            PathParams["leaderboardCode"] = leaderboardCode;
            PathParams["namespace"] = namespace_;
            PathParams["userId"] = userId;







            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public DeleteUserRankingByCycleIdAdminV3(
            string cycleId,
            string leaderboardCode,
            string namespace_,
            string userId
        )
        {
            PathParams["cycleId"] = cycleId;
            PathParams["leaderboardCode"] = leaderboardCode;
            PathParams["namespace"] = namespace_;
            PathParams["userId"] = userId;







            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/leaderboard/v3/admin/namespaces/{namespace}/leaderboards/{leaderboardCode}/cycles/{cycleId}/users/{userId}";

        public override HttpMethod Method => HttpMethod.Delete;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";

        public void ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return;
            }

            var payloadString = Helper.ConvertInputStreamToString(payload);

            throw new HttpResponseException(code, payloadString);
        }
    }

}