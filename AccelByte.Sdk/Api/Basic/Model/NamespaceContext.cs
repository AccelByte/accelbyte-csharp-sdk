// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Basic.Model
{
    public class NamespaceContext : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("namespace")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Namespace { get; set; }

        [JsonPropertyName("publisherNamespace")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? PublisherNamespace { get; set; }

        [JsonPropertyName("studioNamespace")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? StudioNamespace { get; set; }

        [JsonPropertyName("type")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public NamespaceContextType? Type { get; set; }

    }



    public class NamespaceContextType : StringEnum<NamespaceContextType>
    {
        public static readonly NamespaceContextType Game
            = new NamespaceContextType("Game");

        public static readonly NamespaceContextType Publisher
            = new NamespaceContextType("Publisher");

        public static readonly NamespaceContextType Studio
            = new NamespaceContextType("Studio");


        public static implicit operator NamespaceContextType(string value)
        {
            return NewValue(value);
        }

        public NamespaceContextType(string enumValue)
            : base(enumValue)
        {

        }
    }
}