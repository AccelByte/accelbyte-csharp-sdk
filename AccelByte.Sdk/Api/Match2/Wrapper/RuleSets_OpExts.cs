// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Match2.Model;
using AccelByte.Sdk.Api.Match2.Operation;
using AccelByte.Sdk.Api.Match2.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class Match2RuleSets_OpExts
    {
        public static Match2.Model.ApiListRuleSetsResponse? Execute(
            this RuleSetList.RuleSetListBuilder builder,
            string namespace_
        )
        {
            RuleSetList op = builder.Build(
                namespace_
            );

            return ((Match2.Wrapper.RuleSets)builder.WrapperObject!).RuleSetList(op);
        }
        public static void Execute(
            this CreateRuleSet.CreateRuleSetBuilder builder,
            ApiRuleSetPayload body,
            string namespace_
        )
        {
            CreateRuleSet op = builder.Build(
                body,
                namespace_
            );

            ((Match2.Wrapper.RuleSets)builder.WrapperObject!).CreateRuleSet(op);
        }
        public static Match2.Model.ApiRuleSetPayload? Execute(
            this RuleSetDetails.RuleSetDetailsBuilder builder,
            string namespace_,
            string ruleset
        )
        {
            RuleSetDetails op = builder.Build(
                namespace_,
                ruleset
            );

            return ((Match2.Wrapper.RuleSets)builder.WrapperObject!).RuleSetDetails(op);
        }

        public static Match2.Model.ApiRuleSetPayload<T1>? Execute<T1>(
            this RuleSetDetails.RuleSetDetailsBuilder builder,
            string namespace_,
            string ruleset
        )
        {
            RuleSetDetails op = builder.Build(
                namespace_,
                ruleset
            );

            return ((Match2.Wrapper.RuleSets)builder.WrapperObject!).RuleSetDetails<T1>(op);
        }
        public static Match2.Model.ApiRuleSetPayload? Execute(
            this UpdateRuleSet.UpdateRuleSetBuilder builder,
            ApiRuleSetPayload body,
            string namespace_,
            string ruleset
        )
        {
            UpdateRuleSet op = builder.Build(
                body,
                namespace_,
                ruleset
            );

            return ((Match2.Wrapper.RuleSets)builder.WrapperObject!).UpdateRuleSet(op);
        }

        public static Match2.Model.ApiRuleSetPayload<T1>? Execute<T1>(
            this UpdateRuleSet.UpdateRuleSetBuilder builder,
            ApiRuleSetPayload body,
            string namespace_,
            string ruleset
        )
        {
            UpdateRuleSet op = builder.Build(
                body,
                namespace_,
                ruleset
            );

            return ((Match2.Wrapper.RuleSets)builder.WrapperObject!).UpdateRuleSet<T1>(op);
        }
        public static void Execute(
            this DeleteRuleSet.DeleteRuleSetBuilder builder,
            string namespace_,
            string ruleset
        )
        {
            DeleteRuleSet op = builder.Build(
                namespace_,
                ruleset
            );

            ((Match2.Wrapper.RuleSets)builder.WrapperObject!).DeleteRuleSet(op);
        }
    }
}