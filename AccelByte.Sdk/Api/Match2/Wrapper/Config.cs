// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Match2.Model;
using AccelByte.Sdk.Api.Match2.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Match2.Wrapper
{
    public class Config
    {
        private readonly AccelByteSDK _sdk;

        public Config(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminGetAllConfigV1.AdminGetAllConfigV1Builder AdminGetAllConfigV1Op
        {
            get { return Operation.AdminGetAllConfigV1.Builder.SetWrapperObject(this); }
        }
        public AdminGetConfigV1.AdminGetConfigV1Builder AdminGetConfigV1Op
        {
            get { return Operation.AdminGetConfigV1.Builder.SetWrapperObject(this); }
        }
        public AdminPatchConfigV1.AdminPatchConfigV1Builder AdminPatchConfigV1Op
        {
            get { return Operation.AdminPatchConfigV1.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.ApiNamespaceConfigList? AdminGetAllConfigV1(AdminGetAllConfigV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ConfigmodelsNamespaceConfig? AdminGetConfigV1(AdminGetConfigV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ConfigmodelsNamespaceConfig? AdminPatchConfigV1(AdminPatchConfigV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}