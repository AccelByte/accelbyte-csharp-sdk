// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Match2.Model;
using AccelByte.Sdk.Api.Match2.Operation;
using AccelByte.Sdk.Api.Match2.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class Match2XRayConfig_OpExts
    {
        public static Match2.Model.ModelsXRayConfigHttpResponse? Execute(
            this AdminGetXRayConfig.AdminGetXRayConfigBuilder builder,
            string namespace_
        )
        {
            AdminGetXRayConfig op = builder.Build(
                namespace_
            );

            return ((Match2.Wrapper.XRayConfig)builder.WrapperObject!).AdminGetXRayConfig(op);
        }
        public static async Task<Match2.Model.ModelsXRayConfigHttpResponse?> ExecuteAsync(
            this AdminGetXRayConfig.AdminGetXRayConfigBuilder builder,
            string namespace_
        )
        {
            AdminGetXRayConfig op = builder.Build(
                namespace_
            );

            return await ((Match2.Wrapper.XRayConfig)builder.WrapperObject!).AdminGetXRayConfigAsync(op);
        }
        public static void Execute(
            this AdminUpdateXRayConfig.AdminUpdateXRayConfigBuilder builder,
            ModelsXRayConfigHttpUpdateRequest body,
            string namespace_
        )
        {
            AdminUpdateXRayConfig op = builder.Build(
                body,
                namespace_
            );

            ((Match2.Wrapper.XRayConfig)builder.WrapperObject!).AdminUpdateXRayConfig(op);
        }
        public static async Task ExecuteAsync(
            this AdminUpdateXRayConfig.AdminUpdateXRayConfigBuilder builder,
            ModelsXRayConfigHttpUpdateRequest body,
            string namespace_
        )
        {
            AdminUpdateXRayConfig op = builder.Build(
                body,
                namespace_
            );

            await ((Match2.Wrapper.XRayConfig)builder.WrapperObject!).AdminUpdateXRayConfigAsync(op);
        }
    }
}