// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Match2.Model;
using AccelByte.Sdk.Api.Match2.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Match2.Wrapper
{
    public class MatchTickets
    {
        private readonly AccelByteSDK _sdk;

        public MatchTickets(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public CreateMatchTicket.CreateMatchTicketBuilder CreateMatchTicketOp
        {
            get { return Operation.CreateMatchTicket.Builder.SetWrapperObject(this); }
        }
        public GetMyMatchTickets.GetMyMatchTicketsBuilder GetMyMatchTicketsOp
        {
            get { return Operation.GetMyMatchTickets.Builder.SetWrapperObject(this); }
        }
        public MatchTicketDetails.MatchTicketDetailsBuilder MatchTicketDetailsOp
        {
            get { return Operation.MatchTicketDetails.Builder.SetWrapperObject(this); }
        }
        public DeleteMatchTicket.DeleteMatchTicketBuilder DeleteMatchTicketOp
        {
            get { return Operation.DeleteMatchTicket.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.ApiMatchTicketResponse? CreateMatchTicket(CreateMatchTicket input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiMatchTicketResponse?> CreateMatchTicketAsync(CreateMatchTicket input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApiMatchTicketStatuses? GetMyMatchTickets(GetMyMatchTickets input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiMatchTicketStatuses?> GetMyMatchTicketsAsync(GetMyMatchTickets input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ApiMatchTicketStatus? MatchTicketDetails(MatchTicketDetails input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ApiMatchTicketStatus?> MatchTicketDetailsAsync(MatchTicketDetails input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteMatchTicket(DeleteMatchTicket input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task DeleteMatchTicketAsync(DeleteMatchTicket input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}