// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Match2.Model;
using AccelByte.Sdk.Api.Match2.Operation;
using AccelByte.Sdk.Api.Match2.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class Match2MatchPools_OpExts
    {
        public static Match2.Model.ApiListMatchPoolsResponse? Execute(
            this MatchPoolList.MatchPoolListBuilder builder,
            string namespace_
        )
        {
            MatchPoolList op = builder.Build(
                namespace_
            );

            return ((Match2.Wrapper.MatchPools)builder.WrapperObject!).MatchPoolList(op);
        }
        public static void Execute(
            this CreateMatchPool.CreateMatchPoolBuilder builder,
            ApiMatchPool body,
            string namespace_
        )
        {
            CreateMatchPool op = builder.Build(
                body,
                namespace_
            );

            ((Match2.Wrapper.MatchPools)builder.WrapperObject!).CreateMatchPool(op);
        }
        public static Match2.Model.ApiMatchPool? Execute(
            this MatchPoolDetails.MatchPoolDetailsBuilder builder,
            string namespace_,
            string pool
        )
        {
            MatchPoolDetails op = builder.Build(
                namespace_,
                pool
            );

            return ((Match2.Wrapper.MatchPools)builder.WrapperObject!).MatchPoolDetails(op);
        }
        public static Match2.Model.ApiMatchPool? Execute(
            this UpdateMatchPool.UpdateMatchPoolBuilder builder,
            ApiMatchPoolConfig body,
            string namespace_,
            string pool
        )
        {
            UpdateMatchPool op = builder.Build(
                body,
                namespace_,
                pool
            );

            return ((Match2.Wrapper.MatchPools)builder.WrapperObject!).UpdateMatchPool(op);
        }
        public static void Execute(
            this DeleteMatchPool.DeleteMatchPoolBuilder builder,
            string namespace_,
            string pool
        )
        {
            DeleteMatchPool op = builder.Build(
                namespace_,
                pool
            );

            ((Match2.Wrapper.MatchPools)builder.WrapperObject!).DeleteMatchPool(op);
        }
        public static Match2.Model.ApiTicketMetricResultRecord? Execute(
            this MatchPoolMetric.MatchPoolMetricBuilder builder,
            string namespace_,
            string pool
        )
        {
            MatchPoolMetric op = builder.Build(
                namespace_,
                pool
            );

            return ((Match2.Wrapper.MatchPools)builder.WrapperObject!).MatchPoolMetric(op);
        }
        public static Match2.Model.ApiPlayerMetricRecord? Execute(
            this GetPlayerMetric.GetPlayerMetricBuilder builder,
            string namespace_,
            string pool
        )
        {
            GetPlayerMetric op = builder.Build(
                namespace_,
                pool
            );

            return ((Match2.Wrapper.MatchPools)builder.WrapperObject!).GetPlayerMetric(op);
        }
        public static Match2.Model.ApiListMatchPoolTicketsResponse? Execute(
            this AdminGetMatchPoolTickets.AdminGetMatchPoolTicketsBuilder builder,
            string namespace_,
            string pool
        )
        {
            AdminGetMatchPoolTickets op = builder.Build(
                namespace_,
                pool
            );

            return ((Match2.Wrapper.MatchPools)builder.WrapperObject!).AdminGetMatchPoolTickets(op);
        }
    }
}