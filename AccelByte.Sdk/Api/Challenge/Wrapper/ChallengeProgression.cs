// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Challenge.Model;
using AccelByte.Sdk.Api.Challenge.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Challenge.Wrapper
{
    public class ChallengeProgression
    {
        private readonly AccelByteSDK _sdk;

        public ChallengeProgression(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminEvaluateProgress.AdminEvaluateProgressBuilder AdminEvaluateProgressOp
        {
            get { return Operation.AdminEvaluateProgress.Builder.SetWrapperObject(this); }
        }
        public EvaluateMyProgress.EvaluateMyProgressBuilder EvaluateMyProgressOp
        {
            get { return Operation.EvaluateMyProgress.Builder.SetWrapperObject(this); }
        }
        public PublicGetUserProgression.PublicGetUserProgressionBuilder PublicGetUserProgressionOp
        {
            get { return Operation.PublicGetUserProgression.Builder.SetWrapperObject(this); }
        }
        #endregion

        public void AdminEvaluateProgress(AdminEvaluateProgress input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void EvaluateMyProgress(EvaluateMyProgress input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelUserProgressionResponse? PublicGetUserProgression(PublicGetUserProgression input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}