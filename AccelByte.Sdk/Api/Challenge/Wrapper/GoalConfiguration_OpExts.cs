// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Challenge.Model;
using AccelByte.Sdk.Api.Challenge.Operation;
using AccelByte.Sdk.Api.Challenge.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class ChallengeGoalConfiguration_OpExts
    {
        public static Challenge.Model.ModelGetGoalsResponse? Execute(
            this AdminGetGoals.AdminGetGoalsBuilder builder,
            string challengeCode,
            string namespace_
        )
        {
            AdminGetGoals op = builder.Build(
                challengeCode,
                namespace_
            );

            return ((Challenge.Wrapper.GoalConfiguration)builder.WrapperObject!).AdminGetGoals(op);
        }
        public static Challenge.Model.ModelGoalResponse? Execute(
            this AdminCreateGoal.AdminCreateGoalBuilder builder,
            ModelCreateGoalRequest body,
            string challengeCode,
            string namespace_
        )
        {
            AdminCreateGoal op = builder.Build(
                body,
                challengeCode,
                namespace_
            );

            return ((Challenge.Wrapper.GoalConfiguration)builder.WrapperObject!).AdminCreateGoal(op);
        }
        public static Challenge.Model.ModelGoalResponse? Execute(
            this AdminGetGoal.AdminGetGoalBuilder builder,
            string challengeCode,
            string code,
            string namespace_
        )
        {
            AdminGetGoal op = builder.Build(
                challengeCode,
                code,
                namespace_
            );

            return ((Challenge.Wrapper.GoalConfiguration)builder.WrapperObject!).AdminGetGoal(op);
        }
        public static Challenge.Model.ModelGoalResponse? Execute(
            this AdminUpdateGoals.AdminUpdateGoalsBuilder builder,
            ModelUpdateGoalRequest body,
            string challengeCode,
            string code,
            string namespace_
        )
        {
            AdminUpdateGoals op = builder.Build(
                body,
                challengeCode,
                code,
                namespace_
            );

            return ((Challenge.Wrapper.GoalConfiguration)builder.WrapperObject!).AdminUpdateGoals(op);
        }
        public static void Execute(
            this AdminDeleteGoal.AdminDeleteGoalBuilder builder,
            string challengeCode,
            string code,
            string namespace_
        )
        {
            AdminDeleteGoal op = builder.Build(
                challengeCode,
                code,
                namespace_
            );

            ((Challenge.Wrapper.GoalConfiguration)builder.WrapperObject!).AdminDeleteGoal(op);
        }
    }
}