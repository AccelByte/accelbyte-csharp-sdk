// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Matchmaking.Model
{
    public class ModelsSortTicket : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("search_result")]
        [JsonStringEnum]
        public ModelsSortTicketSearchResult? SearchResult { get; set; }

        [JsonPropertyName("ticket_queue")]
        [JsonStringEnum]
        public ModelsSortTicketTicketQueue? TicketQueue { get; set; }

    }



    public class ModelsSortTicketSearchResult : StringEnum<ModelsSortTicketSearchResult>
    {
        public static readonly ModelsSortTicketSearchResult Distance
            = new ModelsSortTicketSearchResult("distance");

        public static readonly ModelsSortTicketSearchResult LargestPartySize
            = new ModelsSortTicketSearchResult("largestPartySize");

        public static readonly ModelsSortTicketSearchResult None
            = new ModelsSortTicketSearchResult("none");

        public static readonly ModelsSortTicketSearchResult OldestTicketAge
            = new ModelsSortTicketSearchResult("oldestTicketAge");

        public static readonly ModelsSortTicketSearchResult Random
            = new ModelsSortTicketSearchResult("random");


        public static implicit operator ModelsSortTicketSearchResult(string value)
        {
            return NewValue(value);
        }

        public ModelsSortTicketSearchResult(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class ModelsSortTicketTicketQueue : StringEnum<ModelsSortTicketTicketQueue>
    {
        public static readonly ModelsSortTicketTicketQueue Distance
            = new ModelsSortTicketTicketQueue("distance");

        public static readonly ModelsSortTicketTicketQueue LargestPartySize
            = new ModelsSortTicketTicketQueue("largestPartySize");

        public static readonly ModelsSortTicketTicketQueue None
            = new ModelsSortTicketTicketQueue("none");

        public static readonly ModelsSortTicketTicketQueue OldestTicketAge
            = new ModelsSortTicketTicketQueue("oldestTicketAge");

        public static readonly ModelsSortTicketTicketQueue Random
            = new ModelsSortTicketTicketQueue("random");


        public static implicit operator ModelsSortTicketTicketQueue(string value)
        {
            return NewValue(value);
        }

        public ModelsSortTicketTicketQueue(string enumValue)
            : base(enumValue)
        {

        }
    }
}