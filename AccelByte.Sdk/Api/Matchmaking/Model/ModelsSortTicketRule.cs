// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Matchmaking.Model
{
    public class ModelsSortTicketRule : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("search_result")]
        [JsonStringEnum]
        public ModelsSortTicketRuleSearchResult? SearchResult { get; set; }

        [JsonPropertyName("threshold")]
        public long? Threshold { get; set; }

        [JsonPropertyName("ticket_queue")]
        [JsonStringEnum]
        public ModelsSortTicketRuleTicketQueue? TicketQueue { get; set; }

    }



    public class ModelsSortTicketRuleSearchResult : StringEnum<ModelsSortTicketRuleSearchResult>
    {
        public static readonly ModelsSortTicketRuleSearchResult Distance
            = new ModelsSortTicketRuleSearchResult("distance");

        public static readonly ModelsSortTicketRuleSearchResult LargestPartySize
            = new ModelsSortTicketRuleSearchResult("largestPartySize");

        public static readonly ModelsSortTicketRuleSearchResult None
            = new ModelsSortTicketRuleSearchResult("none");

        public static readonly ModelsSortTicketRuleSearchResult OldestTicketAge
            = new ModelsSortTicketRuleSearchResult("oldestTicketAge");

        public static readonly ModelsSortTicketRuleSearchResult Random
            = new ModelsSortTicketRuleSearchResult("random");


        public static implicit operator ModelsSortTicketRuleSearchResult(string value)
        {
            return NewValue(value);
        }

        public ModelsSortTicketRuleSearchResult(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class ModelsSortTicketRuleTicketQueue : StringEnum<ModelsSortTicketRuleTicketQueue>
    {
        public static readonly ModelsSortTicketRuleTicketQueue Distance
            = new ModelsSortTicketRuleTicketQueue("distance");

        public static readonly ModelsSortTicketRuleTicketQueue LargestPartySize
            = new ModelsSortTicketRuleTicketQueue("largestPartySize");

        public static readonly ModelsSortTicketRuleTicketQueue None
            = new ModelsSortTicketRuleTicketQueue("none");

        public static readonly ModelsSortTicketRuleTicketQueue OldestTicketAge
            = new ModelsSortTicketRuleTicketQueue("oldestTicketAge");

        public static readonly ModelsSortTicketRuleTicketQueue Random
            = new ModelsSortTicketRuleTicketQueue("random");


        public static implicit operator ModelsSortTicketRuleTicketQueue(string value)
        {
            return NewValue(value);
        }

        public ModelsSortTicketRuleTicketQueue(string enumValue)
            : base(enumValue)
        {

        }
    }
}