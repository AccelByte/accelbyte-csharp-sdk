// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Api.Iam.Operation;
using AccelByte.Sdk.Api.Iam.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class IamAccountIdenfifierTag_OpExts
    {
        public static Iam.Model.AccountcommonTagsGetResponseV3? Execute(
            this AdminQueryTagV3.AdminQueryTagV3Builder builder,
            string namespace_
        )
        {
            AdminQueryTagV3 op = builder.Build(
                namespace_
            );

            return ((Iam.Wrapper.AccountIdenfifierTag)builder.WrapperObject!).AdminQueryTagV3(op);
        }
        public static async Task<Iam.Model.AccountcommonTagsGetResponseV3?> ExecuteAsync(
            this AdminQueryTagV3.AdminQueryTagV3Builder builder,
            string namespace_
        )
        {
            AdminQueryTagV3 op = builder.Build(
                namespace_
            );

            return await ((Iam.Wrapper.AccountIdenfifierTag)builder.WrapperObject!).AdminQueryTagV3Async(op);
        }
        public static Iam.Model.AccountcommonTagResponse? Execute(
            this AdminCreateTagV3.AdminCreateTagV3Builder builder,
            ModelTagCreateRequestV3 body,
            string namespace_
        )
        {
            AdminCreateTagV3 op = builder.Build(
                body,
                namespace_
            );

            return ((Iam.Wrapper.AccountIdenfifierTag)builder.WrapperObject!).AdminCreateTagV3(op);
        }
        public static async Task<Iam.Model.AccountcommonTagResponse?> ExecuteAsync(
            this AdminCreateTagV3.AdminCreateTagV3Builder builder,
            ModelTagCreateRequestV3 body,
            string namespace_
        )
        {
            AdminCreateTagV3 op = builder.Build(
                body,
                namespace_
            );

            return await ((Iam.Wrapper.AccountIdenfifierTag)builder.WrapperObject!).AdminCreateTagV3Async(op);
        }
        public static Iam.Model.AccountcommonTagResponse? Execute(
            this AdminUpdateTagV3.AdminUpdateTagV3Builder builder,
            ModelTagUpdateRequestV3 body,
            string namespace_,
            string tagId
        )
        {
            AdminUpdateTagV3 op = builder.Build(
                body,
                namespace_,
                tagId
            );

            return ((Iam.Wrapper.AccountIdenfifierTag)builder.WrapperObject!).AdminUpdateTagV3(op);
        }
        public static async Task<Iam.Model.AccountcommonTagResponse?> ExecuteAsync(
            this AdminUpdateTagV3.AdminUpdateTagV3Builder builder,
            ModelTagUpdateRequestV3 body,
            string namespace_,
            string tagId
        )
        {
            AdminUpdateTagV3 op = builder.Build(
                body,
                namespace_,
                tagId
            );

            return await ((Iam.Wrapper.AccountIdenfifierTag)builder.WrapperObject!).AdminUpdateTagV3Async(op);
        }
        public static void Execute(
            this AdminDeleteTagV3.AdminDeleteTagV3Builder builder,
            string namespace_,
            string tagId
        )
        {
            AdminDeleteTagV3 op = builder.Build(
                namespace_,
                tagId
            );

            ((Iam.Wrapper.AccountIdenfifierTag)builder.WrapperObject!).AdminDeleteTagV3(op);
        }
        public static async Task ExecuteAsync(
            this AdminDeleteTagV3.AdminDeleteTagV3Builder builder,
            string namespace_,
            string tagId
        )
        {
            AdminDeleteTagV3 op = builder.Build(
                namespace_,
                tagId
            );

            await ((Iam.Wrapper.AccountIdenfifierTag)builder.WrapperObject!).AdminDeleteTagV3Async(op);
        }
    }
}