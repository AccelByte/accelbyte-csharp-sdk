// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Api.Iam.Operation;
using AccelByte.Sdk.Api.Iam.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class IamConfig_OpExts
    {
        public static Iam.Model.ModelConfigValueResponseV3? Execute(
            this AdminGetConfigValueV3.AdminGetConfigValueV3Builder builder,
            string configKey,
            string namespace_
        )
        {
            AdminGetConfigValueV3 op = builder.Build(
                configKey,
                namespace_
            );

            return ((Iam.Wrapper.Config)builder.WrapperObject!).AdminGetConfigValueV3(op);
        }

        public static Iam.Model.ModelConfigValueResponseV3<T1>? Execute<T1>(
            this AdminGetConfigValueV3.AdminGetConfigValueV3Builder builder,
            string configKey,
            string namespace_
        )
        {
            AdminGetConfigValueV3 op = builder.Build(
                configKey,
                namespace_
            );

            return ((Iam.Wrapper.Config)builder.WrapperObject!).AdminGetConfigValueV3<T1>(op);
        }
        public static Iam.Model.ModelConfigValueResponseV3? Execute(
            this PublicGetConfigValueV3.PublicGetConfigValueV3Builder builder,
            string configKey,
            string namespace_
        )
        {
            PublicGetConfigValueV3 op = builder.Build(
                configKey,
                namespace_
            );

            return ((Iam.Wrapper.Config)builder.WrapperObject!).PublicGetConfigValueV3(op);
        }

        public static Iam.Model.ModelConfigValueResponseV3<T1>? Execute<T1>(
            this PublicGetConfigValueV3.PublicGetConfigValueV3Builder builder,
            string configKey,
            string namespace_
        )
        {
            PublicGetConfigValueV3 op = builder.Build(
                configKey,
                namespace_
            );

            return ((Iam.Wrapper.Config)builder.WrapperObject!).PublicGetConfigValueV3<T1>(op);
        }
    }
}