// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Api.Iam.Operation;
using AccelByte.Sdk.Api.Iam.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class IamOverrideRoleConfigV3_OpExts
    {
        public static Iam.Model.ModelRoleOverrideResponse? Execute(
            this AdminGetRoleOverrideConfigV3.AdminGetRoleOverrideConfigV3Builder builder,
            string namespace_,
            string identity
        )
        {
            AdminGetRoleOverrideConfigV3 op = builder.Build(
                namespace_,
                identity
            );

            return ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminGetRoleOverrideConfigV3(op);
        }
        public static async Task<Iam.Model.ModelRoleOverrideResponse?> ExecuteAsync(
            this AdminGetRoleOverrideConfigV3.AdminGetRoleOverrideConfigV3Builder builder,
            string namespace_,
            string identity
        )
        {
            AdminGetRoleOverrideConfigV3 op = builder.Build(
                namespace_,
                identity
            );

            return await ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminGetRoleOverrideConfigV3Async(op);
        }
        public static Iam.Model.ModelRoleOverrideResponse? Execute(
            this AdminUpdateRoleOverrideConfigV3.AdminUpdateRoleOverrideConfigV3Builder builder,
            ModelRoleOverrideUpdateRequest body,
            string namespace_,
            string identity
        )
        {
            AdminUpdateRoleOverrideConfigV3 op = builder.Build(
                body,
                namespace_,
                identity
            );

            return ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminUpdateRoleOverrideConfigV3(op);
        }
        public static async Task<Iam.Model.ModelRoleOverrideResponse?> ExecuteAsync(
            this AdminUpdateRoleOverrideConfigV3.AdminUpdateRoleOverrideConfigV3Builder builder,
            ModelRoleOverrideUpdateRequest body,
            string namespace_,
            string identity
        )
        {
            AdminUpdateRoleOverrideConfigV3 op = builder.Build(
                body,
                namespace_,
                identity
            );

            return await ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminUpdateRoleOverrideConfigV3Async(op);
        }
        public static Iam.Model.ModelRoleOverrideSourceResponse? Execute(
            this AdminGetRoleSourceV3.AdminGetRoleSourceV3Builder builder,
            string namespace_,
            string identity
        )
        {
            AdminGetRoleSourceV3 op = builder.Build(
                namespace_,
                identity
            );

            return ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminGetRoleSourceV3(op);
        }
        public static async Task<Iam.Model.ModelRoleOverrideSourceResponse?> ExecuteAsync(
            this AdminGetRoleSourceV3.AdminGetRoleSourceV3Builder builder,
            string namespace_,
            string identity
        )
        {
            AdminGetRoleSourceV3 op = builder.Build(
                namespace_,
                identity
            );

            return await ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminGetRoleSourceV3Async(op);
        }
        public static Iam.Model.ModelRoleOverrideResponse? Execute(
            this AdminChangeRoleOverrideConfigStatusV3.AdminChangeRoleOverrideConfigStatusV3Builder builder,
            ModelRoleOverrideStatsUpdateRequest body,
            string namespace_,
            string identity
        )
        {
            AdminChangeRoleOverrideConfigStatusV3 op = builder.Build(
                body,
                namespace_,
                identity
            );

            return ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminChangeRoleOverrideConfigStatusV3(op);
        }
        public static async Task<Iam.Model.ModelRoleOverrideResponse?> ExecuteAsync(
            this AdminChangeRoleOverrideConfigStatusV3.AdminChangeRoleOverrideConfigStatusV3Builder builder,
            ModelRoleOverrideStatsUpdateRequest body,
            string namespace_,
            string identity
        )
        {
            AdminChangeRoleOverrideConfigStatusV3 op = builder.Build(
                body,
                namespace_,
                identity
            );

            return await ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminChangeRoleOverrideConfigStatusV3Async(op);
        }
        public static Iam.Model.ModelRolePermissionResponseV3? Execute(
            this AdminGetRoleNamespacePermissionV3.AdminGetRoleNamespacePermissionV3Builder builder,
            string namespace_,
            string roleId
        )
        {
            AdminGetRoleNamespacePermissionV3 op = builder.Build(
                namespace_,
                roleId
            );

            return ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminGetRoleNamespacePermissionV3(op);
        }
        public static async Task<Iam.Model.ModelRolePermissionResponseV3?> ExecuteAsync(
            this AdminGetRoleNamespacePermissionV3.AdminGetRoleNamespacePermissionV3Builder builder,
            string namespace_,
            string roleId
        )
        {
            AdminGetRoleNamespacePermissionV3 op = builder.Build(
                namespace_,
                roleId
            );

            return await ((Iam.Wrapper.OverrideRoleConfigV3)builder.WrapperObject!).AdminGetRoleNamespacePermissionV3Async(op);
        }
    }
}