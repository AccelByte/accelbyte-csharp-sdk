// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Iam.Model
{
    public class AccountCreateTestUserRequestV4 : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("acceptedPolicies")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<LegalAcceptedPoliciesRequest>? AcceptedPolicies { get; set; }

        [JsonPropertyName("authType")]
        [JsonStringEnum]
        public AccountCreateTestUserRequestV4AuthType? AuthType { get; set; }

        [JsonPropertyName("country")]
        public string? Country { get; set; }

        [JsonPropertyName("dateOfBirth")]
        public string? DateOfBirth { get; set; }

        [JsonPropertyName("displayName")]
        public string? DisplayName { get; set; }

        [JsonPropertyName("emailAddress")]
        public string? EmailAddress { get; set; }

        [JsonPropertyName("password")]
        public string? Password { get; set; }

        [JsonPropertyName("passwordMD5Sum")]
        public string? PasswordMD5Sum { get; set; }

        [JsonPropertyName("username")]
        public string? Username { get; set; }

        [JsonPropertyName("verified")]
        public bool? Verified { get; set; }

    }



    public class AccountCreateTestUserRequestV4AuthType : StringEnum<AccountCreateTestUserRequestV4AuthType>
    {
        public static readonly AccountCreateTestUserRequestV4AuthType EMAILPASSWD
            = new AccountCreateTestUserRequestV4AuthType("EMAILPASSWD");


        public static implicit operator AccountCreateTestUserRequestV4AuthType(string value)
        {
            return NewValue(value);
        }

        public AccountCreateTestUserRequestV4AuthType(string enumValue)
            : base(enumValue)
        {

        }
    }
}