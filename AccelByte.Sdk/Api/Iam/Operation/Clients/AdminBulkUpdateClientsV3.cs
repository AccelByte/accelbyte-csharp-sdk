// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Iam.Operation
{
    /// <summary>
    /// AdminBulkUpdateClientsV3
    ///
    /// Updates multiple OAuth 2.0 clients.
    /// Specify only the fields you want to update in the request payload, e.g. {"ClientName":"E-commerce", "BaseUri":"https://example.net"}
    /// 
    /// **Note for Multi Tenant Mode (Confidential Client):**
    /// Only Super admin can set permission with resource & action.
    /// Studio admin & game admin need set permission with permission module.
    /// 
    /// action code: 10302
    /// 
    /// **Fields Description:**
    /// - **clientName** : The client name. It should not be empty if the field exists in the body. e.g E-commerce
    /// - **namespace** : The namespace where the client lives. e.g sample-game
    /// - **redirectUri** : Contains the redirect URI used in OAuth callback. It should not be empty if the field exists in the body. e.g https://example.net/platform
    /// - **audiences** : List of target client IDs who is intended to receive the token. e.g ["eaaa65618fe24293b00a61454182b435", "40073ee9bc3446d3a051a71b48509a5d"]
    /// - **baseUri** : A base URI of the application. It is used in the audience checking for making sure the token is used by the right resource server. Required if the application type is a server. e.g https://example.net/platform
    /// - **clientPermissions** : Contains the client's permissions
    /// - **deletable** : The flag to identify whether client is deletable (optional). e.g. true
    /// - **clientPlatform** : available client platform (optional). default value: "".
    /// - Playstation
    /// - Xbox
    /// - Steam
    /// - Epic
    /// - IOS
    /// - GooglePlay
    /// - Nintendo
    /// - Oculus
    /// - **twoFactorEnabled**: The flag to indicate whether 2FA validation is enable for this client. default value: false
    /// - **oauthAccessTokenExpiration**: a configurable expiration time for **access_token**, default value: 0 (mean fetch value from environment variable)
    /// - **oauthRefreshTokenExpiration**: a configurable expiration time for **refresh_token**, default value: 0 (mean fetch value from environment variable)
    /// - **oauthAccessTokenExpirationTimeUnit**: a configurable expiration time unit for **access_token**, will use previous value if not specified
    /// - **oauthRefreshTokenExpirationTimeUnit**: a configurable expiration time unit for **refresh_token**, will use previous value if not specified
    /// - **skipLoginQueue**: a flag to indicate whether this client should be exempted from login queue or not
    /// </summary>
    public class AdminBulkUpdateClientsV3 : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static AdminBulkUpdateClientsV3Builder Builder { get => new AdminBulkUpdateClientsV3Builder(); }

        public class AdminBulkUpdateClientsV3Builder
            : OperationBuilder<AdminBulkUpdateClientsV3Builder>
        {





            internal AdminBulkUpdateClientsV3Builder() { }






            public AdminBulkUpdateClientsV3 Build(
                ClientmodelClientsUpdateRequestV3 body,
                string namespace_
            )
            {
                AdminBulkUpdateClientsV3 op = new AdminBulkUpdateClientsV3(this,
                    body,
                    namespace_
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;
                op.FlightId = FlightId;

                return op;
            }
        }

        private AdminBulkUpdateClientsV3(AdminBulkUpdateClientsV3Builder builder,
            ClientmodelClientsUpdateRequestV3 body,
            string namespace_
        )
        {
            PathParams["namespace"] = namespace_;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public AdminBulkUpdateClientsV3(
            string namespace_,
            Model.ClientmodelClientsUpdateRequestV3 body
        )
        {
            PathParams["namespace"] = namespace_;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/iam/v3/admin/namespaces/{namespace}/clients";

        public override HttpMethod Method => HttpMethod.Put;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";

        public void ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return;
            }

            var payloadString = Helper.ConvertInputStreamToString(payload);

            throw new HttpResponseException(code, payloadString);
        }
    }

}