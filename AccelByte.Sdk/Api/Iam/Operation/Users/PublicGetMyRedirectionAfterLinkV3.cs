// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Iam.Operation
{
    /// <summary>
    /// PublicGetMyRedirectionAfterLinkV3
    ///
    /// Get my redirect uri after link, this endpoint will return NotFound(404) if redirect uri is not found
    /// </summary>
    public class PublicGetMyRedirectionAfterLinkV3 : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static PublicGetMyRedirectionAfterLinkV3Builder Builder { get => new PublicGetMyRedirectionAfterLinkV3Builder(); }

        public class PublicGetMyRedirectionAfterLinkV3Builder
            : OperationBuilder<PublicGetMyRedirectionAfterLinkV3Builder>
        {





            internal PublicGetMyRedirectionAfterLinkV3Builder() { }






            public PublicGetMyRedirectionAfterLinkV3 Build(
                string oneTimeLinkCode
            )
            {
                PublicGetMyRedirectionAfterLinkV3 op = new PublicGetMyRedirectionAfterLinkV3(this,
                    oneTimeLinkCode
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;
                op.FlightId = FlightId;

                return op;
            }
        }

        private PublicGetMyRedirectionAfterLinkV3(PublicGetMyRedirectionAfterLinkV3Builder builder,
            string oneTimeLinkCode
        )
        {

            if (oneTimeLinkCode is not null) QueryParams["oneTimeLinkCode"] = oneTimeLinkCode;






            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public PublicGetMyRedirectionAfterLinkV3(
            string oneTimeLinkCode
        )
        {

            if (oneTimeLinkCode is not null) QueryParams["oneTimeLinkCode"] = oneTimeLinkCode;






            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/iam/v3/public/users/me/link/redirection";

        public override HttpMethod Method => HttpMethod.Get;

        public override string[] Consumes => new string[] { };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";

        public Model.ModelOneTimeCodeLinkRedirectionResponse? ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return null;
            }
            else if (code == (HttpStatusCode)201)
            {
                if (ResponseJsonOptions != null)
                    return JsonSerializer.Deserialize<Model.ModelOneTimeCodeLinkRedirectionResponse>(payload, ResponseJsonOptions);
                else
                    return JsonSerializer.Deserialize<Model.ModelOneTimeCodeLinkRedirectionResponse>(payload);
            }
            else if (code == (HttpStatusCode)200)
            {
                return JsonSerializer.Deserialize<Model.ModelOneTimeCodeLinkRedirectionResponse>(payload, ResponseJsonOptions);
            }

            var payloadString = Helper.ConvertInputStreamToString(payload);

            throw new HttpResponseException(code, payloadString);
        }
    }

}