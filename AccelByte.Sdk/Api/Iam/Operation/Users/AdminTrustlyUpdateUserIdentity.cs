// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Iam.Operation
{
    /// <summary>
    /// AdminTrustlyUpdateUserIdentity
    ///
    /// This endpoint ONLY accept **Client Token**
    /// This endpoint is utilized for specific scenarios where **email notifications are disabled**
    /// The user's email will be marked as verified
    /// 
    /// Note:
    /// - emailAddress or password field are optional
    /// - request body can't be empty
    /// 
    /// action code : 10103
    /// </summary>
    public class AdminTrustlyUpdateUserIdentity : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static AdminTrustlyUpdateUserIdentityBuilder Builder { get => new AdminTrustlyUpdateUserIdentityBuilder(); }

        public class AdminTrustlyUpdateUserIdentityBuilder
            : OperationBuilder<AdminTrustlyUpdateUserIdentityBuilder>
        {





            internal AdminTrustlyUpdateUserIdentityBuilder() { }






            public AdminTrustlyUpdateUserIdentity Build(
                ModelUserIdentityUpdateRequestV3 body,
                string namespace_,
                string userId
            )
            {
                AdminTrustlyUpdateUserIdentity op = new AdminTrustlyUpdateUserIdentity(this,
                    body,
                    namespace_,
                    userId
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;

                return op;
            }
        }

        private AdminTrustlyUpdateUserIdentity(AdminTrustlyUpdateUserIdentityBuilder builder,
            ModelUserIdentityUpdateRequestV3 body,
            string namespace_,
            string userId
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["userId"] = userId;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public AdminTrustlyUpdateUserIdentity(
            string namespace_,
            string userId,
            Model.ModelUserIdentityUpdateRequestV3 body
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["userId"] = userId;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/iam/v3/admin/namespaces/{namespace}/users/{userId}/trustly/identity";

        public override HttpMethod Method => HttpMethod.Patch;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";

        public void ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return;
            }

            var payloadString = Helper.ConvertInputStreamToString(payload);

            throw new HttpResponseException(code, payloadString);
        }
    }

}