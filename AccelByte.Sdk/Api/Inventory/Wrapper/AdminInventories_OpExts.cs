// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Inventory.Model;
using AccelByte.Sdk.Api.Inventory.Operation;
using AccelByte.Sdk.Api.Inventory.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class InventoryAdminInventories_OpExts
    {
        public static Inventory.Model.ApimodelsListInventoryResp? Execute(
            this AdminListInventories.AdminListInventoriesBuilder builder,
            string namespace_
        )
        {
            AdminListInventories op = builder.Build(
                namespace_
            );

            return ((Inventory.Wrapper.AdminInventories)builder.WrapperObject!).AdminListInventories(op);
        }
        public static Inventory.Model.ApimodelsInventoryResp? Execute(
            this AdminCreateInventory.AdminCreateInventoryBuilder builder,
            ApimodelsCreateInventoryReq body,
            string namespace_
        )
        {
            AdminCreateInventory op = builder.Build(
                body,
                namespace_
            );

            return ((Inventory.Wrapper.AdminInventories)builder.WrapperObject!).AdminCreateInventory(op);
        }
        public static Inventory.Model.ApimodelsInventoryResp? Execute(
            this AdminGetInventory.AdminGetInventoryBuilder builder,
            string inventoryId,
            string namespace_
        )
        {
            AdminGetInventory op = builder.Build(
                inventoryId,
                namespace_
            );

            return ((Inventory.Wrapper.AdminInventories)builder.WrapperObject!).AdminGetInventory(op);
        }
        public static Inventory.Model.ApimodelsInventoryResp? Execute(
            this AdminUpdateInventory.AdminUpdateInventoryBuilder builder,
            ApimodelsUpdateInventoryReq body,
            string inventoryId,
            string namespace_
        )
        {
            AdminUpdateInventory op = builder.Build(
                body,
                inventoryId,
                namespace_
            );

            return ((Inventory.Wrapper.AdminInventories)builder.WrapperObject!).AdminUpdateInventory(op);
        }
        public static void Execute(
            this DeleteInventory.DeleteInventoryBuilder builder,
            ApimodelsDeleteInventoryReq body,
            string inventoryId,
            string namespace_
        )
        {
            DeleteInventory op = builder.Build(
                body,
                inventoryId,
                namespace_
            );

            ((Inventory.Wrapper.AdminInventories)builder.WrapperObject!).DeleteInventory(op);
        }
    }
}