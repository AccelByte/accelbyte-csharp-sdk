// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Inventory.Model;
using AccelByte.Sdk.Api.Inventory.Operation;
using AccelByte.Sdk.Api.Inventory.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class InventoryPublicItems_OpExts
    {
        public static Inventory.Model.ApimodelsListItemResp? Execute(
            this PublicListItems.PublicListItemsBuilder builder,
            string inventoryId,
            string namespace_
        )
        {
            PublicListItems op = builder.Build(
                inventoryId,
                namespace_
            );

            return ((Inventory.Wrapper.PublicItems)builder.WrapperObject!).PublicListItems(op);
        }
        public static List<Inventory.Model.ApimodelsUpdateItemResp>? Execute(
            this PublicBulkUpdateMyItems.PublicBulkUpdateMyItemsBuilder builder,
            List<ApimodelsUpdateItemReq> body,
            string inventoryId,
            string namespace_
        )
        {
            PublicBulkUpdateMyItems op = builder.Build(
                body,
                inventoryId,
                namespace_
            );

            return ((Inventory.Wrapper.PublicItems)builder.WrapperObject!).PublicBulkUpdateMyItems(op);
        }
        public static List<Inventory.Model.ApimodelsUpdateItemResp>? Execute(
            this PublicBulkRemoveMyItems.PublicBulkRemoveMyItemsBuilder builder,
            ApimodelsBulkRemoveItemsReq body,
            string inventoryId,
            string namespace_
        )
        {
            PublicBulkRemoveMyItems op = builder.Build(
                body,
                inventoryId,
                namespace_
            );

            return ((Inventory.Wrapper.PublicItems)builder.WrapperObject!).PublicBulkRemoveMyItems(op);
        }
        public static Inventory.Model.ApimodelsMoveItemsResp? Execute(
            this PublicMoveMyItems.PublicMoveMyItemsBuilder builder,
            ApimodelsMoveItemsReq body,
            string inventoryId,
            string namespace_
        )
        {
            PublicMoveMyItems op = builder.Build(
                body,
                inventoryId,
                namespace_
            );

            return ((Inventory.Wrapper.PublicItems)builder.WrapperObject!).PublicMoveMyItems(op);
        }
        public static Inventory.Model.ApimodelsItemResp? Execute(
            this PublicGetItem.PublicGetItemBuilder builder,
            string inventoryId,
            string itemId,
            string namespace_
        )
        {
            PublicGetItem op = builder.Build(
                inventoryId,
                itemId,
                namespace_
            );

            return ((Inventory.Wrapper.PublicItems)builder.WrapperObject!).PublicGetItem(op);
        }

        public static Inventory.Model.ApimodelsItemResp<T1, T2>? Execute<T1, T2>(
            this PublicGetItem.PublicGetItemBuilder builder,
            string inventoryId,
            string itemId,
            string namespace_
        )
        {
            PublicGetItem op = builder.Build(
                inventoryId,
                itemId,
                namespace_
            );

            return ((Inventory.Wrapper.PublicItems)builder.WrapperObject!).PublicGetItem<T1, T2>(op);
        }
        public static Inventory.Model.ApimodelsItemResp? Execute(
            this PublicConsumeMyItem.PublicConsumeMyItemBuilder builder,
            ApimodelsConsumeItemReq body,
            string inventoryId,
            string itemId,
            string namespace_
        )
        {
            PublicConsumeMyItem op = builder.Build(
                body,
                inventoryId,
                itemId,
                namespace_
            );

            return ((Inventory.Wrapper.PublicItems)builder.WrapperObject!).PublicConsumeMyItem(op);
        }

        public static Inventory.Model.ApimodelsItemResp<T1, T2>? Execute<T1, T2>(
            this PublicConsumeMyItem.PublicConsumeMyItemBuilder builder,
            ApimodelsConsumeItemReq body,
            string inventoryId,
            string itemId,
            string namespace_
        )
        {
            PublicConsumeMyItem op = builder.Build(
                body,
                inventoryId,
                itemId,
                namespace_
            );

            return ((Inventory.Wrapper.PublicItems)builder.WrapperObject!).PublicConsumeMyItem<T1, T2>(op);
        }
    }
}