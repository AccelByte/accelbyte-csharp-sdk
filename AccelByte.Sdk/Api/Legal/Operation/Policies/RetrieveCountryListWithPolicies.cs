// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Legal.Operation
{
    /// <summary>
    /// retrieveCountryListWithPolicies
    ///
    /// Retrieve List of Countries that have Active Legal Policies.
    /// </summary>
    public class RetrieveCountryListWithPolicies : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static RetrieveCountryListWithPoliciesBuilder Builder { get => new RetrieveCountryListWithPoliciesBuilder(); }

        public class RetrieveCountryListWithPoliciesBuilder
            : OperationBuilder<RetrieveCountryListWithPoliciesBuilder>
        {





            internal RetrieveCountryListWithPoliciesBuilder() { }






            public RetrieveCountryListWithPolicies Build(
            )
            {
                RetrieveCountryListWithPolicies op = new RetrieveCountryListWithPolicies(this
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;
                op.FlightId = FlightId;

                return op;
            }
        }

        private RetrieveCountryListWithPolicies(RetrieveCountryListWithPoliciesBuilder builder
        )
        {







        }
        #endregion

        public RetrieveCountryListWithPolicies(
        )
        {







        }

        public override string Path => "/agreement/public/policies/countries/list";

        public override HttpMethod Method => HttpMethod.Get;

        public override string[] Consumes => new string[] { };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";

        public List<string>? ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return null;
            }
            else if (code == (HttpStatusCode)201)
            {
                if (ResponseJsonOptions != null)
                    return JsonSerializer.Deserialize<List<string>>(payload, ResponseJsonOptions);
                else
                    return JsonSerializer.Deserialize<List<string>>(payload);
            }
            else if (code == (HttpStatusCode)200)
            {
                return JsonSerializer.Deserialize<List<string>>(payload, ResponseJsonOptions);
            }

            var payloadString = Helper.ConvertInputStreamToString(payload);

            throw new HttpResponseException(code, payloadString);
        }
    }

}