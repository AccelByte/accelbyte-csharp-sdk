// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Legal.Operation
{
    /// <summary>
    /// oldCreatePolicyVersion
    ///
    /// Create a version of a particular country-specific policy.
    /// </summary>
    public class OldCreatePolicyVersion : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static OldCreatePolicyVersionBuilder Builder { get => new OldCreatePolicyVersionBuilder(); }

        public class OldCreatePolicyVersionBuilder
            : OperationBuilder<OldCreatePolicyVersionBuilder>
        {


            public Model.CreatePolicyVersionRequest? Body { get; set; }




            internal OldCreatePolicyVersionBuilder() { }



            public OldCreatePolicyVersionBuilder SetBody(Model.CreatePolicyVersionRequest _body)
            {
                Body = _body;
                return this;
            }




            public OldCreatePolicyVersion Build(
                string policyId
            )
            {
                OldCreatePolicyVersion op = new OldCreatePolicyVersion(this,
                    policyId
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;
                op.FlightId = FlightId;

                return op;
            }
        }

        private OldCreatePolicyVersion(OldCreatePolicyVersionBuilder builder,
            string policyId
        )
        {
            PathParams["policyId"] = policyId;





            BodyParams = builder.Body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public OldCreatePolicyVersion(
            string policyId,
            Model.CreatePolicyVersionRequest body
        )
        {
            PathParams["policyId"] = policyId;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/agreement/admin/policies/{policyId}/versions";

        public override HttpMethod Method => HttpMethod.Post;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";

        public Model.CreatePolicyVersionResponse? ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return null;
            }
            else if (code == (HttpStatusCode)201)
            {
                if (ResponseJsonOptions != null)
                    return JsonSerializer.Deserialize<Model.CreatePolicyVersionResponse>(payload, ResponseJsonOptions);
                else
                    return JsonSerializer.Deserialize<Model.CreatePolicyVersionResponse>(payload);
            }
            else if (code == (HttpStatusCode)200)
            {
                return JsonSerializer.Deserialize<Model.CreatePolicyVersionResponse>(payload, ResponseJsonOptions);
            }

            var payloadString = Helper.ConvertInputStreamToString(payload);

            throw new HttpResponseException(code, payloadString);
        }
    }

}