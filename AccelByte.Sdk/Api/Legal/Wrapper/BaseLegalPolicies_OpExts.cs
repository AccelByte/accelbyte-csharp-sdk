// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;
using AccelByte.Sdk.Api.Legal.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class LegalBaseLegalPolicies_OpExts
    {
        public static List<Legal.Model.RetrieveBasePolicyResponse>? Execute(
            this RetrieveAllLegalPolicies.RetrieveAllLegalPoliciesBuilder builder
        )
        {
            RetrieveAllLegalPolicies op = builder.Build(
            );

            return ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).RetrieveAllLegalPolicies(op);
        }
        public static async Task<List<Legal.Model.RetrieveBasePolicyResponse>?> ExecuteAsync(
            this RetrieveAllLegalPolicies.RetrieveAllLegalPoliciesBuilder builder
        )
        {
            RetrieveAllLegalPolicies op = builder.Build(
            );

            return await ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).RetrieveAllLegalPoliciesAsync(op);
        }
        public static Legal.Model.CreateBasePolicyResponse? Execute(
            this OldCreatePolicy.OldCreatePolicyBuilder builder
        )
        {
            OldCreatePolicy op = builder.Build(
            );

            return ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldCreatePolicy(op);
        }
        public static async Task<Legal.Model.CreateBasePolicyResponse?> ExecuteAsync(
            this OldCreatePolicy.OldCreatePolicyBuilder builder
        )
        {
            OldCreatePolicy op = builder.Build(
            );

            return await ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldCreatePolicyAsync(op);
        }
        public static Legal.Model.RetrieveBasePolicyResponse? Execute(
            this OldRetrieveSinglePolicy.OldRetrieveSinglePolicyBuilder builder,
            string basePolicyId
        )
        {
            OldRetrieveSinglePolicy op = builder.Build(
                basePolicyId
            );

            return ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldRetrieveSinglePolicy(op);
        }
        public static async Task<Legal.Model.RetrieveBasePolicyResponse?> ExecuteAsync(
            this OldRetrieveSinglePolicy.OldRetrieveSinglePolicyBuilder builder,
            string basePolicyId
        )
        {
            OldRetrieveSinglePolicy op = builder.Build(
                basePolicyId
            );

            return await ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldRetrieveSinglePolicyAsync(op);
        }
        public static Legal.Model.UpdateBasePolicyResponse? Execute(
            this OldPartialUpdatePolicy.OldPartialUpdatePolicyBuilder builder,
            string basePolicyId
        )
        {
            OldPartialUpdatePolicy op = builder.Build(
                basePolicyId
            );

            return ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldPartialUpdatePolicy(op);
        }
        public static async Task<Legal.Model.UpdateBasePolicyResponse?> ExecuteAsync(
            this OldPartialUpdatePolicy.OldPartialUpdatePolicyBuilder builder,
            string basePolicyId
        )
        {
            OldPartialUpdatePolicy op = builder.Build(
                basePolicyId
            );

            return await ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldPartialUpdatePolicyAsync(op);
        }
        public static Legal.Model.RetrievePolicyResponse? Execute(
            this OldRetrievePolicyCountry.OldRetrievePolicyCountryBuilder builder,
            string basePolicyId,
            string countryCode
        )
        {
            OldRetrievePolicyCountry op = builder.Build(
                basePolicyId,
                countryCode
            );

            return ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldRetrievePolicyCountry(op);
        }
        public static async Task<Legal.Model.RetrievePolicyResponse?> ExecuteAsync(
            this OldRetrievePolicyCountry.OldRetrievePolicyCountryBuilder builder,
            string basePolicyId,
            string countryCode
        )
        {
            OldRetrievePolicyCountry op = builder.Build(
                basePolicyId,
                countryCode
            );

            return await ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldRetrievePolicyCountryAsync(op);
        }
        public static List<Legal.Model.RetrievePolicyTypeResponse>? Execute(
            this OldRetrieveAllPolicyTypes.OldRetrieveAllPolicyTypesBuilder builder,
            int limit
        )
        {
            OldRetrieveAllPolicyTypes op = builder.Build(
                limit
            );

            return ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldRetrieveAllPolicyTypes(op);
        }
        public static async Task<List<Legal.Model.RetrievePolicyTypeResponse>?> ExecuteAsync(
            this OldRetrieveAllPolicyTypes.OldRetrieveAllPolicyTypesBuilder builder,
            int limit
        )
        {
            OldRetrieveAllPolicyTypes op = builder.Build(
                limit
            );

            return await ((Legal.Wrapper.BaseLegalPolicies)builder.WrapperObject!).OldRetrieveAllPolicyTypesAsync(op);
        }
    }
}