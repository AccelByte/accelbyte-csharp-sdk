// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Legal.Wrapper
{
    public class LocalizedPolicyVersions
    {
        private readonly AccelByteSDK _sdk;

        public LocalizedPolicyVersions(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public OldRetrieveLocalizedPolicyVersions.OldRetrieveLocalizedPolicyVersionsBuilder OldRetrieveLocalizedPolicyVersionsOp
        {
            get { return Operation.OldRetrieveLocalizedPolicyVersions.Builder.SetWrapperObject(this); }
        }
        public OldCreateLocalizedPolicyVersion.OldCreateLocalizedPolicyVersionBuilder OldCreateLocalizedPolicyVersionOp
        {
            get { return Operation.OldCreateLocalizedPolicyVersion.Builder.SetWrapperObject(this); }
        }
        public OldRetrieveSingleLocalizedPolicyVersion.OldRetrieveSingleLocalizedPolicyVersionBuilder OldRetrieveSingleLocalizedPolicyVersionOp
        {
            get { return Operation.OldRetrieveSingleLocalizedPolicyVersion.Builder.SetWrapperObject(this); }
        }
        public OldUpdateLocalizedPolicyVersion.OldUpdateLocalizedPolicyVersionBuilder OldUpdateLocalizedPolicyVersionOp
        {
            get { return Operation.OldUpdateLocalizedPolicyVersion.Builder.SetWrapperObject(this); }
        }
        public OldRequestPresignedURL.OldRequestPresignedURLBuilder OldRequestPresignedURLOp
        {
            get { return Operation.OldRequestPresignedURL.Builder.SetWrapperObject(this); }
        }
        public OldSetDefaultLocalizedPolicy.OldSetDefaultLocalizedPolicyBuilder OldSetDefaultLocalizedPolicyOp
        {
            get { return Operation.OldSetDefaultLocalizedPolicy.Builder.SetWrapperObject(this); }
        }
        public OldPublicRetrieveSingleLocalizedPolicyVersion.OldPublicRetrieveSingleLocalizedPolicyVersionBuilder OldPublicRetrieveSingleLocalizedPolicyVersionOp
        {
            get { return Operation.OldPublicRetrieveSingleLocalizedPolicyVersion.Builder.SetWrapperObject(this); }
        }
        #endregion

        public List<Model.RetrieveLocalizedPolicyVersionResponse>? OldRetrieveLocalizedPolicyVersions(OldRetrieveLocalizedPolicyVersions input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.RetrieveLocalizedPolicyVersionResponse>?> OldRetrieveLocalizedPolicyVersionsAsync(OldRetrieveLocalizedPolicyVersions input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.CreateLocalizedPolicyVersionResponse? OldCreateLocalizedPolicyVersion(OldCreateLocalizedPolicyVersion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.CreateLocalizedPolicyVersionResponse?> OldCreateLocalizedPolicyVersionAsync(OldCreateLocalizedPolicyVersion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.RetrieveLocalizedPolicyVersionResponse? OldRetrieveSingleLocalizedPolicyVersion(OldRetrieveSingleLocalizedPolicyVersion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.RetrieveLocalizedPolicyVersionResponse?> OldRetrieveSingleLocalizedPolicyVersionAsync(OldRetrieveSingleLocalizedPolicyVersion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UpdateLocalizedPolicyVersionResponse? OldUpdateLocalizedPolicyVersion(OldUpdateLocalizedPolicyVersion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UpdateLocalizedPolicyVersionResponse?> OldUpdateLocalizedPolicyVersionAsync(OldUpdateLocalizedPolicyVersion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UploadLocalizedPolicyVersionAttachmentResponse? OldRequestPresignedURL(OldRequestPresignedURL input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UploadLocalizedPolicyVersionAttachmentResponse?> OldRequestPresignedURLAsync(OldRequestPresignedURL input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void OldSetDefaultLocalizedPolicy(OldSetDefaultLocalizedPolicy input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task OldSetDefaultLocalizedPolicyAsync(OldSetDefaultLocalizedPolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.RetrieveLocalizedPolicyVersionPublicResponse? OldPublicRetrieveSingleLocalizedPolicyVersion(OldPublicRetrieveSingleLocalizedPolicyVersion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.RetrieveLocalizedPolicyVersionPublicResponse?> OldPublicRetrieveSingleLocalizedPolicyVersionAsync(OldPublicRetrieveSingleLocalizedPolicyVersion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}