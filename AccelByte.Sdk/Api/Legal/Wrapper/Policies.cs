// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Legal.Wrapper
{
    public class Policies
    {
        private readonly AccelByteSDK _sdk;

        public Policies(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public RetrievePolicies.RetrievePoliciesBuilder RetrievePoliciesOp
        {
            get { return Operation.RetrievePolicies.Builder.SetWrapperObject(this); }
        }
        public OldUpdatePolicy.OldUpdatePolicyBuilder OldUpdatePolicyOp
        {
            get { return Operation.OldUpdatePolicy.Builder.SetWrapperObject(this); }
        }
        public OldSetDefaultPolicy.OldSetDefaultPolicyBuilder OldSetDefaultPolicyOp
        {
            get { return Operation.OldSetDefaultPolicy.Builder.SetWrapperObject(this); }
        }
        public RetrieveCountryListWithPolicies.RetrieveCountryListWithPoliciesBuilder RetrieveCountryListWithPoliciesOp
        {
            get { return Operation.RetrieveCountryListWithPolicies.Builder.SetWrapperObject(this); }
        }
        public RetrieveLatestPolicies.RetrieveLatestPoliciesBuilder RetrieveLatestPoliciesOp
        {
            get { return Operation.RetrieveLatestPolicies.Builder.SetWrapperObject(this); }
        }
        public RetrieveLatestPoliciesPublic.RetrieveLatestPoliciesPublicBuilder RetrieveLatestPoliciesPublicOp
        {
            get { return Operation.RetrieveLatestPoliciesPublic.Builder.SetWrapperObject(this); }
        }
        public OldRetrieveLatestPoliciesByNamespaceAndCountryPublic.OldRetrieveLatestPoliciesByNamespaceAndCountryPublicBuilder OldRetrieveLatestPoliciesByNamespaceAndCountryPublicOp
        {
            get { return Operation.OldRetrieveLatestPoliciesByNamespaceAndCountryPublic.Builder.SetWrapperObject(this); }
        }
        #endregion

        public List<Model.RetrievePolicyResponse>? RetrievePolicies(RetrievePolicies input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.RetrievePolicyResponse>?> RetrievePoliciesAsync(RetrievePolicies input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void OldUpdatePolicy(OldUpdatePolicy input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task OldUpdatePolicyAsync(OldUpdatePolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void OldSetDefaultPolicy(OldSetDefaultPolicy input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task OldSetDefaultPolicyAsync(OldSetDefaultPolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<string>? RetrieveCountryListWithPolicies(RetrieveCountryListWithPolicies input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<string>?> RetrieveCountryListWithPoliciesAsync(RetrieveCountryListWithPolicies input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.RetrievePolicyPublicResponse>? RetrieveLatestPolicies(RetrieveLatestPolicies input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.RetrievePolicyPublicResponse>?> RetrieveLatestPoliciesAsync(RetrieveLatestPolicies input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.RetrievePolicyPublicResponse>? RetrieveLatestPoliciesPublic(RetrieveLatestPoliciesPublic input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.RetrievePolicyPublicResponse>?> RetrieveLatestPoliciesPublicAsync(RetrieveLatestPoliciesPublic input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.RetrievePolicyPublicResponse>? OldRetrieveLatestPoliciesByNamespaceAndCountryPublic(OldRetrieveLatestPoliciesByNamespaceAndCountryPublic input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.RetrievePolicyPublicResponse>?> OldRetrieveLatestPoliciesByNamespaceAndCountryPublicAsync(OldRetrieveLatestPoliciesByNamespaceAndCountryPublic input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}