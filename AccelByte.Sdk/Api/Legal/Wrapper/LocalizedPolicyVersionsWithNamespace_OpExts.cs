// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;
using AccelByte.Sdk.Api.Legal.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class LegalLocalizedPolicyVersionsWithNamespace_OpExts
    {
        public static void Execute(
            this DeleteLocalizedPolicy.DeleteLocalizedPolicyBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            DeleteLocalizedPolicy op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).DeleteLocalizedPolicy(op);
        }
        public static async Task ExecuteAsync(
            this DeleteLocalizedPolicy.DeleteLocalizedPolicyBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            DeleteLocalizedPolicy op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            await ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).DeleteLocalizedPolicyAsync(op);
        }
        public static List<Legal.Model.RetrieveLocalizedPolicyVersionResponse>? Execute(
            this RetrieveLocalizedPolicyVersions.RetrieveLocalizedPolicyVersionsBuilder builder,
            string namespace_,
            string policyVersionId
        )
        {
            RetrieveLocalizedPolicyVersions op = builder.Build(
                namespace_,
                policyVersionId
            );

            return ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).RetrieveLocalizedPolicyVersions(op);
        }
        public static async Task<List<Legal.Model.RetrieveLocalizedPolicyVersionResponse>?> ExecuteAsync(
            this RetrieveLocalizedPolicyVersions.RetrieveLocalizedPolicyVersionsBuilder builder,
            string namespace_,
            string policyVersionId
        )
        {
            RetrieveLocalizedPolicyVersions op = builder.Build(
                namespace_,
                policyVersionId
            );

            return await ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).RetrieveLocalizedPolicyVersionsAsync(op);
        }
        public static Legal.Model.CreateLocalizedPolicyVersionResponse? Execute(
            this CreateLocalizedPolicyVersion.CreateLocalizedPolicyVersionBuilder builder,
            string namespace_,
            string policyVersionId
        )
        {
            CreateLocalizedPolicyVersion op = builder.Build(
                namespace_,
                policyVersionId
            );

            return ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).CreateLocalizedPolicyVersion(op);
        }
        public static async Task<Legal.Model.CreateLocalizedPolicyVersionResponse?> ExecuteAsync(
            this CreateLocalizedPolicyVersion.CreateLocalizedPolicyVersionBuilder builder,
            string namespace_,
            string policyVersionId
        )
        {
            CreateLocalizedPolicyVersion op = builder.Build(
                namespace_,
                policyVersionId
            );

            return await ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).CreateLocalizedPolicyVersionAsync(op);
        }
        public static Legal.Model.RetrieveLocalizedPolicyVersionResponse? Execute(
            this RetrieveSingleLocalizedPolicyVersion.RetrieveSingleLocalizedPolicyVersionBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            RetrieveSingleLocalizedPolicyVersion op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            return ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).RetrieveSingleLocalizedPolicyVersion(op);
        }
        public static async Task<Legal.Model.RetrieveLocalizedPolicyVersionResponse?> ExecuteAsync(
            this RetrieveSingleLocalizedPolicyVersion.RetrieveSingleLocalizedPolicyVersionBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            RetrieveSingleLocalizedPolicyVersion op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            return await ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).RetrieveSingleLocalizedPolicyVersionAsync(op);
        }
        public static Legal.Model.UpdateLocalizedPolicyVersionResponse? Execute(
            this UpdateLocalizedPolicyVersion.UpdateLocalizedPolicyVersionBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            UpdateLocalizedPolicyVersion op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            return ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).UpdateLocalizedPolicyVersion(op);
        }
        public static async Task<Legal.Model.UpdateLocalizedPolicyVersionResponse?> ExecuteAsync(
            this UpdateLocalizedPolicyVersion.UpdateLocalizedPolicyVersionBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            UpdateLocalizedPolicyVersion op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            return await ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).UpdateLocalizedPolicyVersionAsync(op);
        }
        public static Legal.Model.UploadLocalizedPolicyVersionAttachmentResponse? Execute(
            this RequestPresignedURL.RequestPresignedURLBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            RequestPresignedURL op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            return ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).RequestPresignedURL(op);
        }
        public static async Task<Legal.Model.UploadLocalizedPolicyVersionAttachmentResponse?> ExecuteAsync(
            this RequestPresignedURL.RequestPresignedURLBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            RequestPresignedURL op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            return await ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).RequestPresignedURLAsync(op);
        }
        public static void Execute(
            this SetDefaultLocalizedPolicy.SetDefaultLocalizedPolicyBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            SetDefaultLocalizedPolicy op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).SetDefaultLocalizedPolicy(op);
        }
        public static async Task ExecuteAsync(
            this SetDefaultLocalizedPolicy.SetDefaultLocalizedPolicyBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            SetDefaultLocalizedPolicy op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            await ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).SetDefaultLocalizedPolicyAsync(op);
        }
        public static Legal.Model.RetrieveLocalizedPolicyVersionPublicResponse? Execute(
            this PublicRetrieveSingleLocalizedPolicyVersion.PublicRetrieveSingleLocalizedPolicyVersionBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            PublicRetrieveSingleLocalizedPolicyVersion op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            return ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).PublicRetrieveSingleLocalizedPolicyVersion(op);
        }
        public static async Task<Legal.Model.RetrieveLocalizedPolicyVersionPublicResponse?> ExecuteAsync(
            this PublicRetrieveSingleLocalizedPolicyVersion.PublicRetrieveSingleLocalizedPolicyVersionBuilder builder,
            string localizedPolicyVersionId,
            string namespace_
        )
        {
            PublicRetrieveSingleLocalizedPolicyVersion op = builder.Build(
                localizedPolicyVersionId,
                namespace_
            );

            return await ((Legal.Wrapper.LocalizedPolicyVersionsWithNamespace)builder.WrapperObject!).PublicRetrieveSingleLocalizedPolicyVersionAsync(op);
        }
    }
}