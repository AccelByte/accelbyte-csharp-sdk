// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Legal.Wrapper
{
    public class BaseLegalPolicies
    {
        private readonly AccelByteSDK _sdk;

        public BaseLegalPolicies(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public RetrieveAllLegalPolicies.RetrieveAllLegalPoliciesBuilder RetrieveAllLegalPoliciesOp
        {
            get { return Operation.RetrieveAllLegalPolicies.Builder.SetWrapperObject(this); }
        }
        public OldCreatePolicy.OldCreatePolicyBuilder OldCreatePolicyOp
        {
            get { return Operation.OldCreatePolicy.Builder.SetWrapperObject(this); }
        }
        public OldRetrieveSinglePolicy.OldRetrieveSinglePolicyBuilder OldRetrieveSinglePolicyOp
        {
            get { return Operation.OldRetrieveSinglePolicy.Builder.SetWrapperObject(this); }
        }
        public OldPartialUpdatePolicy.OldPartialUpdatePolicyBuilder OldPartialUpdatePolicyOp
        {
            get { return Operation.OldPartialUpdatePolicy.Builder.SetWrapperObject(this); }
        }
        public OldRetrievePolicyCountry.OldRetrievePolicyCountryBuilder OldRetrievePolicyCountryOp
        {
            get { return Operation.OldRetrievePolicyCountry.Builder.SetWrapperObject(this); }
        }
        public OldRetrieveAllPolicyTypes.OldRetrieveAllPolicyTypesBuilder OldRetrieveAllPolicyTypesOp
        {
            get { return Operation.OldRetrieveAllPolicyTypes.Builder.SetWrapperObject(this); }
        }
        #endregion

        public List<Model.RetrieveBasePolicyResponse>? RetrieveAllLegalPolicies(RetrieveAllLegalPolicies input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.RetrieveBasePolicyResponse>?> RetrieveAllLegalPoliciesAsync(RetrieveAllLegalPolicies input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.CreateBasePolicyResponse? OldCreatePolicy(OldCreatePolicy input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.CreateBasePolicyResponse?> OldCreatePolicyAsync(OldCreatePolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.RetrieveBasePolicyResponse? OldRetrieveSinglePolicy(OldRetrieveSinglePolicy input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.RetrieveBasePolicyResponse?> OldRetrieveSinglePolicyAsync(OldRetrieveSinglePolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.UpdateBasePolicyResponse? OldPartialUpdatePolicy(OldPartialUpdatePolicy input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.UpdateBasePolicyResponse?> OldPartialUpdatePolicyAsync(OldPartialUpdatePolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.RetrievePolicyResponse? OldRetrievePolicyCountry(OldRetrievePolicyCountry input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.RetrievePolicyResponse?> OldRetrievePolicyCountryAsync(OldRetrievePolicyCountry input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.RetrievePolicyTypeResponse>? OldRetrieveAllPolicyTypes(OldRetrieveAllPolicyTypes input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.RetrievePolicyTypeResponse>?> OldRetrieveAllPolicyTypesAsync(OldRetrieveAllPolicyTypes input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}