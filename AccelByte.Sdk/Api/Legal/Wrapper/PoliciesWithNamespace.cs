// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Legal.Wrapper
{
    public class PoliciesWithNamespace
    {
        private readonly AccelByteSDK _sdk;

        public PoliciesWithNamespace(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public DeletePolicy.DeletePolicyBuilder DeletePolicyOp
        {
            get { return Operation.DeletePolicy.Builder.SetWrapperObject(this); }
        }
        public UpdatePolicy.UpdatePolicyBuilder UpdatePolicyOp
        {
            get { return Operation.UpdatePolicy.Builder.SetWrapperObject(this); }
        }
        public SetDefaultPolicy.SetDefaultPolicyBuilder SetDefaultPolicyOp
        {
            get { return Operation.SetDefaultPolicy.Builder.SetWrapperObject(this); }
        }
        #endregion

        public void DeletePolicy(DeletePolicy input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task DeletePolicyAsync(DeletePolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void UpdatePolicy(UpdatePolicy input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task UpdatePolicyAsync(UpdatePolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void SetDefaultPolicy(SetDefaultPolicy input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task SetDefaultPolicyAsync(SetDefaultPolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}