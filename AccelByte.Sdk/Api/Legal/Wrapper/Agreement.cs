// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Legal.Model;
using AccelByte.Sdk.Api.Legal.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Legal.Wrapper
{
    public class Agreement
    {
        private readonly AccelByteSDK _sdk;

        public Agreement(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public ChangePreferenceConsent.ChangePreferenceConsentBuilder ChangePreferenceConsentOp
        {
            get { return Operation.ChangePreferenceConsent.Builder.SetWrapperObject(this); }
        }
        public OldRetrieveAcceptedAgreements.OldRetrieveAcceptedAgreementsBuilder OldRetrieveAcceptedAgreementsOp
        {
            get { return Operation.OldRetrieveAcceptedAgreements.Builder.SetWrapperObject(this); }
        }
        public OldRetrieveAllUsersByPolicyVersion.OldRetrieveAllUsersByPolicyVersionBuilder OldRetrieveAllUsersByPolicyVersionOp
        {
            get { return Operation.OldRetrieveAllUsersByPolicyVersion.Builder.SetWrapperObject(this); }
        }
        public PublicChangePreferenceConsent.PublicChangePreferenceConsentBuilder PublicChangePreferenceConsentOp
        {
            get { return Operation.PublicChangePreferenceConsent.Builder.SetWrapperObject(this); }
        }
        public AcceptVersionedPolicy.AcceptVersionedPolicyBuilder AcceptVersionedPolicyOp
        {
            get { return Operation.AcceptVersionedPolicy.Builder.SetWrapperObject(this); }
        }
        public RetrieveAgreementsPublic.RetrieveAgreementsPublicBuilder RetrieveAgreementsPublicOp
        {
            get { return Operation.RetrieveAgreementsPublic.Builder.SetWrapperObject(this); }
        }
        public BulkAcceptVersionedPolicy.BulkAcceptVersionedPolicyBuilder BulkAcceptVersionedPolicyOp
        {
            get { return Operation.BulkAcceptVersionedPolicy.Builder.SetWrapperObject(this); }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public IndirectBulkAcceptVersionedPolicyV2.IndirectBulkAcceptVersionedPolicyV2Builder IndirectBulkAcceptVersionedPolicyV2Op
        {
            get { return Operation.IndirectBulkAcceptVersionedPolicyV2.Builder.SetWrapperObject(this); }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicIndirectBulkAcceptVersionedPolicy.PublicIndirectBulkAcceptVersionedPolicyBuilder PublicIndirectBulkAcceptVersionedPolicyOp
        {
            get { return Operation.PublicIndirectBulkAcceptVersionedPolicy.Builder.SetWrapperObject(this); }
        }
        #endregion

        public void ChangePreferenceConsent(ChangePreferenceConsent input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task ChangePreferenceConsentAsync(ChangePreferenceConsent input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.RetrieveAcceptedAgreementResponse>? OldRetrieveAcceptedAgreements(OldRetrieveAcceptedAgreements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.RetrieveAcceptedAgreementResponse>?> OldRetrieveAcceptedAgreementsAsync(OldRetrieveAcceptedAgreements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.PagedRetrieveUserAcceptedAgreementResponse? OldRetrieveAllUsersByPolicyVersion(OldRetrieveAllUsersByPolicyVersion input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.PagedRetrieveUserAcceptedAgreementResponse?> OldRetrieveAllUsersByPolicyVersionAsync(OldRetrieveAllUsersByPolicyVersion input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void PublicChangePreferenceConsent(PublicChangePreferenceConsent input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task PublicChangePreferenceConsentAsync(PublicChangePreferenceConsent input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AcceptVersionedPolicy(AcceptVersionedPolicy input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AcceptVersionedPolicyAsync(AcceptVersionedPolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.RetrieveAcceptedAgreementResponse>? RetrieveAgreementsPublic(RetrieveAgreementsPublic input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.RetrieveAcceptedAgreementResponse>?> RetrieveAgreementsPublicAsync(RetrieveAgreementsPublic input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.AcceptAgreementResponse? BulkAcceptVersionedPolicy(BulkAcceptVersionedPolicy input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.AcceptAgreementResponse?> BulkAcceptVersionedPolicyAsync(BulkAcceptVersionedPolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public Model.AcceptAgreementResponse? IndirectBulkAcceptVersionedPolicyV2(IndirectBulkAcceptVersionedPolicyV2 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.AcceptAgreementResponse?> IndirectBulkAcceptVersionedPolicyV2Async(IndirectBulkAcceptVersionedPolicyV2 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public Model.AcceptAgreementResponse? PublicIndirectBulkAcceptVersionedPolicy(PublicIndirectBulkAcceptVersionedPolicy input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.AcceptAgreementResponse?> PublicIndirectBulkAcceptVersionedPolicyAsync(PublicIndirectBulkAcceptVersionedPolicy input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
    }
}