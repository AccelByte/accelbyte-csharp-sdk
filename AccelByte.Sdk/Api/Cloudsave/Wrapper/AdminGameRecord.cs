// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Cloudsave.Model;
using AccelByte.Sdk.Api.Cloudsave.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Cloudsave.Wrapper
{
    public class AdminGameRecord
    {
        private readonly AccelByteSDK _sdk;

        public AdminGameRecord(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public ListGameRecordsHandlerV1.ListGameRecordsHandlerV1Builder ListGameRecordsHandlerV1Op
        {
            get { return Operation.ListGameRecordsHandlerV1.Builder.SetWrapperObject(this); }
        }
        public AdminGetGameRecordHandlerV1.AdminGetGameRecordHandlerV1Builder AdminGetGameRecordHandlerV1Op
        {
            get { return Operation.AdminGetGameRecordHandlerV1.Builder.SetWrapperObject(this); }
        }
        public AdminPutGameRecordHandlerV1.AdminPutGameRecordHandlerV1Builder AdminPutGameRecordHandlerV1Op
        {
            get { return Operation.AdminPutGameRecordHandlerV1.Builder.SetWrapperObject(this); }
        }
        public AdminPostGameRecordHandlerV1.AdminPostGameRecordHandlerV1Builder AdminPostGameRecordHandlerV1Op
        {
            get { return Operation.AdminPostGameRecordHandlerV1.Builder.SetWrapperObject(this); }
        }
        public AdminDeleteGameRecordHandlerV1.AdminDeleteGameRecordHandlerV1Builder AdminDeleteGameRecordHandlerV1Op
        {
            get { return Operation.AdminDeleteGameRecordHandlerV1.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.ModelsListGameRecordKeysResponse? ListGameRecordsHandlerV1(ListGameRecordsHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsListGameRecordKeysResponse?> ListGameRecordsHandlerV1Async(ListGameRecordsHandlerV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsGameRecordAdminResponse? AdminGetGameRecordHandlerV1(AdminGetGameRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGameRecordAdminResponse?> AdminGetGameRecordHandlerV1Async(AdminGetGameRecordHandlerV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsGameRecordAdminResponse<T1>? AdminGetGameRecordHandlerV1<T1>(AdminGetGameRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGameRecordAdminResponse<T1>?> AdminGetGameRecordHandlerV1Async<T1>(AdminGetGameRecordHandlerV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsGameRecordAdminResponse? AdminPutGameRecordHandlerV1(AdminPutGameRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGameRecordAdminResponse?> AdminPutGameRecordHandlerV1Async(AdminPutGameRecordHandlerV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsGameRecordAdminResponse<T1>? AdminPutGameRecordHandlerV1<T1>(AdminPutGameRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGameRecordAdminResponse<T1>?> AdminPutGameRecordHandlerV1Async<T1>(AdminPutGameRecordHandlerV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsGameRecordAdminResponse? AdminPostGameRecordHandlerV1(AdminPostGameRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGameRecordAdminResponse?> AdminPostGameRecordHandlerV1Async(AdminPostGameRecordHandlerV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsGameRecordAdminResponse<T1>? AdminPostGameRecordHandlerV1<T1>(AdminPostGameRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGameRecordAdminResponse<T1>?> AdminPostGameRecordHandlerV1Async<T1>(AdminPostGameRecordHandlerV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteGameRecordHandlerV1(AdminDeleteGameRecordHandlerV1 input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminDeleteGameRecordHandlerV1Async(AdminDeleteGameRecordHandlerV1 input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}