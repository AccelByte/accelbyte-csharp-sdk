// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Cloudsave.Model;
using AccelByte.Sdk.Api.Cloudsave.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Cloudsave.Wrapper
{
    public class PluginConfig
    {
        private readonly AccelByteSDK _sdk;

        public PluginConfig(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public GetPluginConfig.GetPluginConfigBuilder GetPluginConfigOp
        {
            get { return Operation.GetPluginConfig.Builder.SetWrapperObject(this); }
        }
        public CreatePluginConfig.CreatePluginConfigBuilder CreatePluginConfigOp
        {
            get { return Operation.CreatePluginConfig.Builder.SetWrapperObject(this); }
        }
        public DeletePluginConfig.DeletePluginConfigBuilder DeletePluginConfigOp
        {
            get { return Operation.DeletePluginConfig.Builder.SetWrapperObject(this); }
        }
        public UpdatePluginConfig.UpdatePluginConfigBuilder UpdatePluginConfigOp
        {
            get { return Operation.UpdatePluginConfig.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.ModelsPluginResponse? GetPluginConfig(GetPluginConfig input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPluginResponse? CreatePluginConfig(CreatePluginConfig input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void DeletePluginConfig(DeletePluginConfig input)
        {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsPluginResponse? UpdatePluginConfig(UpdatePluginConfig input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}