// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Api.Platform.Operation;
using AccelByte.Sdk.Api.Platform.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class PlatformWalletDeprecated_OpExts
    {
        public static void Execute(
            this CheckWallet.CheckWalletBuilder builder,
            string currencyCode,
            string namespace_,
            string userId,
            string origin
        )
        {
            CheckWallet op = builder.Build(
                currencyCode,
                namespace_,
                userId,
                origin
            );

            ((Platform.Wrapper.WalletDeprecated)builder.WrapperObject!).CheckWallet(op);
        }

        public static Platform.Model.WalletInfo? Execute(
            this GetUserWallet.GetUserWalletBuilder builder,
            string namespace_,
            string userId,
            string walletId
        )
        {
            GetUserWallet op = builder.Build(
                namespace_,
                userId,
                walletId
            );

            return ((Platform.Wrapper.WalletDeprecated)builder.WrapperObject!).GetUserWallet(op);
        }

        public static Platform.Model.WalletInfo? Execute(
            this DebitUserWallet.DebitUserWalletBuilder builder,
            string namespace_,
            string userId,
            string walletId
        )
        {
            DebitUserWallet op = builder.Build(
                namespace_,
                userId,
                walletId
            );

            return ((Platform.Wrapper.WalletDeprecated)builder.WrapperObject!).DebitUserWallet(op);
        }

        public static void Execute(
            this DisableUserWallet.DisableUserWalletBuilder builder,
            string namespace_,
            string userId,
            string walletId
        )
        {
            DisableUserWallet op = builder.Build(
                namespace_,
                userId,
                walletId
            );

            ((Platform.Wrapper.WalletDeprecated)builder.WrapperObject!).DisableUserWallet(op);
        }

        public static void Execute(
            this EnableUserWallet.EnableUserWalletBuilder builder,
            string namespace_,
            string userId,
            string walletId
        )
        {
            EnableUserWallet op = builder.Build(
                namespace_,
                userId,
                walletId
            );

            ((Platform.Wrapper.WalletDeprecated)builder.WrapperObject!).EnableUserWallet(op);
        }

        public static Platform.Model.DetailedWalletTransactionPagingSlicedResult? Execute(
            this ListUserWalletTransactions.ListUserWalletTransactionsBuilder builder,
            string namespace_,
            string userId,
            string walletId
        )
        {
            ListUserWalletTransactions op = builder.Build(
                namespace_,
                userId,
                walletId
            );

            return ((Platform.Wrapper.WalletDeprecated)builder.WrapperObject!).ListUserWalletTransactions(op);
        }

        public static Platform.Model.WalletPagingSlicedResult? Execute(
            this QueryWallets.QueryWalletsBuilder builder,
            string namespace_
        )
        {
            QueryWallets op = builder.Build(
                namespace_
            );

            return ((Platform.Wrapper.WalletDeprecated)builder.WrapperObject!).QueryWallets(op);
        }

        public static Platform.Model.WalletInfo? Execute(
            this GetWallet.GetWalletBuilder builder,
            string namespace_,
            string walletId
        )
        {
            GetWallet op = builder.Build(
                namespace_,
                walletId
            );

            return ((Platform.Wrapper.WalletDeprecated)builder.WrapperObject!).GetWallet(op);
        }

    }
}