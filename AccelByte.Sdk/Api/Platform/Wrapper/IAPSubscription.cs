// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Api.Platform.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Platform.Wrapper
{
    public class IAPSubscription
    {
        private readonly AccelByteSDK _sdk;

        public IAPSubscription(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public QueryThirdPartySubscription.QueryThirdPartySubscriptionBuilder QueryThirdPartySubscriptionOp
        {
            get { return Operation.QueryThirdPartySubscription.Builder.SetWrapperObject(this); }
        }
        public QueryUserThirdPartySubscription.QueryUserThirdPartySubscriptionBuilder QueryUserThirdPartySubscriptionOp
        {
            get { return Operation.QueryUserThirdPartySubscription.Builder.SetWrapperObject(this); }
        }
        public GetThirdPartyPlatformSubscriptionOwnershipByGroupId.GetThirdPartyPlatformSubscriptionOwnershipByGroupIdBuilder GetThirdPartyPlatformSubscriptionOwnershipByGroupIdOp
        {
            get { return Operation.GetThirdPartyPlatformSubscriptionOwnershipByGroupId.Builder.SetWrapperObject(this); }
        }
        public GetThirdPartyPlatformSubscriptionOwnershipByProductId.GetThirdPartyPlatformSubscriptionOwnershipByProductIdBuilder GetThirdPartyPlatformSubscriptionOwnershipByProductIdOp
        {
            get { return Operation.GetThirdPartyPlatformSubscriptionOwnershipByProductId.Builder.SetWrapperObject(this); }
        }
        public QueryUserThirdPartySubscriptionTransactions.QueryUserThirdPartySubscriptionTransactionsBuilder QueryUserThirdPartySubscriptionTransactionsOp
        {
            get { return Operation.QueryUserThirdPartySubscriptionTransactions.Builder.SetWrapperObject(this); }
        }
        public GetThirdPartySubscriptionDetails.GetThirdPartySubscriptionDetailsBuilder GetThirdPartySubscriptionDetailsOp
        {
            get { return Operation.GetThirdPartySubscriptionDetails.Builder.SetWrapperObject(this); }
        }
        public GetSubscriptionHistory.GetSubscriptionHistoryBuilder GetSubscriptionHistoryOp
        {
            get { return Operation.GetSubscriptionHistory.Builder.SetWrapperObject(this); }
        }
        public SyncSubscriptionTransaction.SyncSubscriptionTransactionBuilder SyncSubscriptionTransactionOp
        {
            get { return Operation.SyncSubscriptionTransaction.Builder.SetWrapperObject(this); }
        }
        public GetThirdPartyUserSubscriptionDetails.GetThirdPartyUserSubscriptionDetailsBuilder GetThirdPartyUserSubscriptionDetailsOp
        {
            get { return Operation.GetThirdPartyUserSubscriptionDetails.Builder.SetWrapperObject(this); }
        }
        public SyncSubscription.SyncSubscriptionBuilder SyncSubscriptionOp
        {
            get { return Operation.SyncSubscription.Builder.SetWrapperObject(this); }
        }
        public PublicQueryUserThirdPartySubscription.PublicQueryUserThirdPartySubscriptionBuilder PublicQueryUserThirdPartySubscriptionOp
        {
            get { return Operation.PublicQueryUserThirdPartySubscription.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.ThirdPartyUserSubscriptionPagingSlicedResult? QueryThirdPartySubscription(QueryThirdPartySubscription input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartyUserSubscriptionPagingSlicedResult?> QueryThirdPartySubscriptionAsync(QueryThirdPartySubscription input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartyUserSubscriptionPagingSlicedResult? QueryUserThirdPartySubscription(QueryUserThirdPartySubscription input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartyUserSubscriptionPagingSlicedResult?> QueryUserThirdPartySubscriptionAsync(QueryUserThirdPartySubscription input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartySubscriptionOwnership? GetThirdPartyPlatformSubscriptionOwnershipByGroupId(GetThirdPartyPlatformSubscriptionOwnershipByGroupId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartySubscriptionOwnership?> GetThirdPartyPlatformSubscriptionOwnershipByGroupIdAsync(GetThirdPartyPlatformSubscriptionOwnershipByGroupId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartySubscriptionOwnership? GetThirdPartyPlatformSubscriptionOwnershipByProductId(GetThirdPartyPlatformSubscriptionOwnershipByProductId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartySubscriptionOwnership?> GetThirdPartyPlatformSubscriptionOwnershipByProductIdAsync(GetThirdPartyPlatformSubscriptionOwnershipByProductId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartySubscriptionTransactionPagingSlicedResult? QueryUserThirdPartySubscriptionTransactions(QueryUserThirdPartySubscriptionTransactions input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartySubscriptionTransactionPagingSlicedResult?> QueryUserThirdPartySubscriptionTransactionsAsync(QueryUserThirdPartySubscriptionTransactions input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartySubscriptionTransactionInfo? GetThirdPartySubscriptionDetails(GetThirdPartySubscriptionDetails input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartySubscriptionTransactionInfo?> GetThirdPartySubscriptionDetailsAsync(GetThirdPartySubscriptionDetails input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartySubscriptionTransactionHistoryPagingSlicedResult? GetSubscriptionHistory(GetSubscriptionHistory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartySubscriptionTransactionHistoryPagingSlicedResult?> GetSubscriptionHistoryAsync(GetSubscriptionHistory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartySubscriptionTransactionInfo? SyncSubscriptionTransaction(SyncSubscriptionTransaction input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartySubscriptionTransactionInfo?> SyncSubscriptionTransactionAsync(SyncSubscriptionTransaction input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartyUserSubscriptionInfo? GetThirdPartyUserSubscriptionDetails(GetThirdPartyUserSubscriptionDetails input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartyUserSubscriptionInfo?> GetThirdPartyUserSubscriptionDetailsAsync(GetThirdPartyUserSubscriptionDetails input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartyUserSubscriptionInfo? SyncSubscription(SyncSubscription input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartyUserSubscriptionInfo?> SyncSubscriptionAsync(SyncSubscription input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ThirdPartyUserSubscriptionPagingSlicedResult? PublicQueryUserThirdPartySubscription(PublicQueryUserThirdPartySubscription input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ThirdPartyUserSubscriptionPagingSlicedResult?> PublicQueryUserThirdPartySubscriptionAsync(PublicQueryUserThirdPartySubscription input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}