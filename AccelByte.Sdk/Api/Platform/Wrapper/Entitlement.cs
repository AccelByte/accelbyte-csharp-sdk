// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Api.Platform.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Platform.Wrapper
{
    public class Entitlement
    {
        private readonly AccelByteSDK _sdk;

        public Entitlement(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public QueryEntitlements.QueryEntitlementsBuilder QueryEntitlementsOp
        {
            get { return Operation.QueryEntitlements.Builder.SetWrapperObject(this); }
        }
        public QueryEntitlementsByItemIds.QueryEntitlementsByItemIdsBuilder QueryEntitlementsByItemIdsOp
        {
            get { return Operation.QueryEntitlementsByItemIds.Builder.SetWrapperObject(this); }
        }
        public EnableEntitlementOriginFeature.EnableEntitlementOriginFeatureBuilder EnableEntitlementOriginFeatureOp
        {
            get { return Operation.EnableEntitlementOriginFeature.Builder.SetWrapperObject(this); }
        }
        public GetEntitlementConfigInfo.GetEntitlementConfigInfoBuilder GetEntitlementConfigInfoOp
        {
            get { return Operation.GetEntitlementConfigInfo.Builder.SetWrapperObject(this); }
        }
        public GrantEntitlements.GrantEntitlementsBuilder GrantEntitlementsOp
        {
            get { return Operation.GrantEntitlements.Builder.SetWrapperObject(this); }
        }
        public RevokeEntitlements.RevokeEntitlementsBuilder RevokeEntitlementsOp
        {
            get { return Operation.RevokeEntitlements.Builder.SetWrapperObject(this); }
        }
        public GetEntitlement.GetEntitlementBuilder GetEntitlementOp
        {
            get { return Operation.GetEntitlement.Builder.SetWrapperObject(this); }
        }
        public GetPlatformEntitlementConfig.GetPlatformEntitlementConfigBuilder GetPlatformEntitlementConfigOp
        {
            get { return Operation.GetPlatformEntitlementConfig.Builder.SetWrapperObject(this); }
        }
        public UpdatePlatformEntitlementConfig.UpdatePlatformEntitlementConfigBuilder UpdatePlatformEntitlementConfigOp
        {
            get { return Operation.UpdatePlatformEntitlementConfig.Builder.SetWrapperObject(this); }
        }
        public QueryUserEntitlements.QueryUserEntitlementsBuilder QueryUserEntitlementsOp
        {
            get { return Operation.QueryUserEntitlements.Builder.SetWrapperObject(this); }
        }
        public GrantUserEntitlement.GrantUserEntitlementBuilder GrantUserEntitlementOp
        {
            get { return Operation.GrantUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public GetUserAppEntitlementByAppId.GetUserAppEntitlementByAppIdBuilder GetUserAppEntitlementByAppIdOp
        {
            get { return Operation.GetUserAppEntitlementByAppId.Builder.SetWrapperObject(this); }
        }
        public QueryUserEntitlementsByAppType.QueryUserEntitlementsByAppTypeBuilder QueryUserEntitlementsByAppTypeOp
        {
            get { return Operation.QueryUserEntitlementsByAppType.Builder.SetWrapperObject(this); }
        }
        public GetUserEntitlementsByIds.GetUserEntitlementsByIdsBuilder GetUserEntitlementsByIdsOp
        {
            get { return Operation.GetUserEntitlementsByIds.Builder.SetWrapperObject(this); }
        }
        public GetUserEntitlementByItemId.GetUserEntitlementByItemIdBuilder GetUserEntitlementByItemIdOp
        {
            get { return Operation.GetUserEntitlementByItemId.Builder.SetWrapperObject(this); }
        }
        public GetUserActiveEntitlementsByItemIds.GetUserActiveEntitlementsByItemIdsBuilder GetUserActiveEntitlementsByItemIdsOp
        {
            get { return Operation.GetUserActiveEntitlementsByItemIds.Builder.SetWrapperObject(this); }
        }
        public GetUserEntitlementBySku.GetUserEntitlementBySkuBuilder GetUserEntitlementBySkuOp
        {
            get { return Operation.GetUserEntitlementBySku.Builder.SetWrapperObject(this); }
        }
        public ExistsAnyUserActiveEntitlement.ExistsAnyUserActiveEntitlementBuilder ExistsAnyUserActiveEntitlementOp
        {
            get { return Operation.ExistsAnyUserActiveEntitlement.Builder.SetWrapperObject(this); }
        }
        public ExistsAnyUserActiveEntitlementByItemIds.ExistsAnyUserActiveEntitlementByItemIdsBuilder ExistsAnyUserActiveEntitlementByItemIdsOp
        {
            get { return Operation.ExistsAnyUserActiveEntitlementByItemIds.Builder.SetWrapperObject(this); }
        }
        public GetUserAppEntitlementOwnershipByAppId.GetUserAppEntitlementOwnershipByAppIdBuilder GetUserAppEntitlementOwnershipByAppIdOp
        {
            get { return Operation.GetUserAppEntitlementOwnershipByAppId.Builder.SetWrapperObject(this); }
        }
        public GetUserEntitlementOwnershipByItemId.GetUserEntitlementOwnershipByItemIdBuilder GetUserEntitlementOwnershipByItemIdOp
        {
            get { return Operation.GetUserEntitlementOwnershipByItemId.Builder.SetWrapperObject(this); }
        }
        public GetUserEntitlementOwnershipByItemIds.GetUserEntitlementOwnershipByItemIdsBuilder GetUserEntitlementOwnershipByItemIdsOp
        {
            get { return Operation.GetUserEntitlementOwnershipByItemIds.Builder.SetWrapperObject(this); }
        }
        public GetUserEntitlementOwnershipBySku.GetUserEntitlementOwnershipBySkuBuilder GetUserEntitlementOwnershipBySkuOp
        {
            get { return Operation.GetUserEntitlementOwnershipBySku.Builder.SetWrapperObject(this); }
        }
        public RevokeAllEntitlements.RevokeAllEntitlementsBuilder RevokeAllEntitlementsOp
        {
            get { return Operation.RevokeAllEntitlements.Builder.SetWrapperObject(this); }
        }
        public RevokeUserEntitlements.RevokeUserEntitlementsBuilder RevokeUserEntitlementsOp
        {
            get { return Operation.RevokeUserEntitlements.Builder.SetWrapperObject(this); }
        }
        public GetUserEntitlement.GetUserEntitlementBuilder GetUserEntitlementOp
        {
            get { return Operation.GetUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public UpdateUserEntitlement.UpdateUserEntitlementBuilder UpdateUserEntitlementOp
        {
            get { return Operation.UpdateUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public ConsumeUserEntitlement.ConsumeUserEntitlementBuilder ConsumeUserEntitlementOp
        {
            get { return Operation.ConsumeUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public DisableUserEntitlement.DisableUserEntitlementBuilder DisableUserEntitlementOp
        {
            get { return Operation.DisableUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public EnableUserEntitlement.EnableUserEntitlementBuilder EnableUserEntitlementOp
        {
            get { return Operation.EnableUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public GetUserEntitlementHistories.GetUserEntitlementHistoriesBuilder GetUserEntitlementHistoriesOp
        {
            get { return Operation.GetUserEntitlementHistories.Builder.SetWrapperObject(this); }
        }
        public RevokeUserEntitlement.RevokeUserEntitlementBuilder RevokeUserEntitlementOp
        {
            get { return Operation.RevokeUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public RevokeUserEntitlementByUseCount.RevokeUserEntitlementByUseCountBuilder RevokeUserEntitlementByUseCountOp
        {
            get { return Operation.RevokeUserEntitlementByUseCount.Builder.SetWrapperObject(this); }
        }
        public PreCheckRevokeUserEntitlementByUseCount.PreCheckRevokeUserEntitlementByUseCountBuilder PreCheckRevokeUserEntitlementByUseCountOp
        {
            get { return Operation.PreCheckRevokeUserEntitlementByUseCount.Builder.SetWrapperObject(this); }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public RevokeUseCount.RevokeUseCountBuilder RevokeUseCountOp
        {
            get { return Operation.RevokeUseCount.Builder.SetWrapperObject(this); }
        }
        public SellUserEntitlement.SellUserEntitlementBuilder SellUserEntitlementOp
        {
            get { return Operation.SellUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public PublicExistsAnyMyActiveEntitlement.PublicExistsAnyMyActiveEntitlementBuilder PublicExistsAnyMyActiveEntitlementOp
        {
            get { return Operation.PublicExistsAnyMyActiveEntitlement.Builder.SetWrapperObject(this); }
        }
        public PublicGetMyAppEntitlementOwnershipByAppId.PublicGetMyAppEntitlementOwnershipByAppIdBuilder PublicGetMyAppEntitlementOwnershipByAppIdOp
        {
            get { return Operation.PublicGetMyAppEntitlementOwnershipByAppId.Builder.SetWrapperObject(this); }
        }
        public PublicGetMyEntitlementOwnershipByItemId.PublicGetMyEntitlementOwnershipByItemIdBuilder PublicGetMyEntitlementOwnershipByItemIdOp
        {
            get { return Operation.PublicGetMyEntitlementOwnershipByItemId.Builder.SetWrapperObject(this); }
        }
        public PublicGetMyEntitlementOwnershipBySku.PublicGetMyEntitlementOwnershipBySkuBuilder PublicGetMyEntitlementOwnershipBySkuOp
        {
            get { return Operation.PublicGetMyEntitlementOwnershipBySku.Builder.SetWrapperObject(this); }
        }
        public PublicGetEntitlementOwnershipToken.PublicGetEntitlementOwnershipTokenBuilder PublicGetEntitlementOwnershipTokenOp
        {
            get { return Operation.PublicGetEntitlementOwnershipToken.Builder.SetWrapperObject(this); }
        }
        public PublicQueryUserEntitlements.PublicQueryUserEntitlementsBuilder PublicQueryUserEntitlementsOp
        {
            get { return Operation.PublicQueryUserEntitlements.Builder.SetWrapperObject(this); }
        }
        public PublicGetUserAppEntitlementByAppId.PublicGetUserAppEntitlementByAppIdBuilder PublicGetUserAppEntitlementByAppIdOp
        {
            get { return Operation.PublicGetUserAppEntitlementByAppId.Builder.SetWrapperObject(this); }
        }
        public PublicQueryUserEntitlementsByAppType.PublicQueryUserEntitlementsByAppTypeBuilder PublicQueryUserEntitlementsByAppTypeOp
        {
            get { return Operation.PublicQueryUserEntitlementsByAppType.Builder.SetWrapperObject(this); }
        }
        public PublicGetUserEntitlementsByIds.PublicGetUserEntitlementsByIdsBuilder PublicGetUserEntitlementsByIdsOp
        {
            get { return Operation.PublicGetUserEntitlementsByIds.Builder.SetWrapperObject(this); }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserEntitlementByItemId.PublicGetUserEntitlementByItemIdBuilder PublicGetUserEntitlementByItemIdOp
        {
            get { return Operation.PublicGetUserEntitlementByItemId.Builder.SetWrapperObject(this); }
        }
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public PublicGetUserEntitlementBySku.PublicGetUserEntitlementBySkuBuilder PublicGetUserEntitlementBySkuOp
        {
            get { return Operation.PublicGetUserEntitlementBySku.Builder.SetWrapperObject(this); }
        }
        public PublicUserEntitlementHistory.PublicUserEntitlementHistoryBuilder PublicUserEntitlementHistoryOp
        {
            get { return Operation.PublicUserEntitlementHistory.Builder.SetWrapperObject(this); }
        }
        public PublicExistsAnyUserActiveEntitlement.PublicExistsAnyUserActiveEntitlementBuilder PublicExistsAnyUserActiveEntitlementOp
        {
            get { return Operation.PublicExistsAnyUserActiveEntitlement.Builder.SetWrapperObject(this); }
        }
        public PublicGetUserAppEntitlementOwnershipByAppId.PublicGetUserAppEntitlementOwnershipByAppIdBuilder PublicGetUserAppEntitlementOwnershipByAppIdOp
        {
            get { return Operation.PublicGetUserAppEntitlementOwnershipByAppId.Builder.SetWrapperObject(this); }
        }
        public PublicGetUserEntitlementOwnershipByItemId.PublicGetUserEntitlementOwnershipByItemIdBuilder PublicGetUserEntitlementOwnershipByItemIdOp
        {
            get { return Operation.PublicGetUserEntitlementOwnershipByItemId.Builder.SetWrapperObject(this); }
        }
        public PublicGetUserEntitlementOwnershipByItemIds.PublicGetUserEntitlementOwnershipByItemIdsBuilder PublicGetUserEntitlementOwnershipByItemIdsOp
        {
            get { return Operation.PublicGetUserEntitlementOwnershipByItemIds.Builder.SetWrapperObject(this); }
        }
        public PublicGetUserEntitlementOwnershipBySku.PublicGetUserEntitlementOwnershipBySkuBuilder PublicGetUserEntitlementOwnershipBySkuOp
        {
            get { return Operation.PublicGetUserEntitlementOwnershipBySku.Builder.SetWrapperObject(this); }
        }
        public PublicGetUserEntitlement.PublicGetUserEntitlementBuilder PublicGetUserEntitlementOp
        {
            get { return Operation.PublicGetUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public PublicConsumeUserEntitlement.PublicConsumeUserEntitlementBuilder PublicConsumeUserEntitlementOp
        {
            get { return Operation.PublicConsumeUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public PublicSellUserEntitlement.PublicSellUserEntitlementBuilder PublicSellUserEntitlementOp
        {
            get { return Operation.PublicSellUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public PublicSplitUserEntitlement.PublicSplitUserEntitlementBuilder PublicSplitUserEntitlementOp
        {
            get { return Operation.PublicSplitUserEntitlement.Builder.SetWrapperObject(this); }
        }
        public PublicTransferUserEntitlement.PublicTransferUserEntitlementBuilder PublicTransferUserEntitlementOp
        {
            get { return Operation.PublicTransferUserEntitlement.Builder.SetWrapperObject(this); }
        }
        #endregion

        public Model.EntitlementPagingSlicedResult? QueryEntitlements(QueryEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementPagingSlicedResult?> QueryEntitlementsAsync(QueryEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementPagingSlicedResult? QueryEntitlementsByItemIds(QueryEntitlementsByItemIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementPagingSlicedResult?> QueryEntitlementsByItemIdsAsync(QueryEntitlementsByItemIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementConfigInfo? EnableEntitlementOriginFeature(EnableEntitlementOriginFeature input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementConfigInfo?> EnableEntitlementOriginFeatureAsync(EnableEntitlementOriginFeature input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementConfigInfo? GetEntitlementConfigInfo(GetEntitlementConfigInfo input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementConfigInfo?> GetEntitlementConfigInfoAsync(GetEntitlementConfigInfo input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.BulkEntitlementGrantResult? GrantEntitlements(GrantEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.BulkEntitlementGrantResult?> GrantEntitlementsAsync(GrantEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.BulkEntitlementRevokeResult? RevokeEntitlements(RevokeEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.BulkEntitlementRevokeResult?> RevokeEntitlementsAsync(RevokeEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementInfo? GetEntitlement(GetEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> GetEntitlementAsync(GetEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementPlatformConfigInfo? GetPlatformEntitlementConfig(GetPlatformEntitlementConfig input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementPlatformConfigInfo?> GetPlatformEntitlementConfigAsync(GetPlatformEntitlementConfig input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementPlatformConfigInfo? UpdatePlatformEntitlementConfig(UpdatePlatformEntitlementConfig input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementPlatformConfigInfo?> UpdatePlatformEntitlementConfigAsync(UpdatePlatformEntitlementConfig input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementPagingSlicedResult? QueryUserEntitlements(QueryUserEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementPagingSlicedResult?> QueryUserEntitlementsAsync(QueryUserEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.StackableEntitlementInfo>? GrantUserEntitlement(GrantUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.StackableEntitlementInfo>?> GrantUserEntitlementAsync(GrantUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.AppEntitlementInfo? GetUserAppEntitlementByAppId(GetUserAppEntitlementByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.AppEntitlementInfo?> GetUserAppEntitlementByAppIdAsync(GetUserAppEntitlementByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.AppEntitlementPagingSlicedResult? QueryUserEntitlementsByAppType(QueryUserEntitlementsByAppType input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.AppEntitlementPagingSlicedResult?> QueryUserEntitlementsByAppTypeAsync(QueryUserEntitlementsByAppType input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.EntitlementInfo>? GetUserEntitlementsByIds(GetUserEntitlementsByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.EntitlementInfo>?> GetUserEntitlementsByIdsAsync(GetUserEntitlementsByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementInfo? GetUserEntitlementByItemId(GetUserEntitlementByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> GetUserEntitlementByItemIdAsync(GetUserEntitlementByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.EntitlementInfo>? GetUserActiveEntitlementsByItemIds(GetUserActiveEntitlementsByItemIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.EntitlementInfo>?> GetUserActiveEntitlementsByItemIdsAsync(GetUserActiveEntitlementsByItemIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementInfo? GetUserEntitlementBySku(GetUserEntitlementBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> GetUserEntitlementBySkuAsync(GetUserEntitlementBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.Ownership? ExistsAnyUserActiveEntitlement(ExistsAnyUserActiveEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.Ownership?> ExistsAnyUserActiveEntitlementAsync(ExistsAnyUserActiveEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.Ownership? ExistsAnyUserActiveEntitlementByItemIds(ExistsAnyUserActiveEntitlementByItemIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.Ownership?> ExistsAnyUserActiveEntitlementByItemIdsAsync(ExistsAnyUserActiveEntitlementByItemIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.Ownership? GetUserAppEntitlementOwnershipByAppId(GetUserAppEntitlementOwnershipByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.Ownership?> GetUserAppEntitlementOwnershipByAppIdAsync(GetUserAppEntitlementOwnershipByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.TimedOwnership? GetUserEntitlementOwnershipByItemId(GetUserEntitlementOwnershipByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.TimedOwnership?> GetUserEntitlementOwnershipByItemIdAsync(GetUserEntitlementOwnershipByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.EntitlementOwnership>? GetUserEntitlementOwnershipByItemIds(GetUserEntitlementOwnershipByItemIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.EntitlementOwnership>?> GetUserEntitlementOwnershipByItemIdsAsync(GetUserEntitlementOwnershipByItemIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.TimedOwnership? GetUserEntitlementOwnershipBySku(GetUserEntitlementOwnershipBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.TimedOwnership?> GetUserEntitlementOwnershipBySkuAsync(GetUserEntitlementOwnershipBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.BulkOperationResult? RevokeAllEntitlements(RevokeAllEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.BulkOperationResult?> RevokeAllEntitlementsAsync(RevokeAllEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.BulkOperationResult? RevokeUserEntitlements(RevokeUserEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.BulkOperationResult?> RevokeUserEntitlementsAsync(RevokeUserEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementInfo? GetUserEntitlement(GetUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> GetUserEntitlementAsync(GetUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementInfo? UpdateUserEntitlement(UpdateUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> UpdateUserEntitlementAsync(UpdateUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementDecrementResult? ConsumeUserEntitlement(ConsumeUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementDecrementResult?> ConsumeUserEntitlementAsync(ConsumeUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementInfo? DisableUserEntitlement(DisableUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> DisableUserEntitlementAsync(DisableUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementInfo? EnableUserEntitlement(EnableUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> EnableUserEntitlementAsync(EnableUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.EntitlementHistoryInfo>? GetUserEntitlementHistories(GetUserEntitlementHistories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.EntitlementHistoryInfo>?> GetUserEntitlementHistoriesAsync(GetUserEntitlementHistories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementInfo? RevokeUserEntitlement(RevokeUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> RevokeUserEntitlementAsync(RevokeUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementIfc? RevokeUserEntitlementByUseCount(RevokeUserEntitlementByUseCount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementIfc?> RevokeUserEntitlementByUseCountAsync(RevokeUserEntitlementByUseCount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementPrechekResult? PreCheckRevokeUserEntitlementByUseCount(PreCheckRevokeUserEntitlementByUseCount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementPrechekResult?> PreCheckRevokeUserEntitlementByUseCountAsync(PreCheckRevokeUserEntitlementByUseCount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public Model.EntitlementInfo? RevokeUseCount(RevokeUseCount input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> RevokeUseCountAsync(RevokeUseCount input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public Model.EntitlementSoldResult? SellUserEntitlement(SellUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementSoldResult?> SellUserEntitlementAsync(SellUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.Ownership? PublicExistsAnyMyActiveEntitlement(PublicExistsAnyMyActiveEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.Ownership?> PublicExistsAnyMyActiveEntitlementAsync(PublicExistsAnyMyActiveEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.Ownership? PublicGetMyAppEntitlementOwnershipByAppId(PublicGetMyAppEntitlementOwnershipByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.Ownership?> PublicGetMyAppEntitlementOwnershipByAppIdAsync(PublicGetMyAppEntitlementOwnershipByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.TimedOwnership? PublicGetMyEntitlementOwnershipByItemId(PublicGetMyEntitlementOwnershipByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.TimedOwnership?> PublicGetMyEntitlementOwnershipByItemIdAsync(PublicGetMyEntitlementOwnershipByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.TimedOwnership? PublicGetMyEntitlementOwnershipBySku(PublicGetMyEntitlementOwnershipBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.TimedOwnership?> PublicGetMyEntitlementOwnershipBySkuAsync(PublicGetMyEntitlementOwnershipBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.OwnershipToken? PublicGetEntitlementOwnershipToken(PublicGetEntitlementOwnershipToken input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.OwnershipToken?> PublicGetEntitlementOwnershipTokenAsync(PublicGetEntitlementOwnershipToken input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementPagingSlicedResult? PublicQueryUserEntitlements(PublicQueryUserEntitlements input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementPagingSlicedResult?> PublicQueryUserEntitlementsAsync(PublicQueryUserEntitlements input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.AppEntitlementInfo? PublicGetUserAppEntitlementByAppId(PublicGetUserAppEntitlementByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.AppEntitlementInfo?> PublicGetUserAppEntitlementByAppIdAsync(PublicGetUserAppEntitlementByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.AppEntitlementPagingSlicedResult? PublicQueryUserEntitlementsByAppType(PublicQueryUserEntitlementsByAppType input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.AppEntitlementPagingSlicedResult?> PublicQueryUserEntitlementsByAppTypeAsync(PublicQueryUserEntitlementsByAppType input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.EntitlementInfo>? PublicGetUserEntitlementsByIds(PublicGetUserEntitlementsByIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.EntitlementInfo>?> PublicGetUserEntitlementsByIdsAsync(PublicGetUserEntitlementsByIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public Model.EntitlementInfo? PublicGetUserEntitlementByItemId(PublicGetUserEntitlementByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> PublicGetUserEntitlementByItemIdAsync(PublicGetUserEntitlementByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
#pragma warning disable ab_deprecated_operation
        [Obsolete(DiagnosticId = "ab_deprecated_operation_wrapper")]
        public Model.EntitlementInfo? PublicGetUserEntitlementBySku(PublicGetUserEntitlementBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> PublicGetUserEntitlementBySkuAsync(PublicGetUserEntitlementBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
#pragma warning restore ab_deprecated_operation
        public List<Model.UserEntitlementHistoryPagingSlicedResult>? PublicUserEntitlementHistory(PublicUserEntitlementHistory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.UserEntitlementHistoryPagingSlicedResult>?> PublicUserEntitlementHistoryAsync(PublicUserEntitlementHistory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.Ownership? PublicExistsAnyUserActiveEntitlement(PublicExistsAnyUserActiveEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.Ownership?> PublicExistsAnyUserActiveEntitlementAsync(PublicExistsAnyUserActiveEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.Ownership? PublicGetUserAppEntitlementOwnershipByAppId(PublicGetUserAppEntitlementOwnershipByAppId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.Ownership?> PublicGetUserAppEntitlementOwnershipByAppIdAsync(PublicGetUserAppEntitlementOwnershipByAppId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.TimedOwnership? PublicGetUserEntitlementOwnershipByItemId(PublicGetUserEntitlementOwnershipByItemId input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.TimedOwnership?> PublicGetUserEntitlementOwnershipByItemIdAsync(PublicGetUserEntitlementOwnershipByItemId input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.EntitlementOwnership>? PublicGetUserEntitlementOwnershipByItemIds(PublicGetUserEntitlementOwnershipByItemIds input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.EntitlementOwnership>?> PublicGetUserEntitlementOwnershipByItemIdsAsync(PublicGetUserEntitlementOwnershipByItemIds input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.TimedOwnership? PublicGetUserEntitlementOwnershipBySku(PublicGetUserEntitlementOwnershipBySku input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.TimedOwnership?> PublicGetUserEntitlementOwnershipBySkuAsync(PublicGetUserEntitlementOwnershipBySku input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementInfo? PublicGetUserEntitlement(PublicGetUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementInfo?> PublicGetUserEntitlementAsync(PublicGetUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementDecrementResult? PublicConsumeUserEntitlement(PublicConsumeUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementDecrementResult?> PublicConsumeUserEntitlementAsync(PublicConsumeUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementSoldResult? PublicSellUserEntitlement(PublicSellUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementSoldResult?> PublicSellUserEntitlementAsync(PublicSellUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementSplitResult? PublicSplitUserEntitlement(PublicSplitUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementSplitResult?> PublicSplitUserEntitlementAsync(PublicSplitUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.EntitlementTransferResult? PublicTransferUserEntitlement(PublicTransferUserEntitlement input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.EntitlementTransferResult?> PublicTransferUserEntitlementAsync(PublicTransferUserEntitlement input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}