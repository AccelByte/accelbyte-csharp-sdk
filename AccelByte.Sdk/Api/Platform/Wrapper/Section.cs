// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Api.Platform.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Platform.Wrapper
{
    public class Section
    {
        private readonly AccelByteSDK _sdk;

        public Section(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public QuerySections.QuerySectionsBuilder QuerySectionsOp
        {
            get { return Operation.QuerySections.Builder.SetWrapperObject(this); }
        }
        public CreateSection.CreateSectionBuilder CreateSectionOp
        {
            get { return Operation.CreateSection.Builder.SetWrapperObject(this); }
        }
        public PurgeExpiredSection.PurgeExpiredSectionBuilder PurgeExpiredSectionOp
        {
            get { return Operation.PurgeExpiredSection.Builder.SetWrapperObject(this); }
        }
        public GetSection.GetSectionBuilder GetSectionOp
        {
            get { return Operation.GetSection.Builder.SetWrapperObject(this); }
        }
        public UpdateSection.UpdateSectionBuilder UpdateSectionOp
        {
            get { return Operation.UpdateSection.Builder.SetWrapperObject(this); }
        }
        public DeleteSection.DeleteSectionBuilder DeleteSectionOp
        {
            get { return Operation.DeleteSection.Builder.SetWrapperObject(this); }
        }
        public PublicListActiveSections.PublicListActiveSectionsBuilder PublicListActiveSectionsOp
        {
            get { return Operation.PublicListActiveSections.Builder.SetWrapperObject(this); }
        }
        #endregion
        
        public Model.SectionPagingSlicedResult? QuerySections(QuerySections input) {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.FullSectionInfo? CreateSection(CreateSection input) {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void PurgeExpiredSection(PurgeExpiredSection input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.FullSectionInfo? GetSection(GetSection input) {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public Model.FullSectionInfo? UpdateSection(UpdateSection input) {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public void DeleteSection(DeleteSection input) {
            var response = _sdk.RunRequest(input);

            input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
        public List<Model.SectionInfo>? PublicListActiveSections(PublicListActiveSections input) {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse(
                    response.Code, 
                    response.ContentType,
                    response.Payload);
        }
    }
}