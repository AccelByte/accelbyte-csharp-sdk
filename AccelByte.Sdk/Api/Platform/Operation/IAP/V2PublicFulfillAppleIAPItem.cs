// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Platform.Operation
{
    /// <summary>
    /// V2PublicFulfillAppleIAPItem
    ///
    /// Verify apple iap transaction and fulfill item, support subscriptionOther detail info:
    ///   * Returns :
    /// </summary>
    public class V2PublicFulfillAppleIAPItem : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static V2PublicFulfillAppleIAPItemBuilder Builder { get => new V2PublicFulfillAppleIAPItemBuilder(); }

        public class V2PublicFulfillAppleIAPItemBuilder
            : OperationBuilder<V2PublicFulfillAppleIAPItemBuilder>
        {


            public Model.AppleIAPRequest? Body { get; set; }




            internal V2PublicFulfillAppleIAPItemBuilder() { }



            public V2PublicFulfillAppleIAPItemBuilder SetBody(Model.AppleIAPRequest _body)
            {
                Body = _body;
                return this;
            }




            public V2PublicFulfillAppleIAPItem Build(
                string namespace_,
                string userId
            )
            {
                V2PublicFulfillAppleIAPItem op = new V2PublicFulfillAppleIAPItem(this,
                    namespace_,
                    userId
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;
                op.FlightId = FlightId;

                return op;
            }
        }

        private V2PublicFulfillAppleIAPItem(V2PublicFulfillAppleIAPItemBuilder builder,
            string namespace_,
            string userId
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["userId"] = userId;





            BodyParams = builder.Body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public V2PublicFulfillAppleIAPItem(
            string namespace_,
            string userId,
            Model.AppleIAPRequest body
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["userId"] = userId;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/platform/v2/public/namespaces/{namespace}/users/{userId}/iap/apple/receipt";

        public override HttpMethod Method => HttpMethod.Put;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";

        public void ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return;
            }

            var payloadString = Helper.ConvertInputStreamToString(payload);

            throw new HttpResponseException(code, payloadString);
        }
    }

}