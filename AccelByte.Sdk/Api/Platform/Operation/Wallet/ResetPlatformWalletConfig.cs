// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Platform.Operation
{
    /// <summary>
    /// resetPlatformWalletConfig
    ///
    /// Reset platform wallet config to default config.
    /// Other detail info:
    /// 
    ///   * Required permission : resource="ADMIN:NAMESPACE:{namespace}:WALLET:CONFIG", action=4 (UPDATE)
    ///   *  Returns : platform wallet config
    /// </summary>
    public class ResetPlatformWalletConfig : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static ResetPlatformWalletConfigBuilder Builder = new ResetPlatformWalletConfigBuilder();

        public class ResetPlatformWalletConfigBuilder
            : OperationBuilder<ResetPlatformWalletConfigBuilder>
        {





            internal ResetPlatformWalletConfigBuilder() { }






            public ResetPlatformWalletConfig Build(
                string namespace_,
                ResetPlatformWalletConfigPlatform platform
            )
            {
                ResetPlatformWalletConfig op = new ResetPlatformWalletConfig(this,
                    namespace_,                    
                    platform                    
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;

                return op;
            }
        }

        private ResetPlatformWalletConfig(ResetPlatformWalletConfigBuilder builder,
            string namespace_,
            ResetPlatformWalletConfigPlatform platform
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["platform"] = platform.Value;
            
            

            
            
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public ResetPlatformWalletConfig(
            string namespace_,            
            ResetPlatformWalletConfigPlatform platform            
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["platform"] = platform.Value;
            
            

            
            
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/platform/admin/namespaces/{namespace}/platforms/{platform}/wallet/config/reset";

        public override HttpMethod Method => HttpMethod.Put;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";
        
        public Model.PlatformWalletConfigInfo? ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {            
            if (code == (HttpStatusCode)204)
            {
                return null;
            }
            else if (code == (HttpStatusCode)201)
            {
                return JsonSerializer.Deserialize<Model.PlatformWalletConfigInfo>(payload);
            }
            else if (code == (HttpStatusCode)200)
            {
                return JsonSerializer.Deserialize<Model.PlatformWalletConfigInfo>(payload);
            }
            
            var payloadString = Helper.ConvertInputStreamToString(payload);
            
            throw new HttpResponseException(code, payloadString);
        }
    }

    public class ResetPlatformWalletConfigPlatform : StringEnum<ResetPlatformWalletConfigPlatform>
    {
        public static readonly ResetPlatformWalletConfigPlatform Epic
            = new ResetPlatformWalletConfigPlatform("Epic");

        public static readonly ResetPlatformWalletConfigPlatform Googleplay
            = new ResetPlatformWalletConfigPlatform("GooglePlay");

        public static readonly ResetPlatformWalletConfigPlatform Ios
            = new ResetPlatformWalletConfigPlatform("IOS");

        public static readonly ResetPlatformWalletConfigPlatform Nintendo
            = new ResetPlatformWalletConfigPlatform("Nintendo");

        public static readonly ResetPlatformWalletConfigPlatform Other
            = new ResetPlatformWalletConfigPlatform("Other");

        public static readonly ResetPlatformWalletConfigPlatform Playstation
            = new ResetPlatformWalletConfigPlatform("Playstation");

        public static readonly ResetPlatformWalletConfigPlatform Steam
            = new ResetPlatformWalletConfigPlatform("Steam");

        public static readonly ResetPlatformWalletConfigPlatform Xbox
            = new ResetPlatformWalletConfigPlatform("Xbox");


        public static implicit operator ResetPlatformWalletConfigPlatform(string value)
        {
            return NewValue(value);
        }

        public ResetPlatformWalletConfigPlatform(string enumValue)
            : base(enumValue)
        {

        }
    }

}