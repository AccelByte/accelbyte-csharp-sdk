// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Platform.Operation
{
    /// <summary>
    /// updatePlatformWalletConfig
    ///
    /// Update platform wallet config.
    /// Other detail info:
    /// 
    ///   * Required permission : resource="ADMIN:NAMESPACE:{namespace}:WALLET:CONFIG", action=4 (UPDATE)
    ///   *  Returns : platform wallet config
    /// </summary>
    public class UpdatePlatformWalletConfig : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static UpdatePlatformWalletConfigBuilder Builder = new UpdatePlatformWalletConfigBuilder();

        public class UpdatePlatformWalletConfigBuilder
            : OperationBuilder<UpdatePlatformWalletConfigBuilder>
        {


            public Model.PlatformWalletConfigUpdate? Body { get; set; }




            internal UpdatePlatformWalletConfigBuilder() { }



            public UpdatePlatformWalletConfigBuilder SetBody(Model.PlatformWalletConfigUpdate _body)
            {
                Body = _body;
                return this;
            }




            public UpdatePlatformWalletConfig Build(
                string namespace_,
                UpdatePlatformWalletConfigPlatform platform
            )
            {
                UpdatePlatformWalletConfig op = new UpdatePlatformWalletConfig(this,
                    namespace_,
                    platform
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;

                return op;
            }
        }

        private UpdatePlatformWalletConfig(UpdatePlatformWalletConfigBuilder builder,
            string namespace_,
            UpdatePlatformWalletConfigPlatform platform
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["platform"] = platform.Value;





            BodyParams = builder.Body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public UpdatePlatformWalletConfig(
            string namespace_,
            UpdatePlatformWalletConfigPlatform platform,
            Model.PlatformWalletConfigUpdate body
        )
        {
            PathParams["namespace"] = namespace_;
            PathParams["platform"] = platform.Value;





            BodyParams = body;


            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/platform/admin/namespaces/{namespace}/platforms/{platform}/wallet/config";

        public override HttpMethod Method => HttpMethod.Put;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";

        public Model.PlatformWalletConfigInfo? ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)204)
            {
                return null;
            }
            else if (code == (HttpStatusCode)201)
            {
                return JsonSerializer.Deserialize<Model.PlatformWalletConfigInfo>(payload);
            }
            else if (code == (HttpStatusCode)200)
            {
                return JsonSerializer.Deserialize<Model.PlatformWalletConfigInfo>(payload);
            }

            var payloadString = Helper.ConvertInputStreamToString(payload);

            throw new HttpResponseException(code, payloadString);
        }
    }

    public class UpdatePlatformWalletConfigPlatform : StringEnum<UpdatePlatformWalletConfigPlatform>
    {
        public static readonly UpdatePlatformWalletConfigPlatform Epic
            = new UpdatePlatformWalletConfigPlatform("Epic");

        public static readonly UpdatePlatformWalletConfigPlatform GooglePlay
            = new UpdatePlatformWalletConfigPlatform("GooglePlay");

        public static readonly UpdatePlatformWalletConfigPlatform IOS
            = new UpdatePlatformWalletConfigPlatform("IOS");

        public static readonly UpdatePlatformWalletConfigPlatform Nintendo
            = new UpdatePlatformWalletConfigPlatform("Nintendo");

        public static readonly UpdatePlatformWalletConfigPlatform Other
            = new UpdatePlatformWalletConfigPlatform("Other");

        public static readonly UpdatePlatformWalletConfigPlatform Playstation
            = new UpdatePlatformWalletConfigPlatform("Playstation");

        public static readonly UpdatePlatformWalletConfigPlatform Steam
            = new UpdatePlatformWalletConfigPlatform("Steam");

        public static readonly UpdatePlatformWalletConfigPlatform Xbox
            = new UpdatePlatformWalletConfigPlatform("Xbox");


        public static implicit operator UpdatePlatformWalletConfigPlatform(string value)
        {
            return NewValue(value);
        }

        public UpdatePlatformWalletConfigPlatform(string enumValue)
            : base(enumValue)
        {

        }
    }

}