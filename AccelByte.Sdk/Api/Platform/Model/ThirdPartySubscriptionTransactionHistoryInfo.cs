// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class ThirdPartySubscriptionTransactionHistoryInfo : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("createdAt")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? CreatedAt { get; set; }

        [JsonPropertyName("expiredAt")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? ExpiredAt { get; set; }

        [JsonPropertyName("id")]
        public string? Id { get; set; }

        [JsonPropertyName("lastTransactionId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? LastTransactionId { get; set; }

        [JsonPropertyName("namespace")]
        public string? Namespace { get; set; }

        [JsonPropertyName("operator")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Operator { get; set; }

        [JsonPropertyName("reason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Reason { get; set; }

        [JsonPropertyName("status")]
        [JsonStringEnum]
        public ThirdPartySubscriptionTransactionHistoryInfoStatus? Status { get; set; }

        [JsonPropertyName("subscriptionProductId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? SubscriptionProductId { get; set; }

        [JsonPropertyName("thirdPartySubscriptionId")]
        public string? ThirdPartySubscriptionId { get; set; }

        [JsonPropertyName("updatedAt")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? UpdatedAt { get; set; }

        [JsonPropertyName("userId")]
        public string? UserId { get; set; }

    }



    public class ThirdPartySubscriptionTransactionHistoryInfoStatus : StringEnum<ThirdPartySubscriptionTransactionHistoryInfoStatus>
    {
        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus ACTIVE
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("ACTIVE");

        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus BILLINGRETRYPERIOD
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("BILLING_RETRY_PERIOD");

        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus CANCELED
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("CANCELED");

        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus EXPIRED
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("EXPIRED");

        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus INGRACEPERIOD
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("IN_GRACE_PERIOD");

        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus ONHOLD
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("ON_HOLD");

        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus PAUSED
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("PAUSED");

        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus PENDING
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("PENDING");

        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus REVOKED
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("REVOKED");

        public static readonly ThirdPartySubscriptionTransactionHistoryInfoStatus UNKNOWN
            = new ThirdPartySubscriptionTransactionHistoryInfoStatus("UNKNOWN");


        public static implicit operator ThirdPartySubscriptionTransactionHistoryInfoStatus(string value)
        {
            return NewValue(value);
        }

        public ThirdPartySubscriptionTransactionHistoryInfoStatus(string enumValue)
            : base(enumValue)
        {

        }
    }
}