// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class DLCRecord : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Id { get; set; }

        [JsonPropertyName("obtainedAt")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? ObtainedAt { get; set; }

        [JsonPropertyName("revokeResults")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<RevokeResult>? RevokeResults { get; set; }

        [JsonPropertyName("revokedAt")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? RevokedAt { get; set; }

        [JsonPropertyName("rewards")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<PlatformReward>? Rewards { get; set; }

        [JsonPropertyName("sources")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<string>? Sources { get; set; }

        [JsonPropertyName("status")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public DLCRecordStatus? Status { get; set; }

    }



    public class DLCRecordStatus : StringEnum<DLCRecordStatus>
    {
        public static readonly DLCRecordStatus FULFILLED
            = new DLCRecordStatus("FULFILLED");

        public static readonly DLCRecordStatus REVOKED
            = new DLCRecordStatus("REVOKED");


        public static implicit operator DLCRecordStatus(string value)
        {
            return NewValue(value);
        }

        public DLCRecordStatus(string enumValue)
            : base(enumValue)
        {

        }
    }    
}