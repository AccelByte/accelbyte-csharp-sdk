// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class RevokeEntitlement : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("clazz")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public RevokeEntitlementClazz? Clazz { get; set; }

        [JsonPropertyName("entitlementId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? EntitlementId { get; set; }

        [JsonPropertyName("type")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public RevokeEntitlementType? Type { get; set; }

    }



    public class RevokeEntitlementClazz : StringEnum<RevokeEntitlementClazz>
    {
        public static readonly RevokeEntitlementClazz APP
            = new RevokeEntitlementClazz("APP");

        public static readonly RevokeEntitlementClazz CODE
            = new RevokeEntitlementClazz("CODE");

        public static readonly RevokeEntitlementClazz ENTITLEMENT
            = new RevokeEntitlementClazz("ENTITLEMENT");

        public static readonly RevokeEntitlementClazz LOOTBOX
            = new RevokeEntitlementClazz("LOOTBOX");

        public static readonly RevokeEntitlementClazz MEDIA
            = new RevokeEntitlementClazz("MEDIA");

        public static readonly RevokeEntitlementClazz OPTIONBOX
            = new RevokeEntitlementClazz("OPTIONBOX");

        public static readonly RevokeEntitlementClazz SUBSCRIPTION
            = new RevokeEntitlementClazz("SUBSCRIPTION");


        public static implicit operator RevokeEntitlementClazz(string value)
        {
            return NewValue(value);
        }

        public RevokeEntitlementClazz(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class RevokeEntitlementType : StringEnum<RevokeEntitlementType>
    {
        public static readonly RevokeEntitlementType CONSUMABLE
            = new RevokeEntitlementType("CONSUMABLE");

        public static readonly RevokeEntitlementType DURABLE
            = new RevokeEntitlementType("DURABLE");


        public static implicit operator RevokeEntitlementType(string value)
        {
            return NewValue(value);
        }

        public RevokeEntitlementType(string enumValue)
            : base(enumValue)
        {

        }
    }
}