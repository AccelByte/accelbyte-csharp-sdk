// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class RevocationRequest : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("meta")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public Dictionary<string, object>? Meta { get; set; }

        [JsonPropertyName("revokeEntries")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<RevokeEntry>? RevokeEntries { get; set; }

        [JsonPropertyName("source")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public RevocationRequestSource? Source { get; set; }

        [JsonPropertyName("transactionId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? TransactionId { get; set; }

    }

    public class RevocationRequest<T1> : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("meta")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public T1? Meta { get; set; }

        [JsonPropertyName("revokeEntries")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<RevokeEntry>? RevokeEntries { get; set; }

        [JsonPropertyName("source")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public RevocationRequestSource? Source { get; set; }

        [JsonPropertyName("transactionId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? TransactionId { get; set; }

    }


    public class RevocationRequestSource : StringEnum<RevocationRequestSource>
    {
        public static readonly RevocationRequestSource DLC
            = new RevocationRequestSource("DLC");

        public static readonly RevocationRequestSource IAP
            = new RevocationRequestSource("IAP");

        public static readonly RevocationRequestSource ORDER
            = new RevocationRequestSource("ORDER");

        public static readonly RevocationRequestSource OTHER
            = new RevocationRequestSource("OTHER");


        public static implicit operator RevocationRequestSource(string value)
        {
            return NewValue(value);
        }

        public RevocationRequestSource(string enumValue)
            : base(enumValue)
        {

        }
    }
}