// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class EntitlementUpdate : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("endDate")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? EndDate { get; set; }

        [JsonPropertyName("nullFieldList")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<string>? NullFieldList { get; set; }

        [JsonPropertyName("origin")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public EntitlementUpdateOrigin? Origin { get; set; }

        [JsonPropertyName("reason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Reason { get; set; }

        [JsonPropertyName("startDate")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? StartDate { get; set; }

        [JsonPropertyName("status")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public EntitlementUpdateStatus? Status { get; set; }

        [JsonPropertyName("useCount")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public int? UseCount { get; set; }

    }



    public class EntitlementUpdateOrigin : StringEnum<EntitlementUpdateOrigin>
    {
        public static readonly EntitlementUpdateOrigin Epic
            = new EntitlementUpdateOrigin("Epic");

        public static readonly EntitlementUpdateOrigin GooglePlay
            = new EntitlementUpdateOrigin("GooglePlay");

        public static readonly EntitlementUpdateOrigin IOS
            = new EntitlementUpdateOrigin("IOS");

        public static readonly EntitlementUpdateOrigin Nintendo
            = new EntitlementUpdateOrigin("Nintendo");

        public static readonly EntitlementUpdateOrigin Oculus
            = new EntitlementUpdateOrigin("Oculus");

        public static readonly EntitlementUpdateOrigin Other
            = new EntitlementUpdateOrigin("Other");

        public static readonly EntitlementUpdateOrigin Playstation
            = new EntitlementUpdateOrigin("Playstation");

        public static readonly EntitlementUpdateOrigin Steam
            = new EntitlementUpdateOrigin("Steam");

        public static readonly EntitlementUpdateOrigin System
            = new EntitlementUpdateOrigin("System");

        public static readonly EntitlementUpdateOrigin Twitch
            = new EntitlementUpdateOrigin("Twitch");

        public static readonly EntitlementUpdateOrigin Xbox
            = new EntitlementUpdateOrigin("Xbox");


        public static implicit operator EntitlementUpdateOrigin(string value)
        {
            return NewValue(value);
        }

        public EntitlementUpdateOrigin(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class EntitlementUpdateStatus : StringEnum<EntitlementUpdateStatus>
    {
        public static readonly EntitlementUpdateStatus ACTIVE
            = new EntitlementUpdateStatus("ACTIVE");

        public static readonly EntitlementUpdateStatus CONSUMED
            = new EntitlementUpdateStatus("CONSUMED");

        public static readonly EntitlementUpdateStatus INACTIVE
            = new EntitlementUpdateStatus("INACTIVE");

        public static readonly EntitlementUpdateStatus REVOKED
            = new EntitlementUpdateStatus("REVOKED");

        public static readonly EntitlementUpdateStatus SOLD
            = new EntitlementUpdateStatus("SOLD");


        public static implicit operator EntitlementUpdateStatus(string value)
        {
            return NewValue(value);
        }

        public EntitlementUpdateStatus(string enumValue)
            : base(enumValue)
        {

        }
    }
}