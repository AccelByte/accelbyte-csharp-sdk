// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class Action : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("operations")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<Operation>? Operations { get; set; }

        [JsonPropertyName("status")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public ActionStatus? Status { get; set; }

        [JsonPropertyName("statusReason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? StatusReason { get; set; }

        [JsonPropertyName("userId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? UserId { get; set; }

    }



    public class ActionStatus : StringEnum<ActionStatus>
    {
        public static readonly ActionStatus FAILED
            = new ActionStatus("FAILED");

        public static readonly ActionStatus INIT
            = new ActionStatus("INIT");

        public static readonly ActionStatus SKIPPED
            = new ActionStatus("SKIPPED");

        public static readonly ActionStatus SUCCESS
            = new ActionStatus("SUCCESS");


        public static implicit operator ActionStatus(string value)
        {
            return NewValue(value);
        }

        public ActionStatus(string enumValue)
            : base(enumValue)
        {

        }
    }
}