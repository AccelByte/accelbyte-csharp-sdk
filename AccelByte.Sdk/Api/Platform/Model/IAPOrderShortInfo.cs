// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class IAPOrderShortInfo : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("iapOrderNo")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? IapOrderNo { get; set; }

        [JsonPropertyName("status")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public IAPOrderShortInfoStatus? Status { get; set; }

    }



    public class IAPOrderShortInfoStatus : StringEnum<IAPOrderShortInfoStatus>
    {
        public static readonly IAPOrderShortInfoStatus FAILED
            = new IAPOrderShortInfoStatus("FAILED");

        public static readonly IAPOrderShortInfoStatus FULFILLED
            = new IAPOrderShortInfoStatus("FULFILLED");

        public static readonly IAPOrderShortInfoStatus PARTIALREVOKED
            = new IAPOrderShortInfoStatus("PARTIAL_REVOKED");

        public static readonly IAPOrderShortInfoStatus REVOKED
            = new IAPOrderShortInfoStatus("REVOKED");

        public static readonly IAPOrderShortInfoStatus REVOKEFAILED
            = new IAPOrderShortInfoStatus("REVOKE_FAILED");

        public static readonly IAPOrderShortInfoStatus VERIFIED
            = new IAPOrderShortInfoStatus("VERIFIED");


        public static implicit operator IAPOrderShortInfoStatus(string value)
        {
            return NewValue(value);
        }

        public IAPOrderShortInfoStatus(string enumValue)
            : base(enumValue)
        {

        }
    }
}