// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class OculusReconcileResult : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("iapOrderStatus")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public OculusReconcileResultIapOrderStatus? IapOrderStatus { get; set; }

        [JsonPropertyName("itemIdentity")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? ItemIdentity { get; set; }

        [JsonPropertyName("itemIdentityType")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public OculusReconcileResultItemIdentityType? ItemIdentityType { get; set; }

        [JsonPropertyName("oculusItemSku")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? OculusItemSku { get; set; }

        [JsonPropertyName("transactionId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? TransactionId { get; set; }

    }



    public class OculusReconcileResultIapOrderStatus : StringEnum<OculusReconcileResultIapOrderStatus>
    {
        public static readonly OculusReconcileResultIapOrderStatus FAILED
            = new OculusReconcileResultIapOrderStatus("FAILED");

        public static readonly OculusReconcileResultIapOrderStatus FULFILLED
            = new OculusReconcileResultIapOrderStatus("FULFILLED");

        public static readonly OculusReconcileResultIapOrderStatus PARTIALREVOKED
            = new OculusReconcileResultIapOrderStatus("PARTIAL_REVOKED");

        public static readonly OculusReconcileResultIapOrderStatus REVOKED
            = new OculusReconcileResultIapOrderStatus("REVOKED");

        public static readonly OculusReconcileResultIapOrderStatus REVOKEFAILED
            = new OculusReconcileResultIapOrderStatus("REVOKE_FAILED");

        public static readonly OculusReconcileResultIapOrderStatus VERIFIED
            = new OculusReconcileResultIapOrderStatus("VERIFIED");


        public static implicit operator OculusReconcileResultIapOrderStatus(string value)
        {
            return NewValue(value);
        }

        public OculusReconcileResultIapOrderStatus(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class OculusReconcileResultItemIdentityType : StringEnum<OculusReconcileResultItemIdentityType>
    {
        public static readonly OculusReconcileResultItemIdentityType ITEMID
            = new OculusReconcileResultItemIdentityType("ITEM_ID");

        public static readonly OculusReconcileResultItemIdentityType ITEMSKU
            = new OculusReconcileResultItemIdentityType("ITEM_SKU");


        public static implicit operator OculusReconcileResultItemIdentityType(string value)
        {
            return NewValue(value);
        }

        public OculusReconcileResultItemIdentityType(string enumValue)
            : base(enumValue)
        {

        }
    }
}