// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class AppleIAPConfigInfo : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("appAppleId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public long? AppAppleId { get; set; }

        [JsonPropertyName("authKeyFileName")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? AuthKeyFileName { get; set; }

        [JsonPropertyName("bundleId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? BundleId { get; set; }

        [JsonPropertyName("issuerId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? IssuerId { get; set; }

        [JsonPropertyName("keyId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? KeyId { get; set; }

        [JsonPropertyName("namespace")]
        public string? Namespace { get; set; }

        [JsonPropertyName("password")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Password { get; set; }

        [JsonPropertyName("version")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public AppleIAPConfigInfoVersion? Version { get; set; }

    }



    public class AppleIAPConfigInfoVersion : StringEnum<AppleIAPConfigInfoVersion>
    {
        public static readonly AppleIAPConfigInfoVersion V1
            = new AppleIAPConfigInfoVersion("V1");

        public static readonly AppleIAPConfigInfoVersion V2
            = new AppleIAPConfigInfoVersion("V2");


        public static implicit operator AppleIAPConfigInfoVersion(string value)
        {
            return NewValue(value);
        }

        public AppleIAPConfigInfoVersion(string enumValue)
            : base(enumValue)
        {

        }
    }
}