// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class DebitByWalletPlatformRequest : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("amount")]
        public long? Amount { get; set; }

        [JsonPropertyName("debitBalanceSource")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public DebitByWalletPlatformRequestDebitBalanceSource? DebitBalanceSource { get; set; }

        [JsonPropertyName("metadata")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public Dictionary<string, object>? Metadata { get; set; }

        [JsonPropertyName("reason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Reason { get; set; }

        [JsonPropertyName("walletPlatform")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public DebitByWalletPlatformRequestWalletPlatform? WalletPlatform { get; set; }

    }

    public class DebitByWalletPlatformRequest<T1> : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("amount")]
        public long? Amount { get; set; }

        [JsonPropertyName("debitBalanceSource")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public DebitByWalletPlatformRequestDebitBalanceSource? DebitBalanceSource { get; set; }

        [JsonPropertyName("metadata")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public T1? Metadata { get; set; }

        [JsonPropertyName("reason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Reason { get; set; }

        [JsonPropertyName("walletPlatform")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public DebitByWalletPlatformRequestWalletPlatform? WalletPlatform { get; set; }

    }


    public class DebitByWalletPlatformRequestDebitBalanceSource : StringEnum<DebitByWalletPlatformRequestDebitBalanceSource>
    {
        public static readonly DebitByWalletPlatformRequestDebitBalanceSource DLCREVOCATION
            = new DebitByWalletPlatformRequestDebitBalanceSource("DLC_REVOCATION");

        public static readonly DebitByWalletPlatformRequestDebitBalanceSource EXPIRATION
            = new DebitByWalletPlatformRequestDebitBalanceSource("EXPIRATION");

        public static readonly DebitByWalletPlatformRequestDebitBalanceSource IAPREVOCATION
            = new DebitByWalletPlatformRequestDebitBalanceSource("IAP_REVOCATION");

        public static readonly DebitByWalletPlatformRequestDebitBalanceSource ORDERREVOCATION
            = new DebitByWalletPlatformRequestDebitBalanceSource("ORDER_REVOCATION");

        public static readonly DebitByWalletPlatformRequestDebitBalanceSource OTHER
            = new DebitByWalletPlatformRequestDebitBalanceSource("OTHER");

        public static readonly DebitByWalletPlatformRequestDebitBalanceSource PAYMENT
            = new DebitByWalletPlatformRequestDebitBalanceSource("PAYMENT");

        public static readonly DebitByWalletPlatformRequestDebitBalanceSource TRADE
            = new DebitByWalletPlatformRequestDebitBalanceSource("TRADE");


        public static implicit operator DebitByWalletPlatformRequestDebitBalanceSource(string value)
        {
            return NewValue(value);
        }

        public DebitByWalletPlatformRequestDebitBalanceSource(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class DebitByWalletPlatformRequestWalletPlatform : StringEnum<DebitByWalletPlatformRequestWalletPlatform>
    {
        public static readonly DebitByWalletPlatformRequestWalletPlatform Epic
            = new DebitByWalletPlatformRequestWalletPlatform("Epic");

        public static readonly DebitByWalletPlatformRequestWalletPlatform GooglePlay
            = new DebitByWalletPlatformRequestWalletPlatform("GooglePlay");

        public static readonly DebitByWalletPlatformRequestWalletPlatform IOS
            = new DebitByWalletPlatformRequestWalletPlatform("IOS");

        public static readonly DebitByWalletPlatformRequestWalletPlatform Nintendo
            = new DebitByWalletPlatformRequestWalletPlatform("Nintendo");

        public static readonly DebitByWalletPlatformRequestWalletPlatform Oculus
            = new DebitByWalletPlatformRequestWalletPlatform("Oculus");

        public static readonly DebitByWalletPlatformRequestWalletPlatform Other
            = new DebitByWalletPlatformRequestWalletPlatform("Other");

        public static readonly DebitByWalletPlatformRequestWalletPlatform Playstation
            = new DebitByWalletPlatformRequestWalletPlatform("Playstation");

        public static readonly DebitByWalletPlatformRequestWalletPlatform Steam
            = new DebitByWalletPlatformRequestWalletPlatform("Steam");

        public static readonly DebitByWalletPlatformRequestWalletPlatform Xbox
            = new DebitByWalletPlatformRequestWalletPlatform("Xbox");


        public static implicit operator DebitByWalletPlatformRequestWalletPlatform(string value)
        {
            return NewValue(value);
        }

        public DebitByWalletPlatformRequestWalletPlatform(string enumValue)
            : base(enumValue)
        {

        }
    }
}