// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class PublicEntitlementHistoryInfo : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("action")]
        [JsonStringEnum]
        public PublicEntitlementHistoryInfoAction? Action { get; set; }

        [JsonPropertyName("clazz")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public PublicEntitlementHistoryInfoClazz? Clazz { get; set; }

        [JsonPropertyName("createdAt")]
        public DateTime? CreatedAt { get; set; }

        [JsonPropertyName("entitlementId")]
        public string? EntitlementId { get; set; }

        [JsonPropertyName("itemId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? ItemId { get; set; }

        [JsonPropertyName("namespace")]
        public string? Namespace { get; set; }

        [JsonPropertyName("origin")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public PublicEntitlementHistoryInfoOrigin? Origin { get; set; }

        [JsonPropertyName("reason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Reason { get; set; }

        [JsonPropertyName("sku")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Sku { get; set; }

        [JsonPropertyName("updatedAt")]
        public DateTime? UpdatedAt { get; set; }

        [JsonPropertyName("useCount")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public int? UseCount { get; set; }

        [JsonPropertyName("useCountChange")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public int? UseCountChange { get; set; }

        [JsonPropertyName("userId")]
        public string? UserId { get; set; }

    }



    public class PublicEntitlementHistoryInfoAction : StringEnum<PublicEntitlementHistoryInfoAction>
    {
        public static readonly PublicEntitlementHistoryInfoAction DECREMENT
            = new PublicEntitlementHistoryInfoAction("DECREMENT");

        public static readonly PublicEntitlementHistoryInfoAction DISABLE
            = new PublicEntitlementHistoryInfoAction("DISABLE");

        public static readonly PublicEntitlementHistoryInfoAction ENABLE
            = new PublicEntitlementHistoryInfoAction("ENABLE");

        public static readonly PublicEntitlementHistoryInfoAction GRANT
            = new PublicEntitlementHistoryInfoAction("GRANT");

        public static readonly PublicEntitlementHistoryInfoAction REVOKE
            = new PublicEntitlementHistoryInfoAction("REVOKE");

        public static readonly PublicEntitlementHistoryInfoAction SELLBACK
            = new PublicEntitlementHistoryInfoAction("SELL_BACK");

        public static readonly PublicEntitlementHistoryInfoAction UPDATE
            = new PublicEntitlementHistoryInfoAction("UPDATE");


        public static implicit operator PublicEntitlementHistoryInfoAction(string value)
        {
            return NewValue(value);
        }

        public PublicEntitlementHistoryInfoAction(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class PublicEntitlementHistoryInfoClazz : StringEnum<PublicEntitlementHistoryInfoClazz>
    {
        public static readonly PublicEntitlementHistoryInfoClazz APP
            = new PublicEntitlementHistoryInfoClazz("APP");

        public static readonly PublicEntitlementHistoryInfoClazz CODE
            = new PublicEntitlementHistoryInfoClazz("CODE");

        public static readonly PublicEntitlementHistoryInfoClazz ENTITLEMENT
            = new PublicEntitlementHistoryInfoClazz("ENTITLEMENT");

        public static readonly PublicEntitlementHistoryInfoClazz LOOTBOX
            = new PublicEntitlementHistoryInfoClazz("LOOTBOX");

        public static readonly PublicEntitlementHistoryInfoClazz MEDIA
            = new PublicEntitlementHistoryInfoClazz("MEDIA");

        public static readonly PublicEntitlementHistoryInfoClazz OPTIONBOX
            = new PublicEntitlementHistoryInfoClazz("OPTIONBOX");

        public static readonly PublicEntitlementHistoryInfoClazz SUBSCRIPTION
            = new PublicEntitlementHistoryInfoClazz("SUBSCRIPTION");


        public static implicit operator PublicEntitlementHistoryInfoClazz(string value)
        {
            return NewValue(value);
        }

        public PublicEntitlementHistoryInfoClazz(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class PublicEntitlementHistoryInfoOrigin : StringEnum<PublicEntitlementHistoryInfoOrigin>
    {
        public static readonly PublicEntitlementHistoryInfoOrigin Epic
            = new PublicEntitlementHistoryInfoOrigin("Epic");

        public static readonly PublicEntitlementHistoryInfoOrigin GooglePlay
            = new PublicEntitlementHistoryInfoOrigin("GooglePlay");

        public static readonly PublicEntitlementHistoryInfoOrigin IOS
            = new PublicEntitlementHistoryInfoOrigin("IOS");

        public static readonly PublicEntitlementHistoryInfoOrigin Nintendo
            = new PublicEntitlementHistoryInfoOrigin("Nintendo");

        public static readonly PublicEntitlementHistoryInfoOrigin Oculus
            = new PublicEntitlementHistoryInfoOrigin("Oculus");

        public static readonly PublicEntitlementHistoryInfoOrigin Other
            = new PublicEntitlementHistoryInfoOrigin("Other");

        public static readonly PublicEntitlementHistoryInfoOrigin Playstation
            = new PublicEntitlementHistoryInfoOrigin("Playstation");

        public static readonly PublicEntitlementHistoryInfoOrigin Steam
            = new PublicEntitlementHistoryInfoOrigin("Steam");

        public static readonly PublicEntitlementHistoryInfoOrigin System
            = new PublicEntitlementHistoryInfoOrigin("System");

        public static readonly PublicEntitlementHistoryInfoOrigin Twitch
            = new PublicEntitlementHistoryInfoOrigin("Twitch");

        public static readonly PublicEntitlementHistoryInfoOrigin Xbox
            = new PublicEntitlementHistoryInfoOrigin("Xbox");


        public static implicit operator PublicEntitlementHistoryInfoOrigin(string value)
        {
            return NewValue(value);
        }

        public PublicEntitlementHistoryInfoOrigin(string enumValue)
            : base(enumValue)
        {

        }
    }
}