// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class TrackedEntitlementInfo : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("appId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? AppId { get; set; }

        [JsonPropertyName("appType")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public TrackedEntitlementInfoAppType? AppType { get; set; }

        [JsonPropertyName("clazz")]
        [JsonStringEnum]
        public TrackedEntitlementInfoClazz? Clazz { get; set; }

        [JsonPropertyName("createdAt")]
        public DateTime? CreatedAt { get; set; }

        [JsonPropertyName("endDate")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? EndDate { get; set; }

        [JsonPropertyName("features")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<string>? Features { get; set; }

        [JsonPropertyName("grantedAt")]
        public DateTime? GrantedAt { get; set; }

        [JsonPropertyName("grantedCode")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? GrantedCode { get; set; }

        [JsonPropertyName("id")]
        public string? Id { get; set; }

        [JsonPropertyName("itemId")]
        public string? ItemId { get; set; }

        [JsonPropertyName("itemNamespace")]
        public string? ItemNamespace { get; set; }

        [JsonPropertyName("itemSnapshot")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public ItemSnapshot? ItemSnapshot { get; set; }

        [JsonPropertyName("name")]
        public string? Name { get; set; }

        [JsonPropertyName("namespace")]
        public string? Namespace { get; set; }

        [JsonPropertyName("replayed")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public bool? Replayed { get; set; }

        [JsonPropertyName("requestId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? RequestId { get; set; }

        [JsonPropertyName("sku")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Sku { get; set; }

        [JsonPropertyName("source")]
        [JsonStringEnum]
        public TrackedEntitlementInfoSource? Source { get; set; }

        [JsonPropertyName("stackable")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public bool? Stackable { get; set; }

        [JsonPropertyName("startDate")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public DateTime? StartDate { get; set; }

        [JsonPropertyName("status")]
        [JsonStringEnum]
        public TrackedEntitlementInfoStatus? Status { get; set; }

        [JsonPropertyName("storeId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? StoreId { get; set; }

        [JsonPropertyName("type")]
        [JsonStringEnum]
        public TrackedEntitlementInfoType? Type { get; set; }

        [JsonPropertyName("updatedAt")]
        public DateTime? UpdatedAt { get; set; }

        [JsonPropertyName("useCount")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public int? UseCount { get; set; }

        [JsonPropertyName("userId")]
        public string? UserId { get; set; }

    }

    public class TrackedEntitlementInfoAppType : StringEnum<TrackedEntitlementInfoAppType>
    {
        public static readonly TrackedEntitlementInfoAppType DEMO
            = new TrackedEntitlementInfoAppType("DEMO");

        public static readonly TrackedEntitlementInfoAppType DLC
            = new TrackedEntitlementInfoAppType("DLC");

        public static readonly TrackedEntitlementInfoAppType GAME
            = new TrackedEntitlementInfoAppType("GAME");

        public static readonly TrackedEntitlementInfoAppType SOFTWARE
            = new TrackedEntitlementInfoAppType("SOFTWARE");


        public static implicit operator TrackedEntitlementInfoAppType(string value)
        {
            return NewValue(value);
        }

        public TrackedEntitlementInfoAppType(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class TrackedEntitlementInfoClazz : StringEnum<TrackedEntitlementInfoClazz>
    {
        public static readonly TrackedEntitlementInfoClazz APP
            = new TrackedEntitlementInfoClazz("APP");

        public static readonly TrackedEntitlementInfoClazz CODE
            = new TrackedEntitlementInfoClazz("CODE");

        public static readonly TrackedEntitlementInfoClazz ENTITLEMENT
            = new TrackedEntitlementInfoClazz("ENTITLEMENT");

        public static readonly TrackedEntitlementInfoClazz MEDIA
            = new TrackedEntitlementInfoClazz("MEDIA");

        public static readonly TrackedEntitlementInfoClazz OPTIONBOX
            = new TrackedEntitlementInfoClazz("OPTIONBOX");

        public static readonly TrackedEntitlementInfoClazz SUBSCRIPTION
            = new TrackedEntitlementInfoClazz("SUBSCRIPTION");


        public static implicit operator TrackedEntitlementInfoClazz(string value)
        {
            return NewValue(value);
        }

        public TrackedEntitlementInfoClazz(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class TrackedEntitlementInfoSource : StringEnum<TrackedEntitlementInfoSource>
    {
        public static readonly TrackedEntitlementInfoSource ACHIEVEMENT
            = new TrackedEntitlementInfoSource("ACHIEVEMENT");

        public static readonly TrackedEntitlementInfoSource GIFT
            = new TrackedEntitlementInfoSource("GIFT");

        public static readonly TrackedEntitlementInfoSource IAP
            = new TrackedEntitlementInfoSource("IAP");

        public static readonly TrackedEntitlementInfoSource OTHER
            = new TrackedEntitlementInfoSource("OTHER");

        public static readonly TrackedEntitlementInfoSource PROMOTION
            = new TrackedEntitlementInfoSource("PROMOTION");

        public static readonly TrackedEntitlementInfoSource PURCHASE
            = new TrackedEntitlementInfoSource("PURCHASE");

        public static readonly TrackedEntitlementInfoSource REDEEMCODE
            = new TrackedEntitlementInfoSource("REDEEM_CODE");

        public static readonly TrackedEntitlementInfoSource REFERRALBONUS
            = new TrackedEntitlementInfoSource("REFERRAL_BONUS");

        public static readonly TrackedEntitlementInfoSource REWARD
            = new TrackedEntitlementInfoSource("REWARD");


        public static implicit operator TrackedEntitlementInfoSource(string value)
        {
            return NewValue(value);
        }

        public TrackedEntitlementInfoSource(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class TrackedEntitlementInfoStatus : StringEnum<TrackedEntitlementInfoStatus>
    {
        public static readonly TrackedEntitlementInfoStatus ACTIVE
            = new TrackedEntitlementInfoStatus("ACTIVE");

        public static readonly TrackedEntitlementInfoStatus CONSUMED
            = new TrackedEntitlementInfoStatus("CONSUMED");

        public static readonly TrackedEntitlementInfoStatus INACTIVE
            = new TrackedEntitlementInfoStatus("INACTIVE");

        public static readonly TrackedEntitlementInfoStatus REVOKED
            = new TrackedEntitlementInfoStatus("REVOKED");


        public static implicit operator TrackedEntitlementInfoStatus(string value)
        {
            return NewValue(value);
        }

        public TrackedEntitlementInfoStatus(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class TrackedEntitlementInfoType : StringEnum<TrackedEntitlementInfoType>
    {
        public static readonly TrackedEntitlementInfoType CONSUMABLE
            = new TrackedEntitlementInfoType("CONSUMABLE");

        public static readonly TrackedEntitlementInfoType DURABLE
            = new TrackedEntitlementInfoType("DURABLE");


        public static implicit operator TrackedEntitlementInfoType(string value)
        {
            return NewValue(value);
        }

        public TrackedEntitlementInfoType(string enumValue)
            : base(enumValue)
        {

        }
    }
}