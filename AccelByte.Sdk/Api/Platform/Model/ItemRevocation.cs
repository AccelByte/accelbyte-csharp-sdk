// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using System.Text.Json.Serialization;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Converters;

namespace AccelByte.Sdk.Api.Platform.Model
{
    public class ItemRevocation : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("creditRevocations")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<CreditRevocation>? CreditRevocations { get; set; }

        [JsonPropertyName("customRevocation")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public Dictionary<string, object>? CustomRevocation { get; set; }

        [JsonPropertyName("entitlementOrigin")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public ItemRevocationEntitlementOrigin? EntitlementOrigin { get; set; }

        [JsonPropertyName("entitlementRevocations")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<EntitlementRevocation>? EntitlementRevocations { get; set; }

        [JsonPropertyName("itemId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? ItemId { get; set; }

        [JsonPropertyName("itemRevocations")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<ItemRevocation>? ItemRevocations { get; set; }

        [JsonPropertyName("itemSku")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? ItemSku { get; set; }

        [JsonPropertyName("itemType")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public ItemRevocationItemType? ItemType { get; set; }

        [JsonPropertyName("quantity")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public long? Quantity { get; set; }

        [JsonPropertyName("reason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Reason { get; set; }

        [JsonPropertyName("skipped")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public bool? Skipped { get; set; }

        [JsonPropertyName("status")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public ItemRevocationStatus? Status { get; set; }

        [JsonPropertyName("strategy")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Strategy { get; set; }

    }

    public class ItemRevocation<T1> : AccelByte.Sdk.Core.Model
    {
        [JsonPropertyName("creditRevocations")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<CreditRevocation>? CreditRevocations { get; set; }

        [JsonPropertyName("customRevocation")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public T1? CustomRevocation { get; set; }

        [JsonPropertyName("entitlementOrigin")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public ItemRevocationEntitlementOrigin? EntitlementOrigin { get; set; }

        [JsonPropertyName("entitlementRevocations")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<EntitlementRevocation>? EntitlementRevocations { get; set; }

        [JsonPropertyName("itemId")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? ItemId { get; set; }

        [JsonPropertyName("itemRevocations")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<ItemRevocation>? ItemRevocations { get; set; }

        [JsonPropertyName("itemSku")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? ItemSku { get; set; }

        [JsonPropertyName("itemType")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public ItemRevocationItemType? ItemType { get; set; }

        [JsonPropertyName("quantity")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public long? Quantity { get; set; }

        [JsonPropertyName("reason")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Reason { get; set; }

        [JsonPropertyName("skipped")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public bool? Skipped { get; set; }

        [JsonPropertyName("status")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        [JsonStringEnum]
        public ItemRevocationStatus? Status { get; set; }

        [JsonPropertyName("strategy")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string? Strategy { get; set; }

    }


    public class ItemRevocationEntitlementOrigin : StringEnum<ItemRevocationEntitlementOrigin>
    {
        public static readonly ItemRevocationEntitlementOrigin Epic
            = new ItemRevocationEntitlementOrigin("Epic");

        public static readonly ItemRevocationEntitlementOrigin GooglePlay
            = new ItemRevocationEntitlementOrigin("GooglePlay");

        public static readonly ItemRevocationEntitlementOrigin IOS
            = new ItemRevocationEntitlementOrigin("IOS");

        public static readonly ItemRevocationEntitlementOrigin Nintendo
            = new ItemRevocationEntitlementOrigin("Nintendo");

        public static readonly ItemRevocationEntitlementOrigin Oculus
            = new ItemRevocationEntitlementOrigin("Oculus");

        public static readonly ItemRevocationEntitlementOrigin Other
            = new ItemRevocationEntitlementOrigin("Other");

        public static readonly ItemRevocationEntitlementOrigin Playstation
            = new ItemRevocationEntitlementOrigin("Playstation");

        public static readonly ItemRevocationEntitlementOrigin Steam
            = new ItemRevocationEntitlementOrigin("Steam");

        public static readonly ItemRevocationEntitlementOrigin System
            = new ItemRevocationEntitlementOrigin("System");

        public static readonly ItemRevocationEntitlementOrigin Twitch
            = new ItemRevocationEntitlementOrigin("Twitch");

        public static readonly ItemRevocationEntitlementOrigin Xbox
            = new ItemRevocationEntitlementOrigin("Xbox");


        public static implicit operator ItemRevocationEntitlementOrigin(string value)
        {
            return NewValue(value);
        }

        public ItemRevocationEntitlementOrigin(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class ItemRevocationItemType : StringEnum<ItemRevocationItemType>
    {
        public static readonly ItemRevocationItemType APP
            = new ItemRevocationItemType("APP");

        public static readonly ItemRevocationItemType BUNDLE
            = new ItemRevocationItemType("BUNDLE");

        public static readonly ItemRevocationItemType CODE
            = new ItemRevocationItemType("CODE");

        public static readonly ItemRevocationItemType COINS
            = new ItemRevocationItemType("COINS");

        public static readonly ItemRevocationItemType EXTENSION
            = new ItemRevocationItemType("EXTENSION");

        public static readonly ItemRevocationItemType INGAMEITEM
            = new ItemRevocationItemType("INGAMEITEM");

        public static readonly ItemRevocationItemType LOOTBOX
            = new ItemRevocationItemType("LOOTBOX");

        public static readonly ItemRevocationItemType MEDIA
            = new ItemRevocationItemType("MEDIA");

        public static readonly ItemRevocationItemType OPTIONBOX
            = new ItemRevocationItemType("OPTIONBOX");

        public static readonly ItemRevocationItemType SEASON
            = new ItemRevocationItemType("SEASON");

        public static readonly ItemRevocationItemType SUBSCRIPTION
            = new ItemRevocationItemType("SUBSCRIPTION");


        public static implicit operator ItemRevocationItemType(string value)
        {
            return NewValue(value);
        }

        public ItemRevocationItemType(string enumValue)
            : base(enumValue)
        {

        }
    }

    public class ItemRevocationStatus : StringEnum<ItemRevocationStatus>
    {
        public static readonly ItemRevocationStatus FAIL
            = new ItemRevocationStatus("FAIL");

        public static readonly ItemRevocationStatus SUCCESS
            = new ItemRevocationStatus("SUCCESS");


        public static implicit operator ItemRevocationStatus(string value)
        {
            return NewValue(value);
        }

        public ItemRevocationStatus(string enumValue)
            : base(enumValue)
        {

        }
    }
}