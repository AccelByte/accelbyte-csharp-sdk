// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Achievement.Model;
using AccelByte.Sdk.Api.Achievement.Operation;
using AccelByte.Sdk.Api.Achievement.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class AchievementUserAchievements_OpExts
    {
        public static Achievement.Model.ModelsPaginatedUserAchievementResponse? Execute(
            this AdminListUserAchievements.AdminListUserAchievementsBuilder builder,
            string namespace_,
            string userId
        )
        {
            AdminListUserAchievements op = builder.Build(
                namespace_,
                userId
            );

            return ((Achievement.Wrapper.UserAchievements)builder.WrapperObject!).AdminListUserAchievements(op);
        }

        public static void Execute(
            this AdminResetAchievement.AdminResetAchievementBuilder builder,
            string achievementCode,
            string namespace_,
            string userId
        )
        {
            AdminResetAchievement op = builder.Build(
                achievementCode,
                namespace_,
                userId
            );

            ((Achievement.Wrapper.UserAchievements)builder.WrapperObject!).AdminResetAchievement(op);
        }

        public static void Execute(
            this AdminUnlockAchievement.AdminUnlockAchievementBuilder builder,
            string achievementCode,
            string namespace_,
            string userId
        )
        {
            AdminUnlockAchievement op = builder.Build(
                achievementCode,
                namespace_,
                userId
            );

            ((Achievement.Wrapper.UserAchievements)builder.WrapperObject!).AdminUnlockAchievement(op);
        }

        public static Achievement.Model.ModelsPaginatedUserAchievementResponse? Execute(
            this PublicListUserAchievements.PublicListUserAchievementsBuilder builder,
            string namespace_,
            string userId
        )
        {
            PublicListUserAchievements op = builder.Build(
                namespace_,
                userId
            );

            return ((Achievement.Wrapper.UserAchievements)builder.WrapperObject!).PublicListUserAchievements(op);
        }

        public static void Execute(
            this PublicUnlockAchievement.PublicUnlockAchievementBuilder builder,
            string achievementCode,
            string namespace_,
            string userId
        )
        {
            PublicUnlockAchievement op = builder.Build(
                achievementCode,
                namespace_,
                userId
            );

            ((Achievement.Wrapper.UserAchievements)builder.WrapperObject!).PublicUnlockAchievement(op);
        }

    }
}