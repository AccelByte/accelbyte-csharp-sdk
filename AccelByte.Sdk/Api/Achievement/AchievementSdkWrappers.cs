// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using AccelByte.Sdk.Api.Achievement.Wrapper;
using AccelByte.Sdk.Api.Achievement.Operation;

namespace AccelByte.Sdk.Core
{
    public class AchievementSdkWrappers
    {
        private AccelByteSDK _SdkObject;

        public Achievements Achievements
        {
            get
            {
                if (_Achievements == null)
                    _Achievements = new Achievements(_SdkObject);
                return _Achievements;
            }
        }
        private Achievements? _Achievements = null;

        public GlobalAchievements GlobalAchievements
        {
            get
            {
                if (_GlobalAchievements == null)
                    _GlobalAchievements = new GlobalAchievements(_SdkObject);
                return _GlobalAchievements;
            }
        }
        private GlobalAchievements? _GlobalAchievements = null;

        public PlatformAchievement PlatformAchievement
        {
            get
            {
                if (_PlatformAchievement == null)
                    _PlatformAchievement = new PlatformAchievement(_SdkObject);
                return _PlatformAchievement;
            }
        }
        private PlatformAchievement? _PlatformAchievement = null;

        public Tags Tags
        {
            get
            {
                if (_Tags == null)
                    _Tags = new Tags(_SdkObject);
                return _Tags;
            }
        }
        private Tags? _Tags = null;

        public UserAchievements UserAchievements
        {
            get
            {
                if (_UserAchievements == null)
                    _UserAchievements = new UserAchievements(_SdkObject);
                return _UserAchievements;
            }
        }
        private UserAchievements? _UserAchievements = null;

        public Anonymization Anonymization
        {
            get
            {
                if (_Anonymization == null)
                    _Anonymization = new Anonymization(_SdkObject);
                return _Anonymization;
            }
        }
        private Anonymization? _Anonymization = null;

        internal AchievementSdkWrappers(AccelByteSDK sdk)
        {
            _SdkObject = sdk;
        }
    }

    public partial class AccelByteSDK
    {
        public AchievementSdkWrappers Achievement
        {
            get
            {
                if (_Achievement == null)
                    _Achievement = new AchievementSdkWrappers(this);
                return _Achievement;
            }
        }
        private AchievementSdkWrappers? _Achievement = null;
    }
}