// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using AccelByte.Sdk.Api.Dsartifact.Wrapper;
using AccelByte.Sdk.Api.Dsartifact.Operation;

namespace AccelByte.Sdk.Core
{
    public class DsartifactSdkWrappers
    {
        private AccelByteSDK _SdkObject;

        public ArtifactUploadProcessQueue ArtifactUploadProcessQueue
        {
            get
            {
                if (_ArtifactUploadProcessQueue == null)
                    _ArtifactUploadProcessQueue = new ArtifactUploadProcessQueue(_SdkObject);
                return _ArtifactUploadProcessQueue;
            }
        }
        private ArtifactUploadProcessQueue? _ArtifactUploadProcessQueue = null;

        public TerminatedServers TerminatedServers
        {
            get
            {
                if (_TerminatedServers == null)
                    _TerminatedServers = new TerminatedServers(_SdkObject);
                return _TerminatedServers;
            }
        }
        private TerminatedServers? _TerminatedServers = null;

        public DownloadServerArtifact DownloadServerArtifact
        {
            get
            {
                if (_DownloadServerArtifact == null)
                    _DownloadServerArtifact = new DownloadServerArtifact(_SdkObject);
                return _DownloadServerArtifact;
            }
        }
        private DownloadServerArtifact? _DownloadServerArtifact = null;

        public AllTerminatedServers AllTerminatedServers
        {
            get
            {
                if (_AllTerminatedServers == null)
                    _AllTerminatedServers = new AllTerminatedServers(_SdkObject);
                return _AllTerminatedServers;
            }
        }
        private AllTerminatedServers? _AllTerminatedServers = null;

        public Operations Operations
        {
            get
            {
                if (_Operations == null)
                    _Operations = new Operations(_SdkObject);
                return _Operations;
            }
        }
        private Operations? _Operations = null;

        internal DsartifactSdkWrappers(AccelByteSDK sdk)
        {
            _SdkObject = sdk;
        }
    }

    public partial class AccelByteSDK
    {
        public DsartifactSdkWrappers Dsartifact
        {
            get
            {
                if (_Dsartifact == null)
                    _Dsartifact = new DsartifactSdkWrappers(this);
                return _Dsartifact;
            }
        }
        private DsartifactSdkWrappers? _Dsartifact = null;
    }
}