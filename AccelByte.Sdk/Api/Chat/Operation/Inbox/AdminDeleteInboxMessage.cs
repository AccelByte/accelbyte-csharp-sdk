// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Chat.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Chat.Operation
{
    /// <summary>
    /// adminDeleteInboxMessage
    ///
    /// Delete inbox message
    /// </summary>
    public class AdminDeleteInboxMessage : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static AdminDeleteInboxMessageBuilder Builder { get => new AdminDeleteInboxMessageBuilder(); }

        public class AdminDeleteInboxMessageBuilder
            : OperationBuilder<AdminDeleteInboxMessageBuilder>
        {

            public bool? Force { get; set; }





            internal AdminDeleteInboxMessageBuilder() { }


            public AdminDeleteInboxMessageBuilder SetForce(bool _force)
            {
                Force = _force;
                return this;
            }





            public AdminDeleteInboxMessage Build(
                string messageId,
                string namespace_
            )
            {
                AdminDeleteInboxMessage op = new AdminDeleteInboxMessage(this,
                    messageId,                    
                    namespace_                    
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;

                return op;
            }
        }

        private AdminDeleteInboxMessage(AdminDeleteInboxMessageBuilder builder,
            string messageId,
            string namespace_
        )
        {
            PathParams["messageId"] = messageId;
            PathParams["namespace"] = namespace_;
            
            if (builder.Force != null) QueryParams["force"] = Convert.ToString(builder.Force)!;
            

            
            
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public AdminDeleteInboxMessage(
            string messageId,            
            string namespace_,            
            bool? force            
        )
        {
            PathParams["messageId"] = messageId;
            PathParams["namespace"] = namespace_;
            
            if (force != null) QueryParams["force"] = Convert.ToString(force)!;
            

            
            
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/chat/v1/admin/inbox/namespaces/{namespace}/message/{messageId}";

        public override HttpMethod Method => HttpMethod.Delete;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";
        
        public void ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {
            if (code == (HttpStatusCode)200)
            {
                return;
            }
            
            var payloadString = Helper.ConvertInputStreamToString(payload);
            
            throw new HttpResponseException(code, payloadString);
        }
    }

}