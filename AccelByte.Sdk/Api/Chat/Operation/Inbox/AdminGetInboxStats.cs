// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System.Net;
using System.IO;
using System.Text.Json;
using AccelByte.Sdk.Api.Chat.Model;
using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;

namespace AccelByte.Sdk.Api.Chat.Operation
{
    /// <summary>
    /// adminGetInboxStats
    ///
    /// Get inbox stats
    /// </summary>
    public class AdminGetInboxStats : AccelByte.Sdk.Core.Operation
    {
        #region Builder Part
        public static AdminGetInboxStatsBuilder Builder { get => new AdminGetInboxStatsBuilder(); }

        public class AdminGetInboxStatsBuilder
            : OperationBuilder<AdminGetInboxStatsBuilder>
        {

            public List<string>? MessageId { get; set; }





            internal AdminGetInboxStatsBuilder() { }


            public AdminGetInboxStatsBuilder SetMessageId(List<string> _messageId)
            {
                MessageId = _messageId;
                return this;
            }





            public AdminGetInboxStats Build(
                string namespace_
            )
            {
                AdminGetInboxStats op = new AdminGetInboxStats(this,
                    namespace_                    
                );
                op.PreferredSecurityMethod = PreferredSecurityMethod;
                op.RequestJsonOptions = RequestJsonOptions;
                op.ResponseJsonOptions = ResponseJsonOptions;

                return op;
            }
        }

        private AdminGetInboxStats(AdminGetInboxStatsBuilder builder,
            string namespace_
        )
        {
            PathParams["namespace"] = namespace_;
            
            if (builder.MessageId is not null) QueryParams["messageId"] = builder.MessageId;
            

            
            CollectionFormatMap["messageId"] = "multi";
            
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }
        #endregion

        public AdminGetInboxStats(
            string namespace_,            
            List<string>? messageId            
        )
        {
            PathParams["namespace"] = namespace_;
            
            if (messageId is not null) QueryParams["messageId"] = messageId;
            

            
            CollectionFormatMap["messageId"] = "multi";
            
            

            Securities.Add(AccelByte.Sdk.Core.Operation.SECURITY_BEARER);
        }

        public override string Path => "/chat/v1/admin/inbox/namespaces/{namespace}/stats";

        public override HttpMethod Method => HttpMethod.Get;

        public override string[] Consumes => new string[] { "application/json" };

        public override string[] Produces => new string[] { "application/json" };

        [Obsolete("2022-04-19 - Use 'Securities' property instead.")]
        public override string? Security { get; set; } = "Bearer";
        
        public Model.ModelsGetInboxStatsResponse? ParseResponse(HttpStatusCode code, string contentType, Stream payload)
        {            
            if (code == (HttpStatusCode)204)
            {
                return null;
            }
            else if (code == (HttpStatusCode)201)
            {
                if (ResponseJsonOptions != null)
                    return JsonSerializer.Deserialize<Model.ModelsGetInboxStatsResponse>(payload, ResponseJsonOptions);
                else
                    return JsonSerializer.Deserialize<Model.ModelsGetInboxStatsResponse>(payload);
            }
            else if (code == (HttpStatusCode)200)
            {
                return JsonSerializer.Deserialize<Model.ModelsGetInboxStatsResponse>(payload, ResponseJsonOptions);
            }
            
            var payloadString = Helper.ConvertInputStreamToString(payload);
            
            throw new HttpResponseException(code, payloadString);
        }
    }

}