// Copyright (c) 2022-2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Chat.Model;
using AccelByte.Sdk.Api.Chat.Operation;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api.Chat.Wrapper
{
    public class Inbox
    {
        private readonly AccelByteSDK _sdk;

        public Inbox(AccelByteSDK sdk)
        {
            _sdk = sdk;
        }

        #region Operation Builders
        public AdminGetInboxCategories.AdminGetInboxCategoriesBuilder AdminGetInboxCategoriesOp
        {
            get { return Operation.AdminGetInboxCategories.Builder.SetWrapperObject(this); }
        }
        public AdminAddInboxCategory.AdminAddInboxCategoryBuilder AdminAddInboxCategoryOp
        {
            get { return Operation.AdminAddInboxCategory.Builder.SetWrapperObject(this); }
        }
        public AdminDeleteInboxCategory.AdminDeleteInboxCategoryBuilder AdminDeleteInboxCategoryOp
        {
            get { return Operation.AdminDeleteInboxCategory.Builder.SetWrapperObject(this); }
        }
        public AdminUpdateInboxCategory.AdminUpdateInboxCategoryBuilder AdminUpdateInboxCategoryOp
        {
            get { return Operation.AdminUpdateInboxCategory.Builder.SetWrapperObject(this); }
        }
        public AdminGetCategorySchema.AdminGetCategorySchemaBuilder AdminGetCategorySchemaOp
        {
            get { return Operation.AdminGetCategorySchema.Builder.SetWrapperObject(this); }
        }
        public AdminDeleteInboxMessage.AdminDeleteInboxMessageBuilder AdminDeleteInboxMessageOp
        {
            get { return Operation.AdminDeleteInboxMessage.Builder.SetWrapperObject(this); }
        }
        public AdminGetInboxMessages.AdminGetInboxMessagesBuilder AdminGetInboxMessagesOp
        {
            get { return Operation.AdminGetInboxMessages.Builder.SetWrapperObject(this); }
        }
        public AdminSaveInboxMessage.AdminSaveInboxMessageBuilder AdminSaveInboxMessageOp
        {
            get { return Operation.AdminSaveInboxMessage.Builder.SetWrapperObject(this); }
        }
        public AdminUnsendInboxMessage.AdminUnsendInboxMessageBuilder AdminUnsendInboxMessageOp
        {
            get { return Operation.AdminUnsendInboxMessage.Builder.SetWrapperObject(this); }
        }
        public AdminGetInboxUsers.AdminGetInboxUsersBuilder AdminGetInboxUsersOp
        {
            get { return Operation.AdminGetInboxUsers.Builder.SetWrapperObject(this); }
        }
        public AdminUpdateInboxMessage.AdminUpdateInboxMessageBuilder AdminUpdateInboxMessageOp
        {
            get { return Operation.AdminUpdateInboxMessage.Builder.SetWrapperObject(this); }
        }
        public AdminSendInboxMessage.AdminSendInboxMessageBuilder AdminSendInboxMessageOp
        {
            get { return Operation.AdminSendInboxMessage.Builder.SetWrapperObject(this); }
        }
        public AdminGetInboxStats.AdminGetInboxStatsBuilder AdminGetInboxStatsOp
        {
            get { return Operation.AdminGetInboxStats.Builder.SetWrapperObject(this); }
        }
        #endregion

        public List<Model.ModelsGetInboxCategoriesResponseItem>? AdminGetInboxCategories(AdminGetInboxCategories input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ModelsGetInboxCategoriesResponseItem>?> AdminGetInboxCategoriesAsync(AdminGetInboxCategories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public List<Model.ModelsGetInboxCategoriesResponseItem<T1>>? AdminGetInboxCategories<T1>(AdminGetInboxCategories input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<List<Model.ModelsGetInboxCategoriesResponseItem<T1>>?> AdminGetInboxCategoriesAsync<T1>(AdminGetInboxCategories input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsAddInboxCategoryResponse? AdminAddInboxCategory(AdminAddInboxCategory input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsAddInboxCategoryResponse?> AdminAddInboxCategoryAsync(AdminAddInboxCategory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsAddInboxCategoryResponse<T1>? AdminAddInboxCategory<T1>(AdminAddInboxCategory input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsAddInboxCategoryResponse<T1>?> AdminAddInboxCategoryAsync<T1>(AdminAddInboxCategory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteInboxCategory(AdminDeleteInboxCategory input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminDeleteInboxCategoryAsync(AdminDeleteInboxCategory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminUpdateInboxCategory(AdminUpdateInboxCategory input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminUpdateInboxCategoryAsync(AdminUpdateInboxCategory input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsJSONSchemaType? AdminGetCategorySchema(AdminGetCategorySchema input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsJSONSchemaType?> AdminGetCategorySchemaAsync(AdminGetCategorySchema input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminDeleteInboxMessage(AdminDeleteInboxMessage input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminDeleteInboxMessageAsync(AdminDeleteInboxMessage input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsGetInboxMessagesResponse? AdminGetInboxMessages(AdminGetInboxMessages input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGetInboxMessagesResponse?> AdminGetInboxMessagesAsync(AdminGetInboxMessages input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsSaveInboxMessageResponse? AdminSaveInboxMessage(AdminSaveInboxMessage input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsSaveInboxMessageResponse?> AdminSaveInboxMessageAsync(AdminSaveInboxMessage input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }

        public Model.ModelsSaveInboxMessageResponse<T1>? AdminSaveInboxMessage<T1>(AdminSaveInboxMessage input)
        {
            var response = _sdk.RunRequest(input);

            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsSaveInboxMessageResponse<T1>?> AdminSaveInboxMessageAsync<T1>(AdminSaveInboxMessage input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse<T1>(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsUnsendInboxMessageResponse? AdminUnsendInboxMessage(AdminUnsendInboxMessage input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsUnsendInboxMessageResponse?> AdminUnsendInboxMessageAsync(AdminUnsendInboxMessage input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsGetInboxUsersResponse? AdminGetInboxUsers(AdminGetInboxUsers input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGetInboxUsersResponse?> AdminGetInboxUsersAsync(AdminGetInboxUsers input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public void AdminUpdateInboxMessage(AdminUpdateInboxMessage input)
        {
            var response = _sdk.RunRequest(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task AdminUpdateInboxMessageAsync(AdminUpdateInboxMessage input)
        {
            var response = await _sdk.RunRequestAsync(input);
            input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsSendInboxMessageResponse? AdminSendInboxMessage(AdminSendInboxMessage input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsSendInboxMessageResponse?> AdminSendInboxMessageAsync(AdminSendInboxMessage input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public Model.ModelsGetInboxStatsResponse? AdminGetInboxStats(AdminGetInboxStats input)
        {
            var response = _sdk.RunRequest(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
        public async Task<Model.ModelsGetInboxStatsResponse?> AdminGetInboxStatsAsync(AdminGetInboxStats input)
        {
            var response = await _sdk.RunRequestAsync(input);
            return input.ParseResponse(
                    response.Code,
                    response.ContentType,
                    response.Payload);
        }
    }
}