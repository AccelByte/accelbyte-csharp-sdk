// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Chat.Model;
using AccelByte.Sdk.Api.Chat.Operation;
using AccelByte.Sdk.Api.Chat.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class ChatInbox_OpExts
    {
        public static List<Chat.Model.ModelsGetInboxCategoriesResponseItem>? Execute(
            this AdminGetInboxCategories.AdminGetInboxCategoriesBuilder builder,
            string namespace_
        )
        {
            AdminGetInboxCategories op = builder.Build(
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminGetInboxCategories(op);
        }

        public static List<Chat.Model.ModelsGetInboxCategoriesResponseItem<T1>>? Execute<T1>(
            this AdminGetInboxCategories.AdminGetInboxCategoriesBuilder builder,
            string namespace_
        )
        {
            AdminGetInboxCategories op = builder.Build(
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminGetInboxCategories<T1>(op);
        }
        public static Chat.Model.ModelsAddInboxCategoryResponse? Execute(
            this AdminAddInboxCategory.AdminAddInboxCategoryBuilder builder,
            ModelsAddInboxCategoryRequest body,
            string namespace_
        )
        {
            AdminAddInboxCategory op = builder.Build(
                body,
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminAddInboxCategory(op);
        }

        public static Chat.Model.ModelsAddInboxCategoryResponse<T1>? Execute<T1>(
            this AdminAddInboxCategory.AdminAddInboxCategoryBuilder builder,
            ModelsAddInboxCategoryRequest body,
            string namespace_
        )
        {
            AdminAddInboxCategory op = builder.Build(
                body,
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminAddInboxCategory<T1>(op);
        }
        public static void Execute(
            this AdminDeleteInboxCategory.AdminDeleteInboxCategoryBuilder builder,
            string category,
            string namespace_
        )
        {
            AdminDeleteInboxCategory op = builder.Build(
                category,
                namespace_
            );

            ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminDeleteInboxCategory(op);
        }
        public static void Execute(
            this AdminUpdateInboxCategory.AdminUpdateInboxCategoryBuilder builder,
            ModelsUpdateInboxCategoryRequest body,
            string category,
            string namespace_
        )
        {
            AdminUpdateInboxCategory op = builder.Build(
                body,
                category,
                namespace_
            );

            ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminUpdateInboxCategory(op);
        }
        public static Chat.Model.ModelsJSONSchemaType? Execute(
            this AdminGetCategorySchema.AdminGetCategorySchemaBuilder builder,
            string category,
            string namespace_
        )
        {
            AdminGetCategorySchema op = builder.Build(
                category,
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminGetCategorySchema(op);
        }
        public static void Execute(
            this AdminDeleteInboxMessage.AdminDeleteInboxMessageBuilder builder,
            string messageId,
            string namespace_
        )
        {
            AdminDeleteInboxMessage op = builder.Build(
                messageId,
                namespace_
            );

            ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminDeleteInboxMessage(op);
        }
        public static Chat.Model.ModelsGetInboxMessagesResponse? Execute(
            this AdminGetInboxMessages.AdminGetInboxMessagesBuilder builder,
            string namespace_
        )
        {
            AdminGetInboxMessages op = builder.Build(
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminGetInboxMessages(op);
        }
        public static Chat.Model.ModelsSaveInboxMessageResponse? Execute(
            this AdminSaveInboxMessage.AdminSaveInboxMessageBuilder builder,
            ModelsSaveInboxMessageRequest body,
            string namespace_
        )
        {
            AdminSaveInboxMessage op = builder.Build(
                body,
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminSaveInboxMessage(op);
        }

        public static Chat.Model.ModelsSaveInboxMessageResponse<T1>? Execute<T1>(
            this AdminSaveInboxMessage.AdminSaveInboxMessageBuilder builder,
            ModelsSaveInboxMessageRequest body,
            string namespace_
        )
        {
            AdminSaveInboxMessage op = builder.Build(
                body,
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminSaveInboxMessage<T1>(op);
        }
        public static Chat.Model.ModelsUnsendInboxMessageResponse? Execute(
            this AdminUnsendInboxMessage.AdminUnsendInboxMessageBuilder builder,
            ModelsUnsendInboxMessageRequest body,
            string inbox,
            string namespace_
        )
        {
            AdminUnsendInboxMessage op = builder.Build(
                body,
                inbox,
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminUnsendInboxMessage(op);
        }
        public static Chat.Model.ModelsGetInboxUsersResponse? Execute(
            this AdminGetInboxUsers.AdminGetInboxUsersBuilder builder,
            string inbox,
            string namespace_
        )
        {
            AdminGetInboxUsers op = builder.Build(
                inbox,
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminGetInboxUsers(op);
        }
        public static void Execute(
            this AdminUpdateInboxMessage.AdminUpdateInboxMessageBuilder builder,
            ModelsUpdateInboxMessageRequest body,
            string messageId,
            string namespace_
        )
        {
            AdminUpdateInboxMessage op = builder.Build(
                body,
                messageId,
                namespace_
            );

            ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminUpdateInboxMessage(op);
        }
        public static Chat.Model.ModelsSendInboxMessageResponse? Execute(
            this AdminSendInboxMessage.AdminSendInboxMessageBuilder builder,
            ModelsSendInboxMessageRequest body,
            string messageId,
            string namespace_
        )
        {
            AdminSendInboxMessage op = builder.Build(
                body,
                messageId,
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminSendInboxMessage(op);
        }
        public static Chat.Model.ModelsGetInboxStatsResponse? Execute(
            this AdminGetInboxStats.AdminGetInboxStatsBuilder builder,
            string namespace_
        )
        {
            AdminGetInboxStats op = builder.Build(
                namespace_
            );

            return ((Chat.Wrapper.Inbox)builder.WrapperObject!).AdminGetInboxStats(op);
        }
    }
}