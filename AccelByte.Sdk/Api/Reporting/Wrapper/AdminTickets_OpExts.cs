// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.
using AccelByte.Sdk.Api.Reporting.Model;
using AccelByte.Sdk.Api.Reporting.Operation;
using AccelByte.Sdk.Api.Reporting.Wrapper;
using AccelByte.Sdk.Core;

namespace AccelByte.Sdk.Api
{
    public static class ReportingAdminTickets_OpExts
    {
        public static Reporting.Model.RestapiTicketListResponse? Execute(
            this ListTickets.ListTicketsBuilder builder,
            string namespace_
        )
        {
            ListTickets op = builder.Build(
                namespace_
            );

            return ((Reporting.Wrapper.AdminTickets)builder.WrapperObject!).ListTickets(op);
        }
        public static Reporting.Model.RestapiTicketStatisticResponse? Execute(
            this TicketStatistic.TicketStatisticBuilder builder,
            string namespace_,
            string category
        )
        {
            TicketStatistic op = builder.Build(
                namespace_,
                category
            );

            return ((Reporting.Wrapper.AdminTickets)builder.WrapperObject!).TicketStatistic(op);
        }
        public static Reporting.Model.RestapiTicketResponse? Execute(
            this GetTicketDetail.GetTicketDetailBuilder builder,
            string namespace_,
            string ticketId
        )
        {
            GetTicketDetail op = builder.Build(
                namespace_,
                ticketId
            );

            return ((Reporting.Wrapper.AdminTickets)builder.WrapperObject!).GetTicketDetail(op);
        }
        public static void Execute(
            this DeleteTicket.DeleteTicketBuilder builder,
            string namespace_,
            string ticketId
        )
        {
            DeleteTicket op = builder.Build(
                namespace_,
                ticketId
            );

            ((Reporting.Wrapper.AdminTickets)builder.WrapperObject!).DeleteTicket(op);
        }
        public static Reporting.Model.RestapiReportListResponse? Execute(
            this GetReportsByTicket.GetReportsByTicketBuilder builder,
            string namespace_,
            string ticketId
        )
        {
            GetReportsByTicket op = builder.Build(
                namespace_,
                ticketId
            );

            return ((Reporting.Wrapper.AdminTickets)builder.WrapperObject!).GetReportsByTicket(op);
        }
        public static Reporting.Model.RestapiTicketResponse? Execute(
            this UpdateTicketResolutions.UpdateTicketResolutionsBuilder builder,
            RestapiUpdateTicketResolutionsRequest body,
            string namespace_,
            string ticketId
        )
        {
            UpdateTicketResolutions op = builder.Build(
                body,
                namespace_,
                ticketId
            );

            return ((Reporting.Wrapper.AdminTickets)builder.WrapperObject!).UpdateTicketResolutions(op);
        }
    }
}