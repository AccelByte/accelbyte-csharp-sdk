#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..47"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AuthCheck
$CLI_EXE \
    --sn ams \
    --op AuthCheck \
    > test.out 2>&1
eval_tap $? 2 'AuthCheck' test.out

#- 3 PortalHealthCheck
$CLI_EXE \
    --sn ams \
    --op PortalHealthCheck \
    > test.out 2>&1
eval_tap $? 3 'PortalHealthCheck' test.out

#- 4 AdminAccountGet
$CLI_EXE \
    --sn ams \
    --op AdminAccountGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 4 'AdminAccountGet' test.out

#- 5 AdminAccountCreate
# body param: body
echo '{"name": "bBuz5zkoaUEzGS3q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AdminAccountCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminAccountCreate' test.out

#- 6 AdminAccountLinkTokenGet
$CLI_EXE \
    --sn ams \
    --op AdminAccountLinkTokenGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 6 'AdminAccountLinkTokenGet' test.out

#- 7 AdminAccountLink
# body param: body
echo '{"token": "Zf0PbemSBELbZ0VB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AdminAccountLink \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'AdminAccountLink' test.out

#- 8 ArtifactGet
$CLI_EXE \
    --sn ams \
    --op ArtifactGet \
    --namespace $AB_NAMESPACE \
    --artifactType 'UGA7nkDeev2Oj060' \
    --count '277' \
    --endDate 'WV6dIabcFbSmeuIB' \
    --fleetID 'roF7bwRgwKvzESbh' \
    --imageID 'pxlDdEs4igdKeLmy' \
    --maxSize '95' \
    --minSize '40' \
    --offset '56' \
    --region 'Z5GZi5P12c61ts3f' \
    --serverId 'MI04rm2jUc9iav3t' \
    --sortBy 'TqlE9oLDPD0Lfle8' \
    --sortDirection 'desc' \
    --startDate 'z1KJmKedBfbWvKa5' \
    --status 'Ou124TsbQsxYFxGG' \
    > test.out 2>&1
eval_tap $? 8 'ArtifactGet' test.out

#- 9 ArtifactBulkDelete
$CLI_EXE \
    --sn ams \
    --op ArtifactBulkDelete \
    --namespace $AB_NAMESPACE \
    --artifactType 'HrfQkgXkiA5IZPqC' \
    --fleetId 'qp9vcyt67WAfWXfU' \
    --uploadedBefore '1973-08-23' \
    > test.out 2>&1
eval_tap $? 9 'ArtifactBulkDelete' test.out

#- 10 ArtifactUsageGet
$CLI_EXE \
    --sn ams \
    --op ArtifactUsageGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'ArtifactUsageGet' test.out

#- 11 ArtifactDelete
$CLI_EXE \
    --sn ams \
    --op ArtifactDelete \
    --artifactID 'wGB03tz8qIH4uRdN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 11 'ArtifactDelete' test.out

#- 12 ArtifactGetURL
$CLI_EXE \
    --sn ams \
    --op ArtifactGetURL \
    --artifactID 'O08HN6s9p8Y5c9eI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'ArtifactGetURL' test.out

#- 13 DevelopmentServerConfigurationList
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationList \
    --namespace $AB_NAMESPACE \
    --count '167' \
    --offset '23' \
    > test.out 2>&1
eval_tap $? 13 'DevelopmentServerConfigurationList' test.out

#- 14 DevelopmentServerConfigurationCreate
# body param: body
echo '{"commandLineArguments": "JtiNmY3y3n2Rim4N", "expiresAt": "1985-03-03T00:00:00Z", "imageId": "qhuNtj8FOvKZjs1t", "name": "LpERf77LzPoORBkR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'DevelopmentServerConfigurationCreate' test.out

#- 15 DevelopmentServerConfigurationGet
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationGet \
    --developmentServerConfigID 'mZ0A2zyZsb4FvWFI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'DevelopmentServerConfigurationGet' test.out

#- 16 DevelopmentServerConfigurationDelete
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationDelete \
    --developmentServerConfigID 'HPIbOjpls9BZTYc5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'DevelopmentServerConfigurationDelete' test.out

#- 17 DevelopmentServerConfigurationPatch
# body param: body
echo '{"commandLineArguments": "BsdSSVaAzzn4Gbgk", "expiresAt": "1989-04-15T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationPatch \
    --developmentServerConfigID 'eCaS6qyUCscHXs8P' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'DevelopmentServerConfigurationPatch' test.out

#- 18 FleetList
$CLI_EXE \
    --sn ams \
    --op FleetList \
    --namespace $AB_NAMESPACE \
    --active 'false' \
    --count '85' \
    --name 'OBlfUOqv7WmCuqcs' \
    --offset '81' \
    --region 'py8KrcQfucSq2X8g' \
    --sortBy 'name' \
    --sortDirection 'desc' \
    > test.out 2>&1
eval_tap $? 18 'FleetList' test.out

#- 19 FleetCreate
# body param: body
echo '{"active": false, "claimKeys": ["D356pVsUtNanddzg", "wxYdQc5hEfefdopc", "EM0JHfof2Hwi7vg3"], "dsHostConfiguration": {"instanceId": "osbh0fL2h7eJvAS2", "serversPerVm": 100}, "fallbackFleet": "foW8bDq5jPqzhN0Y", "imageDeploymentProfile": {"commandLine": "dGSrA9LXRwU6WLgp", "imageId": "QE9nXzhBC0uyMR4X", "portConfigurations": [{"name": "f2nfYvNvG8uQ14Ah", "protocol": "sxaALiBwpNJornrC"}, {"name": "QpMJj5igqat8xnPo", "protocol": "WTdHAkcyAy4drHlP"}, {"name": "cXGGl0Xw3veBfrpC", "protocol": "rnbaxhEvn3SGqcH9"}], "timeout": {"claim": 11, "creation": 77, "drain": 58, "session": 44, "unresponsive": 82}}, "name": "aJEoqWaFAGD6PRg9", "onDemand": false, "regions": [{"bufferSize": 73, "dynamicBuffer": false, "maxServerCount": 60, "minServerCount": 23, "region": "x3au9b9QjhzDlnJm"}, {"bufferSize": 17, "dynamicBuffer": false, "maxServerCount": 94, "minServerCount": 57, "region": "MIczbYilOziwG8CP"}, {"bufferSize": 76, "dynamicBuffer": true, "maxServerCount": 52, "minServerCount": 46, "region": "SZm9K3cMY617HSCY"}], "samplingRules": {"coredumps": {"crashed": {"collect": false, "percentage": 1}}, "logs": {"crashed": {"collect": false, "percentage": 77}, "success": {"collect": false, "percentage": 70}, "unclaimed": {"collect": true, "percentage": 45}}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'FleetCreate' test.out

#- 20 FleetGet
$CLI_EXE \
    --sn ams \
    --op FleetGet \
    --fleetID 'PgCcQ0axTWnmyEYL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'FleetGet' test.out

#- 21 FleetUpdate
# body param: body
echo '{"active": true, "claimKeys": ["QTpvLH6QPEBP8kSS", "FjeuL3wQQPYwmYFb", "xRvHYDCYwoGdmzXg"], "dsHostConfiguration": {"instanceId": "f1ewUTvnu0ensa3M", "serversPerVm": 92}, "fallbackFleet": "F7DTswnkSyuJTVjK", "imageDeploymentProfile": {"commandLine": "Q1ORLEIAePvDO2xk", "imageId": "VgyRk10b27RdU8Vc", "portConfigurations": [{"name": "eYQ9erPYQ5yVcQuv", "protocol": "DbGMqbEHkCQwMBcQ"}, {"name": "UNPHN8YZT0yJJ0uC", "protocol": "jjaNCRV3hSIiTEoT"}, {"name": "CSxjAqg9oGVEdC8m", "protocol": "Qir1Af0G6OrPH6Zs"}], "timeout": {"claim": 20, "creation": 98, "drain": 31, "session": 41, "unresponsive": 85}}, "name": "27iwplLJdzYS9K0V", "onDemand": true, "regions": [{"bufferSize": 6, "dynamicBuffer": true, "maxServerCount": 62, "minServerCount": 69, "region": "6MAqPc8lGIYWTwxy"}, {"bufferSize": 34, "dynamicBuffer": true, "maxServerCount": 71, "minServerCount": 40, "region": "XVmrtRlq1jv60HTn"}, {"bufferSize": 25, "dynamicBuffer": true, "maxServerCount": 60, "minServerCount": 22, "region": "rlzPFQmNu3ERxV0U"}], "samplingRules": {"coredumps": {"crashed": {"collect": false, "percentage": 0}}, "logs": {"crashed": {"collect": false, "percentage": 37}, "success": {"collect": false, "percentage": 52}, "unclaimed": {"collect": false, "percentage": 10}}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetUpdate \
    --fleetID 'n3mWZjTYM95e4aa8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'FleetUpdate' test.out

#- 22 FleetDelete
$CLI_EXE \
    --sn ams \
    --op FleetDelete \
    --fleetID 'xOJu7rNRVdygfKmU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'FleetDelete' test.out

#- 23 FleetArtifactSamplingRulesGet
$CLI_EXE \
    --sn ams \
    --op FleetArtifactSamplingRulesGet \
    --fleetID 'kzj9mHFpff2vDkz6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'FleetArtifactSamplingRulesGet' test.out

#- 24 FleetArtifactSamplingRulesSet
# body param: body
echo '{"coredumps": {"crashed": {"collect": true, "percentage": 53}}, "logs": {"crashed": {"collect": false, "percentage": 35}, "success": {"collect": true, "percentage": 12}, "unclaimed": {"collect": true, "percentage": 6}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetArtifactSamplingRulesSet \
    --fleetID 'n0L98WUoXvfU4qMI' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'FleetArtifactSamplingRulesSet' test.out

#- 25 FleetServers
$CLI_EXE \
    --sn ams \
    --op FleetServers \
    --fleetID 'pfgxw2ff5twRYbtd' \
    --namespace $AB_NAMESPACE \
    --count '75' \
    --offset '46' \
    --region '2r4wWs6IpYBxafo9' \
    --serverId 'b4xJyNnvHKrm8UuN' \
    --sortBy 'lT86N9yO0vyD6J5b' \
    --sortDirection 'desc' \
    --status 'crash backoff' \
    > test.out 2>&1
eval_tap $? 25 'FleetServers' test.out

#- 26 FleetServerHistory
$CLI_EXE \
    --sn ams \
    --op FleetServerHistory \
    --fleetID 'Vo20e6POTjrinAVV' \
    --namespace $AB_NAMESPACE \
    --count '29' \
    --offset '63' \
    --reason 'vpAAXNzcpbmX3lLF' \
    --region 'eXCiaXP8jBjK81t2' \
    --serverId 'V9TVauFcGkPgQ0hb' \
    --sortDirection '2tLrsMeoZiRYkbhE' \
    --status 'M1zTNY3lpincuf5d' \
    > test.out 2>&1
eval_tap $? 26 'FleetServerHistory' test.out

#- 27 ImageList
$CLI_EXE \
    --sn ams \
    --op ImageList \
    --namespace $AB_NAMESPACE \
    --count '16' \
    --inUse 'saQvKfFRqBam8jPt' \
    --isProtected 'false' \
    --name 'HTmzo0JmcQmnsUig' \
    --offset '98' \
    --sortBy 'TVCNrcaVozsjIXO2' \
    --sortDirection 'EUsAfBvo6Llcalks' \
    --status '2R3VMtipTVxXAF8K' \
    --tag 'hOKqbrECijFxOpOz' \
    > test.out 2>&1
eval_tap $? 27 'ImageList' test.out

#- 28 ImagesStorage
$CLI_EXE \
    --sn ams \
    --op ImagesStorage \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 28 'ImagesStorage' test.out

#- 29 ImageGet
$CLI_EXE \
    --sn ams \
    --op ImageGet \
    --imageID 'xeTLJQsZcTEzXaXU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'ImageGet' test.out

#- 30 ImageMarkForDeletion
$CLI_EXE \
    --sn ams \
    --op ImageMarkForDeletion \
    --imageID 'zpsAV6ct6XITL0QE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 30 'ImageMarkForDeletion' test.out

#- 31 ImagePatch
# body param: body
echo '{"addedTags": ["kadMSQluAoED9oYw", "S8oLyErKvRtHFGJR", "oGW7VBG1VB2sp2x9"], "isProtected": false, "name": "el3TiwTycqpVdINX", "removedTags": ["zvkSp0WbvxQWI0QG", "COx7eICkauWbFrSn", "U7d1BuhdwliTSDdm"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op ImagePatch \
    --imageID 'GVfegiD3mrVQaUr3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'ImagePatch' test.out

#- 32 ImageUnmarkForDeletion
$CLI_EXE \
    --sn ams \
    --op ImageUnmarkForDeletion \
    --imageID 'oT88Dfc7114QFGwT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 32 'ImageUnmarkForDeletion' test.out

#- 33 QoSRegionsGet
$CLI_EXE \
    --sn ams \
    --op QoSRegionsGet \
    --namespace $AB_NAMESPACE \
    --status 'zBVDg5v71kGCEt7h' \
    > test.out 2>&1
eval_tap $? 33 'QoSRegionsGet' test.out

#- 34 QoSRegionsUpdate
# body param: body
echo '{"status": "1mVwIQCJmQkvWbQr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op QoSRegionsUpdate \
    --namespace $AB_NAMESPACE \
    --region 'n2W0VkOF0pQOY0UC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'QoSRegionsUpdate' test.out

#- 35 InfoRegions
$CLI_EXE \
    --sn ams \
    --op InfoRegions \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'InfoRegions' test.out

#- 36 FleetServerInfo
$CLI_EXE \
    --sn ams \
    --op FleetServerInfo \
    --namespace $AB_NAMESPACE \
    --serverID 'cViiFKNjkT5hcONC' \
    > test.out 2>&1
eval_tap $? 36 'FleetServerInfo' test.out

#- 37 FleetServerConnectionInfo
$CLI_EXE \
    --sn ams \
    --op FleetServerConnectionInfo \
    --namespace $AB_NAMESPACE \
    --serverID 'aOyATBFgqLeAzvdc' \
    > test.out 2>&1
eval_tap $? 37 'FleetServerConnectionInfo' test.out

#- 38 ServerHistory
$CLI_EXE \
    --sn ams \
    --op ServerHistory \
    --namespace $AB_NAMESPACE \
    --serverID 'UEhWRo6ROvbuPQwl' \
    > test.out 2>&1
eval_tap $? 38 'ServerHistory' test.out

#- 39 InfoSupportedInstances
$CLI_EXE \
    --sn ams \
    --op InfoSupportedInstances \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'InfoSupportedInstances' test.out

#- 40 AccountGet
$CLI_EXE \
    --sn ams \
    --op AccountGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'AccountGet' test.out

#- 41 FleetClaimByID
# body param: body
echo '{"region": "9dVfJQGkDR00ofXs", "sessionId": "bnEzHiRs0NmGhxv1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByID \
    --fleetID 'vuN7Xv6OuG6RR1jP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'FleetClaimByID' test.out

#- 42 LocalWatchdogConnect
$CLI_EXE \
    --sn ams \
    --op LocalWatchdogConnect \
    --namespace $AB_NAMESPACE \
    --watchdogID 'h8RblvnfNiABRf1g' \
    > test.out 2>&1
eval_tap $? 42 'LocalWatchdogConnect' test.out

#- 43 FleetClaimByKeys
# body param: body
echo '{"claimKeys": ["dXM7QlAlnjAfgxOd", "Zdf9tLHO1qrNyhmU", "EADczzrL31HuYKsC"], "regions": ["BBgwb1hGjHJgxrcE", "vnfJqU4hCv5egSQD", "ePKSZKp6zwDQS1at"], "sessionId": "vJrALaiplJgRhedl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByKeys \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'FleetClaimByKeys' test.out

#- 44 WatchdogConnect
$CLI_EXE \
    --sn ams \
    --op WatchdogConnect \
    --namespace $AB_NAMESPACE \
    --watchdogID '5Ewh3jDayYStUiBB' \
    > test.out 2>&1
eval_tap $? 44 'WatchdogConnect' test.out

#- 45 UploadURLGet
$CLI_EXE \
    --sn ams \
    --op UploadURLGet \
    > test.out 2>&1
eval_tap $? 45 'UploadURLGet' test.out

#- 46 Func1
$CLI_EXE \
    --sn ams \
    --op Func1 \
    > test.out 2>&1
eval_tap $? 46 'Func1' test.out

#- 47 BasicHealthCheck
$CLI_EXE \
    --sn ams \
    --op BasicHealthCheck \
    > test.out 2>&1
eval_tap $? 47 'BasicHealthCheck' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE