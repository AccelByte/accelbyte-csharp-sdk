#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..47"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AuthCheck
$CLI_EXE \
    --sn ams \
    --op AuthCheck \
    > test.out 2>&1
eval_tap $? 2 'AuthCheck' test.out

#- 3 PortalHealthCheck
$CLI_EXE \
    --sn ams \
    --op PortalHealthCheck \
    > test.out 2>&1
eval_tap $? 3 'PortalHealthCheck' test.out

#- 4 AdminAccountGet
$CLI_EXE \
    --sn ams \
    --op AdminAccountGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 4 'AdminAccountGet' test.out

#- 5 AdminAccountCreate
# body param: body
echo '{"name": "bBuz5zkoaUEzGS3q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AdminAccountCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminAccountCreate' test.out

#- 6 AdminAccountLinkTokenGet
$CLI_EXE \
    --sn ams \
    --op AdminAccountLinkTokenGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 6 'AdminAccountLinkTokenGet' test.out

#- 7 AdminAccountLink
# body param: body
echo '{"token": "Zf0PbemSBELbZ0VB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op AdminAccountLink \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'AdminAccountLink' test.out

#- 8 ArtifactGet
$CLI_EXE \
    --sn ams \
    --op ArtifactGet \
    --namespace $AB_NAMESPACE \
    --artifactType 'UGA7nkDeev2Oj060' \
    --count '277' \
    --endDate 'WV6dIabcFbSmeuIB' \
    --fleetID 'roF7bwRgwKvzESbh' \
    --imageID 'pxlDdEs4igdKeLmy' \
    --maxSize '95' \
    --minSize '40' \
    --offset '56' \
    --region 'Z5GZi5P12c61ts3f' \
    --serverId 'MI04rm2jUc9iav3t' \
    --sortBy 'TqlE9oLDPD0Lfle8' \
    --sortDirection 'desc' \
    --startDate 'z1KJmKedBfbWvKa5' \
    --status 'Ou124TsbQsxYFxGG' \
    > test.out 2>&1
eval_tap $? 8 'ArtifactGet' test.out

#- 9 ArtifactBulkDelete
$CLI_EXE \
    --sn ams \
    --op ArtifactBulkDelete \
    --namespace $AB_NAMESPACE \
    --artifactType 'HrfQkgXkiA5IZPqC' \
    --fleetId 'qp9vcyt67WAfWXfU' \
    --uploadedBefore '1973-08-23' \
    > test.out 2>&1
eval_tap $? 9 'ArtifactBulkDelete' test.out

#- 10 ArtifactUsageGet
$CLI_EXE \
    --sn ams \
    --op ArtifactUsageGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'ArtifactUsageGet' test.out

#- 11 ArtifactDelete
$CLI_EXE \
    --sn ams \
    --op ArtifactDelete \
    --artifactID 'wGB03tz8qIH4uRdN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 11 'ArtifactDelete' test.out

#- 12 ArtifactGetURL
$CLI_EXE \
    --sn ams \
    --op ArtifactGetURL \
    --artifactID 'O08HN6s9p8Y5c9eI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'ArtifactGetURL' test.out

#- 13 DevelopmentServerConfigurationList
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationList \
    --namespace $AB_NAMESPACE \
    --count '167' \
    --imageId 'lW6BywsSSZTGlubs' \
    --name 'mhjXcScOUvrjJBO7' \
    --offset '40' \
    --sortBy 'expires_at' \
    --sortDirection 'asc' \
    > test.out 2>&1
eval_tap $? 13 'DevelopmentServerConfigurationList' test.out

#- 14 DevelopmentServerConfigurationCreate
# body param: body
echo '{"commandLineArguments": "LpERf77LzPoORBkR", "expiresAt": "1977-12-30T00:00:00Z", "imageId": "Z0A2zyZsb4FvWFIH", "name": "PIbOjpls9BZTYc5B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'DevelopmentServerConfigurationCreate' test.out

#- 15 DevelopmentServerConfigurationGet
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationGet \
    --developmentServerConfigID 'sdSSVaAzzn4GbgkK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'DevelopmentServerConfigurationGet' test.out

#- 16 DevelopmentServerConfigurationDelete
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationDelete \
    --developmentServerConfigID 'eCaS6qyUCscHXs8P' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'DevelopmentServerConfigurationDelete' test.out

#- 17 DevelopmentServerConfigurationPatch
# body param: body
echo '{"commandLineArguments": "lOBlfUOqv7WmCuqc", "expiresAt": "1980-11-20T00:00:00Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op DevelopmentServerConfigurationPatch \
    --developmentServerConfigID 'py8KrcQfucSq2X8g' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'DevelopmentServerConfigurationPatch' test.out

#- 18 FleetList
$CLI_EXE \
    --sn ams \
    --op FleetList \
    --namespace $AB_NAMESPACE \
    --active 'true' \
    --count '33' \
    --name 'JORk4j04YfnXTsQU' \
    --offset '35' \
    --region 'dzgwxYdQc5hEfefd' \
    --sortBy 'active' \
    --sortDirection 'desc' \
    > test.out 2>&1
eval_tap $? 18 'FleetList' test.out

#- 19 FleetCreate
# body param: body
echo '{"active": true, "claimKeys": ["cEM0JHfof2Hwi7vg", "3osbh0fL2h7eJvAS", "2W4uqkhwSC7EajwH"], "dsHostConfiguration": {"instanceId": "O3LfvwPewrf19Njm", "serversPerVm": 31}, "fallbackFleet": "0xCDlPeNq0CvMXty", "hibernateAfterPeriod": "UWXrdZaFeacGT2x6", "imageDeploymentProfile": {"commandLine": "o28Njxyw7RHldq0m", "imageId": "7NjUZ95Z5XDLBN9Y", "portConfigurations": [{"name": "GVPtkjt0OyBlJi4R", "protocol": "bZ0Iy11mfOFjCzZV"}, {"name": "cGomWF1oAqUNFDtX", "protocol": "nXLvOAsW8wYh4gq7"}, {"name": "pRVZVLJiDx3au9b9", "protocol": "QjhzDlnJmi4XaBTg"}], "timeout": {"claim": 30, "creation": 52, "drain": 3, "session": 19, "unresponsive": 11}}, "name": "ilOziwG8CPLOzSZm", "onDemand": true, "regions": [{"bufferSize": 5, "dynamicBuffer": false, "maxServerCount": 79, "minServerCount": 53, "region": "Y617HSCYZaL46I3P"}, {"bufferSize": 14, "dynamicBuffer": false, "maxServerCount": 58, "minServerCount": 22, "region": "cQ0axTWnmyEYLZQT"}, {"bufferSize": 31, "dynamicBuffer": true, "maxServerCount": 28, "minServerCount": 77, "region": "uMcAwrSzYnrcetxO"}], "samplingRules": {"coredumps": {"crashed": {"collect": false, "percentage": 8}}, "logs": {"crashed": {"collect": true, "percentage": 17}, "success": {"collect": true, "percentage": 87}, "unclaimed": {"collect": false, "percentage": 24}}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetCreate \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 19 'FleetCreate' test.out

#- 20 FleetGet
$CLI_EXE \
    --sn ams \
    --op FleetGet \
    --fleetID 'wmYFbxRvHYDCYwoG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 20 'FleetGet' test.out

#- 21 FleetUpdate
# body param: body
echo '{"active": false, "claimKeys": ["xGWRH7fz4BdPhLtH", "RJOImSq37aeAaGq0", "NIj53gXkmrayvcIY"], "dsHostConfiguration": {"instanceId": "iWxIAxfvLzSpDFY3", "serversPerVm": 23}, "fallbackFleet": "dU8VceYQ9erPYQ5y", "hibernateAfterPeriod": "VcQuvDbGMqbEHkCQ", "imageDeploymentProfile": {"commandLine": "wMBcQUNPHN8YZT0y", "imageId": "JJ0uCjjaNCRV3hSI", "portConfigurations": [{"name": "iTEoTCSxjAqg9oGV", "protocol": "EdC8mQir1Af0G6Or"}, {"name": "PH6ZsjpPgHKISHtB", "protocol": "8tWdJM9Qc5HmR0vk"}, {"name": "nXO45AUtNXSTItt3", "protocol": "5OJTfJBZX62yI9g5"}], "timeout": {"claim": 89, "creation": 35, "drain": 60, "session": 22, "unresponsive": 35}}, "name": "3gYx6Xmv1DzPHux3", "onDemand": false, "regions": [{"bufferSize": 0, "dynamicBuffer": false, "maxServerCount": 37, "minServerCount": 92, "region": "khn3mWZjTYM95e4a"}, {"bufferSize": 1, "dynamicBuffer": true, "maxServerCount": 0, "minServerCount": 83, "region": "Zw4NqSNylcljuNM3"}, {"bufferSize": 9, "dynamicBuffer": false, "maxServerCount": 95, "minServerCount": 95, "region": "mHFpff2vDkz68zor"}], "samplingRules": {"coredumps": {"crashed": {"collect": true, "percentage": 12}}, "logs": {"crashed": {"collect": true, "percentage": 6}, "success": {"collect": false, "percentage": 62}, "unclaimed": {"collect": true, "percentage": 77}}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetUpdate \
    --fleetID 'v9nKMOgO5W8SUaZj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'FleetUpdate' test.out

#- 22 FleetDelete
$CLI_EXE \
    --sn ams \
    --op FleetDelete \
    --fleetID 'CpNtJSMm8kDi3Rwu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'FleetDelete' test.out

#- 23 FleetArtifactSamplingRulesGet
$CLI_EXE \
    --sn ams \
    --op FleetArtifactSamplingRulesGet \
    --fleetID 'bq7wtRGdT447Oa51' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 23 'FleetArtifactSamplingRulesGet' test.out

#- 24 FleetArtifactSamplingRulesSet
# body param: body
echo '{"coredumps": {"crashed": {"collect": false, "percentage": 48}}, "logs": {"crashed": {"collect": true, "percentage": 76}, "success": {"collect": false, "percentage": 26}, "unclaimed": {"collect": false, "percentage": 44}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetArtifactSamplingRulesSet \
    --fleetID 'sw270pMmOQJrpEBb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 24 'FleetArtifactSamplingRulesSet' test.out

#- 25 FleetServers
$CLI_EXE \
    --sn ams \
    --op FleetServers \
    --fleetID 'VvBn8Lsf2qSAtizV' \
    --namespace $AB_NAMESPACE \
    --count '82' \
    --offset '15' \
    --region 'TjrinAVVovpAAXNz' \
    --serverId 'cpbmX3lLFeXCiaXP' \
    --sortBy '8jBjK81t2V9TVauF' \
    --sortDirection 'asc' \
    --status 'claimed' \
    > test.out 2>&1
eval_tap $? 25 'FleetServers' test.out

#- 26 FleetServerHistory
$CLI_EXE \
    --sn ams \
    --op FleetServerHistory \
    --fleetID 'GkPgQ0hb2tLrsMeo' \
    --namespace $AB_NAMESPACE \
    --count '16' \
    --offset '70' \
    --reason 'RYkbhEM1zTNY3lpi' \
    --region 'ncuf5d5saQvKfFRq' \
    --serverId 'Bam8jPtKHTmzo0Jm' \
    --sortDirection 'cQmnsUigVynjGFyV' \
    --status 'icGQAVv32ftRAsmC' \
    > test.out 2>&1
eval_tap $? 26 'FleetServerHistory' test.out

#- 27 ImageList
$CLI_EXE \
    --sn ams \
    --op ImageList \
    --namespace $AB_NAMESPACE \
    --count '90' \
    --inUse 'Llcalks2R3VMtipT' \
    --isProtected 'true' \
    --name 'qJvaZrf2qXQFCzRV' \
    --offset '49' \
    --sortBy 'paELj5dw3LK0gPYh' \
    --sortDirection 'PPG5sAIfYtYozA2O' \
    --status 'ntGCwQSHHdPLwjTn' \
    --tag 'grvb2E1X9ecBBhRA' \
    --targetArchitecture 'YjR7c4x5bIk8pVpx' \
    > test.out 2>&1
eval_tap $? 27 'ImageList' test.out

#- 28 ImagesStorage
$CLI_EXE \
    --sn ams \
    --op ImagesStorage \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 28 'ImagesStorage' test.out

#- 29 ImageGet
$CLI_EXE \
    --sn ams \
    --op ImageGet \
    --imageID 'dUWOPel3TiwTycqp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'ImageGet' test.out

#- 30 ImageMarkForDeletion
$CLI_EXE \
    --sn ams \
    --op ImageMarkForDeletion \
    --imageID 'VdINXzvkSp0WbvxQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 30 'ImageMarkForDeletion' test.out

#- 31 ImagePatch
# body param: body
echo '{"addedTags": ["WI0QGCOx7eICkauW", "bFrSnU7d1Buhdwli", "TSDdmGVfegiD3mrV"], "isProtected": true, "name": "aUr3oT88Dfc7114Q", "removedTags": ["FGwTzBVDg5v71kGC", "Et7h1mVwIQCJmQkv", "WbQrn2W0VkOF0pQO"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op ImagePatch \
    --imageID 'Y0UCcViiFKNjkT5h' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'ImagePatch' test.out

#- 32 ImageUnmarkForDeletion
$CLI_EXE \
    --sn ams \
    --op ImageUnmarkForDeletion \
    --imageID 'cONCaOyATBFgqLeA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 32 'ImageUnmarkForDeletion' test.out

#- 33 QoSRegionsGet
$CLI_EXE \
    --sn ams \
    --op QoSRegionsGet \
    --namespace $AB_NAMESPACE \
    --status 'zvdcUEhWRo6ROvbu' \
    > test.out 2>&1
eval_tap $? 33 'QoSRegionsGet' test.out

#- 34 QoSRegionsUpdate
# body param: body
echo '{"status": "PQwl9dVfJQGkDR00"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op QoSRegionsUpdate \
    --namespace $AB_NAMESPACE \
    --region 'ofXsbnEzHiRs0NmG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'QoSRegionsUpdate' test.out

#- 35 InfoRegions
$CLI_EXE \
    --sn ams \
    --op InfoRegions \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'InfoRegions' test.out

#- 36 FleetServerInfo
$CLI_EXE \
    --sn ams \
    --op FleetServerInfo \
    --namespace $AB_NAMESPACE \
    --serverID 'hxv1vuN7Xv6OuG6R' \
    > test.out 2>&1
eval_tap $? 36 'FleetServerInfo' test.out

#- 37 FleetServerConnectionInfo
$CLI_EXE \
    --sn ams \
    --op FleetServerConnectionInfo \
    --namespace $AB_NAMESPACE \
    --serverID 'R1jPh8RblvnfNiAB' \
    > test.out 2>&1
eval_tap $? 37 'FleetServerConnectionInfo' test.out

#- 38 ServerHistory
$CLI_EXE \
    --sn ams \
    --op ServerHistory \
    --namespace $AB_NAMESPACE \
    --serverID 'Rf1gdXM7QlAlnjAf' \
    > test.out 2>&1
eval_tap $? 38 'ServerHistory' test.out

#- 39 InfoSupportedInstances
$CLI_EXE \
    --sn ams \
    --op InfoSupportedInstances \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'InfoSupportedInstances' test.out

#- 40 AccountGet
$CLI_EXE \
    --sn ams \
    --op AccountGet \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'AccountGet' test.out

#- 41 FleetClaimByID
# body param: body
echo '{"region": "gxOdZdf9tLHO1qrN", "sessionId": "yhmUEADczzrL31Hu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByID \
    --fleetID 'YKsCBBgwb1hGjHJg' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'FleetClaimByID' test.out

#- 42 LocalWatchdogConnect
$CLI_EXE \
    --sn ams \
    --op LocalWatchdogConnect \
    --namespace $AB_NAMESPACE \
    --watchdogID 'xrcEvnfJqU4hCv5e' \
    > test.out 2>&1
eval_tap $? 42 'LocalWatchdogConnect' test.out

#- 43 FleetClaimByKeys
# body param: body
echo '{"claimKeys": ["gSQDePKSZKp6zwDQ", "S1atvJrALaiplJgR", "hedl5Ewh3jDayYSt"], "regions": ["UiBB1yz3iP8gH88U", "enlMVzIOP8NOf91L", "sD7cWWOgAs8ThMpA"], "sessionId": "GIapYftYZkBXiEhd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ams \
    --op FleetClaimByKeys \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'FleetClaimByKeys' test.out

#- 44 WatchdogConnect
$CLI_EXE \
    --sn ams \
    --op WatchdogConnect \
    --namespace $AB_NAMESPACE \
    --watchdogID 'iS41VBAEUvoBlbH0' \
    > test.out 2>&1
eval_tap $? 44 'WatchdogConnect' test.out

#- 45 UploadURLGet
$CLI_EXE \
    --sn ams \
    --op UploadURLGet \
    > test.out 2>&1
eval_tap $? 45 'UploadURLGet' test.out

#- 46 Func1
$CLI_EXE \
    --sn ams \
    --op Func1 \
    > test.out 2>&1
eval_tap $? 46 'Func1' test.out

#- 47 BasicHealthCheck
$CLI_EXE \
    --sn ams \
    --op BasicHealthCheck \
    > test.out 2>&1
eval_tap $? 47 'BasicHealthCheck' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE