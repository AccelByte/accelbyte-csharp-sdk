#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..354"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "5Ezw51r5", "appType": "DEMO", "baseAppId": "hKz8XvJZ", "boothName": "UpzWFojk", "boundItemIds": ["bHbVQH1K", "WIQrzqIq", "v6XM0swT"], "categoryPath": "0rDUfZIx", "clazz": "mZjJqBEr", "createdAt": "1980-02-13T00:00:00Z", "description": "ivxmMHxM", "displayOrder": 11, "entitlementType": "DURABLE", "ext": {"ltpAecHP": {}, "5hV9mfVq": {}, "d5T93N2T": {}}, "features": ["78u0qUHE", "nj6pIqcw", "rsLeFAxP"], "fresh": false, "images": [{"as": "ZsRQQqka", "caption": "xjFXNdKT", "height": 33, "imageUrl": "ATOiwtmu", "smallImageUrl": "4vqT7hgP", "width": 68}, {"as": "0vdqDyTb", "caption": "geA0m4S0", "height": 6, "imageUrl": "LfABQ6CL", "smallImageUrl": "5K69l5tf", "width": 55}, {"as": "mXNTn9wU", "caption": "09mqBJic", "height": 30, "imageUrl": "jSwGO5r0", "smallImageUrl": "WUNqkMu3", "width": 21}], "itemId": "f7dIALAH", "itemIds": ["dmA6CNjJ", "g7qrKu0a", "3ql9mgvu"], "itemQty": {"PlLsWTSM": 26, "uQjZVWwS": 57, "jApeANp5": 39}, "itemType": "SEASON", "language": "lxLXb0WJ", "listable": true, "localExt": {"P73tkxjQ": {}, "gxbot3jZ": {}, "lj3MvidP": {}}, "longDescription": "1Ad8LaZf", "maxCount": 19, "maxCountPerUser": 34, "name": "g25Bu7V2", "namespace": "VJRXWqKB", "optionBoxConfig": {"boxItems": [{"count": 60, "itemId": "fSfix4x8", "itemSku": "b0dXSYNK"}, {"count": 88, "itemId": "PNr2NAyV", "itemSku": "SiaEE6i5"}, {"count": 3, "itemId": "lkQgdNjY", "itemSku": "35ILhbaR"}]}, "purchasable": false, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 98, "comparison": "isLessThan", "name": "zmN3rtec", "predicateType": "SeasonPassPredicate", "value": "RmCdfUgj", "values": ["ysVkx7vL", "2lkKOJbv", "hmZhNq0v"]}, {"anyOf": 41, "comparison": "is", "name": "XH8jwPNz", "predicateType": "SeasonPassPredicate", "value": "MpFRs3Oi", "values": ["q0qlYTP6", "4UBincIg", "jOj8zLJs"]}, {"anyOf": 24, "comparison": "includes", "name": "1g7VAiJL", "predicateType": "SeasonTierPredicate", "value": "rluyVC7D", "values": ["1IAVFras", "8vSX8bvf", "FtNjMbai"]}]}, {"operator": "or", "predicates": [{"anyOf": 7, "comparison": "isLessThan", "name": "lQDh6tL7", "predicateType": "EntitlementPredicate", "value": "CM8SxM1r", "values": ["h3Dxquke", "gyGIAb8V", "PKKHrBOQ"]}, {"anyOf": 76, "comparison": "isNot", "name": "4nlP4QpY", "predicateType": "SeasonTierPredicate", "value": "6vrXxx18", "values": ["aqdTBmmn", "8sjPF3zY", "HCd6lAWW"]}, {"anyOf": 99, "comparison": "isLessThanOrEqual", "name": "y7gkpi2a", "predicateType": "SeasonTierPredicate", "value": "KNT6I1CZ", "values": ["aesdkXK4", "S1yUvfvb", "Gat7HELj"]}]}, {"operator": "or", "predicates": [{"anyOf": 42, "comparison": "excludes", "name": "jzcDvZ0N", "predicateType": "SeasonPassPredicate", "value": "LeEcp38S", "values": ["GvAo31qo", "GCsrItw3", "EJwjvI5P"]}, {"anyOf": 52, "comparison": "isLessThanOrEqual", "name": "IjgJsiWB", "predicateType": "SeasonTierPredicate", "value": "hkVk8arv", "values": ["KqHHlOcK", "8yAMs5eb", "vRb5oRTW"]}, {"anyOf": 80, "comparison": "isGreaterThan", "name": "H1f3TOTW", "predicateType": "EntitlementPredicate", "value": "3Xmu4vKW", "values": ["kvlJWWwJ", "MA2jvT3L", "p5QctEti"]}]}]}, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 87, "fixedTrialCycles": 85, "graceDays": 57}, "region": "ZZrju0ne", "regionData": [{"currencyCode": "6F4r4paF", "currencyNamespace": "Stwwc5Lp", "currencyType": "REAL", "discountAmount": 2, "discountExpireAt": "1979-10-30T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1974-10-04T00:00:00Z", "discountedPrice": 3, "expireAt": "1983-01-25T00:00:00Z", "price": 87, "purchaseAt": "1992-11-06T00:00:00Z", "trialPrice": 15}, {"currencyCode": "nP1DUQoP", "currencyNamespace": "FEmR8Yqb", "currencyType": "REAL", "discountAmount": 10, "discountExpireAt": "1985-09-06T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1971-09-15T00:00:00Z", "discountedPrice": 84, "expireAt": "1992-12-05T00:00:00Z", "price": 55, "purchaseAt": "1999-07-08T00:00:00Z", "trialPrice": 19}, {"currencyCode": "0ApteDZQ", "currencyNamespace": "wbiTnzAi", "currencyType": "VIRTUAL", "discountAmount": 20, "discountExpireAt": "1981-09-27T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1986-05-02T00:00:00Z", "discountedPrice": 47, "expireAt": "1989-08-23T00:00:00Z", "price": 62, "purchaseAt": "1994-06-22T00:00:00Z", "trialPrice": 88}], "seasonType": "TIER", "sku": "cDO0Ody8", "stackable": false, "status": "ACTIVE", "tags": ["JRi4wSdJ", "lEJRTh71", "4GgY2c59"], "targetCurrencyCode": "1KooAtWt", "targetItemId": "mvZFNjuy", "targetNamespace": "Qi569iau", "thumbnailUrl": "P4dZtEC2", "title": "dwqBgqfq", "updatedAt": "1995-01-19T00:00:00Z", "useCount": 36}, "namespace": "fgSjfrLG", "order": {"currency": {"currencyCode": "svUWA01B", "currencySymbol": "yIIJUCce", "currencyType": "REAL", "decimals": 60, "namespace": "HDlgEWpU"}, "ext": {"l7hahiBV": {}, "cTg7e1Ip": {}, "0Kecgmht": {}}, "free": true}, "source": "REDEEM_CODE"}, "script": "CUZcsyPf", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'nOLiHXHw' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "YHDn98cL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'G10ABJwD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'ebG2yZBq' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "sX1nyKBU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'ueEY3ss2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "JKSooOQw", "dryRun": true, "fulfillmentUrl": "38d9Cz0L", "itemType": "MEDIA", "purchaseConditionUrl": "1ovm3UFQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz '1shrTink' \
    --itemType 'APP' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id '5LXFSj1h' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "EnuOHc3A", "dryRun": false, "fulfillmentUrl": "aap2Gpes", "purchaseConditionUrl": "M1gdV5Ux"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'JbwPVniF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'QE9R5dtI' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '8' \
    --name 'fyAt4vRH' \
    --offset '19' \
    --tag 'Uiab1UtR' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "kFqVft8n", "items": [{"extraSubscriptionDays": 10, "itemId": "xRQpG93r", "itemName": "Ff8fif6D", "quantity": 93}, {"extraSubscriptionDays": 10, "itemId": "SMseTwNE", "itemName": "LJ0EasZM", "quantity": 8}, {"extraSubscriptionDays": 96, "itemId": "UAsw3cAM", "itemName": "LtM7bHd2", "quantity": 54}], "maxRedeemCountPerCampaignPerUser": 47, "maxRedeemCountPerCode": 33, "maxRedeemCountPerCodePerUser": 79, "maxSaleCount": 71, "name": "uninFVuR", "redeemEnd": "1986-07-04T00:00:00Z", "redeemStart": "1981-04-30T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["tBtqhRKA", "5lgMPq0d", "qGtcHN3J"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'TKhW9FjZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "MQ7FqgxM", "items": [{"extraSubscriptionDays": 42, "itemId": "sjSAnqJZ", "itemName": "mZR8EKjb", "quantity": 66}, {"extraSubscriptionDays": 75, "itemId": "FL2GCkfM", "itemName": "CZWo4krB", "quantity": 70}, {"extraSubscriptionDays": 95, "itemId": "V7Hh2X7z", "itemName": "4SGEh2MJ", "quantity": 17}], "maxRedeemCountPerCampaignPerUser": 81, "maxRedeemCountPerCode": 39, "maxRedeemCountPerCodePerUser": 69, "maxSaleCount": 66, "name": "p2h7m7WJ", "redeemEnd": "1982-06-22T00:00:00Z", "redeemStart": "1979-01-10T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["czqiZlRL", "WnoSqKGA", "gvsRKB61"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'vw4qzxwR' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'ol9NX6ro' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'yYiJsiGK' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "fVMgdOsA", "localizationDisplayNames": {"xGYWLopG": "iqRIGrVV", "pDtKsW3k": "iihi2aAK", "89ZOvcdw": "DO0Y4RxA"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'aN6wEZF1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'A5f2w8Sf' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'DerquCwO' \
    --namespace $AB_NAMESPACE \
    --storeId 'JqKB0lzf' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"pzqzvuHf": "qixOQQiv", "ACmGcg5J": "MKZIZdi0", "5mF0vVWi": "RU9Y3hnI"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'ShLdz8ac' \
    --namespace $AB_NAMESPACE \
    --storeId 'nk5N5JBB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath '6gf0RkfP' \
    --namespace $AB_NAMESPACE \
    --storeId 'WtHyeyGN' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'HfAbhP3E' \
    --namespace $AB_NAMESPACE \
    --storeId '9UIkgcLd' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'eOwWP7Vh' \
    --namespace $AB_NAMESPACE \
    --storeId 'BS6FiMcB' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '9k1ieUS0' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '92' \
    --code 'sNIYnyTk' \
    --limit '40' \
    --offset '58' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'Ch0eiE7b' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'GncoedrF' \
    --namespace $AB_NAMESPACE \
    --batchNo '85' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'Wwk0rNF7' \
    --namespace $AB_NAMESPACE \
    --batchNo '42' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'Z056tDQ6' \
    --namespace $AB_NAMESPACE \
    --batchNo '50' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'SglhPB0b' \
    --namespace $AB_NAMESPACE \
    --code 'bzX7HMjQ' \
    --limit '2' \
    --offset '35' \
    --userId 'jBjflMaY' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'mvJuN3Km' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '6FKnOJhF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'Y7z71Ufv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "UqIPBV98", "currencySymbol": "pCJMnQqI", "currencyType": "REAL", "decimals": 79, "localizationDescriptions": {"5e4kGhzT": "txXq7Tqb", "sANtSYDn": "lmALAajj", "vnKzx9by": "8sinhQTQ"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"0wbrbGc0": "eDVSzHzC", "TfAZdWCj": "mZbADHuG", "lUmNsHNq": "ItDbidRv"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'eKxUlLgw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'jE5eQsvT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'jWPsM0Jq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'YLxut1qo' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "UL35AB3f", "rewards": [{"currency": {"currencyCode": "Oz7OsKzz", "namespace": "pdT0fOow"}, "item": {"itemId": "ovmJ5Srr", "itemSku": "HsFtl7V6", "itemType": "GnNaqlbh"}, "quantity": 94, "type": "CURRENCY"}, {"currency": {"currencyCode": "rhYgRF4f", "namespace": "MhX9IAk6"}, "item": {"itemId": "oGbV7RuZ", "itemSku": "cWkE5CQI", "itemType": "xhkPTvL2"}, "quantity": 56, "type": "ITEM"}, {"currency": {"currencyCode": "LeaOXQ5R", "namespace": "YhqOwO39"}, "item": {"itemId": "ggOh1tj3", "itemSku": "k9JfshxS", "itemType": "fHdZnEZI"}, "quantity": 65, "type": "ITEM"}]}, {"id": "zOvClCNj", "rewards": [{"currency": {"currencyCode": "lwecc6qb", "namespace": "0GjjOJ0P"}, "item": {"itemId": "jc2peUeE", "itemSku": "gZJcO0MD", "itemType": "2LgXJToD"}, "quantity": 27, "type": "ITEM"}, {"currency": {"currencyCode": "0zVRKTaq", "namespace": "l5UPfA01"}, "item": {"itemId": "1au4Ue1i", "itemSku": "2CixGseW", "itemType": "gS1TbgQX"}, "quantity": 28, "type": "CURRENCY"}, {"currency": {"currencyCode": "xP1sdHyI", "namespace": "gquLMBgM"}, "item": {"itemId": "ywA9rp2b", "itemSku": "Gmt3WxhM", "itemType": "J2zOUklm"}, "quantity": 8, "type": "CURRENCY"}]}, {"id": "5P0Z3iC2", "rewards": [{"currency": {"currencyCode": "tD1VjMO4", "namespace": "XRlrH6H9"}, "item": {"itemId": "EQS3ksNp", "itemSku": "7Ne8s9S2", "itemType": "UaZdVgXG"}, "quantity": 84, "type": "CURRENCY"}, {"currency": {"currencyCode": "HB2sLV84", "namespace": "2VIfshPJ"}, "item": {"itemId": "jhjvFl44", "itemSku": "yG3L8RWz", "itemType": "MGFCG7KN"}, "quantity": 6, "type": "ITEM"}, {"currency": {"currencyCode": "BVpNwbUp", "namespace": "slHcv1OY"}, "item": {"itemId": "o7TryQ40", "itemSku": "OB5UBPlQ", "itemType": "s7mupdfH"}, "quantity": 36, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"pHC7Y48n": "C1ewipaB", "j5ROrrDn": "2EuqsvxR", "WPVezavm": "JiAAyrg5"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"aSqKHOsa": "DruTchx8", "7BiIL5hh": "SEkPYisE", "fQnxKoLB": "10GKqTHN"}}, {"platform": "PSN", "platformDlcIdMap": {"HDuUP5zZ": "HkPDJhlH", "oqdk6Qml": "uyuQsERT", "hNodZigr": "rh9mGH2o"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'nRmkBrY9' \
    --itemId '["XkH6HLl1", "zWGuY8id", "2dsqB7I5"]' \
    --limit '5' \
    --offset '93' \
    --userId 'COrPetjQ' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'ZfCoIXyT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '30' \
    --offset '60' \
    --status 'SUCCESS' \
    --userId 'kFrqJMoh' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "sFGmv42e", "password": "puHUPYFa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "NHcicqdu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "iWYBN0LX", "serviceAccountId": "HMDMYP8T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "aAFMsnEv", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"trxHnl0O": "mL9KK2JD", "fbsIE7aT": "Zt1bKFpp", "ffqGGncW": "vFRN9ig0"}}, {"itemIdentity": "vfgvAbKN", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"jNptl8bQ": "LvG0a18G", "i63yn9eY": "P9uMghHN", "29YpUWON": "fwsib2Aj"}}, {"itemIdentity": "gT4OEH4r", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"QI9DTkpY": "TZ4tHc7G", "kEGFOH9x": "KEYOXVRH", "p13lwW19": "DqaJyc1r"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "tgkniwjI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "buN8AVdC", "publisherAuthenticationKey": "DTckhyZB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "ZnDVhdou", "clientSecret": "sSNon0zO", "organizationId": "8O8PzPCr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "MSMNyUmo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'pNs4O1KL' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 SyncInGameItem
# body param: body
echo '{"categoryPath": "Ni7Etpnd", "targetItemId": "TKEGDK0c", "targetNamespace": "Y9ZEvhJN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'N1E5s5TC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'SyncInGameItem' test.out

#- 81 CreateItem
# body param: body
echo '{"appId": "NtZ17Eyo", "appType": "DLC", "baseAppId": "H93YRaaj", "boothName": "AwNLl315", "categoryPath": "WlGbGvbd", "clazz": "jf9OQkuv", "displayOrder": 57, "entitlementType": "CONSUMABLE", "ext": {"VwvjjvXn": {}, "dP92iL5g": {}, "hrjlfrBt": {}}, "features": ["fMnwQIkY", "5cNDqlZ8", "zh4Bin9v"], "images": [{"as": "6aGgJkhd", "caption": "5X2M4jXK", "height": 79, "imageUrl": "Zt5ETjEz", "smallImageUrl": "BtCiA3N9", "width": 42}, {"as": "SrtrPb8X", "caption": "SdmioErW", "height": 47, "imageUrl": "I7fVCsHm", "smallImageUrl": "oaJVIHgF", "width": 48}, {"as": "9178obKN", "caption": "YfGp9sb6", "height": 96, "imageUrl": "M7ufGv2s", "smallImageUrl": "WY6kK3nP", "width": 15}], "itemIds": ["3hWSjm6O", "X7hkVJpo", "hwwb7w9k"], "itemQty": {"L1VwySHR": 72, "7rdjfL95": 34, "5lG4kR92": 25}, "itemType": "MEDIA", "listable": false, "localizations": {"4hh3Gl18": {"description": "VW6UgbaW", "localExt": {"WO8tvvFb": {}, "lBWizAnv": {}, "wzVXUOAa": {}}, "longDescription": "wIWwCq52", "title": "9G8uoKZ1"}, "EmabU6Pe": {"description": "39mDSMiM", "localExt": {"6J8s6JG6": {}, "mmIDh7Wk": {}, "Fgvg1zK0": {}}, "longDescription": "rinlUI8L", "title": "PukONfhf"}, "CltGyI7t": {"description": "MCq05r8y", "localExt": {"trYIJFYU": {}, "QkDjcGoD": {}, "5G5snCmG": {}}, "longDescription": "f7y3F2M6", "title": "PxvkXgQZ"}}, "maxCount": 49, "maxCountPerUser": 39, "name": "ai3DzjfT", "optionBoxConfig": {"boxItems": [{"count": 21, "itemId": "bwGLkMVW", "itemSku": "BDtyCdjI"}, {"count": 10, "itemId": "RdhWglCx", "itemSku": "Awp5JzWU"}, {"count": 25, "itemId": "GcQniFAq", "itemSku": "SlabdF1y"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 12, "fixedTrialCycles": 56, "graceDays": 35}, "regionData": {"VAjCmXIs": [{"currencyCode": "2zaZ31cy", "currencyNamespace": "bssTjW0o", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1977-05-20T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1996-03-15T00:00:00Z", "discountedPrice": 31, "expireAt": "1982-11-29T00:00:00Z", "price": 10, "purchaseAt": "1992-02-20T00:00:00Z", "trialPrice": 62}, {"currencyCode": "A9PwEwY0", "currencyNamespace": "m16wtNHS", "currencyType": "REAL", "discountAmount": 53, "discountExpireAt": "1997-09-01T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1999-04-26T00:00:00Z", "discountedPrice": 66, "expireAt": "1973-01-21T00:00:00Z", "price": 4, "purchaseAt": "1988-05-19T00:00:00Z", "trialPrice": 61}, {"currencyCode": "lLVydeP7", "currencyNamespace": "RQaMXDIk", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1996-12-29T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1987-08-05T00:00:00Z", "discountedPrice": 93, "expireAt": "1991-04-13T00:00:00Z", "price": 5, "purchaseAt": "1997-07-20T00:00:00Z", "trialPrice": 51}], "c6p2x1w6": [{"currencyCode": "cOdTtXJJ", "currencyNamespace": "KWee9egC", "currencyType": "VIRTUAL", "discountAmount": 16, "discountExpireAt": "1984-10-28T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1975-08-05T00:00:00Z", "discountedPrice": 20, "expireAt": "1988-03-10T00:00:00Z", "price": 50, "purchaseAt": "1999-05-14T00:00:00Z", "trialPrice": 65}, {"currencyCode": "o5biARj2", "currencyNamespace": "yUjfCxJ2", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1978-07-26T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1997-10-30T00:00:00Z", "discountedPrice": 90, "expireAt": "1986-05-08T00:00:00Z", "price": 50, "purchaseAt": "1973-09-22T00:00:00Z", "trialPrice": 25}, {"currencyCode": "rpYVyUHN", "currencyNamespace": "oTRkvlnw", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1982-10-10T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1972-02-28T00:00:00Z", "discountedPrice": 20, "expireAt": "1977-05-11T00:00:00Z", "price": 20, "purchaseAt": "1988-09-02T00:00:00Z", "trialPrice": 20}], "hGlVCIdo": [{"currencyCode": "FxXImF8A", "currencyNamespace": "DAv1cACN", "currencyType": "REAL", "discountAmount": 63, "discountExpireAt": "1974-03-08T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1992-03-16T00:00:00Z", "discountedPrice": 42, "expireAt": "1992-05-02T00:00:00Z", "price": 17, "purchaseAt": "1985-08-05T00:00:00Z", "trialPrice": 91}, {"currencyCode": "3UYpy2Ub", "currencyNamespace": "hnDrILfn", "currencyType": "REAL", "discountAmount": 0, "discountExpireAt": "1999-06-08T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1973-11-06T00:00:00Z", "discountedPrice": 90, "expireAt": "1996-03-21T00:00:00Z", "price": 81, "purchaseAt": "1989-12-13T00:00:00Z", "trialPrice": 39}, {"currencyCode": "cTPafaps", "currencyNamespace": "V0UlqmtX", "currencyType": "REAL", "discountAmount": 97, "discountExpireAt": "1982-06-10T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1997-06-30T00:00:00Z", "discountedPrice": 65, "expireAt": "1983-06-09T00:00:00Z", "price": 5, "purchaseAt": "1977-07-27T00:00:00Z", "trialPrice": 36}]}, "seasonType": "TIER", "sku": "vw4OpBEv", "stackable": true, "status": "ACTIVE", "tags": ["otDnKTh5", "fnNRGMZX", "yHuYHMm6"], "targetCurrencyCode": "shMP3FJi", "targetNamespace": "HvVNZZ9T", "thumbnailUrl": "is54lnXZ", "useCount": 63}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'E22VOtmm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 81 'CreateItem' test.out

#- 82 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'TLwNcOSf' \
    --appId 'vjfNScMV' \
    > test.out 2>&1
eval_tap $? 82 'GetItemByAppId' test.out

#- 83 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --availableDate 'zrIfsRYk' \
    --baseAppId '3lVNLrXC' \
    --categoryPath 'Sacm35bG' \
    --features 'Fd46TwyC' \
    --itemType 'INGAMEITEM' \
    --limit '36' \
    --offset '72' \
    --region 'Irtffd6z' \
    --sortBy '["displayOrder:desc", "updatedAt", "name"]' \
    --storeId 'V5hLWn5Y' \
    --tags 'PJXdIOMq' \
    --targetNamespace 'cmfFRvYR' \
    > test.out 2>&1
eval_tap $? 83 'QueryItems' test.out

#- 84 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["V8GLjyXZ", "4WFdL6AU", "7DCME2Ef"]' \
    > test.out 2>&1
eval_tap $? 84 'ListBasicItemsByFeatures' test.out

#- 85 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'CoLNUH9c' \
    --sku 'Inn8RWAt' \
    > test.out 2>&1
eval_tap $? 85 'GetItemBySku' test.out

#- 86 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'fOz53sFh' \
    --populateBundle 'true' \
    --region '4MLezI74' \
    --storeId 'xTIxXhuu' \
    --sku 'frMxaMN9' \
    > test.out 2>&1
eval_tap $? 86 'GetLocaleItemBySku' test.out

#- 87 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'QTQ6FpDK' \
    --sku 'UGlZk3p3' \
    > test.out 2>&1
eval_tap $? 87 'GetItemIdBySku' test.out

#- 88 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["DLRTM9mJ", "Ed5bj9fT", "SDp0Ldug"]' \
    --storeId '0djgnJhn' \
    > test.out 2>&1
eval_tap $? 88 'GetBulkItemIdBySkus' test.out

#- 89 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'p9jZ4Gu3' \
    --region 'ip64ALI5' \
    --storeId 'IHQtTHwl' \
    --itemIds 'qJjI5Rrr' \
    > test.out 2>&1
eval_tap $? 89 'BulkGetLocaleItems' test.out

#- 90 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 90 'GetAvailablePredicateTypes' test.out

#- 91 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["a9Iax8vz", "DQewtgGX", "OYDagq8T"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId '8V2yIaN9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'ValidateItemPurchaseCondition' test.out

#- 92 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'SEASON' \
    --limit '47' \
    --offset '19' \
    --storeId 'zh8tFzmA' \
    --keyword 'Vr7Wfi5W' \
    --language 'bObYhvrR' \
    > test.out 2>&1
eval_tap $? 92 'SearchItems' test.out

#- 93 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '36' \
    --offset '18' \
    --sortBy '["createdAt:desc", "displayOrder:desc", "displayOrder:asc"]' \
    --storeId 'BC7hnyh2' \
    > test.out 2>&1
eval_tap $? 93 'QueryUncategorizedItems' test.out

#- 94 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId '6MC9dClt' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '8L6LUj6l' \
    > test.out 2>&1
eval_tap $? 94 'GetItem' test.out

#- 95 UpdateItem
# body param: body
echo '{"appId": "gMXJrNIh", "appType": "GAME", "baseAppId": "KbKKcp7j", "boothName": "l95UF3jF", "categoryPath": "6HBrzHwM", "clazz": "CmUa990N", "displayOrder": 96, "entitlementType": "DURABLE", "ext": {"G11k2h8I": {}, "gxQBDBoL": {}, "NQEbQ6q5": {}}, "features": ["qpdvZ349", "0GdZPNXr", "m4UBUnFQ"], "images": [{"as": "7k0fTDS8", "caption": "cy05mEmK", "height": 74, "imageUrl": "eyAQvFqm", "smallImageUrl": "apHjJCd4", "width": 2}, {"as": "wwIHX0tP", "caption": "gAsDZrPM", "height": 47, "imageUrl": "RwfUxhxO", "smallImageUrl": "EOYpSyuI", "width": 44}, {"as": "slSQ3gYj", "caption": "BuBWLqji", "height": 54, "imageUrl": "FUirxrSi", "smallImageUrl": "6s9FRR2Q", "width": 46}], "itemIds": ["NSKrIjYG", "jrRhKNpf", "8vcDklIP"], "itemQty": {"UCUzN1Yn": 66, "ozHUfYMI": 56, "JQvjW1kt": 93}, "itemType": "CODE", "listable": false, "localizations": {"giqQhd59": {"description": "PmA2mmJC", "localExt": {"XE0fUmdP": {}, "PQaHQ8Kw": {}, "wahBoSiF": {}}, "longDescription": "nbiqvptG", "title": "4a3rStd5"}, "7hRwHyhL": {"description": "suMUTPvB", "localExt": {"Tyd11wsS": {}, "pj6hK9Du": {}, "ltI6NH7K": {}}, "longDescription": "UD9C12YO", "title": "Dbe7B502"}, "WZJi1Thg": {"description": "8gkBSkOS", "localExt": {"l19lfsXp": {}, "cuCDkjVV": {}, "qFo99XgR": {}}, "longDescription": "PrYes6YG", "title": "rkRsBkjo"}}, "maxCount": 13, "maxCountPerUser": 38, "name": "QuT72jgs", "optionBoxConfig": {"boxItems": [{"count": 75, "itemId": "jjfqsEYT", "itemSku": "U6WPQHXT"}, {"count": 56, "itemId": "jBHtLL7c", "itemSku": "Rs0Nndsf"}, {"count": 1, "itemId": "62WmZK7c", "itemSku": "U5vfdzad"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 67, "fixedTrialCycles": 72, "graceDays": 31}, "regionData": {"eSpnoZ9l": [{"currencyCode": "JBEptc7Q", "currencyNamespace": "Y3xsCEIX", "currencyType": "VIRTUAL", "discountAmount": 17, "discountExpireAt": "1981-04-25T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1995-11-03T00:00:00Z", "discountedPrice": 54, "expireAt": "1971-07-13T00:00:00Z", "price": 26, "purchaseAt": "1993-03-07T00:00:00Z", "trialPrice": 86}, {"currencyCode": "RdQnuUpb", "currencyNamespace": "A3aOkqSQ", "currencyType": "VIRTUAL", "discountAmount": 60, "discountExpireAt": "1989-05-30T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1989-11-02T00:00:00Z", "discountedPrice": 61, "expireAt": "1985-02-15T00:00:00Z", "price": 17, "purchaseAt": "1985-01-07T00:00:00Z", "trialPrice": 91}, {"currencyCode": "NhfEXdet", "currencyNamespace": "8revBtrS", "currencyType": "REAL", "discountAmount": 2, "discountExpireAt": "1972-11-04T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1990-02-05T00:00:00Z", "discountedPrice": 80, "expireAt": "1986-01-16T00:00:00Z", "price": 97, "purchaseAt": "1990-09-02T00:00:00Z", "trialPrice": 1}], "Nn4dJVTX": [{"currencyCode": "hHxf4Btn", "currencyNamespace": "252ejBQc", "currencyType": "VIRTUAL", "discountAmount": 82, "discountExpireAt": "1989-10-21T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1996-12-24T00:00:00Z", "discountedPrice": 51, "expireAt": "1992-06-23T00:00:00Z", "price": 19, "purchaseAt": "1992-09-07T00:00:00Z", "trialPrice": 0}, {"currencyCode": "CuFkTjJR", "currencyNamespace": "kLg1KuyG", "currencyType": "REAL", "discountAmount": 23, "discountExpireAt": "1998-11-24T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1983-07-22T00:00:00Z", "discountedPrice": 80, "expireAt": "1987-05-01T00:00:00Z", "price": 76, "purchaseAt": "1993-08-24T00:00:00Z", "trialPrice": 17}, {"currencyCode": "CsazoKmN", "currencyNamespace": "dxhuyF88", "currencyType": "REAL", "discountAmount": 17, "discountExpireAt": "1983-08-17T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1978-03-12T00:00:00Z", "discountedPrice": 13, "expireAt": "1996-05-27T00:00:00Z", "price": 84, "purchaseAt": "1974-04-30T00:00:00Z", "trialPrice": 83}], "cbzbQBtT": [{"currencyCode": "1T7c4Zp5", "currencyNamespace": "QCLIlRxl", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1978-03-04T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1976-01-30T00:00:00Z", "discountedPrice": 50, "expireAt": "1999-04-15T00:00:00Z", "price": 58, "purchaseAt": "1980-10-19T00:00:00Z", "trialPrice": 49}, {"currencyCode": "br4mY1qo", "currencyNamespace": "RjMklvgf", "currencyType": "REAL", "discountAmount": 95, "discountExpireAt": "1971-07-24T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1995-12-05T00:00:00Z", "discountedPrice": 5, "expireAt": "1979-05-12T00:00:00Z", "price": 92, "purchaseAt": "1988-04-22T00:00:00Z", "trialPrice": 68}, {"currencyCode": "rwZBvrbd", "currencyNamespace": "TTYtO3pE", "currencyType": "REAL", "discountAmount": 81, "discountExpireAt": "1998-08-09T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1995-03-02T00:00:00Z", "discountedPrice": 82, "expireAt": "1988-03-17T00:00:00Z", "price": 44, "purchaseAt": "1995-09-23T00:00:00Z", "trialPrice": 16}]}, "seasonType": "PASS", "sku": "RmNomZuE", "stackable": false, "status": "ACTIVE", "tags": ["5czLJykQ", "h8ZuZYke", "pT4fHk7y"], "targetCurrencyCode": "Crf5cETU", "targetNamespace": "zfVTVThu", "thumbnailUrl": "JxXa4z5m", "useCount": 73}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'YKVLtQrF' \
    --namespace $AB_NAMESPACE \
    --storeId 'CtL0omHN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 95 'UpdateItem' test.out

#- 96 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'jFuWZBdG' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'NnsjyQK9' \
    > test.out 2>&1
eval_tap $? 96 'DeleteItem' test.out

#- 97 AcquireItem
# body param: body
echo '{"count": 22, "orderNo": "QNEEkstL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'clQ8gVKE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'AcquireItem' test.out

#- 98 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'Ga0GZazC' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'D4O3AZ3o' \
    > test.out 2>&1
eval_tap $? 98 'GetApp' test.out

#- 99 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "4Xx9Re0A", "previewUrl": "7FXKfUDc", "thumbnailUrl": "3FinbglU", "type": "image", "url": "nT358nGK", "videoSource": "generic"}, {"alt": "lkP103Jk", "previewUrl": "086whKj4", "thumbnailUrl": "CBC8RM4G", "type": "image", "url": "MTDZE9qa", "videoSource": "vimeo"}, {"alt": "5lOcZLrQ", "previewUrl": "BuuChsqy", "thumbnailUrl": "rtrMpmAc", "type": "image", "url": "6HpqtsAo", "videoSource": "vimeo"}], "developer": "mnKvRU56", "forumUrl": "eb6u6yIW", "genres": ["RPG", "Simulation", "FreeToPlay"], "localizations": {"LkwbyZ5c": {"announcement": "pCjQkUaj", "slogan": "atBJXqKS"}, "VOWepCw5": {"announcement": "5FiumrMl", "slogan": "Ci35yZXj"}, "iTHQAcxw": {"announcement": "rxW6FhGT", "slogan": "aipX5c0e"}}, "platformRequirements": {"FxAnM0EC": [{"additionals": "VRaRjgk3", "directXVersion": "WiAj6rWi", "diskSpace": "B679fj1z", "graphics": "iDBQUASi", "label": "cjphrA18", "osVersion": "GhOPNG1u", "processor": "ARbpj5vU", "ram": "AYaVX8Wc", "soundCard": "hshksnAm"}, {"additionals": "vuCHr9nZ", "directXVersion": "j2Al40Tw", "diskSpace": "nQCmdFxc", "graphics": "pYFyRiT7", "label": "B8OpWVtT", "osVersion": "LaIiEH0d", "processor": "VFWhrFXE", "ram": "vJsexyqE", "soundCard": "rpwZLyRi"}, {"additionals": "G0t8lFxc", "directXVersion": "jfU9TIuH", "diskSpace": "2QvkMAe4", "graphics": "nKAPl8Sb", "label": "Gx91Bgz0", "osVersion": "rS1he1Ar", "processor": "ajdHHNEO", "ram": "ko9Csj8y", "soundCard": "nil5qeLE"}], "9pAYbkHa": [{"additionals": "Dc35Qgsp", "directXVersion": "Bdd1TVJ3", "diskSpace": "cLMwPyT0", "graphics": "Ly0AhBLS", "label": "yBD6xVQ3", "osVersion": "qxEiUXQC", "processor": "CfY9UCaH", "ram": "KSYqMluL", "soundCard": "MzfVbtX3"}, {"additionals": "cI8iOmEU", "directXVersion": "HxhIlA1Y", "diskSpace": "CiKLhhDB", "graphics": "u9YeCco1", "label": "Igb6mb6V", "osVersion": "Qa9FYcUS", "processor": "x7dA7wsY", "ram": "pJbME1Tm", "soundCard": "dGleMFsU"}, {"additionals": "7Ho8aSip", "directXVersion": "prN4iVCd", "diskSpace": "kuK61Hz4", "graphics": "H45ZQTiO", "label": "zRBifhHP", "osVersion": "fK4E8wVL", "processor": "V4S1irGp", "ram": "JFET54q1", "soundCard": "Ffru10Ij"}], "gAPmDjEL": [{"additionals": "MoZ7EdH0", "directXVersion": "M7KVlVDi", "diskSpace": "SlrWYOdB", "graphics": "RzZWsjRJ", "label": "pklGohxE", "osVersion": "mgBv8ABy", "processor": "K5ngPU9s", "ram": "kBmhnI4a", "soundCard": "LCjgmpf6"}, {"additionals": "jMeLQZu6", "directXVersion": "eKmgRZiU", "diskSpace": "8bxUEzL9", "graphics": "Al37Ld2Y", "label": "GwtSGoe7", "osVersion": "8QPSDLqF", "processor": "daWgNAFA", "ram": "KQcMvXMx", "soundCard": "wmuo0WAq"}, {"additionals": "KH4XZQrp", "directXVersion": "dkvJFLFg", "diskSpace": "x9dxFzKo", "graphics": "WwTIlzjJ", "label": "SbPnZczS", "osVersion": "Zc2XsViK", "processor": "0Ojz8jTo", "ram": "gTshifdV", "soundCard": "x6fhTM4r"}]}, "platforms": ["Android", "Android", "Linux"], "players": ["Multi", "MMO", "Coop"], "primaryGenre": "Sports", "publisher": "U6CeNLja", "releaseDate": "1980-12-12T00:00:00Z", "websiteUrl": "CD9jck7Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'WFtRutx3' \
    --namespace $AB_NAMESPACE \
    --storeId 'ZRIsvTBh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'UpdateApp' test.out

#- 100 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'Jo0OBLsA' \
    --namespace $AB_NAMESPACE \
    --storeId 'M4kqae2H' \
    > test.out 2>&1
eval_tap $? 100 'DisableItem' test.out

#- 101 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'Uizr1IPS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'GetItemDynamicData' test.out

#- 102 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '4q4PV09V' \
    --namespace $AB_NAMESPACE \
    --storeId '8rm8qNUN' \
    > test.out 2>&1
eval_tap $? 102 'EnableItem' test.out

#- 103 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'tqefVp6y' \
    --itemId 'K1NMvTNx' \
    --namespace $AB_NAMESPACE \
    --storeId 'IqcKH8KR' \
    > test.out 2>&1
eval_tap $? 103 'FeatureItem' test.out

#- 104 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'barrX9Gq' \
    --itemId 'RQSIonFE' \
    --namespace $AB_NAMESPACE \
    --storeId 'B4Kvr6R9' \
    > test.out 2>&1
eval_tap $? 104 'DefeatureItem' test.out

#- 105 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'rZiQa5Sw' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'ycEsgwy2' \
    --populateBundle 'false' \
    --region 'TwNECAir' \
    --storeId 'eepPOW37' \
    > test.out 2>&1
eval_tap $? 105 'GetLocaleItem' test.out

#- 106 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 2, "comparison": "includes", "name": "U4gCyWvR", "predicateType": "EntitlementPredicate", "value": "sO2nXNGp", "values": ["uZfhsHI0", "SbgKXFzA", "nP23WufN"]}, {"anyOf": 89, "comparison": "isGreaterThan", "name": "NQ88bdDW", "predicateType": "SeasonTierPredicate", "value": "jVrG5Foc", "values": ["Nw0bRfyI", "XmgIMVqV", "eBageMgV"]}, {"anyOf": 16, "comparison": "includes", "name": "Dgq8Fytg", "predicateType": "SeasonPassPredicate", "value": "myv4pghm", "values": ["6shr4eav", "GlJ3ZWSY", "V41VaiOe"]}]}, {"operator": "or", "predicates": [{"anyOf": 40, "comparison": "isNot", "name": "CBw58ByU", "predicateType": "EntitlementPredicate", "value": "FOhbNy5j", "values": ["7mcasBxa", "PcgdFJf5", "81RfdTKx"]}, {"anyOf": 85, "comparison": "isLessThanOrEqual", "name": "wbTu0ENp", "predicateType": "SeasonTierPredicate", "value": "gPPxUvgX", "values": ["kssjt7vP", "2tLe7UT9", "pswcZxNf"]}, {"anyOf": 54, "comparison": "is", "name": "iwHctwQw", "predicateType": "SeasonPassPredicate", "value": "9kos5t90", "values": ["Ez3Qnmb3", "1yNuNBYO", "7szZ6nLe"]}]}, {"operator": "or", "predicates": [{"anyOf": 14, "comparison": "is", "name": "PwqhyUjt", "predicateType": "SeasonTierPredicate", "value": "0iszJF0e", "values": ["8dGaFNwm", "0H9TrvDT", "f95r6KJk"]}, {"anyOf": 81, "comparison": "includes", "name": "WFL15xOc", "predicateType": "SeasonTierPredicate", "value": "MDto6qfV", "values": ["ZXe650wb", "1x1J5IWu", "VlEGfXuQ"]}, {"anyOf": 88, "comparison": "includes", "name": "kX9Vw8Kn", "predicateType": "SeasonTierPredicate", "value": "y8tcDzVc", "values": ["q6Vvc37u", "swtjznPt", "o5btOVXQ"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'NIsQWord' \
    --namespace $AB_NAMESPACE \
    --storeId 'Lix8k7ZC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 106 'UpdateItemPurchaseCondition' test.out

#- 107 ReturnItem
# body param: body
echo '{"orderNo": "nypkPp2f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'dYcrhxP8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 107 'ReturnItem' test.out

#- 108 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '86' \
    --name 'IPnz81sJ' \
    --offset '14' \
    --tag 'Jg0PAGrs' \
    > test.out 2>&1
eval_tap $? 108 'QueryKeyGroups' test.out

#- 109 CreateKeyGroup
# body param: body
echo '{"description": "AGnvcr3R", "name": "3v0OGGQD", "status": "ACTIVE", "tags": ["xrxPaCdv", "CNVlD8Ct", "d8LaHMnF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'CreateKeyGroup' test.out

#- 110 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId '6ophscye' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'GetKeyGroup' test.out

#- 111 UpdateKeyGroup
# body param: body
echo '{"description": "dTM9C1E4", "name": "BA93zp7e", "status": "INACTIVE", "tags": ["xJpRPVUq", "1R5sgk5n", "GQ7pRRhh"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'c4qU8KDT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'UpdateKeyGroup' test.out

#- 112 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'ACyenuxx' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'GetKeyGroupDynamic' test.out

#- 113 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId '5uWEFO7Q' \
    --namespace $AB_NAMESPACE \
    --limit '79' \
    --offset '18' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 113 'ListKeys' test.out

#- 114 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'iYuGV2xV' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 114 'UploadKeys' test.out

#- 115 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'YEyWbuIF' \
    --limit '78' \
    --offset '80' \
    --orderNos '["6fwhL54A", "W5zk6ZpB", "XllEtnXp"]' \
    --sortBy 'aFPGlqPa' \
    --startTime 'oQs6Y2ea' \
    --status 'INIT' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 115 'QueryOrders' test.out

#- 116 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'GetOrderStatistics' test.out

#- 117 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'NLsCO3PT' \
    > test.out 2>&1
eval_tap $? 117 'GetOrder' test.out

#- 118 RefundOrder
# body param: body
echo '{"description": "JKmEUmJS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'RYBbOVhK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'RefundOrder' test.out

#- 119 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetPaymentCallbackConfig' test.out

#- 120 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "rnvc3imE", "privateKey": "lxHyxkbh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'UpdatePaymentCallbackConfig' test.out

#- 121 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '2Wjb3z6a' \
    --externalId '5scbiAZW' \
    --limit '21' \
    --notificationSource 'ADYEN' \
    --notificationType 'yjeZmhfE' \
    --offset '51' \
    --paymentOrderNo 'OiEdZheP' \
    --startDate 'X0I7dinX' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 121 'QueryPaymentNotifications' test.out

#- 122 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'JbdjbB0P' \
    --limit '85' \
    --offset '89' \
    --status 'REQUEST_FOR_INFORMATION' \
    > test.out 2>&1
eval_tap $? 122 'QueryPaymentOrders' test.out

#- 123 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "ljmS6RMG", "currencyNamespace": "LwlnBFU9", "customParameters": {"9QfdwFUy": {}, "nVYJlR1P": {}, "jziDtdH5": {}}, "description": "OLjMUAEF", "extOrderNo": "9caHNNhe", "extUserId": "2oxwCi2C", "itemType": "MEDIA", "language": "fMc_lVyv_598", "metadata": {"FbDcEVzP": "fVXNXNeT", "FVkf7n2y": "j1g1rb3H", "nhlRwUSW": "gnb6FvRb"}, "notifyUrl": "6Ya3Jy3l", "omitNotification": true, "platform": "u6Gvjm9Q", "price": 2, "recurringPaymentOrderNo": "5uLlY1Kx", "region": "D8zIzjOT", "returnUrl": "fOBX5C5d", "sandbox": true, "sku": "UfkDqKs6", "subscriptionId": "ktsochXA", "targetNamespace": "gi0RVzxi", "targetUserId": "N9qDezio", "title": "ixbSdTau"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'CreatePaymentOrderByDedicated' test.out

#- 124 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'BHp9b5WU' \
    > test.out 2>&1
eval_tap $? 124 'ListExtOrderNoByExtTxId' test.out

#- 125 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'W8xB9kgz' \
    > test.out 2>&1
eval_tap $? 125 'GetPaymentOrder' test.out

#- 126 ChargePaymentOrder
# body param: body
echo '{"extTxId": "zAtwsCXX", "paymentMethod": "ANFFqKBm", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'DsvJI5Om' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'ChargePaymentOrder' test.out

#- 127 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "PMOA7NzT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'zc5FGNfg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 127 'RefundPaymentOrderByDedicated' test.out

#- 128 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 49, "currencyCode": "Gz9fx1QU", "notifyType": "CHARGE", "paymentProvider": "ALIPAY", "salesTax": 26, "vat": 16}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'uUQjJE80' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 128 'SimulatePaymentOrderNotification' test.out

#- 129 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'nxxK2AeP' \
    > test.out 2>&1
eval_tap $? 129 'GetPaymentOrderChargeStatus' test.out

#- 130 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 130 'GetPlatformWalletConfig' test.out

#- 131 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Other", "Stadia", "Stadia"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'UpdatePlatformWalletConfig' test.out

#- 132 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'GooglePlay' \
    > test.out 2>&1
eval_tap $? 132 'ResetPlatformWalletConfig' test.out

#- 133 CreateReward
# body param: body
echo '{"description": "whVZ2fQr", "eventTopic": "SwWZLSVn", "maxAwarded": 79, "maxAwardedPerUser": 82, "namespaceExpression": "BzkMIOX2", "rewardCode": "y8PvAXg4", "rewardConditions": [{"condition": "Srdi3vgm", "conditionName": "utG08ZNj", "eventName": "niPjmDNi", "rewardItems": [{"duration": 86, "itemId": "QZadx7ZW", "quantity": 49}, {"duration": 77, "itemId": "wVWxz4je", "quantity": 6}, {"duration": 82, "itemId": "IzlEJfr4", "quantity": 43}]}, {"condition": "QGtjUml8", "conditionName": "v9PtMyuM", "eventName": "MAFg9uZF", "rewardItems": [{"duration": 37, "itemId": "eUukodEU", "quantity": 73}, {"duration": 19, "itemId": "RPFL0ejm", "quantity": 98}, {"duration": 96, "itemId": "4lOWKtjJ", "quantity": 86}]}, {"condition": "MJIjZvBv", "conditionName": "NJ6A5jF0", "eventName": "4FEnPYpe", "rewardItems": [{"duration": 31, "itemId": "DnVRtSu4", "quantity": 62}, {"duration": 24, "itemId": "n6bV6s3O", "quantity": 13}, {"duration": 40, "itemId": "iFuSMArA", "quantity": 7}]}], "userIdExpression": "o89er0U3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'CreateReward' test.out

#- 134 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'tx2z7nTU' \
    --limit '44' \
    --offset '60' \
    --sortBy '["rewardCode", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 134 'QueryRewards' test.out

#- 135 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'ExportRewards' test.out

#- 136 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 136 'ImportRewards' test.out

#- 137 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'pwwxNOhs' \
    > test.out 2>&1
eval_tap $? 137 'GetReward' test.out

#- 138 UpdateReward
# body param: body
echo '{"description": "sDrCrJSC", "eventTopic": "752OHZ1d", "maxAwarded": 41, "maxAwardedPerUser": 57, "namespaceExpression": "X0KrUP7t", "rewardCode": "pewyxLVr", "rewardConditions": [{"condition": "DTjtUGKm", "conditionName": "jOdIxgRT", "eventName": "C1qauDoU", "rewardItems": [{"duration": 24, "itemId": "GFsOL4V8", "quantity": 98}, {"duration": 27, "itemId": "UsZ5cbkA", "quantity": 80}, {"duration": 5, "itemId": "4yQKKGsM", "quantity": 7}]}, {"condition": "ya2QeXLu", "conditionName": "sd8J2hxW", "eventName": "AKQZmnJV", "rewardItems": [{"duration": 13, "itemId": "rmvDSRGe", "quantity": 49}, {"duration": 35, "itemId": "p3jlAqTe", "quantity": 28}, {"duration": 50, "itemId": "ZHIqBP4H", "quantity": 17}]}, {"condition": "rdMPnyux", "conditionName": "RmXlowft", "eventName": "7FacsSNh", "rewardItems": [{"duration": 22, "itemId": "7UpaTsQ9", "quantity": 89}, {"duration": 56, "itemId": "VN7a3D7C", "quantity": 20}, {"duration": 96, "itemId": "aOyPmo9O", "quantity": 70}]}], "userIdExpression": "PRKk5eYa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'QXMGLk4o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdateReward' test.out

#- 139 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'rbHeavqa' \
    > test.out 2>&1
eval_tap $? 139 'DeleteReward' test.out

#- 140 CheckEventCondition
# body param: body
echo '{"payload": {"R1sBlrr6": {}, "07Ly6Qvq": {}, "zi8YRrTC": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'oXKgVAmy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'CheckEventCondition' test.out

#- 141 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "jnow9W0Q", "userId": "86ad84ug"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'ig9csfSN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'DeleteRewardConditionRecord' test.out

#- 142 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'ListStores' test.out

#- 143 CreateStore
# body param: body
echo '{"defaultLanguage": "EsbM91GV", "defaultRegion": "2z8WmalW", "description": "YVGoEfRv", "supportedLanguages": ["3rQdU04g", "ybvi77eu", "Vo2jQnlm"], "supportedRegions": ["1WYmuchp", "V2phCxUO", "2tp4VQm0"], "title": "Mcasu7OS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CreateStore' test.out

#- 144 ImportStore
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore \
    --namespace $AB_NAMESPACE \
    --storeId '599guJW1' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 144 'ImportStore' test.out

#- 145 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'GetPublishedStore' test.out

#- 146 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 146 'DeletePublishedStore' test.out

#- 147 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 147 'GetPublishedStoreBackup' test.out

#- 148 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'RollbackPublishedStore' test.out

#- 149 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'VKXpObFf' \
    > test.out 2>&1
eval_tap $? 149 'GetStore' test.out

#- 150 UpdateStore
# body param: body
echo '{"defaultLanguage": "fjUHyQxx", "defaultRegion": "Lbfcgv56", "description": "Luk4oaSO", "supportedLanguages": ["bWWJgLri", "XUiFVdpj", "UAPu1nAt"], "supportedRegions": ["PXC9EONg", "jt2AI21f", "X8QT3qnP"], "title": "pnrq4ePr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'JhMnQCkc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'UpdateStore' test.out

#- 151 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'YRCcKDCq' \
    > test.out 2>&1
eval_tap $? 151 'DeleteStore' test.out

#- 152 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'swrAlg9R' \
    --action 'UPDATE' \
    --itemSku 'idq7m2ah' \
    --itemType 'SEASON' \
    --limit '71' \
    --offset '19' \
    --selected 'false' \
    --sortBy '["updatedAt:desc", "createdAt"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'yqqiie8h' \
    --updatedAtStart 'ChAKDDP1' \
    > test.out 2>&1
eval_tap $? 152 'QueryChanges' test.out

#- 153 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'p3Xfpq2T' \
    > test.out 2>&1
eval_tap $? 153 'PublishAll' test.out

#- 154 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'XwmDfDWl' \
    > test.out 2>&1
eval_tap $? 154 'PublishSelected' test.out

#- 155 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'O492DWaB' \
    > test.out 2>&1
eval_tap $? 155 'SelectAllRecords' test.out

#- 156 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 't8JoUjmZ' \
    --action 'CREATE' \
    --itemSku 'uJG7hDhI' \
    --itemType 'APP' \
    --type 'ITEM' \
    --updatedAtEnd 'kUDPPgZm' \
    --updatedAtStart 'arrp0umu' \
    > test.out 2>&1
eval_tap $? 156 'GetStatistic' test.out

#- 157 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'Vzns2K2u' \
    > test.out 2>&1
eval_tap $? 157 'UnselectAllRecords' test.out

#- 158 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'hvmb4W4e' \
    --namespace $AB_NAMESPACE \
    --storeId '2ak39kY3' \
    > test.out 2>&1
eval_tap $? 158 'SelectRecord' test.out

#- 159 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '0a9nSfDA' \
    --namespace $AB_NAMESPACE \
    --storeId 'aU3E9Q7S' \
    > test.out 2>&1
eval_tap $? 159 'UnselectRecord' test.out

#- 160 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'iLoZ3iBx' \
    --targetStoreId 'Tbn0BYEi' \
    > test.out 2>&1
eval_tap $? 160 'CloneStore' test.out

#- 161 ExportStore
$CLI_EXE \
    --sn platform \
    --op ExportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'eB5N8miz' \
    > test.out 2>&1
eval_tap $? 161 'ExportStore' test.out

#- 162 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'QqGw388f' \
    --limit '6' \
    --offset '81' \
    --sku 'bqkO5o57' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    --userId 'orVw7b1m' \
    > test.out 2>&1
eval_tap $? 162 'QuerySubscriptions' test.out

#- 163 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jkhJcwMZ' \
    > test.out 2>&1
eval_tap $? 163 'RecurringChargeSubscription' test.out

#- 164 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'O6f35qUE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 164 'GetTicketDynamic' test.out

#- 165 DecreaseTicketSale
# body param: body
echo '{"orderNo": "b6o6XCM0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'wpzwjmok' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'DecreaseTicketSale' test.out

#- 166 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'TE7D7mgY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 166 'GetTicketBoothID' test.out

#- 167 IncreaseTicketSale
# body param: body
echo '{"count": 96, "orderNo": "qh9RARWH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'V2MyrTml' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'IncreaseTicketSale' test.out

#- 168 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "QNM610Af", "value": 98}, {"id": "YwhRoX5f", "value": 79}, {"id": "yQ1nbxhx", "value": 7}], "steamUserId": "Pbk0dnkm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'EZVw4liN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'UnlockSteamUserAchievement' test.out

#- 169 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'E95j8Lre' \
    --xboxUserId '8jy1S5qM' \
    > test.out 2>&1
eval_tap $? 169 'GetXblUserAchievements' test.out

#- 170 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "xasfY5V5", "percentComplete": 67}, {"id": "BfyPNJr7", "percentComplete": 10}, {"id": "1GK2LlBY", "percentComplete": 11}], "serviceConfigId": "DbOPXSY2", "titleId": "h0oA5V9P", "xboxUserId": "7NL4Es3G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'yb5WkyHD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'UpdateXblUserAchievement' test.out

#- 171 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'PzsiYFLa' \
    > test.out 2>&1
eval_tap $? 171 'AnonymizeCampaign' test.out

#- 172 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'XQEpycZJ' \
    > test.out 2>&1
eval_tap $? 172 'AnonymizeEntitlement' test.out

#- 173 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'HlRYkMXD' \
    > test.out 2>&1
eval_tap $? 173 'AnonymizeFulfillment' test.out

#- 174 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'jJeAdpaD' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeIntegration' test.out

#- 175 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '17Zr44Cl' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeOrder' test.out

#- 176 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId '6GJIFCbJ' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizePayment' test.out

#- 177 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'jZreA70E' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeSubscription' test.out

#- 178 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId '3SKOdUn9' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizeWallet' test.out

#- 179 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'tAHp82Jw' \
    --activeOnly 'true' \
    --appType 'DLC' \
    --entitlementClazz 'APP' \
    --entitlementName 'IUwPnjn4' \
    --features '["xPKaXcuS", "FwPP3u4t", "qWpKtId4"]' \
    --itemId '["a2S3ij6Y", "xtIjqRug", "FSOTIrVt"]' \
    --limit '46' \
    --offset '59' \
    > test.out 2>&1
eval_tap $? 179 'QueryUserEntitlements' test.out

#- 180 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1976-10-17T00:00:00Z", "grantedCode": "QYAzodbJ", "itemId": "xrEtfJEn", "itemNamespace": "prJzBBB0", "language": "oc_394", "quantity": 50, "region": "nQQniy6h", "source": "PURCHASE", "startDate": "1985-05-14T00:00:00Z", "storeId": "BuoEICrL"}, {"endDate": "1980-11-08T00:00:00Z", "grantedCode": "RPzmradt", "itemId": "6R9bkoQS", "itemNamespace": "8hzNrz5C", "language": "uN", "quantity": 80, "region": "I00w0AML", "source": "OTHER", "startDate": "1984-04-27T00:00:00Z", "storeId": "8VKhUiCA"}, {"endDate": "1975-04-16T00:00:00Z", "grantedCode": "0LPJGK71", "itemId": "i0havBD3", "itemNamespace": "xxiXUP9I", "language": "bnK_415", "quantity": 39, "region": "6Z02n1Sx", "source": "IAP", "startDate": "1986-05-27T00:00:00Z", "storeId": "fq4PUNeD"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'jqqjoXM5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'GrantUserEntitlement' test.out

#- 181 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '86O85Wjl' \
    --activeOnly 'false' \
    --appId 'SADGbHlo' \
    > test.out 2>&1
eval_tap $? 181 'GetUserAppEntitlementByAppId' test.out

#- 182 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'HBp0b6ac' \
    --activeOnly 'true' \
    --limit '2' \
    --offset '46' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 182 'QueryUserEntitlementsByAppType' test.out

#- 183 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'IujhpMln' \
    --activeOnly 'false' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'UpdAsjf6' \
    > test.out 2>&1
eval_tap $? 183 'GetUserEntitlementByItemId' test.out

#- 184 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'bcpjuyGA' \
    --activeOnly 'true' \
    --entitlementClazz 'CODE' \
    --sku 'KHoUD8cs' \
    > test.out 2>&1
eval_tap $? 184 'GetUserEntitlementBySku' test.out

#- 185 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'YrwYGOGA' \
    --appIds '["SdcUT33e", "8Ug2q75h", "uFkE2MkE"]' \
    --itemIds '["rdmCzP7g", "0cDqraeA", "ulwUFvbt"]' \
    --skus '["tGddn0bb", "2JHGCAtg", "0NIx5WKO"]' \
    > test.out 2>&1
eval_tap $? 185 'ExistsAnyUserActiveEntitlement' test.out

#- 186 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'k4Ymtt6D' \
    --itemIds '["vcYLOpV5", "JGuqlDjh", "5ITNDd17"]' \
    > test.out 2>&1
eval_tap $? 186 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 187 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'hzqU1Qao' \
    --appId 'TgtBqQ2A' \
    > test.out 2>&1
eval_tap $? 187 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 188 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'jEjf5261' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'byhs5M0r' \
    > test.out 2>&1
eval_tap $? 188 'GetUserEntitlementOwnershipByItemId' test.out

#- 189 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Ii7LFWdp' \
    --ids '["hjTSomku", "pBhlTnnD", "aUuIzLZk"]' \
    > test.out 2>&1
eval_tap $? 189 'GetUserEntitlementOwnershipByItemIds' test.out

#- 190 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'M5T5L8yx' \
    --entitlementClazz 'CODE' \
    --sku '4mr4h4Iv' \
    > test.out 2>&1
eval_tap $? 190 'GetUserEntitlementOwnershipBySku' test.out

#- 191 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'H3dsuyM2' \
    --entitlementIds 'Gcg2alcw' \
    > test.out 2>&1
eval_tap $? 191 'RevokeUserEntitlements' test.out

#- 192 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'npODp7lZ' \
    --namespace $AB_NAMESPACE \
    --userId 'DmkpAulQ' \
    > test.out 2>&1
eval_tap $? 192 'GetUserEntitlement' test.out

#- 193 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1980-02-22T00:00:00Z", "nullFieldList": ["my4byEWY", "5K1OI8Z9", "M5v1wkuJ"], "startDate": "1977-09-12T00:00:00Z", "status": "REVOKED", "useCount": 30}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'gzqc54kt' \
    --namespace $AB_NAMESPACE \
    --userId 'kZiCGqDI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'UpdateUserEntitlement' test.out

#- 194 ConsumeUserEntitlement
# body param: body
echo '{"options": ["5fKtFZ3i", "RmVYjRsn", "6C2F40yF"], "useCount": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'gNA6y6NU' \
    --namespace $AB_NAMESPACE \
    --userId 'W0hz4Xrz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'ConsumeUserEntitlement' test.out

#- 195 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'YKY3Knhx' \
    --namespace $AB_NAMESPACE \
    --userId 'tJB9bBaU' \
    > test.out 2>&1
eval_tap $? 195 'DisableUserEntitlement' test.out

#- 196 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'SYEIZOdZ' \
    --namespace $AB_NAMESPACE \
    --userId 'qCxqyp8s' \
    > test.out 2>&1
eval_tap $? 196 'EnableUserEntitlement' test.out

#- 197 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'u2Okt3Yg' \
    --namespace $AB_NAMESPACE \
    --userId 'i281b2UE' \
    > test.out 2>&1
eval_tap $? 197 'GetUserEntitlementHistories' test.out

#- 198 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'i1z5iNtO' \
    --namespace $AB_NAMESPACE \
    --userId 'epfnxNYl' \
    > test.out 2>&1
eval_tap $? 198 'RevokeUserEntitlement' test.out

#- 199 FulfillItem
# body param: body
echo '{"duration": 70, "endDate": "1995-05-12T00:00:00Z", "itemId": "vlsdlomQ", "itemSku": "Gwuz7zSK", "language": "IO7qhsd2", "order": {"currency": {"currencyCode": "dXWeKzZf", "currencySymbol": "2ewAeeBo", "currencyType": "VIRTUAL", "decimals": 59, "namespace": "MARY1q7H"}, "ext": {"okwx1SVC": {}, "LVCxEEbI": {}, "3TKjV540": {}}, "free": true}, "orderNo": "q0MP0UVZ", "origin": "Stadia", "quantity": 40, "region": "Af35Bb52", "source": "IAP", "startDate": "1994-04-29T00:00:00Z", "storeId": "gfh6ifa0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'HGK9ugnP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'FulfillItem' test.out

#- 200 RedeemCode
# body param: body
echo '{"code": "8ThjzH93", "language": "UwAw_oepb", "region": "uxdcmoGz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'meRs3IwZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'RedeemCode' test.out

#- 201 FulfillRewards
# body param: body
echo '{"origin": "Epic", "rewards": [{"currency": {"currencyCode": "yPsuW5vG", "namespace": "A48WDwGm"}, "item": {"itemId": "F17dlxRx", "itemSku": "rhLHE4qE", "itemType": "qW6i5Y9S"}, "quantity": 60, "type": "CURRENCY"}, {"currency": {"currencyCode": "1KrRXIBb", "namespace": "sIvGIvLd"}, "item": {"itemId": "qJAR8Pmk", "itemSku": "Uac9L45f", "itemType": "JPBLLsF9"}, "quantity": 100, "type": "ITEM"}, {"currency": {"currencyCode": "mx0894ni", "namespace": "ooPPTpAi"}, "item": {"itemId": "L28KMO97", "itemSku": "E07nbppt", "itemType": "rTQspu66"}, "quantity": 100, "type": "ITEM"}], "source": "REWARD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'HaYIJXnR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'FulfillRewards' test.out

#- 202 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'PyaYhyRU' \
    --endTime 'jgBOPQBq' \
    --limit '6' \
    --offset '48' \
    --productId 'wWFiLZDG' \
    --startTime 'uskWrdMz' \
    --status 'FULFILLED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 202 'QueryUserIAPOrders' test.out

#- 203 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '1AKIjT4y' \
    > test.out 2>&1
eval_tap $? 203 'QueryAllUserIAPOrders' test.out

#- 204 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "NMa-QjaP", "productId": "Smm4ypCQ", "region": "1CKhL2Ch", "type": "GOOGLE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '4lNwcYW0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'MockFulfillIAPItem' test.out

#- 205 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'n2UqSmdo' \
    --itemId 'zYZEMmvO' \
    --limit '38' \
    --offset '41' \
    --status 'CLOSED' \
    > test.out 2>&1
eval_tap $? 205 'QueryUserOrders' test.out

#- 206 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "0MHSdvOR", "currencyNamespace": "UdM6oHRg", "discountedPrice": 63, "ext": {"6ActPMVy": {}, "RzBuU5B0": {}, "uiKqZXMJ": {}}, "itemId": "r1NW5ON1", "language": "rnDqZY5p", "options": {"skipPriceValidation": true}, "platform": "Epic", "price": 59, "quantity": 96, "region": "FBpKE30L", "returnUrl": "VG4O01WZ", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'QiwdKpDJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminCreateUserOrder' test.out

#- 207 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'lc9N858G' \
    --itemId 'KAK8o7lk' \
    > test.out 2>&1
eval_tap $? 207 'CountOfPurchasedItem' test.out

#- 208 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'LGOO2ECF' \
    --userId 'hgJdP2sQ' \
    > test.out 2>&1
eval_tap $? 208 'GetUserOrder' test.out

#- 209 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGEBACK_REVERSED", "statusReason": "FTFsysKs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'DtCtbNmy' \
    --userId 'PTOGlUKo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'UpdateUserOrderStatus' test.out

#- 210 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '8PsaRObo' \
    --userId 'RdB64MdF' \
    > test.out 2>&1
eval_tap $? 210 'FulfillUserOrder' test.out

#- 211 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'nzjF9NSe' \
    --userId 'siCLKbSV' \
    > test.out 2>&1
eval_tap $? 211 'GetUserOrderGrant' test.out

#- 212 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'cz2S9PCm' \
    --userId 'bAF0NJ4W' \
    > test.out 2>&1
eval_tap $? 212 'GetUserOrderHistories' test.out

#- 213 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "9mrdKLAd"}, "authorisedTime": "1990-10-04T00:00:00Z", "chargebackReversedTime": "1989-02-04T00:00:00Z", "chargebackTime": "1979-07-12T00:00:00Z", "chargedTime": "1988-10-28T00:00:00Z", "createdTime": "1985-11-07T00:00:00Z", "currency": {"currencyCode": "QUNefG2q", "currencySymbol": "T6xAP3g1", "currencyType": "VIRTUAL", "decimals": 20, "namespace": "hvnw3GEI"}, "customParameters": {"WeUCtjW5": {}, "VT4Lkm2P": {}, "wZn7M8vI": {}}, "extOrderNo": "62cX2ThY", "extTxId": "F9mOLPFJ", "extUserId": "WP4VBVW2", "issuedAt": "1976-04-01T00:00:00Z", "metadata": {"CNN3H3nR": "FcA4btHW", "zNty8Hb3": "IQVDtTKR", "SwjJ3vhn": "XNpf2jUr"}, "namespace": "IcrPeiXy", "nonceStr": "0rOy9jOl", "paymentMethod": "h5ULkE5A", "paymentMethodFee": 39, "paymentOrderNo": "kCoVI1Ap", "paymentProvider": "XSOLLA", "paymentProviderFee": 95, "paymentStationUrl": "12sT3qLU", "price": 37, "refundedTime": "1978-07-16T00:00:00Z", "salesTax": 40, "sandbox": true, "sku": "879qElrv", "status": "CHARGED", "statusReason": "ZGt4rJ0T", "subscriptionId": "vVCg17ku", "subtotalPrice": 30, "targetNamespace": "9jJ7ixeX", "targetUserId": "y76xXDGW", "tax": 44, "totalPrice": 78, "totalTax": 19, "txEndTime": "1973-02-03T00:00:00Z", "type": "VPsMeRgN", "userId": "5nKbepHW", "vat": 9}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo '6h7oXVsK' \
    --userId 'sAyPjtQX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'ProcessUserOrderNotification' test.out

#- 214 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'fgJGlYZg' \
    --userId 'xR9sI07K' \
    > test.out 2>&1
eval_tap $? 214 'DownloadUserOrderReceipt' test.out

#- 215 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "4mIXbyri", "currencyNamespace": "yUoTUtP3", "customParameters": {"OobIfPNP": {}, "FpDSUBdt": {}, "DTRK7psP": {}}, "description": "zfy9k47O", "extOrderNo": "t7l3lX54", "extUserId": "WIrusg4v", "itemType": "COINS", "language": "kJHN_OTEZ", "metadata": {"OYp79yew": "k3pG6RMK", "5CDiYwLh": "lXTSC1xx", "2U7U9FDs": "bBuDbh5F"}, "notifyUrl": "CK1i1xry", "omitNotification": false, "platform": "YB43GFRB", "price": 52, "recurringPaymentOrderNo": "ZmnEmNcO", "region": "9uTAJwsN", "returnUrl": "6DaEqyaz", "sandbox": false, "sku": "CQzX3ISA", "subscriptionId": "r1JznKxu", "title": "oQqgMxtx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'QaNkXbIK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'CreateUserPaymentOrder' test.out

#- 216 RefundUserPaymentOrder
# body param: body
echo '{"description": "h8s42eWk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'bZyPO032' \
    --userId 'd3HJmnxO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'RefundUserPaymentOrder' test.out

#- 217 ApplyUserRedemption
# body param: body
echo '{"code": "u5LSJHAS", "orderNo": "qBUXqvAr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId '5R87bGiv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'ApplyUserRedemption' test.out

#- 218 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'yOgS4kiq' \
    --chargeStatus 'NEVER' \
    --itemId 'UUNeAeIS' \
    --limit '82' \
    --offset '61' \
    --sku '8CmgiXNm' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 218 'QueryUserSubscriptions' test.out

#- 219 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'cAeJAzIf' \
    --excludeSystem 'false' \
    --limit '51' \
    --offset '27' \
    --subscriptionId '43OKJVv7' \
    > test.out 2>&1
eval_tap $? 219 'GetUserSubscriptionActivities' test.out

#- 220 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 76, "itemId": "OarSAEKT", "language": "ZMVTBLAu", "reason": "rsX9VaBB", "region": "XAEIWDxb", "source": "rIzaP9av"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'GijVwPH4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'PlatformSubscribeSubscription' test.out

#- 221 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'ukkOcu0J' \
    --itemId '9KiQIkG1' \
    > test.out 2>&1
eval_tap $? 221 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 222 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'P28mp260' \
    --userId 'j1CoMXtO' \
    > test.out 2>&1
eval_tap $? 222 'GetUserSubscription' test.out

#- 223 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ugWWcZmO' \
    --userId 'ZQhlVReg' \
    > test.out 2>&1
eval_tap $? 223 'DeleteUserSubscription' test.out

#- 224 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "4Qd9C26H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '58DqZxHQ' \
    --userId 'Eh4OPANQ' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'CancelSubscription' test.out

#- 225 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 61, "reason": "71wo4OG8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Dkyjz9tF' \
    --userId 'hLbbFXZA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'GrantDaysToSubscription' test.out

#- 226 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'PIPTuOUK' \
    --userId 'R7Kyzl54' \
    --excludeFree 'true' \
    --limit '8' \
    --offset '34' \
    > test.out 2>&1
eval_tap $? 226 'GetUserSubscriptionBillingHistories' test.out

#- 227 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "pkBXwf2a"}, "authorisedTime": "1991-07-02T00:00:00Z", "chargebackReversedTime": "1982-12-24T00:00:00Z", "chargebackTime": "1986-03-04T00:00:00Z", "chargedTime": "1995-11-26T00:00:00Z", "createdTime": "1982-06-13T00:00:00Z", "currency": {"currencyCode": "54GTWDCR", "currencySymbol": "xSTeVnwQ", "currencyType": "VIRTUAL", "decimals": 60, "namespace": "XPLB3dYc"}, "customParameters": {"PSqGpOxf": {}, "gZqGeEwY": {}, "KEqYLXw1": {}}, "extOrderNo": "lP8mZ4Ao", "extTxId": "3vb0Ay8k", "extUserId": "bUIXzEvf", "issuedAt": "1974-03-04T00:00:00Z", "metadata": {"zS7nl8mp": "I2YTNREA", "cyextCUr": "JEtJxW48", "OOPPIQ9t": "6sNqrdNZ"}, "namespace": "GwJvO0P3", "nonceStr": "6Kaeh5Pt", "paymentMethod": "BOGrhFHl", "paymentMethodFee": 20, "paymentOrderNo": "AqoC8NjH", "paymentProvider": "STRIPE", "paymentProviderFee": 21, "paymentStationUrl": "0vVBJHut", "price": 51, "refundedTime": "1978-12-08T00:00:00Z", "salesTax": 35, "sandbox": true, "sku": "dKNStppI", "status": "NOTIFICATION_OF_CHARGEBACK", "statusReason": "2jSPn9YK", "subscriptionId": "1PeKcFBf", "subtotalPrice": 9, "targetNamespace": "TQFewZFe", "targetUserId": "iH1W9TDT", "tax": 68, "totalPrice": 23, "totalTax": 85, "txEndTime": "1978-07-31T00:00:00Z", "type": "TNM2vmGy", "userId": "LaFnb9wH", "vat": 39}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ZgCdnXlt' \
    --userId 'NphheReI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'ProcessUserSubscriptionNotification' test.out

#- 228 AcquireUserTicket
# body param: body
echo '{"count": 88, "orderNo": "u53ZGhDi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'k1cEwnPn' \
    --namespace $AB_NAMESPACE \
    --userId 'qHgmiT7f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'AcquireUserTicket' test.out

#- 229 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'cxLRo6ZO' \
    > test.out 2>&1
eval_tap $? 229 'QueryUserCurrencyWallets' test.out

#- 230 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'DrViBVeM' \
    --namespace $AB_NAMESPACE \
    --userId 'kLlz47ut' \
    --limit '39' \
    --offset '89' \
    > test.out 2>&1
eval_tap $? 230 'ListUserCurrencyTransactions' test.out

#- 231 CheckWallet
eval_tap 0 231 'CheckWallet # SKIP deprecated' test.out

#- 232 CreditUserWallet
# body param: body
echo '{"amount": 41, "expireAt": "1985-02-17T00:00:00Z", "origin": "System", "reason": "iyBumMtS", "source": "ACHIEVEMENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'HrrxEWlN' \
    --namespace $AB_NAMESPACE \
    --userId 'y671igsS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'CreditUserWallet' test.out

#- 233 PayWithUserWallet
# body param: body
echo '{"amount": 18, "walletPlatform": "IOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'NS7YOvSY' \
    --namespace $AB_NAMESPACE \
    --userId 'Cg7X1WMO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'PayWithUserWallet' test.out

#- 234 GetUserWallet
eval_tap 0 234 'GetUserWallet # SKIP deprecated' test.out

#- 235 DebitUserWallet
eval_tap 0 235 'DebitUserWallet # SKIP deprecated' test.out

#- 236 DisableUserWallet
eval_tap 0 236 'DisableUserWallet # SKIP deprecated' test.out

#- 237 EnableUserWallet
eval_tap 0 237 'EnableUserWallet # SKIP deprecated' test.out

#- 238 ListUserWalletTransactions
eval_tap 0 238 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 239 QueryWallets
eval_tap 0 239 'QueryWallets # SKIP deprecated' test.out

#- 240 GetWallet
eval_tap 0 240 'GetWallet # SKIP deprecated' test.out

#- 241 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'wiyf7Txr' \
    --end 'u4zS4Aco' \
    --start 'jX9oDNix' \
    > test.out 2>&1
eval_tap $? 241 'SyncOrders' test.out

#- 242 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["KBvlZpGK", "XEOHa6Cn", "0i6MRYme"], "apiKey": "deWCGPuC", "authoriseAsCapture": true, "blockedPaymentMethods": ["vajyuiWm", "ihBATvKp", "pHd23Rnj"], "clientKey": "eU627R4O", "dropInSettings": "z5BUVcb6", "liveEndpointUrlPrefix": "NPmXVmP8", "merchantAccount": "ZCSanDLu", "notificationHmacKey": "N0VzW5CD", "notificationPassword": "KQPHW0m4", "notificationUsername": "gnbU2Hll", "returnUrl": "XnCjQC0n", "settings": "w4KMx9lQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'TestAdyenConfig' test.out

#- 243 TestAliPayConfig
# body param: body
echo '{"appId": "jhBa8LJM", "privateKey": "2cu4timL", "publicKey": "zMrVTXoO", "returnUrl": "AD1RaZ28"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'TestAliPayConfig' test.out

#- 244 TestCheckoutConfig
# body param: body
echo '{"publicKey": "JAsa7czA", "secretKey": "NvAmBdsR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'TestCheckoutConfig' test.out

#- 245 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ '0YMFsJgq' \
    --region 'CAMgltNw' \
    > test.out 2>&1
eval_tap $? 245 'DebugMatchedPaymentMerchantConfig' test.out

#- 246 TestPayPalConfig
# body param: body
echo '{"clientID": "gQQok8PA", "clientSecret": "yxScj9iX", "returnUrl": "KIziRrmr", "webHookId": "AHc75Bp0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'TestPayPalConfig' test.out

#- 247 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["0q9OgB7J", "1w5SpwJN", "2PlmHjse"], "publishableKey": "5su3BM7k", "secretKey": "9Ye7jQFy", "webhookSecret": "bngnuHKu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'TestStripeConfig' test.out

#- 248 TestWxPayConfig
# body param: body
echo '{"appId": "Vg0bdlAG", "key": "l9Du0ORe", "mchid": "dp1ZMFes", "returnUrl": "3MLcJwEu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'TestWxPayConfig' test.out

#- 249 TestXsollaConfig
# body param: body
echo '{"apiKey": "A63MPj62", "flowCompletionUrl": "EhjxBfuc", "merchantId": 64, "projectId": 6, "projectSecretKey": "XyB1kkIY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'TestXsollaConfig' test.out

#- 250 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'j5C4R7IE' \
    > test.out 2>&1
eval_tap $? 250 'GetPaymentMerchantConfig' test.out

#- 251 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["dxa9dhEM", "cewb7beQ", "xjCLf87y"], "apiKey": "byH0qXu5", "authoriseAsCapture": false, "blockedPaymentMethods": ["LQ1hiVVn", "mlh6U8EG", "wn8uHCCk"], "clientKey": "BWjkDhRE", "dropInSettings": "GMKYHhWN", "liveEndpointUrlPrefix": "2bEz82k9", "merchantAccount": "blyS6Sgd", "notificationHmacKey": "5eur1tP3", "notificationPassword": "Blidz7Dv", "notificationUsername": "kOgT9m64", "returnUrl": "DOGxPnhm", "settings": "XZ5UN8lY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id '5U502Nye' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'UpdateAdyenConfig' test.out

#- 252 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'g06sheSd' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 252 'TestAdyenConfigById' test.out

#- 253 UpdateAliPayConfig
# body param: body
echo '{"appId": "72vlngXv", "privateKey": "Zs7nFjq7", "publicKey": "FLQQzIAM", "returnUrl": "Xx1uBHbL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'vB44G5QO' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'UpdateAliPayConfig' test.out

#- 254 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'k2sb5ztA' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 254 'TestAliPayConfigById' test.out

#- 255 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "TLFuTwjj", "secretKey": "VTd4paZ0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'FvtZeOwV' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateCheckoutConfig' test.out

#- 256 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'dVQGOE6O' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 256 'TestCheckoutConfigById' test.out

#- 257 UpdatePayPalConfig
# body param: body
echo '{"clientID": "0HXHfPMV", "clientSecret": "orP99jaq", "returnUrl": "hWvGUjb9", "webHookId": "yQ8bAnxd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'm8T5Aay5' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdatePayPalConfig' test.out

#- 258 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'eFVxTx1e' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 258 'TestPayPalConfigById' test.out

#- 259 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["0lbbGxLv", "R1ZdM9jV", "LfMyW0iI"], "publishableKey": "GyUh77Zg", "secretKey": "GsFLuLD2", "webhookSecret": "L9aPIXUp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id '6f0ere9b' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateStripeConfig' test.out

#- 260 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'PGuUOe7Q' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 260 'TestStripeConfigById' test.out

#- 261 UpdateWxPayConfig
# body param: body
echo '{"appId": "vzTsMqtm", "key": "Viw7iEl6", "mchid": "HwagrcRe", "returnUrl": "0aQ3QfsC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id '7qTJnzME' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdateWxPayConfig' test.out

#- 262 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'ty55HVcH' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 262 'UpdateWxPayConfigCert' test.out

#- 263 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id '014AgLOg' \
    > test.out 2>&1
eval_tap $? 263 'TestWxPayConfigById' test.out

#- 264 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "TuvVCFgM", "flowCompletionUrl": "hu90n0Qa", "merchantId": 79, "projectId": 85, "projectSecretKey": "CsN94avA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'mAQR2lqf' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'UpdateXsollaConfig' test.out

#- 265 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id '9dBcrmXo' \
    > test.out 2>&1
eval_tap $? 265 'TestXsollaConfigById' test.out

#- 266 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": false, "size": "LARGE", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'msqoHPHe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'UpdateXsollaUIConfig' test.out

#- 267 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '11' \
    --namespace_ 'C9VohKzu' \
    --offset '12' \
    --region 'KMC2Ctjn' \
    > test.out 2>&1
eval_tap $? 267 'QueryPaymentProviderConfig' test.out

#- 268 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "wFF66OmS", "region": "OtCoNWe8", "sandboxTaxJarApiToken": "V2uO6JOy", "specials": ["WALLET", "PAYPAL", "PAYPAL"], "taxJarApiToken": "DU40IiUm", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'CreatePaymentProviderConfig' test.out

#- 269 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 269 'GetAggregatePaymentProviders' test.out

#- 270 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'rIZYSe68' \
    --region 'aUXUg5L3' \
    > test.out 2>&1
eval_tap $? 270 'DebugMatchedPaymentProviderConfig' test.out

#- 271 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 271 'GetSpecialPaymentProviders' test.out

#- 272 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "jCDG5v6y", "region": "5U0nYMUB", "sandboxTaxJarApiToken": "LwSMmVmh", "specials": ["CHECKOUT", "WXPAY", "XSOLLA"], "taxJarApiToken": "DtKPYPMo", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id '6004W4FT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'UpdatePaymentProviderConfig' test.out

#- 273 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'LVzpN9kE' \
    > test.out 2>&1
eval_tap $? 273 'DeletePaymentProviderConfig' test.out

#- 274 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 274 'GetPaymentTaxConfig' test.out

#- 275 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "fcM4fG0R", "taxJarApiToken": "sM1fJXv0", "taxJarEnabled": false, "taxJarProductCodesMapping": {"HKy2yjan": "5uuh947p", "nTWT0Jg9": "RARSNa1L", "AFCcmDCC": "wLKnjUVh"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'UpdatePaymentTaxConfig' test.out

#- 276 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'fgvkbghK' \
    --end 'jOWw8qZn' \
    --start 'TtkDvqgy' \
    > test.out 2>&1
eval_tap $? 276 'SyncPaymentOrders' test.out

#- 277 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'ExMMZ7qq' \
    --storeId 'E8v6jBut' \
    > test.out 2>&1
eval_tap $? 277 'PublicGetRootCategories' test.out

#- 278 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'wZjVQu4X' \
    --storeId '3fK92FWs' \
    > test.out 2>&1
eval_tap $? 278 'DownloadCategories' test.out

#- 279 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'N9VcWFcl' \
    --namespace $AB_NAMESPACE \
    --language 'O661YcFP' \
    --storeId 'dSNFOoy9' \
    > test.out 2>&1
eval_tap $? 279 'PublicGetCategory' test.out

#- 280 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'IWJpOHoe' \
    --namespace $AB_NAMESPACE \
    --language 'VL7X0PIb' \
    --storeId 'T61yyYH2' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetChildCategories' test.out

#- 281 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath '7J8EhMIp' \
    --namespace $AB_NAMESPACE \
    --language 'DAJPbCxl' \
    --storeId 'GKaozwkx' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetDescendantCategories' test.out

#- 282 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 282 'PublicListCurrencies' test.out

#- 283 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'oLlEhPaV' \
    --region 'ayIrqjaJ' \
    --storeId '7JZ04ZzT' \
    --appId 'Fg2MXbP5' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetItemByAppId' test.out

#- 284 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --baseAppId 'MZUSjwpI' \
    --categoryPath 'zxAjed3j' \
    --features 'ILixfrdC' \
    --itemType 'BUNDLE' \
    --language 'G0WRGkap' \
    --limit '20' \
    --offset '34' \
    --region 'QqedPR0V' \
    --sortBy '["displayOrder", "createdAt:asc", "name:asc"]' \
    --storeId '6he1qkCK' \
    --tags 'XNUSPUIk' \
    > test.out 2>&1
eval_tap $? 284 'PublicQueryItems' test.out

#- 285 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'DCm14Or9' \
    --region 'Q4MK4Uyw' \
    --storeId '05AoRHem' \
    --sku 'tktIk38H' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetItemBySku' test.out

#- 286 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language '30ketTee' \
    --region '1XPQN8Xu' \
    --storeId 'kptw3eLs' \
    --itemIds 'YNP34bxO' \
    > test.out 2>&1
eval_tap $? 286 'PublicBulkGetItems' test.out

#- 287 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["IWjpjBvM", "E5PP5tBZ", "dKCpKVEb"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicValidateItemPurchaseCondition' test.out

#- 288 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'MEDIA' \
    --limit '10' \
    --offset '69' \
    --region 'DXOplS0q' \
    --storeId 'J5SP4w1z' \
    --keyword 'yh3asn3O' \
    --language 'E0jyzDcs' \
    > test.out 2>&1
eval_tap $? 288 'PublicSearchItems' test.out

#- 289 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId '8g2L1Rio' \
    --namespace $AB_NAMESPACE \
    --language 'aTkDEslM' \
    --region 'foEBjmno' \
    --storeId 'ibNb88am' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetApp' test.out

#- 290 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'yhmls723' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'PublicGetItemDynamicData' test.out

#- 291 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'LHBznV4i' \
    --namespace $AB_NAMESPACE \
    --language 'VQezxNSS' \
    --populateBundle 'false' \
    --region 'M6MXstO2' \
    --storeId 'bGVuMB8r' \
    > test.out 2>&1
eval_tap $? 291 'PublicGetItem' test.out

#- 292 GetPaymentCustomization
eval_tap 0 292 'GetPaymentCustomization # SKIP deprecated' test.out

#- 293 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "embDrCD0", "paymentProvider": "PAYPAL", "returnUrl": "o4ISukCh", "ui": "R1QljxWR", "zipCode": "LA5eNJ9E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicGetPaymentUrl' test.out

#- 294 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'TtjLxsDS' \
    > test.out 2>&1
eval_tap $? 294 'PublicGetPaymentMethods' test.out

#- 295 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'jREdbTDV' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetUnpaidPaymentOrder' test.out

#- 296 Pay
# body param: body
echo '{"token": "yL8h24Ul"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Hl4oUEi3' \
    --paymentProvider 'WXPAY' \
    --zipCode '34TffsWE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'Pay' test.out

#- 297 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'S38wKhuT' \
    > test.out 2>&1
eval_tap $? 297 'PublicCheckPaymentOrderPaidStatus' test.out

#- 298 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'CHECKOUT' \
    --region '68yH43kL' \
    > test.out 2>&1
eval_tap $? 298 'GetPaymentPublicConfig' test.out

#- 299 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'NktYHc5w' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetQRCode' test.out

#- 300 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'L0YfKpqs' \
    --foreinginvoice 'muSvdfx5' \
    --invoiceId 'EUYD8oEM' \
    --payload 'ZJo1pOW5' \
    --redirectResult 'vrn6UXsQ' \
    --resultCode 'IV9I0yBA' \
    --sessionId 'CeV2bv4D' \
    --status 'OaNYdQXz' \
    --token 'wf03DVK9' \
    --type 'ujl10LYt' \
    --userId 'gbNGLtv2' \
    --orderNo 'DImultIu' \
    --paymentOrderNo 'ipV9lhCK' \
    --paymentProvider 'CHECKOUT' \
    --returnUrl 'k5Rc1xGM' \
    > test.out 2>&1
eval_tap $? 300 'PublicNormalizePaymentReturnUrl' test.out

#- 301 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'au3Zhzde' \
    --paymentOrderNo 'fzqZB5IN' \
    --paymentProvider 'STRIPE' \
    > test.out 2>&1
eval_tap $? 301 'GetPaymentTaxValue' test.out

#- 302 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'pxhPevcj' \
    > test.out 2>&1
eval_tap $? 302 'GetRewardByCode' test.out

#- 303 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'saSkPueo' \
    --limit '13' \
    --offset '65' \
    --sortBy '["namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 303 'QueryRewards1' test.out

#- 304 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'EvEjyE7H' \
    > test.out 2>&1
eval_tap $? 304 'GetReward1' test.out

#- 305 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 305 'PublicListStores' test.out

#- 306 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["hl3Lsnns", "I1YIRQjq", "jJxgFowD"]' \
    --itemIds '["MNuLi9cA", "VoOWPKgP", "LKUPTAtz"]' \
    --skus '["YGHOObLL", "u5P6ZBh7", "K3fO3U0W"]' \
    > test.out 2>&1
eval_tap $? 306 'PublicExistsAnyMyActiveEntitlement' test.out

#- 307 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'fSSXGoPs' \
    > test.out 2>&1
eval_tap $? 307 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 308 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'r5eJhgeT' \
    > test.out 2>&1
eval_tap $? 308 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 309 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'uV002EIZ' \
    > test.out 2>&1
eval_tap $? 309 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 310 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["2cTNqtRk", "E0JzmTEV", "TL3by2el"]' \
    --itemIds '["wVrRegO0", "ClqHqL8I", "CMxLaP50"]' \
    --skus '["WJ399W0m", "0hohaoZz", "Ir1Pbeuh"]' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetEntitlementOwnershipToken' test.out

#- 311 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'mEEkKuTi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 311 'PublicGetMyWallet' test.out

#- 312 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "6C4IvJrd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'mnYNC8wJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'SyncEpicGameDLC' test.out

#- 313 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 34}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'glGQtFTq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'PublicSyncPsnDlcInventory' test.out

#- 314 SyncSteamDLC
# body param: body
echo '{"appId": "j2jfnBDk", "steamId": "gs5HkGzG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'TOq7fpaN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'SyncSteamDLC' test.out

#- 315 SyncXboxDLC
# body param: body
echo '{"xstsToken": "t3XumJ3E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'jjAnKrOj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'SyncXboxDLC' test.out

#- 316 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'inamFlbe' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'ExwR0LLR' \
    --features '["512eIsCI", "Rf9XvfYO", "MCsqJKEZ"]' \
    --itemId '["9kIPkd4A", "LB5bYyzI", "8IEyv4rr"]' \
    --limit '7' \
    --offset '20' \
    > test.out 2>&1
eval_tap $? 316 'PublicQueryUserEntitlements' test.out

#- 317 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'N2g0sL78' \
    --appId 'LgnPoZVA' \
    > test.out 2>&1
eval_tap $? 317 'PublicGetUserAppEntitlementByAppId' test.out

#- 318 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'd38iL3xX' \
    --limit '69' \
    --offset '37' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 318 'PublicQueryUserEntitlementsByAppType' test.out

#- 319 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'J59qfp5u' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'dP9VY1rL' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetUserEntitlementByItemId' test.out

#- 320 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'zJQsNwWC' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'ChUhXwIT' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetUserEntitlementBySku' test.out

#- 321 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '7nRl9IaO' \
    --appIds '["htUm2NKg", "neRsIe85", "m8ZQcgir"]' \
    --itemIds '["kJ2osMUD", "OMofU9c5", "DTzmek9l"]' \
    --skus '["8xbnOyXs", "16WGAZ6z", "LyGapTDR"]' \
    > test.out 2>&1
eval_tap $? 321 'PublicExistsAnyUserActiveEntitlement' test.out

#- 322 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'EpdZ8FFA' \
    --appId 'XQQcNahz' \
    > test.out 2>&1
eval_tap $? 322 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 323 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'sLu0KRyz' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'ev8cfOtc' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 324 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'mLutVtGZ' \
    --ids '["NFbfkIKw", "10TX6tvy", "njmLWT5B"]' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 325 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'gYWY6Mo3' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'nL05L9Ki' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 326 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '4EB8kboS' \
    --namespace $AB_NAMESPACE \
    --userId '1vtsaXMl' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserEntitlement' test.out

#- 327 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["cQW5ItsO", "aE1ZNFtH", "AeLsz1U4"], "useCount": 16}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'Iwt2d2kd' \
    --namespace $AB_NAMESPACE \
    --userId 'zkhn0lxX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'PublicConsumeUserEntitlement' test.out

#- 328 PublicRedeemCode
# body param: body
echo '{"code": "QfeDlDE6", "language": "SlC", "region": "egUXaRlM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'fsrsIlSo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'PublicRedeemCode' test.out

#- 329 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "rb_YX", "productId": "K8lYu0Ir", "receiptData": "mPjp4rM3", "region": "l84A1pbq", "transactionId": "Pz6J7npD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'wvri9lc4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicFulfillAppleIAPItem' test.out

#- 330 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "dxsxBGWy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'DZodTy1f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'SyncEpicGamesInventory' test.out

#- 331 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "Jc_ChHN_pp", "orderId": "ehqOTvzg", "packageName": "U3XV7Itn", "productId": "GXidawKn", "purchaseTime": 76, "purchaseToken": "FNCbTJbI", "region": "hOm7Ltnk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '9W4tWMWN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicFulfillGoogleIAPItem' test.out

#- 332 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "8wO2lTC6", "price": 0.9019946222867445, "productId": "Koh4vZ6j", "serviceLabel": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'rlX9Rttu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicReconcilePlayStationStore' test.out

#- 333 SyncStadiaEntitlement
# body param: body
echo '{"appId": "QnJukliJ", "language": "JTzF", "region": "8z2rsxcq", "stadiaPlayerId": "9x3lfCXO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'qXZG6iIE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'SyncStadiaEntitlement' test.out

#- 334 SyncSteamInventory
# body param: body
echo '{"appId": "rDGrkpks", "currencyCode": "4h54lW7o", "language": "PXTM_LOrR_iX", "price": 0.973912677828673, "productId": "psW0XnRN", "region": "gUeAkKy6", "steamId": "mHgWQYDZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'YcChNU87' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'SyncSteamInventory' test.out

#- 335 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "h6LdVbAM", "language": "Rpc-CrfF", "region": "KUSKxRBq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'YMUP3OcU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'SyncTwitchDropsEntitlement' test.out

#- 336 SyncXboxInventory
# body param: body
echo '{"currencyCode": "6neU9Cmk", "price": 0.443899636326758, "productId": "5FRjZOUq", "xstsToken": "iR9ulGRv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'AznWeaPg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'SyncXboxInventory' test.out

#- 337 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'TGtBtVaP' \
    --itemId 'OI3PPVyT' \
    --limit '75' \
    --offset '37' \
    --status 'FULFILLED' \
    > test.out 2>&1
eval_tap $? 337 'PublicQueryUserOrders' test.out

#- 338 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "AkYUykxa", "discountedPrice": 57, "ext": {"l5slzahh": {}, "IULFBpe9": {}, "j97SnFBL": {}}, "itemId": "d32x7b6K", "language": "adJR-207", "price": 40, "quantity": 83, "region": "kp4QeFDV", "returnUrl": "tmT2llHG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'mDBNAiym' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'PublicCreateUserOrder' test.out

#- 339 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '4dtGgOoY' \
    --userId 'f8XR4eTr' \
    > test.out 2>&1
eval_tap $? 339 'PublicGetUserOrder' test.out

#- 340 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'v9Y4jm8v' \
    --userId 'sX1e9FbA' \
    > test.out 2>&1
eval_tap $? 340 'PublicCancelUserOrder' test.out

#- 341 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'D3OIxfBn' \
    --userId 'DbCzb7c4' \
    > test.out 2>&1
eval_tap $? 341 'PublicGetUserOrderHistories' test.out

#- 342 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'UsLll7uJ' \
    --userId 'Tfm3PwjE' \
    > test.out 2>&1
eval_tap $? 342 'PublicDownloadUserOrderReceipt' test.out

#- 343 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'E6TKr7Ae' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetPaymentAccounts' test.out

#- 344 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id '5zlxZrOc' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'bSNWKgGr' \
    > test.out 2>&1
eval_tap $? 344 'PublicDeletePaymentAccount' test.out

#- 345 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '7W7W1IlM' \
    --chargeStatus 'CHARGED' \
    --itemId 'RAHkYzc9' \
    --limit '30' \
    --offset '1' \
    --sku 'Wl0oSg9I' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 345 'PublicQueryUserSubscriptions' test.out

#- 346 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "LU3OcDjY", "itemId": "JlM9hjJI", "language": "EYV", "region": "egdUT9uu", "returnUrl": "Cd6B5L9J", "source": "KIDLXNUf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'mpn4nG1V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'PublicSubscribeSubscription' test.out

#- 347 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'vYEZdoH3' \
    --itemId '5pyIToLO' \
    > test.out 2>&1
eval_tap $? 347 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 348 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Ijbj3rdd' \
    --userId 'W2vgJ5wb' \
    > test.out 2>&1
eval_tap $? 348 'PublicGetUserSubscription' test.out

#- 349 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'b5QdBeEf' \
    --userId '51OgusE0' \
    > test.out 2>&1
eval_tap $? 349 'PublicChangeSubscriptionBillingAccount' test.out

#- 350 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "gVcsgHMd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '66fGgvc7' \
    --userId 'KbqJUsd4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicCancelSubscription' test.out

#- 351 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'wCRh8W0X' \
    --userId 'Dv4j4SJY' \
    --excludeFree 'true' \
    --limit '8' \
    --offset '86' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetUserSubscriptionBillingHistories' test.out

#- 352 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '2Fy8brl3' \
    --namespace $AB_NAMESPACE \
    --userId 'jiRHt3cv' \
    > test.out 2>&1
eval_tap $? 352 'PublicGetWallet' test.out

#- 353 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode '3rBDwmFN' \
    --namespace $AB_NAMESPACE \
    --userId 'JG8V6Hh6' \
    --limit '16' \
    --offset '62' \
    > test.out 2>&1
eval_tap $? 353 'PublicListUserWalletTransactions' test.out

#- 354 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --availableDate 'sB4dQSXp' \
    --baseAppId 'U9yb005H' \
    --categoryPath 'AHvEgxvU' \
    --features 'HktPh7IG' \
    --itemStatus 'ACTIVE' \
    --itemType 'OPTIONBOX' \
    --limit '57' \
    --offset '87' \
    --region 'ywdTPEzM' \
    --sortBy 'KCqQWYdE' \
    --storeId 'FMpEodFn' \
    --tags 'PeeJTpyS' \
    --targetNamespace 'cRUNOdfj' \
    > test.out 2>&1
eval_tap $? 354 'QueryItems1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE