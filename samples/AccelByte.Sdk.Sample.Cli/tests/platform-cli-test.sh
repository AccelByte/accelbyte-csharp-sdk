#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..364"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "9fAo4KEn", "appType": "DLC", "baseAppId": "qA4n1rYG", "boothName": "heoi4zj1", "boundItemIds": ["OdWKEGsC", "U18XrrLK", "PWpYzU9m"], "categoryPath": "piaWSFnH", "clazz": "Zbfm7vss", "createdAt": "1990-03-25T00:00:00Z", "description": "LOYhvcUu", "displayOrder": 11, "entitlementType": "DURABLE", "ext": {"v0V74bJE": {}, "enVagTSH": {}, "PkYZ9SWI": {}}, "features": ["GoFiQhtc", "iIIcUtYP", "ZRb5Iy3P"], "fresh": false, "images": [{"as": "M4t9lcpo", "caption": "q0ccCag1", "height": 47, "imageUrl": "PFVTKNRw", "smallImageUrl": "rjj47QbU", "width": 62}, {"as": "vxcA6ATo", "caption": "37Kliorh", "height": 72, "imageUrl": "eeuAwBgo", "smallImageUrl": "OrKrwg1v", "width": 10}, {"as": "cOl4gSBr", "caption": "tHfQ7rJD", "height": 83, "imageUrl": "2NXyTjuq", "smallImageUrl": "P9G428Tr", "width": 88}], "itemId": "SDJjhCom", "itemIds": ["1XsR2QAe", "rvfotNbT", "ucFXgZNb"], "itemQty": {"pGouzqfD": 17, "z5tOyTE9": 63, "NAWrOLXA": 3}, "itemType": "INGAMEITEM", "language": "gvj1xegK", "listable": true, "localExt": {"mwouKtDd": {}, "r81rhaOF": {}, "ghWXHGOL": {}}, "longDescription": "twc404c3", "lootBoxConfig": {"rewardCount": 44, "rewards": [{"lootBoxItems": [{"count": 23, "itemId": "xrww4bBm", "itemSku": "IRwdyYBk", "itemType": "MNLLQykN"}, {"count": 30, "itemId": "hc8zvXMw", "itemSku": "ZiaBYiYB", "itemType": "AFRcbjUF"}, {"count": 82, "itemId": "1nKu8jZ0", "itemSku": "r66rvdjy", "itemType": "dcMM27Pc"}], "name": "RKVk5pd1", "odds": 0.7036962461693026, "type": "PROBABILITY_GROUP", "weight": 56}, {"lootBoxItems": [{"count": 85, "itemId": "PYG2lmkB", "itemSku": "5lWxdxtz", "itemType": "ogKeiV22"}, {"count": 22, "itemId": "2nHuPGiz", "itemSku": "dQzs6EKw", "itemType": "N8SVM0rF"}, {"count": 24, "itemId": "5A3BvQhX", "itemSku": "jfJUrsyv", "itemType": "myJWvCGW"}], "name": "OEgp7nQD", "odds": 0.32479118766748405, "type": "REWARD", "weight": 80}, {"lootBoxItems": [{"count": 5, "itemId": "mGtEycFB", "itemSku": "zPnhZXGP", "itemType": "WZMaugaC"}, {"count": 22, "itemId": "jsqXQvo3", "itemSku": "ltyETq7X", "itemType": "DzPHYmMz"}, {"count": 1, "itemId": "lOZ5C4o1", "itemSku": "brubcBvi", "itemType": "qJH2wAwN"}], "name": "EagEx9Uj", "odds": 0.017893485920357333, "type": "REWARD", "weight": 68}]}, "maxCount": 27, "maxCountPerUser": 98, "name": "vEthBc8V", "namespace": "hVZSJgPy", "optionBoxConfig": {"boxItems": [{"count": 27, "itemId": "jWAW6UGx", "itemSku": "aBIydbZl", "itemType": "CCRFDwBy"}, {"count": 75, "itemId": "LRDhDGkg", "itemSku": "gfPlQiX5", "itemType": "JhwaYcEc"}, {"count": 28, "itemId": "Sw5K0JnR", "itemSku": "0K2FFrA5", "itemType": "lxxvpBUi"}]}, "purchasable": false, "purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 84, "comparison": "isLessThanOrEqual", "name": "P151XXWg", "predicateType": "SeasonPassPredicate", "value": "HBCjvJij", "values": ["oTnCUefe", "XOVywus4", "MaXMWCxg"]}, {"anyOf": 80, "comparison": "isGreaterThan", "name": "XaVfVbuV", "predicateType": "EntitlementPredicate", "value": "Q8f65wvX", "values": ["oi5SXJ33", "d2tpedU5", "rPDGxadx"]}, {"anyOf": 52, "comparison": "includes", "name": "WGxCIopR", "predicateType": "EntitlementPredicate", "value": "Ow7ZA29J", "values": ["4EIoPyc5", "ucuP9zqj", "p0pIAsJ6"]}]}, {"operator": "and", "predicates": [{"anyOf": 13, "comparison": "isNot", "name": "eKrnqQW5", "predicateType": "SeasonPassPredicate", "value": "i3ANwWgY", "values": ["NJiIDZzO", "OBOTyf9D", "EDUGiBMh"]}, {"anyOf": 16, "comparison": "includes", "name": "BXdiRfOh", "predicateType": "SeasonTierPredicate", "value": "mUX2c1so", "values": ["NlqKrWJd", "yXNAtwcm", "rP6ksWrB"]}, {"anyOf": 16, "comparison": "excludes", "name": "VtOBJFCd", "predicateType": "EntitlementPredicate", "value": "uVJrLuYL", "values": ["ob5pbaYW", "h5arOzZF", "CdYB9fOO"]}]}, {"operator": "or", "predicates": [{"anyOf": 4, "comparison": "isLessThan", "name": "dOiQQiY8", "predicateType": "SeasonPassPredicate", "value": "mqJ86M3B", "values": ["DQGTzBwc", "8PXChaT8", "W7IXhBOE"]}, {"anyOf": 14, "comparison": "is", "name": "33jFqkzB", "predicateType": "SeasonTierPredicate", "value": "AfMEUJfY", "values": ["k89HsdZk", "uvWow976", "QgAL8Kfw"]}, {"anyOf": 39, "comparison": "isLessThan", "name": "9np9DcIj", "predicateType": "SeasonTierPredicate", "value": "3cy7Qfpp", "values": ["j5tw6Iej", "gw1daIeO", "xaP6SuXX"]}]}]}, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 5, "fixedTrialCycles": 30, "graceDays": 8}, "region": "xns0XF9S", "regionData": [{"currencyCode": "GKknZIPG", "currencyNamespace": "8DGqOdO9", "currencyType": "REAL", "discountAmount": 64, "discountExpireAt": "1974-06-12T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1975-04-14T00:00:00Z", "discountedPrice": 39, "expireAt": "1982-05-01T00:00:00Z", "price": 56, "purchaseAt": "1975-05-05T00:00:00Z", "trialPrice": 37}, {"currencyCode": "l4Vj1fo6", "currencyNamespace": "ABmDfppC", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1996-10-27T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1985-10-08T00:00:00Z", "discountedPrice": 11, "expireAt": "1975-12-10T00:00:00Z", "price": 55, "purchaseAt": "1997-02-18T00:00:00Z", "trialPrice": 1}, {"currencyCode": "wmNIsHlV", "currencyNamespace": "onGpa4Of", "currencyType": "VIRTUAL", "discountAmount": 1, "discountExpireAt": "1988-02-29T00:00:00Z", "discountPercentage": 82, "discountPurchaseAt": "1988-02-15T00:00:00Z", "discountedPrice": 30, "expireAt": "1980-08-21T00:00:00Z", "price": 21, "purchaseAt": "1981-01-29T00:00:00Z", "trialPrice": 30}], "seasonType": "PASS", "sku": "xLthKwth", "stackable": true, "status": "ACTIVE", "tags": ["7OEcUfYq", "nhrVHxl7", "kLsxe4JM"], "targetCurrencyCode": "2N35R9Mu", "targetItemId": "NAIiEceT", "targetNamespace": "iMPl17MZ", "thumbnailUrl": "L4VIiap6", "title": "ibMgmYSo", "updatedAt": "1998-04-05T00:00:00Z", "useCount": 16}, "namespace": "4ZdsVLe2", "order": {"currency": {"currencyCode": "NdGfSPsu", "currencySymbol": "tYORyAVa", "currencyType": "VIRTUAL", "decimals": 49, "namespace": "6x1Hp2zO"}, "ext": {"JYSGhYmI": {}, "WZAYuq3y": {}, "IhC2M6jI": {}}, "free": false}, "source": "REFERRAL_BONUS"}, "script": "7nCEb2Ql", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'OdURRrB9' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "r0L1Xs3E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'vomT6LH1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'AeIQV4DD' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "AKltLRhW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id '156gxoQN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "asleJ1Hy", "dryRun": false, "fulfillmentUrl": "MfyNgKTE", "itemType": "LOOTBOX", "purchaseConditionUrl": "LWV2WGeQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'OA8QVomW' \
    --itemType 'MEDIA' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'ILECkBdw' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "Y88qC5t0", "dryRun": true, "fulfillmentUrl": "Apkq6lY5", "purchaseConditionUrl": "C1JFmkPB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'Zt8blmSv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 's8Q4JiPP' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '96' \
    --name 'NyhednG6' \
    --offset '80' \
    --tag 'TnGTMkbI' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "2iI0DhqJ", "items": [{"extraSubscriptionDays": 53, "itemId": "ZWjm73sC", "itemName": "G3QOwvp8", "quantity": 76}, {"extraSubscriptionDays": 93, "itemId": "otJ8r4on", "itemName": "hJ4JiNae", "quantity": 8}, {"extraSubscriptionDays": 34, "itemId": "xzpE0Lwf", "itemName": "h62PpIz2", "quantity": 73}], "maxRedeemCountPerCampaignPerUser": 20, "maxRedeemCountPerCode": 6, "maxRedeemCountPerCodePerUser": 51, "maxSaleCount": 32, "name": "o32q6gbf", "redeemEnd": "1993-03-12T00:00:00Z", "redeemStart": "1993-02-15T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["VpJICDqE", "wBcjBs3H", "7B3U9EZq"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '1KuvdCnn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "QhT2NGGk", "items": [{"extraSubscriptionDays": 13, "itemId": "Yu48NKuj", "itemName": "X8Dboeex", "quantity": 93}, {"extraSubscriptionDays": 10, "itemId": "hIf05nKp", "itemName": "WsvE9bcB", "quantity": 45}, {"extraSubscriptionDays": 78, "itemId": "104aXyOt", "itemName": "TRaKVLb0", "quantity": 66}], "maxRedeemCountPerCampaignPerUser": 96, "maxRedeemCountPerCode": 55, "maxRedeemCountPerCodePerUser": 63, "maxSaleCount": 34, "name": "ufZsg18a", "redeemEnd": "1981-09-24T00:00:00Z", "redeemStart": "1972-09-07T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["b5B8Q817", "WEokRHoZ", "KNYrFcuV"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'DRn6fih9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId '4scoexHp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'bTvv16PB' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "fS3ZTkhv", "localizationDisplayNames": {"WNCkvfB0": "9CwXYDVe", "3VavKRgY": "K82qj0fF", "PmNDps4p": "olTjIxPt"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'Ig3e7syY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'LtKx2Aw9' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'IsfVJNWs' \
    --namespace $AB_NAMESPACE \
    --storeId 'NpSHmxYa' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"lKtCUv8R": "Fgtu8wHo", "GN05wPfk": "JLiDDUz0", "fvjvvzAD": "3jbsiTyp"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'vCShPqPu' \
    --namespace $AB_NAMESPACE \
    --storeId 'nfHzmNcL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'AICdRDsK' \
    --namespace $AB_NAMESPACE \
    --storeId 'qV8zOECS' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'bGS9jA3d' \
    --namespace $AB_NAMESPACE \
    --storeId 'RMoDVTJd' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath '08auFRAp' \
    --namespace $AB_NAMESPACE \
    --storeId 'MSonfxU4' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'nNldM5nv' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '3' \
    --code 'sNS6Uqkj' \
    --limit '68' \
    --offset '64' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'cuJFlllk' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'N4BxGdBS' \
    --namespace $AB_NAMESPACE \
    --batchNo '21' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'PyOT1OJA' \
    --namespace $AB_NAMESPACE \
    --batchNo '1' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'jpK8HMfm' \
    --namespace $AB_NAMESPACE \
    --batchNo '6' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'TMCcv7tj' \
    --namespace $AB_NAMESPACE \
    --code 'xfBRT5xo' \
    --limit '19' \
    --offset '29' \
    --userId 'GXAjYN0j' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'yKfo8lyk' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '2Fn8ns8n' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code '63QlthdF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "YHJsrojR", "currencySymbol": "c4Xk8Otu", "currencyType": "REAL", "decimals": 28, "localizationDescriptions": {"pQCHI202": "ytmWLVgt", "Gmox4UMo": "M3VUt3DJ", "SlMuT0MM": "9A3MGI26"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"VjuJLghx": "fo6P6EZn", "2JrCHJ0e": "SHrhEHBY", "jOhyE5DG": "9pm5Y8Tb"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode '7JBAGRtZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'jMkMkzvM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'ttpGFJiG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'rkY7ywQL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "GuXcIzke", "rewards": [{"currency": {"currencyCode": "ovV1hHao", "namespace": "cPP5OUsv"}, "item": {"itemId": "17LBM9aE", "itemSku": "H57Rfb9R", "itemType": "RBsudlAt"}, "quantity": 40, "type": "ITEM"}, {"currency": {"currencyCode": "bhT27zkN", "namespace": "G7Hi8App"}, "item": {"itemId": "0ojnU98N", "itemSku": "WFahgUqK", "itemType": "t4kDQfBg"}, "quantity": 56, "type": "ITEM"}, {"currency": {"currencyCode": "JM7g5DzW", "namespace": "y5F7ImtX"}, "item": {"itemId": "oqw5YLRP", "itemSku": "Qpi4Bmid", "itemType": "Z3Qda4JG"}, "quantity": 54, "type": "CURRENCY"}]}, {"id": "1det2DTH", "rewards": [{"currency": {"currencyCode": "Bh9bQoFx", "namespace": "m96mIbYR"}, "item": {"itemId": "EWaqDVSG", "itemSku": "gBBQQUrm", "itemType": "LRpaOsPK"}, "quantity": 3, "type": "CURRENCY"}, {"currency": {"currencyCode": "GpFFGaHU", "namespace": "gM8ov40M"}, "item": {"itemId": "SVPLQkiX", "itemSku": "WC9n0s4u", "itemType": "Rj174bk5"}, "quantity": 80, "type": "ITEM"}, {"currency": {"currencyCode": "ufKtzvbf", "namespace": "wt4KkNiS"}, "item": {"itemId": "J5kBbgqs", "itemSku": "8StyAW1U", "itemType": "6Pg6g73c"}, "quantity": 18, "type": "ITEM"}]}, {"id": "tbxvt7nL", "rewards": [{"currency": {"currencyCode": "X9rBxkjE", "namespace": "GO6ob4zq"}, "item": {"itemId": "Wnl9nxX5", "itemSku": "vLSxp7gA", "itemType": "8zToQdxd"}, "quantity": 22, "type": "ITEM"}, {"currency": {"currencyCode": "OuzE9JGn", "namespace": "RaqaG9uz"}, "item": {"itemId": "G33HhdZk", "itemSku": "nJAREHC4", "itemType": "GqV2ld3g"}, "quantity": 77, "type": "ITEM"}, {"currency": {"currencyCode": "vCFz7fCG", "namespace": "cRBgMV0W"}, "item": {"itemId": "8m4QdzVH", "itemSku": "qpEDb5lH", "itemType": "PZQ63vdI"}, "quantity": 68, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"im6394rK": "Bvbmgyr2", "fENLdkEc": "I4xr4aO8", "v0kKIm4C": "lLNJwhBZ"}}, {"platform": "XBOX", "platformDlcIdMap": {"qOXWTTQ5": "b2G5h2nl", "8LAjrm1A": "NjZbYlsh", "4er4ffrD": "qqUjlgIe"}}, {"platform": "XBOX", "platformDlcIdMap": {"H6Faz9w9": "hYwdMyTh", "lTWCN7KB": "WgkdLcRA", "HfzbvlvU": "vYtKfdDz"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'GAME' \
    --entitlementClazz 'CODE' \
    --entitlementName 'wfIRP8hJ' \
    --itemId '["wuha8R2U", "03UkOa8P", "wHH61DRC"]' \
    --limit '25' \
    --offset '71' \
    --userId 'Ro3DqvCV' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'upHeb08d' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '38' \
    --offset '11' \
    --status 'SUCCESS' \
    --userId '2KZioP18' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "YrUF9c0l", "password": "Xs6uEeJD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "weCtEInz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "C1TGot00", "serviceAccountId": "bOI50yLN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "hdBvF6RC", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"RJqxC6ZK": "9yBhrxfV", "d3ge6CV3": "rBcZbgGx", "S7FJpXRG": "HxWgJodG"}}, {"itemIdentity": "9WWUTcDU", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"Ch4O2cTT": "aCg0vZ28", "LpDEKG3F": "DywvGhEz", "GxoJWzuI": "hV7mdlY7"}}, {"itemIdentity": "bAcJYXOO", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"2W30INMi": "4pYIswDq", "K7ABvipI": "OcdAmNOf", "KKSSAK4k": "jwcP7xBI"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "gfG7p7da"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "EMXPTpCl", "publisherAuthenticationKey": "QlEui0Iw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "6xStn0lq", "clientSecret": "W2dFV3xG", "organizationId": "g5X2zmTk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "HoRNEXll"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'sXjkJU0Y' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'gqbBCcTM' \
    --itemId 'CN0PDUmm' \
    --itemType 'SUBSCRIPTION' \
    --endTime 'S5D0RZyv' \
    --startTime 'cUXz01Ip' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'DNuWLOM3' \
    --itemId 'UVMAHgUl' \
    --itemType 'SUBSCRIPTION' \
    --endTime 'JbtImQ2o' \
    --startTime 'fahMYqHJ' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "LKfySJq5", "targetItemId": "XEN27Smz", "targetNamespace": "673DOoZs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'JJpZgL1q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "kNrYDjQ2", "appType": "GAME", "baseAppId": "UaECIhGp", "boothName": "ttjRmiDQ", "categoryPath": "P2RbN9HL", "clazz": "Q37xa3gf", "displayOrder": 35, "entitlementType": "CONSUMABLE", "ext": {"TVdV1Hvq": {}, "nbpzaDQD": {}, "kMldjtqC": {}}, "features": ["oRoBJV1J", "V0Fq6WxW", "Qox7Osx8"], "images": [{"as": "XjlCHapO", "caption": "aPQd8M0s", "height": 48, "imageUrl": "GTJRWLMM", "smallImageUrl": "bUC4v8aN", "width": 73}, {"as": "U9dBjfVw", "caption": "Ag1d3mOQ", "height": 7, "imageUrl": "SPo4ymOV", "smallImageUrl": "LKGXVsvv", "width": 66}, {"as": "lL8jGSS8", "caption": "oFGcZsUE", "height": 100, "imageUrl": "iee6o0Ol", "smallImageUrl": "uSrw8GmE", "width": 50}], "itemIds": ["wMPcM02V", "lLGiAelX", "IL6nZGkT"], "itemQty": {"560r3m7H": 22, "a2aqj31f": 72, "rjjrVifI": 61}, "itemType": "BUNDLE", "listable": false, "localizations": {"kgzEjyLx": {"description": "OsmV3o8P", "localExt": {"ioFq4dSG": {}, "6C5ZKLlD": {}, "ptv45Lfc": {}}, "longDescription": "HUDZQOwH", "title": "kLl6W4Gj"}, "ZPxGIrrd": {"description": "6kQ3ftpm", "localExt": {"eIxmnxEW": {}, "x4lb1toU": {}, "aDt7cpbX": {}}, "longDescription": "alH4iGU4", "title": "7pE34gsa"}, "aZuQR8dN": {"description": "Fp3GI7DI", "localExt": {"rMhoIl1L": {}, "mcmcMAoJ": {}, "ART87KRY": {}}, "longDescription": "E1nQRruP", "title": "aA9gcEJ9"}}, "lootBoxConfig": {"rewardCount": 36, "rewards": [{"lootBoxItems": [{"count": 66, "itemId": "mEYQhh1S", "itemSku": "LSsTWafF", "itemType": "ekC3FPZ8"}, {"count": 38, "itemId": "oDNGRVBT", "itemSku": "JgrJmY6T", "itemType": "eyacuST9"}, {"count": 70, "itemId": "faasaOXl", "itemSku": "I7kurtar", "itemType": "VQt8dHnD"}], "name": "eBMoDlgT", "odds": 0.28463986657711327, "type": "PROBABILITY_GROUP", "weight": 99}, {"lootBoxItems": [{"count": 67, "itemId": "ra9OHWh5", "itemSku": "w9RFAQal", "itemType": "h3VGwX93"}, {"count": 43, "itemId": "JaMoOEl4", "itemSku": "JrsF9AeQ", "itemType": "UchfPyAE"}, {"count": 7, "itemId": "I1TAdyuy", "itemSku": "RjMpa6X0", "itemType": "MPgeH920"}], "name": "xt5wN5az", "odds": 0.42255623543147736, "type": "REWARD_GROUP", "weight": 54}, {"lootBoxItems": [{"count": 81, "itemId": "SIB8E21H", "itemSku": "QPV5MJvN", "itemType": "CIu7TvOM"}, {"count": 63, "itemId": "h2fungO8", "itemSku": "S9DrRK0h", "itemType": "DruiMpmf"}, {"count": 66, "itemId": "FNDpPSrj", "itemSku": "TYP3A4xS", "itemType": "DHsCPuo9"}], "name": "XM4pKOpk", "odds": 0.158406550134223, "type": "REWARD_GROUP", "weight": 51}]}, "maxCount": 84, "maxCountPerUser": 55, "name": "B3JVh1um", "optionBoxConfig": {"boxItems": [{"count": 3, "itemId": "mbGvSEFm", "itemSku": "Qa41bZ7D", "itemType": "7sUTZ8vd"}, {"count": 8, "itemId": "fKiOddte", "itemSku": "zqUw79Ry", "itemType": "gy5xVxcS"}, {"count": 89, "itemId": "ciBZh4Yu", "itemSku": "ObAnauQE", "itemType": "QZSm3owf"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 50, "fixedTrialCycles": 16, "graceDays": 79}, "regionData": {"dsXb60z0": [{"currencyCode": "fb7WUuFy", "currencyNamespace": "n2ZiEFnG", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1985-06-05T00:00:00Z", "discountPercentage": 2, "discountPurchaseAt": "1986-12-11T00:00:00Z", "discountedPrice": 73, "expireAt": "1977-04-02T00:00:00Z", "price": 79, "purchaseAt": "1989-09-04T00:00:00Z", "trialPrice": 82}, {"currencyCode": "sp2zn4ip", "currencyNamespace": "DWkpp7gp", "currencyType": "REAL", "discountAmount": 24, "discountExpireAt": "1974-10-23T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1976-02-22T00:00:00Z", "discountedPrice": 41, "expireAt": "1973-05-15T00:00:00Z", "price": 43, "purchaseAt": "1984-04-14T00:00:00Z", "trialPrice": 61}, {"currencyCode": "mx3frUTl", "currencyNamespace": "N5cHzeHb", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1978-06-02T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1994-12-10T00:00:00Z", "discountedPrice": 69, "expireAt": "1972-02-24T00:00:00Z", "price": 43, "purchaseAt": "1980-05-31T00:00:00Z", "trialPrice": 45}], "O26rgcUa": [{"currencyCode": "rcUXf6CM", "currencyNamespace": "YBhxCJ72", "currencyType": "VIRTUAL", "discountAmount": 53, "discountExpireAt": "1971-05-09T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1973-03-04T00:00:00Z", "discountedPrice": 6, "expireAt": "1995-10-22T00:00:00Z", "price": 59, "purchaseAt": "1995-09-04T00:00:00Z", "trialPrice": 32}, {"currencyCode": "5A8pSRWm", "currencyNamespace": "vvHtwlgP", "currencyType": "VIRTUAL", "discountAmount": 29, "discountExpireAt": "1978-12-24T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1996-11-25T00:00:00Z", "discountedPrice": 62, "expireAt": "1989-05-28T00:00:00Z", "price": 39, "purchaseAt": "1982-11-20T00:00:00Z", "trialPrice": 63}, {"currencyCode": "DwTATkWP", "currencyNamespace": "OEbiQLGV", "currencyType": "REAL", "discountAmount": 2, "discountExpireAt": "1989-06-27T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1978-10-06T00:00:00Z", "discountedPrice": 80, "expireAt": "1984-03-22T00:00:00Z", "price": 62, "purchaseAt": "1985-02-17T00:00:00Z", "trialPrice": 55}], "MDOyE31a": [{"currencyCode": "wKCk1oO8", "currencyNamespace": "Uh08XPmB", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1983-10-11T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1990-03-30T00:00:00Z", "discountedPrice": 48, "expireAt": "1985-08-05T00:00:00Z", "price": 95, "purchaseAt": "1986-12-28T00:00:00Z", "trialPrice": 79}, {"currencyCode": "iGxshfmu", "currencyNamespace": "wuoMSGiy", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1971-10-19T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1983-05-16T00:00:00Z", "discountedPrice": 97, "expireAt": "1975-12-24T00:00:00Z", "price": 40, "purchaseAt": "1988-11-24T00:00:00Z", "trialPrice": 73}, {"currencyCode": "2gFrfmrY", "currencyNamespace": "EopHe7GL", "currencyType": "VIRTUAL", "discountAmount": 21, "discountExpireAt": "1998-07-18T00:00:00Z", "discountPercentage": 69, "discountPurchaseAt": "1975-02-07T00:00:00Z", "discountedPrice": 61, "expireAt": "1996-08-20T00:00:00Z", "price": 50, "purchaseAt": "1981-01-05T00:00:00Z", "trialPrice": 85}]}, "seasonType": "TIER", "sku": "bwmpXEgt", "stackable": false, "status": "INACTIVE", "tags": ["s1IwyGWy", "wBUlHxqc", "32SXQkoL"], "targetCurrencyCode": "OaLgxNQF", "targetNamespace": "7jbNwfSE", "thumbnailUrl": "Xfs7lnBk", "useCount": 31}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'Q9tFVmQ0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '2B4iF8GZ' \
    --appId '9xEUflrd' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DLC' \
    --availableDate 'WYEJMLGG' \
    --baseAppId 'uQ2g3eQP' \
    --categoryPath '1gUwQvJX' \
    --features 'CKFWLFph' \
    --includeSubCategoryItem 'true' \
    --itemType 'BUNDLE' \
    --limit '65' \
    --offset '11' \
    --region 'Ioaim7Jf' \
    --sortBy '["name:asc", "createdAt:asc", "displayOrder:desc"]' \
    --storeId 'BKkHy9Ll' \
    --tags 'NZcU611Y' \
    --targetNamespace 'V8RzTJPg' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["LMfwfxjf", "TmnWaIMA", "CzgVw1cA"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'tyAh4aQ9' \
    --sku 'ufId80hH' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'XNIMPfuP' \
    --populateBundle 'true' \
    --region 'FrbeU275' \
    --storeId 'sf3Df758' \
    --sku '1uad7bnw' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'wPsQWg0i' \
    --sku 'KBOCcRpN' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["T4fi8SEJ", "S4ao9zbf", "juOSqqRa"]' \
    --storeId 'xQrLedcm' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'Q82ua58d' \
    --region 'Tjt7NzyR' \
    --storeId 'PiR7uwAM' \
    --itemIds 'OJfgz1ur' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["P0XmaPv3", "MW2sAiRe", "oTqWxGAx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'HNgWnE5h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'BUNDLE' \
    --limit '61' \
    --offset '38' \
    --sortBy 'zkarXpKA' \
    --storeId 'JOH5830q' \
    --keyword 'cTpkTyLQ' \
    --language 'MWtbiJ7B' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '22' \
    --offset '83' \
    --sortBy '["name", "updatedAt:desc"]' \
    --storeId 'OiuTIeyn' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'cFFeOVkW' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'hvRJPwQz' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "H3eWCLqa", "appType": "DLC", "baseAppId": "YTHSUjtx", "boothName": "9vBpj1gq", "categoryPath": "X3wVSOFe", "clazz": "srb8cNHM", "displayOrder": 22, "entitlementType": "DURABLE", "ext": {"UDHicBzT": {}, "H2vJJd2Q": {}, "8CMHPdaQ": {}}, "features": ["lAQrmPm0", "GtYHzfGk", "n61EUqBH"], "images": [{"as": "Va23Mpbu", "caption": "VlWZn1yV", "height": 17, "imageUrl": "WUow1uR7", "smallImageUrl": "qRvuTZru", "width": 45}, {"as": "l1T0CqXt", "caption": "I9JGczQK", "height": 65, "imageUrl": "wu8gqs7e", "smallImageUrl": "8xAwlYia", "width": 93}, {"as": "mqfGHSvl", "caption": "hShjxPZ0", "height": 35, "imageUrl": "B3thdoRH", "smallImageUrl": "eWXjYbws", "width": 100}], "itemIds": ["4z5cHlzt", "mRh9gVKN", "iRHjbU1P"], "itemQty": {"B9QZnpU7": 41, "11baxyLM": 69, "bkauLBwN": 51}, "itemType": "SEASON", "listable": true, "localizations": {"FcHx7nrn": {"description": "p3eW8Fpc", "localExt": {"0R73wEWP": {}, "nYSgqMvf": {}, "roRRx1Mv": {}}, "longDescription": "fFnxroMI", "title": "RNCCdpTz"}, "r2GfR5VB": {"description": "HqYS31Wf", "localExt": {"4bHf80Sx": {}, "JlOcWyHq": {}, "QvmaHJ4k": {}}, "longDescription": "tqgj5pLT", "title": "huH23stz"}, "YENkDtkK": {"description": "LX1W1kPS", "localExt": {"sLdIWvOW": {}, "5BGp0sTd": {}, "MjClwL37": {}}, "longDescription": "QBSJbzjG", "title": "ofvQgfMS"}}, "lootBoxConfig": {"rewardCount": 86, "rewards": [{"lootBoxItems": [{"count": 60, "itemId": "K28odOOd", "itemSku": "uAzDGBcW", "itemType": "ta7mVHHj"}, {"count": 21, "itemId": "alfCQOQU", "itemSku": "5yLzQ2DH", "itemType": "sShNA18h"}, {"count": 58, "itemId": "my0wRkip", "itemSku": "fuD7jMTz", "itemType": "Fob8qoNH"}], "name": "w4VU663L", "odds": 0.6199974465158677, "type": "PROBABILITY_GROUP", "weight": 86}, {"lootBoxItems": [{"count": 86, "itemId": "0QmOhVPQ", "itemSku": "0n0KuDFS", "itemType": "YhotVZUO"}, {"count": 35, "itemId": "O04MFL2a", "itemSku": "IFaptWzx", "itemType": "GOxuxhq0"}, {"count": 88, "itemId": "UNKjdcO8", "itemSku": "gjKK1SCY", "itemType": "bSF5kGb7"}], "name": "crPIsfJt", "odds": 0.08322567658930213, "type": "PROBABILITY_GROUP", "weight": 74}, {"lootBoxItems": [{"count": 26, "itemId": "0yQYTvLH", "itemSku": "3KcXEX7j", "itemType": "8Bwd2hnp"}, {"count": 82, "itemId": "qQva512R", "itemSku": "E9XLLs06", "itemType": "KK50WRoK"}, {"count": 11, "itemId": "QCo10O9M", "itemSku": "1aryvVZG", "itemType": "nAXVMDiX"}], "name": "q3LQgpC2", "odds": 0.36039895926381227, "type": "REWARD", "weight": 23}]}, "maxCount": 21, "maxCountPerUser": 67, "name": "0EGcObzV", "optionBoxConfig": {"boxItems": [{"count": 16, "itemId": "znALRAL9", "itemSku": "9xg0GnwN", "itemType": "9fsyDIjk"}, {"count": 9, "itemId": "qsYSnNd1", "itemSku": "VB2Pd0Fu", "itemType": "8C72dQ1V"}, {"count": 11, "itemId": "yWh6rRsg", "itemSku": "hPSjxfZP", "itemType": "w5AoekAU"}]}, "purchasable": false, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 97, "fixedTrialCycles": 12, "graceDays": 59}, "regionData": {"hc7hkM1P": [{"currencyCode": "lngicbRW", "currencyNamespace": "n6PoaBVH", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1991-11-08T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1986-01-04T00:00:00Z", "discountedPrice": 34, "expireAt": "1975-10-11T00:00:00Z", "price": 55, "purchaseAt": "1983-10-19T00:00:00Z", "trialPrice": 21}, {"currencyCode": "IpGdHbDb", "currencyNamespace": "eh9ncgqp", "currencyType": "REAL", "discountAmount": 68, "discountExpireAt": "1982-05-26T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1975-06-24T00:00:00Z", "discountedPrice": 59, "expireAt": "1983-05-29T00:00:00Z", "price": 14, "purchaseAt": "1984-01-06T00:00:00Z", "trialPrice": 22}, {"currencyCode": "dpKFKTYx", "currencyNamespace": "NWtkuDAs", "currencyType": "VIRTUAL", "discountAmount": 35, "discountExpireAt": "1973-08-23T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1985-01-01T00:00:00Z", "discountedPrice": 84, "expireAt": "1998-11-01T00:00:00Z", "price": 37, "purchaseAt": "1974-02-16T00:00:00Z", "trialPrice": 14}], "qH5GRxTo": [{"currencyCode": "AQRb5hLM", "currencyNamespace": "XVsXhHqC", "currencyType": "VIRTUAL", "discountAmount": 5, "discountExpireAt": "1979-02-13T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1993-11-09T00:00:00Z", "discountedPrice": 98, "expireAt": "1976-01-22T00:00:00Z", "price": 99, "purchaseAt": "1990-05-05T00:00:00Z", "trialPrice": 93}, {"currencyCode": "kydKAN1m", "currencyNamespace": "kqDf3KTn", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1980-03-28T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1997-04-28T00:00:00Z", "discountedPrice": 94, "expireAt": "1989-06-07T00:00:00Z", "price": 94, "purchaseAt": "1975-10-01T00:00:00Z", "trialPrice": 2}, {"currencyCode": "kmoaNKSf", "currencyNamespace": "GVbE2Uex", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1982-08-07T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1993-08-13T00:00:00Z", "discountedPrice": 65, "expireAt": "1985-01-09T00:00:00Z", "price": 72, "purchaseAt": "1978-05-24T00:00:00Z", "trialPrice": 5}], "8SXIiJDk": [{"currencyCode": "bLh1eIYm", "currencyNamespace": "NkLAqH8d", "currencyType": "VIRTUAL", "discountAmount": 65, "discountExpireAt": "1987-07-30T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1971-06-08T00:00:00Z", "discountedPrice": 64, "expireAt": "1972-01-26T00:00:00Z", "price": 29, "purchaseAt": "1972-06-22T00:00:00Z", "trialPrice": 90}, {"currencyCode": "knC2BbkW", "currencyNamespace": "cFCcNrQY", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1971-03-15T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1992-08-22T00:00:00Z", "discountedPrice": 24, "expireAt": "1997-05-08T00:00:00Z", "price": 59, "purchaseAt": "1981-01-27T00:00:00Z", "trialPrice": 60}, {"currencyCode": "Hs39MhSr", "currencyNamespace": "k1kPapYD", "currencyType": "VIRTUAL", "discountAmount": 61, "discountExpireAt": "1982-11-01T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1987-02-14T00:00:00Z", "discountedPrice": 61, "expireAt": "1986-04-19T00:00:00Z", "price": 46, "purchaseAt": "1979-05-11T00:00:00Z", "trialPrice": 9}]}, "seasonType": "TIER", "sku": "eF3E9397", "stackable": true, "status": "INACTIVE", "tags": ["bLbGRUDi", "NVmOeVD1", "LIvGTvUq"], "targetCurrencyCode": "aux1U9DD", "targetNamespace": "7gC3WMIL", "thumbnailUrl": "p0aEzaNK", "useCount": 93}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId '79zLRpvi' \
    --namespace $AB_NAMESPACE \
    --storeId '0RqzUbtc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'iP9eZvNO' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'SvnznHLK' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 72, "orderNo": "batnV405"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'mfA98TaT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'hXADgIyT' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'ZmrNkoAl' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "Dd2KbN8m", "previewUrl": "jSjssBbj", "thumbnailUrl": "oVQTtlb0", "type": "video", "url": "GRynAVcJ", "videoSource": "generic"}, {"alt": "0klXEKK5", "previewUrl": "lk3TEOtV", "thumbnailUrl": "jJfo05Zq", "type": "video", "url": "5oxzPmsD", "videoSource": "vimeo"}, {"alt": "rtUaqprm", "previewUrl": "QsmD4UJA", "thumbnailUrl": "z8m3RfoY", "type": "image", "url": "fK88colw", "videoSource": "youtube"}], "developer": "HgkHjtIV", "forumUrl": "QLyyv0aY", "genres": ["Action", "Strategy", "Action"], "localizations": {"73ufepCb": {"announcement": "JRD5i1xA", "slogan": "lFE0NmDy"}, "G2LylSvd": {"announcement": "sYP8WvIe", "slogan": "HtqOYIQg"}, "jawuqFWt": {"announcement": "lgEElc2I", "slogan": "HO0BZmW8"}}, "platformRequirements": {"eufAvEaP": [{"additionals": "PRkVV6lc", "directXVersion": "gtLczN5w", "diskSpace": "87dEEFRb", "graphics": "eQS8vcs9", "label": "3H4X5hJK", "osVersion": "gRQz1ilS", "processor": "1IB8aiR6", "ram": "mrKhkC1i", "soundCard": "uECPPDML"}, {"additionals": "ZqPdftGL", "directXVersion": "97LMasDY", "diskSpace": "N14UPppI", "graphics": "LtuUDuTX", "label": "M67k17a3", "osVersion": "BSIfZlp7", "processor": "lIpLISFn", "ram": "zmQfL8o6", "soundCard": "uuOYTpxt"}, {"additionals": "5aOGuJqL", "directXVersion": "UwvJq24y", "diskSpace": "tAxGknNa", "graphics": "q11DY5FO", "label": "WHkdLerc", "osVersion": "0WTmeinD", "processor": "NjFtO1ya", "ram": "f50ksDJp", "soundCard": "x1Bt8voh"}], "5frxZsBs": [{"additionals": "fYnqLhM8", "directXVersion": "0YzKnKxY", "diskSpace": "bZEUtGbn", "graphics": "pAB3bJHp", "label": "La5X2TiH", "osVersion": "8AqIlla8", "processor": "Mfy0iWI4", "ram": "AUx2PJxX", "soundCard": "3Kb3zUYF"}, {"additionals": "LpTr8z6Q", "directXVersion": "UagiDgRE", "diskSpace": "10fmemLj", "graphics": "nnlSER2i", "label": "WuoJ5fVJ", "osVersion": "xQVpKuRy", "processor": "ejBvDMdM", "ram": "8LXebCwe", "soundCard": "OStMKMcl"}, {"additionals": "ghcTMsnL", "directXVersion": "P5H6h4sD", "diskSpace": "yZQusYLE", "graphics": "EJmJVUfC", "label": "3k6DQC35", "osVersion": "J0guslN1", "processor": "VRX6MODN", "ram": "ZTfNyK4l", "soundCard": "IdmvuzHq"}], "gK3IHIxx": [{"additionals": "qiZpRvXG", "directXVersion": "UjAJqMU5", "diskSpace": "oCvj46y6", "graphics": "UNhC2O3d", "label": "QaQuP1VB", "osVersion": "is3UIDcx", "processor": "YXFjtd2i", "ram": "aTfKrRWO", "soundCard": "dCSxypFU"}, {"additionals": "0j2ZnblU", "directXVersion": "XA2pUmL3", "diskSpace": "l80bsKux", "graphics": "2TdrYA9J", "label": "hPk15kyM", "osVersion": "EwSLALWj", "processor": "7bJ9e3gW", "ram": "AQVS44fm", "soundCard": "3AMcgmqd"}, {"additionals": "XgbEcpEk", "directXVersion": "GrcoibYT", "diskSpace": "qeZQno2Q", "graphics": "9TWemVWj", "label": "Oe8T7IYE", "osVersion": "bvRydsvY", "processor": "vUlJL7Vx", "ram": "j4U1A0DW", "soundCard": "K9gG0ALe"}]}, "platforms": ["Linux", "Windows", "Android"], "players": ["Coop", "LocalCoop", "MMO"], "primaryGenre": "Simulation", "publisher": "ricxLJgg", "releaseDate": "1971-10-20T00:00:00Z", "websiteUrl": "a2t4mI0v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'UT9JOxTb' \
    --namespace $AB_NAMESPACE \
    --storeId 'n90fqwtO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId '5gXz88Eu' \
    --namespace $AB_NAMESPACE \
    --storeId 'wdKiipX6' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'dNFxAp5j' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'xqozAwz2' \
    --namespace $AB_NAMESPACE \
    --storeId 'mDROL7Od' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'YhTh9qxo' \
    --itemId '4SPZyOKE' \
    --namespace $AB_NAMESPACE \
    --storeId 'xJU7kvxc' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'skP0yesN' \
    --itemId 'YCD2i2OW' \
    --namespace $AB_NAMESPACE \
    --storeId 'FpyqhSdu' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'QAvG1aJX' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'EOicZB8P' \
    --populateBundle 'true' \
    --region '7B4NYqYR' \
    --storeId 'ulJ6WvYO' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 17, "comparison": "isNot", "name": "o5VwYug9", "predicateType": "EntitlementPredicate", "value": "DFtOQ9NG", "values": ["AKcSpMDo", "F203AiAH", "eG7CH9ny"]}, {"anyOf": 70, "comparison": "isLessThanOrEqual", "name": "kfgaPEGn", "predicateType": "EntitlementPredicate", "value": "3ACWWjWO", "values": ["HQa7E0VZ", "z2vAEngi", "F1OxTiH3"]}, {"anyOf": 25, "comparison": "isNot", "name": "e8Nay2ps", "predicateType": "SeasonPassPredicate", "value": "PvvUCdUF", "values": ["kCuooZCQ", "lmM4DCe0", "hi5ntFYF"]}]}, {"operator": "or", "predicates": [{"anyOf": 10, "comparison": "isLessThanOrEqual", "name": "hdq8BvOe", "predicateType": "EntitlementPredicate", "value": "haiSBB3x", "values": ["wuD85c1Y", "HTS72JvF", "wba1UE6D"]}, {"anyOf": 23, "comparison": "isLessThanOrEqual", "name": "pF0gwu6b", "predicateType": "SeasonPassPredicate", "value": "5KRMm789", "values": ["nYsCeJq3", "m9aK9AfZ", "rvkmFCCc"]}, {"anyOf": 27, "comparison": "isLessThan", "name": "Mue3Wu7Y", "predicateType": "SeasonPassPredicate", "value": "h14NC3se", "values": ["CzVffQUn", "C1GmBAIH", "ogU795sY"]}]}, {"operator": "and", "predicates": [{"anyOf": 65, "comparison": "isGreaterThanOrEqual", "name": "PS2OpmDb", "predicateType": "EntitlementPredicate", "value": "jgBoP0QU", "values": ["YuIa8kvu", "wkneZqjg", "RxciXsah"]}, {"anyOf": 20, "comparison": "isGreaterThanOrEqual", "name": "Wcgvi0Kd", "predicateType": "EntitlementPredicate", "value": "jZGlZGB6", "values": ["iMdEqBgi", "HkC3LvrC", "6OtMVE4N"]}, {"anyOf": 85, "comparison": "isGreaterThan", "name": "GjS5v5tM", "predicateType": "SeasonPassPredicate", "value": "gIJqYNAT", "values": ["CWdKrM0M", "73c6v4N9", "IRsqDov5"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'zDIHosjg' \
    --namespace $AB_NAMESPACE \
    --storeId 'lqhjPD2g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "7XGtRORQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'TPk1Oy2A' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '35' \
    --name 'G5TXPOef' \
    --offset '91' \
    --tag 'gaOhHv6i' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "IWKly9k2", "name": "9GktKnqm", "status": "ACTIVE", "tags": ["6rtaUpuI", "ilo7Errb", "otne8PSa"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
eval_tap 0 112 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'AQCKo2GR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "H4drQ5Yh", "name": "4jaL7I0e", "status": "ACTIVE", "tags": ["x9GsL85B", "S5CxlIGc", "GdfKX4uR"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'PnXWRXML' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '1QjCbIJT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'LzSL85fC' \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --offset '8' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'FD8bUJaT' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'LW4e0R1R' \
    --limit '94' \
    --offset '49' \
    --orderNos '["Xs9zwFeo", "8gDnD8j5", "V3kA9utX"]' \
    --sortBy 'GNvcCepg' \
    --startTime 'hSH7b0Uh' \
    --status 'REFUND_FAILED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Adn2eNkt' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "rfYJRHae"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'G9som6vk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "mV1M4wup", "privateKey": "Swh9ZGlK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'jfUSRiqM' \
    --externalId '7f2yCojy' \
    --limit '28' \
    --notificationSource 'ADYEN' \
    --notificationType '676m3lTn' \
    --offset '76' \
    --paymentOrderNo 'iyYD3YC7' \
    --startDate 'a8iOAMfW' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId '28mrK4Td' \
    --limit '73' \
    --offset '74' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "JsAoIK2M", "currencyNamespace": "OALb6jlP", "customParameters": {"ZpOupFHY": {}, "GD34v8OO": {}, "7unsV8aJ": {}}, "description": "wGntDNYK", "extOrderNo": "849GLKTO", "extUserId": "MrbEls0X", "itemType": "SUBSCRIPTION", "language": "acFZ_375", "metadata": {"m6EgM8c0": "9JZKTwyg", "yFJKYZYU": "KTLBTuKD", "HbwIWN3o": "Xbd1FgVj"}, "notifyUrl": "30ghFcHl", "omitNotification": false, "platform": "1jhZKGU2", "price": 35, "recurringPaymentOrderNo": "4QizfgHL", "region": "Xz4LkmpN", "returnUrl": "NqZKi4EJ", "sandbox": true, "sku": "Gf8gM3uA", "subscriptionId": "4n0Gw3lr", "targetNamespace": "y8NSqyh9", "targetUserId": "3bYYjbPz", "title": "jPK9y7om"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'XG3zwBa7' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'vkREKRa7' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "H7aFIdDC", "paymentMethod": "s2UmMSMv", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'BGKsGNMK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "TsBiwr5w"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 't6FXiVoq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 44, "currencyCode": "Dyfo76pQ", "notifyType": "REFUND", "paymentProvider": "ALIPAY", "salesTax": 47, "vat": 56}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'MkNShkEV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '8ub2woVL' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'GooglePlay' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Nintendo", "Twitch", "Xbox"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 CreateReward
# body param: body
echo '{"description": "L8TKfgkC", "eventTopic": "LU4spUcI", "maxAwarded": 0, "maxAwardedPerUser": 87, "namespaceExpression": "LhbSAVYS", "rewardCode": "sDQTon9W", "rewardConditions": [{"condition": "zWs2AqrF", "conditionName": "0xrhsQGt", "eventName": "lnusUz7I", "rewardItems": [{"duration": 36, "itemId": "OYv0crKB", "quantity": 100}, {"duration": 31, "itemId": "Yce9Xvhn", "quantity": 4}, {"duration": 4, "itemId": "ZshWcwCX", "quantity": 68}]}, {"condition": "lfl8sZNd", "conditionName": "yMnpRKbr", "eventName": "M0avYILK", "rewardItems": [{"duration": 20, "itemId": "yQP2uENo", "quantity": 34}, {"duration": 48, "itemId": "WGrSFmIY", "quantity": 81}, {"duration": 43, "itemId": "gpwT8JqU", "quantity": 56}]}, {"condition": "X58gXjly", "conditionName": "CumSTZqe", "eventName": "ZaQwJYI3", "rewardItems": [{"duration": 7, "itemId": "DRCOuZu4", "quantity": 46}, {"duration": 59, "itemId": "ij5FKEIc", "quantity": 71}, {"duration": 27, "itemId": "8YhpJsFb", "quantity": 8}]}], "userIdExpression": "nWxPHFbk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateReward' test.out

#- 137 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic '5CXTSojy' \
    --limit '42' \
    --offset '62' \
    --sortBy '["rewardCode:asc", "namespace", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 137 'QueryRewards' test.out

#- 138 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'ExportRewards' test.out

#- 139 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 139 'ImportRewards' test.out

#- 140 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'dfyOX7Tn' \
    > test.out 2>&1
eval_tap $? 140 'GetReward' test.out

#- 141 UpdateReward
# body param: body
echo '{"description": "8YJRb124", "eventTopic": "5EbTa879", "maxAwarded": 93, "maxAwardedPerUser": 83, "namespaceExpression": "1HJVdX9F", "rewardCode": "MFGviWHN", "rewardConditions": [{"condition": "MkC8OoEp", "conditionName": "tmsUt1KJ", "eventName": "JYkY60oF", "rewardItems": [{"duration": 7, "itemId": "DvXK5lVb", "quantity": 87}, {"duration": 84, "itemId": "WpW32XM5", "quantity": 4}, {"duration": 69, "itemId": "MNGN9a07", "quantity": 86}]}, {"condition": "GYrncKts", "conditionName": "P9opjb7M", "eventName": "gNlRUVYq", "rewardItems": [{"duration": 71, "itemId": "jK1fFJe2", "quantity": 37}, {"duration": 36, "itemId": "DQSbJwtA", "quantity": 27}, {"duration": 8, "itemId": "cuFl7Ftc", "quantity": 21}]}, {"condition": "L7UrRJiR", "conditionName": "v2noTav9", "eventName": "44eVa6Ia", "rewardItems": [{"duration": 33, "itemId": "uBq3CQQw", "quantity": 34}, {"duration": 0, "itemId": "deL6HXHJ", "quantity": 48}, {"duration": 72, "itemId": "aLrAaxOO", "quantity": 58}]}], "userIdExpression": "5PRWMIag"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ocwTK4KD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateReward' test.out

#- 142 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'A6nyWw7n' \
    > test.out 2>&1
eval_tap $? 142 'DeleteReward' test.out

#- 143 CheckEventCondition
# body param: body
echo '{"payload": {"GJ1UhnXI": {}, "ZIejqO8e": {}, "UmX90I6O": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'xqA7lR3y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CheckEventCondition' test.out

#- 144 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "2IHmMRYu", "userId": "thr1VT49"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'Nws8wBvz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteRewardConditionRecord' test.out

#- 145 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'ListStores' test.out

#- 146 CreateStore
# body param: body
echo '{"defaultLanguage": "k21yLOwr", "defaultRegion": "at9Bu3jE", "description": "7JO4o1ir", "supportedLanguages": ["i0NYsDri", "OXjxpWFo", "tWH1Kayk"], "supportedRegions": ["vfFzipkt", "9QYcd8bO", "3ISLdIvj"], "title": "cgdYU0iy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreateStore' test.out

#- 147 ImportStore
eval_tap 0 147 'ImportStore # SKIP deprecated' test.out

#- 148 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'GetPublishedStore' test.out

#- 149 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'DeletePublishedStore' test.out

#- 150 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 150 'GetPublishedStoreBackup' test.out

#- 151 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'RollbackPublishedStore' test.out

#- 152 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'eaxGx39N' \
    > test.out 2>&1
eval_tap $? 152 'GetStore' test.out

#- 153 UpdateStore
# body param: body
echo '{"defaultLanguage": "Se0yXPsn", "defaultRegion": "UcIdraG1", "description": "2ckqMPdN", "supportedLanguages": ["McYcAtFw", "zDYahrPm", "cZLaxmNx"], "supportedRegions": ["BMspXglt", "lcVPuGII", "WOuJBTrE"], "title": "NO4ppIJo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'jXiIRUZH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateStore' test.out

#- 154 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'UEDfak2X' \
    > test.out 2>&1
eval_tap $? 154 'DeleteStore' test.out

#- 155 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'tnibeRdm' \
    --action 'UPDATE' \
    --itemSku 'FBKz4OBp' \
    --itemType 'MEDIA' \
    --limit '88' \
    --offset '33' \
    --selected 'true' \
    --sortBy '["updatedAt", "createdAt", "createdAt:desc"]' \
    --status 'PUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'tOgU3gNg' \
    --updatedAtStart 'klJq0tiN' \
    > test.out 2>&1
eval_tap $? 155 'QueryChanges' test.out

#- 156 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'NeQyx0Fo' \
    > test.out 2>&1
eval_tap $? 156 'PublishAll' test.out

#- 157 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'Bf0GFSY1' \
    > test.out 2>&1
eval_tap $? 157 'PublishSelected' test.out

#- 158 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '7EpbB6g3' \
    > test.out 2>&1
eval_tap $? 158 'SelectAllRecords' test.out

#- 159 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId '0fmr8WCl' \
    --action 'UPDATE' \
    --itemSku 'seoLXmov' \
    --itemType 'CODE' \
    --type 'ITEM' \
    --updatedAtEnd 'kkqeGcDB' \
    --updatedAtStart 'ZRlFitOz' \
    > test.out 2>&1
eval_tap $? 159 'GetStatistic' test.out

#- 160 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'tFXsABce' \
    > test.out 2>&1
eval_tap $? 160 'UnselectAllRecords' test.out

#- 161 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'bpkgd49p' \
    --namespace $AB_NAMESPACE \
    --storeId 'q39QM1vI' \
    > test.out 2>&1
eval_tap $? 161 'SelectRecord' test.out

#- 162 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'NHrq4EJG' \
    --namespace $AB_NAMESPACE \
    --storeId 'Y7hEExD6' \
    > test.out 2>&1
eval_tap $? 162 'UnselectRecord' test.out

#- 163 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'MjbBJloB' \
    --targetStoreId 'FOgsT2Z2' \
    > test.out 2>&1
eval_tap $? 163 'CloneStore' test.out

#- 164 ExportStore
eval_tap 0 164 'ExportStore # SKIP deprecated' test.out

#- 165 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId '9GZppMC0' \
    --limit '70' \
    --offset '73' \
    --sku 'xBw6wVrF' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    --userId 'xanXs6tf' \
    > test.out 2>&1
eval_tap $? 165 'QuerySubscriptions' test.out

#- 166 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qMAoAR61' \
    > test.out 2>&1
eval_tap $? 166 'RecurringChargeSubscription' test.out

#- 167 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'HGunAoVs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetTicketDynamic' test.out

#- 168 DecreaseTicketSale
# body param: body
echo '{"orderNo": "0EzBazki"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName '13zFfe5T' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'DecreaseTicketSale' test.out

#- 169 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName '8B85OtEu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'GetTicketBoothID' test.out

#- 170 IncreaseTicketSale
# body param: body
echo '{"count": 94, "orderNo": "OvyN9AUr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '3XD98BjA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'IncreaseTicketSale' test.out

#- 171 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "pRx8u5Bw", "value": 95}, {"id": "4mmKyVnr", "value": 61}, {"id": "azpOJMZD", "value": 27}], "steamUserId": "mJyu8TDN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '5ODQZU0d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'UnlockSteamUserAchievement' test.out

#- 172 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'rsSctHtj' \
    --xboxUserId 'rTYwnogc' \
    > test.out 2>&1
eval_tap $? 172 'GetXblUserAchievements' test.out

#- 173 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "hn9gCaww", "percentComplete": 50}, {"id": "r319QOTK", "percentComplete": 19}, {"id": "TvDNyKKG", "percentComplete": 89}], "serviceConfigId": "60bvUIFs", "titleId": "TdjpwDQN", "xboxUserId": "h8zZaBTl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'RW1TS2UX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'UpdateXblUserAchievement' test.out

#- 174 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'g15Ck9iu' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeCampaign' test.out

#- 175 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '82l0wG27' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeEntitlement' test.out

#- 176 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'onbsM3UQ' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizeFulfillment' test.out

#- 177 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'iyA0fSYb' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeIntegration' test.out

#- 178 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'rmIlQrpx' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizeOrder' test.out

#- 179 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'goXZ4tYB' \
    > test.out 2>&1
eval_tap $? 179 'AnonymizePayment' test.out

#- 180 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'hQxNZR82' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeSubscription' test.out

#- 181 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'z0xIeuik' \
    > test.out 2>&1
eval_tap $? 181 'AnonymizeWallet' test.out

#- 182 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'BOzoGMt3' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 182 'GetUserDLC' test.out

#- 183 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'NCr0RDac' \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'CODE' \
    --entitlementName 'lM2WdBnb' \
    --features '["1L9XoblM", "HiINErmF", "r5lggMQW"]' \
    --itemId '["4RncHG9E", "PZmt8s5T", "rJKZF9Ar"]' \
    --limit '74' \
    --offset '40' \
    > test.out 2>&1
eval_tap $? 183 'QueryUserEntitlements' test.out

#- 184 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1992-03-31T00:00:00Z", "grantedCode": "DwRugXVu", "itemId": "ZsKZfMbJ", "itemNamespace": "yhkLzRb4", "language": "MfCm_629", "quantity": 55, "region": "Q0LoqrBC", "source": "REDEEM_CODE", "startDate": "1985-11-17T00:00:00Z", "storeId": "jWEoHHTt"}, {"endDate": "1975-09-04T00:00:00Z", "grantedCode": "NTg9juPj", "itemId": "4pH4EhQo", "itemNamespace": "sve5uKMM", "language": "JXRs_QINQ", "quantity": 71, "region": "F7jFoU7O", "source": "PROMOTION", "startDate": "1989-12-30T00:00:00Z", "storeId": "i7n3YDpf"}, {"endDate": "1999-09-01T00:00:00Z", "grantedCode": "n1ClESyF", "itemId": "HnAzBi34", "itemNamespace": "eKfA466y", "language": "BGBO-mkOI", "quantity": 12, "region": "HeGwpowh", "source": "ACHIEVEMENT", "startDate": "1979-02-14T00:00:00Z", "storeId": "1fyfa2Tv"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '8WCrQiO9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'GrantUserEntitlement' test.out

#- 185 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '7QT5CckL' \
    --activeOnly 'false' \
    --appId '9QcUGkfc' \
    > test.out 2>&1
eval_tap $? 185 'GetUserAppEntitlementByAppId' test.out

#- 186 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'wKVRu5ya' \
    --activeOnly 'true' \
    --limit '45' \
    --offset '15' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 186 'QueryUserEntitlementsByAppType' test.out

#- 187 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'kDm39XXs' \
    --activeOnly 'true' \
    --entitlementClazz 'MEDIA' \
    --itemId 'Rr6hsYDP' \
    > test.out 2>&1
eval_tap $? 187 'GetUserEntitlementByItemId' test.out

#- 188 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'aK6hS2wo' \
    --ids '["H1H0ZyVR", "VFNAnEVC", "7xoFzW34"]' \
    > test.out 2>&1
eval_tap $? 188 'GetUserActiveEntitlementsByItemIds' test.out

#- 189 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'pMaVj6qO' \
    --activeOnly 'false' \
    --entitlementClazz 'MEDIA' \
    --sku 'AgJ5uk0D' \
    > test.out 2>&1
eval_tap $? 189 'GetUserEntitlementBySku' test.out

#- 190 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Lel7I0XL' \
    --appIds '["3YHVyZPR", "vTlUukmA", "zmoUQnck"]' \
    --itemIds '["Gy6tL9Rz", "KrtZ3fPM", "vqPyMD3V"]' \
    --skus '["N5140D0B", "AJwrflCV", "Leu3Oxo0"]' \
    > test.out 2>&1
eval_tap $? 190 'ExistsAnyUserActiveEntitlement' test.out

#- 191 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'fFuwyKDN' \
    --itemIds '["nmpY8teW", "K288GiFw", "2CBCn9vZ"]' \
    > test.out 2>&1
eval_tap $? 191 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 192 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'O1nhcYss' \
    --appId 'eO7FJfhB' \
    > test.out 2>&1
eval_tap $? 192 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 193 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'DRunaWsF' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId '5Wd99LwX' \
    > test.out 2>&1
eval_tap $? 193 'GetUserEntitlementOwnershipByItemId' test.out

#- 194 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'nQvLr5vC' \
    --ids '["4XI66r7T", "9X71ZX5k", "CmmHbYMC"]' \
    > test.out 2>&1
eval_tap $? 194 'GetUserEntitlementOwnershipByItemIds' test.out

#- 195 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'PSX1YVyV' \
    --entitlementClazz 'APP' \
    --sku '5PwqnMQE' \
    > test.out 2>&1
eval_tap $? 195 'GetUserEntitlementOwnershipBySku' test.out

#- 196 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ar7g8zRw' \
    --entitlementIds 'CMoUxD8g' \
    > test.out 2>&1
eval_tap $? 196 'RevokeUserEntitlements' test.out

#- 197 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'mEWhznPJ' \
    --namespace $AB_NAMESPACE \
    --userId 'XW5qjIzS' \
    > test.out 2>&1
eval_tap $? 197 'GetUserEntitlement' test.out

#- 198 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1997-01-10T00:00:00Z", "nullFieldList": ["6JSsqWvY", "yjUsQUuq", "wy0y82ZR"], "startDate": "1989-11-23T00:00:00Z", "status": "CONSUMED", "useCount": 24}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'ibktw0S1' \
    --namespace $AB_NAMESPACE \
    --userId 'tTh418Eb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'UpdateUserEntitlement' test.out

#- 199 ConsumeUserEntitlement
# body param: body
echo '{"options": ["Ot3IEsFR", "nVBuw2al", "f0tprf65"], "requestId": "IuBjILiq", "useCount": 69}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'cevmrO5i' \
    --namespace $AB_NAMESPACE \
    --userId 'TN2HVlhp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'ConsumeUserEntitlement' test.out

#- 200 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId '1LFRXa8R' \
    --namespace $AB_NAMESPACE \
    --userId '7gRuQDPG' \
    > test.out 2>&1
eval_tap $? 200 'DisableUserEntitlement' test.out

#- 201 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'Ur2Xp7b5' \
    --namespace $AB_NAMESPACE \
    --userId 'xaYnTOZX' \
    > test.out 2>&1
eval_tap $? 201 'EnableUserEntitlement' test.out

#- 202 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'qvcVVW3H' \
    --namespace $AB_NAMESPACE \
    --userId '8r3WCZQH' \
    > test.out 2>&1
eval_tap $? 202 'GetUserEntitlementHistories' test.out

#- 203 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'Ro9z6jLK' \
    --namespace $AB_NAMESPACE \
    --userId 'niwzt2FQ' \
    > test.out 2>&1
eval_tap $? 203 'RevokeUserEntitlement' test.out

#- 204 FulfillItem
# body param: body
echo '{"duration": 42, "endDate": "1984-10-28T00:00:00Z", "itemId": "bL8Z73LC", "itemSku": "qNhHXFLy", "language": "bQbgYWg1", "order": {"currency": {"currencyCode": "KfjA0ghp", "currencySymbol": "i0xuCK9n", "currencyType": "REAL", "decimals": 53, "namespace": "3rIGKgkt"}, "ext": {"iWbC9lnJ": {}, "irO2uphM": {}, "oomFpssc": {}}, "free": false}, "orderNo": "jf9lAdpJ", "origin": "Playstation", "quantity": 59, "region": "DsuEeKkO", "source": "IAP", "startDate": "1989-09-16T00:00:00Z", "storeId": "bp8Zu4K4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'fYqSTrjG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'FulfillItem' test.out

#- 205 RedeemCode
# body param: body
echo '{"code": "me3Bca9W", "language": "jtV-Mzmg_713", "region": "8MeHVbNd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '9Rb5YY6y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 205 'RedeemCode' test.out

#- 206 FulfillRewards
# body param: body
echo '{"origin": "System", "rewards": [{"currency": {"currencyCode": "NR9x3K8t", "namespace": "DStZ5J8X"}, "item": {"itemId": "41AmL322", "itemSku": "fxC3Sy7f", "itemType": "hCYjlfJs"}, "quantity": 77, "type": "CURRENCY"}, {"currency": {"currencyCode": "pHrfVcQs", "namespace": "8WocdkuU"}, "item": {"itemId": "VziTN6z2", "itemSku": "1FFTb8Nh", "itemType": "XvFVEI5Z"}, "quantity": 0, "type": "ITEM"}, {"currency": {"currencyCode": "ktfjXifg", "namespace": "YlLE4Ai2"}, "item": {"itemId": "eQrTISOw", "itemSku": "sUfNEdWz", "itemType": "xMfgKDLU"}, "quantity": 55, "type": "ITEM"}], "source": "DLC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'ZS7HXffY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'FulfillRewards' test.out

#- 207 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'DxU6zwM9' \
    --endTime 'xxdwq8rp' \
    --limit '52' \
    --offset '85' \
    --productId '1pQ5DzJ5' \
    --startTime '2ivOcuDL' \
    --status 'FAILED' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 207 'QueryUserIAPOrders' test.out

#- 208 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '9N07qgv0' \
    > test.out 2>&1
eval_tap $? 208 'QueryAllUserIAPOrders' test.out

#- 209 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'VJtJqvbO' \
    --endTime 'jttNsTkj' \
    --limit '49' \
    --offset '91' \
    --startTime 'qWx5N3p8' \
    --status 'SUCCESS' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 209 'QueryUserIAPConsumeHistory' test.out

#- 210 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "dGcr-qc", "productId": "54TD2Z0T", "region": "M4O1bcm4", "type": "APPLE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'FFfBY8o3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'MockFulfillIAPItem' test.out

#- 211 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'uZr3ui1R' \
    --itemId 'CxLZCdLB' \
    --limit '27' \
    --offset '0' \
    --status 'FULFILLED' \
    > test.out 2>&1
eval_tap $? 211 'QueryUserOrders' test.out

#- 212 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "czwZYaRt", "currencyNamespace": "RBBvbLXg", "discountedPrice": 34, "ext": {"boiZLzaV": {}, "2yzOoI3G": {}, "hR0wSdMV": {}}, "itemId": "10c5pZTx", "language": "erz1PUom", "options": {"skipPriceValidation": false}, "platform": "Steam", "price": 13, "quantity": 23, "region": "svHd29RF", "returnUrl": "Q8aOW2fS", "sandbox": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '1bvIDZdg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminCreateUserOrder' test.out

#- 213 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId '1sbalkib' \
    --itemId 'GONC4exl' \
    > test.out 2>&1
eval_tap $? 213 'CountOfPurchasedItem' test.out

#- 214 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'RLp3eidP' \
    --userId 'E2sgodjC' \
    > test.out 2>&1
eval_tap $? 214 'GetUserOrder' test.out

#- 215 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGED", "statusReason": "CWqupcz9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'wPLsB8tg' \
    --userId 'SMGcHdrY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'UpdateUserOrderStatus' test.out

#- 216 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'qc3wSftN' \
    --userId 'EsNn2YeK' \
    > test.out 2>&1
eval_tap $? 216 'FulfillUserOrder' test.out

#- 217 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'CiFd7wXc' \
    --userId 'xmqgglX6' \
    > test.out 2>&1
eval_tap $? 217 'GetUserOrderGrant' test.out

#- 218 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'zSqI468y' \
    --userId 'Haghrc1W' \
    > test.out 2>&1
eval_tap $? 218 'GetUserOrderHistories' test.out

#- 219 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "yc8ZK1yM"}, "authorisedTime": "1980-09-16T00:00:00Z", "chargebackReversedTime": "1985-04-10T00:00:00Z", "chargebackTime": "1990-03-18T00:00:00Z", "chargedTime": "1985-07-31T00:00:00Z", "createdTime": "1994-09-08T00:00:00Z", "currency": {"currencyCode": "icgNSJut", "currencySymbol": "LmncsM94", "currencyType": "VIRTUAL", "decimals": 60, "namespace": "67piLx36"}, "customParameters": {"Qf3atwWW": {}, "lYh2Hu7C": {}, "CI8u6nY9": {}}, "extOrderNo": "lonoUlDA", "extTxId": "kxFQoL4t", "extUserId": "mQ9cCeJI", "issuedAt": "1987-07-16T00:00:00Z", "metadata": {"51034FI1": "GgSuaePu", "tQg0hNaQ": "jQ519t3S", "deEBrfOK": "dAzxIkDY"}, "namespace": "BvamyIdc", "nonceStr": "UJZssdTS", "paymentMethod": "H29DXkwf", "paymentMethodFee": 84, "paymentOrderNo": "LGsMmydO", "paymentProvider": "XSOLLA", "paymentProviderFee": 59, "paymentStationUrl": "1viZWPyc", "price": 30, "refundedTime": "1999-07-12T00:00:00Z", "salesTax": 10, "sandbox": true, "sku": "rCnmK9Q7", "status": "REFUNDING", "statusReason": "C75xIod4", "subscriptionId": "sM86MiX4", "subtotalPrice": 1, "targetNamespace": "qWiVsUM7", "targetUserId": "p4IJuIl6", "tax": 100, "totalPrice": 37, "totalTax": 26, "txEndTime": "1975-12-06T00:00:00Z", "type": "HfVfTjoj", "userId": "3uHbvVRZ", "vat": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'wCnCHaFa' \
    --userId 'HHkQb9Cq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'ProcessUserOrderNotification' test.out

#- 220 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '72UnVUjh' \
    --userId 'YsqIyuMB' \
    > test.out 2>&1
eval_tap $? 220 'DownloadUserOrderReceipt' test.out

#- 221 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "PvYL93gm", "currencyNamespace": "RudeKq3M", "customParameters": {"FJ7SFP5a": {}, "bwuLoqKT": {}, "TgwZLtKu": {}}, "description": "Ovg9MSmK", "extOrderNo": "5Pxy6qfx", "extUserId": "ePaRFtDf", "itemType": "APP", "language": "cXq", "metadata": {"NMXxrFsX": "jcXcdNLV", "cSYaAlaz": "2y0vjPyj", "FcgabskU": "rZ00keVO"}, "notifyUrl": "uP6S4it5", "omitNotification": true, "platform": "fKJMUJQP", "price": 55, "recurringPaymentOrderNo": "ZllBEZKX", "region": "rhb1dfau", "returnUrl": "pSRJh6Lt", "sandbox": true, "sku": "ECloeiaT", "subscriptionId": "olp0kkNO", "title": "CkkJS8FB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'CR243JQK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'CreateUserPaymentOrder' test.out

#- 222 RefundUserPaymentOrder
# body param: body
echo '{"description": "aRaDPcaT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'UOQVMQwb' \
    --userId 'WQHwJ4bN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'RefundUserPaymentOrder' test.out

#- 223 ApplyUserRedemption
# body param: body
echo '{"code": "a1MFmqjL", "orderNo": "Vih45xgr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId '7hh6ApZU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'ApplyUserRedemption' test.out

#- 224 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'Mcm0PxGT' \
    --chargeStatus 'CHARGED' \
    --itemId '7bB4DtAd' \
    --limit '25' \
    --offset '96' \
    --sku '4Xmhl1RD' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 224 'QueryUserSubscriptions' test.out

#- 225 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'y5sj4BFI' \
    --excludeSystem 'false' \
    --limit '56' \
    --offset '57' \
    --subscriptionId '9AgDyjlM' \
    > test.out 2>&1
eval_tap $? 225 'GetUserSubscriptionActivities' test.out

#- 226 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 34, "itemId": "3cXAyyDx", "language": "oxPiexwW", "reason": "ATCkd9G7", "region": "LFi9MkQd", "source": "z4BvcnpN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 't4NaiRaV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'PlatformSubscribeSubscription' test.out

#- 227 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'UQRJAwCl' \
    --itemId 'Omixj8EK' \
    > test.out 2>&1
eval_tap $? 227 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 228 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'mrt6VJbJ' \
    --userId 'DmwCZOKG' \
    > test.out 2>&1
eval_tap $? 228 'GetUserSubscription' test.out

#- 229 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'wwX82h7T' \
    --userId 'X1nRVj15' \
    > test.out 2>&1
eval_tap $? 229 'DeleteUserSubscription' test.out

#- 230 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "RKIvXrYd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'mJF3gDKG' \
    --userId 'AboWz20D' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'CancelSubscription' test.out

#- 231 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 42, "reason": "KMQxgfdm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'q1FAci7T' \
    --userId 'chZFjzOa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'GrantDaysToSubscription' test.out

#- 232 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BlnETxVr' \
    --userId '123BfnvE' \
    --excludeFree 'false' \
    --limit '16' \
    --offset '5' \
    > test.out 2>&1
eval_tap $? 232 'GetUserSubscriptionBillingHistories' test.out

#- 233 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "toH3Yb1t"}, "authorisedTime": "1975-08-23T00:00:00Z", "chargebackReversedTime": "1994-11-11T00:00:00Z", "chargebackTime": "1989-07-18T00:00:00Z", "chargedTime": "1978-12-16T00:00:00Z", "createdTime": "1992-01-27T00:00:00Z", "currency": {"currencyCode": "rbkWQfxZ", "currencySymbol": "ah9PN1qM", "currencyType": "REAL", "decimals": 20, "namespace": "PcTJOaT2"}, "customParameters": {"kdXpayMe": {}, "RGPNYTON": {}, "U3w0Ls2x": {}}, "extOrderNo": "MLhGFN2U", "extTxId": "qDqI6cwp", "extUserId": "phUPjSce", "issuedAt": "1986-11-06T00:00:00Z", "metadata": {"5NxFSjWK": "dtboxBqq", "6cZoFXKb": "yh5iLb1W", "wUKJZWt8": "OyFnwG2P"}, "namespace": "UPZvr56s", "nonceStr": "tmcxSRpk", "paymentMethod": "OadRRgMD", "paymentMethodFee": 78, "paymentOrderNo": "hC25m7ii", "paymentProvider": "ADYEN", "paymentProviderFee": 26, "paymentStationUrl": "6cMioSqv", "price": 16, "refundedTime": "1981-01-25T00:00:00Z", "salesTax": 11, "sandbox": true, "sku": "3IbNwlex", "status": "REFUNDING", "statusReason": "9j3Iy4Zd", "subscriptionId": "FRDzv3QB", "subtotalPrice": 60, "targetNamespace": "WMu6uUj8", "targetUserId": "YEmePbos", "tax": 75, "totalPrice": 58, "totalTax": 91, "txEndTime": "1980-09-25T00:00:00Z", "type": "YVYDTwUU", "userId": "Yx0yfknE", "vat": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ZN6PNSff' \
    --userId 'sK4LnQoK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'ProcessUserSubscriptionNotification' test.out

#- 234 AcquireUserTicket
# body param: body
echo '{"count": 84, "orderNo": "3786VKeu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'O4I7jCOY' \
    --namespace $AB_NAMESPACE \
    --userId 'Ij1xdFnt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'AcquireUserTicket' test.out

#- 235 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'KSJGVAY5' \
    > test.out 2>&1
eval_tap $? 235 'QueryUserCurrencyWallets' test.out

#- 236 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'DZ0B0oa2' \
    --namespace $AB_NAMESPACE \
    --userId 'KstLSb0K' \
    --limit '38' \
    --offset '60' \
    > test.out 2>&1
eval_tap $? 236 'ListUserCurrencyTransactions' test.out

#- 237 CheckWallet
eval_tap 0 237 'CheckWallet # SKIP deprecated' test.out

#- 238 CreditUserWallet
# body param: body
echo '{"amount": 73, "expireAt": "1983-10-30T00:00:00Z", "origin": "Playstation", "reason": "CviW05Ji", "source": "DLC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'xoo1EtKd' \
    --namespace $AB_NAMESPACE \
    --userId '2c1swq3U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'CreditUserWallet' test.out

#- 239 PayWithUserWallet
# body param: body
echo '{"amount": 23, "walletPlatform": "Nintendo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'X5UAP4EA' \
    --namespace $AB_NAMESPACE \
    --userId 'VCBFrq0w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'PayWithUserWallet' test.out

#- 240 GetUserWallet
eval_tap 0 240 'GetUserWallet # SKIP deprecated' test.out

#- 241 DebitUserWallet
eval_tap 0 241 'DebitUserWallet # SKIP deprecated' test.out

#- 242 DisableUserWallet
eval_tap 0 242 'DisableUserWallet # SKIP deprecated' test.out

#- 243 EnableUserWallet
eval_tap 0 243 'EnableUserWallet # SKIP deprecated' test.out

#- 244 ListUserWalletTransactions
eval_tap 0 244 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 245 QueryWallets
eval_tap 0 245 'QueryWallets # SKIP deprecated' test.out

#- 246 GetWallet
eval_tap 0 246 'GetWallet # SKIP deprecated' test.out

#- 247 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey '6vd1MYJr' \
    --end 'VOfgPbXZ' \
    --start 'lFeFAcmM' \
    > test.out 2>&1
eval_tap $? 247 'SyncOrders' test.out

#- 248 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["NdnWgIWz", "y0nviINy", "kovmYZOd"], "apiKey": "HXFkZwii", "authoriseAsCapture": true, "blockedPaymentMethods": ["dkxVK7TU", "fZWhOtqe", "dnprvF12"], "clientKey": "13pS0NLp", "dropInSettings": "XNZHxm2Y", "liveEndpointUrlPrefix": "d3WS3t6p", "merchantAccount": "aU3aBG8V", "notificationHmacKey": "TDquj3Ac", "notificationPassword": "2tiK2xbS", "notificationUsername": "DNhR9kG7", "returnUrl": "z9zEuhmZ", "settings": "jLr0MCxu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'TestAdyenConfig' test.out

#- 249 TestAliPayConfig
# body param: body
echo '{"appId": "cczo5yf0", "privateKey": "x2AVWYGa", "publicKey": "xwDm6kz9", "returnUrl": "jvBbGnYb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'TestAliPayConfig' test.out

#- 250 TestCheckoutConfig
# body param: body
echo '{"publicKey": "ukn4lOzN", "secretKey": "5h9knbXb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'TestCheckoutConfig' test.out

#- 251 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'qsuBCF2K' \
    --region 'LqeDWOB0' \
    > test.out 2>&1
eval_tap $? 251 'DebugMatchedPaymentMerchantConfig' test.out

#- 252 TestPayPalConfig
# body param: body
echo '{"clientID": "T0VZ3USH", "clientSecret": "VPHFVMX0", "returnUrl": "sTdka0ok", "webHookId": "IooXvvkX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'TestPayPalConfig' test.out

#- 253 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["CNuoD9lh", "nBaeyRw9", "BBlTzOdK"], "publishableKey": "R8EUYyal", "secretKey": "zz62Rm5z", "webhookSecret": "P5IPCWoK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'TestStripeConfig' test.out

#- 254 TestWxPayConfig
# body param: body
echo '{"appId": "wpiPCN3A", "key": "0WQfhyXn", "mchid": "7lXp65qx", "returnUrl": "yzHyKkk5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'TestWxPayConfig' test.out

#- 255 TestXsollaConfig
# body param: body
echo '{"apiKey": "i3PSSOFA", "flowCompletionUrl": "WkKpsjXB", "merchantId": 0, "projectId": 32, "projectSecretKey": "RiaJFi5I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'TestXsollaConfig' test.out

#- 256 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'oclAQfdL' \
    > test.out 2>&1
eval_tap $? 256 'GetPaymentMerchantConfig' test.out

#- 257 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["qb1pVLWF", "4om6oUuD", "QjMk5laA"], "apiKey": "8wO2w9Me", "authoriseAsCapture": false, "blockedPaymentMethods": ["rSs7Dno4", "6sgQdbpw", "RrfasMYb"], "clientKey": "jkFKlgEd", "dropInSettings": "mu5f7NmN", "liveEndpointUrlPrefix": "Uay4acmC", "merchantAccount": "T1ZCfBZg", "notificationHmacKey": "CALZmmvk", "notificationPassword": "7ok0YKkC", "notificationUsername": "vggeY2Nm", "returnUrl": "J9Skcmd1", "settings": "yWsfpMQc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'veJQM1rG' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateAdyenConfig' test.out

#- 258 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'XoXViCFv' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 258 'TestAdyenConfigById' test.out

#- 259 UpdateAliPayConfig
# body param: body
echo '{"appId": "KXGpyYin", "privateKey": "xbofxaMa", "publicKey": "JonRqYR2", "returnUrl": "WOtfWzpP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'tAVBUvv1' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateAliPayConfig' test.out

#- 260 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'avr3hL5J' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 260 'TestAliPayConfigById' test.out

#- 261 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "IcpWKBJK", "secretKey": "PrFQ6YY1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'VlCQwOW4' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdateCheckoutConfig' test.out

#- 262 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'eyui0srz' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 262 'TestCheckoutConfigById' test.out

#- 263 UpdatePayPalConfig
# body param: body
echo '{"clientID": "K3d3d5Mz", "clientSecret": "9CQhcS54", "returnUrl": "9a1uX06t", "webHookId": "x43etZy7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'vkaCEvLI' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdatePayPalConfig' test.out

#- 264 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'RIhPnbKa' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 264 'TestPayPalConfigById' test.out

#- 265 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["qAzsK3z8", "uSjdk7rl", "asH9tJ0S"], "publishableKey": "wDXz91Xu", "secretKey": "FWgcFbfs", "webhookSecret": "DFArCH2M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id '9QpMjDmk' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'UpdateStripeConfig' test.out

#- 266 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'srtdkB8h' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 266 'TestStripeConfigById' test.out

#- 267 UpdateWxPayConfig
# body param: body
echo '{"appId": "khIhLMbZ", "key": "VOjMWhOT", "mchid": "t6bnhICh", "returnUrl": "X9vZPzuH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id '6xu82ezn' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'UpdateWxPayConfig' test.out

#- 268 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'F45tv5Uv' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 268 'UpdateWxPayConfigCert' test.out

#- 269 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'm3eIE1lW' \
    > test.out 2>&1
eval_tap $? 269 'TestWxPayConfigById' test.out

#- 270 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "2pGYMWsD", "flowCompletionUrl": "1wOkoSma", "merchantId": 5, "projectId": 56, "projectSecretKey": "m8Kn4YVA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'iglHkD7O' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'UpdateXsollaConfig' test.out

#- 271 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'hxRfJR3R' \
    > test.out 2>&1
eval_tap $? 271 'TestXsollaConfigById' test.out

#- 272 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": false, "size": "LARGE", "theme": "DEFAULT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'YXWjDQfB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'UpdateXsollaUIConfig' test.out

#- 273 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '52' \
    --namespace_ 'kYUPtNHU' \
    --offset '62' \
    --region 'j0rdaZIX' \
    > test.out 2>&1
eval_tap $? 273 'QueryPaymentProviderConfig' test.out

#- 274 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "27avBmC8", "region": "Su10YCB6", "sandboxTaxJarApiToken": "rVoch57R", "specials": ["WALLET", "XSOLLA", "CHECKOUT"], "taxJarApiToken": "IKlA0AYB", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'CreatePaymentProviderConfig' test.out

#- 275 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 275 'GetAggregatePaymentProviders' test.out

#- 276 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '6TDVN3is' \
    --region 'o5zKuQ9A' \
    > test.out 2>&1
eval_tap $? 276 'DebugMatchedPaymentProviderConfig' test.out

#- 277 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 277 'GetSpecialPaymentProviders' test.out

#- 278 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "dbOnRxvn", "region": "ybG6D2Yz", "sandboxTaxJarApiToken": "MHNW2K4Q", "specials": ["ADYEN", "STRIPE", "STRIPE"], "taxJarApiToken": "Ni6JONPl", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'z0RoJT90' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'UpdatePaymentProviderConfig' test.out

#- 279 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'rs7a43Zp' \
    > test.out 2>&1
eval_tap $? 279 'DeletePaymentProviderConfig' test.out

#- 280 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 280 'GetPaymentTaxConfig' test.out

#- 281 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "xHoR5ENu", "taxJarApiToken": "PwCldtLi", "taxJarEnabled": false, "taxJarProductCodesMapping": {"870ARBy2": "Pnqx64Ks", "86fiqHwX": "JdqvtIor", "5zswaoIm": "NDl31AKO"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'UpdatePaymentTaxConfig' test.out

#- 282 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'lAdZPndo' \
    --end 'a79DCtx2' \
    --start 'aJk9K6jZ' \
    > test.out 2>&1
eval_tap $? 282 'SyncPaymentOrders' test.out

#- 283 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'p2BgAZmI' \
    --storeId 'db8IunwP' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetRootCategories' test.out

#- 284 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'xeyFsi2J' \
    --storeId '1D7ihIM4' \
    > test.out 2>&1
eval_tap $? 284 'DownloadCategories' test.out

#- 285 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '23u36xm9' \
    --namespace $AB_NAMESPACE \
    --language 'UmVZ0B4P' \
    --storeId 'vqCLuCFJ' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetCategory' test.out

#- 286 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'cGRXarOB' \
    --namespace $AB_NAMESPACE \
    --language 'uEkSYvmB' \
    --storeId 'NYgIwEzz' \
    > test.out 2>&1
eval_tap $? 286 'PublicGetChildCategories' test.out

#- 287 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'TAQFtGuY' \
    --namespace $AB_NAMESPACE \
    --language 'Amhif0Aj' \
    --storeId 'UyNAqAsJ' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetDescendantCategories' test.out

#- 288 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 288 'PublicListCurrencies' test.out

#- 289 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'xS9bbXe3' \
    --region 'sSVie34I' \
    --storeId 'LaObAuYc' \
    --appId 'HwHW9oQR' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetItemByAppId' test.out

#- 290 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --baseAppId 'ouB5vrwF' \
    --categoryPath 'CFBn1BSy' \
    --features '2fYVDQYp' \
    --includeSubCategoryItem 'false' \
    --itemType 'COINS' \
    --language 'dmS5zcwr' \
    --limit '56' \
    --offset '41' \
    --region '5JeTWwFB' \
    --sortBy '["name:asc", "createdAt", "displayOrder:asc"]' \
    --storeId 'DWFhd0rC' \
    --tags 'DtUnwaUJ' \
    > test.out 2>&1
eval_tap $? 290 'PublicQueryItems' test.out

#- 291 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'hxBMO2Q8' \
    --region 'yHNMwSr1' \
    --storeId 'C0lXpkVC' \
    --sku 'MNGM05Qn' \
    > test.out 2>&1
eval_tap $? 291 'PublicGetItemBySku' test.out

#- 292 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language '4RER97lj' \
    --region 'p5VVl8AP' \
    --storeId 'kdXyW2xt' \
    --itemIds 'uLmVFxvk' \
    > test.out 2>&1
eval_tap $? 292 'PublicBulkGetItems' test.out

#- 293 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["B7ndIUOH", "2S2suEno", "hY1UeXjj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicValidateItemPurchaseCondition' test.out

#- 294 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'OPTIONBOX' \
    --limit '33' \
    --offset '11' \
    --region 'VynRmA9N' \
    --storeId 'lYwJ3G23' \
    --keyword '9aUAGVxb' \
    --language 'FCJB3bqY' \
    > test.out 2>&1
eval_tap $? 294 'PublicSearchItems' test.out

#- 295 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'OxcKLee7' \
    --namespace $AB_NAMESPACE \
    --language 'NRgRLDYQ' \
    --region 'kBJABIQN' \
    --storeId 'z1zdMq24' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetApp' test.out

#- 296 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'J7LsZz3B' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 296 'PublicGetItemDynamicData' test.out

#- 297 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'gBlCUI7G' \
    --namespace $AB_NAMESPACE \
    --language 'fLjnkZTC' \
    --populateBundle 'false' \
    --region 'frQjty8V' \
    --storeId '04U4BE9E' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetItem' test.out

#- 298 GetPaymentCustomization
eval_tap 0 298 'GetPaymentCustomization # SKIP deprecated' test.out

#- 299 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "XCXaj2CG", "paymentProvider": "ADYEN", "returnUrl": "eilz4v7k", "ui": "N3nkCnoF", "zipCode": "sVtrLTLO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'PublicGetPaymentUrl' test.out

#- 300 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '8q9Nnh5F' \
    > test.out 2>&1
eval_tap $? 300 'PublicGetPaymentMethods' test.out

#- 301 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'JLeDbj1J' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetUnpaidPaymentOrder' test.out

#- 302 Pay
# body param: body
echo '{"token": "IHs7FLpE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Dk40FU11' \
    --paymentProvider 'WXPAY' \
    --zipCode '8kgiSd4h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'Pay' test.out

#- 303 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'wCGVR1Hz' \
    > test.out 2>&1
eval_tap $? 303 'PublicCheckPaymentOrderPaidStatus' test.out

#- 304 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'WXPAY' \
    --region 'g3NE4Uff' \
    > test.out 2>&1
eval_tap $? 304 'GetPaymentPublicConfig' test.out

#- 305 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'CwRGWUoe' \
    > test.out 2>&1
eval_tap $? 305 'PublicGetQRCode' test.out

#- 306 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'jugWnyGe' \
    --foreinginvoice 'dTTID2wM' \
    --invoiceId 'oHBwgEqc' \
    --payload 'fADWJUYX' \
    --redirectResult 'B32Jlicf' \
    --resultCode 'RgWY340h' \
    --sessionId 'JHSeLCl2' \
    --status 'W5wBwzDI' \
    --token 'f4xOOPga' \
    --type 'AKWPJv3C' \
    --userId 'L4BfRwff' \
    --orderNo 'uQIfK22w' \
    --paymentOrderNo 'w6ttJ2eh' \
    --paymentProvider 'XSOLLA' \
    --returnUrl 'gVUPJHUw' \
    > test.out 2>&1
eval_tap $? 306 'PublicNormalizePaymentReturnUrl' test.out

#- 307 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'CYsiLKZV' \
    --paymentOrderNo 'UpD55nGP' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 307 'GetPaymentTaxValue' test.out

#- 308 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'bp2NiZfy' \
    > test.out 2>&1
eval_tap $? 308 'GetRewardByCode' test.out

#- 309 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic '7FNzYcQk' \
    --limit '75' \
    --offset '26' \
    --sortBy '["rewardCode", "namespace:desc", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 309 'QueryRewards1' test.out

#- 310 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'QMzGnQdI' \
    > test.out 2>&1
eval_tap $? 310 'GetReward1' test.out

#- 311 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 311 'PublicListStores' test.out

#- 312 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["PHX1Om9R", "Pw7gdTeF", "8gigEuHh"]' \
    --itemIds '["PZUHAkyR", "yzpqjiob", "HkQPDx7P"]' \
    --skus '["eLhWIG2y", "LyCMzB7f", "ApCY6EoR"]' \
    > test.out 2>&1
eval_tap $? 312 'PublicExistsAnyMyActiveEntitlement' test.out

#- 313 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'MxbveTeS' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 314 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --itemId 'CfAvCYX3' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 315 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --sku 'UzV3bMWO' \
    > test.out 2>&1
eval_tap $? 315 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 316 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["jn26R1wM", "plruhXJW", "eQlC68Zx"]' \
    --itemIds '["xGAVKgtb", "94sEugRz", "DaziuvTT"]' \
    --skus '["lzAo8wVY", "2NvyEies", "JLURTbN8"]' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetEntitlementOwnershipToken' test.out

#- 317 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'H42ml9en' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 317 'PublicGetMyWallet' test.out

#- 318 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "y8eMJ5DZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId '6KnuCF7u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'SyncEpicGameDLC' test.out

#- 319 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 91}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'xPTYA8xd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'PublicSyncPsnDlcInventory' test.out

#- 320 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [65, 17, 43]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '57fv5iOU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 321 SyncSteamDLC
# body param: body
echo '{"appId": "pK4NnzVJ", "steamId": "8r6GQzbi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'XpZRio0q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'SyncSteamDLC' test.out

#- 322 SyncXboxDLC
# body param: body
echo '{"xstsToken": "i8lWzhcC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'ty7kYaQE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'SyncXboxDLC' test.out

#- 323 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'S3ymO2Jl' \
    --appType 'DLC' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'WbNl1qvJ' \
    --features '["PVHus8zC", "hbaqjJ6w", "YnFjLE4y"]' \
    --itemId '["oudICQFy", "s4bJRnuY", "IivPbYvn"]' \
    --limit '8' \
    --offset '28' \
    > test.out 2>&1
eval_tap $? 323 'PublicQueryUserEntitlements' test.out

#- 324 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'eQ0bwejA' \
    --appId '3MllGmDv' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserAppEntitlementByAppId' test.out

#- 325 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '2jKP4zKR' \
    --limit '2' \
    --offset '91' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 325 'PublicQueryUserEntitlementsByAppType' test.out

#- 326 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'NcYs6Xnj' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'HBJKDIWB' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserEntitlementByItemId' test.out

#- 327 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'lTvE3DBM' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'qQrs3tFZ' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetUserEntitlementBySku' test.out

#- 328 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '6iwdhCPf' \
    --appIds '["oEbn64GF", "DtEeRz30", "a9lk7tHG"]' \
    --itemIds '["rjmt2SDu", "6pot02yK", "7dK4mdO0"]' \
    --skus '["rdrkScta", "xrwDoZrU", "7bAXHeC9"]' \
    > test.out 2>&1
eval_tap $? 328 'PublicExistsAnyUserActiveEntitlement' test.out

#- 329 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'uNfcLgpH' \
    --appId 'jnxCxSel' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 330 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'OItFJ3Fw' \
    --entitlementClazz 'CODE' \
    --itemId '426rWqB5' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 331 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'YrqDtJrQ' \
    --ids '["S99LsRwE", "5CQknMaN", "6kQzsqxV"]' \
    > test.out 2>&1
eval_tap $? 331 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 332 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'TTzf6Uig' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'NWEx2ZdL' \
    > test.out 2>&1
eval_tap $? 332 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 333 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'iGq4q6Ca' \
    --namespace $AB_NAMESPACE \
    --userId '6Fz6WOeS' \
    > test.out 2>&1
eval_tap $? 333 'PublicGetUserEntitlement' test.out

#- 334 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["60YI9SJ1", "AheLu8qc", "jdG8jUOI"], "requestId": "zBWNWf6u", "useCount": 46}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'Z0jdkIGP' \
    --namespace $AB_NAMESPACE \
    --userId '1C56mGqi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'PublicConsumeUserEntitlement' test.out

#- 335 PublicRedeemCode
# body param: body
echo '{"code": "4c8PzEk4", "language": "GPiF", "region": "VCnOJYZq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'cqYqfPWN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PublicRedeemCode' test.out

#- 336 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "oSlp-jlHQ", "productId": "yQkoXmKC", "receiptData": "ArRYHqBN", "region": "cATLa8Qn", "transactionId": "S2YVoyr6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'bM5u55TK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'PublicFulfillAppleIAPItem' test.out

#- 337 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "StNU6Yvr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'dpmXaWzg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'SyncEpicGamesInventory' test.out

#- 338 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "UU_YtjH", "orderId": "jjjJGyMD", "packageName": "VhcYTdUT", "productId": "AM2dtwL2", "purchaseTime": 81, "purchaseToken": "OvG1YGWD", "region": "6UxoxgIj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'WnpeJFHk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'PublicFulfillGoogleIAPItem' test.out

#- 339 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "bAUQypSY", "price": 0.8886695344087112, "productId": "ADm3pSRO", "serviceLabel": 65}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'T39GFgGu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'PublicReconcilePlayStationStore' test.out

#- 340 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "iEyhODrc", "price": 0.8514420496080483, "productId": "ODywhbzX", "serviceLabels": [8, 62, 55]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'zFUDLArz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 341 SyncStadiaEntitlement
# body param: body
echo '{"appId": "MPBfKMtw", "language": "IM-Gi", "region": "gAx1bmaS", "stadiaPlayerId": "RbseTNTU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '0WJWhrB5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'SyncStadiaEntitlement' test.out

#- 342 SyncSteamInventory
# body param: body
echo '{"appId": "IEqOUylH", "currencyCode": "13SKaUFP", "language": "fS-RiTN_565", "price": 0.9999195502941001, "productId": "Hvn5VZGL", "region": "LLLZGizp", "steamId": "qevGS9QN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'RsCsWfKT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'SyncSteamInventory' test.out

#- 343 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "vc6NrYtG", "language": "SZZ_tIlG", "region": "VdkibLng"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'iUAlMJsi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'SyncTwitchDropsEntitlement' test.out

#- 344 SyncXboxInventory
# body param: body
echo '{"currencyCode": "KAXS3GF5", "price": 0.002830427171287786, "productId": "vPUwtVlp", "xstsToken": "n33XeiNP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'GPrM6jaI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'SyncXboxInventory' test.out

#- 345 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'QqYr1sJb' \
    --itemId 'Fax4aikU' \
    --limit '66' \
    --offset '78' \
    --status 'CLOSED' \
    > test.out 2>&1
eval_tap $? 345 'PublicQueryUserOrders' test.out

#- 346 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "4zQDsVMb", "discountedPrice": 57, "ext": {"0H3feD0C": {}, "dfWRyhWC": {}, "lvN7PXtK": {}}, "itemId": "xpo1qVqQ", "language": "ty-rF", "price": 26, "quantity": 50, "region": "NnqiyqcW", "returnUrl": "O8I6klxc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'YRAUtoW1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'PublicCreateUserOrder' test.out

#- 347 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'cTLR1qLi' \
    --userId 'OKo6wW4R' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetUserOrder' test.out

#- 348 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'oWk3EYXz' \
    --userId '8eux7QRN' \
    > test.out 2>&1
eval_tap $? 348 'PublicCancelUserOrder' test.out

#- 349 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'HvB2pJ1c' \
    --userId '9eFgu3vQ' \
    > test.out 2>&1
eval_tap $? 349 'PublicGetUserOrderHistories' test.out

#- 350 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'mNLas5hZ' \
    --userId 'gBQpaJ0s' \
    > test.out 2>&1
eval_tap $? 350 'PublicDownloadUserOrderReceipt' test.out

#- 351 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 's5x4qfuj' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetPaymentAccounts' test.out

#- 352 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'B2X8rYv6' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'amrA93wg' \
    > test.out 2>&1
eval_tap $? 352 'PublicDeletePaymentAccount' test.out

#- 353 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'j9qKuy5w' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId '2LGJx1Cw' \
    --limit '28' \
    --offset '8' \
    --sku 'jnNlMWLh' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 353 'PublicQueryUserSubscriptions' test.out

#- 354 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "d2Ukh0ec", "itemId": "JWc8mqd3", "language": "fGju", "region": "hHVoJ11d", "returnUrl": "eScYHPNQ", "source": "ng1oXdJn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'y6FKZovt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicSubscribeSubscription' test.out

#- 355 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '9Pz142iK' \
    --itemId 'JeXau0tE' \
    > test.out 2>&1
eval_tap $? 355 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 356 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '1scRWjSh' \
    --userId 'UThX2hEo' \
    > test.out 2>&1
eval_tap $? 356 'PublicGetUserSubscription' test.out

#- 357 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'u8XKZTRs' \
    --userId 'jSmM7tGK' \
    > test.out 2>&1
eval_tap $? 357 'PublicChangeSubscriptionBillingAccount' test.out

#- 358 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "JGyLqv7M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '1GEbdcD3' \
    --userId 'BjpMGqH1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'PublicCancelSubscription' test.out

#- 359 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'CGLlL6Fs' \
    --userId 'B9RqTl5r' \
    --excludeFree 'false' \
    --limit '11' \
    --offset '48' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetUserSubscriptionBillingHistories' test.out

#- 360 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'ibUajRBS' \
    --namespace $AB_NAMESPACE \
    --userId 'ZNEWGDNf' \
    > test.out 2>&1
eval_tap $? 360 'PublicGetWallet' test.out

#- 361 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'fxWAmkTB' \
    --namespace $AB_NAMESPACE \
    --userId 'cASFAVyi' \
    --limit '20' \
    --offset '34' \
    > test.out 2>&1
eval_tap $? 361 'PublicListUserWalletTransactions' test.out

#- 362 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --availableDate 'O6yZBpm2' \
    --baseAppId 'UMrwYTkH' \
    --categoryPath 'AC4xjB1R' \
    --features '9XGWVy8e' \
    --includeSubCategoryItem 'true' \
    --itemName '3bVBT9JI' \
    --itemStatus 'INACTIVE' \
    --itemType 'SUBSCRIPTION' \
    --limit '30' \
    --offset '38' \
    --region 'TV8Nf4g1' \
    --sortBy '["createdAt:desc", "updatedAt:asc", "displayOrder:desc"]' \
    --storeId 'OISAHdXE' \
    --tags 'aWwy2YLc' \
    --targetNamespace 'GcsnkGlz' \
    > test.out 2>&1
eval_tap $? 362 'QueryItems1' test.out

#- 363 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'eA2eIpdq' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 363 'ImportStore1' test.out

#- 364 ExportStore1
# body param: body
echo '{"itemIds": ["FgN4AuBk", "9FTTMY0p", "S5zBhFVY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'ux0LzEEZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE