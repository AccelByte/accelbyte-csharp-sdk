#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..347"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "9FPt8rD6", "appType": "DEMO", "baseAppId": "qBF1WA31", "boothName": "DJp46MLf", "boundItemIds": ["4YRH4mIq", "6fn7oLWl", "VQId0UQK"], "categoryPath": "zq6rkJWO", "clazz": "KLwTTxKW", "createdAt": "1998-09-09T00:00:00Z", "description": "t4NU7ndm", "displayOrder": 95, "entitlementType": "CONSUMABLE", "ext": {"SWMvalFU": {}, "iKudfyNV": {}, "vzCP2R3M": {}}, "features": ["vAlEDQmn", "UqimvZAG", "pXWDTcJ5"], "fresh": true, "images": [{"as": "qTkhtJae", "caption": "8Cof1zwQ", "height": 6, "imageUrl": "4J4fKdHO", "smallImageUrl": "2WSEqG5n", "width": 41}, {"as": "FzpDK7jZ", "caption": "VBWFtuxa", "height": 4, "imageUrl": "CpAZLZos", "smallImageUrl": "ZI2kmKzA", "width": 83}, {"as": "vYNbPQEr", "caption": "zfdSMo0z", "height": 5, "imageUrl": "y5cdsJCA", "smallImageUrl": "MJj5oAQ3", "width": 92}], "itemId": "ugz0Vk0B", "itemIds": ["cQ7xEtqb", "irMbrgZv", "jtA5qsXl"], "itemQty": {"hf086wQo": 46, "6KUQf2L6": 15, "40e33ycW": 78}, "itemType": "INGAMEITEM", "language": "rnuYFAE6", "listable": true, "localExt": {"UAGRCVyK": {}, "KRIi7Og4": {}, "MGqd9Zsp": {}}, "longDescription": "uVl4IUkT", "maxCount": 46, "maxCountPerUser": 88, "name": "ysUrrBtF", "namespace": "XVfzvN93", "optionBoxConfig": {"boxItems": [{"count": 93, "itemId": "xBTI0ff1", "itemSku": "MXZIltyl"}, {"count": 38, "itemId": "lYf43UXg", "itemSku": "rSsZlsW1"}, {"count": 97, "itemId": "xywVXFYT", "itemSku": "olu7HmBL"}]}, "purchasable": false, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 25, "comparison": "includes", "name": "rAvtCl2p", "predicateType": "SeasonPassPredicate", "value": "kOOc4Fje", "values": ["KLQVtXOs", "sxRyKSsL", "qKukRlG6"]}, {"anyOf": 26, "comparison": "is", "name": "ELCrTtpb", "predicateType": "SeasonTierPredicate", "value": "EiioaB5b", "values": ["BFzDUTtE", "bpF5siZL", "01jQGPlE"]}, {"anyOf": 27, "comparison": "isLessThanOrEqual", "name": "cAWJik0e", "predicateType": "SeasonTierPredicate", "value": "R6F4Z1If", "values": ["U2BN3SWB", "s7lSeQ4W", "LijAOLCV"]}]}, {"operator": "and", "predicates": [{"anyOf": 45, "comparison": "isLessThan", "name": "9P9whUUq", "predicateType": "SeasonPassPredicate", "value": "ToDDi9UZ", "values": ["PMslp9Ec", "wdzHZlyH", "jUZPvw75"]}, {"anyOf": 15, "comparison": "includes", "name": "gWVC1p3F", "predicateType": "SeasonPassPredicate", "value": "XMxfwxC1", "values": ["EDSs3kUP", "SPidbduv", "SNTO6QFh"]}, {"anyOf": 44, "comparison": "is", "name": "CWVz9tWG", "predicateType": "SeasonPassPredicate", "value": "d3VjCQJw", "values": ["gpy55w9U", "xhinlSvP", "mYaPMaTQ"]}]}, {"operator": "or", "predicates": [{"anyOf": 49, "comparison": "isGreaterThan", "name": "42TNfsx5", "predicateType": "SeasonTierPredicate", "value": "VJoyqFQU", "values": ["X4YWcjkR", "wnnl796G", "sBwZ2EYU"]}, {"anyOf": 63, "comparison": "is", "name": "ANWeFml0", "predicateType": "SeasonPassPredicate", "value": "Z26LWZax", "values": ["YqPTm6gN", "ZTzj2ku1", "OAR9bsgS"]}, {"anyOf": 75, "comparison": "isLessThan", "name": "hEWS7JdB", "predicateType": "SeasonPassPredicate", "value": "OoPMrQiX", "values": ["xs4ljlLz", "aTv6GobL", "OXYLo9gV"]}]}]}, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 14, "fixedTrialCycles": 11, "graceDays": 20}, "region": "PwXQ5pez", "regionData": [{"currencyCode": "hPBnxIsR", "currencyNamespace": "igfFtje3", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1971-10-12T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1988-08-12T00:00:00Z", "discountedPrice": 71, "expireAt": "1981-06-22T00:00:00Z", "price": 70, "purchaseAt": "1993-11-23T00:00:00Z", "trialPrice": 28}, {"currencyCode": "mIzQ3u33", "currencyNamespace": "aZRXlYe0", "currencyType": "VIRTUAL", "discountAmount": 58, "discountExpireAt": "1994-01-31T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1992-07-08T00:00:00Z", "discountedPrice": 82, "expireAt": "1984-07-05T00:00:00Z", "price": 65, "purchaseAt": "1988-06-08T00:00:00Z", "trialPrice": 34}, {"currencyCode": "Ms9TXP4P", "currencyNamespace": "FRiiV8vr", "currencyType": "VIRTUAL", "discountAmount": 42, "discountExpireAt": "1991-06-28T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1977-02-14T00:00:00Z", "discountedPrice": 40, "expireAt": "1994-07-30T00:00:00Z", "price": 87, "purchaseAt": "1975-01-07T00:00:00Z", "trialPrice": 7}], "seasonType": "TIER", "sku": "SzATdMdF", "stackable": false, "status": "ACTIVE", "tags": ["grRicxBD", "IsZyoj3o", "0kpU1aWw"], "targetCurrencyCode": "Q3U8cRsC", "targetItemId": "ck60sNrd", "targetNamespace": "10IY0zvg", "thumbnailUrl": "flvSPNML", "title": "iRa7GOGM", "updatedAt": "1973-06-20T00:00:00Z", "useCount": 77}, "namespace": "dRY5iA0l", "order": {"currency": {"currencyCode": "NRdJBDf6", "currencySymbol": "twyfp6tG", "currencyType": "REAL", "decimals": 11, "namespace": "s7ZZX5gy"}, "ext": {"BRhRcvPL": {}, "eM0QNnX0": {}, "S6mxdUFs": {}}, "free": false}, "source": "PURCHASE"}, "script": "DhOjBgcL", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '83dPFJFv' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "olNWlteR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'RaMAc2oj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'lmDTMz9t' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "M659TDR3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'yWV1m1jt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '6' \
    --name '89pK8yz3' \
    --offset '3' \
    --tag 'Le8mfEo4' \
    > test.out 2>&1
eval_tap $? 8 'QueryCampaigns' test.out

#- 9 CreateCampaign
# body param: body
echo '{"description": "9fP7OTWB", "items": [{"extraSubscriptionDays": 33, "itemId": "jlg3E56h", "itemName": "bryRRfDp", "quantity": 81}, {"extraSubscriptionDays": 54, "itemId": "z2yH2jFT", "itemName": "9jrDySd6", "quantity": 16}, {"extraSubscriptionDays": 28, "itemId": "Llrgglag", "itemName": "KgjBHy8S", "quantity": 75}], "maxRedeemCountPerCampaignPerUser": 1, "maxRedeemCountPerCode": 65, "maxRedeemCountPerCodePerUser": 10, "maxSaleCount": 10, "name": "2cW6aWr8", "redeemEnd": "1972-09-07T00:00:00Z", "redeemStart": "1974-03-11T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["FB1xMVFM", "PhCm2ClV", "2OEBP9zm"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateCampaign' test.out

#- 10 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '71EfCw5N' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'GetCampaign' test.out

#- 11 UpdateCampaign
# body param: body
echo '{"description": "VCbwRFwS", "items": [{"extraSubscriptionDays": 72, "itemId": "BPBOZdmO", "itemName": "m7iprH3t", "quantity": 60}, {"extraSubscriptionDays": 37, "itemId": "0uiZFRZm", "itemName": "LhN3a9YB", "quantity": 32}, {"extraSubscriptionDays": 57, "itemId": "M4VIKehV", "itemName": "52kP8FgD", "quantity": 5}], "maxRedeemCountPerCampaignPerUser": 27, "maxRedeemCountPerCode": 18, "maxRedeemCountPerCodePerUser": 82, "maxSaleCount": 81, "name": "dNBt88uB", "redeemEnd": "1980-03-11T00:00:00Z", "redeemStart": "1977-01-17T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["mVDB9zqJ", "tlv6aQ5T", "g8UjOeJN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'EghW1g8N' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateCampaign' test.out

#- 12 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'IYHwz4BM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'GetCampaignDynamic' test.out

#- 13 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId '3CkZ96XX' \
    > test.out 2>&1
eval_tap $? 13 'GetRootCategories' test.out

#- 14 CreateCategory
# body param: body
echo '{"categoryPath": "xaV4Fkbu", "localizationDisplayNames": {"oWKJPhAE": "kq0S9LXE", "aqsxAqY8": "4jmErEra", "FHs3bso8": "wHj91g8x"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'DMMMZjOb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCategory' test.out

#- 15 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'UmcWHk8N' \
    > test.out 2>&1
eval_tap $? 15 'ListCategoriesBasic' test.out

#- 16 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'FCKNqVrO' \
    --namespace $AB_NAMESPACE \
    --storeId 'ctMJGq0c' \
    > test.out 2>&1
eval_tap $? 16 'GetCategory' test.out

#- 17 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"w7084bBQ": "fYi7gk9o", "994ThZ8a": "1TFQiBEd", "t5uxxaBR": "sK6k2afS"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'JBrzspVg' \
    --namespace $AB_NAMESPACE \
    --storeId 'EZ1qSsuM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCategory' test.out

#- 18 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'Ax12d9gC' \
    --namespace $AB_NAMESPACE \
    --storeId 'UY85vF2x' \
    > test.out 2>&1
eval_tap $? 18 'DeleteCategory' test.out

#- 19 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'WaP3Nof8' \
    --namespace $AB_NAMESPACE \
    --storeId 'Q37Qle1x' \
    > test.out 2>&1
eval_tap $? 19 'GetChildCategories' test.out

#- 20 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'jVaDocw8' \
    --namespace $AB_NAMESPACE \
    --storeId '9wBSGzyp' \
    > test.out 2>&1
eval_tap $? 20 'GetDescendantCategories' test.out

#- 21 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '3jxqutTJ' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '91' \
    --code 'h56CBRrs' \
    --limit '28' \
    --offset '5' \
    > test.out 2>&1
eval_tap $? 21 'QueryCodes' test.out

#- 22 CreateCodes
# body param: body
echo '{"quantity": 20}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'BnvVMhOT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'CreateCodes' test.out

#- 23 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'BU9K4a81' \
    --namespace $AB_NAMESPACE \
    --batchNo '93' \
    > test.out 2>&1
eval_tap $? 23 'Download' test.out

#- 24 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'VSOyq6H3' \
    --namespace $AB_NAMESPACE \
    --batchNo '63' \
    > test.out 2>&1
eval_tap $? 24 'BulkDisableCodes' test.out

#- 25 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'KIZvdK5V' \
    --namespace $AB_NAMESPACE \
    --batchNo '22' \
    > test.out 2>&1
eval_tap $? 25 'BulkEnableCodes' test.out

#- 26 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'SDWIjiY2' \
    --namespace $AB_NAMESPACE \
    --code 'y3koRyi0' \
    --limit '57' \
    --offset '88' \
    --userId 'OaVscaHz' \
    > test.out 2>&1
eval_tap $? 26 'QueryRedeemHistory' test.out

#- 27 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'al3DArP9' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 27 'GetCode' test.out

#- 28 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'KsCMV5eZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 28 'DisableCode' test.out

#- 29 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'MUjjDtBi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'EnableCode' test.out

#- 30 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 30 'ListCurrencies' test.out

#- 31 CreateCurrency
# body param: body
echo '{"currencyCode": "vzxD1Trh", "currencySymbol": "67Kqla79", "currencyType": "REAL", "decimals": 55, "localizationDescriptions": {"mHqq3z2o": "2b3Ki6gs", "n9ssrTAE": "aYCEascy", "40QMASjQ": "oB9qnlHI"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'CreateCurrency' test.out

#- 32 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"CIAgfp9h": "fBqCOMbE", "Wb73WRTo": "gJN8r4EE", "rJjvrP3G": "Y7pA7VkP"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'o2cb0Rfe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'UpdateCurrency' test.out

#- 33 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'WKW5Yk2Y' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 33 'DeleteCurrency' test.out

#- 34 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'Eh2fUn7M' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'GetCurrencyConfig' test.out

#- 35 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'XhCmgGgL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'GetCurrencySummary' test.out

#- 36 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetDLCItemConfig' test.out

#- 37 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "8YUa6LOz", "rewards": [{"currency": {"currencyCode": "vBmQL4Um", "namespace": "jpQzKqg9"}, "item": {"itemId": "qeZIHdmG", "itemSku": "fnyIxYTz", "itemType": "4QdBUUAL"}, "quantity": 41, "type": "CURRENCY"}, {"currency": {"currencyCode": "3qe7tkKe", "namespace": "mYjiLphU"}, "item": {"itemId": "9DQPv73X", "itemSku": "wDYUhn8q", "itemType": "M4ee7SEI"}, "quantity": 50, "type": "CURRENCY"}, {"currency": {"currencyCode": "SQZbA1CN", "namespace": "vFqGpNb1"}, "item": {"itemId": "BqKPIHcN", "itemSku": "9cxkmiRL", "itemType": "2K1ZoKsB"}, "quantity": 82, "type": "ITEM"}]}, {"id": "TFxNSN45", "rewards": [{"currency": {"currencyCode": "f1TxPexi", "namespace": "288ydmH6"}, "item": {"itemId": "9fPYHp8E", "itemSku": "nUXWyeNn", "itemType": "yg2m9B9i"}, "quantity": 1, "type": "CURRENCY"}, {"currency": {"currencyCode": "sgUJ2otR", "namespace": "K8LGf8pA"}, "item": {"itemId": "fBwGQFEx", "itemSku": "Q2YCE7m0", "itemType": "fdzU4N11"}, "quantity": 46, "type": "ITEM"}, {"currency": {"currencyCode": "hJahUqWt", "namespace": "3XdWHCc5"}, "item": {"itemId": "fJmheS8Q", "itemSku": "xrIgZlgR", "itemType": "jivd77br"}, "quantity": 31, "type": "CURRENCY"}]}, {"id": "S8O4b89T", "rewards": [{"currency": {"currencyCode": "JVOgeYok", "namespace": "ExQ9V3ZM"}, "item": {"itemId": "5Bfmu2Uw", "itemSku": "VkU6qnVw", "itemType": "cYHeY5oz"}, "quantity": 19, "type": "CURRENCY"}, {"currency": {"currencyCode": "QjiB86UQ", "namespace": "KyojhriY"}, "item": {"itemId": "oggIyLV4", "itemSku": "hJzPcGLY", "itemType": "ckQgclfo"}, "quantity": 40, "type": "ITEM"}, {"currency": {"currencyCode": "xeXGda5u", "namespace": "MgGsx4mn"}, "item": {"itemId": "Nra0Vdqa", "itemSku": "gfFXUnVX", "itemType": "itQE1dji"}, "quantity": 81, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateDLCItemConfig' test.out

#- 38 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteDLCItemConfig' test.out

#- 39 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'GetPlatformDLCConfig' test.out

#- 40 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"rLDb9SMR": "qZqRwz4s", "MXYJcpWw": "kxifAcTj", "YwrbUvOb": "QWOv7NBu"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"qajOgBxW": "xUGYTu26", "MT4GtdMY": "l4F5biWv", "aXmEFAdz": "o6J5NV0H"}}, {"platform": "PSN", "platformDlcIdMap": {"plLxciEK": "92tGyPZA", "tbpA2LZg": "5VZcxTE9", "EvZ1Fdti": "6zk0g5v4"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'UpdatePlatformDLCConfig' test.out

#- 41 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'DeletePlatformDLCConfig' test.out

#- 42 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'z8BWTg7o' \
    --itemId '["YDG7rHYB", "dgzH5tJi", "f9pEYBW1"]' \
    --limit '25' \
    --offset '44' \
    --userId '15gjh30b' \
    > test.out 2>&1
eval_tap $? 42 'QueryEntitlements' test.out

#- 43 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'ZroIEAEI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetEntitlement' test.out

#- 44 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '87' \
    --offset '25' \
    --status 'SUCCESS' \
    --userId '7HwwwvGm' \
    > test.out 2>&1
eval_tap $? 44 'QueryFulfillmentHistories' test.out

#- 45 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetAppleIAPConfig' test.out

#- 46 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "o0ZxD7bZ", "password": "kezUqtPg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateAppleIAPConfig' test.out

#- 47 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteAppleIAPConfig' test.out

#- 48 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetEpicGamesIAPConfig' test.out

#- 49 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "ZpuBxAKR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateEpicGamesIAPConfig' test.out

#- 50 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteEpicGamesIAPConfig' test.out

#- 51 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetGoogleIAPConfig' test.out

#- 52 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "8c5iaPSz", "serviceAccountId": "9HWVYPa4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateGoogleIAPConfig' test.out

#- 53 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteGoogleIAPConfig' test.out

#- 54 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 54 'UpdateGoogleP12File' test.out

#- 55 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetIAPItemConfig' test.out

#- 56 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "GGxnh8dH", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"UCaCaMmp": "4P9lZ0Rh", "ILvlFDPL": "n2N0G6oe", "dRPxjVlj": "yJb1iKj8"}}, {"itemIdentity": "IDUnoXNW", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"wOmkRAV6": "v68xKebs", "10mcSjzP": "6ptVVUGk", "r49dBv0j": "Kw9pdtAJ"}}, {"itemIdentity": "lAKT1UwT", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"Eau3bzGz": "qm7ElTet", "xoKeShO2": "zfTwb59N", "18WYVnNE": "EMgHyOll"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 56 'UpdateIAPItemConfig' test.out

#- 57 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'DeleteIAPItemConfig' test.out

#- 58 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'GetPlayStationIAPConfig' test.out

#- 59 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "N0wat8Od"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 59 'UpdatePlaystationIAPConfig' test.out

#- 60 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'DeletePlaystationIAPConfig' test.out

#- 61 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetStadiaIAPConfig' test.out

#- 62 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteStadiaIAPConfig' test.out

#- 63 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 63 'UpdateStadiaJsonConfigFile' test.out

#- 64 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetSteamIAPConfig' test.out

#- 65 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "VRkh01eg", "publisherAuthenticationKey": "L0w67w3e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdateSteamIAPConfig' test.out

#- 66 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeleteSteamIAPConfig' test.out

#- 67 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetTwitchIAPConfig' test.out

#- 68 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "IU1pBUR6", "clientSecret": "2Ug1RxP7", "organizationId": "3EpQ3upK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdateTwitchIAPConfig' test.out

#- 69 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeleteTwitchIAPConfig' test.out

#- 70 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetXblIAPConfig' test.out

#- 71 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "mtSoEqyw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateXblIAPConfig' test.out

#- 72 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteXblAPConfig' test.out

#- 73 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password '6JrAAtqB' \
    > test.out 2>&1
eval_tap $? 73 'UpdateXblBPCertFile' test.out

#- 74 SyncInGameItem
# body param: body
echo '{"categoryPath": "83jANfTq", "targetItemId": "RRROKizR", "targetNamespace": "sbQ4375g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'myimaj18' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'SyncInGameItem' test.out

#- 75 CreateItem
# body param: body
echo '{"appId": "aUyP0jwA", "appType": "SOFTWARE", "baseAppId": "BYr34ewY", "boothName": "QAOqr66B", "categoryPath": "JCtk2ZnE", "clazz": "t9B8Avj3", "displayOrder": 25, "entitlementType": "DURABLE", "ext": {"YCrz46Ax": {}, "mnfpW3Sr": {}, "BPBZtrBX": {}}, "features": ["VlCxFzIN", "bcbxdtIA", "51cnQKBz"], "images": [{"as": "DXOXuCEL", "caption": "CQTzA1Vb", "height": 71, "imageUrl": "WdvaLhYA", "smallImageUrl": "wxPUL0LT", "width": 27}, {"as": "NF1C0fsm", "caption": "cfUotFMl", "height": 83, "imageUrl": "k57oUL1m", "smallImageUrl": "1JfHyhAC", "width": 79}, {"as": "0dpdbbJ5", "caption": "n4Wn8Wfq", "height": 37, "imageUrl": "Wzm4Zt9p", "smallImageUrl": "D1sGXG6i", "width": 23}], "itemIds": ["4q8TvXCD", "MtJZ6JDY", "4NB4f8lO"], "itemQty": {"EsETWLX3": 14, "rTbtij8C": 25, "4UygsE4L": 88}, "itemType": "SUBSCRIPTION", "listable": false, "localizations": {"RFc637pK": {"description": "0elDV6K9", "localExt": {"qkSzEg7d": {}, "HoUrXZTf": {}, "9nhyUfBQ": {}}, "longDescription": "ScxM9mJH", "title": "Kf5KiqdY"}, "UK5koi6o": {"description": "KZwVWTgf", "localExt": {"NN0FkHAY": {}, "j56bB8K2": {}, "6q927sQB": {}}, "longDescription": "Cuo1ICRE", "title": "4cuyYZwA"}, "w53lQmri": {"description": "16lPvwYs", "localExt": {"R0fjuz2k": {}, "31FeXJt1": {}, "uB2NL3v5": {}}, "longDescription": "X7zemK2i", "title": "FKtmKdUL"}}, "maxCount": 9, "maxCountPerUser": 28, "name": "iYhMefmo", "optionBoxConfig": {"boxItems": [{"count": 58, "itemId": "qc7kx5fe", "itemSku": "bfWQHDp0"}, {"count": 35, "itemId": "SvnsbGrN", "itemSku": "RBMRi73N"}, {"count": 97, "itemId": "4ytJx3oI", "itemSku": "iYSHvLAu"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 27, "fixedTrialCycles": 47, "graceDays": 59}, "regionData": {"00esprMs": [{"currencyCode": "ZwwySGbn", "currencyNamespace": "38fOLcO3", "currencyType": "VIRTUAL", "discountAmount": 82, "discountExpireAt": "1985-07-29T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1973-06-11T00:00:00Z", "discountedPrice": 26, "expireAt": "1986-09-12T00:00:00Z", "price": 58, "purchaseAt": "1994-12-28T00:00:00Z", "trialPrice": 8}, {"currencyCode": "4S5IKCwC", "currencyNamespace": "l54A0Eg4", "currencyType": "VIRTUAL", "discountAmount": 20, "discountExpireAt": "1996-07-25T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1986-07-21T00:00:00Z", "discountedPrice": 38, "expireAt": "1992-11-20T00:00:00Z", "price": 38, "purchaseAt": "1996-01-19T00:00:00Z", "trialPrice": 59}, {"currencyCode": "DwI8N9IW", "currencyNamespace": "Pg4NoTFE", "currencyType": "VIRTUAL", "discountAmount": 37, "discountExpireAt": "1972-05-29T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1988-07-24T00:00:00Z", "discountedPrice": 45, "expireAt": "1983-09-29T00:00:00Z", "price": 47, "purchaseAt": "1993-10-09T00:00:00Z", "trialPrice": 0}], "TpferrY3": [{"currencyCode": "Bo7WMItT", "currencyNamespace": "Q2oRtIT9", "currencyType": "VIRTUAL", "discountAmount": 26, "discountExpireAt": "1973-10-21T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1982-06-19T00:00:00Z", "discountedPrice": 72, "expireAt": "1997-01-09T00:00:00Z", "price": 93, "purchaseAt": "1979-02-12T00:00:00Z", "trialPrice": 31}, {"currencyCode": "AFxPZDF0", "currencyNamespace": "wqfS6ST7", "currencyType": "VIRTUAL", "discountAmount": 47, "discountExpireAt": "1992-11-04T00:00:00Z", "discountPercentage": 82, "discountPurchaseAt": "1992-06-22T00:00:00Z", "discountedPrice": 86, "expireAt": "1982-03-05T00:00:00Z", "price": 54, "purchaseAt": "1981-09-03T00:00:00Z", "trialPrice": 89}, {"currencyCode": "n7HLH3kk", "currencyNamespace": "GmNcnJUa", "currencyType": "REAL", "discountAmount": 24, "discountExpireAt": "1974-01-05T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1997-10-12T00:00:00Z", "discountedPrice": 20, "expireAt": "1999-10-22T00:00:00Z", "price": 59, "purchaseAt": "1972-05-29T00:00:00Z", "trialPrice": 61}], "8X52cRAA": [{"currencyCode": "u0wnDaHK", "currencyNamespace": "Q8khrkC4", "currencyType": "REAL", "discountAmount": 10, "discountExpireAt": "1991-10-22T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1988-12-25T00:00:00Z", "discountedPrice": 41, "expireAt": "1988-08-11T00:00:00Z", "price": 10, "purchaseAt": "1973-05-14T00:00:00Z", "trialPrice": 50}, {"currencyCode": "QfPyckp2", "currencyNamespace": "G89Q4e2R", "currencyType": "VIRTUAL", "discountAmount": 19, "discountExpireAt": "1993-09-14T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1995-02-19T00:00:00Z", "discountedPrice": 83, "expireAt": "1978-01-08T00:00:00Z", "price": 64, "purchaseAt": "1972-05-09T00:00:00Z", "trialPrice": 0}, {"currencyCode": "BzGUDN9B", "currencyNamespace": "murjyWm4", "currencyType": "REAL", "discountAmount": 14, "discountExpireAt": "1983-09-16T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1972-01-18T00:00:00Z", "discountedPrice": 91, "expireAt": "1980-11-20T00:00:00Z", "price": 11, "purchaseAt": "1973-01-05T00:00:00Z", "trialPrice": 93}]}, "seasonType": "PASS", "sku": "8uYfVAYO", "stackable": false, "status": "INACTIVE", "tags": ["4PYTktq4", "p1lrw8xf", "JkTGrEqs"], "targetCurrencyCode": "tUYCD4eY", "targetNamespace": "hZrDfBK1", "thumbnailUrl": "72XFjOQo", "useCount": 31}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'ExSHXVbi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'CreateItem' test.out

#- 76 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'x7cEm7Og' \
    --appId 'heMdcfo5' \
    > test.out 2>&1
eval_tap $? 76 'GetItemByAppId' test.out

#- 77 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --availableDate 'uLvaKmKm' \
    --baseAppId 'cRNfrhZ9' \
    --categoryPath 'utQFLab1' \
    --features 'tQ5W9N0m' \
    --itemType 'SEASON' \
    --limit '73' \
    --offset '20' \
    --region 'pXnp7diP' \
    --sortBy '["displayOrder:asc", "name", "createdAt"]' \
    --storeId 'klxLoPPq' \
    --tags 'rz9BMKsy' \
    --targetNamespace 'bpVZ2f7X' \
    > test.out 2>&1
eval_tap $? 77 'QueryItems' test.out

#- 78 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["vBbUuaY5", "U34FcdY6", "gUyx0jL2"]' \
    > test.out 2>&1
eval_tap $? 78 'ListBasicItemsByFeatures' test.out

#- 79 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'z4FfeLOi' \
    --sku 'Y0OWBs3l' \
    > test.out 2>&1
eval_tap $? 79 'GetItemBySku' test.out

#- 80 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'JnIjPamX' \
    --populateBundle 'false' \
    --region 'nW67bkoC' \
    --storeId 'Z0b0siJf' \
    --sku 'dcHYYYsY' \
    > test.out 2>&1
eval_tap $? 80 'GetLocaleItemBySku' test.out

#- 81 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'ZWWBSDsL' \
    --sku '8wrXTUAa' \
    > test.out 2>&1
eval_tap $? 81 'GetItemIdBySku' test.out

#- 82 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["ZigL9j0O", "nQFDtKa5", "64ZIypLM"]' \
    --storeId 'ja7dhdc2' \
    > test.out 2>&1
eval_tap $? 82 'GetBulkItemIdBySkus' test.out

#- 83 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'NCP3kCPl' \
    --region 'W8g6lCon' \
    --storeId '3GiYMIkk' \
    --itemIds 'n1zQUl6a' \
    > test.out 2>&1
eval_tap $? 83 'BulkGetLocaleItems' test.out

#- 84 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'GetAvailablePredicateTypes' test.out

#- 85 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["w8VrENw8", "M7UWIYet", "vrzKGgup"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId '7pcfnU08' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'ValidateItemPurchaseCondition' test.out

#- 86 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'COINS' \
    --limit '89' \
    --offset '62' \
    --storeId 'Na0l8lVN' \
    --keyword 'nBWCQ0EU' \
    --language 'WgI85K0T' \
    > test.out 2>&1
eval_tap $? 86 'SearchItems' test.out

#- 87 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '89' \
    --offset '81' \
    --sortBy '["displayOrder:desc", "name", "displayOrder:asc"]' \
    --storeId 'T8LyG7Bt' \
    > test.out 2>&1
eval_tap $? 87 'QueryUncategorizedItems' test.out

#- 88 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId '3ZTruo1z' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '1jsdD7Yf' \
    > test.out 2>&1
eval_tap $? 88 'GetItem' test.out

#- 89 UpdateItem
# body param: body
echo '{"appId": "h633I6hf", "appType": "GAME", "baseAppId": "KUuaELeD", "boothName": "k0P76d4j", "categoryPath": "i1DoXzTu", "clazz": "olSp6y7L", "displayOrder": 35, "entitlementType": "DURABLE", "ext": {"Byvc1zK9": {}, "fMeZQyqk": {}, "6FllCabv": {}}, "features": ["uRPYhvVk", "dDp3oB3c", "vrxxt4I4"], "images": [{"as": "rafI552C", "caption": "HQzmAstX", "height": 41, "imageUrl": "6irQo0Ar", "smallImageUrl": "Ms2XuBVR", "width": 91}, {"as": "KECLrf5v", "caption": "iTFCEuEG", "height": 57, "imageUrl": "VLIeF9n7", "smallImageUrl": "wUsVPyYm", "width": 90}, {"as": "CmSZSit9", "caption": "qWHXJTqQ", "height": 67, "imageUrl": "IqYkXEvW", "smallImageUrl": "wpLotBZ9", "width": 29}], "itemIds": ["Ov4xHptH", "AG5W69JC", "N7wv7kDs"], "itemQty": {"duq7YLlX": 95, "pozjE4Oi": 10, "R1O5KvsZ": 84}, "itemType": "APP", "listable": true, "localizations": {"JnXAmV4t": {"description": "FTisuOjM", "localExt": {"yaJUNy0q": {}, "5wkioilr": {}, "Da2t9NsO": {}}, "longDescription": "wZYY5cc8", "title": "YEmZtv9x"}, "76JO6KWl": {"description": "vuuK12X9", "localExt": {"67QpYseX": {}, "MNObPl8s": {}, "wfeKl1qf": {}}, "longDescription": "D2GQV31p", "title": "zD4sazlz"}, "yWu7nSn9": {"description": "XoO49xqp", "localExt": {"yF2gixP2": {}, "UbvOdZDC": {}, "vQ4pYdPY": {}}, "longDescription": "ngjolXYd", "title": "NaU6e2Im"}}, "maxCount": 98, "maxCountPerUser": 92, "name": "f9zg3RQl", "optionBoxConfig": {"boxItems": [{"count": 22, "itemId": "MTpv3TYy", "itemSku": "HwQHwvYd"}, {"count": 41, "itemId": "1DKpK4Tw", "itemSku": "xEFIbweo"}, {"count": 0, "itemId": "TCd1iMlo", "itemSku": "BPbetYoq"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 50, "fixedTrialCycles": 56, "graceDays": 8}, "regionData": {"CvXsaqj1": [{"currencyCode": "jpuWt2o3", "currencyNamespace": "VB0s0j9E", "currencyType": "VIRTUAL", "discountAmount": 57, "discountExpireAt": "1977-01-19T00:00:00Z", "discountPercentage": 50, "discountPurchaseAt": "1987-07-31T00:00:00Z", "discountedPrice": 51, "expireAt": "1975-09-28T00:00:00Z", "price": 65, "purchaseAt": "1987-03-16T00:00:00Z", "trialPrice": 42}, {"currencyCode": "MkYKxmfn", "currencyNamespace": "2up6XviM", "currencyType": "VIRTUAL", "discountAmount": 23, "discountExpireAt": "1997-08-27T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1971-05-05T00:00:00Z", "discountedPrice": 29, "expireAt": "1996-02-04T00:00:00Z", "price": 93, "purchaseAt": "1986-05-06T00:00:00Z", "trialPrice": 64}, {"currencyCode": "F1hUv4x9", "currencyNamespace": "h26wsEw4", "currencyType": "VIRTUAL", "discountAmount": 99, "discountExpireAt": "1983-11-27T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1999-10-17T00:00:00Z", "discountedPrice": 5, "expireAt": "1973-09-18T00:00:00Z", "price": 25, "purchaseAt": "1985-07-16T00:00:00Z", "trialPrice": 53}], "Jkw7xmAt": [{"currencyCode": "qEzZS4lO", "currencyNamespace": "LP1llJiT", "currencyType": "REAL", "discountAmount": 52, "discountExpireAt": "1982-05-01T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1994-07-10T00:00:00Z", "discountedPrice": 45, "expireAt": "1971-12-15T00:00:00Z", "price": 41, "purchaseAt": "1977-06-16T00:00:00Z", "trialPrice": 49}, {"currencyCode": "lI3JzNCV", "currencyNamespace": "wWdxs2I7", "currencyType": "REAL", "discountAmount": 43, "discountExpireAt": "1989-01-05T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1993-09-11T00:00:00Z", "discountedPrice": 22, "expireAt": "1996-05-08T00:00:00Z", "price": 81, "purchaseAt": "1999-02-15T00:00:00Z", "trialPrice": 1}, {"currencyCode": "jVsV89vM", "currencyNamespace": "gf4cnvj7", "currencyType": "REAL", "discountAmount": 71, "discountExpireAt": "1993-10-31T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1981-12-09T00:00:00Z", "discountedPrice": 73, "expireAt": "1979-10-17T00:00:00Z", "price": 41, "purchaseAt": "1996-04-26T00:00:00Z", "trialPrice": 37}], "EevqIXjK": [{"currencyCode": "lhV1WvKx", "currencyNamespace": "DGEJi5et", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1971-09-13T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1972-06-24T00:00:00Z", "discountedPrice": 39, "expireAt": "1976-08-24T00:00:00Z", "price": 16, "purchaseAt": "1990-02-11T00:00:00Z", "trialPrice": 64}, {"currencyCode": "ozTi35Kc", "currencyNamespace": "H7JGX78B", "currencyType": "VIRTUAL", "discountAmount": 63, "discountExpireAt": "1991-08-15T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1995-10-10T00:00:00Z", "discountedPrice": 60, "expireAt": "1980-02-28T00:00:00Z", "price": 48, "purchaseAt": "1972-10-30T00:00:00Z", "trialPrice": 18}, {"currencyCode": "Hjya8S8L", "currencyNamespace": "Muylv5fa", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1981-06-10T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1985-03-27T00:00:00Z", "discountedPrice": 64, "expireAt": "1982-04-11T00:00:00Z", "price": 37, "purchaseAt": "1975-11-12T00:00:00Z", "trialPrice": 69}]}, "seasonType": "TIER", "sku": "D3kTeNzm", "stackable": true, "status": "ACTIVE", "tags": ["hRK0RwH0", "ZLMhMZJy", "JDfWYAXy"], "targetCurrencyCode": "l70QJsKL", "targetNamespace": "Rk6n73vs", "thumbnailUrl": "JRkZuVha", "useCount": 16}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'Tt72s64G' \
    --namespace $AB_NAMESPACE \
    --storeId 'RDYjiQJB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateItem' test.out

#- 90 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId '4jPX0YWV' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'Cd1SvKyH' \
    > test.out 2>&1
eval_tap $? 90 'DeleteItem' test.out

#- 91 AcquireItem
# body param: body
echo '{"count": 42, "orderNo": "lK6ytjEz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId '1uwgkL2a' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'AcquireItem' test.out

#- 92 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'sUZm7Gy4' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'ggiu9ZAg' \
    > test.out 2>&1
eval_tap $? 92 'GetApp' test.out

#- 93 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "f31tfLCs", "previewUrl": "a8dsSjSK", "thumbnailUrl": "1IgFt5bG", "type": "image", "url": "ZP0mCkH0", "videoSource": "vimeo"}, {"alt": "KlOkgndE", "previewUrl": "9v6a5byx", "thumbnailUrl": "arRgGGeQ", "type": "video", "url": "CaJe3inu", "videoSource": "vimeo"}, {"alt": "nDg6XRt0", "previewUrl": "3owMd33B", "thumbnailUrl": "WU7pIaJo", "type": "image", "url": "Nrs5rvbA", "videoSource": "vimeo"}], "developer": "KS3ekQTW", "forumUrl": "KDiuCRc5", "genres": ["Casual", "Sports", "Action"], "localizations": {"o7Olu7KA": {"announcement": "Rch5I0PH", "slogan": "0ECaMRSu"}, "NEt51QoL": {"announcement": "oTrzZIpe", "slogan": "sKcR3DW8"}, "9eGBB2WX": {"announcement": "3laZpTZI", "slogan": "8ahYhIlW"}}, "platformRequirements": {"Olf1TzsK": [{"additionals": "WAno0A8R", "directXVersion": "q5ZPeVV4", "diskSpace": "96tWkbJ8", "graphics": "zhLEfjPX", "label": "c7stIyhm", "osVersion": "IA3PvocC", "processor": "QLvr14GH", "ram": "XlfpRKbR", "soundCard": "89Rz9Zrp"}, {"additionals": "S5RfTj7l", "directXVersion": "l5ivGpem", "diskSpace": "uugKcAYl", "graphics": "BcUIP83w", "label": "IPI7RBqV", "osVersion": "Hn5RxYVj", "processor": "hWt0j3Nn", "ram": "b1DQwOVs", "soundCard": "nTxRdhhh"}, {"additionals": "D6t0F6gt", "directXVersion": "qFnmdaP8", "diskSpace": "veA8JhWY", "graphics": "epjnQijx", "label": "8t0KUzGm", "osVersion": "PG47fmag", "processor": "KSDicduW", "ram": "5f76byD1", "soundCard": "Y48MPENN"}], "dlNTm1EQ": [{"additionals": "kndvkHCb", "directXVersion": "GmTAgQGv", "diskSpace": "fpimGHhQ", "graphics": "yKjkNZZp", "label": "O49JHbOs", "osVersion": "zeEufhFw", "processor": "tGN1eMRl", "ram": "MiWG8m0d", "soundCard": "VmELEM8C"}, {"additionals": "YjAO3O5o", "directXVersion": "lR7592ov", "diskSpace": "yEI4oM1J", "graphics": "B7mwmXAJ", "label": "QgYJOBz2", "osVersion": "8u0lIU2v", "processor": "Ah8r34kD", "ram": "RPAjuQhX", "soundCard": "RSKR1P1c"}, {"additionals": "KLv12Svo", "directXVersion": "F9ZTUxda", "diskSpace": "4YLvjfWD", "graphics": "pAhv4oeu", "label": "tAAbS2vO", "osVersion": "14c9ukOS", "processor": "fhKWSZkD", "ram": "aY5MXatm", "soundCard": "HJk84rBR"}], "FQsHrDf6": [{"additionals": "tId8UcQ6", "directXVersion": "lDIYSOqV", "diskSpace": "UiBISupS", "graphics": "EKu92Z12", "label": "SsvLy3Iu", "osVersion": "GVXkwU0p", "processor": "RQJUP4yB", "ram": "4bUgccpl", "soundCard": "E0ASU9q5"}, {"additionals": "W7oJOAc0", "directXVersion": "yenAvhzL", "diskSpace": "8JJpUpVZ", "graphics": "y5eL6TsK", "label": "q6t8p5C8", "osVersion": "bK6wcToY", "processor": "CuL9jnNK", "ram": "5i5ydmw4", "soundCard": "IPyaDMFx"}, {"additionals": "GzyXLfqk", "directXVersion": "wF2A9VOS", "diskSpace": "H4JV2sVb", "graphics": "klLIhrh7", "label": "ZYedijVN", "osVersion": "OKJfEYdC", "processor": "ZuCZaOc3", "ram": "6ERIX350", "soundCard": "NY0jCepP"}]}, "platforms": ["Windows", "Android", "Linux"], "players": ["LocalCoop", "Coop", "Coop"], "primaryGenre": "Casual", "publisher": "C3D1jH3f", "releaseDate": "1989-08-05T00:00:00Z", "websiteUrl": "AkYIeY9K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'RBtRoXTZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'EfkCqcJT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'UpdateApp' test.out

#- 94 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'fVI6CGiv' \
    --namespace $AB_NAMESPACE \
    --storeId 'lim7P3x9' \
    > test.out 2>&1
eval_tap $? 94 'DisableItem' test.out

#- 95 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'hrF8WO1C' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetItemDynamicData' test.out

#- 96 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'sVZtO8tT' \
    --namespace $AB_NAMESPACE \
    --storeId 'uuHUXHOp' \
    > test.out 2>&1
eval_tap $? 96 'EnableItem' test.out

#- 97 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'HlH4GQYc' \
    --itemId '9UIdGLRS' \
    --namespace $AB_NAMESPACE \
    --storeId 'eSLuNBIa' \
    > test.out 2>&1
eval_tap $? 97 'FeatureItem' test.out

#- 98 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'AgaND6Rn' \
    --itemId 'KnMJb3mx' \
    --namespace $AB_NAMESPACE \
    --storeId '0mMliHqP' \
    > test.out 2>&1
eval_tap $? 98 'DefeatureItem' test.out

#- 99 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'bf4kXtVu' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '4N87V2Fg' \
    --populateBundle 'true' \
    --region 'bNACpkz7' \
    --storeId '64k7BiGs' \
    > test.out 2>&1
eval_tap $? 99 'GetLocaleItem' test.out

#- 100 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 70, "comparison": "isGreaterThanOrEqual", "name": "ni3dOQ8E", "predicateType": "SeasonTierPredicate", "value": "hYhA4NAh", "values": ["6mgICNKM", "natqOyvS", "FRllVZbS"]}, {"anyOf": 24, "comparison": "isLessThanOrEqual", "name": "4wIs50yS", "predicateType": "SeasonPassPredicate", "value": "ps68mtKX", "values": ["3UyzZUIf", "uK0TJcKF", "jQ486i10"]}, {"anyOf": 53, "comparison": "isGreaterThanOrEqual", "name": "0jj55Byb", "predicateType": "SeasonTierPredicate", "value": "RfZPfYIU", "values": ["3WyZqAXi", "mXQHZILm", "eUHaU1lN"]}]}, {"operator": "and", "predicates": [{"anyOf": 62, "comparison": "isNot", "name": "bLlW6RjD", "predicateType": "SeasonPassPredicate", "value": "RJ4bjeXu", "values": ["mvlZDMGa", "wn0UxnqO", "nr8NwNu6"]}, {"anyOf": 36, "comparison": "isLessThanOrEqual", "name": "fKKnjodX", "predicateType": "EntitlementPredicate", "value": "xK9fMzmn", "values": ["3tRLvAXg", "5oY7rxCd", "TfG0nTid"]}, {"anyOf": 90, "comparison": "isGreaterThan", "name": "3k3kUf15", "predicateType": "SeasonTierPredicate", "value": "F5aI1tY5", "values": ["2JDTE279", "jwzXJk1a", "oLqunizA"]}]}, {"operator": "and", "predicates": [{"anyOf": 18, "comparison": "isLessThanOrEqual", "name": "fnm9wwwi", "predicateType": "EntitlementPredicate", "value": "xWi5GF3A", "values": ["00caapoB", "8vbn2Ifw", "gdoGO8Sv"]}, {"anyOf": 57, "comparison": "excludes", "name": "Tco8DzCO", "predicateType": "SeasonPassPredicate", "value": "GyY9YL0B", "values": ["CGmVTClE", "lVlCg5sn", "JjYJ4OAa"]}, {"anyOf": 40, "comparison": "isLessThan", "name": "0Q3j2DUu", "predicateType": "EntitlementPredicate", "value": "QqSR98so", "values": ["YVrLFxFN", "taKLZbPf", "fylqBV7Z"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'VFCVqFPP' \
    --namespace $AB_NAMESPACE \
    --storeId 'iRqHL49A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateItemPurchaseCondition' test.out

#- 101 ReturnItem
# body param: body
echo '{"orderNo": "FjrnH4ul"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'DVHVSGXH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'ReturnItem' test.out

#- 102 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '31' \
    --name 'qQPGmL2L' \
    --offset '72' \
    --tag 'SVuAbjHx' \
    > test.out 2>&1
eval_tap $? 102 'QueryKeyGroups' test.out

#- 103 CreateKeyGroup
# body param: body
echo '{"description": "RXPrcVZq", "name": "hdpI6GL3", "status": "INACTIVE", "tags": ["i0Yxe7n5", "2iZ9KP5x", "F6g1oJZk"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateKeyGroup' test.out

#- 104 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'B4pAqD5N' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'GetKeyGroup' test.out

#- 105 UpdateKeyGroup
# body param: body
echo '{"description": "s55Z3A2S", "name": "0Rxbxcc9", "status": "ACTIVE", "tags": ["VPxX4C6S", "Gd46Na5Z", "DNgKisYW"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'GZQWYzYi' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'UpdateKeyGroup' test.out

#- 106 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'sdQ0f8Ly' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'GetKeyGroupDynamic' test.out

#- 107 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'tuYu0PLc' \
    --namespace $AB_NAMESPACE \
    --limit '25' \
    --offset '50' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 107 'ListKeys' test.out

#- 108 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId '037bXfss' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 108 'UploadKeys' test.out

#- 109 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'cFBxrGob' \
    --limit '59' \
    --offset '42' \
    --orderNos '["h7ANTNJa", "1IALOZCS", "Y08gYN65"]' \
    --sortBy 'I4NFm98I' \
    --startTime 'dOBjdrBM' \
    --status 'REFUND_FAILED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 109 'QueryOrders' test.out

#- 110 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'GetOrderStatistics' test.out

#- 111 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Kuaq1GLe' \
    > test.out 2>&1
eval_tap $? 111 'GetOrder' test.out

#- 112 RefundOrder
# body param: body
echo '{"description": "BXrZfpv6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'jR2Z4O5I' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'RefundOrder' test.out

#- 113 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetPaymentCallbackConfig' test.out

#- 114 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "9tHVAeH3", "privateKey": "zcElBjKW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdatePaymentCallbackConfig' test.out

#- 115 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '9UT9tyso' \
    --externalId 'R8VJfYAf' \
    --limit '99' \
    --notificationSource 'XSOLLA' \
    --notificationType 'PP6lYg0i' \
    --offset '57' \
    --paymentOrderNo 'Q4GnDPxe' \
    --startDate '7pXAtInJ' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 115 'QueryPaymentNotifications' test.out

#- 116 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'o5GHUQaq' \
    --limit '98' \
    --offset '78' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 116 'QueryPaymentOrders' test.out

#- 117 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "xrfwSCXs", "currencyNamespace": "rGeHd1Rz", "customParameters": {"6QJlBXte": {}, "L8RgZt43": {}, "ri9qmBiU": {}}, "description": "MO5PlrJq", "extOrderNo": "f6pdxdFj", "extUserId": "nl2tWRyz", "itemType": "COINS", "language": "Jr-tndV", "metadata": {"mbmGxDg5": "jQwUm82V", "5y53PXLw": "LXuOljES", "xVZWYEoR": "MaDWy2S4"}, "notifyUrl": "UhscdU8k", "omitNotification": true, "platform": "aHMIAJ41", "price": 98, "recurringPaymentOrderNo": "KCIr3Xrw", "region": "iyPNaea3", "returnUrl": "5B9tR727", "sandbox": false, "sku": "BpPMEIRP", "subscriptionId": "HxQV73aZ", "targetNamespace": "CRGXvlmg", "targetUserId": "MESWhg37", "title": "HGPurDlp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'CreatePaymentOrderByDedicated' test.out

#- 118 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'QW6BXIKO' \
    > test.out 2>&1
eval_tap $? 118 'ListExtOrderNoByExtTxId' test.out

#- 119 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'l1i6WdWY' \
    > test.out 2>&1
eval_tap $? 119 'GetPaymentOrder' test.out

#- 120 ChargePaymentOrder
# body param: body
echo '{"extTxId": "FmvWyVzE", "paymentMethod": "0bpCZCTL", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'xMEzCQLu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'ChargePaymentOrder' test.out

#- 121 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "LyBMUvgk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'LcBpyRCp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundPaymentOrderByDedicated' test.out

#- 122 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 71, "currencyCode": "cMS1EfQR", "notifyType": "CHARGE", "paymentProvider": "STRIPE", "salesTax": 26, "vat": 32}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'EGwPh4pl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'SimulatePaymentOrderNotification' test.out

#- 123 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'rM6RsfId' \
    > test.out 2>&1
eval_tap $? 123 'GetPaymentOrderChargeStatus' test.out

#- 124 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 124 'GetPlatformWalletConfig' test.out

#- 125 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Xbox", "Playstation", "Epic"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'UpdatePlatformWalletConfig' test.out

#- 126 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 126 'ResetPlatformWalletConfig' test.out

#- 127 CreateReward
# body param: body
echo '{"description": "krS8mnLU", "eventTopic": "cQHREmAE", "maxAwarded": 48, "maxAwardedPerUser": 43, "namespaceExpression": "0L84fLa2", "rewardCode": "xW70I0eK", "rewardConditions": [{"condition": "kjHuoxIS", "conditionName": "RdFhJ5j7", "eventName": "aqhFwiM2", "rewardItems": [{"duration": 68, "itemId": "6vBYgOiG", "quantity": 3}, {"duration": 22, "itemId": "JRu3P45e", "quantity": 54}, {"duration": 29, "itemId": "sNcfrvrr", "quantity": 76}]}, {"condition": "G2OdsxxE", "conditionName": "k4hiFh7P", "eventName": "HW5h52he", "rewardItems": [{"duration": 81, "itemId": "mN7UINHo", "quantity": 19}, {"duration": 20, "itemId": "oj0uMii2", "quantity": 75}, {"duration": 97, "itemId": "RF7GDUfj", "quantity": 52}]}, {"condition": "gZt0YmY5", "conditionName": "Hbj3O6jz", "eventName": "7QZNYy3W", "rewardItems": [{"duration": 31, "itemId": "fbJwXWCD", "quantity": 2}, {"duration": 83, "itemId": "0W0Tvfpa", "quantity": 94}, {"duration": 80, "itemId": "sBBRIF2K", "quantity": 46}]}], "userIdExpression": "xISQjJjS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 127 'CreateReward' test.out

#- 128 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'ZFsrOzPL' \
    --limit '56' \
    --offset '65' \
    --sortBy '["namespace", "namespace:desc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 128 'QueryRewards' test.out

#- 129 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'ExportRewards' test.out

#- 130 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 130 'ImportRewards' test.out

#- 131 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'OuwKSTpA' \
    > test.out 2>&1
eval_tap $? 131 'GetReward' test.out

#- 132 UpdateReward
# body param: body
echo '{"description": "qAWBlYfe", "eventTopic": "OsYR14nN", "maxAwarded": 72, "maxAwardedPerUser": 96, "namespaceExpression": "CaaEF640", "rewardCode": "uD6oXH6I", "rewardConditions": [{"condition": "gNh8ir4p", "conditionName": "6idqdcic", "eventName": "6dCWPsr4", "rewardItems": [{"duration": 71, "itemId": "BfyZghQA", "quantity": 5}, {"duration": 54, "itemId": "DtXu9e09", "quantity": 9}, {"duration": 2, "itemId": "ZyoyoB3p", "quantity": 28}]}, {"condition": "QsZwQ4eD", "conditionName": "7GCroC21", "eventName": "gzczR8Og", "rewardItems": [{"duration": 8, "itemId": "8pYvP5Fb", "quantity": 92}, {"duration": 68, "itemId": "okqVRdlI", "quantity": 81}, {"duration": 47, "itemId": "dCnFFI99", "quantity": 64}]}, {"condition": "h4nTxKIT", "conditionName": "FWCXS2PF", "eventName": "HSd1cCVJ", "rewardItems": [{"duration": 5, "itemId": "0C76doYK", "quantity": 42}, {"duration": 35, "itemId": "Q8oBvieQ", "quantity": 41}, {"duration": 12, "itemId": "6eHmuDkZ", "quantity": 24}]}], "userIdExpression": "8frHZHqZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ePyc4oQ0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'UpdateReward' test.out

#- 133 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'FwT7TeE6' \
    > test.out 2>&1
eval_tap $? 133 'DeleteReward' test.out

#- 134 CheckEventCondition
# body param: body
echo '{"payload": {"t4MPEAH8": {}, "OjplSNtv": {}, "uDIwuFqP": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'fTDDVel7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CheckEventCondition' test.out

#- 135 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "Nyr5X7RG", "userId": "DSFEudQG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'JvJJEQf9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'DeleteRewardConditionRecord' test.out

#- 136 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'ListStores' test.out

#- 137 CreateStore
# body param: body
echo '{"defaultLanguage": "CGDLkAgb", "defaultRegion": "MW7ZoeYz", "description": "QBkOkAfB", "supportedLanguages": ["So7bn0FG", "mtSRULaM", "fMaT2ekV"], "supportedRegions": ["sJ6XF61q", "ruBVKrxO", "8PbfWx5K"], "title": "9vEbiYlm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'CreateStore' test.out

#- 138 ImportStore
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ShBCZy1C' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 138 'ImportStore' test.out

#- 139 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'GetPublishedStore' test.out

#- 140 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'DeletePublishedStore' test.out

#- 141 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 141 'GetPublishedStoreBackup' test.out

#- 142 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'RollbackPublishedStore' test.out

#- 143 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'x4zIdPzV' \
    > test.out 2>&1
eval_tap $? 143 'GetStore' test.out

#- 144 UpdateStore
# body param: body
echo '{"defaultLanguage": "KLYF6X8H", "defaultRegion": "dNXkgb7n", "description": "nErtRYYY", "supportedLanguages": ["Xq4Lf7tR", "agQXiXui", "9b5hJrqw"], "supportedRegions": ["CQAfio7W", "5iKAxwIn", "v5KA4Ndc"], "title": "0BeacXit"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'wzqp4LPP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateStore' test.out

#- 145 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'F6jMCPOM' \
    > test.out 2>&1
eval_tap $? 145 'DeleteStore' test.out

#- 146 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'Z59IInK5' \
    --action 'UPDATE' \
    --itemSku 'XxrZxeXJ' \
    --itemType 'SEASON' \
    --limit '81' \
    --offset '26' \
    --selected 'false' \
    --sortBy '["updatedAt:desc", "createdAt:desc", "createdAt"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd '7bQWTAgp' \
    --updatedAtStart 'YpnmF9v7' \
    > test.out 2>&1
eval_tap $? 146 'QueryChanges' test.out

#- 147 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'GTe4309l' \
    > test.out 2>&1
eval_tap $? 147 'PublishAll' test.out

#- 148 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'hpqj9sgm' \
    > test.out 2>&1
eval_tap $? 148 'PublishSelected' test.out

#- 149 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'VYEf3jiE' \
    > test.out 2>&1
eval_tap $? 149 'SelectAllRecords' test.out

#- 150 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId '3KWHL56R' \
    --action 'UPDATE' \
    --itemSku '309uDcSZ' \
    --itemType 'COINS' \
    --type 'CATEGORY' \
    --updatedAtEnd '3lAep7V0' \
    --updatedAtStart 'qQblsLi9' \
    > test.out 2>&1
eval_tap $? 150 'GetStatistic' test.out

#- 151 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'uktAELke' \
    > test.out 2>&1
eval_tap $? 151 'UnselectAllRecords' test.out

#- 152 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'hztqyksZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'TiIWa8On' \
    > test.out 2>&1
eval_tap $? 152 'SelectRecord' test.out

#- 153 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'EiH0cLDx' \
    --namespace $AB_NAMESPACE \
    --storeId '9C0WJK98' \
    > test.out 2>&1
eval_tap $? 153 'UnselectRecord' test.out

#- 154 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'xZ7cqrV0' \
    --targetStoreId 'D8SEmETS' \
    > test.out 2>&1
eval_tap $? 154 'CloneStore' test.out

#- 155 ExportStore
$CLI_EXE \
    --sn platform \
    --op ExportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'HZCOCFfs' \
    > test.out 2>&1
eval_tap $? 155 'ExportStore' test.out

#- 156 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'NEVER' \
    --itemId 'CiUzCn65' \
    --limit '82' \
    --offset '36' \
    --sku 'bUuhuEXM' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    --userId 'yKhagl8S' \
    > test.out 2>&1
eval_tap $? 156 'QuerySubscriptions' test.out

#- 157 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'B98J1zu3' \
    > test.out 2>&1
eval_tap $? 157 'RecurringChargeSubscription' test.out

#- 158 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'yeDBl7bh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 158 'GetTicketDynamic' test.out

#- 159 DecreaseTicketSale
# body param: body
echo '{"orderNo": "AyA6EzfH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'VdyCE8gk' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'DecreaseTicketSale' test.out

#- 160 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName '0P7OICOR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 160 'GetTicketBoothID' test.out

#- 161 IncreaseTicketSale
# body param: body
echo '{"count": 71, "orderNo": "XIJHJxFI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'VjqPcJQT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'IncreaseTicketSale' test.out

#- 162 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "MdL5FkBY", "value": 39}, {"id": "KRa3jrxE", "value": 40}, {"id": "QkjG5gNO", "value": 27}], "steamUserId": "S8hXM2hq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'GE1bB7r7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UnlockSteamUserAchievement' test.out

#- 163 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'hfskQxY5' \
    --xboxUserId 'wW7b1bCF' \
    > test.out 2>&1
eval_tap $? 163 'GetXblUserAchievements' test.out

#- 164 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "aE8c5aRm", "percentComplete": 59}, {"id": "wHKMsK8A", "percentComplete": 16}, {"id": "zVfwTv9q", "percentComplete": 36}], "serviceConfigId": "2Y2KgW3w", "titleId": "mBEFeKVg", "xboxUserId": "WQ9U1XFy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'Bo2rWI5L' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'UpdateXblUserAchievement' test.out

#- 165 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'OKxNQuR9' \
    > test.out 2>&1
eval_tap $? 165 'AnonymizeCampaign' test.out

#- 166 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'F32zVsl4' \
    > test.out 2>&1
eval_tap $? 166 'AnonymizeEntitlement' test.out

#- 167 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'LEA9lgCb' \
    > test.out 2>&1
eval_tap $? 167 'AnonymizeFulfillment' test.out

#- 168 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'nEQCwYr3' \
    > test.out 2>&1
eval_tap $? 168 'AnonymizeIntegration' test.out

#- 169 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'uSt1X7hw' \
    > test.out 2>&1
eval_tap $? 169 'AnonymizeOrder' test.out

#- 170 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId '6p1laIE5' \
    > test.out 2>&1
eval_tap $? 170 'AnonymizePayment' test.out

#- 171 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'DB5pqNHL' \
    > test.out 2>&1
eval_tap $? 171 'AnonymizeSubscription' test.out

#- 172 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'CaXc9p3V' \
    > test.out 2>&1
eval_tap $? 172 'AnonymizeWallet' test.out

#- 173 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'sYjjFsmC' \
    --activeOnly 'true' \
    --appType 'GAME' \
    --entitlementClazz 'CODE' \
    --entitlementName 'xUGI8ISN' \
    --features '["XW3CNvW8", "U38fFRi3", "3YaoPBkz"]' \
    --itemId '["1AtxkZ8r", "Q5dDXHWc", "hafi1KzI"]' \
    --limit '64' \
    --offset '36' \
    > test.out 2>&1
eval_tap $? 173 'QueryUserEntitlements' test.out

#- 174 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1990-03-26T00:00:00Z", "grantedCode": "0GJDS19X", "itemId": "Kj1O3xJc", "itemNamespace": "7BTf4GQy", "language": "JaY_vAGg", "quantity": 70, "region": "FVPu6jNq", "source": "IAP", "startDate": "1982-08-01T00:00:00Z", "storeId": "uWBNk56t"}, {"endDate": "1985-12-01T00:00:00Z", "grantedCode": "GL6gRnQ5", "itemId": "4TycZgMX", "itemNamespace": "bt7Os0IN", "language": "gaKC_UYtR_174", "quantity": 49, "region": "MRpsyf26", "source": "REDEEM_CODE", "startDate": "1986-07-30T00:00:00Z", "storeId": "zo710AJH"}, {"endDate": "1998-09-08T00:00:00Z", "grantedCode": "m0TTaVcu", "itemId": "p095I1Uk", "itemNamespace": "II38K2cW", "language": "zM_YuwE", "quantity": 53, "region": "Qmzh2Yz5", "source": "ACHIEVEMENT", "startDate": "1995-05-20T00:00:00Z", "storeId": "usnK7Mab"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'aS7CJENv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'GrantUserEntitlement' test.out

#- 175 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'SxdP9d7Z' \
    --activeOnly 'false' \
    --appId '9ahZoYpS' \
    > test.out 2>&1
eval_tap $? 175 'GetUserAppEntitlementByAppId' test.out

#- 176 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'ANq30DKK' \
    --activeOnly 'true' \
    --limit '59' \
    --offset '64' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 176 'QueryUserEntitlementsByAppType' test.out

#- 177 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'HInpziCd' \
    --activeOnly 'false' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId '5oTWe0XA' \
    > test.out 2>&1
eval_tap $? 177 'GetUserEntitlementByItemId' test.out

#- 178 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'cTODbBwg' \
    --activeOnly 'true' \
    --entitlementClazz 'MEDIA' \
    --sku 'dNQod5gH' \
    > test.out 2>&1
eval_tap $? 178 'GetUserEntitlementBySku' test.out

#- 179 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'nNO7pcmZ' \
    --appIds '["r9pOjOrW", "aO8g7vGN", "52D5SJhw"]' \
    --itemIds '["wHrEykuW", "vOyFVvVw", "ieX3QAGO"]' \
    --skus '["FodtE2dV", "6dWQOovx", "eqI3KvYq"]' \
    > test.out 2>&1
eval_tap $? 179 'ExistsAnyUserActiveEntitlement' test.out

#- 180 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'AN6HLIie' \
    --itemIds '["h7FyrYD3", "J7Cur2eo", "7XVSkuTv"]' \
    > test.out 2>&1
eval_tap $? 180 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 181 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'bMb1JOJl' \
    --appId 'rNcu2msb' \
    > test.out 2>&1
eval_tap $? 181 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 182 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'N7A6kxzP' \
    --entitlementClazz 'APP' \
    --itemId 'frkEd7rv' \
    > test.out 2>&1
eval_tap $? 182 'GetUserEntitlementOwnershipByItemId' test.out

#- 183 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'hVybCKj2' \
    --ids '["xY9sBSRk", "9oX8KlTd", "PRZWSmP0"]' \
    > test.out 2>&1
eval_tap $? 183 'GetUserEntitlementOwnershipByItemIds' test.out

#- 184 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'wpruUwYj' \
    --entitlementClazz 'CODE' \
    --sku 'FglIVPwq' \
    > test.out 2>&1
eval_tap $? 184 'GetUserEntitlementOwnershipBySku' test.out

#- 185 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '61xdB8e6' \
    --entitlementIds 'FTG0opJK' \
    > test.out 2>&1
eval_tap $? 185 'RevokeUserEntitlements' test.out

#- 186 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'BOLXtYqn' \
    --namespace $AB_NAMESPACE \
    --userId 'TTFxPMTe' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlement' test.out

#- 187 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1994-10-15T00:00:00Z", "nullFieldList": ["MqsvnEIz", "7BtfWulO", "bcATYUyD"], "startDate": "1997-02-23T00:00:00Z", "status": "REVOKED", "useCount": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'HJrVbJD4' \
    --namespace $AB_NAMESPACE \
    --userId 'Smhy9Qeb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateUserEntitlement' test.out

#- 188 ConsumeUserEntitlement
# body param: body
echo '{"options": ["nVS7hmmz", "SALnOGoX", "ofsIciSX"], "useCount": 25}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'j8PQPce7' \
    --namespace $AB_NAMESPACE \
    --userId 'dxLf2UVd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'ConsumeUserEntitlement' test.out

#- 189 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'sSV4EhqZ' \
    --namespace $AB_NAMESPACE \
    --userId 'AkAwHII3' \
    > test.out 2>&1
eval_tap $? 189 'DisableUserEntitlement' test.out

#- 190 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'K2IZxhD5' \
    --namespace $AB_NAMESPACE \
    --userId 'zw022XOB' \
    > test.out 2>&1
eval_tap $? 190 'EnableUserEntitlement' test.out

#- 191 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'A4hc6kiZ' \
    --namespace $AB_NAMESPACE \
    --userId 'e7hioRDP' \
    > test.out 2>&1
eval_tap $? 191 'GetUserEntitlementHistories' test.out

#- 192 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'UoyWkgor' \
    --namespace $AB_NAMESPACE \
    --userId 'd3nFSVst' \
    > test.out 2>&1
eval_tap $? 192 'RevokeUserEntitlement' test.out

#- 193 FulfillItem
# body param: body
echo '{"duration": 82, "endDate": "1975-08-24T00:00:00Z", "itemId": "sefLhTg1", "itemSku": "aDa2lghf", "language": "mH9POrww", "order": {"currency": {"currencyCode": "8FCsceee", "currencySymbol": "z5IxRfTk", "currencyType": "REAL", "decimals": 49, "namespace": "cWcm82Zu"}, "ext": {"TKBtiIsX": {}, "Nx4Tvg2a": {}, "r9wzfgSG": {}}, "free": false}, "orderNo": "rm4wbZd7", "origin": "Xbox", "quantity": 20, "region": "BIyuLPKG", "source": "REDEEM_CODE", "startDate": "1989-10-22T00:00:00Z", "storeId": "1odfx63R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'WlXQmmgw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'FulfillItem' test.out

#- 194 RedeemCode
# body param: body
echo '{"code": "dgPUCxW6", "language": "ha-Iuar", "region": "oI7orUPG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'wXMP6rby' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'RedeemCode' test.out

#- 195 FulfillRewards
# body param: body
echo '{"origin": "Epic", "rewards": [{"currency": {"currencyCode": "5SWQ0RmU", "namespace": "EA1bHqUu"}, "item": {"itemId": "S4Ueja1L", "itemSku": "bZTy33aX", "itemType": "nnCLxvJJ"}, "quantity": 64, "type": "ITEM"}, {"currency": {"currencyCode": "rLLOLKJ1", "namespace": "dNKgNWQg"}, "item": {"itemId": "T64wepWy", "itemSku": "1PCBdlnp", "itemType": "hV3hZPZj"}, "quantity": 15, "type": "CURRENCY"}, {"currency": {"currencyCode": "I0MmLb4Y", "namespace": "6tZc0gv2"}, "item": {"itemId": "foz6P7S0", "itemSku": "npcTfw0E", "itemType": "Fst6N56G"}, "quantity": 34, "type": "ITEM"}], "source": "PROMOTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'yMb7k2YK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'FulfillRewards' test.out

#- 196 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '6YIGBHHf' \
    --endTime 'AhZ1TjX7' \
    --limit '22' \
    --offset '94' \
    --productId 'vZTUzNgn' \
    --startTime 'O82ZOZUd' \
    --status 'VERIFIED' \
    --type 'STADIA' \
    > test.out 2>&1
eval_tap $? 196 'QueryUserIAPOrders' test.out

#- 197 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'fdpiEUAU' \
    > test.out 2>&1
eval_tap $? 197 'QueryAllUserIAPOrders' test.out

#- 198 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "RaJi-PVfQ", "productId": "x693PtVX", "region": "pbaSOBbq", "type": "GOOGLE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'jp0O9YyT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'MockFulfillIAPItem' test.out

#- 199 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'prvTSjsA' \
    --itemId 'SRh6DFoJ' \
    --limit '59' \
    --offset '30' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 199 'QueryUserOrders' test.out

#- 200 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "zXclna7Y", "currencyNamespace": "XDIxOz97", "discountedPrice": 56, "ext": {"CYLxlBnu": {}, "rCpmBqpv": {}, "Ny0owM2q": {}}, "itemId": "niAI2B6m", "language": "kC5Bkh1B", "options": {"skipPriceValidation": true}, "platform": "Xbox", "price": 7, "quantity": 58, "region": "5tNFoujS", "returnUrl": "IMGVc34U", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'fUd7vmV7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'AdminCreateUserOrder' test.out

#- 201 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'SJRAOuLz' \
    --itemId 'B8tTGk8c' \
    > test.out 2>&1
eval_tap $? 201 'CountOfPurchasedItem' test.out

#- 202 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'OOiZIFuu' \
    --userId '5MDKjefc' \
    > test.out 2>&1
eval_tap $? 202 'GetUserOrder' test.out

#- 203 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUND_FAILED", "statusReason": "bnyFncIZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo '9tC0HSDG' \
    --userId '8ey1CxXd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'UpdateUserOrderStatus' test.out

#- 204 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'O3qGUk43' \
    --userId 'kyVhAOW7' \
    > test.out 2>&1
eval_tap $? 204 'FulfillUserOrder' test.out

#- 205 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'mlEbdmV3' \
    --userId 'qLaziAIr' \
    > test.out 2>&1
eval_tap $? 205 'GetUserOrderGrant' test.out

#- 206 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'kpWDBAqi' \
    --userId 'qZWLwJTT' \
    > test.out 2>&1
eval_tap $? 206 'GetUserOrderHistories' test.out

#- 207 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "RspVht8u"}, "authorisedTime": "1979-02-02T00:00:00Z", "chargebackReversedTime": "1986-10-13T00:00:00Z", "chargebackTime": "1984-02-19T00:00:00Z", "chargedTime": "1991-10-13T00:00:00Z", "createdTime": "1971-03-14T00:00:00Z", "currency": {"currencyCode": "Wt4ySOhR", "currencySymbol": "3jAKDyaz", "currencyType": "REAL", "decimals": 43, "namespace": "ABsmvuSN"}, "customParameters": {"F7AdR7sg": {}, "R6dPe6Zu": {}, "r7SYZBQH": {}}, "extOrderNo": "IJtyPBzN", "extTxId": "eZmjxJ4c", "extUserId": "lyClFGEe", "issuedAt": "1996-07-24T00:00:00Z", "metadata": {"zL3haDRc": "pAfzOrHT", "RUJB7iRo": "9mzecKt9", "yP0AphIP": "Je8Csj4f"}, "namespace": "lQpXcXVS", "nonceStr": "KBoJfNTa", "paymentMethod": "gvphowkd", "paymentMethodFee": 41, "paymentOrderNo": "q8FoqJnd", "paymentProvider": "ALIPAY", "paymentProviderFee": 42, "paymentStationUrl": "v7Tld0fE", "price": 10, "refundedTime": "1996-07-24T00:00:00Z", "salesTax": 3, "sandbox": false, "sku": "nvXjDJbE", "status": "CHARGEBACK_REVERSED", "statusReason": "Wjli8J8h", "subscriptionId": "lvdnwIPQ", "subtotalPrice": 1, "targetNamespace": "ogHpZ7cZ", "targetUserId": "J2BJLlt4", "tax": 6, "totalPrice": 3, "totalTax": 13, "txEndTime": "1981-02-11T00:00:00Z", "type": "Rcze4OXW", "userId": "G3EbHiNr", "vat": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'ttyGKOFL' \
    --userId 'hzlVtTQQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'ProcessUserOrderNotification' test.out

#- 208 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'MBBhz2nU' \
    --userId 'quVwatkR' \
    > test.out 2>&1
eval_tap $? 208 'DownloadUserOrderReceipt' test.out

#- 209 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "xEgZ7P9C", "currencyNamespace": "YTKVa9xd", "customParameters": {"hjmSPngH": {}, "aEcD9Xgd": {}, "lZpTSKfZ": {}}, "description": "MqIuxgQv", "extOrderNo": "Bx2NJLQy", "extUserId": "rzFVfj6t", "itemType": "INGAMEITEM", "language": "Pc_DC", "metadata": {"dxgs0IKg": "k7WQZYyr", "zHRkBNAD": "F6Sz0xmS", "C4YT1Cn0": "PqC4V4Ci"}, "notifyUrl": "OLIpD6Xr", "omitNotification": false, "platform": "zbdVOo4i", "price": 55, "recurringPaymentOrderNo": "iAArcllj", "region": "YnoVHYi0", "returnUrl": "zRL2W044", "sandbox": false, "sku": "n2WKOQcM", "subscriptionId": "29Kujyz5", "title": "wNil9rIQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'mhbnisYV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'CreateUserPaymentOrder' test.out

#- 210 RefundUserPaymentOrder
# body param: body
echo '{"description": "tTTRMWJU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qmVce6JY' \
    --userId 'sNBBxTrL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'RefundUserPaymentOrder' test.out

#- 211 ApplyUserRedemption
# body param: body
echo '{"code": "7COH7XHn", "orderNo": "kaYPjEc0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'jlhNWIlt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'ApplyUserRedemption' test.out

#- 212 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'K5VQIeN4' \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId '5Ph78shI' \
    --limit '29' \
    --offset '14' \
    --sku 'zaXa2waU' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 212 'QueryUserSubscriptions' test.out

#- 213 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'M2kVk0gI' \
    --excludeSystem 'false' \
    --limit '18' \
    --offset '94' \
    --subscriptionId 'SAuDdGkn' \
    > test.out 2>&1
eval_tap $? 213 'GetUserSubscriptionActivities' test.out

#- 214 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 6, "itemId": "gaJxao2J", "language": "XukYouW6", "reason": "xdTDKNHe", "region": "y6TRFqG6", "source": "WfHBryI0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '8IFcJrAz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'PlatformSubscribeSubscription' test.out

#- 215 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'je9UeZpo' \
    --itemId '73XMv4yr' \
    > test.out 2>&1
eval_tap $? 215 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 216 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'K7HdZcVh' \
    --userId 'l0IocQC1' \
    > test.out 2>&1
eval_tap $? 216 'GetUserSubscription' test.out

#- 217 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'MLaSj1Xo' \
    --userId '4IQmWH3w' \
    > test.out 2>&1
eval_tap $? 217 'DeleteUserSubscription' test.out

#- 218 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "oHm1AYJS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NW0CmLHc' \
    --userId 'laX7lez8' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'CancelSubscription' test.out

#- 219 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 33, "reason": "RsLXwfq6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'aABJIiIj' \
    --userId '2HBUZMBM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'GrantDaysToSubscription' test.out

#- 220 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '15DZr2t2' \
    --userId 'HtAawoRi' \
    --excludeFree 'false' \
    --limit '16' \
    --offset '92' \
    > test.out 2>&1
eval_tap $? 220 'GetUserSubscriptionBillingHistories' test.out

#- 221 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "IP2MIt80"}, "authorisedTime": "1976-12-11T00:00:00Z", "chargebackReversedTime": "1998-11-29T00:00:00Z", "chargebackTime": "1978-11-26T00:00:00Z", "chargedTime": "1995-12-26T00:00:00Z", "createdTime": "1996-08-08T00:00:00Z", "currency": {"currencyCode": "IGjZmiGF", "currencySymbol": "BZPHt9of", "currencyType": "REAL", "decimals": 39, "namespace": "kS7qzVgH"}, "customParameters": {"BuQBJQYu": {}, "eDXbvrz2": {}, "cKEnOoLG": {}}, "extOrderNo": "FkkZg18s", "extTxId": "iepYw4WI", "extUserId": "2J3yqhz0", "issuedAt": "1985-01-16T00:00:00Z", "metadata": {"HGQhCtjW": "U1qRnULq", "J2lh4PLS": "twlU2nPA", "Tlfb4jv6": "61mMvY8C"}, "namespace": "wTaBzzzK", "nonceStr": "0hjtUqA7", "paymentMethod": "n2YCYFgv", "paymentMethodFee": 39, "paymentOrderNo": "etEvEmm3", "paymentProvider": "ALIPAY", "paymentProviderFee": 23, "paymentStationUrl": "nhV35sgi", "price": 28, "refundedTime": "1991-04-09T00:00:00Z", "salesTax": 46, "sandbox": false, "sku": "ZtGwxEHu", "status": "CHARGED", "statusReason": "979FXzN3", "subscriptionId": "2irSfwOy", "subtotalPrice": 47, "targetNamespace": "Ln9TSi0j", "targetUserId": "bVHygwnI", "tax": 45, "totalPrice": 26, "totalTax": 5, "txEndTime": "1973-05-27T00:00:00Z", "type": "Z8Us53XM", "userId": "gW6PY9AP", "vat": 54}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'tqr50YKh' \
    --userId 'ehZjpAdr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'ProcessUserSubscriptionNotification' test.out

#- 222 AcquireUserTicket
# body param: body
echo '{"count": 38, "orderNo": "Ur6IjC4O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'GGBRYtoi' \
    --namespace $AB_NAMESPACE \
    --userId '2qswqhD7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'AcquireUserTicket' test.out

#- 223 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'VxxEGl4G' \
    > test.out 2>&1
eval_tap $? 223 'QueryUserCurrencyWallets' test.out

#- 224 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode '00mWdavJ' \
    --namespace $AB_NAMESPACE \
    --userId 'fiwj8nMj' \
    --limit '83' \
    --offset '63' \
    > test.out 2>&1
eval_tap $? 224 'ListUserCurrencyTransactions' test.out

#- 225 CheckWallet
eval_tap 0 225 'CheckWallet # SKIP deprecated' test.out

#- 226 CreditUserWallet
# body param: body
echo '{"amount": 100, "expireAt": "1974-01-20T00:00:00Z", "origin": "Other", "reason": "7PeLExcw", "source": "GIFT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'vejfOQHv' \
    --namespace $AB_NAMESPACE \
    --userId 'xF3XHfv4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'CreditUserWallet' test.out

#- 227 PayWithUserWallet
# body param: body
echo '{"amount": 79, "walletPlatform": "Other"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'GGeB8luF' \
    --namespace $AB_NAMESPACE \
    --userId 'l94uF6E3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'PayWithUserWallet' test.out

#- 228 GetUserWallet
eval_tap 0 228 'GetUserWallet # SKIP deprecated' test.out

#- 229 DebitUserWallet
eval_tap 0 229 'DebitUserWallet # SKIP deprecated' test.out

#- 230 DisableUserWallet
eval_tap 0 230 'DisableUserWallet # SKIP deprecated' test.out

#- 231 EnableUserWallet
eval_tap 0 231 'EnableUserWallet # SKIP deprecated' test.out

#- 232 ListUserWalletTransactions
eval_tap 0 232 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 233 QueryWallets
eval_tap 0 233 'QueryWallets # SKIP deprecated' test.out

#- 234 GetWallet
eval_tap 0 234 'GetWallet # SKIP deprecated' test.out

#- 235 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'Ww1YFxP1' \
    --end 'KYvxcX37' \
    --start 'DmcnaMcr' \
    > test.out 2>&1
eval_tap $? 235 'SyncOrders' test.out

#- 236 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["tSXrpgKo", "ti6hiW7m", "XMj2NFdj"], "apiKey": "COVZztAs", "authoriseAsCapture": true, "blockedPaymentMethods": ["xKiT42Lp", "wC3pTO9o", "Utb0sPZz"], "clientKey": "3ShjX1Qe", "dropInSettings": "ZlhpYXe4", "liveEndpointUrlPrefix": "bnjgaIoL", "merchantAccount": "6NKVC3c9", "notificationHmacKey": "SgZk9sJS", "notificationPassword": "N0PQ6YLQ", "notificationUsername": "cTzqUs3y", "returnUrl": "clxvNKqZ", "settings": "6a1vePVr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'TestAdyenConfig' test.out

#- 237 TestAliPayConfig
# body param: body
echo '{"appId": "DiT9fqQH", "privateKey": "xeDEyUQ5", "publicKey": "NbPDASSF", "returnUrl": "JEnSmQQq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'TestAliPayConfig' test.out

#- 238 TestCheckoutConfig
# body param: body
echo '{"publicKey": "a85yvz8M", "secretKey": "hBPTkdC6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'TestCheckoutConfig' test.out

#- 239 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'C0eJwcnj' \
    --region 'cOsrGBeU' \
    > test.out 2>&1
eval_tap $? 239 'DebugMatchedPaymentMerchantConfig' test.out

#- 240 TestPayPalConfig
# body param: body
echo '{"clientID": "49Wfm7gj", "clientSecret": "9qhFTfmf", "returnUrl": "y4PPAT4y", "webHookId": "VxHGw1Fa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'TestPayPalConfig' test.out

#- 241 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["FrDJrcIJ", "gOPySKM4", "5kZZCc6j"], "publishableKey": "X927SsPT", "secretKey": "MttPefbF", "webhookSecret": "K7aYGiC3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'TestStripeConfig' test.out

#- 242 TestWxPayConfig
# body param: body
echo '{"appId": "l4tDrbI5", "key": "jPICosZy", "mchid": "EQaERn6S", "returnUrl": "cjRTi8Gm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'TestWxPayConfig' test.out

#- 243 TestXsollaConfig
# body param: body
echo '{"apiKey": "TPKae39m", "flowCompletionUrl": "1WZqJ58V", "merchantId": 54, "projectId": 61, "projectSecretKey": "9vCpP361"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'TestXsollaConfig' test.out

#- 244 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'zFBmHX4z' \
    > test.out 2>&1
eval_tap $? 244 'GetPaymentMerchantConfig' test.out

#- 245 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["OXStAsap", "jfDvWjeV", "jZbi09TL"], "apiKey": "MP3XWoe3", "authoriseAsCapture": false, "blockedPaymentMethods": ["OwVSwtxD", "iVS98a1N", "1oJIdNh7"], "clientKey": "XSIQM9hQ", "dropInSettings": "BGITm3Ar", "liveEndpointUrlPrefix": "X0niDSoe", "merchantAccount": "iPj8LHRQ", "notificationHmacKey": "4VEsmNaO", "notificationPassword": "de1LAn4s", "notificationUsername": "ClZCmEh5", "returnUrl": "5KX7Ikur", "settings": "OEcN5zOk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'weSTp8pY' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'UpdateAdyenConfig' test.out

#- 246 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'OaqpNmlF' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 246 'TestAdyenConfigById' test.out

#- 247 UpdateAliPayConfig
# body param: body
echo '{"appId": "viMgVh9D", "privateKey": "fBFjGJta", "publicKey": "MulHKpYi", "returnUrl": "sbJWmVWA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'nWgSyr9I' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'UpdateAliPayConfig' test.out

#- 248 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'JU6flogX' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 248 'TestAliPayConfigById' test.out

#- 249 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "mrGfGET1", "secretKey": "RtLP5SqF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'OUPLCyi9' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateCheckoutConfig' test.out

#- 250 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'znhKHJsr' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 250 'TestCheckoutConfigById' test.out

#- 251 UpdatePayPalConfig
# body param: body
echo '{"clientID": "rkP5xgBj", "clientSecret": "YtwsADv7", "returnUrl": "kWX9s8QD", "webHookId": "KR9d5Ml0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'EFXOfsRh' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'UpdatePayPalConfig' test.out

#- 252 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'jcfziBM9' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 252 'TestPayPalConfigById' test.out

#- 253 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["sBlJzbRq", "XAdvFq8v", "nAMJE1bh"], "publishableKey": "Dz3iOIbV", "secretKey": "sWrr10yl", "webhookSecret": "G8zIi5Zw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'vpT8hMz6' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'UpdateStripeConfig' test.out

#- 254 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '5W3zwVKY' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 254 'TestStripeConfigById' test.out

#- 255 UpdateWxPayConfig
# body param: body
echo '{"appId": "MGeC7NIY", "key": "CMJuJNBz", "mchid": "F2Ti6Y5w", "returnUrl": "BF1rfp7X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'XjJmOJE9' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateWxPayConfig' test.out

#- 256 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'KsrhEPXE' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 256 'UpdateWxPayConfigCert' test.out

#- 257 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'VekA4nxD' \
    > test.out 2>&1
eval_tap $? 257 'TestWxPayConfigById' test.out

#- 258 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "2n1XaXsE", "flowCompletionUrl": "0fy9GmKJ", "merchantId": 60, "projectId": 77, "projectSecretKey": "ON3i3jOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'wmNhSRWD' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'UpdateXsollaConfig' test.out

#- 259 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'DINa92Rx' \
    > test.out 2>&1
eval_tap $? 259 'TestXsollaConfigById' test.out

#- 260 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "MEDIUM", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'oWezHWws' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'UpdateXsollaUIConfig' test.out

#- 261 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '75' \
    --namespace_ 'zZ8nAJw4' \
    --offset '93' \
    --region 'bxc2sh1C' \
    > test.out 2>&1
eval_tap $? 261 'QueryPaymentProviderConfig' test.out

#- 262 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "uHwisnlg", "region": "76Te5exF", "sandboxTaxJarApiToken": "sT56BBxW", "specials": ["WXPAY", "WXPAY", "WXPAY"], "taxJarApiToken": "vK9eTdJd", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'CreatePaymentProviderConfig' test.out

#- 263 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 263 'GetAggregatePaymentProviders' test.out

#- 264 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'FxeXCiBF' \
    --region 'o4DwzS8d' \
    > test.out 2>&1
eval_tap $? 264 'DebugMatchedPaymentProviderConfig' test.out

#- 265 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 265 'GetSpecialPaymentProviders' test.out

#- 266 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "CD4tYrwN", "region": "WYrcK9vU", "sandboxTaxJarApiToken": "qCSuiKne", "specials": ["PAYPAL", "STRIPE", "XSOLLA"], "taxJarApiToken": "k1gIxlkQ", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'zKGd7mhR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'UpdatePaymentProviderConfig' test.out

#- 267 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'dxSNtnFJ' \
    > test.out 2>&1
eval_tap $? 267 'DeletePaymentProviderConfig' test.out

#- 268 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 268 'GetPaymentTaxConfig' test.out

#- 269 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "HWMja81n", "taxJarApiToken": "gIIyc1AL", "taxJarEnabled": true, "taxJarProductCodesMapping": {"Zfhk8TS6": "79Q6sA7w", "kuT34GTY": "whKQBpoj", "I3wjbyM0": "mDouA5u4"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'UpdatePaymentTaxConfig' test.out

#- 270 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'RepjJkx3' \
    --end '5hs0Xxx5' \
    --start 'L7HHCy9E' \
    > test.out 2>&1
eval_tap $? 270 'SyncPaymentOrders' test.out

#- 271 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'f4FlIhYi' \
    --storeId 'aU2SwNg7' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetRootCategories' test.out

#- 272 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'eKWS1t6A' \
    --storeId 'JcIZ1OL5' \
    > test.out 2>&1
eval_tap $? 272 'DownloadCategories' test.out

#- 273 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'J0MKLdEt' \
    --namespace $AB_NAMESPACE \
    --language 'Ij9aaKtl' \
    --storeId 'o4JdW4s1' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCategory' test.out

#- 274 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'nZtS7K4B' \
    --namespace $AB_NAMESPACE \
    --language 'lLfv3Zss' \
    --storeId '2QL7upMs' \
    > test.out 2>&1
eval_tap $? 274 'PublicGetChildCategories' test.out

#- 275 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'xBCWOxes' \
    --namespace $AB_NAMESPACE \
    --language '3O56VD3Z' \
    --storeId 'b2VtKH4V' \
    > test.out 2>&1
eval_tap $? 275 'PublicGetDescendantCategories' test.out

#- 276 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 276 'PublicListCurrencies' test.out

#- 277 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'e1Lry2kO' \
    --region 'T4g4fmYg' \
    --storeId '2pTFWDFQ' \
    --appId 'DMHLXbeI' \
    > test.out 2>&1
eval_tap $? 277 'PublicGetItemByAppId' test.out

#- 278 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --baseAppId 'w4iKY9uh' \
    --categoryPath 'NrBCIC8G' \
    --features 'NosMc2mi' \
    --itemType 'SEASON' \
    --language 'OYmeWjr4' \
    --limit '84' \
    --offset '20' \
    --region 'UrGFqTP1' \
    --sortBy '["updatedAt", "createdAt:asc", "updatedAt:asc"]' \
    --storeId '5HaSBF7W' \
    --tags 'mTlB7RZo' \
    > test.out 2>&1
eval_tap $? 278 'PublicQueryItems' test.out

#- 279 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'TCb35oPU' \
    --region 'Uep7ev6L' \
    --storeId '9DZVTcxc' \
    --sku 'n8pjrQLy' \
    > test.out 2>&1
eval_tap $? 279 'PublicGetItemBySku' test.out

#- 280 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'MTyWqE8l' \
    --region 'isD6leff' \
    --storeId 'qbCjsavJ' \
    --itemIds 'O7SSSoWB' \
    > test.out 2>&1
eval_tap $? 280 'PublicBulkGetItems' test.out

#- 281 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["wTX8Emiu", "vigUJ6gb", "M0H8TU82"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PublicValidateItemPurchaseCondition' test.out

#- 282 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'COINS' \
    --limit '14' \
    --offset '99' \
    --region 'ifYQ5Knb' \
    --storeId '9hg8dxCe' \
    --keyword 'i2PBpIls' \
    --language 'UcA3LMZt' \
    > test.out 2>&1
eval_tap $? 282 'PublicSearchItems' test.out

#- 283 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'QRk8OISp' \
    --namespace $AB_NAMESPACE \
    --language 'VkGzU8Mt' \
    --region 'pb00ZAMy' \
    --storeId 'nadId5PN' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetApp' test.out

#- 284 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'QFbkl9eJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 284 'PublicGetItemDynamicData' test.out

#- 285 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'asfyiPKS' \
    --namespace $AB_NAMESPACE \
    --language 'g72L83oa' \
    --populateBundle 'false' \
    --region 'yI8FwZ71' \
    --storeId 'sjgtbkT5' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetItem' test.out

#- 286 GetPaymentCustomization
eval_tap 0 286 'GetPaymentCustomization # SKIP deprecated' test.out

#- 287 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "UsBAas8L", "paymentProvider": "CHECKOUT", "returnUrl": "yrzZQOf5", "ui": "IwlIsTuD", "zipCode": "3qLFgdBw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicGetPaymentUrl' test.out

#- 288 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'KBPNPgBj' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetPaymentMethods' test.out

#- 289 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'xkfrn3Ah' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetUnpaidPaymentOrder' test.out

#- 290 Pay
# body param: body
echo '{"token": "SqEJXjw1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'gTem6UOC' \
    --paymentProvider 'CHECKOUT' \
    --zipCode 't2Zwfrqw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'Pay' test.out

#- 291 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'jfghx2Y2' \
    > test.out 2>&1
eval_tap $? 291 'PublicCheckPaymentOrderPaidStatus' test.out

#- 292 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'ALIPAY' \
    --region 'QnidutiO' \
    > test.out 2>&1
eval_tap $? 292 'GetPaymentPublicConfig' test.out

#- 293 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'jrI8UqK6' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetQRCode' test.out

#- 294 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'QPgIMT0j' \
    --foreinginvoice 'jzbeDLBQ' \
    --invoiceId 'NACJ7I5R' \
    --payload 'IoK3JmGm' \
    --redirectResult 'j0WVb0Tx' \
    --resultCode 'yPd7mYmg' \
    --sessionId 'sQ8bqGBc' \
    --status 'Hi7wXCQS' \
    --token 'ad7wk0rW' \
    --type 'UFoOy6AC' \
    --userId 'XroGyO8y' \
    --orderNo 'rNeibzcR' \
    --paymentOrderNo 'vjelWq4c' \
    --paymentProvider 'ALIPAY' \
    --returnUrl 'C3RX0mOu' \
    > test.out 2>&1
eval_tap $? 294 'PublicNormalizePaymentReturnUrl' test.out

#- 295 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'L2f1NaIf' \
    --paymentOrderNo 'Bm3YhfKK' \
    --paymentProvider 'XSOLLA' \
    > test.out 2>&1
eval_tap $? 295 'GetPaymentTaxValue' test.out

#- 296 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode '38r54lwa' \
    > test.out 2>&1
eval_tap $? 296 'GetRewardByCode' test.out

#- 297 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic '9E4SKo1n' \
    --limit '45' \
    --offset '95' \
    --sortBy '["namespace:desc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 297 'QueryRewards1' test.out

#- 298 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'tpGoQnav' \
    > test.out 2>&1
eval_tap $? 298 'GetReward1' test.out

#- 299 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 299 'PublicListStores' test.out

#- 300 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["HmOsgCTX", "ZOBczI4V", "V3BMxWeT"]' \
    --itemIds '["XhLPJsp6", "vr7fcnWW", "KoiMOWLk"]' \
    --skus '["OHDsGMlZ", "8x3u7txJ", "MdYBmpk4"]' \
    > test.out 2>&1
eval_tap $? 300 'PublicExistsAnyMyActiveEntitlement' test.out

#- 301 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'Vul0nyZV' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 302 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'APP' \
    --itemId 'rlrjspQl' \
    > test.out 2>&1
eval_tap $? 302 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 303 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --sku 'VLEfHyqb' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 304 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["XfvMmwWi", "91K5vcQp", "IA7bRTlq"]' \
    --itemIds '["TkBD3Nw9", "PzKepYj9", "ZHtc5ntM"]' \
    --skus '["JdKW8SYw", "2YPIykAq", "SqLU7sUO"]' \
    > test.out 2>&1
eval_tap $? 304 'PublicGetEntitlementOwnershipToken' test.out

#- 305 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'hn2MK8Y9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 305 'PublicGetMyWallet' test.out

#- 306 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "jsdLI7oR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'R7EDvKWL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'SyncEpicGameDLC' test.out

#- 307 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 56}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'b9WEdBgj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicSyncPsnDlcInventory' test.out

#- 308 SyncSteamDLC
# body param: body
echo '{"appId": "I9Qx1nh5", "steamId": "bONQhyvf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId '1xb86FUD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'SyncSteamDLC' test.out

#- 309 SyncXboxDLC
# body param: body
echo '{"xstsToken": "CBp7kUZW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'e4gZx8h4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'SyncXboxDLC' test.out

#- 310 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'VcGanesf' \
    --appType 'DLC' \
    --entitlementClazz 'APP' \
    --entitlementName 'TuF8xA6P' \
    --features '["fxnexl5N", "ecZzqV7s", "uZdO3S9H"]' \
    --itemId '["lQFaVzeC", "JM5EkhXE", "9JowpjAc"]' \
    --limit '31' \
    --offset '63' \
    > test.out 2>&1
eval_tap $? 310 'PublicQueryUserEntitlements' test.out

#- 311 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'YTpgkXgq' \
    --appId 'X7YMx1WB' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetUserAppEntitlementByAppId' test.out

#- 312 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'vhe3Z7Xx' \
    --limit '39' \
    --offset '39' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 312 'PublicQueryUserEntitlementsByAppType' test.out

#- 313 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'jCn94Kk2' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'IQoHwG2p' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserEntitlementByItemId' test.out

#- 314 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '1pZWpiNN' \
    --entitlementClazz 'MEDIA' \
    --sku 'esZ08mFq' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetUserEntitlementBySku' test.out

#- 315 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'BmLRBjyE' \
    --appIds '["FgEOyhcH", "thpXcHXp", "8ZIpS1Fp"]' \
    --itemIds '["jec9C3Dh", "FStg8DLF", "yKmYCHxP"]' \
    --skus '["TPlMwqwu", "AgYGXHYA", "T90hxnvW"]' \
    > test.out 2>&1
eval_tap $? 315 'PublicExistsAnyUserActiveEntitlement' test.out

#- 316 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'JWFzKpot' \
    --appId 'ytIHR2Bs' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 317 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Bqtdi5BF' \
    --entitlementClazz 'MEDIA' \
    --itemId 'X94AlzCb' \
    > test.out 2>&1
eval_tap $? 317 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 318 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'BAqGBjaI' \
    --ids '["DXU5HRf5", "kKxncfN8", "KA0StzbS"]' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 319 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ZhL7clCg' \
    --entitlementClazz 'CODE' \
    --sku '2HiF4xYi' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 320 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'JYDHRMrU' \
    --namespace $AB_NAMESPACE \
    --userId 'JjqrOPDU' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetUserEntitlement' test.out

#- 321 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["xVUCQuwd", "miHl1GAs", "nyI5N7EJ"], "useCount": 38}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'XeV9wuqw' \
    --namespace $AB_NAMESPACE \
    --userId '2blJdO81' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'PublicConsumeUserEntitlement' test.out

#- 322 PublicRedeemCode
# body param: body
echo '{"code": "b9VVsz6e", "language": "dU_654", "region": "kbjwx5Tk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'sugzWLUH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicRedeemCode' test.out

#- 323 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "vd-jEna", "productId": "JhnKhLmk", "receiptData": "EmUelXMi", "region": "pWuSui9T", "transactionId": "WX9qfVq6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '0Y9caMsU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'PublicFulfillAppleIAPItem' test.out

#- 324 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "GJVYOd5h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'fHD9G5zi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'SyncEpicGamesInventory' test.out

#- 325 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "Fwf", "orderId": "qOHx3atV", "packageName": "i8BjrMWA", "productId": "UAeoFyEI", "purchaseTime": 98, "purchaseToken": "dYZFUPQM", "region": "DCCXfV5G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'nevHokTr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'PublicFulfillGoogleIAPItem' test.out

#- 326 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "t3Ia93lD", "price": 0.43585175040267676, "productId": "AQGmvLy2", "serviceLabel": 7}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'hjJ7P3a6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'PublicReconcilePlayStationStore' test.out

#- 327 SyncStadiaEntitlement
# body param: body
echo '{"appId": "Wdptmmlw", "language": "Khr", "region": "cxS62kGR", "stadiaPlayerId": "P2tOW6gp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'qHMJixej' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'SyncStadiaEntitlement' test.out

#- 328 SyncSteamInventory
# body param: body
echo '{"appId": "QWubVpLT", "currencyCode": "hp84KUWf", "language": "mDJq-AOFJ", "price": 0.5600841243521696, "productId": "EwDrEai6", "region": "jhL5Je87", "steamId": "hkfd8Mha"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'lKZXAub6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'SyncSteamInventory' test.out

#- 329 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "bQvsvmwX", "language": "eh", "region": "bWp0SHXi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'GqnvUmZS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'SyncTwitchDropsEntitlement' test.out

#- 330 SyncXboxInventory
# body param: body
echo '{"currencyCode": "rr2YC7sk", "price": 0.4845348753198828, "productId": "wrGnd40x", "xstsToken": "XeNrreV5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'hUbH3Z01' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'SyncXboxInventory' test.out

#- 331 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '9Qxkfdk3' \
    --itemId 'uFueTNGE' \
    --limit '97' \
    --offset '89' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 331 'PublicQueryUserOrders' test.out

#- 332 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "nCw2y6Np", "discountedPrice": 10, "ext": {"D0ZST9Cv": {}, "hngPSrXv": {}, "gUq5RTF1": {}}, "itemId": "pu7VfswQ", "language": "OsCh_Em", "price": 3, "quantity": 17, "region": "dgHm2Uaj", "returnUrl": "osUrmPQj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Pnvgw0nm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicCreateUserOrder' test.out

#- 333 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'GRL9i2Kc' \
    --userId '4L6IIZrd' \
    > test.out 2>&1
eval_tap $? 333 'PublicGetUserOrder' test.out

#- 334 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'i1KkQYcK' \
    --userId 'rN5KodCz' \
    > test.out 2>&1
eval_tap $? 334 'PublicCancelUserOrder' test.out

#- 335 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'YMDwUltr' \
    --userId '1rI69yVC' \
    > test.out 2>&1
eval_tap $? 335 'PublicGetUserOrderHistories' test.out

#- 336 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'LWlOfElA' \
    --userId 'VAoMWzD1' \
    > test.out 2>&1
eval_tap $? 336 'PublicDownloadUserOrderReceipt' test.out

#- 337 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'u4GUjeRK' \
    > test.out 2>&1
eval_tap $? 337 'PublicGetPaymentAccounts' test.out

#- 338 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'kOZJLO6o' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'HfL7eEO2' \
    > test.out 2>&1
eval_tap $? 338 'PublicDeletePaymentAccount' test.out

#- 339 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'iq7P9GVR' \
    --chargeStatus 'NEVER' \
    --itemId 'CMFyKngX' \
    --limit '62' \
    --offset '94' \
    --sku 'UZgOTB7b' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 339 'PublicQueryUserSubscriptions' test.out

#- 340 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "15pNQ5xX", "itemId": "NnVzo4nD", "language": "lo_RXkI", "region": "suMAMAiE", "returnUrl": "iUz1uNYt", "source": "hKVxb8MM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '4B4BXQjp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'PublicSubscribeSubscription' test.out

#- 341 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '4hJbEwSF' \
    --itemId 'buWhmM4e' \
    > test.out 2>&1
eval_tap $? 341 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 342 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '3d68gu3l' \
    --userId 'Qpod6IaP' \
    > test.out 2>&1
eval_tap $? 342 'PublicGetUserSubscription' test.out

#- 343 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'VUpsQdq0' \
    --userId 'dnx8UXwC' \
    > test.out 2>&1
eval_tap $? 343 'PublicChangeSubscriptionBillingAccount' test.out

#- 344 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "8M6GCSRf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'sk2Duwe6' \
    --userId 'jDmiYjrJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'PublicCancelSubscription' test.out

#- 345 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'bOIJjawj' \
    --userId 'GgUT0Rqu' \
    --excludeFree 'false' \
    --limit '92' \
    --offset '22' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserSubscriptionBillingHistories' test.out

#- 346 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'Z1eQYZEi' \
    --namespace $AB_NAMESPACE \
    --userId '2PwaNyzI' \
    > test.out 2>&1
eval_tap $? 346 'PublicGetWallet' test.out

#- 347 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'mhpdJQlT' \
    --namespace $AB_NAMESPACE \
    --userId 'Pn1d8ttV' \
    --limit '7' \
    --offset '22' \
    > test.out 2>&1
eval_tap $? 347 'PublicListUserWalletTransactions' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE