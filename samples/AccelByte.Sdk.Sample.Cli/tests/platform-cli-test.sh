#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..396"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "bBuz5zko", "appType": "DEMO", "baseAppId": "ZgIhwb8Y", "boothName": "YMLqpQwk", "boundItemIds": ["lNJKxhPf", "RRHkaiKs", "mIiRLR3I"], "categoryPath": "WV6dIabc", "clazz": "FbSmeuIB", "createdAt": "1980-05-01T00:00:00Z", "description": "oQWoXFeq", "displayOrder": 10, "entitlementType": "DURABLE", "ext": {"uI2oMJ0c": {}, "gAoGfXep": {}, "E3r5AQUB": {}}, "features": ["qS8KtTYZ", "LJ58QqcV", "3IcuNs9M"], "fresh": false, "images": [{"as": "5BT2KD18", "caption": "yrWorpC6", "height": 99, "imageUrl": "Lfle8ESU", "smallImageUrl": "1MO8XnVa", "width": 62}, {"as": "WvKa5Ou1", "caption": "24TsbQsx", "height": 25, "imageUrl": "FxGGHrfQ", "smallImageUrl": "kgXkiA5I", "width": 54}, {"as": "PqCqp9vc", "caption": "yt67WAfW", "height": 75, "imageUrl": "fUfwGB03", "smallImageUrl": "tz8qIH4u", "width": 89}], "itemId": "14ID5l5w", "itemIds": ["j6K2wEMn", "ckjlW6By", "wsSSZTGl"], "itemQty": {"ubsmhjXc": 92, "tj8FOvKZ": 18, "O7tbkTGY": 75}, "itemType": "EXTENSION", "language": "7LzPoORB", "listable": false, "localExt": {"MrSdaFy0": {}, "pJYCdfkf": {}, "yt09ro5f": {}}, "longDescription": "HdWqJTNj", "lootBoxConfig": {"rewardCount": 37, "rewards": [{"lootBoxItems": [{"count": 26, "itemId": "BsdSSVaA", "itemSku": "zzn4Gbgk", "itemType": "KeCaS6qy"}, {"count": 97, "itemId": "q4Hf32SL", "itemSku": "5PjaYEDx", "itemType": "aYN8w9KU"}, {"count": 99, "itemId": "sNM7YAnb", "itemSku": "q4DjmYUM", "itemType": "hD9qU89D"}], "name": "356pVsUt", "odds": 0.6446539557983753, "type": "PROBABILITY_GROUP", "weight": 87}, {"lootBoxItems": [{"count": 27, "itemId": "UrA0WWyK", "itemSku": "l2K5mCSo", "itemType": "GeQCahco"}, {"count": 47, "itemId": "Hfof2Hwi", "itemSku": "7vg3osbh", "itemType": "0fL2h7eJ"}, {"count": 43, "itemId": "jNmbfoW8", "itemSku": "bDq5jPqz", "itemType": "hN0YdGSr"}], "name": "A9LXRwU6", "odds": 0.7811126720966747, "type": "REWARD_GROUP", "weight": 26}, {"lootBoxItems": [{"count": 12, "itemId": "50xCDlPe", "itemSku": "Nq0CvMXt", "itemType": "yUWXrdZa"}, {"count": 65, "itemId": "vG8uQ14A", "itemSku": "hsxaALiB", "itemType": "wpNJornr"}, {"count": 58, "itemId": "7NjUZ95Z", "itemSku": "5XDLBN9Y", "itemType": "GVPtkjt0"}], "name": "OyBlJi4R", "odds": 0.024896033418922325, "type": "REWARD_GROUP", "weight": 70}], "rollFunction": "DEFAULT"}, "maxCount": 23, "maxCountPerUser": 26, "name": "w3veBfrp", "namespace": "CrnbaxhE", "optionBoxConfig": {"boxItems": [{"count": 43, "itemId": "AqUNFDtX", "itemSku": "nXLvOAsW", "itemType": "8wYh4gq7"}, {"count": 32, "itemId": "PRg95m07", "itemSku": "l03vtlMF", "itemType": "zeiMRkcO"}, {"count": 35, "itemId": "i4XaBTgo", "itemSku": "XjfdUQHa", "itemType": "3RxspSqw"}]}, "purchasable": false, "purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 25, "comparison": "isGreaterThanOrEqual", "name": "cMY617HS", "predicateType": "SeasonPassPredicate", "value": "W9fgo69u", "values": ["mbC9UqYd", "YrdxNnuM", "v1bkFx8D"]}, {"anyOf": 4, "comparison": "isLessThanOrEqual", "name": "PEBP8kSS", "predicateType": "SeasonTierPredicate", "value": "etxObeis", "values": ["J6fs3zL9", "H4WxGWRH", "ZelKuD0i"]}, {"anyOf": 11, "comparison": "includes", "name": "z4BdPhLt", "predicateType": "SeasonTierPredicate", "value": "nsa3MZF7", "values": ["uJTVjKQ1", "ORLEIAeP", "DTswnkSy"]}]}, {"operator": "or", "predicates": [{"anyOf": 17, "comparison": "isNot", "name": "WxIAxfvL", "predicateType": "SeasonPassPredicate", "value": "k10b27Rd", "values": ["erPYQ5yV", "U8VceYQ9", "cQuvDbGM"]}, {"anyOf": 33, "comparison": "isLessThan", "name": "bEHkCQwM", "predicateType": "SeasonPassPredicate", "value": "nUyCMEbH", "values": ["4Suj6DjU", "w36GtZ83", "h1uE4DmJ"]}, {"anyOf": 72, "comparison": "isGreaterThan", "name": "p2f9f1FC", "predicateType": "EntitlementPredicate", "value": "9oGVEdC8", "values": ["G6OrPH6Z", "mQir1Af0", "sjpPgHKI"]}]}, {"operator": "and", "predicates": [{"anyOf": 68, "comparison": "isLessThan", "name": "JdzYS9K0", "predicateType": "SeasonTierPredicate", "value": "vwE6MAqP", "values": ["VmrtRlq1", "wxyqQQIX", "c8lGIYWT"]}, {"anyOf": 19, "comparison": "isLessThan", "name": "62yI9g5R", "predicateType": "SeasonPassPredicate", "value": "l3gYx6Xm", "values": ["mWZjTYM9", "3k3skhn3", "v1DzPHux"]}, {"anyOf": 82, "comparison": "includes", "name": "YRTYSaZw", "predicateType": "SeasonTierPredicate", "value": "rNRVdygf", "values": ["KmUkzj9m", "HFpff2vD", "kz68zorE"]}]}]}, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 42, "fixedTrialCycles": 6, "graceDays": 27}, "region": "Exv9nKMO", "regionData": [{"currencyCode": "gO5W8SUa", "currencyNamespace": "ZjCpNtJS", "currencyType": "VIRTUAL", "discountAmount": 25, "discountExpireAt": "1982-12-20T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1997-08-25T00:00:00Z", "discountedPrice": 3, "expireAt": "1975-06-10T00:00:00Z", "price": 7, "purchaseAt": "1993-10-23T00:00:00Z", "trialPrice": 46}, {"currencyCode": "2r4wWs6I", "currencyNamespace": "pYBxafo9", "currencyType": "REAL", "discountAmount": 24, "discountExpireAt": "1983-10-22T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1983-11-01T00:00:00Z", "discountedPrice": 81, "expireAt": "1973-04-18T00:00:00Z", "price": 19, "purchaseAt": "1982-05-29T00:00:00Z", "trialPrice": 69}, {"currencyCode": "w270pMmO", "currencyNamespace": "QJrpEBbV", "currencyType": "VIRTUAL", "discountAmount": 44, "discountExpireAt": "1984-07-20T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1985-11-06T00:00:00Z", "discountedPrice": 74, "expireAt": "1980-02-13T00:00:00Z", "price": 3, "purchaseAt": "1999-05-22T00:00:00Z", "trialPrice": 33}], "saleConfig": {"currencyCode": "Vo20e6PO", "price": 94}, "seasonType": "TIER", "sectionExclusive": false, "sellable": true, "sku": "rinAVVov", "stackable": true, "status": "ACTIVE", "tags": ["mX3lLFeX", "AAXNzcpb", "CiaXP8jB"], "targetCurrencyCode": "jK81t2V9", "targetItemId": "TVauFcGk", "targetNamespace": "PgQ0hb2t", "thumbnailUrl": "LrsMeoZi", "title": "RYkbhEM1", "updatedAt": "1984-12-25T00:00:00Z", "useCount": 93}, "namespace": "rReRajlp", "order": {"currency": {"currencyCode": "k8lfuiJV", "currencySymbol": "cktlx9zJ", "currencyType": "REAL", "decimals": 97, "namespace": "8jPtKHTm"}, "ext": {"zo0JmcQm": {}, "nsUigVyn": {}, "jGFyVicG": {}}, "free": false}, "source": "PURCHASE"}, "script": "IXO2EUsA", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'smC0RuRA' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "8j1AJ3hN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'WWhADRqJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'vaZrf2qX' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "QFCzRV1p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'aELj5dw3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "LK0gPYhP", "dryRun": false, "fulfillmentUrl": "G5sAIfYt", "itemType": "APP", "purchaseConditionUrl": "ozA2OntG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'CwQSHHdP' \
    --itemType 'SEASON' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'uAoED9oY' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "wS8oLyEr", "dryRun": true, "fulfillmentUrl": "vRtHFGJR", "purchaseConditionUrl": "oGW7VBG1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'VB2sp2x9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'mszGGoyh' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '67' \
    --name 'cqpVdINX' \
    --offset '51' \
    --tag 'TLwSH8hW' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "RU9pbItG", "items": [{"extraSubscriptionDays": 86, "itemId": "Ox7eICka", "itemName": "uWbFrSnU", "quantity": 6}, {"extraSubscriptionDays": 67, "itemId": "1Buhdwli", "itemName": "TSDdmGVf", "quantity": 8}, {"extraSubscriptionDays": 18, "itemId": "giD3mrVQ", "itemName": "aUr3oT88", "quantity": 61}], "maxRedeemCountPerCampaignPerUser": 83, "maxRedeemCountPerCode": 11, "maxRedeemCountPerCodePerUser": 17, "maxSaleCount": 5, "name": "2cpajtqc", "redeemEnd": "1996-03-15T00:00:00Z", "redeemStart": "1984-12-03T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["VDg5v71k", "GCEt7h1m", "VwIQCJmQ"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '1XT2ErwI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "xkaTnYtr", "items": [{"extraSubscriptionDays": 83, "itemId": "YDnaXB0J", "itemName": "OS4XKVT6", "quantity": 4}, {"extraSubscriptionDays": 37, "itemId": "ONCaOyAT", "itemName": "BFgqLeAz", "quantity": 43}, {"extraSubscriptionDays": 85, "itemId": "dcUEhWRo", "itemName": "6ROvbuPQ", "quantity": 45}], "maxRedeemCountPerCampaignPerUser": 43, "maxRedeemCountPerCode": 23, "maxRedeemCountPerCodePerUser": 87, "maxSaleCount": 50, "name": "dVfJQGkD", "redeemEnd": "1993-10-27T00:00:00Z", "redeemStart": "1998-10-11T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["fXsbnEzH", "iRs0NmGh", "xv1vuN7X"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'v6OuG6RR' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId '1jPh8Rbl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'vnfNiABR' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "f1gdXM7Q", "localizationDisplayNames": {"lAlnjAfg": "xOdZdf9t", "LHO1qrNy": "hmUEADcz", "zrL31HuY": "KsCBBgwb"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '1hGjHJgx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'rcEvnfJq' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'U4hCv5eg' \
    --namespace $AB_NAMESPACE \
    --storeId 'SQDePKSZ' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"Kp6zwDQS": "1atvJrAL", "aiplJgRh": "edl5Ewh3", "jDayYStU": "iBB1yz3i"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'P8gH88Ue' \
    --namespace $AB_NAMESPACE \
    --storeId 'nlMVzIOP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath '8NOf91Ls' \
    --namespace $AB_NAMESPACE \
    --storeId 'D7cWWOgA' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 's8ThMpAG' \
    --namespace $AB_NAMESPACE \
    --storeId 'IapYftYZ' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'kBXiEhdi' \
    --namespace $AB_NAMESPACE \
    --storeId 'S41VBAEU' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'voBlbH02' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '32' \
    --code 'obxtljIf' \
    --limit '68' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 56}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'eTIQix1F' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'EvzlipE7' \
    --namespace $AB_NAMESPACE \
    --batchNo '36' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'fXO3HkJT' \
    --namespace $AB_NAMESPACE \
    --batchNo '83' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId '772Aopmj' \
    --namespace $AB_NAMESPACE \
    --batchNo '71' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId '5C1zEnAM' \
    --namespace $AB_NAMESPACE \
    --code 'GmFy7w6e' \
    --limit '34' \
    --offset '59' \
    --userId 'nMeKFo7U' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code '8Scr9xm6' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '0I9GqAhh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'jNIivdIc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 GetServicePluginConfig
$CLI_EXE \
    --sn platform \
    --op GetServicePluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetServicePluginConfig' test.out

#- 37 UpdateServicePluginConfig
# body param: body
echo '{"grpcServerAddress": "aEQfNETQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateServicePluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateServicePluginConfig' test.out

#- 38 DeleteServicePluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteServicePluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteServicePluginConfig' test.out

#- 39 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 39 'ListCurrencies' test.out

#- 40 CreateCurrency
# body param: body
echo '{"currencyCode": "FQsca6n9", "currencySymbol": "vGZTCCXQ", "currencyType": "REAL", "decimals": 50, "localizationDescriptions": {"7jtexB61": "3cbiJEUe", "PVZQaoEY": "2zrpLuvr", "x96OOz45": "vMiR3QYZ"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCurrency' test.out

#- 41 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"JKVNlK8P": "TaIXRWFT", "yA9MDnKG": "Xqq7Zk70", "5hOhenJi": "6dNVF7zw"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'jXqlcD2L' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'UpdateCurrency' test.out

#- 42 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'zaOwIF5t' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DeleteCurrency' test.out

#- 43 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'EsCwoAVc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetCurrencyConfig' test.out

#- 44 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'ZCSj80gz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'GetCurrencySummary' test.out

#- 45 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetDLCItemConfig' test.out

#- 46 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "FvpvIerF", "rewards": [{"currency": {"currencyCode": "EyxTugoT", "namespace": "d50RmJFX"}, "item": {"itemId": "9v4GPfyG", "itemSku": "uQ2UEl0U", "itemType": "5Z9UnQmZ"}, "quantity": 33, "type": "CURRENCY"}, {"currency": {"currencyCode": "15hBb4dl", "namespace": "NTIBDtHu"}, "item": {"itemId": "nwNLLfKC", "itemSku": "QKuu2MWX", "itemType": "pEpNjHWP"}, "quantity": 4, "type": "ITEM"}, {"currency": {"currencyCode": "FSnM7GAv", "namespace": "k19sXDis"}, "item": {"itemId": "h7KUVhmA", "itemSku": "wmAygsnn", "itemType": "8pM7l6v0"}, "quantity": 10, "type": "CURRENCY"}]}, {"id": "xE68dzoh", "rewards": [{"currency": {"currencyCode": "xhbej2ca", "namespace": "IIfkXDY7"}, "item": {"itemId": "jnhp3qY6", "itemSku": "T7TUEBot", "itemType": "SNIwGhia"}, "quantity": 93, "type": "CURRENCY"}, {"currency": {"currencyCode": "1Uy0gArt", "namespace": "DpQE4bOt"}, "item": {"itemId": "oiAjHXcV", "itemSku": "VOsVywU6", "itemType": "uisejapf"}, "quantity": 40, "type": "ITEM"}, {"currency": {"currencyCode": "nTHAsTCZ", "namespace": "a7xE4nwG"}, "item": {"itemId": "KlbPRxfu", "itemSku": "cxoRKFLx", "itemType": "xcL9SyuH"}, "quantity": 2, "type": "ITEM"}]}, {"id": "x0ACteue", "rewards": [{"currency": {"currencyCode": "MOmYP4Sg", "namespace": "xAIQTTKs"}, "item": {"itemId": "dmtHu1dG", "itemSku": "0us7kIWL", "itemType": "cgKgU940"}, "quantity": 26, "type": "ITEM"}, {"currency": {"currencyCode": "CENHEenq", "namespace": "jRSxO9oZ"}, "item": {"itemId": "0fCxLR0G", "itemSku": "fjwCmDrb", "itemType": "DR0Q0ixp"}, "quantity": 33, "type": "ITEM"}, {"currency": {"currencyCode": "CPt1LUaT", "namespace": "vrFaxzOf"}, "item": {"itemId": "G3pTddIA", "itemSku": "0Rt6wM5o", "itemType": "QvTMICtW"}, "quantity": 51, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateDLCItemConfig' test.out

#- 47 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteDLCItemConfig' test.out

#- 48 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetPlatformDLCConfig' test.out

#- 49 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"tVDnhgTG": "XO8Utpwx", "ug8Mpqcz": "RvUdK1uO", "V1ZJTYuH": "pnpVX5u4"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"1xuV7rVe": "i1o9zV6r", "hVfcQmLf": "En5ZUGeY", "lOwODWBA": "z6skHMfl"}}, {"platform": "PSN", "platformDlcIdMap": {"Hjw9KEnx": "8cNfDK45", "zWtwYhRo": "NPwKema6", "caMTOciv": "PAkmP8Aw"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdatePlatformDLCConfig' test.out

#- 50 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeletePlatformDLCConfig' test.out

#- 51 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'tvSR9q6l' \
    --itemId '["5k9BLQMr", "PoTuxdzE", "YAw5VdW0"]' \
    --limit '100' \
    --offset '100' \
    --userId 'AwCs9Y0K' \
    > test.out 2>&1
eval_tap $? 51 'QueryEntitlements' test.out

#- 52 QueryEntitlements1
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements1 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemIds '["LN2N6D6y", "czitn4Ok", "Zfx0Xa6s"]' \
    --limit '14' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 52 'QueryEntitlements1' test.out

#- 53 GrantEntitlements
# body param: body
echo '{"entitlementGrantList": [{"endDate": "1973-04-28T00:00:00Z", "grantedCode": "gAWYz2z4", "itemId": "qSPPQBDF", "itemNamespace": "QsvRHbGT", "language": "lYZ_855", "quantity": 60, "region": "QOfx6HIF", "source": "GIFT", "startDate": "1999-06-27T00:00:00Z", "storeId": "AsKf8UfQ"}, {"endDate": "1979-12-20T00:00:00Z", "grantedCode": "74CqdvfP", "itemId": "AIaPEkCI", "itemNamespace": "XX7WQ3yt", "language": "cgd-004", "quantity": 59, "region": "huiQPU0a", "source": "PROMOTION", "startDate": "1978-10-07T00:00:00Z", "storeId": "B2FWiDu7"}, {"endDate": "1992-11-28T00:00:00Z", "grantedCode": "p8zoRYG8", "itemId": "WKTaUyB0", "itemNamespace": "UyrKKulH", "language": "KNOJ", "quantity": 31, "region": "i5WZ6Zym", "source": "IAP", "startDate": "1973-07-03T00:00:00Z", "storeId": "Zma57V6b"}], "userIds": ["9uLloAA9", "KoetyNPk", "gWcTCN7a"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'GrantEntitlements' test.out

#- 54 RevokeEntitlements
# body param: body
echo '["BIFfeRdn", "Hpse2T7e", "ZwkVrB3G"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeEntitlements \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 54 'RevokeEntitlements' test.out

#- 55 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'SEmVq8Cj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetEntitlement' test.out

#- 56 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '88' \
    --offset '36' \
    --status 'SUCCESS' \
    --userId 'MZFNRw8Y' \
    > test.out 2>&1
eval_tap $? 56 'QueryFulfillmentHistories' test.out

#- 57 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetAppleIAPConfig' test.out

#- 58 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "vLGLnB4x", "password": "fqdHhPHA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateAppleIAPConfig' test.out

#- 59 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteAppleIAPConfig' test.out

#- 60 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetEpicGamesIAPConfig' test.out

#- 61 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "2ZbIvW1o"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdateEpicGamesIAPConfig' test.out

#- 62 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteEpicGamesIAPConfig' test.out

#- 63 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'GetGoogleIAPConfig' test.out

#- 64 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "xENH4MsV", "serviceAccountId": "lbCMc5hx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 64 'UpdateGoogleIAPConfig' test.out

#- 65 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 65 'DeleteGoogleIAPConfig' test.out

#- 66 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 66 'UpdateGoogleP12File' test.out

#- 67 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetIAPItemConfig' test.out

#- 68 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "0W14Skvo", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"ExAllZtP": "zNRiR35C", "Zhclugjy": "DzCPI8ts", "lD0HuRrA": "MzMB9XHH"}}, {"itemIdentity": "kfZgB6Vt", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"qWaae3Sb": "oVKgjsry", "C98whmI5": "koBT6iCu", "Va643kk8": "gvvnsu0A"}}, {"itemIdentity": "Bei0go2w", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"zPHM6kTw": "fu1vSD9g", "ROMknwVR": "JfXHGB1r", "66lbNcbM": "IJEY0Bmp"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdateIAPItemConfig' test.out

#- 69 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeleteIAPItemConfig' test.out

#- 70 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetPlayStationIAPConfig' test.out

#- 71 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "F215jJyc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdatePlaystationIAPConfig' test.out

#- 72 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeletePlaystationIAPConfig' test.out

#- 73 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetSteamIAPConfig' test.out

#- 74 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "JcSyXLzU", "publisherAuthenticationKey": "9Uqk079u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateSteamIAPConfig' test.out

#- 75 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteSteamIAPConfig' test.out

#- 76 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetTwitchIAPConfig' test.out

#- 77 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "hBLl4yz3", "clientSecret": "2RqkNzYS", "organizationId": "NYl4zvyD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateTwitchIAPConfig' test.out

#- 78 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteTwitchIAPConfig' test.out

#- 79 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetXblIAPConfig' test.out

#- 80 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "8SUZv2LF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateXblIAPConfig' test.out

#- 81 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteXblAPConfig' test.out

#- 82 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'FZer6T3W' \
    > test.out 2>&1
eval_tap $? 82 'UpdateXblBPCertFile' test.out

#- 83 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature '7TE5Wdoc' \
    --itemId 'Kzvgr3jB' \
    --itemType 'SUBSCRIPTION' \
    --endTime '2g8Eo7uA' \
    --startTime 'b4HndxqQ' \
    > test.out 2>&1
eval_tap $? 83 'DownloadInvoiceDetails' test.out

#- 84 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'YO14lFR2' \
    --itemId 'YtIb1fuf' \
    --itemType 'LOOTBOX' \
    --endTime 'ylQKcWi0' \
    --startTime 'o5zcWp7N' \
    > test.out 2>&1
eval_tap $? 84 'GenerateInvoiceSummary' test.out

#- 85 SyncInGameItem
# body param: body
echo '{"categoryPath": "iTBI4m6P", "targetItemId": "VEQWCNw7", "targetNamespace": "DHkXx8Nq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'XaR2w60X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'SyncInGameItem' test.out

#- 86 CreateItem
# body param: body
echo '{"appId": "5Vb0TV0x", "appType": "DEMO", "baseAppId": "nmq9UCZb", "boothName": "dVFY3WdZ", "categoryPath": "6luOW977", "clazz": "EgotvOrn", "displayOrder": 89, "entitlementType": "CONSUMABLE", "ext": {"jb5UT6Vf": {}, "5jxoBBg2": {}, "lM3DQXyC": {}}, "features": ["3oKu14sR", "tsnbKAGR", "jkCeuRY0"], "images": [{"as": "TCvAZKiS", "caption": "B7bYvWmb", "height": 95, "imageUrl": "txg98cDF", "smallImageUrl": "1fsD5miA", "width": 48}, {"as": "lfjPI5tf", "caption": "jbyZkYSR", "height": 76, "imageUrl": "FUqNPuW2", "smallImageUrl": "23zuUv8S", "width": 15}, {"as": "KwWgdAib", "caption": "FBESdI0A", "height": 4, "imageUrl": "f7IuLG63", "smallImageUrl": "jl9rYXaE", "width": 65}], "itemIds": ["hEA9ThpS", "byAYJeBC", "rKDcRkI5"], "itemQty": {"LI6UqivH": 30, "WToF03dQ": 94, "i0OxI4DZ": 6}, "itemType": "OPTIONBOX", "listable": false, "localizations": {"0fjN9CwM": {"description": "4qNT3awI", "localExt": {"jWoFCW5B": {}, "TW9laFjs": {}, "d7gSFkIV": {}}, "longDescription": "GnXJLeUd", "title": "D8XNxAko"}, "eHk0BXou": {"description": "yKC6RnO4", "localExt": {"PckO3syH": {}, "JOMlgAqt": {}, "snZlLvEc": {}}, "longDescription": "zKKAyiQv", "title": "93N1fbGo"}, "vPLBpXX8": {"description": "vScPhhho", "localExt": {"eTbxungc": {}, "a58m1uNc": {}, "xsQxrsxb": {}}, "longDescription": "LSv7uFZX", "title": "dW5GyQ2m"}}, "lootBoxConfig": {"rewardCount": 44, "rewards": [{"lootBoxItems": [{"count": 36, "itemId": "eLZEnmSC", "itemSku": "eWTCXfAR", "itemType": "Ux3U3Krf"}, {"count": 34, "itemId": "0MCOROWH", "itemSku": "gnYO9A4N", "itemType": "tX4m0L4B"}, {"count": 67, "itemId": "J8hey5Jm", "itemSku": "uUDlojEc", "itemType": "712JEhS1"}], "name": "VFA1Eo4R", "odds": 0.3783463712098809, "type": "PROBABILITY_GROUP", "weight": 91}, {"lootBoxItems": [{"count": 27, "itemId": "KRmJcE8f", "itemSku": "HWU8tF9T", "itemType": "j5DH9jDJ"}, {"count": 12, "itemId": "WB60eGxK", "itemSku": "adAf6UL9", "itemType": "MkkVf8dH"}, {"count": 73, "itemId": "hGz92mfg", "itemSku": "wfewY0DM", "itemType": "U8QuojVb"}], "name": "8QgdEnIE", "odds": 0.47333753938513734, "type": "REWARD_GROUP", "weight": 85}, {"lootBoxItems": [{"count": 84, "itemId": "Sp024SIh", "itemSku": "nu3h3uK1", "itemType": "jRHhQ2uS"}, {"count": 66, "itemId": "7tXHvtxi", "itemSku": "6EbWHrMr", "itemType": "bpZd2bt6"}, {"count": 85, "itemId": "CNwFDvIh", "itemSku": "dx6Z0l07", "itemType": "ceeKMsQF"}], "name": "yZCXx6V8", "odds": 0.3454643006681968, "type": "PROBABILITY_GROUP", "weight": 73}], "rollFunction": "CUSTOM"}, "maxCount": 20, "maxCountPerUser": 100, "name": "wpCxGEBs", "optionBoxConfig": {"boxItems": [{"count": 4, "itemId": "WpfaSkgX", "itemSku": "o8j70KrU", "itemType": "cPducAeJ"}, {"count": 29, "itemId": "uvTECefh", "itemSku": "iKKuc8Ur", "itemType": "g4atANoO"}, {"count": 11, "itemId": "iOvxo4sO", "itemSku": "2v2SBoI1", "itemType": "cMTFoDvn"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 65, "fixedTrialCycles": 98, "graceDays": 85}, "regionData": {"l8sxzC1f": [{"currencyCode": "JxroZeNI", "currencyNamespace": "lbxAUeRU", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1994-10-25T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1997-01-02T00:00:00Z", "expireAt": "1994-12-04T00:00:00Z", "price": 78, "purchaseAt": "1976-05-30T00:00:00Z", "trialPrice": 24}, {"currencyCode": "61QJU3NQ", "currencyNamespace": "DgVJljnv", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1973-07-19T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1980-04-11T00:00:00Z", "expireAt": "1997-10-20T00:00:00Z", "price": 72, "purchaseAt": "1972-09-22T00:00:00Z", "trialPrice": 72}, {"currencyCode": "lSy4dXRi", "currencyNamespace": "rNN1XTVb", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1978-11-22T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1984-07-10T00:00:00Z", "expireAt": "1997-03-23T00:00:00Z", "price": 11, "purchaseAt": "1999-04-08T00:00:00Z", "trialPrice": 37}], "DdnbfKLd": [{"currencyCode": "llLcrgG7", "currencyNamespace": "MUCvBQxD", "currencyType": "REAL", "discountAmount": 74, "discountExpireAt": "1991-02-12T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1997-04-14T00:00:00Z", "expireAt": "1972-12-17T00:00:00Z", "price": 96, "purchaseAt": "1985-10-04T00:00:00Z", "trialPrice": 97}, {"currencyCode": "zroRILUY", "currencyNamespace": "E0mbvUdf", "currencyType": "REAL", "discountAmount": 68, "discountExpireAt": "1985-09-10T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1988-05-02T00:00:00Z", "expireAt": "1982-09-15T00:00:00Z", "price": 90, "purchaseAt": "1982-12-06T00:00:00Z", "trialPrice": 31}, {"currencyCode": "aGCQl5y1", "currencyNamespace": "gekeqHnz", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1996-11-01T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1999-04-06T00:00:00Z", "expireAt": "1998-11-17T00:00:00Z", "price": 91, "purchaseAt": "1984-04-09T00:00:00Z", "trialPrice": 49}], "Ic5NTRyL": [{"currencyCode": "bOzAYD5I", "currencyNamespace": "H4deTFCD", "currencyType": "REAL", "discountAmount": 90, "discountExpireAt": "1971-08-08T00:00:00Z", "discountPercentage": 69, "discountPurchaseAt": "1980-09-02T00:00:00Z", "expireAt": "1981-06-13T00:00:00Z", "price": 94, "purchaseAt": "1971-08-20T00:00:00Z", "trialPrice": 22}, {"currencyCode": "MlhmWv2C", "currencyNamespace": "jjBQfnFy", "currencyType": "REAL", "discountAmount": 19, "discountExpireAt": "1989-05-08T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1986-10-17T00:00:00Z", "expireAt": "1992-03-29T00:00:00Z", "price": 95, "purchaseAt": "1993-07-12T00:00:00Z", "trialPrice": 64}, {"currencyCode": "c2NKFB2q", "currencyNamespace": "xCiWMNdv", "currencyType": "VIRTUAL", "discountAmount": 69, "discountExpireAt": "1994-08-25T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1993-08-23T00:00:00Z", "expireAt": "1989-08-09T00:00:00Z", "price": 50, "purchaseAt": "1972-02-11T00:00:00Z", "trialPrice": 52}]}, "saleConfig": {"currencyCode": "6n1t8RXF", "price": 61}, "seasonType": "TIER", "sectionExclusive": false, "sellable": true, "sku": "yS4UAMJr", "stackable": false, "status": "INACTIVE", "tags": ["L8Ij6Hou", "1skD80rM", "9MH0bGRe"], "targetCurrencyCode": "YemseR49", "targetNamespace": "2ILQLV79", "thumbnailUrl": "lT8sZwao", "useCount": 32}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'S9OmmtZ1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'CreateItem' test.out

#- 87 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'XROPpbgq' \
    --appId 'S9a9eP72' \
    > test.out 2>&1
eval_tap $? 87 'GetItemByAppId' test.out

#- 88 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --availableDate 'bSH4TvY6' \
    --baseAppId 'sMCkitXs' \
    --categoryPath 'Nfi8EF3m' \
    --features 'gABwFe1N' \
    --includeSubCategoryItem 'true' \
    --itemType 'SUBSCRIPTION' \
    --limit '80' \
    --offset '26' \
    --region 'eryssScV' \
    --sortBy '["createdAt:desc", "displayOrder", "name:asc"]' \
    --storeId 'rN40y7aL' \
    --tags 'OJoeZqRw' \
    --targetNamespace 'JzTdMg00' \
    > test.out 2>&1
eval_tap $? 88 'QueryItems' test.out

#- 89 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["vHLdMiaj", "e6w7YN9M", "WtYzurSM"]' \
    > test.out 2>&1
eval_tap $? 89 'ListBasicItemsByFeatures' test.out

#- 90 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'whiinZMK' \
    --sku '2PQePnMg' \
    > test.out 2>&1
eval_tap $? 90 'GetItemBySku' test.out

#- 91 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'L2upEuzG' \
    --populateBundle 'false' \
    --region '7v5QycBC' \
    --storeId 'xJG7DehS' \
    --sku 'Ec6kg2UW' \
    > test.out 2>&1
eval_tap $? 91 'GetLocaleItemBySku' test.out

#- 92 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '8dfboaqk' \
    --sku 'OS5P8ije' \
    > test.out 2>&1
eval_tap $? 92 'GetItemIdBySku' test.out

#- 93 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["U7ceEjsJ", "O7xZUK7l", "MGDnKhxD"]' \
    --storeId 'xWqk0FyD' \
    > test.out 2>&1
eval_tap $? 93 'GetBulkItemIdBySkus' test.out

#- 94 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'e3TKjWJi' \
    --region 'zZ73YhEd' \
    --storeId 'qt8LYH7I' \
    --itemIds '8lYD68ZI' \
    > test.out 2>&1
eval_tap $? 94 'BulkGetLocaleItems' test.out

#- 95 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetAvailablePredicateTypes' test.out

#- 96 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["9yJ2FmHn", "prty5BQC", "d5sVLr7T"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'lnKnQhYH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 96 'ValidateItemPurchaseCondition' test.out

#- 97 BulkUpdateRegionData
# body param: body
echo '{"changes": [{"itemIdentities": ["2PkwSPXd", "Yk0YxFNn", "o9WQq9ZH"], "itemIdentityType": "ITEM_ID", "regionData": {"oIhUnq8E": [{"currencyCode": "tmzVPJFq", "currencyNamespace": "DDsFmDKP", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1988-01-20T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1989-06-09T00:00:00Z", "discountedPrice": 37, "expireAt": "1974-09-10T00:00:00Z", "price": 81, "purchaseAt": "1971-10-04T00:00:00Z", "trialPrice": 86}, {"currencyCode": "rTEQpFB5", "currencyNamespace": "aeIMGxoy", "currencyType": "VIRTUAL", "discountAmount": 85, "discountExpireAt": "1994-10-28T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1986-10-16T00:00:00Z", "discountedPrice": 81, "expireAt": "1983-03-24T00:00:00Z", "price": 42, "purchaseAt": "1985-12-16T00:00:00Z", "trialPrice": 53}, {"currencyCode": "PUVO9elC", "currencyNamespace": "nXCnhXRi", "currencyType": "VIRTUAL", "discountAmount": 57, "discountExpireAt": "1984-12-28T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1995-06-27T00:00:00Z", "discountedPrice": 88, "expireAt": "1991-08-18T00:00:00Z", "price": 80, "purchaseAt": "1990-11-23T00:00:00Z", "trialPrice": 22}], "7EzD1HwK": [{"currencyCode": "EgGh6Mct", "currencyNamespace": "POqg2vfa", "currencyType": "REAL", "discountAmount": 26, "discountExpireAt": "1971-10-07T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1974-07-23T00:00:00Z", "discountedPrice": 89, "expireAt": "1983-12-02T00:00:00Z", "price": 35, "purchaseAt": "1995-10-17T00:00:00Z", "trialPrice": 30}, {"currencyCode": "e82zDrJt", "currencyNamespace": "Ncl4ztsa", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1980-02-12T00:00:00Z", "discountPercentage": 50, "discountPurchaseAt": "1974-04-02T00:00:00Z", "discountedPrice": 85, "expireAt": "1987-03-28T00:00:00Z", "price": 50, "purchaseAt": "1999-02-21T00:00:00Z", "trialPrice": 68}, {"currencyCode": "H0SjmRKL", "currencyNamespace": "X0YyNLgO", "currencyType": "REAL", "discountAmount": 73, "discountExpireAt": "1986-05-16T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1978-06-21T00:00:00Z", "discountedPrice": 47, "expireAt": "1982-08-07T00:00:00Z", "price": 7, "purchaseAt": "1978-05-15T00:00:00Z", "trialPrice": 85}], "WMu7ZUAb": [{"currencyCode": "KsKi0fui", "currencyNamespace": "pdvULHrq", "currencyType": "VIRTUAL", "discountAmount": 16, "discountExpireAt": "1999-08-21T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1973-08-16T00:00:00Z", "discountedPrice": 8, "expireAt": "1974-03-03T00:00:00Z", "price": 12, "purchaseAt": "1973-09-28T00:00:00Z", "trialPrice": 54}, {"currencyCode": "JVXROWQL", "currencyNamespace": "NP4J0I2w", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1975-06-18T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1990-12-03T00:00:00Z", "discountedPrice": 68, "expireAt": "1997-12-25T00:00:00Z", "price": 87, "purchaseAt": "1976-04-09T00:00:00Z", "trialPrice": 27}, {"currencyCode": "xEO4oKOc", "currencyNamespace": "sZUbeZJJ", "currencyType": "VIRTUAL", "discountAmount": 51, "discountExpireAt": "1984-01-29T00:00:00Z", "discountPercentage": 100, "discountPurchaseAt": "1973-05-24T00:00:00Z", "discountedPrice": 27, "expireAt": "1977-10-22T00:00:00Z", "price": 78, "purchaseAt": "1993-05-19T00:00:00Z", "trialPrice": 75}]}}, {"itemIdentities": ["0i4i3znp", "lxZVkkzC", "uWXN0pi9"], "itemIdentityType": "ITEM_ID", "regionData": {"epZ0J4Uu": [{"currencyCode": "ZWR407SE", "currencyNamespace": "9ddXzA6F", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1982-12-04T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1973-03-16T00:00:00Z", "discountedPrice": 20, "expireAt": "1982-03-26T00:00:00Z", "price": 43, "purchaseAt": "1999-08-01T00:00:00Z", "trialPrice": 81}, {"currencyCode": "iWvl12Ey", "currencyNamespace": "ddbFelmB", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1991-09-07T00:00:00Z", "discountPercentage": 54, "discountPurchaseAt": "1992-04-27T00:00:00Z", "discountedPrice": 35, "expireAt": "1971-11-13T00:00:00Z", "price": 71, "purchaseAt": "1973-06-03T00:00:00Z", "trialPrice": 8}, {"currencyCode": "KCf8GsPE", "currencyNamespace": "l1i9RQ9t", "currencyType": "VIRTUAL", "discountAmount": 50, "discountExpireAt": "1997-10-10T00:00:00Z", "discountPercentage": 29, "discountPurchaseAt": "1973-09-21T00:00:00Z", "discountedPrice": 12, "expireAt": "1984-05-01T00:00:00Z", "price": 53, "purchaseAt": "1994-04-11T00:00:00Z", "trialPrice": 37}], "geQqTHsg": [{"currencyCode": "esxUdeb2", "currencyNamespace": "FJbsqzkO", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1981-02-21T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1980-07-13T00:00:00Z", "discountedPrice": 22, "expireAt": "1974-05-02T00:00:00Z", "price": 36, "purchaseAt": "1978-07-10T00:00:00Z", "trialPrice": 12}, {"currencyCode": "Olr6yZsG", "currencyNamespace": "5AHeXjxQ", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1977-12-27T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1971-03-23T00:00:00Z", "discountedPrice": 60, "expireAt": "1999-05-13T00:00:00Z", "price": 95, "purchaseAt": "1994-04-22T00:00:00Z", "trialPrice": 30}, {"currencyCode": "uREPLDNt", "currencyNamespace": "6Bi4udSr", "currencyType": "REAL", "discountAmount": 79, "discountExpireAt": "1988-03-06T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1995-06-04T00:00:00Z", "discountedPrice": 69, "expireAt": "1972-04-08T00:00:00Z", "price": 42, "purchaseAt": "1993-03-03T00:00:00Z", "trialPrice": 75}], "Uuy8tq9H": [{"currencyCode": "CTgLSuFi", "currencyNamespace": "v2W3x38A", "currencyType": "VIRTUAL", "discountAmount": 33, "discountExpireAt": "1989-05-03T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1992-03-03T00:00:00Z", "discountedPrice": 66, "expireAt": "1995-12-28T00:00:00Z", "price": 54, "purchaseAt": "1996-03-24T00:00:00Z", "trialPrice": 5}, {"currencyCode": "Zb55PmNf", "currencyNamespace": "9MzOCP7H", "currencyType": "REAL", "discountAmount": 39, "discountExpireAt": "1991-12-20T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1984-09-06T00:00:00Z", "discountedPrice": 68, "expireAt": "1977-01-09T00:00:00Z", "price": 94, "purchaseAt": "1996-12-07T00:00:00Z", "trialPrice": 79}, {"currencyCode": "JcWSRPDF", "currencyNamespace": "dkQZDrW0", "currencyType": "REAL", "discountAmount": 10, "discountExpireAt": "1975-10-12T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1986-12-01T00:00:00Z", "discountedPrice": 35, "expireAt": "1987-03-10T00:00:00Z", "price": 91, "purchaseAt": "1974-05-19T00:00:00Z", "trialPrice": 3}]}}, {"itemIdentities": ["Sf29O4OC", "Hr6PHDU3", "g8gwrRCG"], "itemIdentityType": "ITEM_SKU", "regionData": {"yQ14gMP9": [{"currencyCode": "Z4mEvMNj", "currencyNamespace": "tERuv6Nr", "currencyType": "VIRTUAL", "discountAmount": 92, "discountExpireAt": "1978-03-22T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1987-11-30T00:00:00Z", "discountedPrice": 80, "expireAt": "1988-02-21T00:00:00Z", "price": 77, "purchaseAt": "1975-09-29T00:00:00Z", "trialPrice": 51}, {"currencyCode": "DEgjGR3A", "currencyNamespace": "jETQmuBh", "currencyType": "VIRTUAL", "discountAmount": 2, "discountExpireAt": "1972-04-09T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1999-08-09T00:00:00Z", "discountedPrice": 16, "expireAt": "1974-04-10T00:00:00Z", "price": 53, "purchaseAt": "1983-09-01T00:00:00Z", "trialPrice": 82}, {"currencyCode": "SnBtqToP", "currencyNamespace": "bBDwdvFV", "currencyType": "REAL", "discountAmount": 93, "discountExpireAt": "1991-10-28T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1971-04-14T00:00:00Z", "discountedPrice": 7, "expireAt": "1992-11-11T00:00:00Z", "price": 33, "purchaseAt": "1979-08-06T00:00:00Z", "trialPrice": 75}], "VoUKBlsP": [{"currencyCode": "XL4ibYVB", "currencyNamespace": "9w0ETfSa", "currencyType": "VIRTUAL", "discountAmount": 88, "discountExpireAt": "1981-03-19T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1976-08-09T00:00:00Z", "discountedPrice": 47, "expireAt": "1989-04-24T00:00:00Z", "price": 99, "purchaseAt": "1975-02-22T00:00:00Z", "trialPrice": 75}, {"currencyCode": "SB39nWJ0", "currencyNamespace": "AdErhRmH", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1981-08-17T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1971-04-05T00:00:00Z", "discountedPrice": 23, "expireAt": "1995-11-06T00:00:00Z", "price": 25, "purchaseAt": "1990-05-25T00:00:00Z", "trialPrice": 62}, {"currencyCode": "DPUnoL1y", "currencyNamespace": "IqAGPGIM", "currencyType": "VIRTUAL", "discountAmount": 19, "discountExpireAt": "1998-05-25T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1991-12-29T00:00:00Z", "discountedPrice": 57, "expireAt": "1997-12-24T00:00:00Z", "price": 70, "purchaseAt": "1993-04-13T00:00:00Z", "trialPrice": 40}], "15WJviuc": [{"currencyCode": "5vA36xYM", "currencyNamespace": "MPep0zpl", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1981-12-20T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1974-07-22T00:00:00Z", "discountedPrice": 28, "expireAt": "1993-05-09T00:00:00Z", "price": 32, "purchaseAt": "1989-02-08T00:00:00Z", "trialPrice": 97}, {"currencyCode": "fmZNfIZB", "currencyNamespace": "Emg9ppW9", "currencyType": "REAL", "discountAmount": 56, "discountExpireAt": "1979-10-02T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1974-06-28T00:00:00Z", "discountedPrice": 10, "expireAt": "1979-07-09T00:00:00Z", "price": 100, "purchaseAt": "1986-12-19T00:00:00Z", "trialPrice": 35}, {"currencyCode": "sqbjAHF9", "currencyNamespace": "QLlS2lC0", "currencyType": "VIRTUAL", "discountAmount": 51, "discountExpireAt": "1985-09-30T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1985-12-22T00:00:00Z", "discountedPrice": 62, "expireAt": "1993-05-29T00:00:00Z", "price": 68, "purchaseAt": "1978-07-19T00:00:00Z", "trialPrice": 95}]}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkUpdateRegionData \
    --namespace $AB_NAMESPACE \
    --storeId 'Yg5fkCht' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'BulkUpdateRegionData' test.out

#- 98 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'SEASON' \
    --limit '20' \
    --offset '100' \
    --sortBy 'cBHShoy4' \
    --storeId 'rAmtQkeC' \
    --keyword 'oVHY89b9' \
    --language '2PWEF9gi' \
    > test.out 2>&1
eval_tap $? 98 'SearchItems' test.out

#- 99 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '99' \
    --offset '29' \
    --sortBy '["displayOrder:desc", "displayOrder", "createdAt"]' \
    --storeId 'sVtIIBDD' \
    > test.out 2>&1
eval_tap $? 99 'QueryUncategorizedItems' test.out

#- 100 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'ZzSa012J' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'Vd3MaSmO' \
    > test.out 2>&1
eval_tap $? 100 'GetItem' test.out

#- 101 UpdateItem
# body param: body
echo '{"appId": "IA08Q4Pe", "appType": "GAME", "baseAppId": "5ZkF7UCe", "boothName": "oZEUNVKj", "categoryPath": "MQUM30wa", "clazz": "RuDKnw63", "displayOrder": 46, "entitlementType": "DURABLE", "ext": {"WU05apXk": {}, "WulzfNES": {}, "EwZkxwcI": {}}, "features": ["optsiG0J", "DARQghCk", "Eo50u4dt"], "images": [{"as": "ujmLLnrN", "caption": "NSLh36UQ", "height": 4, "imageUrl": "lfxvDyx6", "smallImageUrl": "IAAOUeUR", "width": 16}, {"as": "ip5g4u0M", "caption": "APcVPH3g", "height": 10, "imageUrl": "BL95xBXZ", "smallImageUrl": "4Q2kZcVE", "width": 39}, {"as": "eRLWH719", "caption": "H0S96d6o", "height": 23, "imageUrl": "2O9JTphn", "smallImageUrl": "wOfFzh20", "width": 30}], "itemIds": ["DW1ccz64", "9aMbZ9u0", "Okl1IHd8"], "itemQty": {"Q5JqhDP8": 24, "PFCH42h6": 76, "dR2WzZ26": 80}, "itemType": "EXTENSION", "listable": true, "localizations": {"H9Aya2Ug": {"description": "l7sPCMcC", "localExt": {"q8KOF1FP": {}, "ASWEGLvH": {}, "i2yA6ZsX": {}}, "longDescription": "JoVWUuZ6", "title": "fQXMhnC8"}, "iRACppkc": {"description": "2GjnJ6Mq", "localExt": {"okeFNTOa": {}, "l7C9QhMy": {}, "KSxoXxGx": {}}, "longDescription": "kYjDcp3p", "title": "GTMJShik"}, "vBpSOkSV": {"description": "huAqkZqR", "localExt": {"3gW3GfD7": {}, "JtchRl8U": {}, "CypNxxUb": {}}, "longDescription": "XgFF9TJr", "title": "lNNryir2"}}, "lootBoxConfig": {"rewardCount": 35, "rewards": [{"lootBoxItems": [{"count": 72, "itemId": "cfzqMDXs", "itemSku": "2AMIqwXx", "itemType": "AtcjA062"}, {"count": 9, "itemId": "iZneSGu4", "itemSku": "x8wWgDhy", "itemType": "2xaMbK98"}, {"count": 75, "itemId": "e0EKI1og", "itemSku": "ofwrtjPj", "itemType": "SrjvrgKM"}], "name": "Z79d1xh7", "odds": 0.7480736725618202, "type": "REWARD_GROUP", "weight": 3}, {"lootBoxItems": [{"count": 96, "itemId": "yacvJKvH", "itemSku": "2fI227sF", "itemType": "hXEPpERr"}, {"count": 22, "itemId": "0WrTTWC1", "itemSku": "vHxSVm1r", "itemType": "RLDUorN8"}, {"count": 28, "itemId": "iAd1zlFB", "itemSku": "NJu2WkeG", "itemType": "DSzlCaFt"}], "name": "7Cu0JKjL", "odds": 0.0715148937054213, "type": "PROBABILITY_GROUP", "weight": 60}, {"lootBoxItems": [{"count": 49, "itemId": "QryhqRPw", "itemSku": "aSbAakeT", "itemType": "I3GtLp33"}, {"count": 29, "itemId": "KNm1qW2n", "itemSku": "5ceomro5", "itemType": "tLlKiW8d"}, {"count": 55, "itemId": "82TygHqJ", "itemSku": "CY44tteO", "itemType": "U73MUia8"}], "name": "6OHeEezP", "odds": 0.0863736485981047, "type": "REWARD_GROUP", "weight": 34}], "rollFunction": "CUSTOM"}, "maxCount": 29, "maxCountPerUser": 78, "name": "fshHt88Z", "optionBoxConfig": {"boxItems": [{"count": 36, "itemId": "0VftM4du", "itemSku": "hPOP3T7I", "itemType": "ILgTKDtE"}, {"count": 57, "itemId": "9qxx7lz9", "itemSku": "uMrrT54d", "itemType": "KxRwFRsl"}, {"count": 64, "itemId": "ZZip2UOw", "itemSku": "EpVOojin", "itemType": "iOJfBmQB"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 44, "fixedTrialCycles": 98, "graceDays": 32}, "regionData": {"JJqgitUL": [{"currencyCode": "lhI9rKPy", "currencyNamespace": "F7ytpQiD", "currencyType": "REAL", "discountAmount": 56, "discountExpireAt": "1985-09-22T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1992-03-02T00:00:00Z", "expireAt": "1976-04-05T00:00:00Z", "price": 71, "purchaseAt": "1976-11-10T00:00:00Z", "trialPrice": 85}, {"currencyCode": "6yC2yo6e", "currencyNamespace": "Kkz3So92", "currencyType": "REAL", "discountAmount": 58, "discountExpireAt": "1991-10-18T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1989-05-16T00:00:00Z", "expireAt": "1990-02-02T00:00:00Z", "price": 84, "purchaseAt": "1978-05-21T00:00:00Z", "trialPrice": 52}, {"currencyCode": "wjeYeJi9", "currencyNamespace": "q4KUgzZZ", "currencyType": "VIRTUAL", "discountAmount": 43, "discountExpireAt": "1971-02-02T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1994-08-05T00:00:00Z", "expireAt": "1982-07-19T00:00:00Z", "price": 45, "purchaseAt": "1982-10-30T00:00:00Z", "trialPrice": 80}], "i9jeErSp": [{"currencyCode": "DVNGzTIF", "currencyNamespace": "bOjIMnvb", "currencyType": "VIRTUAL", "discountAmount": 73, "discountExpireAt": "1985-02-26T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1982-08-03T00:00:00Z", "expireAt": "1983-02-10T00:00:00Z", "price": 93, "purchaseAt": "1994-08-27T00:00:00Z", "trialPrice": 51}, {"currencyCode": "7tt15VYM", "currencyNamespace": "NdywySdX", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1985-09-06T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1978-05-05T00:00:00Z", "expireAt": "1974-06-10T00:00:00Z", "price": 36, "purchaseAt": "1974-04-30T00:00:00Z", "trialPrice": 36}, {"currencyCode": "AfzvXP7h", "currencyNamespace": "fNyBM3W7", "currencyType": "VIRTUAL", "discountAmount": 4, "discountExpireAt": "1975-03-11T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1975-10-10T00:00:00Z", "expireAt": "1979-04-05T00:00:00Z", "price": 30, "purchaseAt": "1974-11-08T00:00:00Z", "trialPrice": 83}], "ZUugcyZe": [{"currencyCode": "i70cPKSd", "currencyNamespace": "QKPk36Tg", "currencyType": "VIRTUAL", "discountAmount": 50, "discountExpireAt": "1987-05-25T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1982-12-21T00:00:00Z", "expireAt": "1973-05-05T00:00:00Z", "price": 80, "purchaseAt": "1986-03-02T00:00:00Z", "trialPrice": 2}, {"currencyCode": "lz3T4PPN", "currencyNamespace": "LrCKgoc8", "currencyType": "VIRTUAL", "discountAmount": 50, "discountExpireAt": "1977-09-02T00:00:00Z", "discountPercentage": 93, "discountPurchaseAt": "1994-01-24T00:00:00Z", "expireAt": "1987-10-26T00:00:00Z", "price": 50, "purchaseAt": "1999-09-20T00:00:00Z", "trialPrice": 94}, {"currencyCode": "cJrX2a98", "currencyNamespace": "isrEnWec", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1977-01-26T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1993-05-17T00:00:00Z", "expireAt": "1988-12-19T00:00:00Z", "price": 15, "purchaseAt": "1994-03-16T00:00:00Z", "trialPrice": 81}]}, "saleConfig": {"currencyCode": "VFQkVvDY", "price": 30}, "seasonType": "TIER", "sectionExclusive": false, "sellable": true, "sku": "4VrPBlaP", "stackable": true, "status": "INACTIVE", "tags": ["rv6Eb7Cb", "meLvT7VI", "B1CzxJ9z"], "targetCurrencyCode": "P5dOI5JE", "targetNamespace": "sCwYwxuL", "thumbnailUrl": "PzTV7F70", "useCount": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'Jmavnpwv' \
    --namespace $AB_NAMESPACE \
    --storeId 'lN5bxb3z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateItem' test.out

#- 102 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'VGiVgmTi' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'qChqmGws' \
    > test.out 2>&1
eval_tap $? 102 'DeleteItem' test.out

#- 103 AcquireItem
# body param: body
echo '{"count": 52, "orderNo": "MpCmLAck"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'oGMrfqXh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'AcquireItem' test.out

#- 104 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId '9Yi9sIBQ' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'o1qclvhl' \
    > test.out 2>&1
eval_tap $? 104 'GetApp' test.out

#- 105 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "m929zMAd", "previewUrl": "lyXyqtmI", "thumbnailUrl": "wkhB1niu", "type": "video", "url": "HkEMM2Ld", "videoSource": "vimeo"}, {"alt": "i6TiqSRi", "previewUrl": "BbSv5Mu9", "thumbnailUrl": "psphB22G", "type": "video", "url": "51VeGbfp", "videoSource": "vimeo"}, {"alt": "8UZno0up", "previewUrl": "xwRKEKNI", "thumbnailUrl": "laq2KS5y", "type": "video", "url": "265k6o7P", "videoSource": "youtube"}], "developer": "9D2nLcCM", "forumUrl": "vTgskvER", "genres": ["Strategy", "RPG", "Indie"], "localizations": {"KX3k2xmr": {"announcement": "muw7Xo6c", "slogan": "48Bsc3cv"}, "7u2wN8c1": {"announcement": "Kpu4lqYf", "slogan": "wmcvvAUS"}, "6PzOOwSi": {"announcement": "k7CwUa7L", "slogan": "xQUNu0la"}}, "platformRequirements": {"NJx3VND1": [{"additionals": "GqpkJeCM", "directXVersion": "YVGaGlXM", "diskSpace": "irtY3mMs", "graphics": "wJSdKiaN", "label": "MrgJ4VqW", "osVersion": "XNo76z7J", "processor": "1NW0IoTP", "ram": "97wPaRfk", "soundCard": "XyLS86H3"}, {"additionals": "ub7hu9Mf", "directXVersion": "6Qeyu5D0", "diskSpace": "XT5fhark", "graphics": "K0AIGdEb", "label": "xsUwJLzv", "osVersion": "xAqxaBvY", "processor": "kRH723c5", "ram": "7BNNjQJ7", "soundCard": "TXsOwwby"}, {"additionals": "9OOnuphq", "directXVersion": "96OvBp28", "diskSpace": "vxdZ0sUS", "graphics": "14l56FKf", "label": "jkcB2SiF", "osVersion": "scU2TIpt", "processor": "Cl7Mr5hH", "ram": "9GexcdbT", "soundCard": "8v3UhVtg"}], "g8kRaAVv": [{"additionals": "E6mqqeoT", "directXVersion": "T0uNoVVn", "diskSpace": "7ItFFSEo", "graphics": "Uy7DgmV5", "label": "mD3u0JWh", "osVersion": "mI5cbJHx", "processor": "H87DGHTs", "ram": "wv6V7PYL", "soundCard": "XBxOdM9z"}, {"additionals": "l6FELMoL", "directXVersion": "SWz6oSQs", "diskSpace": "OH1Xbs43", "graphics": "0fGmUXSc", "label": "gZStYmu7", "osVersion": "rsmI2iz8", "processor": "iDqES2en", "ram": "p5QsuU2S", "soundCard": "zC5jPZ75"}, {"additionals": "3VQLK9K4", "directXVersion": "e0w5qc4U", "diskSpace": "4ZoFCFoW", "graphics": "EdyIcgWE", "label": "loqldQTX", "osVersion": "f1RjwLWi", "processor": "MZtnXi3e", "ram": "Lkvnj2FH", "soundCard": "RRu0umws"}], "xpdZ1WWg": [{"additionals": "ZKluL2Ac", "directXVersion": "sKLs4xA7", "diskSpace": "pgTnAOS7", "graphics": "ZVDYbaZd", "label": "RyWBXrjE", "osVersion": "fLoBc63d", "processor": "2CjPSt7u", "ram": "9HWKXy95", "soundCard": "GCrxrJkG"}, {"additionals": "Mw7ZL0l1", "directXVersion": "KamHkjtv", "diskSpace": "5cJwGEcC", "graphics": "7aGI9Sta", "label": "a4kc8IEX", "osVersion": "b91iFIok", "processor": "1kMM49oW", "ram": "BLBOtyL1", "soundCard": "dHNmowMh"}, {"additionals": "MKGNED5y", "directXVersion": "gPVLMM3u", "diskSpace": "sQQXneBG", "graphics": "j9AjnpSv", "label": "pMEa0Lvq", "osVersion": "2wnqyklr", "processor": "vhee7EeS", "ram": "qy9kO3Zj", "soundCard": "WNov1zjW"}]}, "platforms": ["Windows", "MacOS", "MacOS"], "players": ["Coop", "Single", "Coop"], "primaryGenre": "FreeToPlay", "publisher": "2fsQ3Dlr", "releaseDate": "1995-03-04T00:00:00Z", "websiteUrl": "TmYVuz6s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'hya81WnW' \
    --namespace $AB_NAMESPACE \
    --storeId 'LIEMQX6y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'UpdateApp' test.out

#- 106 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'IuvLV2SA' \
    --namespace $AB_NAMESPACE \
    --storeId 'A8KoDH2t' \
    > test.out 2>&1
eval_tap $? 106 'DisableItem' test.out

#- 107 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'e6X3S3Hw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 107 'GetItemDynamicData' test.out

#- 108 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'JUMVxEYA' \
    --namespace $AB_NAMESPACE \
    --storeId 'qoGebWDx' \
    > test.out 2>&1
eval_tap $? 108 'EnableItem' test.out

#- 109 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature '1rIY7Ygq' \
    --itemId 'LazmwaTd' \
    --namespace $AB_NAMESPACE \
    --storeId 'H4Cz8G7R' \
    > test.out 2>&1
eval_tap $? 109 'FeatureItem' test.out

#- 110 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature '8H7IL8v5' \
    --itemId 'O1r7P5in' \
    --namespace $AB_NAMESPACE \
    --storeId 'UTEQGSKH' \
    > test.out 2>&1
eval_tap $? 110 'DefeatureItem' test.out

#- 111 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId '2wQE3rMp' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'tPQEz6JW' \
    --populateBundle 'true' \
    --region 'hThbt8E3' \
    --storeId 'jI5UoWvq' \
    > test.out 2>&1
eval_tap $? 111 'GetLocaleItem' test.out

#- 112 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 86, "comparison": "isNot", "name": "oL3OUkQD", "predicateType": "SeasonTierPredicate", "value": "RNgXXGYK", "values": ["JaukjQpr", "S6CmcUjD", "IuGGriMX"]}, {"anyOf": 3, "comparison": "isLessThan", "name": "8uOMXE5z", "predicateType": "EntitlementPredicate", "value": "FO9EQt4S", "values": ["OE4nmvUc", "jS4yL7G8", "drkfJD71"]}, {"anyOf": 85, "comparison": "isLessThanOrEqual", "name": "ucJ4eDQy", "predicateType": "SeasonTierPredicate", "value": "V8om2lFt", "values": ["O185fesS", "BanCCZXD", "bHiemt24"]}]}, {"operator": "or", "predicates": [{"anyOf": 94, "comparison": "isLessThan", "name": "1NiSinLA", "predicateType": "SeasonTierPredicate", "value": "OtvU0dys", "values": ["GQ752SjQ", "0iCFQFCl", "QxTA0y5W"]}, {"anyOf": 60, "comparison": "isLessThanOrEqual", "name": "4StfbPz4", "predicateType": "SeasonPassPredicate", "value": "8haiJAyC", "values": ["dEtrpKrb", "Vk9u7GLg", "ejYVpU1p"]}, {"anyOf": 78, "comparison": "isGreaterThan", "name": "E7wGiU2b", "predicateType": "EntitlementPredicate", "value": "xszoG732", "values": ["56H6rESn", "PLmCDp2m", "S8YEcJvL"]}]}, {"operator": "or", "predicates": [{"anyOf": 20, "comparison": "excludes", "name": "ascU9sDw", "predicateType": "SeasonTierPredicate", "value": "2Ahkyihh", "values": ["Jm1tA5U3", "wuVNYIq4", "YHEAnaS5"]}, {"anyOf": 0, "comparison": "isGreaterThanOrEqual", "name": "0PNyhzEL", "predicateType": "SeasonTierPredicate", "value": "RV4dZ3uA", "values": ["lwghwRVP", "rJ4li30F", "RlURfpBb"]}, {"anyOf": 57, "comparison": "isNot", "name": "4nFHrMfR", "predicateType": "EntitlementPredicate", "value": "NfJH1o81", "values": ["DNVWftg4", "eXbI1TK5", "tf2OW6O9"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'zv4LwcYH' \
    --namespace $AB_NAMESPACE \
    --storeId 'UKZcfngN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'UpdateItemPurchaseCondition' test.out

#- 113 ReturnItem
# body param: body
echo '{"orderNo": "WZwjfs9d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'yJGDob1c' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'ReturnItem' test.out

#- 114 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '37' \
    --name 'COgUPHzi' \
    --offset '83' \
    --tag 'fMWqAlHr' \
    > test.out 2>&1
eval_tap $? 114 'QueryKeyGroups' test.out

#- 115 CreateKeyGroup
# body param: body
echo '{"description": "dUBriyIr", "name": "HLfx3OGu", "status": "INACTIVE", "tags": ["4dQYhCxg", "6MO5yZpD", "V5MsRNMV"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'CreateKeyGroup' test.out

#- 116 GetKeyGroupByBoothName
eval_tap 0 116 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 117 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'QEyyQU7J' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 117 'GetKeyGroup' test.out

#- 118 UpdateKeyGroup
# body param: body
echo '{"description": "YXJt8RD2", "name": "u7w8ONAa", "status": "INACTIVE", "tags": ["ej985Dej", "uzY3p3EE", "lTLLLbt1"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'V32zLajq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'UpdateKeyGroup' test.out

#- 119 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'SkaSCdxo' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetKeyGroupDynamic' test.out

#- 120 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'JQJ6MzJy' \
    --namespace $AB_NAMESPACE \
    --limit '84' \
    --offset '52' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 120 'ListKeys' test.out

#- 121 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'Y9HlZPJG' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 121 'UploadKeys' test.out

#- 122 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'KTkhgWzw' \
    --limit '90' \
    --offset '27' \
    --orderNos '["grTgRRnc", "Q82CYozj", "xJFKJ1Fi"]' \
    --sortBy '6h4zCNLl' \
    --startTime 'iGS9BRtl' \
    --status 'CHARGEBACK_REVERSED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 122 'QueryOrders' test.out

#- 123 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'GetOrderStatistics' test.out

#- 124 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'yZbcfk8Y' \
    > test.out 2>&1
eval_tap $? 124 'GetOrder' test.out

#- 125 RefundOrder
# body param: body
echo '{"description": "G7nYGowF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '23P0WHgh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'RefundOrder' test.out

#- 126 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'GetPaymentCallbackConfig' test.out

#- 127 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "byTwd9zn", "privateKey": "JzmlyE6J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 127 'UpdatePaymentCallbackConfig' test.out

#- 128 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'vQladJ7D' \
    --externalId 'eOXMk7WN' \
    --limit '54' \
    --notificationSource 'WXPAY' \
    --notificationType 'psK8SHyh' \
    --offset '43' \
    --paymentOrderNo 'hIqe4jc0' \
    --startDate 'JDNB8Brz' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 128 'QueryPaymentNotifications' test.out

#- 129 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'ZRrmma5m' \
    --limit '41' \
    --offset '82' \
    --status 'INIT' \
    > test.out 2>&1
eval_tap $? 129 'QueryPaymentOrders' test.out

#- 130 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "ZRDRarAt", "currencyNamespace": "bxd4giye", "customParameters": {"WZqduHEx": {}, "f0lauUCN": {}, "8FtwhxFv": {}}, "description": "eks81gp3", "extOrderNo": "NgWAgmMk", "extUserId": "sXmJeTMa", "itemType": "COINS", "language": "Rh_615", "metadata": {"fzMWkNyX": "Xrlu7ITM", "ZYSib8tq": "3AY6FuZY", "EssL3bB0": "tBK6SBoE"}, "notifyUrl": "lIIIpwn6", "omitNotification": false, "platform": "sIyovNQs", "price": 17, "recurringPaymentOrderNo": "X8Lcx6Nh", "region": "MffZlEJv", "returnUrl": "DSyHWn9S", "sandbox": true, "sku": "kLIpYhXR", "subscriptionId": "zVlyArWQ", "targetNamespace": "ReW1cdHv", "targetUserId": "ZQC69YqT", "title": "5NwjGP4D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'CreatePaymentOrderByDedicated' test.out

#- 131 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'NFyMdqC3' \
    > test.out 2>&1
eval_tap $? 131 'ListExtOrderNoByExtTxId' test.out

#- 132 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '4ZHUbJ82' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrder' test.out

#- 133 ChargePaymentOrder
# body param: body
echo '{"extTxId": "Q45DSj87", "paymentMethod": "ANeK7Nbf", "paymentProvider": "ADYEN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'XVQ2wC19' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'ChargePaymentOrder' test.out

#- 134 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "AZiRD7PH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'irjSPaaK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'RefundPaymentOrderByDedicated' test.out

#- 135 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 6, "currencyCode": "aFMOJPWM", "notifyType": "REFUND", "paymentProvider": "PAYPAL", "salesTax": 14, "vat": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'HjUXr7TO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'SimulatePaymentOrderNotification' test.out

#- 136 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'OAJbppCa' \
    > test.out 2>&1
eval_tap $? 136 'GetPaymentOrderChargeStatus' test.out

#- 137 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 137 'GetPlatformWalletConfig' test.out

#- 138 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["GooglePlay", "Playstation", "Xbox"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdatePlatformWalletConfig' test.out

#- 139 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 139 'ResetPlatformWalletConfig' test.out

#- 140 GetRevocationConfig
$CLI_EXE \
    --sn platform \
    --op GetRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'GetRevocationConfig' test.out

#- 141 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"consumable": {"enabled": true, "strategy": "REVOKE_OR_REPORT"}, "durable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateRevocationConfig' test.out

#- 142 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'DeleteRevocationConfig' test.out

#- 143 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'J4Ua7HNk' \
    --limit '52' \
    --offset '50' \
    --source 'OTHER' \
    --startTime 'cnn3fjNO' \
    --status 'FAIL' \
    --transactionId 'kx70YmLk' \
    --userId 'Ilie6LNk' \
    > test.out 2>&1
eval_tap $? 143 'QueryRevocationHistories' test.out

#- 144 CreateReward
# body param: body
echo '{"description": "PhJOcGM8", "eventTopic": "ql7o3t2f", "maxAwarded": 47, "maxAwardedPerUser": 41, "namespaceExpression": "K0ML6wze", "rewardCode": "fQ12cAfg", "rewardConditions": [{"condition": "S8KlfOGi", "conditionName": "nSPpqSCR", "eventName": "DUz586d7", "rewardItems": [{"duration": 86, "itemId": "UqIojwgP", "quantity": 2}, {"duration": 59, "itemId": "mzRVxqDG", "quantity": 44}, {"duration": 74, "itemId": "T4YTontH", "quantity": 9}]}, {"condition": "iwtwNshN", "conditionName": "Meb55694", "eventName": "d03l14KF", "rewardItems": [{"duration": 66, "itemId": "oNahPKSO", "quantity": 51}, {"duration": 34, "itemId": "URWcNMiT", "quantity": 26}, {"duration": 67, "itemId": "YevMnR3d", "quantity": 39}]}, {"condition": "jp7dxw3u", "conditionName": "l0DhPHnz", "eventName": "11yujNFW", "rewardItems": [{"duration": 37, "itemId": "Mt8Lp9XO", "quantity": 90}, {"duration": 5, "itemId": "hTBkvjjG", "quantity": 33}, {"duration": 24, "itemId": "Zf9ADd0a", "quantity": 46}]}], "userIdExpression": "d3yxvMGu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'CreateReward' test.out

#- 145 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic '7pCBTA7D' \
    --limit '50' \
    --offset '19' \
    --sortBy '["rewardCode:asc", "rewardCode:desc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 145 'QueryRewards' test.out

#- 146 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 146 'ExportRewards' test.out

#- 147 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 147 'ImportRewards' test.out

#- 148 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'Uzwcpfdd' \
    > test.out 2>&1
eval_tap $? 148 'GetReward' test.out

#- 149 UpdateReward
# body param: body
echo '{"description": "W4DuDmd2", "eventTopic": "nJ0ILGxD", "maxAwarded": 8, "maxAwardedPerUser": 44, "namespaceExpression": "Dyk9FI6Q", "rewardCode": "ZRomk9pX", "rewardConditions": [{"condition": "8dYDs6V8", "conditionName": "OIXfDyo6", "eventName": "SYUFcEVl", "rewardItems": [{"duration": 48, "itemId": "CL8obhoK", "quantity": 10}, {"duration": 30, "itemId": "oCwe6Ihl", "quantity": 62}, {"duration": 6, "itemId": "b8GDfPed", "quantity": 5}]}, {"condition": "WXyEv9d7", "conditionName": "nKCHoZoR", "eventName": "hxaZfS3F", "rewardItems": [{"duration": 94, "itemId": "iURZvDUd", "quantity": 86}, {"duration": 8, "itemId": "h16g7FBp", "quantity": 50}, {"duration": 96, "itemId": "A8YrOW3V", "quantity": 25}]}, {"condition": "qk6ujWS8", "conditionName": "bfcCW62q", "eventName": "IhoGhn50", "rewardItems": [{"duration": 3, "itemId": "7cMZrIrd", "quantity": 67}, {"duration": 80, "itemId": "BHkXDIvH", "quantity": 46}, {"duration": 28, "itemId": "PBu7NrTN", "quantity": 17}]}], "userIdExpression": "sXYLfFfz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'Brygw1WQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'UpdateReward' test.out

#- 150 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'dEUr72DY' \
    > test.out 2>&1
eval_tap $? 150 'DeleteReward' test.out

#- 151 CheckEventCondition
# body param: body
echo '{"payload": {"SCZW3czX": {}, "8CvHQZ7J": {}, "OBiF3LOG": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'Iwfn631n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'CheckEventCondition' test.out

#- 152 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "ZdLIV7BP", "userId": "QuCkqQwT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'moynrjtq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'DeleteRewardConditionRecord' test.out

#- 153 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'BYCChCSf' \
    --limit '71' \
    --offset '92' \
    --start 'AULNBIbq' \
    --storeId 'C1ggQC35' \
    --viewId 'AbqteFft' \
    > test.out 2>&1
eval_tap $? 153 'QuerySections' test.out

#- 154 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 55, "endDate": "1982-01-22T00:00:00Z", "ext": {"GBSlZ4sG": {}, "Qrcq4l41": {}, "bQTzoLlY": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 17, "itemCount": 93, "rule": "SEQUENCE"}, "items": [{"id": "t7EgSFw6", "sku": "YWTZpca7"}, {"id": "8D31y7uu", "sku": "uW6freYv"}, {"id": "PWWHWYec", "sku": "wcjhWemh"}], "localizations": {"BW3qqYq3": {"description": "kuKpr8jE", "localExt": {"XhHZs4Bk": {}, "Ixo0XPFA": {}, "FUs3qLrG": {}}, "longDescription": "KFJ7cUw0", "title": "ADHKp1Je"}, "oNcCMEnc": {"description": "NbUbiWqy", "localExt": {"r5j636DZ": {}, "4NEiTROG": {}, "vhwwXkhT": {}}, "longDescription": "3ifmSxqf", "title": "RC05lD36"}, "WoctSSIV": {"description": "i042RAad", "localExt": {"k8pSFufz": {}, "4eHb1Qgb": {}, "sPax3ToN": {}}, "longDescription": "EEcOmbPI", "title": "llsWtlGQ"}}, "name": "QR4aiBfh", "rotationType": "CUSTOM", "startDate": "1982-11-17T00:00:00Z", "viewId": "RDC6ikgF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId '0xS3aW0u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'CreateSection' test.out

#- 155 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'IOk5ICxK' \
    > test.out 2>&1
eval_tap $? 155 'PurgeExpiredSection' test.out

#- 156 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId '8QSnIY2V' \
    --storeId 'D8bkeQwv' \
    > test.out 2>&1
eval_tap $? 156 'GetSection' test.out

#- 157 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 27, "endDate": "1991-03-17T00:00:00Z", "ext": {"iTAgsVia": {}, "rCWg8roR": {}, "CRlf26Fg": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 26, "itemCount": 54, "rule": "SEQUENCE"}, "items": [{"id": "QCTADiRC", "sku": "9UzQSeQa"}, {"id": "GUWhW9XA", "sku": "JFXvfV0E"}, {"id": "qjXBf1QT", "sku": "uKXeMAqO"}], "localizations": {"hW2SxjAR": {"description": "rVunPYAM", "localExt": {"lPS1l1ag": {}, "viE0ViBp": {}, "ieoqmZUn": {}}, "longDescription": "Qezhr8Y6", "title": "yq6kixGe"}, "dxA4DZJ8": {"description": "YBOVA5CN", "localExt": {"8JbXzvLl": {}, "0QvL5vyV": {}, "kSOD9ySZ": {}}, "longDescription": "CRMGjEAI", "title": "E7KjPFdt"}, "Ae7Sg874": {"description": "fcdPiYjN", "localExt": {"R6J9wrIz": {}, "jOqBn7EE": {}, "L6dOGAG9": {}}, "longDescription": "xMyKB6xS", "title": "sgawZBDb"}}, "name": "vc4evCKx", "rotationType": "FIXED_PERIOD", "startDate": "1992-03-14T00:00:00Z", "viewId": "6yFXaZF2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'UDSPNCIu' \
    --storeId 'AqPaKuiZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'UpdateSection' test.out

#- 158 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId '2tu9RjEk' \
    --storeId 'J3tFjbqK' \
    > test.out 2>&1
eval_tap $? 158 'DeleteSection' test.out

#- 159 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'ListStores' test.out

#- 160 CreateStore
# body param: body
echo '{"defaultLanguage": "S5hHrXcW", "defaultRegion": "wEDvEN0x", "description": "N5TQgJs0", "supportedLanguages": ["46g4xIv2", "XLzgxR2N", "sX4L6vLN"], "supportedRegions": ["UrcVkKuY", "m7ZufvKL", "sudrJOK8"], "title": "ewZ9XUE0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'CreateStore' test.out

#- 161 ImportStore
eval_tap 0 161 'ImportStore # SKIP deprecated' test.out

#- 162 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 162 'GetPublishedStore' test.out

#- 163 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 163 'DeletePublishedStore' test.out

#- 164 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 164 'GetPublishedStoreBackup' test.out

#- 165 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 165 'RollbackPublishedStore' test.out

#- 166 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId '9s8UFMwC' \
    > test.out 2>&1
eval_tap $? 166 'GetStore' test.out

#- 167 UpdateStore
# body param: body
echo '{"defaultLanguage": "Q9UsL7zs", "defaultRegion": "i4UH9iCt", "description": "4bjrbqvJ", "supportedLanguages": ["UWI3EQ06", "TDnlZRU5", "bcBAdlPE"], "supportedRegions": ["EoNXcKUU", "m0phVHBt", "ST2bSs1A"], "title": "d6NGdDQQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'uoByKIY2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'UpdateStore' test.out

#- 168 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'uny7wrBN' \
    > test.out 2>&1
eval_tap $? 168 'DeleteStore' test.out

#- 169 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'cJFM5oZX' \
    --action 'DELETE' \
    --itemSku 'QbjNUmNR' \
    --itemType 'SEASON' \
    --limit '89' \
    --offset '94' \
    --selected 'true' \
    --sortBy '["updatedAt"]' \
    --status 'UNPUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'bCe6QWxn' \
    --updatedAtStart 'xZtTupsQ' \
    > test.out 2>&1
eval_tap $? 169 'QueryChanges' test.out

#- 170 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'fU6ftlIy' \
    > test.out 2>&1
eval_tap $? 170 'PublishAll' test.out

#- 171 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'dCJXOKVT' \
    > test.out 2>&1
eval_tap $? 171 'PublishSelected' test.out

#- 172 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'AiPU6Z5y' \
    > test.out 2>&1
eval_tap $? 172 'SelectAllRecords' test.out

#- 173 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'K6Imd8xO' \
    --action 'UPDATE' \
    --itemSku 'TpFCTcXo' \
    --itemType 'OPTIONBOX' \
    --type 'ITEM' \
    --updatedAtEnd 'R4cpWx3Z' \
    --updatedAtStart 'dgJt2ZQo' \
    > test.out 2>&1
eval_tap $? 173 'GetStatistic' test.out

#- 174 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'VuSEaLYN' \
    > test.out 2>&1
eval_tap $? 174 'UnselectAllRecords' test.out

#- 175 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'JJF0oGpm' \
    --namespace $AB_NAMESPACE \
    --storeId 'R9TSRI3V' \
    > test.out 2>&1
eval_tap $? 175 'SelectRecord' test.out

#- 176 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'ikDuPgBr' \
    --namespace $AB_NAMESPACE \
    --storeId 'tuHzoMsn' \
    > test.out 2>&1
eval_tap $? 176 'UnselectRecord' test.out

#- 177 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'OYBQ8vD8' \
    --targetStoreId 'vjkv9Ei7' \
    > test.out 2>&1
eval_tap $? 177 'CloneStore' test.out

#- 178 ExportStore
eval_tap 0 178 'ExportStore # SKIP deprecated' test.out

#- 179 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'mqDSPWPp' \
    --limit '64' \
    --offset '74' \
    --sku 'auCRiRzc' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    --userId 'hTZVEl13' \
    > test.out 2>&1
eval_tap $? 179 'QuerySubscriptions' test.out

#- 180 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'giNlnnOo' \
    > test.out 2>&1
eval_tap $? 180 'RecurringChargeSubscription' test.out

#- 181 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'f9tQ3FFk' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 181 'GetTicketDynamic' test.out

#- 182 DecreaseTicketSale
# body param: body
echo '{"orderNo": "iQ4WmZZZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'otLiUKp8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'DecreaseTicketSale' test.out

#- 183 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'OSgjFJIZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 183 'GetTicketBoothID' test.out

#- 184 IncreaseTicketSale
# body param: body
echo '{"count": 61, "orderNo": "XxEWeeo3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'avj65c1C' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'IncreaseTicketSale' test.out

#- 185 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "IW0Vwh6h", "value": 49}, {"id": "qN5GALCE", "value": 30}, {"id": "XFKs0ggG", "value": 17}], "steamUserId": "QVxrSEjm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'kFsfCcuP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'UnlockSteamUserAchievement' test.out

#- 186 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'ynbD8TPC' \
    --xboxUserId 'QG6V5iUc' \
    > test.out 2>&1
eval_tap $? 186 'GetXblUserAchievements' test.out

#- 187 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "3e7oF5TL", "value": 5}, {"id": "XwnefAQd", "value": 19}, {"id": "VAIgrF3U", "value": 39}], "serviceConfigId": "ZzIHBcbR", "titleId": "r1LBxPTK", "xboxUserId": "2xRt5CjV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'sHx73e7J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateXblUserAchievement' test.out

#- 188 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'uWfB47ac' \
    > test.out 2>&1
eval_tap $? 188 'AnonymizeCampaign' test.out

#- 189 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'sqQjDVBk' \
    > test.out 2>&1
eval_tap $? 189 'AnonymizeEntitlement' test.out

#- 190 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'epBbkDQo' \
    > test.out 2>&1
eval_tap $? 190 'AnonymizeFulfillment' test.out

#- 191 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'SB8hXjmi' \
    > test.out 2>&1
eval_tap $? 191 'AnonymizeIntegration' test.out

#- 192 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'KB4Wqqay' \
    > test.out 2>&1
eval_tap $? 192 'AnonymizeOrder' test.out

#- 193 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'Z0xZJ78V' \
    > test.out 2>&1
eval_tap $? 193 'AnonymizePayment' test.out

#- 194 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'fdu5YFHo' \
    > test.out 2>&1
eval_tap $? 194 'AnonymizeRevocation' test.out

#- 195 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'D1yMW1Ua' \
    > test.out 2>&1
eval_tap $? 195 'AnonymizeSubscription' test.out

#- 196 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'mXAnRUC4' \
    > test.out 2>&1
eval_tap $? 196 'AnonymizeWallet' test.out

#- 197 GetUserDLCByPlatform
$CLI_EXE \
    --sn platform \
    --op GetUserDLCByPlatform \
    --namespace $AB_NAMESPACE \
    --userId 'F36wQH2A' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 197 'GetUserDLCByPlatform' test.out

#- 198 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'lEscbJYK' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 198 'GetUserDLC' test.out

#- 199 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ORFsGG99' \
    --activeOnly 'true' \
    --appType 'GAME' \
    --entitlementClazz 'CODE' \
    --entitlementName 'NMB3SANE' \
    --features '["InGGk32H", "EHfcu1Fy", "4cXh7OVQ"]' \
    --itemId '["ysRitHLb", "ViGiai4s", "K9iLegHJ"]' \
    --limit '89' \
    --offset '63' \
    > test.out 2>&1
eval_tap $? 199 'QueryUserEntitlements' test.out

#- 200 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1982-05-09T00:00:00Z", "grantedCode": "uBgGtfDu", "itemId": "jo38sHqI", "itemNamespace": "vIzZvnHT", "language": "mgY_lSNM", "quantity": 78, "region": "qSmVuCCa", "source": "REFERRAL_BONUS", "startDate": "1993-08-06T00:00:00Z", "storeId": "CcXzfdRD"}, {"endDate": "1992-12-02T00:00:00Z", "grantedCode": "2avS5TMA", "itemId": "H8Md96Fu", "itemNamespace": "0XAm4jlg", "language": "uzP_VxvZ-ed", "quantity": 32, "region": "NkIN7epy", "source": "IAP", "startDate": "1981-03-21T00:00:00Z", "storeId": "MQ0crisE"}, {"endDate": "1987-10-24T00:00:00Z", "grantedCode": "ypHNP7Q1", "itemId": "TAGX7aq5", "itemNamespace": "b7O2Mtxk", "language": "cl_HFLq-397", "quantity": 71, "region": "Ebk12x8b", "source": "IAP", "startDate": "1981-10-17T00:00:00Z", "storeId": "Cb70tdHp"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '4x4RHuju' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'GrantUserEntitlement' test.out

#- 201 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'mtHdudQF' \
    --activeOnly 'true' \
    --appId 'efo4bdrt' \
    > test.out 2>&1
eval_tap $? 201 'GetUserAppEntitlementByAppId' test.out

#- 202 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '1p2NFSnT' \
    --activeOnly 'false' \
    --limit '35' \
    --offset '46' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 202 'QueryUserEntitlementsByAppType' test.out

#- 203 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'iBPO72Zk' \
    --activeOnly 'true' \
    --entitlementClazz 'CODE' \
    --itemId 'rixNbryp' \
    > test.out 2>&1
eval_tap $? 203 'GetUserEntitlementByItemId' test.out

#- 204 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'QAFosMiz' \
    --ids '["7UleCh2U", "i7uy360V", "pYzz2I0b"]' \
    > test.out 2>&1
eval_tap $? 204 'GetUserActiveEntitlementsByItemIds' test.out

#- 205 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'c5mKsGJu' \
    --activeOnly 'false' \
    --entitlementClazz 'CODE' \
    --sku 'ID7tFiBZ' \
    > test.out 2>&1
eval_tap $? 205 'GetUserEntitlementBySku' test.out

#- 206 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'BDwBAghE' \
    --appIds '["aZhjH43f", "BfD6QpeW", "9xZolYpy"]' \
    --itemIds '["Aud59a9T", "FS26P3VA", "fAKxtUC4"]' \
    --skus '["aQx0Wual", "CieNIhjO", "uLsrxtL5"]' \
    > test.out 2>&1
eval_tap $? 206 'ExistsAnyUserActiveEntitlement' test.out

#- 207 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'zdrXbdaj' \
    --itemIds '["rxUmydxS", "yWnwKJXP", "c9kW7pSi"]' \
    > test.out 2>&1
eval_tap $? 207 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 208 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'NiYZ62ER' \
    --appId 'D0ri6VhD' \
    > test.out 2>&1
eval_tap $? 208 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 209 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'mnVWrhCh' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'mg1pf5ik' \
    > test.out 2>&1
eval_tap $? 209 'GetUserEntitlementOwnershipByItemId' test.out

#- 210 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'qAkSRQ5V' \
    --ids '["luLd1kLu", "yMMvfaXB", "ARLFdP2L"]' \
    > test.out 2>&1
eval_tap $? 210 'GetUserEntitlementOwnershipByItemIds' test.out

#- 211 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'QEsrMY5j' \
    --entitlementClazz 'LOOTBOX' \
    --sku 'bb38gXun' \
    > test.out 2>&1
eval_tap $? 211 'GetUserEntitlementOwnershipBySku' test.out

#- 212 RevokeAllEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeAllEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'wDm7aSSF' \
    > test.out 2>&1
eval_tap $? 212 'RevokeAllEntitlements' test.out

#- 213 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'IrtrNJmg' \
    --entitlementIds 'MjbyzTKB' \
    > test.out 2>&1
eval_tap $? 213 'RevokeUserEntitlements' test.out

#- 214 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'mBw9niyO' \
    --namespace $AB_NAMESPACE \
    --userId 'D83I1upb' \
    > test.out 2>&1
eval_tap $? 214 'GetUserEntitlement' test.out

#- 215 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1988-02-10T00:00:00Z", "nullFieldList": ["QCiDNsHH", "UV1017nN", "6CmSz87a"], "startDate": "1973-07-17T00:00:00Z", "status": "CONSUMED", "useCount": 38}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'JD3aWpfN' \
    --namespace $AB_NAMESPACE \
    --userId 'FMPW8ebG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'UpdateUserEntitlement' test.out

#- 216 ConsumeUserEntitlement
# body param: body
echo '{"options": ["zUTT0Vhr", "6Y5aIwft", "rNjjFt4H"], "requestId": "48YsFj6Z", "useCount": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'EqFIcPPu' \
    --namespace $AB_NAMESPACE \
    --userId 'Cjqv4tqG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'ConsumeUserEntitlement' test.out

#- 217 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'EpO3HkWR' \
    --namespace $AB_NAMESPACE \
    --userId '36Vi1UXG' \
    > test.out 2>&1
eval_tap $? 217 'DisableUserEntitlement' test.out

#- 218 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'YQFMeSHv' \
    --namespace $AB_NAMESPACE \
    --userId 'z1uVmlBH' \
    > test.out 2>&1
eval_tap $? 218 'EnableUserEntitlement' test.out

#- 219 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'r9b0kOA0' \
    --namespace $AB_NAMESPACE \
    --userId 'ATHspAa2' \
    > test.out 2>&1
eval_tap $? 219 'GetUserEntitlementHistories' test.out

#- 220 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '061d5ISb' \
    --namespace $AB_NAMESPACE \
    --userId 'mJA1btrC' \
    > test.out 2>&1
eval_tap $? 220 'RevokeUserEntitlement' test.out

#- 221 RevokeUseCount
# body param: body
echo '{"reason": "5jnLTBX1", "useCount": 42}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RevokeUseCount \
    --entitlementId '6uDiRlMY' \
    --namespace $AB_NAMESPACE \
    --userId 'hChf4Iv7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'RevokeUseCount' test.out

#- 222 SellUserEntitlement
# body param: body
echo '{"requestId": "HrxhfkjS", "useCount": 10}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SellUserEntitlement \
    --entitlementId 'O07q0pA9' \
    --namespace $AB_NAMESPACE \
    --userId '52E2LaBk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'SellUserEntitlement' test.out

#- 223 FulfillItem
# body param: body
echo '{"duration": 67, "endDate": "1975-06-30T00:00:00Z", "itemId": "8fX2SxIV", "itemSku": "MmsRynIV", "language": "Zv9SIkEb", "order": {"currency": {"currencyCode": "j625fFE8", "currencySymbol": "SN2TknMJ", "currencyType": "REAL", "decimals": 30, "namespace": "HWc6to96"}, "ext": {"dD33ffbO": {}, "PuFrL009": {}, "bFh22hoq": {}}, "free": false}, "orderNo": "zHF53jyj", "origin": "Steam", "quantity": 18, "region": "BT98nuS7", "source": "DLC", "startDate": "1993-07-17T00:00:00Z", "storeId": "OQCUZd9T"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'uIg8iM9t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'FulfillItem' test.out

#- 224 RedeemCode
# body param: body
echo '{"code": "zIgALH9G", "language": "zt", "region": "Be8uxLPr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'jvxtlrt6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'RedeemCode' test.out

#- 225 FulfillRewards
# body param: body
echo '{"origin": "Steam", "rewards": [{"currency": {"currencyCode": "9vrMGoad", "namespace": "UYbJ8Z6K"}, "item": {"itemId": "kqB7htHS", "itemSku": "InhIb9bQ", "itemType": "P9g2kljd"}, "quantity": 38, "type": "CURRENCY"}, {"currency": {"currencyCode": "cmxP9Ruv", "namespace": "WUd1aJEq"}, "item": {"itemId": "ciDAih6r", "itemSku": "Fn4pJB54", "itemType": "ogd9tmEF"}, "quantity": 62, "type": "ITEM"}, {"currency": {"currencyCode": "qA8E0c3K", "namespace": "ClYVkwCE"}, "item": {"itemId": "h6mv0teR", "itemSku": "Jo4fh4f8", "itemType": "hSZRIccU"}, "quantity": 91, "type": "ITEM"}], "source": "PURCHASE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId '9DdkYFK2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'FulfillRewards' test.out

#- 226 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'UjYLEt1M' \
    --endTime 'hpHyjTEg' \
    --limit '96' \
    --offset '32' \
    --productId 'uLoODZkM' \
    --startTime 'LXYOD1Tq' \
    --status 'FULFILLED' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 226 'QueryUserIAPOrders' test.out

#- 227 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '7THHJvp4' \
    > test.out 2>&1
eval_tap $? 227 'QueryAllUserIAPOrders' test.out

#- 228 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'zA1CAaA8' \
    --endTime 'rK1sdi20' \
    --limit '62' \
    --offset '48' \
    --startTime '5oI66pcn' \
    --status 'FAIL' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 228 'QueryUserIAPConsumeHistory' test.out

#- 229 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "kgx", "productId": "nRmV5Owc", "region": "SHYFcWbd", "type": "XBOX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '0AbayqAo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'MockFulfillIAPItem' test.out

#- 230 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'm8TzKF6R' \
    --itemId '6FelPj2P' \
    --limit '74' \
    --offset '23' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 230 'QueryUserOrders' test.out

#- 231 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "JedE02i0", "currencyNamespace": "faNrlNCm", "discountedPrice": 39, "ext": {"etFa15Sq": {}, "iw1k9hYc": {}, "fZejAM2l": {}}, "itemId": "tgidMt8A", "language": "7trVgOgb", "options": {"skipPriceValidation": true}, "platform": "Steam", "price": 20, "quantity": 65, "region": "FlOoFJeO", "returnUrl": "dazdYo59", "sandbox": true, "sectionId": "IBKN3oJP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'd3YeTDul' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AdminCreateUserOrder' test.out

#- 232 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'uCekVwiX' \
    --itemId 'eotIb9j6' \
    > test.out 2>&1
eval_tap $? 232 'CountOfPurchasedItem' test.out

#- 233 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Sna2gQTa' \
    --userId 'rwfVgJ1n' \
    > test.out 2>&1
eval_tap $? 233 'GetUserOrder' test.out

#- 234 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUND_FAILED", "statusReason": "Z9Z1EEdR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'cfe94VlD' \
    --userId 'QNGf0iym' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'UpdateUserOrderStatus' test.out

#- 235 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'U4ow3rN3' \
    --userId 'ER1zVy8v' \
    > test.out 2>&1
eval_tap $? 235 'FulfillUserOrder' test.out

#- 236 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'CVwayvkk' \
    --userId '2NyMgExp' \
    > test.out 2>&1
eval_tap $? 236 'GetUserOrderGrant' test.out

#- 237 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'dGHimwTX' \
    --userId 'TexyZORe' \
    > test.out 2>&1
eval_tap $? 237 'GetUserOrderHistories' test.out

#- 238 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "UyKoHeCe"}, "authorisedTime": "1987-09-25T00:00:00Z", "chargebackReversedTime": "1989-05-30T00:00:00Z", "chargebackTime": "1992-09-09T00:00:00Z", "chargedTime": "1988-10-07T00:00:00Z", "createdTime": "1996-11-13T00:00:00Z", "currency": {"currencyCode": "5sIuK7cj", "currencySymbol": "u2yaTmbF", "currencyType": "REAL", "decimals": 54, "namespace": "fOka8bY6"}, "customParameters": {"Lciqo5eg": {}, "vOaDWZxm": {}, "7mnwW61z": {}}, "extOrderNo": "flwqrxE6", "extTxId": "c37Lj1uj", "extUserId": "N0huXqk7", "issuedAt": "1973-10-03T00:00:00Z", "metadata": {"qCpltWqU": "RpDylx4u", "QBFgJ7e2": "umBpQI8o", "uSUg97kQ": "7imT23t4"}, "namespace": "d02sJAnn", "nonceStr": "5eNEqf8L", "paymentMethod": "gBRlCEgK", "paymentMethodFee": 94, "paymentOrderNo": "zeDJUijj", "paymentProvider": "PAYPAL", "paymentProviderFee": 80, "paymentStationUrl": "EI7TyyVo", "price": 27, "refundedTime": "1998-01-03T00:00:00Z", "salesTax": 8, "sandbox": true, "sku": "9GJYYsUa", "status": "CHARGE_FAILED", "statusReason": "5YzUQEFh", "subscriptionId": "NV5HkiwA", "subtotalPrice": 9, "targetNamespace": "SKYRQxQ0", "targetUserId": "UD6HIeEi", "tax": 70, "totalPrice": 26, "totalTax": 50, "txEndTime": "1993-04-14T00:00:00Z", "type": "i8eNQ7d6", "userId": "FGwH5aDw", "vat": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'MoZhgBZp' \
    --userId 'xJow2xVG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'ProcessUserOrderNotification' test.out

#- 239 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'RV5nBbYt' \
    --userId '7pAqGMyd' \
    > test.out 2>&1
eval_tap $? 239 'DownloadUserOrderReceipt' test.out

#- 240 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "cc8ZFzkV", "currencyNamespace": "JOLJ3lit", "customParameters": {"5zvoNR3k": {}, "dbkt4hux": {}, "jZUnjIaY": {}}, "description": "Nlrmj0Jm", "extOrderNo": "jcQPFKkA", "extUserId": "FsgRgAwY", "itemType": "COINS", "language": "Js-mNbq", "metadata": {"05CGKlC6": "0RplG9rU", "h79odlj9": "l6yw2tJw", "i6BYdfnx": "fRsE24qJ"}, "notifyUrl": "SsySMzn3", "omitNotification": true, "platform": "0pG3mKRo", "price": 61, "recurringPaymentOrderNo": "RGLeCMQG", "region": "qmc3Rdgb", "returnUrl": "ev8VCWC0", "sandbox": true, "sku": "bkF6FfwW", "subscriptionId": "iezA8jDz", "title": "HsJXyoGo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'vfSPaTAt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'CreateUserPaymentOrder' test.out

#- 241 RefundUserPaymentOrder
# body param: body
echo '{"description": "AurCRbo8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '4FcGoQ1H' \
    --userId 'gfiov3QF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'RefundUserPaymentOrder' test.out

#- 242 ApplyUserRedemption
# body param: body
echo '{"code": "97FNVPz3", "orderNo": "eTJEVf9g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'fcX52rO5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'ApplyUserRedemption' test.out

#- 243 DoRevocation
# body param: body
echo '{"meta": {"eFEXw6So": {}, "eso51I2k": {}, "UXcQyhDV": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "System", "currencyCode": "0sz8YvUM", "namespace": "VN3gTrrj"}, "entitlement": {"entitlementId": "kUM3UadR"}, "item": {"itemIdentity": "x1uhPW2A", "itemIdentityType": "ITEM_SKU", "origin": "Xbox"}, "quantity": 20, "type": "CURRENCY"}, {"currency": {"balanceOrigin": "Other", "currencyCode": "3tFsrluW", "namespace": "Q8T1r9xR"}, "entitlement": {"entitlementId": "pcLK3S1k"}, "item": {"itemIdentity": "6rZEqIn8", "itemIdentityType": "ITEM_SKU", "origin": "Twitch"}, "quantity": 85, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Epic", "currencyCode": "yeNaETQx", "namespace": "bCsXK0Lx"}, "entitlement": {"entitlementId": "Zhus8nYd"}, "item": {"itemIdentity": "Q3awCH3i", "itemIdentityType": "ITEM_ID", "origin": "Steam"}, "quantity": 55, "type": "ENTITLEMENT"}], "source": "OTHER", "transactionId": "8SMBHE9r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'ZzvUGk79' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'DoRevocation' test.out

#- 244 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'msR8RIEm' \
    --chargeStatus 'CHARGED' \
    --itemId 'dTDp6u6c' \
    --limit '32' \
    --offset '98' \
    --sku 'LMvOMW8s' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 244 'QueryUserSubscriptions' test.out

#- 245 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'aQSeilLq' \
    --excludeSystem 'false' \
    --limit '14' \
    --offset '86' \
    --subscriptionId 'XYXvrPZ0' \
    > test.out 2>&1
eval_tap $? 245 'GetUserSubscriptionActivities' test.out

#- 246 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 34, "itemId": "mGz6JMPs", "language": "pnYE5EwV", "reason": "J287TwZM", "region": "vSk7H24N", "source": "B8KtITPs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'Co6PTrgh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'PlatformSubscribeSubscription' test.out

#- 247 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'zHUc4oBu' \
    --itemId 'tfdE4yGs' \
    > test.out 2>&1
eval_tap $? 247 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 248 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Xkv8Iis5' \
    --userId 'VsIgUwOZ' \
    > test.out 2>&1
eval_tap $? 248 'GetUserSubscription' test.out

#- 249 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ezMLHGHI' \
    --userId '1hRpZjhD' \
    > test.out 2>&1
eval_tap $? 249 'DeleteUserSubscription' test.out

#- 250 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "wC9Onl5U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jEFSAvJ7' \
    --userId 'vat7UxvB' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'CancelSubscription' test.out

#- 251 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 69, "reason": "gpPHMwe2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'd8YRsLxn' \
    --userId 'Uap7g2Ou' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'GrantDaysToSubscription' test.out

#- 252 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'oR91UoLU' \
    --userId 'iPjXWpK1' \
    --excludeFree 'false' \
    --limit '9' \
    --offset '35' \
    > test.out 2>&1
eval_tap $? 252 'GetUserSubscriptionBillingHistories' test.out

#- 253 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "IlBqMAaC"}, "authorisedTime": "1994-02-05T00:00:00Z", "chargebackReversedTime": "1993-07-19T00:00:00Z", "chargebackTime": "1993-11-02T00:00:00Z", "chargedTime": "1980-10-06T00:00:00Z", "createdTime": "1999-08-27T00:00:00Z", "currency": {"currencyCode": "Ky5SCfeM", "currencySymbol": "exfgxYOl", "currencyType": "REAL", "decimals": 85, "namespace": "jeCWCEho"}, "customParameters": {"AQA0XuZ6": {}, "0MzQKWwC": {}, "JzGbrzvh": {}}, "extOrderNo": "xBpG2Uzh", "extTxId": "4L0kBd7h", "extUserId": "Z83EuGDQ", "issuedAt": "1980-03-18T00:00:00Z", "metadata": {"SUbkXkIQ": "lXtYDtrh", "GO8vdIMO": "ww3i9EMR", "sxiw25Vz": "Xq9sqz1V"}, "namespace": "O2OBrTXq", "nonceStr": "0K8iEeHf", "paymentMethod": "8Xl2euBw", "paymentMethodFee": 47, "paymentOrderNo": "Y5zHq0nS", "paymentProvider": "ALIPAY", "paymentProviderFee": 74, "paymentStationUrl": "lEn3pVcL", "price": 46, "refundedTime": "1973-08-24T00:00:00Z", "salesTax": 21, "sandbox": true, "sku": "yBbnNKVI", "status": "REQUEST_FOR_INFORMATION", "statusReason": "odMFHdYz", "subscriptionId": "bgDBZT6v", "subtotalPrice": 42, "targetNamespace": "2uhiNTu5", "targetUserId": "XT7z7qeX", "tax": 43, "totalPrice": 52, "totalTax": 4, "txEndTime": "1985-04-11T00:00:00Z", "type": "KSeBx9Kk", "userId": "YfTwpABU", "vat": 88}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Gw1tag3U' \
    --userId '7AXzXAIC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'ProcessUserSubscriptionNotification' test.out

#- 254 AcquireUserTicket
# body param: body
echo '{"count": 72, "orderNo": "dH9RGkRX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'ZB81cZS6' \
    --namespace $AB_NAMESPACE \
    --userId 'UeF3Pj9D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'AcquireUserTicket' test.out

#- 255 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'zB37aQvG' \
    > test.out 2>&1
eval_tap $? 255 'QueryUserCurrencyWallets' test.out

#- 256 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": false, "amount": 30, "balanceOrigin": "Epic", "reason": "mBEJmFcL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'CGmoIShT' \
    --namespace $AB_NAMESPACE \
    --userId 'YBNnmFPN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'DebitUserWalletByCurrencyCode' test.out

#- 257 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'jSvzuiwn' \
    --namespace $AB_NAMESPACE \
    --userId '89SwexRF' \
    --limit '20' \
    --offset '82' \
    > test.out 2>&1
eval_tap $? 257 'ListUserCurrencyTransactions' test.out

#- 258 CheckWallet
eval_tap 0 258 'CheckWallet # SKIP deprecated' test.out

#- 259 CreditUserWallet
# body param: body
echo '{"amount": 66, "expireAt": "1999-03-30T00:00:00Z", "origin": "Steam", "reason": "amjTcLYG", "source": "REFUND"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '8Cyl12Sa' \
    --namespace $AB_NAMESPACE \
    --userId 'YfUzLvow' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'CreditUserWallet' test.out

#- 260 PayWithUserWallet
# body param: body
echo '{"amount": 17, "walletPlatform": "IOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode '0nHTn4o3' \
    --namespace $AB_NAMESPACE \
    --userId 'uLIKIZWu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'PayWithUserWallet' test.out

#- 261 GetUserWallet
eval_tap 0 261 'GetUserWallet # SKIP deprecated' test.out

#- 262 DebitUserWallet
eval_tap 0 262 'DebitUserWallet # SKIP deprecated' test.out

#- 263 DisableUserWallet
eval_tap 0 263 'DisableUserWallet # SKIP deprecated' test.out

#- 264 EnableUserWallet
eval_tap 0 264 'EnableUserWallet # SKIP deprecated' test.out

#- 265 ListUserWalletTransactions
eval_tap 0 265 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 266 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'a1idminD' \
    > test.out 2>&1
eval_tap $? 266 'ListViews' test.out

#- 267 CreateView
# body param: body
echo '{"displayOrder": 39, "localizations": {"7rSGrBCg": {"description": "R9pN6mJ3", "localExt": {"yZzXQBPM": {}, "vYSc98hD": {}, "qhirI7VP": {}}, "longDescription": "D4HvqAwc", "title": "0RHxIhFr"}, "wQPlLySm": {"description": "qwcZiOCt", "localExt": {"VUI0nHsi": {}, "8WWl9cXO": {}, "yyUyX2Xw": {}}, "longDescription": "mIa4R4oi", "title": "MtaLQPwk"}, "t68Lub5s": {"description": "HW7ghxFT", "localExt": {"Nmv4ljaS": {}, "6aXt0KHp": {}, "hzwDPGyP": {}}, "longDescription": "0KInwlwG", "title": "HZonLAjc"}}, "name": "lZvJ6R52"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'mPsMgtpM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'CreateView' test.out

#- 268 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'fwoeZDMR' \
    --storeId '6UroThWF' \
    > test.out 2>&1
eval_tap $? 268 'GetView' test.out

#- 269 UpdateView
# body param: body
echo '{"displayOrder": 95, "localizations": {"rpxjGbLy": {"description": "5cluls6h", "localExt": {"lWyZoHF0": {}, "dXwPpkLN": {}, "hPNSrmuD": {}}, "longDescription": "h5nUr4Vj", "title": "hIWdEA0n"}, "kK8kMmDq": {"description": "cV7bASWM", "localExt": {"gY2lM0NG": {}, "bIfuabiT": {}, "tN6vBiRy": {}}, "longDescription": "BHfb5xa5", "title": "L0ALRw8y"}, "zp2WWxpG": {"description": "czImZhNX", "localExt": {"nEF30Gt7": {}, "BGOnQU0G": {}, "3W3UEpsk": {}}, "longDescription": "WKpVNQ9c", "title": "CkhtHCzC"}}, "name": "eunEfNCB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'zmoVrPid' \
    --storeId 'RXP0SHC7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'UpdateView' test.out

#- 270 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'wwCcq722' \
    --storeId 'ozNfZcLN' \
    > test.out 2>&1
eval_tap $? 270 'DeleteView' test.out

#- 271 QueryWallets
eval_tap 0 271 'QueryWallets # SKIP deprecated' test.out

#- 272 BulkCredit
# body param: body
echo '[{"creditRequest": {"amount": 51, "expireAt": "1991-08-09T00:00:00Z", "origin": "Epic", "reason": "IGgmWcRJ", "source": "REWARD"}, "currencyCode": "eYalmguh", "userIds": ["9nUOvsx6", "gQ5hjTbT", "88lqJPZr"]}, {"creditRequest": {"amount": 11, "expireAt": "1992-12-31T00:00:00Z", "origin": "Other", "reason": "4PBVULKB", "source": "REFERRAL_BONUS"}, "currencyCode": "d7TeRH3q", "userIds": ["U9HQob50", "wMZDQSOq", "NumwQ67G"]}, {"creditRequest": {"amount": 96, "expireAt": "1995-01-21T00:00:00Z", "origin": "Epic", "reason": "UvQtDpUa", "source": "REDEEM_CODE"}, "currencyCode": "j45SfdtK", "userIds": ["hutnnSzg", "7kOBNDh7", "7rNbLaBF"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkCredit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'BulkCredit' test.out

#- 273 BulkDebit
# body param: body
echo '[{"currencyCode": "u0Svi1r1", "request": {"allowOverdraft": true, "amount": 3, "balanceOrigin": "IOS", "reason": "rdqUhTGI"}, "userIds": ["JZDxmil2", "kfkl570v", "6eiDQXCm"]}, {"currencyCode": "CSmmN7nC", "request": {"allowOverdraft": false, "amount": 67, "balanceOrigin": "Steam", "reason": "T7P3sY2h"}, "userIds": ["I18JDjAx", "bEGxhq59", "A1F4Lj19"]}, {"currencyCode": "p8WJcwrH", "request": {"allowOverdraft": false, "amount": 26, "balanceOrigin": "Epic", "reason": "tlBgMniM"}, "userIds": ["msIgP1pv", "TNOGmWtJ", "Xcx6QxdA"]}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op BulkDebit \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'BulkDebit' test.out

#- 274 GetWallet
eval_tap 0 274 'GetWallet # SKIP deprecated' test.out

#- 275 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'hIYrpkfa' \
    --end 'ObGUaXMr' \
    --start 'nPwIqrYj' \
    > test.out 2>&1
eval_tap $? 275 'SyncOrders' test.out

#- 276 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["U3vhWm8D", "GF2ZRgb0", "A825b4KQ"], "apiKey": "niJAhKkN", "authoriseAsCapture": true, "blockedPaymentMethods": ["bT5k0sNM", "3pVaHx1q", "3CB2NHri"], "clientKey": "jQ0GiRyy", "dropInSettings": "B1RIqJKj", "liveEndpointUrlPrefix": "GFLtTbez", "merchantAccount": "xilbgYct", "notificationHmacKey": "I00gKSJf", "notificationPassword": "cWkikZL5", "notificationUsername": "NUGJ5Ke0", "returnUrl": "8TkDJCRD", "settings": "42j5bLx8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'TestAdyenConfig' test.out

#- 277 TestAliPayConfig
# body param: body
echo '{"appId": "eL5jSbNx", "privateKey": "wdPlvT7D", "publicKey": "DBjvAxUb", "returnUrl": "qmJNOB7M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'TestAliPayConfig' test.out

#- 278 TestCheckoutConfig
# body param: body
echo '{"publicKey": "d3kIYzHc", "secretKey": "EcCeD9Du"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'TestCheckoutConfig' test.out

#- 279 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'USpuCU57' \
    --region 'DkSFElOw' \
    > test.out 2>&1
eval_tap $? 279 'DebugMatchedPaymentMerchantConfig' test.out

#- 280 TestPayPalConfig
# body param: body
echo '{"clientID": "raUoGUQC", "clientSecret": "LN7M1coP", "returnUrl": "S9FIGU4I", "webHookId": "f34BjWss"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'TestPayPalConfig' test.out

#- 281 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["b6bzOQE2", "zuty383e", "XLMf1S2y"], "publishableKey": "6JhgR3x0", "secretKey": "WVrPjUkA", "webhookSecret": "vzGZSZzz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'TestStripeConfig' test.out

#- 282 TestWxPayConfig
# body param: body
echo '{"appId": "YwBO9ciP", "key": "g523DYcW", "mchid": "4cmPQBAJ", "returnUrl": "Veqx7wkb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 282 'TestWxPayConfig' test.out

#- 283 TestXsollaConfig
# body param: body
echo '{"apiKey": "mgHOS33e", "flowCompletionUrl": "lovyETKq", "merchantId": 16, "projectId": 93, "projectSecretKey": "TyT4lDa0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'TestXsollaConfig' test.out

#- 284 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'M4Buod4D' \
    > test.out 2>&1
eval_tap $? 284 'GetPaymentMerchantConfig' test.out

#- 285 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["ha0C9Zok", "mxNeoJpS", "NXh7Leq2"], "apiKey": "o4qMm8XQ", "authoriseAsCapture": false, "blockedPaymentMethods": ["M7jSwg0B", "VA0gxqcs", "QgNwr5On"], "clientKey": "1ZvRKexA", "dropInSettings": "s9pwPpKd", "liveEndpointUrlPrefix": "xuWW2qWN", "merchantAccount": "ku7iIxfv", "notificationHmacKey": "aeze6Ajx", "notificationPassword": "CA76Vtvo", "notificationUsername": "IRmPIYpK", "returnUrl": "uqdPp14i", "settings": "7z8pgO7y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'Ex8Kei0Y' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'UpdateAdyenConfig' test.out

#- 286 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'Udp1aNXD' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 286 'TestAdyenConfigById' test.out

#- 287 UpdateAliPayConfig
# body param: body
echo '{"appId": "AGnjAc79", "privateKey": "8mJJvk76", "publicKey": "BUKXsS1Y", "returnUrl": "t50aPRkT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'owrp44zt' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'UpdateAliPayConfig' test.out

#- 288 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '3ZWCN2U0' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 288 'TestAliPayConfigById' test.out

#- 289 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "YU5VItBN", "secretKey": "kNdWpJ5h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'ppmnal3o' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'UpdateCheckoutConfig' test.out

#- 290 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'tdfawL0T' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 290 'TestCheckoutConfigById' test.out

#- 291 UpdatePayPalConfig
# body param: body
echo '{"clientID": "Pf2FbyKj", "clientSecret": "defnVXYH", "returnUrl": "yHV2how0", "webHookId": "9baUtR2v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'sQ6kwwxZ' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'UpdatePayPalConfig' test.out

#- 292 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id '6VE3mRMY' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 292 'TestPayPalConfigById' test.out

#- 293 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["cy8wCLjs", "90r5uiwZ", "K5OeotXn"], "publishableKey": "RVSgohlF", "secretKey": "YfIexbhw", "webhookSecret": "lfGLQn9y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id '9sHmBMmM' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'UpdateStripeConfig' test.out

#- 294 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'QeESHuxZ' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 294 'TestStripeConfigById' test.out

#- 295 UpdateWxPayConfig
# body param: body
echo '{"appId": "MHSmF5EJ", "key": "dzFKuLb3", "mchid": "uu9yYK80", "returnUrl": "u5lFsT2p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'FU6wJLAF' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'UpdateWxPayConfig' test.out

#- 296 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'b8ilhJpw' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 296 'UpdateWxPayConfigCert' test.out

#- 297 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id '3U5EAxQE' \
    > test.out 2>&1
eval_tap $? 297 'TestWxPayConfigById' test.out

#- 298 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "FtKfc15s", "flowCompletionUrl": "FHIBsSKf", "merchantId": 32, "projectId": 100, "projectSecretKey": "HOhkfJ70"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'y9dXJfOP' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'UpdateXsollaConfig' test.out

#- 299 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'Z6en0iPV' \
    > test.out 2>&1
eval_tap $? 299 'TestXsollaConfigById' test.out

#- 300 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": false, "size": "SMALL", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'j3E0HZ6Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'UpdateXsollaUIConfig' test.out

#- 301 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '60' \
    --namespace_ 'RQlOJdoe' \
    --offset '93' \
    --region 'uYP7xmeq' \
    > test.out 2>&1
eval_tap $? 301 'QueryPaymentProviderConfig' test.out

#- 302 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "Nbtvs3jg", "region": "iELcpHNG", "sandboxTaxJarApiToken": "YN54ntS5", "specials": ["ALIPAY", "XSOLLA", "XSOLLA"], "taxJarApiToken": "jSAJ6DK3", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'CreatePaymentProviderConfig' test.out

#- 303 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 303 'GetAggregatePaymentProviders' test.out

#- 304 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '7sMlJ1cf' \
    --region '2l2Mr2Vw' \
    > test.out 2>&1
eval_tap $? 304 'DebugMatchedPaymentProviderConfig' test.out

#- 305 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 305 'GetSpecialPaymentProviders' test.out

#- 306 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "45iWsUO3", "region": "BxLThuU6", "sandboxTaxJarApiToken": "QvM7ZqRD", "specials": ["CHECKOUT", "CHECKOUT", "CHECKOUT"], "taxJarApiToken": "DzI8XhV9", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'mf0Qjs3w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'UpdatePaymentProviderConfig' test.out

#- 307 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'wNpfh2qT' \
    > test.out 2>&1
eval_tap $? 307 'DeletePaymentProviderConfig' test.out

#- 308 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 308 'GetPaymentTaxConfig' test.out

#- 309 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "qbjWnzkG", "taxJarApiToken": "krgHaaM8", "taxJarEnabled": false, "taxJarProductCodesMapping": {"iSNeV4MY": "Wage2hr4", "yxjoJDQC": "e5ygmoW6", "gnotlWUF": "hPQYrnyH"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'UpdatePaymentTaxConfig' test.out

#- 310 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'l6CIvSir' \
    --end 'nRXbnCUU' \
    --start 'TRHTLb0e' \
    > test.out 2>&1
eval_tap $? 310 'SyncPaymentOrders' test.out

#- 311 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'qOcteeCd' \
    --storeId 'OhAs9EKw' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetRootCategories' test.out

#- 312 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'YzDu1tK5' \
    --storeId '0KmhSYoE' \
    > test.out 2>&1
eval_tap $? 312 'DownloadCategories' test.out

#- 313 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'AiY0zxSy' \
    --namespace $AB_NAMESPACE \
    --language 'cTYYnFSD' \
    --storeId 'X31e0Pqb' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetCategory' test.out

#- 314 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'WqxQ1Rt3' \
    --namespace $AB_NAMESPACE \
    --language '4Xlc6Zi4' \
    --storeId '6dUvqtkt' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetChildCategories' test.out

#- 315 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'UzZevkFk' \
    --namespace $AB_NAMESPACE \
    --language 'EtWRdeHc' \
    --storeId 'dGcXWPGk' \
    > test.out 2>&1
eval_tap $? 315 'PublicGetDescendantCategories' test.out

#- 316 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 316 'PublicListCurrencies' test.out

#- 317 GetIAPItemMapping
$CLI_EXE \
    --sn platform \
    --op GetIAPItemMapping \
    --namespace $AB_NAMESPACE \
    --platform 'STEAM' \
    > test.out 2>&1
eval_tap $? 317 'GetIAPItemMapping' test.out

#- 318 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language '9o4ZWr20' \
    --region 'TtVASVUB' \
    --storeId '72Roprjh' \
    --appId 'e1BQ3WyL' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetItemByAppId' test.out

#- 319 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --baseAppId 'LBn7z2AO' \
    --categoryPath '1v1ygmNW' \
    --features 'Q8lJvBQf' \
    --includeSubCategoryItem 'false' \
    --itemType 'MEDIA' \
    --language 'zW5GUEV3' \
    --limit '71' \
    --offset '94' \
    --region 'NtlxMMqG' \
    --sortBy '["name", "name:desc"]' \
    --storeId 'uoQsHblR' \
    --tags 'Wi3iM6Lj' \
    > test.out 2>&1
eval_tap $? 319 'PublicQueryItems' test.out

#- 320 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'neQzIOlE' \
    --region 'pfw2hILz' \
    --storeId 'hfliBTny' \
    --sku 'iGFuZS5s' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetItemBySku' test.out

#- 321 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'EeLaES1k' \
    --region 'qvFWMvOT' \
    --storeId 'eeTzcNn9' \
    --itemIds 'JwgzVNjM' \
    > test.out 2>&1
eval_tap $? 321 'PublicBulkGetItems' test.out

#- 322 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["P2O21s8W", "MA955Oy8", "qa8fPM6k"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicValidateItemPurchaseCondition' test.out

#- 323 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'BUNDLE' \
    --limit '58' \
    --offset '37' \
    --region 'lZ28GvRW' \
    --storeId '3Bep4V2Z' \
    --keyword 'EFH62dVD' \
    --language 'cGl9weB8' \
    > test.out 2>&1
eval_tap $? 323 'PublicSearchItems' test.out

#- 324 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'cyJMVGaT' \
    --namespace $AB_NAMESPACE \
    --language 'YPwEB9IQ' \
    --region 'aIAoGdnG' \
    --storeId 'lHHx3qMw' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetApp' test.out

#- 325 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'PDtr7ejn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 325 'PublicGetItemDynamicData' test.out

#- 326 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'j0OTnXc2' \
    --namespace $AB_NAMESPACE \
    --language 'tpCjKIRz' \
    --populateBundle 'false' \
    --region 'xy4Pp5g4' \
    --storeId 'e4q2YLPh' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetItem' test.out

#- 327 GetPaymentCustomization
eval_tap 0 327 'GetPaymentCustomization # SKIP deprecated' test.out

#- 328 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "9mFiaJoY", "paymentProvider": "PAYPAL", "returnUrl": "x7rVzc4E", "ui": "jIgU6E3y", "zipCode": "dSulEOJJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'PublicGetPaymentUrl' test.out

#- 329 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'FZXE5wUT' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetPaymentMethods' test.out

#- 330 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'y5jAiWjb' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetUnpaidPaymentOrder' test.out

#- 331 Pay
# body param: body
echo '{"token": "o6dy4EIV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'orNWRytA' \
    --paymentProvider 'XSOLLA' \
    --zipCode 'MIn7imzk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'Pay' test.out

#- 332 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '0UBG2m0h' \
    > test.out 2>&1
eval_tap $? 332 'PublicCheckPaymentOrderPaidStatus' test.out

#- 333 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'CHECKOUT' \
    --region '5TvHlox1' \
    > test.out 2>&1
eval_tap $? 333 'GetPaymentPublicConfig' test.out

#- 334 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'uM3YXq1N' \
    > test.out 2>&1
eval_tap $? 334 'PublicGetQRCode' test.out

#- 335 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'hRVIExcz' \
    --foreinginvoice 'y0jhsQe6' \
    --invoiceId 'Es4YzSrC' \
    --payload 'XG1H8DmR' \
    --redirectResult 'nYweB4PJ' \
    --resultCode 'oFvGnLlU' \
    --sessionId 'vDAOneZX' \
    --status 'LWTWkR0R' \
    --token 'AGgoHpxB' \
    --type 'uE16GD5T' \
    --userId 'ALEFs4iv' \
    --orderNo '4KPDVIGm' \
    --paymentOrderNo 'uKco4zMo' \
    --paymentProvider 'STRIPE' \
    --returnUrl '3Gd8Q1bK' \
    > test.out 2>&1
eval_tap $? 335 'PublicNormalizePaymentReturnUrl' test.out

#- 336 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode '9hSZnwvI' \
    --paymentOrderNo 'AZ72zbPg' \
    --paymentProvider 'STRIPE' \
    > test.out 2>&1
eval_tap $? 336 'GetPaymentTaxValue' test.out

#- 337 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'Z8Rs9mjR' \
    > test.out 2>&1
eval_tap $? 337 'GetRewardByCode' test.out

#- 338 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'lJeb3FDT' \
    --limit '72' \
    --offset '95' \
    --sortBy '["namespace:asc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 338 'QueryRewards1' test.out

#- 339 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'vVtslMpj' \
    > test.out 2>&1
eval_tap $? 339 'GetReward1' test.out

#- 340 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 340 'PublicListStores' test.out

#- 341 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["kceVeD1o", "BpoPd1np", "G4svXPvq"]' \
    --itemIds '["SHzQP4r1", "1zNzbKse", "ToolMT1a"]' \
    --skus '["noumIdfO", "y8B8ua5Y", "zPLvBsYt"]' \
    > test.out 2>&1
eval_tap $? 341 'PublicExistsAnyMyActiveEntitlement' test.out

#- 342 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId '9hHSQO7N' \
    > test.out 2>&1
eval_tap $? 342 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 343 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'pSdcHfXR' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 344 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --sku 'nRDKnrN0' \
    > test.out 2>&1
eval_tap $? 344 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 345 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["NqxBK8G9", "ctXWpDs3", "mwyLTqCq"]' \
    --itemIds '["ebCa9PYd", "Zw5T7NWQ", "EemAkZ8U"]' \
    --skus '["jWotgedE", "WqA2OuAo", "7g7yAkjo"]' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetEntitlementOwnershipToken' test.out

#- 346 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "zsWn2VP1", "language": "fm-155", "region": "vXr0yF8b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'SyncTwitchDropsEntitlement' test.out

#- 347 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'S5RiC7Pu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 347 'PublicGetMyWallet' test.out

#- 348 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "muAXgGaK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'jetq4BXq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'SyncEpicGameDLC' test.out

#- 349 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 49}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId '3cmL3UQP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'PublicSyncPsnDlcInventory' test.out

#- 350 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [24, 69, 39]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'sKqcoDQV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 351 SyncSteamDLC
# body param: body
echo '{"appId": "t1b7vNJi", "steamId": "UjEdWwTI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId '0Bz1YAtk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'SyncSteamDLC' test.out

#- 352 SyncXboxDLC
# body param: body
echo '{"xstsToken": "dYRHXMJ9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'mx7uz01V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'SyncXboxDLC' test.out

#- 353 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'GjXujqSV' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'jGZEdEMO' \
    --features '["hsJeGtkZ", "lOuf5Dh3", "U6YnASqF"]' \
    --itemId '["MuZQt3kQ", "1BKeS4SO", "piSvjOfi"]' \
    --limit '3' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 353 'PublicQueryUserEntitlements' test.out

#- 354 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'FGNqzfi1' \
    --appId 'd8mVghHy' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetUserAppEntitlementByAppId' test.out

#- 355 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '4nqk767R' \
    --limit '37' \
    --offset '40' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 355 'PublicQueryUserEntitlementsByAppType' test.out

#- 356 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'i6pzRMPn' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'N4BjbOMf' \
    > test.out 2>&1
eval_tap $? 356 'PublicGetUserEntitlementByItemId' test.out

#- 357 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '0RTVK5Ci' \
    --entitlementClazz 'APP' \
    --sku '9ehPandY' \
    > test.out 2>&1
eval_tap $? 357 'PublicGetUserEntitlementBySku' test.out

#- 358 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Lx9SVK8i' \
    --appIds '["xYjp7QZx", "f73YGXA2", "tiVtyeFt"]' \
    --itemIds '["96ED7Wgs", "gGi5mtBB", "IGQvoT0k"]' \
    --skus '["rlVfdRr1", "rM2K2e4Z", "DeMKibQu"]' \
    > test.out 2>&1
eval_tap $? 358 'PublicExistsAnyUserActiveEntitlement' test.out

#- 359 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'erWpGGCz' \
    --appId 'ESrY0joL' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 360 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '5WcP0L6Q' \
    --entitlementClazz 'APP' \
    --itemId 'jTbgdBxg' \
    > test.out 2>&1
eval_tap $? 360 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 361 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'n67BAXvb' \
    --ids '["fSGj99Yr", "StfLNWj1", "wb7Gokap"]' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 362 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'hoH8MFtv' \
    --entitlementClazz 'MEDIA' \
    --sku 'Lq4EeQ2F' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 363 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '9XeW1C4x' \
    --namespace $AB_NAMESPACE \
    --userId '2sfLjZ07' \
    > test.out 2>&1
eval_tap $? 363 'PublicGetUserEntitlement' test.out

#- 364 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["1CzgKVMh", "y6r1FH5t", "l88v0LIb"], "requestId": "kSCsd0XV", "useCount": 54}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'Q6d2hJUS' \
    --namespace $AB_NAMESPACE \
    --userId 'd8cKezjU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'PublicConsumeUserEntitlement' test.out

#- 365 PublicSellUserEntitlement
# body param: body
echo '{"requestId": "uQjBo6tw", "useCount": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSellUserEntitlement \
    --entitlementId 'tRARhe1l' \
    --namespace $AB_NAMESPACE \
    --userId 'SxVMm64m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 365 'PublicSellUserEntitlement' test.out

#- 366 PublicRedeemCode
# body param: body
echo '{"code": "y8NJg0xj", "language": "oP-EPIH", "region": "uyYuCaDS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'ESmhc9i7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 366 'PublicRedeemCode' test.out

#- 367 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "BXZc-bRxX", "productId": "RsHBxaxe", "receiptData": "YCbmAEWl", "region": "FpMp4e0p", "transactionId": "yjUk5aLK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'VPtjrrr4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 367 'PublicFulfillAppleIAPItem' test.out

#- 368 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "1v2PLVH8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId '5tRfNnSF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 368 'SyncEpicGamesInventory' test.out

#- 369 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "qXFI", "orderId": "G4yqcnl2", "packageName": "lXuPz8uP", "productId": "SF0m6rlv", "purchaseTime": 71, "purchaseToken": "kARU6Kq4", "region": "IZiqv4Qz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'diOjaQdi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'PublicFulfillGoogleIAPItem' test.out

#- 370 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "9lUpXiU9", "price": 0.0938790672726254, "productId": "HSKdEvYv", "serviceLabel": 14}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'A3Ieosnn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicReconcilePlayStationStore' test.out

#- 371 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "ga7uICpV", "price": 0.10298739446347438, "productId": "GmMlH4Id", "serviceLabels": [8, 73, 82]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'ZZqw5G5M' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 371 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 372 SyncSteamInventory
# body param: body
echo '{"appId": "UPMYbxZG", "currencyCode": "s60toeJY", "language": "fpS-Qi", "price": 0.9897934807623024, "productId": "EpPKEJ74", "region": "M6M47JDK", "steamId": "dzlsROpj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId '34wSnSR9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 372 'SyncSteamInventory' test.out

#- 373 SyncTwitchDropsEntitlement1
# body param: body
echo '{"gameId": "kX7pWt22", "language": "aT_aT", "region": "o6IOMMjY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement1 \
    --namespace $AB_NAMESPACE \
    --userId 'X53FXXw5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'SyncTwitchDropsEntitlement1' test.out

#- 374 SyncXboxInventory
# body param: body
echo '{"currencyCode": "4ouq2MEJ", "price": 0.4827555859948047, "productId": "qEBSnOND", "xstsToken": "9NvqjhOy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'SePLqpnu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 374 'SyncXboxInventory' test.out

#- 375 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'v1X1GSRA' \
    --itemId 'WYuXAuHt' \
    --limit '64' \
    --offset '32' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 375 'PublicQueryUserOrders' test.out

#- 376 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "xMU66OlK", "discountedPrice": 5, "ext": {"5RA5lmgq": {}, "772daT8H": {}, "eLE3GmgB": {}}, "itemId": "HYhzcOCO", "language": "Cte_700", "price": 70, "quantity": 25, "region": "P4PZuT4b", "returnUrl": "Zvq90QUO", "sectionId": "kyJZjTE7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '5wWxkeJQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'PublicCreateUserOrder' test.out

#- 377 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '8Bxl4IOE' \
    --userId 'LSriLqHe' \
    > test.out 2>&1
eval_tap $? 377 'PublicGetUserOrder' test.out

#- 378 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'wlMmJSVK' \
    --userId 'EFyWDHH9' \
    > test.out 2>&1
eval_tap $? 378 'PublicCancelUserOrder' test.out

#- 379 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'ml45hprx' \
    --userId 'VBoZ7D89' \
    > test.out 2>&1
eval_tap $? 379 'PublicGetUserOrderHistories' test.out

#- 380 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'mnxU7vqk' \
    --userId 'Gzh4p9s2' \
    > test.out 2>&1
eval_tap $? 380 'PublicDownloadUserOrderReceipt' test.out

#- 381 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'D7EZOYgf' \
    > test.out 2>&1
eval_tap $? 381 'PublicGetPaymentAccounts' test.out

#- 382 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'EN7E47p0' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'oqaVP0kA' \
    > test.out 2>&1
eval_tap $? 382 'PublicDeletePaymentAccount' test.out

#- 383 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'MD5TdTra' \
    --language 'gS5bIpcR' \
    --region 'YRqosyjQ' \
    --storeId 'OyaH0FhR' \
    --viewId 'gEC9cLpu' \
    > test.out 2>&1
eval_tap $? 383 'PublicListActiveSections' test.out

#- 384 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'L04fMZRU' \
    --chargeStatus 'NEVER' \
    --itemId '3V7YmCxr' \
    --limit '30' \
    --offset '15' \
    --sku 'ldX3UHie' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 384 'PublicQueryUserSubscriptions' test.out

#- 385 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "hR1PW5Z9", "itemId": "CVSSCI91", "language": "LXn_201", "region": "goD1fdfb", "returnUrl": "r8Nlhp5n", "source": "zJadA93C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'CQqF9YI4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 385 'PublicSubscribeSubscription' test.out

#- 386 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'KUOK4dZq' \
    --itemId '5V9Hwh3E' \
    > test.out 2>&1
eval_tap $? 386 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 387 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'MHjgs8sC' \
    --userId 'TnZfOJdu' \
    > test.out 2>&1
eval_tap $? 387 'PublicGetUserSubscription' test.out

#- 388 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'TGUSvuNz' \
    --userId 'ar9GcsJU' \
    > test.out 2>&1
eval_tap $? 388 'PublicChangeSubscriptionBillingAccount' test.out

#- 389 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "ujgmFTz5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'nbwVVGST' \
    --userId 'ZXa2exAY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 389 'PublicCancelSubscription' test.out

#- 390 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Mk1HNjua' \
    --userId 'ONjqgyXt' \
    --excludeFree 'false' \
    --limit '26' \
    --offset '24' \
    > test.out 2>&1
eval_tap $? 390 'PublicGetUserSubscriptionBillingHistories' test.out

#- 391 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'xWkY3Rq5' \
    --language 'xUK5QPKJ' \
    --storeId 'jpWGiXt0' \
    > test.out 2>&1
eval_tap $? 391 'PublicListViews' test.out

#- 392 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '23GeDfnw' \
    --namespace $AB_NAMESPACE \
    --userId 'C9CgnS19' \
    > test.out 2>&1
eval_tap $? 392 'PublicGetWallet' test.out

#- 393 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'uSQ4Rs5S' \
    --namespace $AB_NAMESPACE \
    --userId 'R1qQhoFD' \
    --limit '63' \
    --offset '52' \
    > test.out 2>&1
eval_tap $? 393 'PublicListUserWalletTransactions' test.out

#- 394 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --availableDate 'WPxKc2em' \
    --baseAppId 'QbAM3AdF' \
    --categoryPath 'c2UcoBb2' \
    --features 'ic9jzBAF' \
    --includeSubCategoryItem 'true' \
    --itemName 'PCaJsWf7' \
    --itemStatus 'INACTIVE' \
    --itemType 'SUBSCRIPTION' \
    --limit '86' \
    --offset '90' \
    --region 'zNVf7VbK' \
    --sectionExclusive 'false' \
    --sortBy '["name", "updatedAt:asc"]' \
    --storeId 'FtYXuRiM' \
    --tags 'PYhqmDkK' \
    --targetNamespace '8ZWNracQ' \
    > test.out 2>&1
eval_tap $? 394 'QueryItems1' test.out

#- 395 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'iyLmK60G' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 395 'ImportStore1' test.out

#- 396 ExportStore1
# body param: body
echo '{"itemIds": ["UMUjXEeQ", "RoZ7AckK", "I4cR0Rh1"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'BLuUhL0K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 396 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE