#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..356"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "32X6wdpu", "appType": "DEMO", "baseAppId": "gRIccWuz", "boothName": "gXneqP35", "boundItemIds": ["C8qa59iX", "bpBzqY0L", "Rlu4uEhD"], "categoryPath": "fzxnvGQa", "clazz": "6QpIidbG", "createdAt": "1974-05-03T00:00:00Z", "description": "eKbEBlCq", "displayOrder": 54, "entitlementType": "DURABLE", "ext": {"MyfwUQ9y": {}, "TNS5U9iA": {}, "EalAvjUg": {}}, "features": ["FUKkFdD0", "7wrntuIX", "kPfRl9oh"], "fresh": false, "images": [{"as": "dpivzZ6u", "caption": "0GezTo18", "height": 41, "imageUrl": "09AvntI2", "smallImageUrl": "2qqCZlR9", "width": 27}, {"as": "ZGYLaCVG", "caption": "2bPmPtNZ", "height": 87, "imageUrl": "lPEx4rj8", "smallImageUrl": "mpfmzO1x", "width": 13}, {"as": "g5NMFnl7", "caption": "Adu5eTuN", "height": 33, "imageUrl": "fy4jOdmx", "smallImageUrl": "iFGda7Qz", "width": 83}], "itemId": "Rcs24vlE", "itemIds": ["fOP7BtYV", "9TDtGQgJ", "pbpu9sfn"], "itemQty": {"fozuk545": 4, "wtndLXhY": 45, "2O6xCShV": 100}, "itemType": "CODE", "language": "rWFgVdcT", "listable": false, "localExt": {"auVZiYVo": {}, "fFVkkNHG": {}, "kc8XZq2M": {}}, "longDescription": "DfXbv1DN", "maxCount": 28, "maxCountPerUser": 9, "name": "qaiiPmBW", "namespace": "ZZanQGWs", "optionBoxConfig": {"boxItems": [{"count": 24, "itemId": "XFSNzJoj", "itemSku": "iE1Vu45n"}, {"count": 68, "itemId": "06xQeu3P", "itemSku": "oQ6fhgnR"}, {"count": 66, "itemId": "8a2tKCZ3", "itemSku": "zKrYR6eJ"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 41, "comparison": "isLessThan", "name": "6dz8ALt8", "predicateType": "SeasonTierPredicate", "value": "ik1f4DJ4", "values": ["Wl425B06", "ZapFhCJ2", "yjd0YqCj"]}, {"anyOf": 52, "comparison": "isLessThan", "name": "9fVxvVrt", "predicateType": "SeasonPassPredicate", "value": "l6prs1fW", "values": ["rQ4VoTNB", "VDsdaVWu", "PWP6cVZh"]}, {"anyOf": 54, "comparison": "isNot", "name": "K7Vs1sUi", "predicateType": "SeasonTierPredicate", "value": "BvUnILYR", "values": ["azlTqN8u", "6XQC1pNh", "LTIrwpWA"]}]}, {"operator": "or", "predicates": [{"anyOf": 70, "comparison": "isNot", "name": "Dppw2Jv3", "predicateType": "SeasonPassPredicate", "value": "oyniBI4C", "values": ["gpY69l8B", "ALPTWHIS", "T72SVeoO"]}, {"anyOf": 1, "comparison": "isNot", "name": "2OQ3fqXu", "predicateType": "EntitlementPredicate", "value": "vCVDdMts", "values": ["KXRBeDtZ", "6xAgruAa", "qby2Msal"]}, {"anyOf": 6, "comparison": "excludes", "name": "Xq6pXnkj", "predicateType": "SeasonTierPredicate", "value": "sHjXVj3k", "values": ["QCG7kuTM", "ngL7SFPS", "4jwSLx3V"]}]}, {"operator": "or", "predicates": [{"anyOf": 67, "comparison": "isNot", "name": "gfVy4VGT", "predicateType": "SeasonTierPredicate", "value": "mqedYrf2", "values": ["8lBEzZ72", "Bp1kN25Q", "E9N6HHRa"]}, {"anyOf": 62, "comparison": "is", "name": "Sfu2lvpw", "predicateType": "EntitlementPredicate", "value": "xjSxIrIy", "values": ["pjpmdApz", "xwkv660Y", "Aj665x1N"]}, {"anyOf": 78, "comparison": "isNot", "name": "SduOGHtg", "predicateType": "SeasonTierPredicate", "value": "oR0AkUw5", "values": ["cYnFTC2C", "Bb4Rzhue", "1SfQAYGa"]}]}]}, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 18, "fixedTrialCycles": 38, "graceDays": 5}, "region": "miwpF44l", "regionData": [{"currencyCode": "OghqInMF", "currencyNamespace": "JO9ula0u", "currencyType": "VIRTUAL", "discountAmount": 2, "discountExpireAt": "1975-09-08T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1973-02-24T00:00:00Z", "discountedPrice": 96, "expireAt": "1989-11-09T00:00:00Z", "price": 75, "purchaseAt": "1982-05-28T00:00:00Z", "trialPrice": 62}, {"currencyCode": "myimknvi", "currencyNamespace": "Y21xlPDK", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1990-03-31T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1997-05-14T00:00:00Z", "discountedPrice": 94, "expireAt": "1996-08-10T00:00:00Z", "price": 0, "purchaseAt": "1977-10-12T00:00:00Z", "trialPrice": 27}, {"currencyCode": "JCVfyB38", "currencyNamespace": "sFoXwSUU", "currencyType": "REAL", "discountAmount": 32, "discountExpireAt": "1998-11-24T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1992-08-22T00:00:00Z", "discountedPrice": 40, "expireAt": "1977-07-17T00:00:00Z", "price": 13, "purchaseAt": "1986-05-20T00:00:00Z", "trialPrice": 4}], "seasonType": "TIER", "sku": "oFWLSbW0", "stackable": false, "status": "INACTIVE", "tags": ["iHnD0rii", "y2c964lj", "efQQLph2"], "targetCurrencyCode": "vD4PQEyn", "targetItemId": "9sxyINGl", "targetNamespace": "m4MBu6sR", "thumbnailUrl": "TfahfhXF", "title": "xF9MV1V8", "updatedAt": "1974-12-25T00:00:00Z", "useCount": 68}, "namespace": "ukhhMKX6", "order": {"currency": {"currencyCode": "ueXYQiRW", "currencySymbol": "1ejv5Mmt", "currencyType": "REAL", "decimals": 25, "namespace": "x6legqC5"}, "ext": {"azcgoTA8": {}, "EiDXEUh9": {}, "i5WOcnmf": {}}, "free": false}, "source": "PURCHASE"}, "script": "pYTdCarN", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'wiS72hYh' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "BkguNdxa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'AdxswleT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'r8d15Bu7' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "ePDDMClv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'VFsfh4ji' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "dy20agYn", "dryRun": true, "fulfillmentUrl": "Sal9zL1r", "itemType": "CODE", "purchaseConditionUrl": "96unxWJc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz '65D2Q8vU' \
    --itemType 'INGAMEITEM' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'ALdohuuT' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "kQQ6jeyE", "dryRun": false, "fulfillmentUrl": "4AKoH8SK", "purchaseConditionUrl": "W9p24s88"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'c1bG0gE0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'xn9uLLIs' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '10' \
    --name '1ykOuok7' \
    --offset '26' \
    --tag 'QjPm0IXq' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "v9xIjmQe", "items": [{"extraSubscriptionDays": 38, "itemId": "8yaruUnz", "itemName": "Qj4h2OF5", "quantity": 73}, {"extraSubscriptionDays": 22, "itemId": "gUnBox96", "itemName": "ZLuZDXAW", "quantity": 76}, {"extraSubscriptionDays": 87, "itemId": "11SYh3d0", "itemName": "TT3fAYxp", "quantity": 72}], "maxRedeemCountPerCampaignPerUser": 100, "maxRedeemCountPerCode": 27, "maxRedeemCountPerCodePerUser": 51, "maxSaleCount": 72, "name": "b3MpEYLh", "redeemEnd": "1990-06-11T00:00:00Z", "redeemStart": "1979-08-27T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["5DUVBuyz", "MwjHo13N", "L0GPF7l3"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '6iNjibiH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "Q20D4G4Y", "items": [{"extraSubscriptionDays": 60, "itemId": "jxnONqlH", "itemName": "mpdCeCiT", "quantity": 28}, {"extraSubscriptionDays": 19, "itemId": "ssunWYae", "itemName": "ZST3uYPw", "quantity": 3}, {"extraSubscriptionDays": 63, "itemId": "Rh8OF0Xh", "itemName": "2GC5rsIO", "quantity": 90}], "maxRedeemCountPerCampaignPerUser": 51, "maxRedeemCountPerCode": 3, "maxRedeemCountPerCodePerUser": 54, "maxSaleCount": 64, "name": "gGiDRShL", "redeemEnd": "1988-12-22T00:00:00Z", "redeemStart": "1978-10-08T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["73Wv627u", "lCLo0xrJ", "ZWbfW85E"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'tRf2DuG3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'jQzZLpYW' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'LtGIPxvA' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "oQUbvyaX", "localizationDisplayNames": {"gPF0tfQY": "7ghq9etb", "5vk2I5ie": "tQoA5b3i", "pKZrvmh2": "rb2DARtB"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '30BjJo43' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId '3kAL5gCT' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'pKN77DAN' \
    --namespace $AB_NAMESPACE \
    --storeId 'cM2mneR3' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"Jvcta1s3": "FFXyH7am", "K2c2BjzN": "ubL7zr5i", "FCqdbYeo": "cXDl6KYs"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath '2llCBDo8' \
    --namespace $AB_NAMESPACE \
    --storeId 'FcjjkFFZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'RtgnkjIm' \
    --namespace $AB_NAMESPACE \
    --storeId 'cmEjqHoG' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath '69XZKvEX' \
    --namespace $AB_NAMESPACE \
    --storeId 'AIFm7ghj' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'vOjxYPDh' \
    --namespace $AB_NAMESPACE \
    --storeId 'TuxF2CWy' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'h587LDyM' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '97' \
    --code 'FLy7jOXk' \
    --limit '97' \
    --offset '73' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId '3aiXwyV8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'X3nQ7vzY' \
    --namespace $AB_NAMESPACE \
    --batchNo '4' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'Kp506EhH' \
    --namespace $AB_NAMESPACE \
    --batchNo '11' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'N5pZ8AYA' \
    --namespace $AB_NAMESPACE \
    --batchNo '94' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'o9A7UFD4' \
    --namespace $AB_NAMESPACE \
    --code 'ofLSJoLS' \
    --limit '20' \
    --offset '79' \
    --userId 'ZmbYkpev' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code '0HPsh0rC' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'CPyqRjJs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'kfPIh1Wc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "ehWTvh7y", "currencySymbol": "ABPo8SBC", "currencyType": "VIRTUAL", "decimals": 38, "localizationDescriptions": {"eCMJ6ikl": "P5pQwkVO", "SZS4fMMR": "YoTMdE3x", "dU6mvObY": "In9wawOq"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"aqsPzMw2": "DletGU2X", "DWGljOxn": "9vRa545b", "GFquPxUU": "CLYCZPij"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode '4tj4iihc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'VEcqefde' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'bI00Nlof' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'c7hAlzpe' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "NBxDat1S", "rewards": [{"currency": {"currencyCode": "fmz7PoEs", "namespace": "OUSWnsSl"}, "item": {"itemId": "prnHAdZY", "itemSku": "nvMHsnZE", "itemType": "Hg2BOgdO"}, "quantity": 80, "type": "ITEM"}, {"currency": {"currencyCode": "WSYHylrP", "namespace": "mGFxGuyI"}, "item": {"itemId": "lXTZhDeM", "itemSku": "JTOdQRBx", "itemType": "Bzvka7TN"}, "quantity": 76, "type": "CURRENCY"}, {"currency": {"currencyCode": "737elad2", "namespace": "zHNWaZLK"}, "item": {"itemId": "r5IGE2qM", "itemSku": "24LlE2BS", "itemType": "7V1zeEnv"}, "quantity": 87, "type": "CURRENCY"}]}, {"id": "w7okIewY", "rewards": [{"currency": {"currencyCode": "ZYEY7jvd", "namespace": "nbJJG2vG"}, "item": {"itemId": "s0dxXhJr", "itemSku": "Debaphhz", "itemType": "5efJugJe"}, "quantity": 28, "type": "CURRENCY"}, {"currency": {"currencyCode": "6pcyN5Wv", "namespace": "WzRv4Wxp"}, "item": {"itemId": "kRVQG3dY", "itemSku": "r3d4O3V2", "itemType": "06UVu4uF"}, "quantity": 63, "type": "CURRENCY"}, {"currency": {"currencyCode": "In5oJ8e3", "namespace": "ggbARQn8"}, "item": {"itemId": "ZThKaQvB", "itemSku": "h7aS4Bzv", "itemType": "5TqVBJna"}, "quantity": 80, "type": "CURRENCY"}]}, {"id": "x48ifGTh", "rewards": [{"currency": {"currencyCode": "uSycp6YF", "namespace": "7M4DOubd"}, "item": {"itemId": "EWj5sbFh", "itemSku": "BEojM80e", "itemType": "jMwJM77g"}, "quantity": 71, "type": "CURRENCY"}, {"currency": {"currencyCode": "v3QkCkGb", "namespace": "TjVMCHl0"}, "item": {"itemId": "X69Tcfij", "itemSku": "fWrNf6wf", "itemType": "anLcF8BD"}, "quantity": 73, "type": "CURRENCY"}, {"currency": {"currencyCode": "DwTJoaST", "namespace": "U2IzIMxK"}, "item": {"itemId": "8IJ2hl8i", "itemSku": "G5W6pY9p", "itemType": "YOYcwBua"}, "quantity": 6, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"XvKaLJNt": "XeXdyldB", "J9qUqfQa": "V7KChrIJ", "C1EB6Yel": "a1JdlV2P"}}, {"platform": "XBOX", "platformDlcIdMap": {"KFqBtPMb": "ma0l21ON", "VOJFn5Ql": "IJvcTwRc", "3PcQLoQ7": "P1fDjsoT"}}, {"platform": "STEAM", "platformDlcIdMap": {"dz9OGBz3": "CILeI2n9", "K51hUlg0": "xAXr3Fc5", "EzSsxaIO": "xKsLNrgP"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'bKvys4KN' \
    --itemId '["dvoiXmsw", "tzEGIrjQ", "tISzurQu"]' \
    --limit '69' \
    --offset '49' \
    --userId 'RRXV4pSG' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'JFnYHr4V' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '18' \
    --offset '50' \
    --status 'FAIL' \
    --userId '78qr6F5z' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "YnLHCFF4", "password": "qTGsF5MG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "3Q0CmNDg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "QIXvbuyC", "serviceAccountId": "bopKBYOm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "lAi8fDFH", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"L5qNBKXY": "HGMZ6fSr", "gcGYEzYG": "duNV85Bt", "kcyubSxN": "zEOYHZT4"}}, {"itemIdentity": "xWMp38fa", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"IFkePzMR": "wcuV055b", "XmE1yoo1": "AMrHNc9H", "NHM8RM0Z": "dHjNS1Fn"}}, {"itemIdentity": "ah5oLNi0", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"1TRjlEZo": "OEBQLCNA", "iYapXtdy": "WTcEhWEs", "S0GLtUvh": "wal4ulbl"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "p76RvPqW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "oOgaFX7e", "publisherAuthenticationKey": "3eUntfL2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "23HbXXzj", "clientSecret": "I1QoQoA5", "organizationId": "p9KGl9ZQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "z9xAC5jo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'ERssHjak' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'xtwUw1ZB' \
    --itemId '4plaNKfz' \
    --itemType 'COINS' \
    --endTime 'AKnecHwn' \
    --startTime 'ZTG8xO31' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'BDmfO2BS' \
    --itemId 'Mgm9ec4z' \
    --itemType 'COINS' \
    --endTime 'UMXzNaqz' \
    --startTime 'A4gZpKq9' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "rALm63oJ", "targetItemId": "MOTfjKWA", "targetNamespace": "ezzRW9Ly"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'wNETi0a0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "yeVEbYWB", "appType": "DLC", "baseAppId": "KOmCvGxy", "boothName": "LL7N2GNJ", "categoryPath": "JM2ZG1Ol", "clazz": "pgmltA4S", "displayOrder": 66, "entitlementType": "DURABLE", "ext": {"lYV7VcWJ": {}, "DLx1RyvN": {}, "Lw7aifar": {}}, "features": ["NKNFF1cX", "0Y4ISmdF", "pLdW0GUX"], "images": [{"as": "YjiDqpNy", "caption": "b3RVFFhb", "height": 6, "imageUrl": "WykEpnGW", "smallImageUrl": "eHoL5TLQ", "width": 4}, {"as": "WiUtMcB6", "caption": "3MDBRm3f", "height": 77, "imageUrl": "sx7pr8et", "smallImageUrl": "IJI01Hyz", "width": 77}, {"as": "h0HKZwsl", "caption": "tHsS1eqf", "height": 88, "imageUrl": "90Q9SlId", "smallImageUrl": "R77MKpCh", "width": 70}], "itemIds": ["VJ3sTfp3", "NG9pQuAQ", "rWU2lVSl"], "itemQty": {"gS63nzyd": 82, "8lnD1uuX": 78, "cHM1cY0R": 99}, "itemType": "CODE", "listable": true, "localizations": {"hVJ1KaPQ": {"description": "JfSDZiTS", "localExt": {"OOWYjlZh": {}, "QbZc8yMs": {}, "TAkZHA3L": {}}, "longDescription": "FXER2Wfn", "title": "9uTdFMZZ"}, "ejRxzgEE": {"description": "u17GmljX", "localExt": {"K5FtykJ0": {}, "J5tqxaIO": {}, "zYV7qcxj": {}}, "longDescription": "OP4c1jZ9", "title": "xWrYcz1H"}, "8i4hxKPS": {"description": "cDdI1bcm", "localExt": {"KNTwUsGl": {}, "Xc27Bk6P": {}, "4mQRkYxH": {}}, "longDescription": "Nueqbxzq", "title": "GeSYiawW"}}, "maxCount": 96, "maxCountPerUser": 56, "name": "kUEqnHGz", "optionBoxConfig": {"boxItems": [{"count": 28, "itemId": "h6CGNqjE", "itemSku": "IUjyegMb"}, {"count": 62, "itemId": "wNmKGdcS", "itemSku": "xOq6Dtbz"}, {"count": 11, "itemId": "pzXpZ08G", "itemSku": "P1wVYBzz"}]}, "purchasable": false, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 1, "fixedTrialCycles": 66, "graceDays": 18}, "regionData": {"p1TOePPx": [{"currencyCode": "Gi6K6PYW", "currencyNamespace": "GswUScNf", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1987-10-27T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1972-05-03T00:00:00Z", "discountedPrice": 79, "expireAt": "1998-03-10T00:00:00Z", "price": 65, "purchaseAt": "1978-06-22T00:00:00Z", "trialPrice": 12}, {"currencyCode": "1SKWsnMS", "currencyNamespace": "hH2F30hl", "currencyType": "REAL", "discountAmount": 80, "discountExpireAt": "1994-08-22T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1996-02-08T00:00:00Z", "discountedPrice": 21, "expireAt": "1978-06-17T00:00:00Z", "price": 91, "purchaseAt": "1988-09-28T00:00:00Z", "trialPrice": 26}, {"currencyCode": "RJaC1FIq", "currencyNamespace": "q3rbccIG", "currencyType": "REAL", "discountAmount": 97, "discountExpireAt": "1982-12-30T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1985-01-17T00:00:00Z", "discountedPrice": 27, "expireAt": "1978-12-06T00:00:00Z", "price": 59, "purchaseAt": "1998-01-26T00:00:00Z", "trialPrice": 11}], "CPTNk7t8": [{"currencyCode": "tYgyEm3u", "currencyNamespace": "KFqmIREl", "currencyType": "REAL", "discountAmount": 2, "discountExpireAt": "1986-06-21T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1976-03-27T00:00:00Z", "discountedPrice": 54, "expireAt": "1977-10-20T00:00:00Z", "price": 22, "purchaseAt": "1985-07-22T00:00:00Z", "trialPrice": 55}, {"currencyCode": "KkWd57lo", "currencyNamespace": "ujdfy4jp", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1973-06-01T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1982-02-12T00:00:00Z", "discountedPrice": 84, "expireAt": "1982-12-13T00:00:00Z", "price": 93, "purchaseAt": "1992-05-27T00:00:00Z", "trialPrice": 20}, {"currencyCode": "2oEKCnHS", "currencyNamespace": "OS93TI4O", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1974-02-21T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1987-08-15T00:00:00Z", "discountedPrice": 94, "expireAt": "1981-07-07T00:00:00Z", "price": 34, "purchaseAt": "1976-11-14T00:00:00Z", "trialPrice": 55}], "ZgcX6F42": [{"currencyCode": "oioD0erZ", "currencyNamespace": "432FVBOw", "currencyType": "REAL", "discountAmount": 95, "discountExpireAt": "1998-04-06T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1972-06-28T00:00:00Z", "discountedPrice": 95, "expireAt": "1981-05-22T00:00:00Z", "price": 83, "purchaseAt": "1971-07-17T00:00:00Z", "trialPrice": 69}, {"currencyCode": "RyyAd0FI", "currencyNamespace": "GaP4Drzi", "currencyType": "REAL", "discountAmount": 52, "discountExpireAt": "1974-07-11T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1975-01-06T00:00:00Z", "discountedPrice": 4, "expireAt": "1987-12-18T00:00:00Z", "price": 56, "purchaseAt": "1995-08-17T00:00:00Z", "trialPrice": 10}, {"currencyCode": "VPmRCG9e", "currencyNamespace": "dY8srwLL", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1986-11-07T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1985-02-28T00:00:00Z", "discountedPrice": 14, "expireAt": "1988-12-19T00:00:00Z", "price": 67, "purchaseAt": "1975-05-26T00:00:00Z", "trialPrice": 75}]}, "seasonType": "TIER", "sku": "vRfgk48C", "stackable": false, "status": "INACTIVE", "tags": ["XSbJpD2I", "el5N22ST", "Php9hqsi"], "targetCurrencyCode": "mTfDXcdt", "targetNamespace": "hJ3G3DI6", "thumbnailUrl": "hVU3KUOS", "useCount": 8}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'VLsP0aO9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '33iuWfF2' \
    --appId 'v8z764xo' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --availableDate 'mtb8tYX2' \
    --baseAppId '2PvMFBRw' \
    --categoryPath 'S2WUYVKn' \
    --features '4o5F1af9' \
    --itemType 'SUBSCRIPTION' \
    --limit '18' \
    --offset '83' \
    --region 'RI88f6b8' \
    --sortBy '["createdAt:desc", "createdAt", "updatedAt"]' \
    --storeId 'cYS1xPoo' \
    --tags 'WCc4ixMF' \
    --targetNamespace 'SgiOchUW' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["c3i9ZyBT", "CRD8G4jY", "PLvDKvqs"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '11wAsZ9m' \
    --sku 'HeiouyqO' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'S1ac39HA' \
    --populateBundle 'true' \
    --region 'Gr0kCiDj' \
    --storeId 'OBcCuKbg' \
    --sku '251ugBPP' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'QT6zlbax' \
    --sku '7TNr6Qvw' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["8gBTTRnj", "smwhP9Fq", "K6SG0Rir"]' \
    --storeId 'xnb71jcT' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'q7cAch5l' \
    --region 'DZeViKRx' \
    --storeId '33rr44aw' \
    --itemIds 'OzpsJFEl' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["eSBI6eR8", "OGJdsCv4", "cB2kQh0X"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'w1gE5M38' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'INGAMEITEM' \
    --limit '19' \
    --offset '40' \
    --storeId 'NkqxVB1v' \
    --keyword 'zQZhKGt9' \
    --language '4REfHMlE' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '79' \
    --offset '46' \
    --sortBy '["name:desc", "displayOrder:asc", "createdAt:desc"]' \
    --storeId 'IFuzbXux' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId '62Ln54uv' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'e35QlUYj' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "0fn70CfQ", "appType": "SOFTWARE", "baseAppId": "QOEbhdgh", "boothName": "OcBGyCId", "categoryPath": "3ZJgKaUx", "clazz": "4nPwAcpH", "displayOrder": 76, "entitlementType": "CONSUMABLE", "ext": {"1GDrt3aE": {}, "nKQUMCHU": {}, "PfKFFn0h": {}}, "features": ["nF65p153", "CzzrTo1H", "PTrc1Uza"], "images": [{"as": "MxqYrQ9c", "caption": "qTKn0hax", "height": 68, "imageUrl": "B0wEajcA", "smallImageUrl": "BGUcqjCR", "width": 38}, {"as": "PT1rZOQ5", "caption": "0lBF8P6m", "height": 53, "imageUrl": "EnixknbJ", "smallImageUrl": "7ov1iVFi", "width": 31}, {"as": "Yl010dDx", "caption": "xjczqufV", "height": 62, "imageUrl": "YLWCpAcg", "smallImageUrl": "sf0RuXuu", "width": 6}], "itemIds": ["KkPktOOt", "pRY1ioN7", "RUORUfYS"], "itemQty": {"ShppBP8U": 4, "Tmto8pdL": 69, "uIkHBFys": 61}, "itemType": "COINS", "listable": false, "localizations": {"Nb62rXwC": {"description": "Zkrhq7rQ", "localExt": {"feWSSZT3": {}, "Gsko9XUp": {}, "8RfPqV50": {}}, "longDescription": "ffKHCykG", "title": "7jRTC6gy"}, "BUyMVnJF": {"description": "PQC4sbGn", "localExt": {"FNGLRyGH": {}, "3kLiK6bs": {}, "lbPcVFlC": {}}, "longDescription": "TMrPfCyx", "title": "672m0iPE"}, "WXtYa3jP": {"description": "UTiXjbDj", "localExt": {"w9zGtqpP": {}, "J6KOV4TF": {}, "wOJ7gWNN": {}}, "longDescription": "QqUoXcZA", "title": "TQlb7llR"}}, "maxCount": 11, "maxCountPerUser": 1, "name": "FXbMUgkK", "optionBoxConfig": {"boxItems": [{"count": 54, "itemId": "Zn27yOlm", "itemSku": "7xHwt6fe"}, {"count": 42, "itemId": "IxRIqb1l", "itemSku": "3yhE5phP"}, {"count": 11, "itemId": "HfQmCWbk", "itemSku": "XBILUYLd"}]}, "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 23, "fixedTrialCycles": 39, "graceDays": 41}, "regionData": {"9YdAwcVA": [{"currencyCode": "FLWO2Wjp", "currencyNamespace": "sV8m6Szt", "currencyType": "VIRTUAL", "discountAmount": 25, "discountExpireAt": "1989-05-19T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1988-11-06T00:00:00Z", "discountedPrice": 47, "expireAt": "1990-01-10T00:00:00Z", "price": 89, "purchaseAt": "1971-11-11T00:00:00Z", "trialPrice": 15}, {"currencyCode": "QAmJIkoD", "currencyNamespace": "KlN57nX5", "currencyType": "REAL", "discountAmount": 70, "discountExpireAt": "1994-08-04T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1983-12-01T00:00:00Z", "discountedPrice": 86, "expireAt": "1978-11-06T00:00:00Z", "price": 5, "purchaseAt": "1989-03-03T00:00:00Z", "trialPrice": 29}, {"currencyCode": "zcxkYgeG", "currencyNamespace": "IG3241uU", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1998-06-05T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1974-11-17T00:00:00Z", "discountedPrice": 95, "expireAt": "1980-02-07T00:00:00Z", "price": 12, "purchaseAt": "1982-06-16T00:00:00Z", "trialPrice": 59}], "vxTG4eFM": [{"currencyCode": "S5FJSWcK", "currencyNamespace": "xGOhK87o", "currencyType": "REAL", "discountAmount": 59, "discountExpireAt": "1986-10-14T00:00:00Z", "discountPercentage": 42, "discountPurchaseAt": "1989-06-06T00:00:00Z", "discountedPrice": 46, "expireAt": "1973-09-27T00:00:00Z", "price": 78, "purchaseAt": "1976-08-06T00:00:00Z", "trialPrice": 83}, {"currencyCode": "k9LPfMpS", "currencyNamespace": "1nJnG4oj", "currencyType": "REAL", "discountAmount": 26, "discountExpireAt": "1972-06-30T00:00:00Z", "discountPercentage": 43, "discountPurchaseAt": "1990-12-29T00:00:00Z", "discountedPrice": 8, "expireAt": "1995-05-23T00:00:00Z", "price": 75, "purchaseAt": "1991-10-27T00:00:00Z", "trialPrice": 3}, {"currencyCode": "UtpYRNI6", "currencyNamespace": "CkbOqB6l", "currencyType": "REAL", "discountAmount": 85, "discountExpireAt": "1987-06-12T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1979-08-11T00:00:00Z", "discountedPrice": 2, "expireAt": "1984-03-07T00:00:00Z", "price": 70, "purchaseAt": "1989-07-05T00:00:00Z", "trialPrice": 18}], "liQMg3lm": [{"currencyCode": "9uyFxExV", "currencyNamespace": "bXmqm9Da", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1977-05-30T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1974-11-03T00:00:00Z", "discountedPrice": 75, "expireAt": "1972-01-05T00:00:00Z", "price": 41, "purchaseAt": "1997-05-19T00:00:00Z", "trialPrice": 31}, {"currencyCode": "sJ47bpaA", "currencyNamespace": "XcmOybjw", "currencyType": "REAL", "discountAmount": 99, "discountExpireAt": "1984-01-22T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1984-11-15T00:00:00Z", "discountedPrice": 84, "expireAt": "1992-05-22T00:00:00Z", "price": 97, "purchaseAt": "1996-10-05T00:00:00Z", "trialPrice": 4}, {"currencyCode": "OuJNTynz", "currencyNamespace": "IAbrTqNI", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1979-10-01T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1994-09-25T00:00:00Z", "discountedPrice": 13, "expireAt": "1974-09-03T00:00:00Z", "price": 33, "purchaseAt": "1971-10-24T00:00:00Z", "trialPrice": 61}]}, "seasonType": "TIER", "sku": "J9jYvmW9", "stackable": false, "status": "ACTIVE", "tags": ["hCclxA7R", "CNb8bn1F", "uu2nyR1W"], "targetCurrencyCode": "9i21pCMO", "targetNamespace": "Fm43XvYz", "thumbnailUrl": "orj6SSlO", "useCount": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'FWD7JEKZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'Y0saLhvw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId '31dahBy0' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId '9arf18W6' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 31, "orderNo": "izxrqFY3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'v4qnoARb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'bdQPllfH' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'ghIHpwBO' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "3tvGPQOc", "previewUrl": "IagsTizU", "thumbnailUrl": "k6kdYXVQ", "type": "video", "url": "jAx2GOmP", "videoSource": "youtube"}, {"alt": "filgf5sq", "previewUrl": "iP7ZHiTy", "thumbnailUrl": "0CzQFzRG", "type": "image", "url": "UWRNKF7l", "videoSource": "youtube"}, {"alt": "U8WCTKaa", "previewUrl": "ybiin9AP", "thumbnailUrl": "bBdgs1vZ", "type": "image", "url": "EWBKL4BA", "videoSource": "youtube"}], "developer": "sfuGjF53", "forumUrl": "N7gwcu6W", "genres": ["Simulation", "Indie", "Strategy"], "localizations": {"12ZyUuS3": {"announcement": "E08iPfNb", "slogan": "Rj1JIRYD"}, "kpOuwTEl": {"announcement": "7Wtuw1vF", "slogan": "Q5tBGAdj"}, "SKo7YSyg": {"announcement": "d94GCj3h", "slogan": "hTaPuave"}}, "platformRequirements": {"OMq9YIk4": [{"additionals": "J3ILjq3h", "directXVersion": "cbBNF8hp", "diskSpace": "rUjB2JMc", "graphics": "XfO5UISI", "label": "eevcMwuB", "osVersion": "eNgMCcWK", "processor": "DOFODLqC", "ram": "NHoE71T7", "soundCard": "ZtdEAyWB"}, {"additionals": "0b7eBxHV", "directXVersion": "WOM45bx4", "diskSpace": "wJwuE6zA", "graphics": "m4aAlSoV", "label": "muG1wmRP", "osVersion": "3vrW1XtW", "processor": "W8iXraiL", "ram": "GUWWj6lj", "soundCard": "gkB6po0O"}, {"additionals": "Tve2wd5N", "directXVersion": "hFvCl5pc", "diskSpace": "V9dVgK12", "graphics": "9qkq8EtF", "label": "XJHPcfR7", "osVersion": "yEvNPeOX", "processor": "Rqfsl9ur", "ram": "hHFaqcwr", "soundCard": "9HT2qFuD"}], "TRxpmcYf": [{"additionals": "yjXcgZ3G", "directXVersion": "6HuPycHL", "diskSpace": "JrhlsntM", "graphics": "UJjiKLUL", "label": "g2DM88pS", "osVersion": "WMFJ8TmK", "processor": "7XujwCJN", "ram": "HyOqQFVv", "soundCard": "ZS8fgI3s"}, {"additionals": "xTyH5ZlP", "directXVersion": "3OpL4aXP", "diskSpace": "Nk1tUufA", "graphics": "0cBksUdP", "label": "0qAeelYW", "osVersion": "Ewsc4ALO", "processor": "rACX4kI7", "ram": "llTnJMOP", "soundCard": "q0NAsoLh"}, {"additionals": "b0ejOCx9", "directXVersion": "2Nwjdnzy", "diskSpace": "D7iVOzDl", "graphics": "VJ4kpKow", "label": "0RwzYL9u", "osVersion": "xLiy9PMZ", "processor": "MaUi1TpF", "ram": "0unHIlGS", "soundCard": "nuJvWlVB"}], "5yj1eWiU": [{"additionals": "mbsQEs7L", "directXVersion": "OofxcUcC", "diskSpace": "GoKfVS5o", "graphics": "hvXnS98m", "label": "MV11voKB", "osVersion": "NTriFMcJ", "processor": "J64mGKyf", "ram": "z1jdGzSR", "soundCard": "LjDrSKwg"}, {"additionals": "LvBffvgQ", "directXVersion": "HyRDTzF6", "diskSpace": "4uRgXE3Y", "graphics": "ZMvrjmva", "label": "RUV710k5", "osVersion": "zQESu9lK", "processor": "npxjxR5O", "ram": "YwfDi6F0", "soundCard": "gZZ8NzMR"}, {"additionals": "rof8GhYS", "directXVersion": "qjKobyZf", "diskSpace": "6nivXxRp", "graphics": "grCI8JWl", "label": "QEiSyx9W", "osVersion": "u2TXDgqX", "processor": "KDuDNDCz", "ram": "sQzY2NWI", "soundCard": "fFEart2G"}]}, "platforms": ["Linux", "Android", "Windows"], "players": ["Coop", "Multi", "Multi"], "primaryGenre": "Action", "publisher": "T3CnQqyz", "releaseDate": "1973-07-11T00:00:00Z", "websiteUrl": "DQXeWihy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'g8RxGkxM' \
    --namespace $AB_NAMESPACE \
    --storeId 'AX5NBTKU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId '0KibrB2W' \
    --namespace $AB_NAMESPACE \
    --storeId 'pRsQD7xw' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId '68PqPWEv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'nXhOgxp9' \
    --namespace $AB_NAMESPACE \
    --storeId 'aB6KoWnI' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'UPSFWTGp' \
    --itemId 'Ttq2iAzC' \
    --namespace $AB_NAMESPACE \
    --storeId '0RFe48c7' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'icMZCGyS' \
    --itemId 'GFaqsEPT' \
    --namespace $AB_NAMESPACE \
    --storeId 'A4BMMxo6' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId '7sM6BpMf' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'AC4oLVtE' \
    --populateBundle 'true' \
    --region 'noGOgm4K' \
    --storeId 'uV2WqH7X' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 60, "comparison": "includes", "name": "RbSpqXAX", "predicateType": "EntitlementPredicate", "value": "aVVnlcdp", "values": ["KGqEEgN1", "m0WDM236", "NbuPmqCp"]}, {"anyOf": 33, "comparison": "is", "name": "g3LBVogw", "predicateType": "SeasonTierPredicate", "value": "X4xRXX7w", "values": ["4VRQPy4P", "g2as9wlg", "0lglMVgH"]}, {"anyOf": 11, "comparison": "isLessThan", "name": "yUClTlBM", "predicateType": "SeasonTierPredicate", "value": "6NOnptiU", "values": ["X1FISuxa", "ps7Tk1qh", "1R4UT29h"]}]}, {"operator": "and", "predicates": [{"anyOf": 35, "comparison": "includes", "name": "6kvIZLOz", "predicateType": "SeasonTierPredicate", "value": "Zl2a8FAQ", "values": ["sbBlqep1", "TIYh81fu", "mjCblzc9"]}, {"anyOf": 35, "comparison": "is", "name": "j0gpzPXj", "predicateType": "EntitlementPredicate", "value": "isCsPGAs", "values": ["VZSB8amJ", "z1KbDkee", "vXcedmru"]}, {"anyOf": 56, "comparison": "isNot", "name": "bI2HlIXq", "predicateType": "SeasonPassPredicate", "value": "f7zr1sLM", "values": ["wC1Rkxu2", "Hx28KRtH", "MDB3DSyB"]}]}, {"operator": "or", "predicates": [{"anyOf": 75, "comparison": "isLessThanOrEqual", "name": "44i0a8vr", "predicateType": "SeasonPassPredicate", "value": "frUNhjDV", "values": ["cA4nLeCv", "3TKwuk6F", "XgWE03w8"]}, {"anyOf": 24, "comparison": "isLessThanOrEqual", "name": "raVyitxs", "predicateType": "EntitlementPredicate", "value": "8bzt6zZG", "values": ["qkACNwCW", "6fdk19WD", "LrMpyr1o"]}, {"anyOf": 73, "comparison": "isLessThanOrEqual", "name": "kMaadUWi", "predicateType": "EntitlementPredicate", "value": "DB7HcshL", "values": ["RgJugszu", "hcCduQ7x", "76orLTRc"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'rFs0Gwi6' \
    --namespace $AB_NAMESPACE \
    --storeId 'h2P2S8WC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "cNwxFeww"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'U82vCXMi' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '53' \
    --name 'YVEVI5Xa' \
    --offset '49' \
    --tag 'Fr7kFyuA' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "kt4WkpCp", "name": "iTyHvACU", "status": "INACTIVE", "tags": ["UVKwXTZp", "bKo8xkwW", "i53QiSFu"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'NTeWv3MZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'GetKeyGroup' test.out

#- 113 UpdateKeyGroup
# body param: body
echo '{"description": "qjr4PnJ2", "name": "AWEmUCgT", "status": "INACTIVE", "tags": ["nzOhK0Yy", "9eEvoyiG", "YxtCzkUM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'JrY3x92h' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'UpdateKeyGroup' test.out

#- 114 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '2ba8sAnU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'GetKeyGroupDynamic' test.out

#- 115 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'bHGNd3U9' \
    --namespace $AB_NAMESPACE \
    --limit '60' \
    --offset '11' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 115 'ListKeys' test.out

#- 116 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'eJTGWeOF' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 116 'UploadKeys' test.out

#- 117 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'w9Ovl2QC' \
    --limit '99' \
    --offset '79' \
    --orderNos '["F3rjrT4P", "uSynbdtg", "lRpwltBi"]' \
    --sortBy 'QUrd1d6h' \
    --startTime '23IMbpX7' \
    --status 'REFUNDED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 117 'QueryOrders' test.out

#- 118 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'GetOrderStatistics' test.out

#- 119 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'YdTF1Kuq' \
    > test.out 2>&1
eval_tap $? 119 'GetOrder' test.out

#- 120 RefundOrder
# body param: body
echo '{"description": "w2G6SiIv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'bAAl27GK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'RefundOrder' test.out

#- 121 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 121 'GetPaymentCallbackConfig' test.out

#- 122 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "u5qTJTj1", "privateKey": "1N6y47cO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'UpdatePaymentCallbackConfig' test.out

#- 123 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'D3pQS9wz' \
    --externalId 'wf41gfCo' \
    --limit '68' \
    --notificationSource 'ADYEN' \
    --notificationType 'bTmIxxEj' \
    --offset '99' \
    --paymentOrderNo 'm5BLAnob' \
    --startDate '90HpyrY4' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 123 'QueryPaymentNotifications' test.out

#- 124 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'bgoxQwYY' \
    --limit '27' \
    --offset '38' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentOrders' test.out

#- 125 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "jc30LDuc", "currencyNamespace": "RSwGv705", "customParameters": {"BRmkYrAe": {}, "2FFGcmvf": {}, "LXOsGW5T": {}}, "description": "rw88c5Pf", "extOrderNo": "BZ5y8VY6", "extUserId": "6k1lECJz", "itemType": "INGAMEITEM", "language": "Ire-Co", "metadata": {"iBexYcma": "wFtg8b4b", "mCUraYhx": "5IEAhVkp", "ksZvXmsC": "fWdj9qTA"}, "notifyUrl": "a2EXwHQd", "omitNotification": false, "platform": "yu7anHiu", "price": 63, "recurringPaymentOrderNo": "kRmxv2jl", "region": "BMVjiVW1", "returnUrl": "5Tb4WtLK", "sandbox": true, "sku": "sTARJPzE", "subscriptionId": "82O1w3FH", "targetNamespace": "3hgvbYB7", "targetUserId": "jZ6FaN9I", "title": "YxtISHkZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'CreatePaymentOrderByDedicated' test.out

#- 126 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'iao1OwaE' \
    > test.out 2>&1
eval_tap $? 126 'ListExtOrderNoByExtTxId' test.out

#- 127 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'XLm0zip0' \
    > test.out 2>&1
eval_tap $? 127 'GetPaymentOrder' test.out

#- 128 ChargePaymentOrder
# body param: body
echo '{"extTxId": "HkFCRkup", "paymentMethod": "s9H49M32", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '8L8k1vRV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 128 'ChargePaymentOrder' test.out

#- 129 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "eSGT4tG8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'c8wQc1I9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'RefundPaymentOrderByDedicated' test.out

#- 130 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 83, "currencyCode": "GJZ9ub7b", "notifyType": "CHARGE", "paymentProvider": "STRIPE", "salesTax": 95, "vat": 7}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '87NfiYWy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'SimulatePaymentOrderNotification' test.out

#- 131 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '4wrso5MN' \
    > test.out 2>&1
eval_tap $? 131 'GetPaymentOrderChargeStatus' test.out

#- 132 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 132 'GetPlatformWalletConfig' test.out

#- 133 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Xbox", "Twitch", "IOS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'UpdatePlatformWalletConfig' test.out

#- 134 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 134 'ResetPlatformWalletConfig' test.out

#- 135 CreateReward
# body param: body
echo '{"description": "SZoJE8Ur", "eventTopic": "EG4Ii5hq", "maxAwarded": 22, "maxAwardedPerUser": 50, "namespaceExpression": "9gsCOx8t", "rewardCode": "LnDS5jtT", "rewardConditions": [{"condition": "6fUGSlnz", "conditionName": "OXKu31iF", "eventName": "n9rpNlpL", "rewardItems": [{"duration": 100, "itemId": "YHiX2zVX", "quantity": 48}, {"duration": 48, "itemId": "ww4Lvphk", "quantity": 56}, {"duration": 97, "itemId": "otXXXqo8", "quantity": 89}]}, {"condition": "MSF0Djup", "conditionName": "ZKd6ZjoN", "eventName": "YY19EaBS", "rewardItems": [{"duration": 30, "itemId": "1LbL5ddS", "quantity": 85}, {"duration": 50, "itemId": "KcQLpqRg", "quantity": 75}, {"duration": 98, "itemId": "Mllzqi5Z", "quantity": 79}]}, {"condition": "NDnfdjiY", "conditionName": "LvCMxwgQ", "eventName": "7dIgzBW3", "rewardItems": [{"duration": 25, "itemId": "ZtWIhtab", "quantity": 90}, {"duration": 73, "itemId": "y05L0R6g", "quantity": 4}, {"duration": 9, "itemId": "Ve77HuDj", "quantity": 71}]}], "userIdExpression": "TydiJyUk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'CreateReward' test.out

#- 136 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'nlXA7dUz' \
    --limit '32' \
    --offset '79' \
    --sortBy '["namespace:asc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 136 'QueryRewards' test.out

#- 137 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'ExportRewards' test.out

#- 138 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 138 'ImportRewards' test.out

#- 139 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'lNlGaHdE' \
    > test.out 2>&1
eval_tap $? 139 'GetReward' test.out

#- 140 UpdateReward
# body param: body
echo '{"description": "qanBkR64", "eventTopic": "8gljFVWT", "maxAwarded": 15, "maxAwardedPerUser": 45, "namespaceExpression": "NR6yHSjP", "rewardCode": "ouqOS4Sn", "rewardConditions": [{"condition": "ECu4ncuk", "conditionName": "FPTrljAQ", "eventName": "dK5782Sv", "rewardItems": [{"duration": 90, "itemId": "qpkVrk1K", "quantity": 68}, {"duration": 64, "itemId": "vmHvKpi2", "quantity": 23}, {"duration": 25, "itemId": "p3oS48Ut", "quantity": 4}]}, {"condition": "j9Rj2l51", "conditionName": "CSzSnoXK", "eventName": "jqiY6fU2", "rewardItems": [{"duration": 71, "itemId": "wdiBjRV9", "quantity": 30}, {"duration": 21, "itemId": "a2D5AG9c", "quantity": 68}, {"duration": 27, "itemId": "mEiA9GLn", "quantity": 14}]}, {"condition": "oEE3eWmD", "conditionName": "igYKcdyF", "eventName": "BMI18jb3", "rewardItems": [{"duration": 50, "itemId": "IqZECvcv", "quantity": 85}, {"duration": 56, "itemId": "SNYVH17T", "quantity": 74}, {"duration": 96, "itemId": "jWZRxpos", "quantity": 27}]}], "userIdExpression": "1NGvoeyg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId '0sgBtRC3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateReward' test.out

#- 141 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ruL7IXX1' \
    > test.out 2>&1
eval_tap $? 141 'DeleteReward' test.out

#- 142 CheckEventCondition
# body param: body
echo '{"payload": {"tivPUV08": {}, "nZcRqKdu": {}, "86vFEzIg": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'iZxfC3yM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 142 'CheckEventCondition' test.out

#- 143 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "7Z9Wpo8O", "userId": "UcgOkj8N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId '9k5H0tzb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'DeleteRewardConditionRecord' test.out

#- 144 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 144 'ListStores' test.out

#- 145 CreateStore
# body param: body
echo '{"defaultLanguage": "d3yhXcJi", "defaultRegion": "mS5hUvd9", "description": "DBY8aSm2", "supportedLanguages": ["pPPlKYmx", "4gx6Uvea", "CSd8OMuN"], "supportedRegions": ["R2LWI3Vd", "fyGvjLY3", "vz5iTzXx"], "title": "ydBPQNr8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'CreateStore' test.out

#- 146 ImportStore
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'baYvl0Hi' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 146 'ImportStore' test.out

#- 147 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 147 'GetPublishedStore' test.out

#- 148 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'DeletePublishedStore' test.out

#- 149 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'GetPublishedStoreBackup' test.out

#- 150 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 150 'RollbackPublishedStore' test.out

#- 151 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'p8VMkQxW' \
    > test.out 2>&1
eval_tap $? 151 'GetStore' test.out

#- 152 UpdateStore
# body param: body
echo '{"defaultLanguage": "h17ABYYX", "defaultRegion": "wS9qJHBI", "description": "VK0Xrfvu", "supportedLanguages": ["47ZfWyc2", "jPQFfMo4", "411nQuCP"], "supportedRegions": ["dNiDSu0t", "nFsWOdZE", "RAjSbsdC"], "title": "t7QCwiAd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'a1JSEbbC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateStore' test.out

#- 153 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'gtMM0fr7' \
    > test.out 2>&1
eval_tap $? 153 'DeleteStore' test.out

#- 154 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'ANKd3btM' \
    --action 'DELETE' \
    --itemSku 'Z4GtMSGz' \
    --itemType 'MEDIA' \
    --limit '27' \
    --offset '13' \
    --selected 'false' \
    --sortBy '["updatedAt:desc", "updatedAt:asc", "updatedAt"]' \
    --status 'PUBLISHED' \
    --type 'CATEGORY' \
    --updatedAtEnd 'Gvnmgtkq' \
    --updatedAtStart 'pn0p2vBr' \
    > test.out 2>&1
eval_tap $? 154 'QueryChanges' test.out

#- 155 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'JTDkk6yC' \
    > test.out 2>&1
eval_tap $? 155 'PublishAll' test.out

#- 156 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'CxOFlHHL' \
    > test.out 2>&1
eval_tap $? 156 'PublishSelected' test.out

#- 157 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '4vEz5p2Q' \
    > test.out 2>&1
eval_tap $? 157 'SelectAllRecords' test.out

#- 158 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'OYCNigBg' \
    --action 'CREATE' \
    --itemSku 'E94x7g0g' \
    --itemType 'OPTIONBOX' \
    --type 'STORE' \
    --updatedAtEnd 'HVq8BmCl' \
    --updatedAtStart 'ZZrkHrSU' \
    > test.out 2>&1
eval_tap $? 158 'GetStatistic' test.out

#- 159 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '6MgvFaoJ' \
    > test.out 2>&1
eval_tap $? 159 'UnselectAllRecords' test.out

#- 160 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'HlAy33Vj' \
    --namespace $AB_NAMESPACE \
    --storeId 'uVerJdEK' \
    > test.out 2>&1
eval_tap $? 160 'SelectRecord' test.out

#- 161 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '0WcZ1gFy' \
    --namespace $AB_NAMESPACE \
    --storeId 'aSQyjiZN' \
    > test.out 2>&1
eval_tap $? 161 'UnselectRecord' test.out

#- 162 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'jJrFdjg0' \
    --targetStoreId 'K6bIvQjP' \
    > test.out 2>&1
eval_tap $? 162 'CloneStore' test.out

#- 163 ExportStore
$CLI_EXE \
    --sn platform \
    --op ExportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'BJUVAPL5' \
    > test.out 2>&1
eval_tap $? 163 'ExportStore' test.out

#- 164 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId '9AePqMZu' \
    --limit '20' \
    --offset '84' \
    --sku '45tedBZN' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    --userId 'FoE133Et' \
    > test.out 2>&1
eval_tap $? 164 'QuerySubscriptions' test.out

#- 165 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '2CBgTMCk' \
    > test.out 2>&1
eval_tap $? 165 'RecurringChargeSubscription' test.out

#- 166 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'vehp89jz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 166 'GetTicketDynamic' test.out

#- 167 DecreaseTicketSale
# body param: body
echo '{"orderNo": "lQfsm6CF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'erpEpoBe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'DecreaseTicketSale' test.out

#- 168 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'KqJAoTN4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 168 'GetTicketBoothID' test.out

#- 169 IncreaseTicketSale
# body param: body
echo '{"count": 31, "orderNo": "q7jctWb2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'mlZ6l9x3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'IncreaseTicketSale' test.out

#- 170 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "D0dhbSNd", "value": 98}, {"id": "HrO4sOq2", "value": 56}, {"id": "XThUWsvk", "value": 7}], "steamUserId": "ziFpIimb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '7WKKLgn5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'UnlockSteamUserAchievement' test.out

#- 171 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId '4a5rKETZ' \
    --xboxUserId 'u5EJA3rK' \
    > test.out 2>&1
eval_tap $? 171 'GetXblUserAchievements' test.out

#- 172 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "rHZVaZ2T", "percentComplete": 18}, {"id": "55EetqS1", "percentComplete": 45}, {"id": "cBfbYWsQ", "percentComplete": 87}], "serviceConfigId": "8ixvznGG", "titleId": "gavzx0h5", "xboxUserId": "sIuBhJcM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'YJBOIfWD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'UpdateXblUserAchievement' test.out

#- 173 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'zbLxq6Ep' \
    > test.out 2>&1
eval_tap $? 173 'AnonymizeCampaign' test.out

#- 174 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'e614vuuU' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeEntitlement' test.out

#- 175 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'R0c5OI5s' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeFulfillment' test.out

#- 176 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'roEkNOQg' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizeIntegration' test.out

#- 177 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'TtR76e2L' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeOrder' test.out

#- 178 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'YhF4kSbX' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizePayment' test.out

#- 179 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '2oThDf3T' \
    > test.out 2>&1
eval_tap $? 179 'AnonymizeSubscription' test.out

#- 180 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'Xwmz8QI4' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeWallet' test.out

#- 181 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'PERyroFD' \
    --activeOnly 'true' \
    --appType 'DLC' \
    --entitlementClazz 'CODE' \
    --entitlementName 'cMwT7Ytz' \
    --features '["iSVhKlpr", "uTEafxOH", "CAItJfXo"]' \
    --itemId '["cEErf4Fb", "OLlU5fnW", "3D9hFOsn"]' \
    --limit '50' \
    --offset '77' \
    > test.out 2>&1
eval_tap $? 181 'QueryUserEntitlements' test.out

#- 182 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1975-09-26T00:00:00Z", "grantedCode": "A7ARGGPQ", "itemId": "6d9AUczy", "itemNamespace": "BTP8amnw", "language": "vOtY-wyvB", "quantity": 55, "region": "yBrCOCFH", "source": "ACHIEVEMENT", "startDate": "1989-08-30T00:00:00Z", "storeId": "ew6HJ4Gq"}, {"endDate": "1977-07-14T00:00:00Z", "grantedCode": "KIijMuu8", "itemId": "weFo3tmq", "itemNamespace": "ZMLGvU0E", "language": "HQ_028", "quantity": 92, "region": "ZsGlUONW", "source": "ACHIEVEMENT", "startDate": "1973-03-19T00:00:00Z", "storeId": "oX1VhtdU"}, {"endDate": "1986-05-03T00:00:00Z", "grantedCode": "eUFZrF75", "itemId": "vCVWUSCa", "itemNamespace": "zG8QETFQ", "language": "aw", "quantity": 41, "region": "7a4DbKhF", "source": "REWARD", "startDate": "1996-10-22T00:00:00Z", "storeId": "7jyVkGtO"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'SJPnCDJL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'GrantUserEntitlement' test.out

#- 183 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'MF87cDD3' \
    --activeOnly 'false' \
    --appId 'BNJbadAU' \
    > test.out 2>&1
eval_tap $? 183 'GetUserAppEntitlementByAppId' test.out

#- 184 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'bGnrlHiQ' \
    --activeOnly 'true' \
    --limit '96' \
    --offset '74' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 184 'QueryUserEntitlementsByAppType' test.out

#- 185 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '3pukfmLB' \
    --activeOnly 'true' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'REN5qzfw' \
    > test.out 2>&1
eval_tap $? 185 'GetUserEntitlementByItemId' test.out

#- 186 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'anAF5Am5' \
    --activeOnly 'false' \
    --entitlementClazz 'MEDIA' \
    --sku 'BeFD9DTS' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlementBySku' test.out

#- 187 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'RJJoev18' \
    --appIds '["fb5KnFQ5", "aqGmfYCl", "tHB7fNqw"]' \
    --itemIds '["ezByQRkL", "v6EViPEk", "nHsCZkPP"]' \
    --skus '["SspgKffk", "JvFYVT4S", "QZ4sWOyM"]' \
    > test.out 2>&1
eval_tap $? 187 'ExistsAnyUserActiveEntitlement' test.out

#- 188 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'MKRfyiDh' \
    --itemIds '["am9bu2QA", "JiBhujbk", "2CcgHSNF"]' \
    > test.out 2>&1
eval_tap $? 188 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 189 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'XfoK6F7c' \
    --appId 'qKFsstAf' \
    > test.out 2>&1
eval_tap $? 189 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 190 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '7G3RupWp' \
    --entitlementClazz 'APP' \
    --itemId 'MDJR3hsJ' \
    > test.out 2>&1
eval_tap $? 190 'GetUserEntitlementOwnershipByItemId' test.out

#- 191 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'fLc9aODF' \
    --ids '["DVjgMbWb", "QdWqfTbS", "PIZFtGjz"]' \
    > test.out 2>&1
eval_tap $? 191 'GetUserEntitlementOwnershipByItemIds' test.out

#- 192 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ULICiXdQ' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'zPyALEJQ' \
    > test.out 2>&1
eval_tap $? 192 'GetUserEntitlementOwnershipBySku' test.out

#- 193 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'zLbtzNFn' \
    --entitlementIds 'jYCtIKX1' \
    > test.out 2>&1
eval_tap $? 193 'RevokeUserEntitlements' test.out

#- 194 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'gKTs3nob' \
    --namespace $AB_NAMESPACE \
    --userId 's1wfqhGi' \
    > test.out 2>&1
eval_tap $? 194 'GetUserEntitlement' test.out

#- 195 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1977-12-02T00:00:00Z", "nullFieldList": ["CiFOdjue", "VkbwNt8c", "SBoRYSFz"], "startDate": "1994-12-20T00:00:00Z", "status": "REVOKED", "useCount": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'wgoXslyH' \
    --namespace $AB_NAMESPACE \
    --userId 'mnVc5BSw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'UpdateUserEntitlement' test.out

#- 196 ConsumeUserEntitlement
# body param: body
echo '{"options": ["CBFZngpC", "sSdfY9rP", "072dIeBK"], "useCount": 15}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId '1XyxlMop' \
    --namespace $AB_NAMESPACE \
    --userId 't1WqiwaL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'ConsumeUserEntitlement' test.out

#- 197 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'BT8fDxg6' \
    --namespace $AB_NAMESPACE \
    --userId 'U3P3PRQW' \
    > test.out 2>&1
eval_tap $? 197 'DisableUserEntitlement' test.out

#- 198 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId '9zQVJonO' \
    --namespace $AB_NAMESPACE \
    --userId '0Ij4kPAg' \
    > test.out 2>&1
eval_tap $? 198 'EnableUserEntitlement' test.out

#- 199 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'Fa1NqRvx' \
    --namespace $AB_NAMESPACE \
    --userId '5Iskjk4C' \
    > test.out 2>&1
eval_tap $? 199 'GetUserEntitlementHistories' test.out

#- 200 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '7ayC9rE4' \
    --namespace $AB_NAMESPACE \
    --userId 'Snqs6bfZ' \
    > test.out 2>&1
eval_tap $? 200 'RevokeUserEntitlement' test.out

#- 201 FulfillItem
# body param: body
echo '{"duration": 25, "endDate": "1984-02-15T00:00:00Z", "itemId": "aYkXmwRP", "itemSku": "XXUs2fqg", "language": "LSfb9wDs", "order": {"currency": {"currencyCode": "2chQyDKM", "currencySymbol": "hNoJQhmm", "currencyType": "REAL", "decimals": 60, "namespace": "U6AC2xL0"}, "ext": {"DqrKohnU": {}, "WuvGjelI": {}, "gq0CDc9O": {}}, "free": true}, "orderNo": "nBlXHchX", "origin": "Twitch", "quantity": 27, "region": "l7RJfZFB", "source": "REDEEM_CODE", "startDate": "1975-06-11T00:00:00Z", "storeId": "YhTowlDx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId '1kAhthUm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'FulfillItem' test.out

#- 202 RedeemCode
# body param: body
echo '{"code": "stbJbCgd", "language": "JQq_SFnu", "region": "NEo4LhY1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'mOKHQD4u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'RedeemCode' test.out

#- 203 FulfillRewards
# body param: body
echo '{"origin": "Nintendo", "rewards": [{"currency": {"currencyCode": "MohH2kq6", "namespace": "yGmsX0AB"}, "item": {"itemId": "pl275tdC", "itemSku": "qIZ5GSYZ", "itemType": "cF0qh3k1"}, "quantity": 34, "type": "ITEM"}, {"currency": {"currencyCode": "wxIqYNnc", "namespace": "wmEKiGxg"}, "item": {"itemId": "ps1I4KI2", "itemSku": "8yb4M0sV", "itemType": "wJefV2Nx"}, "quantity": 21, "type": "ITEM"}, {"currency": {"currencyCode": "8fYrOxe5", "namespace": "fiZGpuhS"}, "item": {"itemId": "FXqAlkyV", "itemSku": "trXdYZUn", "itemType": "zk0FTLJJ"}, "quantity": 47, "type": "CURRENCY"}], "source": "IAP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'cTTTRom4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'FulfillRewards' test.out

#- 204 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '4zpAqcvl' \
    --endTime 'xIlq924i' \
    --limit '17' \
    --offset '10' \
    --productId 'FwUH97MI' \
    --startTime 'TtAMaJg8' \
    --status 'FAILED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 204 'QueryUserIAPOrders' test.out

#- 205 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'IOhm8J58' \
    > test.out 2>&1
eval_tap $? 205 'QueryAllUserIAPOrders' test.out

#- 206 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "Gdjd", "productId": "EHMBZ8pM", "region": "JtuTB3DI", "type": "TWITCH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'AS0lBk4T' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'MockFulfillIAPItem' test.out

#- 207 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'eotdb7Iq' \
    --itemId 'tdssrcmF' \
    --limit '36' \
    --offset '2' \
    --status 'FULFILLED' \
    > test.out 2>&1
eval_tap $? 207 'QueryUserOrders' test.out

#- 208 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "6WhSPpwx", "currencyNamespace": "Ai4ul90B", "discountedPrice": 5, "ext": {"h6xHYeGR": {}, "DgxIefDV": {}, "GnrU1JTl": {}}, "itemId": "nckErPBC", "language": "0tWqjh5S", "options": {"skipPriceValidation": true}, "platform": "GooglePlay", "price": 76, "quantity": 5, "region": "0OEWxUHi", "returnUrl": "1PVlh3Hl", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'O2xZCSGg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'AdminCreateUserOrder' test.out

#- 209 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId '7aj5ySLE' \
    --itemId 'uyPvRMew' \
    > test.out 2>&1
eval_tap $? 209 'CountOfPurchasedItem' test.out

#- 210 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'scWLsI3i' \
    --userId 'E7G7evhH' \
    > test.out 2>&1
eval_tap $? 210 'GetUserOrder' test.out

#- 211 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUNDED", "statusReason": "JSAG50C6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'UP12VEiP' \
    --userId 'lsuJs8Ki' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'UpdateUserOrderStatus' test.out

#- 212 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'WQnUKEpB' \
    --userId 'njghZRcu' \
    > test.out 2>&1
eval_tap $? 212 'FulfillUserOrder' test.out

#- 213 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'RKgF1biK' \
    --userId 'gzV5oJNS' \
    > test.out 2>&1
eval_tap $? 213 'GetUserOrderGrant' test.out

#- 214 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'pASvDi8b' \
    --userId '2zzZibyK' \
    > test.out 2>&1
eval_tap $? 214 'GetUserOrderHistories' test.out

#- 215 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "vbtPzp9I"}, "authorisedTime": "1977-03-14T00:00:00Z", "chargebackReversedTime": "1978-08-30T00:00:00Z", "chargebackTime": "1983-09-13T00:00:00Z", "chargedTime": "1991-05-19T00:00:00Z", "createdTime": "1988-12-22T00:00:00Z", "currency": {"currencyCode": "J7bdBur3", "currencySymbol": "KpXNF2lZ", "currencyType": "REAL", "decimals": 8, "namespace": "nB8p9z0r"}, "customParameters": {"EKLWaVJR": {}, "uw47qpbo": {}, "gPvo0DGA": {}}, "extOrderNo": "nDZqjXHq", "extTxId": "h7HMASy6", "extUserId": "0EaYQASH", "issuedAt": "1995-10-29T00:00:00Z", "metadata": {"7jqUZvvE": "bll82m3T", "q360W0Jz": "I9Ec5ckY", "54FCF3Up": "mYSz6yq4"}, "namespace": "lggTXv5N", "nonceStr": "XPr7SDcl", "paymentMethod": "gEBQZGXk", "paymentMethodFee": 70, "paymentOrderNo": "FrgEui5Q", "paymentProvider": "ALIPAY", "paymentProviderFee": 51, "paymentStationUrl": "zl9hFJD3", "price": 12, "refundedTime": "1988-02-29T00:00:00Z", "salesTax": 64, "sandbox": true, "sku": "IJTcIeJX", "status": "AUTHORISED", "statusReason": "XsuXMLar", "subscriptionId": "lc88TXM1", "subtotalPrice": 59, "targetNamespace": "dgEPTBUO", "targetUserId": "dMfevuUL", "tax": 65, "totalPrice": 29, "totalTax": 29, "txEndTime": "1986-04-09T00:00:00Z", "type": "MkERsBml", "userId": "7GVI1SH2", "vat": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'q8Ia8Y2W' \
    --userId 'ni8TH75N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'ProcessUserOrderNotification' test.out

#- 216 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '41KsUWqE' \
    --userId 'KM73tUbg' \
    > test.out 2>&1
eval_tap $? 216 'DownloadUserOrderReceipt' test.out

#- 217 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "dnAmasO7", "currencyNamespace": "x3oUUO46", "customParameters": {"StxtTg8p": {}, "A1HZexwl": {}, "59MxGarM": {}}, "description": "PCclNmZ9", "extOrderNo": "vCOmBly2", "extUserId": "hBlXin5g", "itemType": "SUBSCRIPTION", "language": "gE-Mqdk-586", "metadata": {"ulwyJFt5": "QWywBjIr", "GuaEZcmz": "GrgDBXpg", "dy0NSkZN": "OPFK8J4i"}, "notifyUrl": "uv0Tsrij", "omitNotification": false, "platform": "8bRHt4AD", "price": 47, "recurringPaymentOrderNo": "rCdAPOeg", "region": "QDSmBcCQ", "returnUrl": "OoYPFEE8", "sandbox": false, "sku": "eikuy8Ut", "subscriptionId": "FIRzWqM1", "title": "VH2Jpuju"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'OQCKVpbi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'CreateUserPaymentOrder' test.out

#- 218 RefundUserPaymentOrder
# body param: body
echo '{"description": "9cHSIzjD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'lnsRd6k3' \
    --userId '3wlPomw3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'RefundUserPaymentOrder' test.out

#- 219 ApplyUserRedemption
# body param: body
echo '{"code": "HxTgTO1i", "orderNo": "BKPB0eoO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'vqUnItRb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'ApplyUserRedemption' test.out

#- 220 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'JkT5cnc6' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'ZAL7A4KF' \
    --limit '29' \
    --offset '70' \
    --sku 'OlIIO7mq' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 220 'QueryUserSubscriptions' test.out

#- 221 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId '1pMVawEN' \
    --excludeSystem 'true' \
    --limit '52' \
    --offset '32' \
    --subscriptionId 'sqFKM1vv' \
    > test.out 2>&1
eval_tap $? 221 'GetUserSubscriptionActivities' test.out

#- 222 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 11, "itemId": "QkhkcTuI", "language": "0N9OtVXg", "reason": "mbxsqPpE", "region": "Tyu0ulUc", "source": "elycOOmM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '8OnXI9wh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'PlatformSubscribeSubscription' test.out

#- 223 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'tR2nNnaG' \
    --itemId 'PRP5FzJc' \
    > test.out 2>&1
eval_tap $? 223 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 224 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'tebewWPn' \
    --userId 'Qswn0KJL' \
    > test.out 2>&1
eval_tap $? 224 'GetUserSubscription' test.out

#- 225 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '5KRIUhmS' \
    --userId 'lrRmZUqp' \
    > test.out 2>&1
eval_tap $? 225 'DeleteUserSubscription' test.out

#- 226 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "9IrZ3e5B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'f1hdVWAM' \
    --userId 'FQo8kpVP' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'CancelSubscription' test.out

#- 227 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 87, "reason": "HuCbP8jw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'fxWFX5pK' \
    --userId 'tMh9XSwy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'GrantDaysToSubscription' test.out

#- 228 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'HoWSjzaY' \
    --userId 'PyH4SDEN' \
    --excludeFree 'false' \
    --limit '36' \
    --offset '31' \
    > test.out 2>&1
eval_tap $? 228 'GetUserSubscriptionBillingHistories' test.out

#- 229 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "YXIzKst1"}, "authorisedTime": "1979-01-22T00:00:00Z", "chargebackReversedTime": "1989-06-28T00:00:00Z", "chargebackTime": "1999-01-27T00:00:00Z", "chargedTime": "1977-03-10T00:00:00Z", "createdTime": "1995-11-18T00:00:00Z", "currency": {"currencyCode": "puOQkQcc", "currencySymbol": "o8vENzNj", "currencyType": "REAL", "decimals": 18, "namespace": "oSa0QnsH"}, "customParameters": {"EBOxj55C": {}, "Zhx84R81": {}, "dIg4QlPW": {}}, "extOrderNo": "5FteLz3b", "extTxId": "R9oi3NpP", "extUserId": "0XjrQ6OR", "issuedAt": "1976-04-15T00:00:00Z", "metadata": {"dvGyvUiJ": "pNE1nTCV", "ApKFolqt": "9StEhceq", "7BY8s5BF": "JF7mjSiX"}, "namespace": "x8SrML9B", "nonceStr": "wcmd9d1a", "paymentMethod": "Ri3p2MTv", "paymentMethodFee": 92, "paymentOrderNo": "3PAlEbDR", "paymentProvider": "XSOLLA", "paymentProviderFee": 0, "paymentStationUrl": "XgLPr4hQ", "price": 36, "refundedTime": "1985-08-03T00:00:00Z", "salesTax": 12, "sandbox": true, "sku": "4TL6X9t3", "status": "NOTIFICATION_OF_CHARGEBACK", "statusReason": "VZht0e2w", "subscriptionId": "fsf1V4mb", "subtotalPrice": 2, "targetNamespace": "fApgQLz5", "targetUserId": "3iGlZBzq", "tax": 59, "totalPrice": 82, "totalTax": 10, "txEndTime": "1980-01-21T00:00:00Z", "type": "BvFfoEYs", "userId": "UUjtmNhg", "vat": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'kVFxgpt4' \
    --userId 'msAuR9jf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'ProcessUserSubscriptionNotification' test.out

#- 230 AcquireUserTicket
# body param: body
echo '{"count": 42, "orderNo": "G02l6WA1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'Ig8YQbkV' \
    --namespace $AB_NAMESPACE \
    --userId 'bwGocG8R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'AcquireUserTicket' test.out

#- 231 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'cOAIIDAo' \
    > test.out 2>&1
eval_tap $? 231 'QueryUserCurrencyWallets' test.out

#- 232 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'NhYaCuOw' \
    --namespace $AB_NAMESPACE \
    --userId '4HFiN3MR' \
    --limit '15' \
    --offset '31' \
    > test.out 2>&1
eval_tap $? 232 'ListUserCurrencyTransactions' test.out

#- 233 CheckWallet
eval_tap 0 233 'CheckWallet # SKIP deprecated' test.out

#- 234 CreditUserWallet
# body param: body
echo '{"amount": 16, "expireAt": "1982-06-16T00:00:00Z", "origin": "GooglePlay", "reason": "UyYLoAC1", "source": "IAP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'BNOS7CpD' \
    --namespace $AB_NAMESPACE \
    --userId 'UzubHW5d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'CreditUserWallet' test.out

#- 235 PayWithUserWallet
# body param: body
echo '{"amount": 0, "walletPlatform": "Steam"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode '1dTPbLTv' \
    --namespace $AB_NAMESPACE \
    --userId 'uSmPy3Iz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'PayWithUserWallet' test.out

#- 236 GetUserWallet
eval_tap 0 236 'GetUserWallet # SKIP deprecated' test.out

#- 237 DebitUserWallet
eval_tap 0 237 'DebitUserWallet # SKIP deprecated' test.out

#- 238 DisableUserWallet
eval_tap 0 238 'DisableUserWallet # SKIP deprecated' test.out

#- 239 EnableUserWallet
eval_tap 0 239 'EnableUserWallet # SKIP deprecated' test.out

#- 240 ListUserWalletTransactions
eval_tap 0 240 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 241 QueryWallets
eval_tap 0 241 'QueryWallets # SKIP deprecated' test.out

#- 242 GetWallet
eval_tap 0 242 'GetWallet # SKIP deprecated' test.out

#- 243 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'wlJpRfpV' \
    --end 'EC9ftXQZ' \
    --start 'ATuh1C93' \
    > test.out 2>&1
eval_tap $? 243 'SyncOrders' test.out

#- 244 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["v0brb6Ym", "SWnAa9t6", "hqnUMXtt"], "apiKey": "8NCH2WwA", "authoriseAsCapture": false, "blockedPaymentMethods": ["gwe5gbQd", "8kAMnyxo", "vrlVeHZr"], "clientKey": "5miOTAhL", "dropInSettings": "gwcT2e6s", "liveEndpointUrlPrefix": "8UntJSQt", "merchantAccount": "RW5CViUC", "notificationHmacKey": "cAoW7wF6", "notificationPassword": "KeYjSfFk", "notificationUsername": "Ilij6sYP", "returnUrl": "bzNvBQCt", "settings": "V1sdw83c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'TestAdyenConfig' test.out

#- 245 TestAliPayConfig
# body param: body
echo '{"appId": "HSHNSuLP", "privateKey": "bP0JdT1p", "publicKey": "gVSlpHGi", "returnUrl": "dtt2m32Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'TestAliPayConfig' test.out

#- 246 TestCheckoutConfig
# body param: body
echo '{"publicKey": "qp6urjaC", "secretKey": "yrNMPZU9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'TestCheckoutConfig' test.out

#- 247 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'nHVLbtiL' \
    --region 'sOrNmMSE' \
    > test.out 2>&1
eval_tap $? 247 'DebugMatchedPaymentMerchantConfig' test.out

#- 248 TestPayPalConfig
# body param: body
echo '{"clientID": "jixvTCZT", "clientSecret": "hpXlb4P4", "returnUrl": "JKbzt8fm", "webHookId": "zUXey9w1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'TestPayPalConfig' test.out

#- 249 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["Lrks2EJW", "2Lp9UpuC", "bWjoso1m"], "publishableKey": "PhfOqYwb", "secretKey": "QD37pngM", "webhookSecret": "fG1WaZ5L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'TestStripeConfig' test.out

#- 250 TestWxPayConfig
# body param: body
echo '{"appId": "8ygB1Kxk", "key": "3uyGJ9CC", "mchid": "9hcJuKyv", "returnUrl": "H2GY5A0j"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'TestWxPayConfig' test.out

#- 251 TestXsollaConfig
# body param: body
echo '{"apiKey": "qEm9ZIsI", "flowCompletionUrl": "dmcYJqj9", "merchantId": 18, "projectId": 58, "projectSecretKey": "lEEhkIlj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'TestXsollaConfig' test.out

#- 252 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'g6ycCuNE' \
    > test.out 2>&1
eval_tap $? 252 'GetPaymentMerchantConfig' test.out

#- 253 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["kw294UJM", "0C2mcjJ7", "BY2C3vhl"], "apiKey": "aIyS6Qfq", "authoriseAsCapture": true, "blockedPaymentMethods": ["XpoieEGz", "5SUoGG4q", "MRCbEUGJ"], "clientKey": "MbPEei2O", "dropInSettings": "cjr39vxe", "liveEndpointUrlPrefix": "fDKoGuPw", "merchantAccount": "8MxGI5ac", "notificationHmacKey": "4idIXMYZ", "notificationPassword": "fuSgWI2g", "notificationUsername": "eKuOMmTH", "returnUrl": "ISzC3FdD", "settings": "xnRnnHN3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'zB4jclqN' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'UpdateAdyenConfig' test.out

#- 254 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'Utbsn3g1' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 254 'TestAdyenConfigById' test.out

#- 255 UpdateAliPayConfig
# body param: body
echo '{"appId": "mAFuDN1u", "privateKey": "GL99GROY", "publicKey": "X7jUBqAN", "returnUrl": "u4fpq1b3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'oi1UFaUq' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateAliPayConfig' test.out

#- 256 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'iXvdnOJ2' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 256 'TestAliPayConfigById' test.out

#- 257 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "AAghAc0p", "secretKey": "CCcKPNvJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'yI5RXHr4' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateCheckoutConfig' test.out

#- 258 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'HMeSJ6gS' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 258 'TestCheckoutConfigById' test.out

#- 259 UpdatePayPalConfig
# body param: body
echo '{"clientID": "jB2FybxZ", "clientSecret": "8jDu0DQS", "returnUrl": "4RsR77pr", "webHookId": "yl4YQ8nX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id '8hNprPlJ' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdatePayPalConfig' test.out

#- 260 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id '7O5YvmLt' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 260 'TestPayPalConfigById' test.out

#- 261 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["v0QCwfoo", "W19sWxTl", "CwHQvec8"], "publishableKey": "x2xo7YRQ", "secretKey": "DvYCVtN2", "webhookSecret": "yKxP0UCY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'ZkIdI9jI' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdateStripeConfig' test.out

#- 262 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'K3tSONdr' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 262 'TestStripeConfigById' test.out

#- 263 UpdateWxPayConfig
# body param: body
echo '{"appId": "8h3O8xh8", "key": "ZS0GpfFV", "mchid": "hIPomJuX", "returnUrl": "ZkNuL6Rj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'GB2200MU' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdateWxPayConfig' test.out

#- 264 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '7wuRzFZA' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 264 'UpdateWxPayConfigCert' test.out

#- 265 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id '2dxVGG4Q' \
    > test.out 2>&1
eval_tap $? 265 'TestWxPayConfigById' test.out

#- 266 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "Jonaj5gy", "flowCompletionUrl": "LAOKqxEW", "merchantId": 47, "projectId": 78, "projectSecretKey": "TgrCaewQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'KzE8Tesx' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'UpdateXsollaConfig' test.out

#- 267 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 's77kqaqn' \
    > test.out 2>&1
eval_tap $? 267 'TestXsollaConfigById' test.out

#- 268 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "MEDIUM", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'amU3fMmf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdateXsollaUIConfig' test.out

#- 269 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '59' \
    --namespace_ 'Q3crDNmX' \
    --offset '54' \
    --region 'HdDS46V9' \
    > test.out 2>&1
eval_tap $? 269 'QueryPaymentProviderConfig' test.out

#- 270 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "8f0AbRoj", "region": "skgmIe5o", "sandboxTaxJarApiToken": "nyKwHwHA", "specials": ["WXPAY", "CHECKOUT", "ALIPAY"], "taxJarApiToken": "w7DsB5EW", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'CreatePaymentProviderConfig' test.out

#- 271 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 271 'GetAggregatePaymentProviders' test.out

#- 272 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'p97LqAbu' \
    --region 'JhG77RfZ' \
    > test.out 2>&1
eval_tap $? 272 'DebugMatchedPaymentProviderConfig' test.out

#- 273 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 273 'GetSpecialPaymentProviders' test.out

#- 274 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "htQrnTiL", "region": "1OyIVvEL", "sandboxTaxJarApiToken": "GU9699h3", "specials": ["PAYPAL", "XSOLLA", "ADYEN"], "taxJarApiToken": "WuJHPRfe", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'X4VxpVPo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'UpdatePaymentProviderConfig' test.out

#- 275 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'y9oAoI4J' \
    > test.out 2>&1
eval_tap $? 275 'DeletePaymentProviderConfig' test.out

#- 276 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 276 'GetPaymentTaxConfig' test.out

#- 277 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "dhsbSpu8", "taxJarApiToken": "JNGtLV1E", "taxJarEnabled": false, "taxJarProductCodesMapping": {"17k1AO70": "zc9FMxzp", "SP5rRcAT": "Ja1Cc9K7", "i7X8ebSW": "scPzKsrC"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'UpdatePaymentTaxConfig' test.out

#- 278 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'bgwRjm5u' \
    --end 'bL3PcONQ' \
    --start 'Cn8BW9UY' \
    > test.out 2>&1
eval_tap $? 278 'SyncPaymentOrders' test.out

#- 279 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'VG8r2aDd' \
    --storeId 'G4ntcjrx' \
    > test.out 2>&1
eval_tap $? 279 'PublicGetRootCategories' test.out

#- 280 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'kDolw2v9' \
    --storeId '0lBPslV3' \
    > test.out 2>&1
eval_tap $? 280 'DownloadCategories' test.out

#- 281 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'pklBgqoT' \
    --namespace $AB_NAMESPACE \
    --language 'nF8ZyTU9' \
    --storeId 'xA49KOGh' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetCategory' test.out

#- 282 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'hwGspbjq' \
    --namespace $AB_NAMESPACE \
    --language 'MNmaz2Mi' \
    --storeId 'WBGj7Cv8' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetChildCategories' test.out

#- 283 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'Zx7YzfSI' \
    --namespace $AB_NAMESPACE \
    --language 'daII6Ly9' \
    --storeId 'XrpVIHHa' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetDescendantCategories' test.out

#- 284 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 284 'PublicListCurrencies' test.out

#- 285 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'e0BPxetY' \
    --region 'u2VZWNqd' \
    --storeId 'NIX2AuPY' \
    --appId 'qx9FE6lN' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetItemByAppId' test.out

#- 286 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --baseAppId 'RY4Fx6II' \
    --categoryPath 'XYuauHup' \
    --features 'JglLRZs4' \
    --itemType 'OPTIONBOX' \
    --language 'qW4gkN8h' \
    --limit '20' \
    --offset '2' \
    --region '6TDkYGr1' \
    --sortBy '["name:desc", "displayOrder:desc"]' \
    --storeId '1LnLfrrv' \
    --tags 'raVXVI7u' \
    > test.out 2>&1
eval_tap $? 286 'PublicQueryItems' test.out

#- 287 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'i92W8LXo' \
    --region 'Uu236e3W' \
    --storeId 'kUdLEPC8' \
    --sku 'gJWFJdfP' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetItemBySku' test.out

#- 288 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'xj6j24Kx' \
    --region 'H6IF0AYk' \
    --storeId 'gK3J6nc5' \
    --itemIds '2fU3qsvX' \
    > test.out 2>&1
eval_tap $? 288 'PublicBulkGetItems' test.out

#- 289 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["0oMa7vRj", "DWPDcqyC", "UeM4dFme"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicValidateItemPurchaseCondition' test.out

#- 290 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'SUBSCRIPTION' \
    --limit '48' \
    --offset '35' \
    --region 'VzK24tnU' \
    --storeId 'VoDPphU9' \
    --keyword 's1PSsmA4' \
    --language '1K2DxTbx' \
    > test.out 2>&1
eval_tap $? 290 'PublicSearchItems' test.out

#- 291 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'Rkuf5QC8' \
    --namespace $AB_NAMESPACE \
    --language 'Ndvvc06I' \
    --region '9699MqI3' \
    --storeId 'RaGaPa7h' \
    > test.out 2>&1
eval_tap $? 291 'PublicGetApp' test.out

#- 292 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'yHTImMOT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 292 'PublicGetItemDynamicData' test.out

#- 293 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'adMrNN8r' \
    --namespace $AB_NAMESPACE \
    --language 'LKkfqIs8' \
    --populateBundle 'false' \
    --region 'ryR4l9eO' \
    --storeId 'iGfwFXWt' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetItem' test.out

#- 294 GetPaymentCustomization
eval_tap 0 294 'GetPaymentCustomization # SKIP deprecated' test.out

#- 295 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "bl6pE0u7", "paymentProvider": "XSOLLA", "returnUrl": "LcCKHdSa", "ui": "y5m3yPyQ", "zipCode": "4k1fCmZF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'PublicGetPaymentUrl' test.out

#- 296 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'gZCDnosz' \
    > test.out 2>&1
eval_tap $? 296 'PublicGetPaymentMethods' test.out

#- 297 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '1kKX8gSK' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetUnpaidPaymentOrder' test.out

#- 298 Pay
# body param: body
echo '{"token": "8AnSQHTi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '2zDq0Aet' \
    --paymentProvider 'WXPAY' \
    --zipCode 'aZUNBIVy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'Pay' test.out

#- 299 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'zkTQ1ipF' \
    > test.out 2>&1
eval_tap $? 299 'PublicCheckPaymentOrderPaidStatus' test.out

#- 300 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'PAYPAL' \
    --region 'BpDs9vgt' \
    > test.out 2>&1
eval_tap $? 300 'GetPaymentPublicConfig' test.out

#- 301 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'LSWUBFnv' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetQRCode' test.out

#- 302 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '167Q010I' \
    --foreinginvoice 'wMZQapVP' \
    --invoiceId 'XjnmL0EI' \
    --payload 'Ut38vxx2' \
    --redirectResult 'vrXGGhPc' \
    --resultCode 'lFACQc7Z' \
    --sessionId 'e3b4I92C' \
    --status 'FkmujzAE' \
    --token 'OxDCmzHH' \
    --type 'eX8ypNK3' \
    --userId 'iVNzbyaU' \
    --orderNo 'DxDKFhYy' \
    --paymentOrderNo 'umXaGWgh' \
    --paymentProvider 'ALIPAY' \
    --returnUrl 'NHZSFA5Z' \
    > test.out 2>&1
eval_tap $? 302 'PublicNormalizePaymentReturnUrl' test.out

#- 303 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'liovmb5x' \
    --paymentOrderNo 'vS4Q7O8F' \
    --paymentProvider 'XSOLLA' \
    > test.out 2>&1
eval_tap $? 303 'GetPaymentTaxValue' test.out

#- 304 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode '4FhAFiVX' \
    > test.out 2>&1
eval_tap $? 304 'GetRewardByCode' test.out

#- 305 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'BMHg8eB4' \
    --limit '39' \
    --offset '74' \
    --sortBy '["rewardCode"]' \
    > test.out 2>&1
eval_tap $? 305 'QueryRewards1' test.out

#- 306 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId '2IH5u0w7' \
    > test.out 2>&1
eval_tap $? 306 'GetReward1' test.out

#- 307 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 307 'PublicListStores' test.out

#- 308 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["GSiCVXSc", "NfM4hErM", "QEPSWF9K"]' \
    --itemIds '["IqSkvjQ3", "CqXyuH8x", "YokoGppa"]' \
    --skus '["TUa9U1lg", "qms3dp9M", "qmeuY7Py"]' \
    > test.out 2>&1
eval_tap $? 308 'PublicExistsAnyMyActiveEntitlement' test.out

#- 309 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'aAHu3FVw' \
    > test.out 2>&1
eval_tap $? 309 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 310 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'XLppHfU1' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 311 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --sku 'sCquissO' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 312 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["xmICNo0t", "5ghx27Ww", "ud3vGkNE"]' \
    --itemIds '["h6Q3O2km", "QS6PK8Vh", "viGSJPMu"]' \
    --skus '["QyL3TVys", "T0C7SEsz", "kNPPIwqu"]' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetEntitlementOwnershipToken' test.out

#- 313 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'J9rcpl25' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 313 'PublicGetMyWallet' test.out

#- 314 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "yxmZWDkW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'fIxo2ycz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'SyncEpicGameDLC' test.out

#- 315 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 23}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'Jbf29efy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'PublicSyncPsnDlcInventory' test.out

#- 316 SyncSteamDLC
# body param: body
echo '{"appId": "66Ubf2zA", "steamId": "QVBktiBH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'UfJ9J1Dc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'SyncSteamDLC' test.out

#- 317 SyncXboxDLC
# body param: body
echo '{"xstsToken": "WitV6iGz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'AquDAELF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'SyncXboxDLC' test.out

#- 318 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'SY4eermF' \
    --appType 'DEMO' \
    --entitlementClazz 'CODE' \
    --entitlementName 'CgRbRqVz' \
    --features '["medbtdbn", "fISpF3RP", "4JRIs0IK"]' \
    --itemId '["DV9lDzT0", "7SLuLWk2", "d32FdO4D"]' \
    --limit '72' \
    --offset '29' \
    > test.out 2>&1
eval_tap $? 318 'PublicQueryUserEntitlements' test.out

#- 319 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'WJdSyp00' \
    --appId 'g4Qn7jR4' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetUserAppEntitlementByAppId' test.out

#- 320 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'xTm3p7rs' \
    --limit '35' \
    --offset '0' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 320 'PublicQueryUserEntitlementsByAppType' test.out

#- 321 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'vAu1DCZW' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'iEUzCQZp' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetUserEntitlementByItemId' test.out

#- 322 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'NvSANVcA' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku '8jrZLLqT' \
    > test.out 2>&1
eval_tap $? 322 'PublicGetUserEntitlementBySku' test.out

#- 323 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '3GVHT7nd' \
    --appIds '["wfmUgtcu", "zVQkthyn", "QUXGus1S"]' \
    --itemIds '["meoyldCC", "YWNULqfz", "AXMiiNVC"]' \
    --skus '["BeSaBbEH", "zuX56mUD", "GSWKgvu5"]' \
    > test.out 2>&1
eval_tap $? 323 'PublicExistsAnyUserActiveEntitlement' test.out

#- 324 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'DtyDFEUt' \
    --appId 'sFOMxleR' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 325 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Y5fJcYCI' \
    --entitlementClazz 'CODE' \
    --itemId 'mtXx7yCS' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 326 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'cWSfg7zN' \
    --ids '["bOgUfTts", "Yv51OSHn", "oc5lTOtm"]' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 327 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'xzPYmEzU' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'RWIwLSUa' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 328 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'Nkjry9qI' \
    --namespace $AB_NAMESPACE \
    --userId '8pICt49B' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetUserEntitlement' test.out

#- 329 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["QAtl4FqR", "1Xey7lQ3", "rvVaEM6k"], "useCount": 77}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'TCHFUEBd' \
    --namespace $AB_NAMESPACE \
    --userId 't1TTBqET' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicConsumeUserEntitlement' test.out

#- 330 PublicRedeemCode
# body param: body
echo '{"code": "egFtepjd", "language": "gF-sXxZ_kC", "region": "VgIw4fPe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'bOScOkTs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'PublicRedeemCode' test.out

#- 331 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "Vkp_pdec", "productId": "bnDS8LQO", "receiptData": "Gd47ubaZ", "region": "svwknikL", "transactionId": "2iHlvyRp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'l69UKZY5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicFulfillAppleIAPItem' test.out

#- 332 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "iLX9h9BM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId '9K8wli0P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'SyncEpicGamesInventory' test.out

#- 333 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "FXGb-Us", "orderId": "8amrwgWO", "packageName": "NR2S61FL", "productId": "VgX0D0es", "purchaseTime": 88, "purchaseToken": "Orn7iaIA", "region": "3xFlWxTG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'XPPnenuR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicFulfillGoogleIAPItem' test.out

#- 334 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "otDifkNS", "price": 0.2651221817812489, "productId": "H1LyE0Xk", "serviceLabel": 51}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'gc206nZp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'PublicReconcilePlayStationStore' test.out

#- 335 SyncStadiaEntitlement
# body param: body
echo '{"appId": "kny61QIo", "language": "yLSB", "region": "ZoBLBJKJ", "stadiaPlayerId": "DmeqI7zi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'bwGHU6gK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'SyncStadiaEntitlement' test.out

#- 336 SyncSteamInventory
# body param: body
echo '{"appId": "XQYAjltR", "currencyCode": "oppjx5vv", "language": "pz-rEaY", "price": 0.2294042590439901, "productId": "4pufRqWl", "region": "T8hpKwZm", "steamId": "i4q5HCiN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'mEAFnLCk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'SyncSteamInventory' test.out

#- 337 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "OkKajXk2", "language": "xhR_653", "region": "45kTkV76"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'CkpL7ZgG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'SyncTwitchDropsEntitlement' test.out

#- 338 SyncXboxInventory
# body param: body
echo '{"currencyCode": "HqfVvNQv", "price": 0.4663509870038468, "productId": "dLHXQmnT", "xstsToken": "nEIirOYk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'QE3fIKqa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'SyncXboxInventory' test.out

#- 339 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'OXrkCpVz' \
    --itemId 'xg9CjaCk' \
    --limit '5' \
    --offset '78' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 339 'PublicQueryUserOrders' test.out

#- 340 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "3ocBbSDW", "discountedPrice": 40, "ext": {"R1RKMLNC": {}, "jaqIz4ne": {}, "J1s82VBn": {}}, "itemId": "Ml88PLfE", "language": "UWnd", "price": 81, "quantity": 77, "region": "fAhP7sFo", "returnUrl": "KbvHIcyH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'aLR2XzBE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'PublicCreateUserOrder' test.out

#- 341 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Ke437w4r' \
    --userId 'TNOuSitd' \
    > test.out 2>&1
eval_tap $? 341 'PublicGetUserOrder' test.out

#- 342 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ahrU6WBd' \
    --userId 'XxMb3f4S' \
    > test.out 2>&1
eval_tap $? 342 'PublicCancelUserOrder' test.out

#- 343 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'fFJJ92o0' \
    --userId 'EFFg5n2I' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetUserOrderHistories' test.out

#- 344 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'uI9A3jYI' \
    --userId 'Ox03hH5G' \
    > test.out 2>&1
eval_tap $? 344 'PublicDownloadUserOrderReceipt' test.out

#- 345 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'lLbNGz0s' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetPaymentAccounts' test.out

#- 346 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'R249UBF9' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'ZL5rz99t' \
    > test.out 2>&1
eval_tap $? 346 'PublicDeletePaymentAccount' test.out

#- 347 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'tBw8mIDD' \
    --chargeStatus 'CHARGED' \
    --itemId 'KiIn3BCl' \
    --limit '66' \
    --offset '15' \
    --sku 'TB0rFVK5' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 347 'PublicQueryUserSubscriptions' test.out

#- 348 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "1KAFvwnx", "itemId": "8UIpqTAn", "language": "hIUq_960", "region": "8BY8MKbx", "returnUrl": "6Evr7Zpp", "source": "nH1B4YYN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'XaIYb4m7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'PublicSubscribeSubscription' test.out

#- 349 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '5YJUe8Te' \
    --itemId 'dZ15A1oJ' \
    > test.out 2>&1
eval_tap $? 349 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 350 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'SW94k749' \
    --userId '9brSLNpi' \
    > test.out 2>&1
eval_tap $? 350 'PublicGetUserSubscription' test.out

#- 351 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'iKrf4g9q' \
    --userId 'w0940pcb' \
    > test.out 2>&1
eval_tap $? 351 'PublicChangeSubscriptionBillingAccount' test.out

#- 352 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "L2jPOFUT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'aIEb1CvU' \
    --userId '5ryuo9to' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'PublicCancelSubscription' test.out

#- 353 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'e7tiimhu' \
    --userId 'O6rBOxYT' \
    --excludeFree 'false' \
    --limit '8' \
    --offset '43' \
    > test.out 2>&1
eval_tap $? 353 'PublicGetUserSubscriptionBillingHistories' test.out

#- 354 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'uXUip6W4' \
    --namespace $AB_NAMESPACE \
    --userId '30EaFUp1' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetWallet' test.out

#- 355 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'fOEQ6Bda' \
    --namespace $AB_NAMESPACE \
    --userId 'adjVEycQ' \
    --limit '21' \
    --offset '45' \
    > test.out 2>&1
eval_tap $? 355 'PublicListUserWalletTransactions' test.out

#- 356 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --availableDate 'vXRHzf4A' \
    --baseAppId 'SHyPvNd7' \
    --categoryPath 'B7QXNXxy' \
    --features 'TMzJdebB' \
    --itemStatus 'INACTIVE' \
    --itemType 'EXTENSION' \
    --limit '86' \
    --offset '35' \
    --region 'SWq6NEJ0' \
    --sortBy 'jwPclBM0' \
    --storeId 'Z8GXzBdn' \
    --tags 'ML8kE3tc' \
    --targetNamespace '4Lhn4rV7' \
    > test.out 2>&1
eval_tap $? 356 'QueryItems1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE