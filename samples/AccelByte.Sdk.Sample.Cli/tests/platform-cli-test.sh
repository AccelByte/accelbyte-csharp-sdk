#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..364"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "3ndIuPLn", "appType": "SOFTWARE", "baseAppId": "U6Wt17fs", "boothName": "Wv2VEbtJ", "boundItemIds": ["ayy9jwAS", "UQY7JPb7", "6SiQDkYs"], "categoryPath": "vR99Ngwv", "clazz": "x7Jetkxc", "createdAt": "1994-11-08T00:00:00Z", "description": "wC5fCcr9", "displayOrder": 88, "entitlementType": "DURABLE", "ext": {"nqBVtLNh": {}, "yHSM4qj9": {}, "CWDYSYiP": {}}, "features": ["zl0HGYPJ", "iuk1oPBW", "PlxX81lJ"], "fresh": false, "images": [{"as": "BUjzbvK7", "caption": "FebbUZGc", "height": 16, "imageUrl": "XppsuGvi", "smallImageUrl": "vxpkWoh5", "width": 53}, {"as": "Vsr8iWsH", "caption": "kMx2INxc", "height": 68, "imageUrl": "qwxgk1mc", "smallImageUrl": "A951kl5k", "width": 49}, {"as": "PTdJGlEK", "caption": "pOw6B1iS", "height": 78, "imageUrl": "YpLkSUWK", "smallImageUrl": "q2bytyQN", "width": 52}], "itemId": "ZHnwYYNz", "itemIds": ["tXXfSeTd", "2gGKJLJZ", "SXesN2br"], "itemQty": {"jTywFw1D": 95, "r4NXK8VM": 65, "tD5mFqnM": 65}, "itemType": "APP", "language": "JLOajHsX", "listable": true, "localExt": {"g1jt1ttV": {}, "aUm4kjk3": {}, "p1I3qoWh": {}}, "longDescription": "MKdbQL07", "lootBoxConfig": {"rewardCount": 85, "rewards": [{"lootBoxItems": [{"count": 8, "itemId": "5X4sZpQZ", "itemSku": "IGpfJLxz", "itemType": "9EVMpPQ1"}, {"count": 42, "itemId": "57xslZwK", "itemSku": "ApCTX6be", "itemType": "jcjH0gwF"}, {"count": 88, "itemId": "ftEkQad9", "itemSku": "vSwT0zrc", "itemType": "yjDvl4KS"}], "name": "oKrih4qm", "odds": 0.8603426868993835, "type": "REWARD", "weight": 27}, {"lootBoxItems": [{"count": 8, "itemId": "pWGCQxN1", "itemSku": "Aaxj6Vgk", "itemType": "UHTVByGs"}, {"count": 68, "itemId": "oJmdgtQs", "itemSku": "dfLbJvFb", "itemType": "wBSQaDc7"}, {"count": 37, "itemId": "2DIWr7qc", "itemSku": "XoHdLETs", "itemType": "uM048zdK"}], "name": "HXI6Uxl6", "odds": 0.036600802051333536, "type": "REWARD", "weight": 40}, {"lootBoxItems": [{"count": 28, "itemId": "eBbqQkFo", "itemSku": "SUzapx2k", "itemType": "dBhCzSi0"}, {"count": 89, "itemId": "7OeBOaEw", "itemSku": "5BCRV5b7", "itemType": "77aiz0Qc"}, {"count": 77, "itemId": "YfdDDrKE", "itemSku": "yK9BChSz", "itemType": "Tgnqbx1l"}], "name": "8snlKZmd", "odds": 0.4517570833893617, "type": "REWARD", "weight": 28}]}, "maxCount": 19, "maxCountPerUser": 26, "name": "UbtCBUY9", "namespace": "3nhaSqhL", "optionBoxConfig": {"boxItems": [{"count": 86, "itemId": "oUw84dRB", "itemSku": "Cawz5oQk", "itemType": "Ay1IbTg1"}, {"count": 21, "itemId": "EMhUjbO6", "itemSku": "lnedoSIa", "itemType": "fKpG2UUF"}, {"count": 92, "itemId": "8g9l0o6d", "itemSku": "dgwuiMp6", "itemType": "csfd6RdT"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 61, "comparison": "is", "name": "2tNAGNSY", "predicateType": "EntitlementPredicate", "value": "b3QV3KZX", "values": ["xPNu02cH", "Ze54Esig", "IQ4E532l"]}, {"anyOf": 19, "comparison": "isLessThanOrEqual", "name": "1qXFt3mw", "predicateType": "EntitlementPredicate", "value": "wyuMf2uX", "values": ["leNZ2MGq", "tf8IVhRU", "I1FAnU7X"]}, {"anyOf": 95, "comparison": "isGreaterThan", "name": "XZ8fc5F8", "predicateType": "SeasonPassPredicate", "value": "jpiUSVyr", "values": ["0OkFZcQg", "WCoVB0qx", "CzJpQFYQ"]}]}, {"operator": "or", "predicates": [{"anyOf": 63, "comparison": "isLessThan", "name": "eGItk1mu", "predicateType": "SeasonTierPredicate", "value": "eo3TeGMU", "values": ["edVcSDsm", "TugOph9Z", "FSuaWw3c"]}, {"anyOf": 57, "comparison": "isNot", "name": "XO0mG7ee", "predicateType": "SeasonTierPredicate", "value": "fePqa5i8", "values": ["cGCFvlNv", "6x0LG2CV", "Qpldg3G1"]}, {"anyOf": 13, "comparison": "isLessThanOrEqual", "name": "f4lRjshD", "predicateType": "SeasonPassPredicate", "value": "LwV6dwvd", "values": ["9Tj1M4oY", "XIcvcRFS", "1C9soUQs"]}]}, {"operator": "and", "predicates": [{"anyOf": 22, "comparison": "isNot", "name": "SEKh0LkQ", "predicateType": "SeasonPassPredicate", "value": "Joe8Iw7i", "values": ["1CeZrHV4", "zgPSUDMx", "yfFRGvvS"]}, {"anyOf": 4, "comparison": "includes", "name": "uRO7DZRR", "predicateType": "SeasonPassPredicate", "value": "IwjW18nW", "values": ["GsRjMMiu", "WtMgrnmo", "fP4BasQi"]}, {"anyOf": 60, "comparison": "excludes", "name": "fDqDUx6U", "predicateType": "SeasonTierPredicate", "value": "oqadYZR9", "values": ["SJvTn2ca", "i1mv0PrS", "UGVogrqj"]}]}]}, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 11, "fixedTrialCycles": 31, "graceDays": 91}, "region": "Ruh1Ba46", "regionData": [{"currencyCode": "2N3q45sW", "currencyNamespace": "I9cqUJGF", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1993-06-29T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1994-01-06T00:00:00Z", "discountedPrice": 93, "expireAt": "1991-01-18T00:00:00Z", "price": 94, "purchaseAt": "1993-10-29T00:00:00Z", "trialPrice": 0}, {"currencyCode": "MoGIxqVM", "currencyNamespace": "bS1PEd6Y", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1974-03-28T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1980-10-15T00:00:00Z", "discountedPrice": 45, "expireAt": "1999-10-26T00:00:00Z", "price": 7, "purchaseAt": "1977-01-16T00:00:00Z", "trialPrice": 46}, {"currencyCode": "HhfL57C4", "currencyNamespace": "eEqkTy9H", "currencyType": "REAL", "discountAmount": 54, "discountExpireAt": "1982-12-25T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1995-07-05T00:00:00Z", "discountedPrice": 45, "expireAt": "1998-12-08T00:00:00Z", "price": 82, "purchaseAt": "1991-04-28T00:00:00Z", "trialPrice": 53}], "seasonType": "PASS", "sku": "DAoVsPnU", "stackable": true, "status": "INACTIVE", "tags": ["l7JrdxrY", "ITRm9FwF", "4t23QHVA"], "targetCurrencyCode": "SoZRsNvB", "targetItemId": "xxieXf6E", "targetNamespace": "wQwaqqrd", "thumbnailUrl": "tsR8tMEv", "title": "69VffgGF", "updatedAt": "1973-11-25T00:00:00Z", "useCount": 68}, "namespace": "rJFxThB1", "order": {"currency": {"currencyCode": "h7NT3iXE", "currencySymbol": "gMOP4ApS", "currencyType": "REAL", "decimals": 51, "namespace": "EZd0qRnR"}, "ext": {"4rvhxpEF": {}, "uz9Mdltv": {}, "M7XMNbSW": {}}, "free": true}, "source": "GIFT"}, "script": "pHgwFlZf", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'jc0BBMCC' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "rtYrLA0Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id '4AlOKCar' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'PnbAPKzR' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "9cQVEwQY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'EVEvkfqW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "FeUuwtVT", "dryRun": true, "fulfillmentUrl": "CTLwRUmI", "itemType": "EXTENSION", "purchaseConditionUrl": "4Ryohpc6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'qXKBF4Er' \
    --itemType 'OPTIONBOX' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'eMPei6My' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "5IQBsNGk", "dryRun": true, "fulfillmentUrl": "HEYN2Jyh", "purchaseConditionUrl": "kbyUy6lJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'COZqefiV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'UfNiE8Jv' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --name 'KSnVY9dn' \
    --offset '89' \
    --tag 'jNH1Qxkx' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "3m4rQiuH", "items": [{"extraSubscriptionDays": 12, "itemId": "TDF5rYqI", "itemName": "dSjfdIZZ", "quantity": 20}, {"extraSubscriptionDays": 17, "itemId": "f4wDKWhM", "itemName": "If95nDuM", "quantity": 52}, {"extraSubscriptionDays": 14, "itemId": "4Ug2banI", "itemName": "b1qgCr0G", "quantity": 40}], "maxRedeemCountPerCampaignPerUser": 74, "maxRedeemCountPerCode": 38, "maxRedeemCountPerCodePerUser": 46, "maxSaleCount": 45, "name": "thvarwQm", "redeemEnd": "1983-07-29T00:00:00Z", "redeemStart": "1978-06-12T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["sAXMXtsS", "5GZQPzvs", "HXHUaa8W"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'kjgQgAGl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "RFt9T0D0", "items": [{"extraSubscriptionDays": 41, "itemId": "DVwEK1PR", "itemName": "WahjLcpS", "quantity": 80}, {"extraSubscriptionDays": 80, "itemId": "MISdZMqS", "itemName": "uHiUalEV", "quantity": 76}, {"extraSubscriptionDays": 0, "itemId": "rvrQdeyL", "itemName": "hO8vLS4a", "quantity": 49}], "maxRedeemCountPerCampaignPerUser": 89, "maxRedeemCountPerCode": 72, "maxRedeemCountPerCodePerUser": 57, "maxSaleCount": 24, "name": "IN1eiWz0", "redeemEnd": "1971-11-24T00:00:00Z", "redeemStart": "1986-05-15T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["Hp1blWJ6", "fn0uRIFj", "ReBjU0BC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'lX8Snqba' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'PBDSczbd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'qq3I0ayB' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "ljnOvDTY", "localizationDisplayNames": {"SRtnzLph": "vklWeClx", "7fK9Sfq9": "L8h4q2AL", "HheLO82B": "gjjpyuXe"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'vdHVYr5h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'PGkD5yb5' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'SkMRqHxb' \
    --namespace $AB_NAMESPACE \
    --storeId '7AT59eor' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"0Aag5aka": "kDtihQAV", "Ozw8i2ZX": "HJO1BIH5", "Q50BQoDl": "urbCGFLq"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'BhMMdafm' \
    --namespace $AB_NAMESPACE \
    --storeId '3JSYfhWM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'K4cposez' \
    --namespace $AB_NAMESPACE \
    --storeId 'V8cBRugW' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'rMJhwYrp' \
    --namespace $AB_NAMESPACE \
    --storeId 'eGXHgS8Q' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'TZpn6GtS' \
    --namespace $AB_NAMESPACE \
    --storeId 'HyLHUHiP' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'rRazERSe' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '85' \
    --code '7y5fg60u' \
    --limit '35' \
    --offset '18' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 41}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'b4yi6wRl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'FLuCXZyz' \
    --namespace $AB_NAMESPACE \
    --batchNo '82' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'bQbaQcdZ' \
    --namespace $AB_NAMESPACE \
    --batchNo '57' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'Kn0fTnhD' \
    --namespace $AB_NAMESPACE \
    --batchNo '0' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'jLf1Aa2m' \
    --namespace $AB_NAMESPACE \
    --code 'NUi5DNXl' \
    --limit '50' \
    --offset '20' \
    --userId 'geAaXw7n' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'RUpu6ZrY' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'uMoRYQkq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'oWOYAlHm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "hO4svEX1", "currencySymbol": "6XMKSmgA", "currencyType": "VIRTUAL", "decimals": 26, "localizationDescriptions": {"79Uoa6En": "0VxJ7QrF", "ru5TQk0t": "g9DkcwbC", "5svTU5Mj": "R7qufl8j"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"6OElaYk8": "Y2VFeE7U", "R8TAb2JD": "pm2Qgxli", "POkA6yX4": "5bBEqG6O"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'FG32SkWV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode '3hUHNPzq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'TaXyUqL5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'uGatNguP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "Z1Q7hNeq", "rewards": [{"currency": {"currencyCode": "COjdmjIq", "namespace": "FWVsUi3u"}, "item": {"itemId": "8ksHcMIM", "itemSku": "tAe3rvVR", "itemType": "6eO66wTr"}, "quantity": 92, "type": "CURRENCY"}, {"currency": {"currencyCode": "hPr5tJQY", "namespace": "9tsyVuFU"}, "item": {"itemId": "YrAtSn7x", "itemSku": "eNZ7fuhA", "itemType": "YKM77UYT"}, "quantity": 4, "type": "ITEM"}, {"currency": {"currencyCode": "IfyACQPM", "namespace": "E9dz9XWb"}, "item": {"itemId": "2CZOxpKZ", "itemSku": "GzwYN1bi", "itemType": "V7NERGzi"}, "quantity": 6, "type": "ITEM"}]}, {"id": "TrO8DrXD", "rewards": [{"currency": {"currencyCode": "ui7niBNR", "namespace": "9xzsAbEC"}, "item": {"itemId": "BBlrEQsO", "itemSku": "R2m9WwRr", "itemType": "qdIU4Ie8"}, "quantity": 89, "type": "ITEM"}, {"currency": {"currencyCode": "TV7uiT0I", "namespace": "FR9Dd252"}, "item": {"itemId": "5AeiflD1", "itemSku": "OfmI7HLc", "itemType": "CrJ4BPPc"}, "quantity": 39, "type": "CURRENCY"}, {"currency": {"currencyCode": "yP70N6UL", "namespace": "1MUXT7DC"}, "item": {"itemId": "rLVI4B5H", "itemSku": "A4cYWbt9", "itemType": "dPKzANQJ"}, "quantity": 14, "type": "CURRENCY"}]}, {"id": "txq5JdSz", "rewards": [{"currency": {"currencyCode": "YYqhlcyx", "namespace": "LGJX1ffd"}, "item": {"itemId": "AB81jvfE", "itemSku": "7vmtovXk", "itemType": "fPQ2iUYu"}, "quantity": 64, "type": "ITEM"}, {"currency": {"currencyCode": "SivWHHuI", "namespace": "etKfJF1h"}, "item": {"itemId": "J6hJnyUn", "itemSku": "tf8QuWxo", "itemType": "oauV1DY9"}, "quantity": 99, "type": "ITEM"}, {"currency": {"currencyCode": "KtmiVHwy", "namespace": "PSNSJRde"}, "item": {"itemId": "IM6GEMPD", "itemSku": "KfrrDNG9", "itemType": "2Q5UMeDO"}, "quantity": 44, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"bRf8Hlyg": "hLVSp9Di", "igOgOJYO": "gnxqyEyM", "vXFZLLDe": "tZmeJ32x"}}, {"platform": "PSN", "platformDlcIdMap": {"3Mwpk58a": "GXpIKszn", "qO96SN56": "0Rd3oLSW", "6dveHJyZ": "tRII474X"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"CeUdz57L": "LpNYICsl", "CQQHeVNK": "mpX5WWEP", "3vHCRKfG": "Er1BNunK"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'XgmwEfOR' \
    --itemId '["BZeG1DkF", "3eaoy8Cp", "I00NYLmN"]' \
    --limit '63' \
    --offset '95' \
    --userId 'jslOyqoV' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'zFpA66DN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --offset '97' \
    --status 'FAIL' \
    --userId 'kGJKVNuM' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "lkKmNlGT", "password": "LrLWqE2V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "qMgi09mg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "Id6wF2Qi", "serviceAccountId": "nrLnX4i3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "QWjrcGq1", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"BeiLBCDX": "vIB4M2Np", "HIVAy6F8": "f0hzLlvu", "mwdubbYZ": "dKhcB21u"}}, {"itemIdentity": "hnE7gX22", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"lh2gfxyB": "V0rFrsly", "7VA5Nbpu": "kfnCzy9C", "B2MQRCLv": "QvQiASlx"}}, {"itemIdentity": "wrJtvnO9", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"1MyyZhtt": "bp9s8rKE", "VejnX4Ir": "le7DD0mF", "ETZ0g0hq": "6TEjnltS"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "EuDPGTKw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "D8no0DUr", "publisherAuthenticationKey": "yZkC17kQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "9bI4qDrA", "clientSecret": "Jzwecgkz", "organizationId": "xXO3PykS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "yzEeN4PQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password '0lQe8rys' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature '9n0VQnjL' \
    --itemId '7Y4s88na' \
    --itemType 'BUNDLE' \
    --endTime 'ZvWNzfai' \
    --startTime 'o4iA7r71' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'z4cLtlLa' \
    --itemId 'nKhADFM4' \
    --itemType 'CODE' \
    --endTime 'I4Gg8I6j' \
    --startTime 'Fsg4yyb6' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "9lUc0Tnc", "targetItemId": "xeoHXlwn", "targetNamespace": "Eg4RWh5Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'Wd6QHOly' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "KHsR9D62", "appType": "GAME", "baseAppId": "oU7MYCp1", "boothName": "2W9gOvdV", "categoryPath": "4OBSL7mo", "clazz": "nTQvfavo", "displayOrder": 0, "entitlementType": "DURABLE", "ext": {"ip46vwO4": {}, "eyoFrfFD": {}, "0z5anrjZ": {}}, "features": ["tmnQc1A4", "vhK6ra6o", "uMNcGK9S"], "images": [{"as": "pQt8XXK0", "caption": "zQsWOL2P", "height": 73, "imageUrl": "yAsIBUbH", "smallImageUrl": "AeGrB9Gw", "width": 58}, {"as": "hqUieiCy", "caption": "I5SB3HjY", "height": 58, "imageUrl": "giLqWIG1", "smallImageUrl": "I97czw1O", "width": 89}, {"as": "ICi09bSM", "caption": "87RIxqPh", "height": 13, "imageUrl": "AAEaFO0L", "smallImageUrl": "0amqEE8S", "width": 20}], "itemIds": ["fPmkW2on", "Dld7zel9", "HQXzmHov"], "itemQty": {"us2xCXB6": 73, "LDoRVNqP": 52, "favlEww1": 25}, "itemType": "INGAMEITEM", "listable": true, "localizations": {"A4IYzMSC": {"description": "zyVcahiG", "localExt": {"kAq4Orkn": {}, "obeeQlhQ": {}, "OgWELz9C": {}}, "longDescription": "eNjwHAlR", "title": "RgYk6iLh"}, "k0NKCXkx": {"description": "vqkeXlmQ", "localExt": {"B0bXP8XS": {}, "UlhKKmcO": {}, "UihW6hio": {}}, "longDescription": "r9BgDY75", "title": "odqYA0jF"}, "jPlxFMQN": {"description": "RbfUp0nQ", "localExt": {"pwnODvaS": {}, "0HHO1e5z": {}, "TSB7xgQl": {}}, "longDescription": "Y4Ze5fTr", "title": "ql1wirNi"}}, "lootBoxConfig": {"rewardCount": 2, "rewards": [{"lootBoxItems": [{"count": 100, "itemId": "YgMXtQoL", "itemSku": "NRb0R1iN", "itemType": "luOEfnB9"}, {"count": 14, "itemId": "Xqk89RsL", "itemSku": "xPaHEhOT", "itemType": "CdLhibC3"}, {"count": 9, "itemId": "rcYb77QZ", "itemSku": "JwThYmZM", "itemType": "lOQWgSd3"}], "name": "1gzoVJHO", "odds": 0.29710538919418217, "type": "REWARD_GROUP", "weight": 6}, {"lootBoxItems": [{"count": 88, "itemId": "rOPoyMSt", "itemSku": "lU64f5ds", "itemType": "fyDiv1VA"}, {"count": 79, "itemId": "bLCZ7TC4", "itemSku": "5BbpOMbV", "itemType": "8CIenIkz"}, {"count": 85, "itemId": "shu0grgR", "itemSku": "mt9J1kY0", "itemType": "WiWPEvqZ"}], "name": "nfHoDAIv", "odds": 0.9029593868165632, "type": "PROBABILITY_GROUP", "weight": 85}, {"lootBoxItems": [{"count": 70, "itemId": "z4w6HC1O", "itemSku": "DfU8gjN0", "itemType": "5nuy1x8i"}, {"count": 67, "itemId": "PX7SS6K8", "itemSku": "AISR45vx", "itemType": "hFXo2kOz"}, {"count": 87, "itemId": "5slyvdY8", "itemSku": "TJLWRqOb", "itemType": "OebI35r3"}], "name": "pHem6MSX", "odds": 0.3859819767494346, "type": "REWARD", "weight": 86}]}, "maxCount": 50, "maxCountPerUser": 80, "name": "hvtsmT0G", "optionBoxConfig": {"boxItems": [{"count": 14, "itemId": "oyeYBS72", "itemSku": "YnqhfmV0", "itemType": "5msGMzkO"}, {"count": 66, "itemId": "prQNDL7R", "itemSku": "DhAcfiHu", "itemType": "BWbK4ZT8"}, {"count": 14, "itemId": "QCUgodpt", "itemSku": "YhUvH5bp", "itemType": "dLauMvK5"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 64, "fixedTrialCycles": 70, "graceDays": 87}, "regionData": {"NVgMmwmK": [{"currencyCode": "6wX8vmTZ", "currencyNamespace": "ayQbeKvX", "currencyType": "VIRTUAL", "discountAmount": 39, "discountExpireAt": "1996-01-26T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1983-01-07T00:00:00Z", "discountedPrice": 64, "expireAt": "1997-10-23T00:00:00Z", "price": 92, "purchaseAt": "1984-06-28T00:00:00Z", "trialPrice": 57}, {"currencyCode": "3rBsf6LN", "currencyNamespace": "OTZnc2WC", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1974-09-07T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1981-06-11T00:00:00Z", "discountedPrice": 49, "expireAt": "1997-04-02T00:00:00Z", "price": 42, "purchaseAt": "1972-02-11T00:00:00Z", "trialPrice": 17}, {"currencyCode": "ybn5zPXe", "currencyNamespace": "5yo1OmGz", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1990-06-24T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1984-09-28T00:00:00Z", "discountedPrice": 94, "expireAt": "1980-01-28T00:00:00Z", "price": 87, "purchaseAt": "1986-01-18T00:00:00Z", "trialPrice": 66}], "s8ZhObu7": [{"currencyCode": "s2I916Mj", "currencyNamespace": "Yl8EVzY0", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1985-09-12T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1977-09-25T00:00:00Z", "discountedPrice": 77, "expireAt": "1976-11-28T00:00:00Z", "price": 89, "purchaseAt": "1997-07-16T00:00:00Z", "trialPrice": 16}, {"currencyCode": "7ZHS6tIt", "currencyNamespace": "AM9iF2Lf", "currencyType": "REAL", "discountAmount": 78, "discountExpireAt": "1971-11-24T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1986-04-12T00:00:00Z", "discountedPrice": 100, "expireAt": "1991-12-30T00:00:00Z", "price": 27, "purchaseAt": "1990-08-27T00:00:00Z", "trialPrice": 98}, {"currencyCode": "X9I4pZsZ", "currencyNamespace": "VIPjrfYB", "currencyType": "VIRTUAL", "discountAmount": 32, "discountExpireAt": "1977-11-13T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1985-03-16T00:00:00Z", "discountedPrice": 81, "expireAt": "1988-05-02T00:00:00Z", "price": 21, "purchaseAt": "1994-09-18T00:00:00Z", "trialPrice": 35}], "LQCwpa83": [{"currencyCode": "G0p5moWB", "currencyNamespace": "HSTV1XQR", "currencyType": "REAL", "discountAmount": 68, "discountExpireAt": "1980-10-24T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1977-09-14T00:00:00Z", "discountedPrice": 82, "expireAt": "1993-08-26T00:00:00Z", "price": 55, "purchaseAt": "1996-01-21T00:00:00Z", "trialPrice": 56}, {"currencyCode": "CvCj5TED", "currencyNamespace": "d9DP4rEv", "currencyType": "VIRTUAL", "discountAmount": 63, "discountExpireAt": "1996-11-02T00:00:00Z", "discountPercentage": 60, "discountPurchaseAt": "1987-03-21T00:00:00Z", "discountedPrice": 77, "expireAt": "1991-09-16T00:00:00Z", "price": 12, "purchaseAt": "1996-06-27T00:00:00Z", "trialPrice": 28}, {"currencyCode": "sAvSZS0H", "currencyNamespace": "oFeBGfw7", "currencyType": "VIRTUAL", "discountAmount": 4, "discountExpireAt": "1997-04-26T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1972-11-05T00:00:00Z", "discountedPrice": 38, "expireAt": "1989-07-10T00:00:00Z", "price": 75, "purchaseAt": "1993-01-11T00:00:00Z", "trialPrice": 68}]}, "seasonType": "TIER", "sku": "PRjYvwIQ", "stackable": false, "status": "ACTIVE", "tags": ["q8IkLTxP", "8CxUEJUb", "JK1QC58k"], "targetCurrencyCode": "2IaflNMT", "targetNamespace": "kCKjcewJ", "thumbnailUrl": "PUbqJ0WG", "useCount": 23}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'BBD5wKFk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'T7dDL4Lm' \
    --appId 'WIR2DyNT' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --availableDate 'q0onIfBn' \
    --baseAppId 'aXT8CTqU' \
    --categoryPath 'yw7K5Ohc' \
    --features 'm6MQ6eDR' \
    --includeSubCategoryItem 'true' \
    --itemType 'LOOTBOX' \
    --limit '70' \
    --offset '69' \
    --region 'x6zwTJzN' \
    --sortBy '["createdAt:desc", "name"]' \
    --storeId 'qBI4pjsK' \
    --tags 't9xeZxpo' \
    --targetNamespace 'waIDBC5P' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["stpADHYC", "YwyolxCO", "uYvLMScC"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'gFjqbs0Q' \
    --sku 'xTQybJ9l' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'yWPM5yor' \
    --populateBundle 'true' \
    --region 'BtKOg49U' \
    --storeId 'GI4yQosf' \
    --sku 'VuJOXQDE' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'W5fHqP14' \
    --sku 'dRiCnGBO' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["ndMtdzCv", "uEn9AjoI", "Ci2GiZKL"]' \
    --storeId 'CZgCjwEn' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '2G5bZORi' \
    --region 'zJTsBTuJ' \
    --storeId 'o6yi5sdJ' \
    --itemIds 'KkA41QEO' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["rEXj2LeK", "1IzZXlKR", "DopbayqR"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'Z8XaSz9K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'COINS' \
    --limit '16' \
    --offset '14' \
    --sortBy 'EKsm9g9R' \
    --storeId 'GsHHBh2V' \
    --keyword 'jWEMWgoF' \
    --language '5moyCHd2' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '65' \
    --offset '50' \
    --sortBy '["updatedAt:desc", "name:desc", "createdAt"]' \
    --storeId '2ry6G13B' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'Bq7cjxtE' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '9zEeeOWX' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "gJww6iwl", "appType": "GAME", "baseAppId": "6hd8tUrV", "boothName": "h4LsXA0L", "categoryPath": "olK7Uc5W", "clazz": "T4UV0ZXx", "displayOrder": 15, "entitlementType": "CONSUMABLE", "ext": {"ZQqskcxb": {}, "RGWRxmKR": {}, "qa1FicYX": {}}, "features": ["4RNH45eB", "ps9psQnn", "0poIS5J7"], "images": [{"as": "pJl5qfob", "caption": "QxldI1sY", "height": 70, "imageUrl": "JLubEkEA", "smallImageUrl": "b56F66xX", "width": 46}, {"as": "T5OS9ZHX", "caption": "xNsVS0lJ", "height": 72, "imageUrl": "S1kamoxt", "smallImageUrl": "b4gGRYmA", "width": 77}, {"as": "UyHh2VsL", "caption": "daqUMpK1", "height": 96, "imageUrl": "blOoZoBI", "smallImageUrl": "QQSkr9b9", "width": 12}], "itemIds": ["Fy09b4qz", "1JWiqM3O", "nzRBKUds"], "itemQty": {"TwTuc7Ts": 29, "Jhdih3mK": 1, "0mw96vdz": 81}, "itemType": "CODE", "listable": true, "localizations": {"l0UdmEPi": {"description": "dH2d5c5p", "localExt": {"sZFnMaIP": {}, "1pX3OlvR": {}, "eI718Fx8": {}}, "longDescription": "KWb5YpBN", "title": "M1GhO7bn"}, "sxeSgqAf": {"description": "oNCIEB4Q", "localExt": {"ap3WKwGc": {}, "zM1zKq2H": {}, "SDnixIpk": {}}, "longDescription": "8NNGW8ev", "title": "2Y88ifIZ"}, "IdHFse7z": {"description": "4NBidTbp", "localExt": {"4SfP1TDQ": {}, "0YJc3sAf": {}, "sbq5JicT": {}}, "longDescription": "YeMNKr1a", "title": "NiNM7euR"}}, "lootBoxConfig": {"rewardCount": 64, "rewards": [{"lootBoxItems": [{"count": 70, "itemId": "jlcjSiU9", "itemSku": "BzA4tdEJ", "itemType": "1BpugOKw"}, {"count": 64, "itemId": "3JLMToYK", "itemSku": "qMFLU30g", "itemType": "zIUXzTFt"}, {"count": 82, "itemId": "oCkLxb17", "itemSku": "4AS6xHO8", "itemType": "g7rtih0a"}], "name": "rVvX6Qyg", "odds": 0.25218077651009574, "type": "REWARD", "weight": 34}, {"lootBoxItems": [{"count": 42, "itemId": "6Zp7ngU9", "itemSku": "bFf7Swci", "itemType": "5yWUTfyT"}, {"count": 44, "itemId": "5mKLZGbH", "itemSku": "TrXtKhww", "itemType": "PGVNoWt1"}, {"count": 2, "itemId": "xMJIJ0Nh", "itemSku": "7OGvjmEb", "itemType": "QBYbjFmJ"}], "name": "sGcwtFiC", "odds": 0.06871833042643716, "type": "PROBABILITY_GROUP", "weight": 11}, {"lootBoxItems": [{"count": 62, "itemId": "rOcdXNaA", "itemSku": "Br6Y7whI", "itemType": "wiW4Per1"}, {"count": 27, "itemId": "N7nNlZeq", "itemSku": "JU6hzZGx", "itemType": "aTWJ90aY"}, {"count": 94, "itemId": "8fCeSLdV", "itemSku": "ToDTygLn", "itemType": "qm0bCq4w"}], "name": "Elb7nCXH", "odds": 0.610015256457153, "type": "REWARD_GROUP", "weight": 52}]}, "maxCount": 47, "maxCountPerUser": 0, "name": "eHlvJtth", "optionBoxConfig": {"boxItems": [{"count": 41, "itemId": "9ReBp72K", "itemSku": "EqNJuIWj", "itemType": "6O0lyDrj"}, {"count": 62, "itemId": "H4J92Whm", "itemSku": "mDlgwlEF", "itemType": "btslCDVo"}, {"count": 96, "itemId": "t4w0rhh7", "itemSku": "3y5F739X", "itemType": "UqUtbt3Q"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 36, "fixedTrialCycles": 36, "graceDays": 51}, "regionData": {"2mDaFfsA": [{"currencyCode": "yeqQjTbz", "currencyNamespace": "IoLoDFNq", "currencyType": "VIRTUAL", "discountAmount": 13, "discountExpireAt": "1986-11-27T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1974-09-28T00:00:00Z", "discountedPrice": 26, "expireAt": "1980-09-20T00:00:00Z", "price": 50, "purchaseAt": "1997-07-10T00:00:00Z", "trialPrice": 20}, {"currencyCode": "jtYY4a1Q", "currencyNamespace": "1kW0ailm", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1971-11-18T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1976-10-25T00:00:00Z", "discountedPrice": 73, "expireAt": "1996-04-08T00:00:00Z", "price": 88, "purchaseAt": "1991-07-15T00:00:00Z", "trialPrice": 16}, {"currencyCode": "J8o3DTV9", "currencyNamespace": "cIfGeWwA", "currencyType": "VIRTUAL", "discountAmount": 51, "discountExpireAt": "1990-12-14T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1993-06-19T00:00:00Z", "discountedPrice": 74, "expireAt": "1971-12-31T00:00:00Z", "price": 16, "purchaseAt": "1978-01-31T00:00:00Z", "trialPrice": 75}], "6No6tiGh": [{"currencyCode": "qaRPO3rz", "currencyNamespace": "duq70Lof", "currencyType": "VIRTUAL", "discountAmount": 26, "discountExpireAt": "1987-10-09T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1980-11-16T00:00:00Z", "discountedPrice": 46, "expireAt": "1975-09-12T00:00:00Z", "price": 86, "purchaseAt": "1971-12-26T00:00:00Z", "trialPrice": 73}, {"currencyCode": "EyCVSFK7", "currencyNamespace": "3m2pKQza", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1981-05-15T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1998-04-13T00:00:00Z", "discountedPrice": 34, "expireAt": "1999-02-16T00:00:00Z", "price": 6, "purchaseAt": "1972-07-12T00:00:00Z", "trialPrice": 42}, {"currencyCode": "EceJ35hM", "currencyNamespace": "uLJMRNDj", "currencyType": "VIRTUAL", "discountAmount": 88, "discountExpireAt": "1999-02-12T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1986-02-18T00:00:00Z", "discountedPrice": 49, "expireAt": "1998-05-14T00:00:00Z", "price": 21, "purchaseAt": "1995-12-19T00:00:00Z", "trialPrice": 71}], "ibpc91if": [{"currencyCode": "ezFaMBrS", "currencyNamespace": "XHD8cWuw", "currencyType": "REAL", "discountAmount": 59, "discountExpireAt": "1990-04-04T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1981-10-08T00:00:00Z", "discountedPrice": 10, "expireAt": "1999-06-20T00:00:00Z", "price": 13, "purchaseAt": "1995-12-12T00:00:00Z", "trialPrice": 95}, {"currencyCode": "o3FUP0eS", "currencyNamespace": "tdv1jY6z", "currencyType": "VIRTUAL", "discountAmount": 38, "discountExpireAt": "1973-10-29T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1978-05-15T00:00:00Z", "discountedPrice": 80, "expireAt": "1971-03-21T00:00:00Z", "price": 59, "purchaseAt": "1989-10-07T00:00:00Z", "trialPrice": 74}, {"currencyCode": "KkpgOoeD", "currencyNamespace": "g7RzKOzg", "currencyType": "REAL", "discountAmount": 11, "discountExpireAt": "1987-04-20T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1977-02-08T00:00:00Z", "discountedPrice": 71, "expireAt": "1997-12-03T00:00:00Z", "price": 50, "purchaseAt": "1991-11-02T00:00:00Z", "trialPrice": 45}]}, "seasonType": "TIER", "sku": "nn5StyoX", "stackable": true, "status": "INACTIVE", "tags": ["uWCUsywo", "LPFvMjQU", "ju3CASPN"], "targetCurrencyCode": "hjkQns8q", "targetNamespace": "UqVoGflE", "thumbnailUrl": "TbPTrfj2", "useCount": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'gWF17gFc' \
    --namespace $AB_NAMESPACE \
    --storeId 'cdYAReD4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'ffHOprd7' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'VMamsUwg' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 87, "orderNo": "eMIFpLJz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'AN60jmpm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'DGWo4Kg7' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '1ANO2R4F' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "HVRU2bzF", "previewUrl": "AWAoohgx", "thumbnailUrl": "JZ8cmLcN", "type": "video", "url": "6EpIPC89", "videoSource": "vimeo"}, {"alt": "XXqqVbJM", "previewUrl": "Zn0tCdyv", "thumbnailUrl": "iqclXeXe", "type": "image", "url": "jjrwOpaX", "videoSource": "generic"}, {"alt": "hmpudl3y", "previewUrl": "76Fq7kBh", "thumbnailUrl": "VHmHYk0K", "type": "video", "url": "u2J7inzz", "videoSource": "youtube"}], "developer": "Tw8PA5wp", "forumUrl": "4wShksOm", "genres": ["RPG", "Casual", "Racing"], "localizations": {"eSiPXoU8": {"announcement": "wlFLHt6N", "slogan": "uctqFxIe"}, "uCTeMm50": {"announcement": "PFbptqQJ", "slogan": "ia9FLXR9"}, "b1mEQELD": {"announcement": "Svngmq2d", "slogan": "OxQcEAW0"}}, "platformRequirements": {"0rYVp01U": [{"additionals": "SvxdaZQo", "directXVersion": "Evb3Evsu", "diskSpace": "gQOLPzhA", "graphics": "sHS5e2r7", "label": "sUjUkTnw", "osVersion": "XILanhmV", "processor": "ojH4jkQc", "ram": "loRk0hPP", "soundCard": "nMtwGpVH"}, {"additionals": "KK1al5Vw", "directXVersion": "Y7t8uiED", "diskSpace": "L9vql7er", "graphics": "Cor4XAeO", "label": "0qaUkQyH", "osVersion": "K8cFLpeK", "processor": "mcj5pBhS", "ram": "SABU6Ine", "soundCard": "VBUrXch0"}, {"additionals": "2yKNpaKx", "directXVersion": "2YL6bvee", "diskSpace": "QREILXhP", "graphics": "rryM3Zpi", "label": "D9QUhxPa", "osVersion": "diHuI9U4", "processor": "nQgp68Tc", "ram": "QUW9xMIG", "soundCard": "sisPJm7X"}], "hPrC7hgP": [{"additionals": "cXgaxt8J", "directXVersion": "kBAHMkxq", "diskSpace": "eDUVqSo0", "graphics": "SIjXMV0p", "label": "1p2wu9pu", "osVersion": "jzcwCsYD", "processor": "AigJucKj", "ram": "Oh4z7W1S", "soundCard": "8IPTYku6"}, {"additionals": "dq1iIzHf", "directXVersion": "rBX9YsaP", "diskSpace": "35DdejT2", "graphics": "QCoTkHNs", "label": "E2FYg2VA", "osVersion": "3QtQG4tw", "processor": "Wv1ggDUH", "ram": "twKBuVXc", "soundCard": "rDJgsE5a"}, {"additionals": "4HpISSc5", "directXVersion": "oSWSmvNR", "diskSpace": "hZHFbf3d", "graphics": "Q9WrMNYH", "label": "rezlncdK", "osVersion": "PyL7E1Jt", "processor": "c2cRMbuU", "ram": "uVPpS0hq", "soundCard": "Hzpf4XXm"}], "hmRKzELS": [{"additionals": "NeGoyntG", "directXVersion": "9Gmn2WAi", "diskSpace": "nr3IGvvr", "graphics": "afWUcbIF", "label": "DTJmENwz", "osVersion": "tnHZ3Mp5", "processor": "JeRqxRxw", "ram": "OzNB0xpu", "soundCard": "FktTy0Et"}, {"additionals": "rIEZ2zuK", "directXVersion": "cLRxPKwL", "diskSpace": "gwDLG3dI", "graphics": "6fXClQ2P", "label": "52pvFpJ8", "osVersion": "jIpAODfB", "processor": "gX8tJCX2", "ram": "vvGqQeJt", "soundCard": "1Msd5Tz1"}, {"additionals": "BxsxsfrF", "directXVersion": "QhZKl1XP", "diskSpace": "Awdl2XKd", "graphics": "RGeQV6lv", "label": "sDtTmTg3", "osVersion": "nQrQWN0F", "processor": "8bUc8iwA", "ram": "kkNs8d6r", "soundCard": "LA6nsPob"}]}, "platforms": ["IOS", "Android", "Linux"], "players": ["Multi", "Coop", "LocalCoop"], "primaryGenre": "MassivelyMultiplayer", "publisher": "UhvX8RUg", "releaseDate": "1980-11-20T00:00:00Z", "websiteUrl": "CafoTOrP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'KqtrxEsc' \
    --namespace $AB_NAMESPACE \
    --storeId 'IEIIfdNd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'UXKdpdUJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'GRaEjQpw' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'Hd9kvVBB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '5la6lgkp' \
    --namespace $AB_NAMESPACE \
    --storeId '0twDmmDg' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'zEU2KXcn' \
    --itemId 'CpKDrNg4' \
    --namespace $AB_NAMESPACE \
    --storeId 'GwqGEX9o' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'f8Tjkw9u' \
    --itemId 'k4VcVrHa' \
    --namespace $AB_NAMESPACE \
    --storeId 'UJTU5fhu' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'UeF32vfn' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '5zUiJWY5' \
    --populateBundle 'false' \
    --region 'qADextFW' \
    --storeId 'nCkGZOSs' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 85, "comparison": "excludes", "name": "sMepvC0k", "predicateType": "EntitlementPredicate", "value": "k3mwqPxC", "values": ["6pGe0Dsz", "LxXsI5Ao", "CvcoQH5q"]}, {"anyOf": 22, "comparison": "is", "name": "cnne1N0D", "predicateType": "SeasonTierPredicate", "value": "NPgVST1B", "values": ["wd21ypA7", "SFTCdW2I", "WXJbnFnt"]}, {"anyOf": 2, "comparison": "isNot", "name": "Uxsxz2WF", "predicateType": "EntitlementPredicate", "value": "9gaH0J7s", "values": ["BmvExqmA", "WdYvrsBl", "Iz65oqsn"]}]}, {"operator": "and", "predicates": [{"anyOf": 2, "comparison": "isGreaterThanOrEqual", "name": "FTkjyFD1", "predicateType": "EntitlementPredicate", "value": "yeJH7tWG", "values": ["QwpyB17Z", "XOOn5jOM", "I0FcCrld"]}, {"anyOf": 100, "comparison": "isLessThan", "name": "RgmQnWUG", "predicateType": "SeasonTierPredicate", "value": "dPBzOTOR", "values": ["w34w0iPQ", "ygYP7Jj2", "qroDUPMp"]}, {"anyOf": 11, "comparison": "excludes", "name": "feyT9iL2", "predicateType": "SeasonPassPredicate", "value": "HgLAYXhn", "values": ["lPMeID46", "JIBdKG4S", "sGANBVUD"]}]}, {"operator": "or", "predicates": [{"anyOf": 5, "comparison": "excludes", "name": "qcVRz0lr", "predicateType": "SeasonPassPredicate", "value": "Uk6aEMmI", "values": ["o7Fm1ukb", "5vYyTpny", "jKGFReEK"]}, {"anyOf": 24, "comparison": "isGreaterThan", "name": "T5FFrty5", "predicateType": "EntitlementPredicate", "value": "F3TeIC1a", "values": ["WtKLkwq1", "lunWbLco", "HDp60llu"]}, {"anyOf": 55, "comparison": "excludes", "name": "iL2MlPnl", "predicateType": "SeasonTierPredicate", "value": "wbBy9Zqk", "values": ["1Mv6tCYh", "0JPBQQRL", "DodA86NA"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId '5HtnY2dE' \
    --namespace $AB_NAMESPACE \
    --storeId '7aUStfKh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "wUUiAZUx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId '09XTEFyH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '49' \
    --name 'CDzRNyao' \
    --offset '51' \
    --tag 'HC8gEL4S' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "ThbTgRa9", "name": "txmYs6Mq", "status": "ACTIVE", "tags": ["yFwdKUy8", "VYAq5Jwt", "Dj4lZx8d"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
eval_tap 0 112 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'sWfUoyLf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "yKgioXF3", "name": "62kh84FS", "status": "ACTIVE", "tags": ["c8ka8o32", "JLKtTrPn", "duhP5Q5Y"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'uusqw4Mk' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'Zqqwd3uJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'no3XAxLa' \
    --namespace $AB_NAMESPACE \
    --limit '53' \
    --offset '51' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'KTAMXhvE' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime '39jgjeSf' \
    --limit '80' \
    --offset '12' \
    --orderNos '["APDzlaTH", "WC5OGpaZ", "Aa1B6XCx"]' \
    --sortBy 'zcC0dvXU' \
    --startTime 'KyR4BAEw' \
    --status 'CHARGEBACK' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'FbIGZLVg' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "N0glb2YB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'zd6sOjse' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "ohDFzZWc", "privateKey": "TqVh6yth"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'S8Jdp3Mx' \
    --externalId 'JnLldVy8' \
    --limit '71' \
    --notificationSource 'CHECKOUT' \
    --notificationType 'pkTI69gN' \
    --offset '17' \
    --paymentOrderNo 'zfgQ0oQi' \
    --startDate 'Z8AlORPE' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'zjwsvQ4b' \
    --limit '84' \
    --offset '63' \
    --status 'AUTHORISED' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "3tjOf2s6", "currencyNamespace": "r7Y9oxPB", "customParameters": {"l3S2GfrB": {}, "B491y9Kn": {}, "UHQpETMK": {}}, "description": "gIemyblk", "extOrderNo": "XXMEHi6t", "extUserId": "OZHoSZDN", "itemType": "SUBSCRIPTION", "language": "ldG", "metadata": {"5fFQ0gBR": "BV4MJncY", "kcAEpoee": "W3UZFUeB", "tCy2eiLG": "9T3bOfhY"}, "notifyUrl": "OEulQSJt", "omitNotification": false, "platform": "rCmDneWb", "price": 16, "recurringPaymentOrderNo": "98Ncr8sh", "region": "1dHpIUMm", "returnUrl": "N9HYZaIx", "sandbox": true, "sku": "mQoUqSK1", "subscriptionId": "ysJi15VF", "targetNamespace": "6tljVCUs", "targetUserId": "LjlUg6Tp", "title": "vpHQzp4L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'tePB188v' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'v9Ja34kA' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "mBCY7tse", "paymentMethod": "Xe0v750Q", "paymentProvider": "PAYPAL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '7VO897o1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "SAc7KBRr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '9Wb5YLNV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 38, "currencyCode": "1q8CTC9u", "notifyType": "CHARGE", "paymentProvider": "WALLET", "salesTax": 89, "vat": 59}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'n7Fh2b0m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'f4FUdlvz' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Steam", "Stadia", "Stadia"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 CreateReward
# body param: body
echo '{"description": "awZgVTUa", "eventTopic": "JErXVXa3", "maxAwarded": 34, "maxAwardedPerUser": 33, "namespaceExpression": "b8ZzLUJ0", "rewardCode": "0iFb1sRJ", "rewardConditions": [{"condition": "OnfymQFc", "conditionName": "4szJfDpV", "eventName": "ionBXJ8z", "rewardItems": [{"duration": 87, "itemId": "zJlJGk10", "quantity": 49}, {"duration": 54, "itemId": "Ht0ATeuU", "quantity": 92}, {"duration": 22, "itemId": "7zGODdFS", "quantity": 63}]}, {"condition": "zjCtrNZG", "conditionName": "epequ8Wj", "eventName": "4gIcnBXQ", "rewardItems": [{"duration": 78, "itemId": "rfb5gyE9", "quantity": 77}, {"duration": 24, "itemId": "vsrZZpID", "quantity": 55}, {"duration": 36, "itemId": "v4wYBaqD", "quantity": 53}]}, {"condition": "ZE1Eyoxr", "conditionName": "C1FWTThT", "eventName": "p8IHuMcI", "rewardItems": [{"duration": 73, "itemId": "hTFNN142", "quantity": 26}, {"duration": 59, "itemId": "y2rN6FVU", "quantity": 20}, {"duration": 7, "itemId": "im4WxNsI", "quantity": 63}]}], "userIdExpression": "TzjltL8m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateReward' test.out

#- 137 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'b2afTt9Q' \
    --limit '6' \
    --offset '47' \
    --sortBy '["namespace", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 137 'QueryRewards' test.out

#- 138 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'ExportRewards' test.out

#- 139 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 139 'ImportRewards' test.out

#- 140 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId '5epAE4oZ' \
    > test.out 2>&1
eval_tap $? 140 'GetReward' test.out

#- 141 UpdateReward
# body param: body
echo '{"description": "PBktw5xp", "eventTopic": "PRTOsAPd", "maxAwarded": 79, "maxAwardedPerUser": 25, "namespaceExpression": "KQfeKuF0", "rewardCode": "i9RMZdiY", "rewardConditions": [{"condition": "mMktPv1F", "conditionName": "CBBEvUWF", "eventName": "QIWCR6kq", "rewardItems": [{"duration": 72, "itemId": "mXYC3dsH", "quantity": 36}, {"duration": 84, "itemId": "LqREap8I", "quantity": 77}, {"duration": 71, "itemId": "1ejVxqnv", "quantity": 4}]}, {"condition": "YoWMuEuN", "conditionName": "5DRFthi8", "eventName": "fjG6SZVW", "rewardItems": [{"duration": 65, "itemId": "185ipdMI", "quantity": 28}, {"duration": 92, "itemId": "XRDTMB67", "quantity": 48}, {"duration": 16, "itemId": "XhlEARMv", "quantity": 14}]}, {"condition": "ti0vevnc", "conditionName": "DDhJiapO", "eventName": "borR16YZ", "rewardItems": [{"duration": 31, "itemId": "xBN479n0", "quantity": 25}, {"duration": 58, "itemId": "3ascmqCv", "quantity": 97}, {"duration": 24, "itemId": "nvcUOjlE", "quantity": 86}]}], "userIdExpression": "FPy1gSPQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'iorADIXC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateReward' test.out

#- 142 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'rWqjn5Fe' \
    > test.out 2>&1
eval_tap $? 142 'DeleteReward' test.out

#- 143 CheckEventCondition
# body param: body
echo '{"payload": {"NxGFS4dq": {}, "rLAt23aO": {}, "fUwUfZCs": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId '85ayqvVZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CheckEventCondition' test.out

#- 144 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "rQJApSdj", "userId": "iD8To5Ye"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'NDQbR9Nl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteRewardConditionRecord' test.out

#- 145 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'ListStores' test.out

#- 146 CreateStore
# body param: body
echo '{"defaultLanguage": "whvz6jSc", "defaultRegion": "Q1qQjYlL", "description": "JauaeRAx", "supportedLanguages": ["NDAPQKqQ", "zy8a69p7", "F9sUufDf"], "supportedRegions": ["5RdMPRdo", "YeiSRkUz", "SruJwO3C"], "title": "fN5w5zPe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreateStore' test.out

#- 147 ImportStore
eval_tap 0 147 'ImportStore # SKIP deprecated' test.out

#- 148 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'GetPublishedStore' test.out

#- 149 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'DeletePublishedStore' test.out

#- 150 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 150 'GetPublishedStoreBackup' test.out

#- 151 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'RollbackPublishedStore' test.out

#- 152 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'HzoIx9ij' \
    > test.out 2>&1
eval_tap $? 152 'GetStore' test.out

#- 153 UpdateStore
# body param: body
echo '{"defaultLanguage": "EfNAHX5T", "defaultRegion": "QIILAbpI", "description": "91BHQ3r4", "supportedLanguages": ["svkuvGRD", "T9NreLQU", "kjCYFEmB"], "supportedRegions": ["Sh1sOxGH", "kkEkVdtJ", "OwWAFbCm"], "title": "7NDBEA2t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'eSSZjXHj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateStore' test.out

#- 154 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'XuMPSU3k' \
    > test.out 2>&1
eval_tap $? 154 'DeleteStore' test.out

#- 155 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'Hv7v17OL' \
    --action 'CREATE' \
    --itemSku 'YNHybWHT' \
    --itemType 'OPTIONBOX' \
    --limit '49' \
    --offset '57' \
    --selected 'true' \
    --sortBy '["updatedAt", "updatedAt:asc", "createdAt"]' \
    --status 'UNPUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'qGxWFxM1' \
    --updatedAtStart 'SLsIpsCs' \
    > test.out 2>&1
eval_tap $? 155 'QueryChanges' test.out

#- 156 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'xeWgghxN' \
    > test.out 2>&1
eval_tap $? 156 'PublishAll' test.out

#- 157 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'm7l8nGSn' \
    > test.out 2>&1
eval_tap $? 157 'PublishSelected' test.out

#- 158 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'PGWJnCyA' \
    > test.out 2>&1
eval_tap $? 158 'SelectAllRecords' test.out

#- 159 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'wlPQrYhI' \
    --action 'CREATE' \
    --itemSku '8bkBB1Z1' \
    --itemType 'SUBSCRIPTION' \
    --type 'ITEM' \
    --updatedAtEnd 'Gw3Amy9w' \
    --updatedAtStart 'WH0fBSRH' \
    > test.out 2>&1
eval_tap $? 159 'GetStatistic' test.out

#- 160 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'XhmwVpDF' \
    > test.out 2>&1
eval_tap $? 160 'UnselectAllRecords' test.out

#- 161 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'du3lIK0o' \
    --namespace $AB_NAMESPACE \
    --storeId 'VkmIiyH8' \
    > test.out 2>&1
eval_tap $? 161 'SelectRecord' test.out

#- 162 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '6LbNf2u8' \
    --namespace $AB_NAMESPACE \
    --storeId 'sqIKpEMD' \
    > test.out 2>&1
eval_tap $? 162 'UnselectRecord' test.out

#- 163 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'IvVL1YJd' \
    --targetStoreId 'PmOTzIIt' \
    > test.out 2>&1
eval_tap $? 163 'CloneStore' test.out

#- 164 ExportStore
eval_tap 0 164 'ExportStore # SKIP deprecated' test.out

#- 165 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGED' \
    --itemId 'GTcteEXN' \
    --limit '6' \
    --offset '99' \
    --sku 'u48bLwJb' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    --userId 'cOouVqjw' \
    > test.out 2>&1
eval_tap $? 165 'QuerySubscriptions' test.out

#- 166 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'AnKPo3Dw' \
    > test.out 2>&1
eval_tap $? 166 'RecurringChargeSubscription' test.out

#- 167 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'sxTOp4iA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetTicketDynamic' test.out

#- 168 DecreaseTicketSale
# body param: body
echo '{"orderNo": "f5Ij84qD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'T2kXJQ1s' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'DecreaseTicketSale' test.out

#- 169 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'rqXqd2UB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'GetTicketBoothID' test.out

#- 170 IncreaseTicketSale
# body param: body
echo '{"count": 42, "orderNo": "YkxImKdy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'yvhP3HhW' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'IncreaseTicketSale' test.out

#- 171 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "quuhTgHN", "value": 96}, {"id": "aEVZo6fY", "value": 26}, {"id": "7mKFIFNX", "value": 81}], "steamUserId": "OHFQA6d2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'bdddHjxl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'UnlockSteamUserAchievement' test.out

#- 172 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId '1rHV9xCm' \
    --xboxUserId 'yppzgDE8' \
    > test.out 2>&1
eval_tap $? 172 'GetXblUserAchievements' test.out

#- 173 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "4lFq8UE2", "percentComplete": 58}, {"id": "tZMb3fzC", "percentComplete": 15}, {"id": "DagAT8DA", "percentComplete": 74}], "serviceConfigId": "FKW30ypW", "titleId": "iIt8I3qy", "xboxUserId": "5KLhZFUt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'gzzxcxg1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'UpdateXblUserAchievement' test.out

#- 174 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'nGkEqmVs' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeCampaign' test.out

#- 175 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'awEOHRh0' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeEntitlement' test.out

#- 176 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'Hu8DwSxR' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizeFulfillment' test.out

#- 177 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'Tm8TtKUp' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeIntegration' test.out

#- 178 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'yHXvOdCA' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizeOrder' test.out

#- 179 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'pHv5zxcv' \
    > test.out 2>&1
eval_tap $? 179 'AnonymizePayment' test.out

#- 180 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'k4bnpc63' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeSubscription' test.out

#- 181 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId '6TWIjc7r' \
    > test.out 2>&1
eval_tap $? 181 'AnonymizeWallet' test.out

#- 182 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'sK1i0GGV' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 182 'GetUserDLC' test.out

#- 183 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'or4HDoKb' \
    --activeOnly 'false' \
    --appType 'DLC' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName '4JX14oG9' \
    --features '["7nAyceNs", "MCi2dFTd", "PHxbBnWS"]' \
    --itemId '["HKhk8M0D", "ZQhW0ryN", "V9tzIveW"]' \
    --limit '4' \
    --offset '9' \
    > test.out 2>&1
eval_tap $? 183 'QueryUserEntitlements' test.out

#- 184 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1991-12-19T00:00:00Z", "grantedCode": "zOult8MM", "itemId": "qQJuc2q9", "itemNamespace": "BRLqwZq2", "language": "eRbM_DoPS-pF", "quantity": 23, "region": "Q9oH055a", "source": "IAP", "startDate": "1974-05-23T00:00:00Z", "storeId": "deEtJLG9"}, {"endDate": "1999-06-28T00:00:00Z", "grantedCode": "BbJt8BvN", "itemId": "2hutFm49", "itemNamespace": "q56jUJic", "language": "eO", "quantity": 46, "region": "wD9pVR8q", "source": "PROMOTION", "startDate": "1987-01-29T00:00:00Z", "storeId": "wBPHFLOt"}, {"endDate": "1973-01-28T00:00:00Z", "grantedCode": "5Ivi3oFk", "itemId": "kNzo4WlQ", "itemNamespace": "p9rCoypH", "language": "QUnP", "quantity": 49, "region": "kMKhbN9Q", "source": "OTHER", "startDate": "1995-04-17T00:00:00Z", "storeId": "Z5NnylbS"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'bGV6rlpe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'GrantUserEntitlement' test.out

#- 185 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'WEdRfNZx' \
    --activeOnly 'false' \
    --appId 'LXk14oFW' \
    > test.out 2>&1
eval_tap $? 185 'GetUserAppEntitlementByAppId' test.out

#- 186 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'Goe7XF0E' \
    --activeOnly 'true' \
    --limit '93' \
    --offset '42' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 186 'QueryUserEntitlementsByAppType' test.out

#- 187 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'upPdUODH' \
    --activeOnly 'false' \
    --entitlementClazz 'MEDIA' \
    --itemId 'BENJfSYq' \
    > test.out 2>&1
eval_tap $? 187 'GetUserEntitlementByItemId' test.out

#- 188 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '9iMhTXmO' \
    --ids '["a66uaUVS", "M4B9jp23", "ad83E10J"]' \
    > test.out 2>&1
eval_tap $? 188 'GetUserActiveEntitlementsByItemIds' test.out

#- 189 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '7zM0Dasy' \
    --activeOnly 'true' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'UqbWKSS0' \
    > test.out 2>&1
eval_tap $? 189 'GetUserEntitlementBySku' test.out

#- 190 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Vtc4ynwO' \
    --appIds '["Z8CgFlgE", "P8kf3kSn", "XZUvHHnZ"]' \
    --itemIds '["hhjiBxbz", "Vl8dSm3A", "wtz7JAU2"]' \
    --skus '["34zWnoUE", "sqUqTRPJ", "ofK039El"]' \
    > test.out 2>&1
eval_tap $? 190 'ExistsAnyUserActiveEntitlement' test.out

#- 191 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'WtlRXSJK' \
    --itemIds '["nPEjVEzz", "ba1Yj3nD", "OI4WyxTY"]' \
    > test.out 2>&1
eval_tap $? 191 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 192 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'ekfH53cj' \
    --appId 'RLycbsmA' \
    > test.out 2>&1
eval_tap $? 192 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 193 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'CZ8HxG4Q' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'zYfj3dET' \
    > test.out 2>&1
eval_tap $? 193 'GetUserEntitlementOwnershipByItemId' test.out

#- 194 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Fo4PHHUy' \
    --ids '["k995FpVV", "0HgPfmcz", "E4QDtDsI"]' \
    > test.out 2>&1
eval_tap $? 194 'GetUserEntitlementOwnershipByItemIds' test.out

#- 195 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'EoxctdG7' \
    --entitlementClazz 'LOOTBOX' \
    --sku 'JlB19Ms5' \
    > test.out 2>&1
eval_tap $? 195 'GetUserEntitlementOwnershipBySku' test.out

#- 196 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'sew6hIn4' \
    --entitlementIds 'isGpoqe3' \
    > test.out 2>&1
eval_tap $? 196 'RevokeUserEntitlements' test.out

#- 197 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId '4qJHXh05' \
    --namespace $AB_NAMESPACE \
    --userId '5W6DoSrG' \
    > test.out 2>&1
eval_tap $? 197 'GetUserEntitlement' test.out

#- 198 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1990-05-25T00:00:00Z", "nullFieldList": ["iQvwf9Se", "iiY8wtIJ", "CETgUIGu"], "startDate": "1998-11-03T00:00:00Z", "status": "INACTIVE", "useCount": 93}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'YgPx5XjR' \
    --namespace $AB_NAMESPACE \
    --userId 'NAa0FC3N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'UpdateUserEntitlement' test.out

#- 199 ConsumeUserEntitlement
# body param: body
echo '{"options": ["huWMDazJ", "kwr5xSJs", "koxFwJ0Q"], "requestId": "JQmU8T7R", "useCount": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'I5srLcqM' \
    --namespace $AB_NAMESPACE \
    --userId 'n2LLGiZD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'ConsumeUserEntitlement' test.out

#- 200 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'C6t0QyO9' \
    --namespace $AB_NAMESPACE \
    --userId 'prlbSPik' \
    > test.out 2>&1
eval_tap $? 200 'DisableUserEntitlement' test.out

#- 201 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'aJDLUYvn' \
    --namespace $AB_NAMESPACE \
    --userId 'c8T4sIgD' \
    > test.out 2>&1
eval_tap $? 201 'EnableUserEntitlement' test.out

#- 202 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '57LPWGsu' \
    --namespace $AB_NAMESPACE \
    --userId 'dNfNY8dL' \
    > test.out 2>&1
eval_tap $? 202 'GetUserEntitlementHistories' test.out

#- 203 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '7bPsBnf5' \
    --namespace $AB_NAMESPACE \
    --userId '7KVUQRSV' \
    > test.out 2>&1
eval_tap $? 203 'RevokeUserEntitlement' test.out

#- 204 FulfillItem
# body param: body
echo '{"duration": 52, "endDate": "1981-05-19T00:00:00Z", "itemId": "zxNqsPNe", "itemSku": "JK49iALm", "language": "UbEcQDqV", "order": {"currency": {"currencyCode": "xA1fmsl5", "currencySymbol": "jfUnkDZk", "currencyType": "VIRTUAL", "decimals": 73, "namespace": "9qGek0WL"}, "ext": {"rhxpgxNI": {}, "5RPuxY1T": {}, "2tNDhxX0": {}}, "free": true}, "orderNo": "X9yAgWXG", "origin": "Playstation", "quantity": 57, "region": "CGMhRpeL", "source": "ACHIEVEMENT", "startDate": "1990-02-14T00:00:00Z", "storeId": "rU4GXA1J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId '9FGn14os' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'FulfillItem' test.out

#- 205 RedeemCode
# body param: body
echo '{"code": "7hRz5HrK", "language": "NN-rkqV", "region": "9gUZJuIL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'DPDjji33' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 205 'RedeemCode' test.out

#- 206 FulfillRewards
# body param: body
echo '{"origin": "Other", "rewards": [{"currency": {"currencyCode": "BT3pa9eI", "namespace": "sWzuL8f0"}, "item": {"itemId": "ktRimwWW", "itemSku": "KP3TpgUK", "itemType": "SaqAyYXV"}, "quantity": 49, "type": "CURRENCY"}, {"currency": {"currencyCode": "10ZajVCz", "namespace": "azmwHHWf"}, "item": {"itemId": "M7897j7O", "itemSku": "wHkNIw9u", "itemType": "bG0C49dH"}, "quantity": 33, "type": "CURRENCY"}, {"currency": {"currencyCode": "JhsPYD7N", "namespace": "xIH8Wuq0"}, "item": {"itemId": "4JRqWvPT", "itemSku": "rEUYSn3M", "itemType": "hRdvxVaz"}, "quantity": 99, "type": "CURRENCY"}], "source": "DLC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'zj48eJnD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'FulfillRewards' test.out

#- 207 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'WUVNEESq' \
    --endTime 'UimsFF2y' \
    --limit '29' \
    --offset '60' \
    --productId 'AJQmudzP' \
    --startTime 'l48xg6s0' \
    --status 'FULFILLED' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 207 'QueryUserIAPOrders' test.out

#- 208 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'AZqBSC2B' \
    > test.out 2>&1
eval_tap $? 208 'QueryAllUserIAPOrders' test.out

#- 209 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'FYRFUafe' \
    --endTime 'fRwwf9mP' \
    --limit '63' \
    --offset '24' \
    --startTime 'zkyp0ZyB' \
    --status 'SUCCESS' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 209 'QueryUserIAPConsumeHistory' test.out

#- 210 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "xg", "productId": "ZUf8NR0P", "region": "uA32Me5m", "type": "STEAM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'G5kDiIMO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'MockFulfillIAPItem' test.out

#- 211 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '6VvIN43l' \
    --itemId '8fEKHbYT' \
    --limit '62' \
    --offset '71' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 211 'QueryUserOrders' test.out

#- 212 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "4vTJbMUK", "currencyNamespace": "7HxHOWFe", "discountedPrice": 42, "ext": {"DeZZjqG8": {}, "K838kd4L": {}, "vjJZi1sx": {}}, "itemId": "XgKYn1Ae", "language": "T6iDuVpi", "options": {"skipPriceValidation": false}, "platform": "Other", "price": 56, "quantity": 95, "region": "ldL9ASeN", "returnUrl": "B1hWwLol", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'rChmGAAc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'AdminCreateUserOrder' test.out

#- 213 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'bKhHzEDr' \
    --itemId 'TL7nuPjr' \
    > test.out 2>&1
eval_tap $? 213 'CountOfPurchasedItem' test.out

#- 214 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'HJdb6HCV' \
    --userId 'fRJrJZsP' \
    > test.out 2>&1
eval_tap $? 214 'GetUserOrder' test.out

#- 215 UpdateUserOrderStatus
# body param: body
echo '{"status": "FULFILL_FAILED", "statusReason": "ozL8WrtQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo '6tqaED2I' \
    --userId 'bBMzSXlo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'UpdateUserOrderStatus' test.out

#- 216 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'mA7NJZIG' \
    --userId 'WgT3MfFE' \
    > test.out 2>&1
eval_tap $? 216 'FulfillUserOrder' test.out

#- 217 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'CyrBJqOk' \
    --userId 'N2traZXH' \
    > test.out 2>&1
eval_tap $? 217 'GetUserOrderGrant' test.out

#- 218 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'csA6WCCh' \
    --userId 'EEDE2I8D' \
    > test.out 2>&1
eval_tap $? 218 'GetUserOrderHistories' test.out

#- 219 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "zgI7sSN9"}, "authorisedTime": "1978-10-17T00:00:00Z", "chargebackReversedTime": "1996-03-02T00:00:00Z", "chargebackTime": "1983-01-01T00:00:00Z", "chargedTime": "1974-10-06T00:00:00Z", "createdTime": "1993-11-17T00:00:00Z", "currency": {"currencyCode": "arcaM7LQ", "currencySymbol": "Fo66Hz52", "currencyType": "VIRTUAL", "decimals": 62, "namespace": "ATjaKk2x"}, "customParameters": {"gcBBHWam": {}, "qupYE7FC": {}, "ZveO1Szh": {}}, "extOrderNo": "ZMYQbzYA", "extTxId": "oVSmwoQE", "extUserId": "SOEcUQph", "issuedAt": "1997-09-24T00:00:00Z", "metadata": {"TQ0IUvsA": "HlrJN40X", "b0J6gqGr": "PqDoxtad", "v13moZf3": "4fjfSH2E"}, "namespace": "NECd8QaJ", "nonceStr": "823TlNjH", "paymentMethod": "YECKj94s", "paymentMethodFee": 18, "paymentOrderNo": "9eEcbOow", "paymentProvider": "WALLET", "paymentProviderFee": 2, "paymentStationUrl": "q76NzQsT", "price": 1, "refundedTime": "1979-01-12T00:00:00Z", "salesTax": 0, "sandbox": true, "sku": "Cijkv3tG", "status": "REQUEST_FOR_INFORMATION", "statusReason": "Evxlyl4C", "subscriptionId": "tFdhVRYS", "subtotalPrice": 98, "targetNamespace": "jQtu6hoi", "targetUserId": "V9l8Ty1v", "tax": 52, "totalPrice": 17, "totalTax": 29, "txEndTime": "1971-09-28T00:00:00Z", "type": "4Vmiyi2k", "userId": "Ehn2B14B", "vat": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'eeoQYxm6' \
    --userId 'obgotwD8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'ProcessUserOrderNotification' test.out

#- 220 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'Sc801OMS' \
    --userId 'fGethdEm' \
    > test.out 2>&1
eval_tap $? 220 'DownloadUserOrderReceipt' test.out

#- 221 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "RaAxfJNU", "currencyNamespace": "o2aa839M", "customParameters": {"T8fvlrVF": {}, "p6sGaxIP": {}, "xGkc6jZO": {}}, "description": "t5QA05Sz", "extOrderNo": "QgaU2nHo", "extUserId": "G4oIlXEZ", "itemType": "APP", "language": "WC-vDAE", "metadata": {"mHjJO3Zo": "kkoZ95OW", "qJaNrrTe": "1HN9URHV", "XUmGIHuq": "jobBKZUJ"}, "notifyUrl": "aiPPMeUl", "omitNotification": false, "platform": "CxaeWSxw", "price": 19, "recurringPaymentOrderNo": "sdSzizHs", "region": "vue0x96F", "returnUrl": "fZSIu8OR", "sandbox": false, "sku": "EqfQmL0n", "subscriptionId": "zkPSq245", "title": "oupjZDf6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'NciUIULa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'CreateUserPaymentOrder' test.out

#- 222 RefundUserPaymentOrder
# body param: body
echo '{"description": "LSxnT8KX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'EMlvMhSC' \
    --userId '1g8xDLlJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'RefundUserPaymentOrder' test.out

#- 223 ApplyUserRedemption
# body param: body
echo '{"code": "sypal0xc", "orderNo": "UCFiu7rU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId '66JEBEUe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'ApplyUserRedemption' test.out

#- 224 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'OK6e3nWA' \
    --chargeStatus 'CHARGED' \
    --itemId 'AXDrixEH' \
    --limit '49' \
    --offset '0' \
    --sku 'YpHaXnxV' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 224 'QueryUserSubscriptions' test.out

#- 225 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'roQf8Av6' \
    --excludeSystem 'false' \
    --limit '34' \
    --offset '73' \
    --subscriptionId '9QuW0R27' \
    > test.out 2>&1
eval_tap $? 225 'GetUserSubscriptionActivities' test.out

#- 226 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 75, "itemId": "dFtitv3J", "language": "m0qmwWDV", "reason": "YBEVWB4e", "region": "efigcsEC", "source": "arcyHbKS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'kggcLVGA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'PlatformSubscribeSubscription' test.out

#- 227 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'sRHsoXGL' \
    --itemId '3Pwx35MC' \
    > test.out 2>&1
eval_tap $? 227 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 228 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '2CfFucFc' \
    --userId '5p1Q7Wyi' \
    > test.out 2>&1
eval_tap $? 228 'GetUserSubscription' test.out

#- 229 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'PdLsZKKj' \
    --userId 'H0bpltJ2' \
    > test.out 2>&1
eval_tap $? 229 'DeleteUserSubscription' test.out

#- 230 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "letguYeP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'odTNxJ4g' \
    --userId 'CqJXSIKO' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'CancelSubscription' test.out

#- 231 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 38, "reason": "rfglVQkW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'QBfxhm6E' \
    --userId 'dSKZjXUS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'GrantDaysToSubscription' test.out

#- 232 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'SNYCMldf' \
    --userId 'PFZR5A5t' \
    --excludeFree 'true' \
    --limit '19' \
    --offset '88' \
    > test.out 2>&1
eval_tap $? 232 'GetUserSubscriptionBillingHistories' test.out

#- 233 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "pJOBwfv9"}, "authorisedTime": "1976-12-02T00:00:00Z", "chargebackReversedTime": "1975-05-02T00:00:00Z", "chargebackTime": "1993-10-02T00:00:00Z", "chargedTime": "1988-07-02T00:00:00Z", "createdTime": "1990-06-25T00:00:00Z", "currency": {"currencyCode": "7Kzqb0lv", "currencySymbol": "jrA3XMnd", "currencyType": "REAL", "decimals": 73, "namespace": "aZaVoTDm"}, "customParameters": {"ES3suU0G": {}, "n1xHVpOs": {}, "rHvkE3P4": {}}, "extOrderNo": "376Pde03", "extTxId": "zeoU0MG7", "extUserId": "nbgZyO4i", "issuedAt": "1991-09-23T00:00:00Z", "metadata": {"atX3xXAS": "gyqCNgNv", "c9zwRGcU": "MOCGQcdp", "f9BkJMhp": "JQDZ5YPy"}, "namespace": "xhb2HaSc", "nonceStr": "EV8Alzv6", "paymentMethod": "N7ZfFqms", "paymentMethodFee": 16, "paymentOrderNo": "7F1Z5DZG", "paymentProvider": "CHECKOUT", "paymentProviderFee": 57, "paymentStationUrl": "1w1OKuOP", "price": 60, "refundedTime": "1988-06-25T00:00:00Z", "salesTax": 72, "sandbox": true, "sku": "maSaqfI0", "status": "REFUNDED", "statusReason": "z48e7gmH", "subscriptionId": "PmV7DrBY", "subtotalPrice": 3, "targetNamespace": "M0bVPsOC", "targetUserId": "ZyznVWvs", "tax": 64, "totalPrice": 25, "totalTax": 97, "txEndTime": "1989-02-25T00:00:00Z", "type": "a4L85Orn", "userId": "vEBxTAgv", "vat": 82}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'waNTA5Z4' \
    --userId 'FI8TxhMb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'ProcessUserSubscriptionNotification' test.out

#- 234 AcquireUserTicket
# body param: body
echo '{"count": 44, "orderNo": "lrg2wB2e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'VOTzGVTJ' \
    --namespace $AB_NAMESPACE \
    --userId '1OONZ5Ni' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'AcquireUserTicket' test.out

#- 235 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'pHjHXNUl' \
    > test.out 2>&1
eval_tap $? 235 'QueryUserCurrencyWallets' test.out

#- 236 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'jmtQBxLh' \
    --namespace $AB_NAMESPACE \
    --userId 'NoFrG3e5' \
    --limit '63' \
    --offset '84' \
    > test.out 2>&1
eval_tap $? 236 'ListUserCurrencyTransactions' test.out

#- 237 CheckWallet
eval_tap 0 237 'CheckWallet # SKIP deprecated' test.out

#- 238 CreditUserWallet
# body param: body
echo '{"amount": 55, "expireAt": "1985-12-04T00:00:00Z", "origin": "Playstation", "reason": "KFHNJRtv", "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'zzifDonP' \
    --namespace $AB_NAMESPACE \
    --userId 'Ul4OFsNt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'CreditUserWallet' test.out

#- 239 PayWithUserWallet
# body param: body
echo '{"amount": 20, "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'dHLNMyEF' \
    --namespace $AB_NAMESPACE \
    --userId 'sA1Kjc95' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'PayWithUserWallet' test.out

#- 240 GetUserWallet
eval_tap 0 240 'GetUserWallet # SKIP deprecated' test.out

#- 241 DebitUserWallet
eval_tap 0 241 'DebitUserWallet # SKIP deprecated' test.out

#- 242 DisableUserWallet
eval_tap 0 242 'DisableUserWallet # SKIP deprecated' test.out

#- 243 EnableUserWallet
eval_tap 0 243 'EnableUserWallet # SKIP deprecated' test.out

#- 244 ListUserWalletTransactions
eval_tap 0 244 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 245 QueryWallets
eval_tap 0 245 'QueryWallets # SKIP deprecated' test.out

#- 246 GetWallet
eval_tap 0 246 'GetWallet # SKIP deprecated' test.out

#- 247 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'vh75WTdH' \
    --end 'xluuqJp6' \
    --start 'IZsFvZFk' \
    > test.out 2>&1
eval_tap $? 247 'SyncOrders' test.out

#- 248 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["L9Yo6pW3", "LFV9RPwv", "l5ECGpAn"], "apiKey": "xT8si7oH", "authoriseAsCapture": true, "blockedPaymentMethods": ["aS3ynCVw", "j6Hm68EB", "rPVuPxKw"], "clientKey": "trLuKvxo", "dropInSettings": "kKUHsFwg", "liveEndpointUrlPrefix": "E2OPavVo", "merchantAccount": "THRqvfiO", "notificationHmacKey": "qwEoJ28i", "notificationPassword": "Hbww2PaL", "notificationUsername": "Pn2Founs", "returnUrl": "ZMi1RMK1", "settings": "3Sk8pC6F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'TestAdyenConfig' test.out

#- 249 TestAliPayConfig
# body param: body
echo '{"appId": "PZG5iQOf", "privateKey": "QnqRcdwK", "publicKey": "chX6ofEj", "returnUrl": "qI7xKSkO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'TestAliPayConfig' test.out

#- 250 TestCheckoutConfig
# body param: body
echo '{"publicKey": "R8Oy2r92", "secretKey": "yaFac1zb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'TestCheckoutConfig' test.out

#- 251 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'qiVMLOHv' \
    --region 't2FDiPLb' \
    > test.out 2>&1
eval_tap $? 251 'DebugMatchedPaymentMerchantConfig' test.out

#- 252 TestPayPalConfig
# body param: body
echo '{"clientID": "4hR3MvxX", "clientSecret": "S6Q1UqLE", "returnUrl": "sMMHvDZA", "webHookId": "ZbokNlRF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'TestPayPalConfig' test.out

#- 253 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["Ws0AgCcr", "KhEeHBAx", "m52pSTJ4"], "publishableKey": "voWH9e21", "secretKey": "XGJUu89B", "webhookSecret": "gpbzxc4K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'TestStripeConfig' test.out

#- 254 TestWxPayConfig
# body param: body
echo '{"appId": "k3K8rFOK", "key": "vVALUqid", "mchid": "l5l0jrfW", "returnUrl": "GKnWbGs4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'TestWxPayConfig' test.out

#- 255 TestXsollaConfig
# body param: body
echo '{"apiKey": "48ZgmpeM", "flowCompletionUrl": "mieCeOYZ", "merchantId": 0, "projectId": 2, "projectSecretKey": "buAQtvMK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'TestXsollaConfig' test.out

#- 256 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'mZ5EcVBm' \
    > test.out 2>&1
eval_tap $? 256 'GetPaymentMerchantConfig' test.out

#- 257 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["GDkArlbf", "HO18UQrM", "0jeda3F8"], "apiKey": "dzmLgNZQ", "authoriseAsCapture": true, "blockedPaymentMethods": ["UvCIbxtR", "Q3dZ0QBf", "oazkZTsy"], "clientKey": "d1iwnQH2", "dropInSettings": "vCPGkKPc", "liveEndpointUrlPrefix": "T5uowdM5", "merchantAccount": "Ev5Yw0BM", "notificationHmacKey": "g8SO0FWD", "notificationPassword": "LjQGDdep", "notificationUsername": "iB6veth4", "returnUrl": "RIPBPYL5", "settings": "3c4GrNQH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'a0GCGocF' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateAdyenConfig' test.out

#- 258 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'TlLh6eWs' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 258 'TestAdyenConfigById' test.out

#- 259 UpdateAliPayConfig
# body param: body
echo '{"appId": "Hx8aeOa2", "privateKey": "XpvEl4Ku", "publicKey": "DeA5secu", "returnUrl": "1XvlclZo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id '1wts2BMG' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateAliPayConfig' test.out

#- 260 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'zxAinOXi' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 260 'TestAliPayConfigById' test.out

#- 261 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "jHsCpnYj", "secretKey": "1g69cGOG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'ALKIFPo9' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdateCheckoutConfig' test.out

#- 262 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id '4Dy1AVgc' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 262 'TestCheckoutConfigById' test.out

#- 263 UpdatePayPalConfig
# body param: body
echo '{"clientID": "kdllEXbA", "clientSecret": "RaH8DPur", "returnUrl": "8KWphNsy", "webHookId": "mpBiawUu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'GnnFVJ7Z' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdatePayPalConfig' test.out

#- 264 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'sBBreprk' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 264 'TestPayPalConfigById' test.out

#- 265 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["pRMEWBiO", "PJzxyKvy", "G7Cp9Kq0"], "publishableKey": "R1xqvTjb", "secretKey": "pAxO7QlP", "webhookSecret": "snJQalxV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'nuxfVMTe' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'UpdateStripeConfig' test.out

#- 266 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'eJc8tBFQ' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 266 'TestStripeConfigById' test.out

#- 267 UpdateWxPayConfig
# body param: body
echo '{"appId": "V0wWcdCr", "key": "Ihv3NURp", "mchid": "pnuq21br", "returnUrl": "T8CqvHxd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'eepZ0jsC' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'UpdateWxPayConfig' test.out

#- 268 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'UTiUrBoU' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 268 'UpdateWxPayConfigCert' test.out

#- 269 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'AqUKmO9y' \
    > test.out 2>&1
eval_tap $? 269 'TestWxPayConfigById' test.out

#- 270 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "kqWEyUOa", "flowCompletionUrl": "JFHcy3o6", "merchantId": 0, "projectId": 1, "projectSecretKey": "NEf3bBXl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'MTgIX1Gy' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'UpdateXsollaConfig' test.out

#- 271 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'NUDK2soI' \
    > test.out 2>&1
eval_tap $? 271 'TestXsollaConfigById' test.out

#- 272 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "MEDIUM", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'dhNS6W6P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'UpdateXsollaUIConfig' test.out

#- 273 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '44' \
    --namespace_ 'VsgeM0hu' \
    --offset '17' \
    --region 'MmzMF2AR' \
    > test.out 2>&1
eval_tap $? 273 'QueryPaymentProviderConfig' test.out

#- 274 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "pQaf7b14", "region": "93QvNrL1", "sandboxTaxJarApiToken": "6EpOHkXx", "specials": ["ALIPAY", "WALLET", "XSOLLA"], "taxJarApiToken": "CPZ2kuHL", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'CreatePaymentProviderConfig' test.out

#- 275 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 275 'GetAggregatePaymentProviders' test.out

#- 276 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'dTn1Kd5O' \
    --region 'gNGgxRhH' \
    > test.out 2>&1
eval_tap $? 276 'DebugMatchedPaymentProviderConfig' test.out

#- 277 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 277 'GetSpecialPaymentProviders' test.out

#- 278 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "K5tY91tD", "region": "kEfvsp4C", "sandboxTaxJarApiToken": "MVYFqOXL", "specials": ["XSOLLA", "CHECKOUT", "PAYPAL"], "taxJarApiToken": "MF2P6BTa", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'ZZVtK589' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'UpdatePaymentProviderConfig' test.out

#- 279 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id '0OPZWn4z' \
    > test.out 2>&1
eval_tap $? 279 'DeletePaymentProviderConfig' test.out

#- 280 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 280 'GetPaymentTaxConfig' test.out

#- 281 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "S30YpVbW", "taxJarApiToken": "dPg41VHz", "taxJarEnabled": false, "taxJarProductCodesMapping": {"21NlXLUp": "Hex6FUAv", "STbXK6rL": "mwFMutpG", "EXAEKNtj": "YoQIZ2M4"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'UpdatePaymentTaxConfig' test.out

#- 282 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'uG0bkzAk' \
    --end 'WCnhhS7T' \
    --start 'ohFAhHmw' \
    > test.out 2>&1
eval_tap $? 282 'SyncPaymentOrders' test.out

#- 283 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language '3SLAjG4M' \
    --storeId 'rUZ6qDNv' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetRootCategories' test.out

#- 284 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'lstSzojd' \
    --storeId 'xElFJGse' \
    > test.out 2>&1
eval_tap $? 284 'DownloadCategories' test.out

#- 285 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '89hpgHwW' \
    --namespace $AB_NAMESPACE \
    --language 'G3KYGOwI' \
    --storeId 'SdroSs35' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetCategory' test.out

#- 286 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'IqreFvA0' \
    --namespace $AB_NAMESPACE \
    --language 'qwFNOa7T' \
    --storeId 'b3QLFsqW' \
    > test.out 2>&1
eval_tap $? 286 'PublicGetChildCategories' test.out

#- 287 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'wSspNlqR' \
    --namespace $AB_NAMESPACE \
    --language 'GJr3kJPE' \
    --storeId 'oSDjuHVh' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetDescendantCategories' test.out

#- 288 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 288 'PublicListCurrencies' test.out

#- 289 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'dzJomXZD' \
    --region 'ED5ZrRWb' \
    --storeId 'zcCcqLjU' \
    --appId '1pG3Xd6X' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetItemByAppId' test.out

#- 290 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --baseAppId 'vKIS7K98' \
    --categoryPath 'dpwaUldb' \
    --features 'ozo6UlQ1' \
    --includeSubCategoryItem 'true' \
    --itemType 'SUBSCRIPTION' \
    --language '6O6SwOn4' \
    --limit '49' \
    --offset '64' \
    --region 'M5OjKXHL' \
    --sortBy '["updatedAt:asc", "name:asc"]' \
    --storeId 'lcPwrQXy' \
    --tags 'gXxQOB2A' \
    > test.out 2>&1
eval_tap $? 290 'PublicQueryItems' test.out

#- 291 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language '6WYorhwh' \
    --region 'tUCPtJhn' \
    --storeId 'hi6hnbrI' \
    --sku '5sOdqM7H' \
    > test.out 2>&1
eval_tap $? 291 'PublicGetItemBySku' test.out

#- 292 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'ighs00fO' \
    --region 'plIu6E2R' \
    --storeId 'bJYSEZN4' \
    --itemIds 'BEHYhzYx' \
    > test.out 2>&1
eval_tap $? 292 'PublicBulkGetItems' test.out

#- 293 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["7F2D2iGr", "Ld83BXYn", "2Iong0Iw"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicValidateItemPurchaseCondition' test.out

#- 294 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'LOOTBOX' \
    --limit '49' \
    --offset '24' \
    --region 'dBoiBSg2' \
    --storeId 'WGYSSW24' \
    --keyword '6z7PbnGy' \
    --language 'wHqkocjB' \
    > test.out 2>&1
eval_tap $? 294 'PublicSearchItems' test.out

#- 295 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'dZJhiViU' \
    --namespace $AB_NAMESPACE \
    --language 'YCjjSUv5' \
    --region 'YZXYTD2I' \
    --storeId 'DSa1xgma' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetApp' test.out

#- 296 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'ikK9xrgC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 296 'PublicGetItemDynamicData' test.out

#- 297 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'nsfnnEat' \
    --namespace $AB_NAMESPACE \
    --language '5HrhX5eO' \
    --populateBundle 'false' \
    --region 'QZuqFLqT' \
    --storeId 'BlEsevCo' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetItem' test.out

#- 298 GetPaymentCustomization
eval_tap 0 298 'GetPaymentCustomization # SKIP deprecated' test.out

#- 299 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "xnQPKRqv", "paymentProvider": "STRIPE", "returnUrl": "zBY6AhUw", "ui": "qO3eVlec", "zipCode": "bQ8OKOVq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'PublicGetPaymentUrl' test.out

#- 300 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'cfMdEbw4' \
    > test.out 2>&1
eval_tap $? 300 'PublicGetPaymentMethods' test.out

#- 301 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'MUERgiyp' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetUnpaidPaymentOrder' test.out

#- 302 Pay
# body param: body
echo '{"token": "FGy8xclv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'OgfnTXER' \
    --paymentProvider 'ADYEN' \
    --zipCode 'U6qXPo7Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'Pay' test.out

#- 303 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'JKGnNcy8' \
    > test.out 2>&1
eval_tap $? 303 'PublicCheckPaymentOrderPaidStatus' test.out

#- 304 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'STRIPE' \
    --region '1UZJA1mn' \
    > test.out 2>&1
eval_tap $? 304 'GetPaymentPublicConfig' test.out

#- 305 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'WHUzeDK4' \
    > test.out 2>&1
eval_tap $? 305 'PublicGetQRCode' test.out

#- 306 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'uPfncOpG' \
    --foreinginvoice 'hV6dHxbF' \
    --invoiceId 'yP2T5ueW' \
    --payload 'iJN9nfeU' \
    --redirectResult 'YeaAuMuh' \
    --resultCode 'tv8yFpby' \
    --sessionId 'aWVeXaVb' \
    --status '4982MNVJ' \
    --token 'BDomcgC1' \
    --type '1KODz5Hm' \
    --userId 'dD6Hv9Lv' \
    --orderNo '0mmxPq3d' \
    --paymentOrderNo 'Y7tbeXYt' \
    --paymentProvider 'WALLET' \
    --returnUrl '09ud31jn' \
    > test.out 2>&1
eval_tap $? 306 'PublicNormalizePaymentReturnUrl' test.out

#- 307 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'hiS7oqbq' \
    --paymentOrderNo 'IoKn9VXf' \
    --paymentProvider 'CHECKOUT' \
    > test.out 2>&1
eval_tap $? 307 'GetPaymentTaxValue' test.out

#- 308 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'OPnheaMl' \
    > test.out 2>&1
eval_tap $? 308 'GetRewardByCode' test.out

#- 309 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'c7VkHF9G' \
    --limit '80' \
    --offset '7' \
    --sortBy '["namespace:asc", "rewardCode:desc", "rewardCode"]' \
    > test.out 2>&1
eval_tap $? 309 'QueryRewards1' test.out

#- 310 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'W0MP7wyh' \
    > test.out 2>&1
eval_tap $? 310 'GetReward1' test.out

#- 311 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 311 'PublicListStores' test.out

#- 312 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["DC7PcEzO", "G9ZRnfX6", "foMwMrq2"]' \
    --itemIds '["JWHFWz67", "YriGurZa", "Zr67cea7"]' \
    --skus '["T4BWG598", "rgzDmhSC", "0bbM95I7"]' \
    > test.out 2>&1
eval_tap $? 312 'PublicExistsAnyMyActiveEntitlement' test.out

#- 313 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'MumaMdlj' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 314 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --itemId 'keKUrDFf' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 315 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --sku 'DzZGg87P' \
    > test.out 2>&1
eval_tap $? 315 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 316 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["0gwIXqUb", "KBqPP1na", "ebtWAwIo"]' \
    --itemIds '["qkhiGGf3", "kb1V1WZb", "h1CyTp8U"]' \
    --skus '["DKWjhMgj", "A9JipBoy", "Td79PWjq"]' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetEntitlementOwnershipToken' test.out

#- 317 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'c6zrb0Xj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 317 'PublicGetMyWallet' test.out

#- 318 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "ryqAPTRa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'ZAZ5lTG3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'SyncEpicGameDLC' test.out

#- 319 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 64}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'X9jx54tR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'PublicSyncPsnDlcInventory' test.out

#- 320 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [80, 99, 55]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'Gbe4anDY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 321 SyncSteamDLC
# body param: body
echo '{"appId": "XGhXl1T5", "steamId": "V8P6tFPi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'ZHYorvvb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'SyncSteamDLC' test.out

#- 322 SyncXboxDLC
# body param: body
echo '{"xstsToken": "PPHT2NDB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'LJ7kkdq8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'SyncXboxDLC' test.out

#- 323 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ZVEPJbtk' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'APP' \
    --entitlementName 'LpRWjpac' \
    --features '["m324Q9qs", "88zmS6ZO", "LI1Uz7ma"]' \
    --itemId '["Ueiicffw", "aoh2o1wP", "HjQEZ0km"]' \
    --limit '37' \
    --offset '78' \
    > test.out 2>&1
eval_tap $? 323 'PublicQueryUserEntitlements' test.out

#- 324 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'C7UJjglO' \
    --appId 'HpNtJnrp' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserAppEntitlementByAppId' test.out

#- 325 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'i1tWjyCX' \
    --limit '8' \
    --offset '16' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 325 'PublicQueryUserEntitlementsByAppType' test.out

#- 326 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'GXZfjrhD' \
    --entitlementClazz 'APP' \
    --itemId 'l531t2y8' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserEntitlementByItemId' test.out

#- 327 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ICAATUIp' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'rTBo5imt' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetUserEntitlementBySku' test.out

#- 328 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'KVnGRMb9' \
    --appIds '["CWHBieum", "nN4N5ize", "g0t4zRzz"]' \
    --itemIds '["Au96MxS1", "u9bpv90F", "2KvuEUPR"]' \
    --skus '["BEuIxtvf", "PR4HXJpY", "jkMAPGWe"]' \
    > test.out 2>&1
eval_tap $? 328 'PublicExistsAnyUserActiveEntitlement' test.out

#- 329 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '6VwDhAYX' \
    --appId 'gvSxQ85O' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 330 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'asMyH4sV' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'XXOcmwyr' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 331 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'eIWQpQCD' \
    --ids '["7B2jgkYh", "EJAdsHrb", "DQowBTWT"]' \
    > test.out 2>&1
eval_tap $? 331 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 332 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '2uVANfsB' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'IxwRticB' \
    > test.out 2>&1
eval_tap $? 332 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 333 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'ks3Y79OX' \
    --namespace $AB_NAMESPACE \
    --userId 'OrPXrEAs' \
    > test.out 2>&1
eval_tap $? 333 'PublicGetUserEntitlement' test.out

#- 334 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["uS4vdt8v", "VtBZMk6a", "6dJ97vif"], "requestId": "xy81NfH1", "useCount": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'wi4LfKfO' \
    --namespace $AB_NAMESPACE \
    --userId '1elGiJN5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'PublicConsumeUserEntitlement' test.out

#- 335 PublicRedeemCode
# body param: body
echo '{"code": "huOu2fHZ", "language": "WVUf", "region": "I1cP6RoR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'Lmtr79p7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PublicRedeemCode' test.out

#- 336 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "QKDU-VBAV", "productId": "FUJGqjz7", "receiptData": "5J5GcpIL", "region": "ckDUDgP9", "transactionId": "5oFYxpuF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '7Wt4gYSz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'PublicFulfillAppleIAPItem' test.out

#- 337 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "LpkKoP0z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId '1VlRqQTM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'SyncEpicGamesInventory' test.out

#- 338 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "oN_VD", "orderId": "mGJpZGEX", "packageName": "GczvHGay", "productId": "EPRnTi1o", "purchaseTime": 1, "purchaseToken": "BHpnurvs", "region": "vrDGR7Gc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'GDsJhaoA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'PublicFulfillGoogleIAPItem' test.out

#- 339 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "QegXkHsa", "price": 0.18018519492730345, "productId": "1olhCCz0", "serviceLabel": 80}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId '65TzMfec' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'PublicReconcilePlayStationStore' test.out

#- 340 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "czqP7VKz", "price": 0.9024156838271146, "productId": "3BNA3K37", "serviceLabels": [18, 2, 45]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'QxexO7UJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 341 SyncStadiaEntitlement
# body param: body
echo '{"appId": "CSdcGZim", "language": "qN-Qmir-583", "region": "KzC543Mw", "stadiaPlayerId": "YqpRARfg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'EjgBBq0I' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'SyncStadiaEntitlement' test.out

#- 342 SyncSteamInventory
# body param: body
echo '{"appId": "lCvsfgfC", "currencyCode": "k6s8W0mH", "language": "Ol-KCqC", "price": 0.5702317861184529, "productId": "CvRERVvg", "region": "2SJTee8b", "steamId": "pTZmbgGa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'sQ7UMt5f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'SyncSteamInventory' test.out

#- 343 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "oPUPrEgK", "language": "ez_hY", "region": "OgWKFEO1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'S7pxW69B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'SyncTwitchDropsEntitlement' test.out

#- 344 SyncXboxInventory
# body param: body
echo '{"currencyCode": "6M0lCY6b", "price": 0.45877886704177484, "productId": "BBxSFOgl", "xstsToken": "LtUd0gYS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId '0Rb2h8qC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'SyncXboxInventory' test.out

#- 345 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'XyVAAiDt' \
    --itemId 'Vge2JbOG' \
    --limit '3' \
    --offset '78' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 345 'PublicQueryUserOrders' test.out

#- 346 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "4iWBsxZD", "discountedPrice": 68, "ext": {"RBHVVdYi": {}, "0Ml8SUUV": {}, "m4Tpn8Tl": {}}, "itemId": "dMTWmdp1", "language": "TTt_eCwW", "price": 73, "quantity": 96, "region": "7NspYoCl", "returnUrl": "FRiqF0Nq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'gyGiYXvP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'PublicCreateUserOrder' test.out

#- 347 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'AQlLTxBZ' \
    --userId 'lVvRNMmm' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetUserOrder' test.out

#- 348 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'w63B2odD' \
    --userId 'jXXkQfzZ' \
    > test.out 2>&1
eval_tap $? 348 'PublicCancelUserOrder' test.out

#- 349 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'QeVgQSwi' \
    --userId 'rlceDLmD' \
    > test.out 2>&1
eval_tap $? 349 'PublicGetUserOrderHistories' test.out

#- 350 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'au7Ju1sE' \
    --userId 'w2BUdcON' \
    > test.out 2>&1
eval_tap $? 350 'PublicDownloadUserOrderReceipt' test.out

#- 351 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'NlOOUssK' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetPaymentAccounts' test.out

#- 352 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'mb0AQc0h' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'kRfWvfJx' \
    > test.out 2>&1
eval_tap $? 352 'PublicDeletePaymentAccount' test.out

#- 353 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'ykpPABlW' \
    --chargeStatus 'NEVER' \
    --itemId 'kdMeZ7EX' \
    --limit '63' \
    --offset '64' \
    --sku 'CPvwZ6EF' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 353 'PublicQueryUserSubscriptions' test.out

#- 354 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "ZTiuZZHK", "itemId": "wDTw8OKq", "language": "WK_940", "region": "Gzd2jB7X", "returnUrl": "7EcQ1xb5", "source": "EoUom3fT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'fNi7fB8q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicSubscribeSubscription' test.out

#- 355 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'YD7FFo5i' \
    --itemId 'n3bjV6tn' \
    > test.out 2>&1
eval_tap $? 355 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 356 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'IHVC2Sd7' \
    --userId 'Ak2FniHq' \
    > test.out 2>&1
eval_tap $? 356 'PublicGetUserSubscription' test.out

#- 357 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId '2q0eRwGF' \
    --userId 'rz1J3WV3' \
    > test.out 2>&1
eval_tap $? 357 'PublicChangeSubscriptionBillingAccount' test.out

#- 358 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "4gbfgYjK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'yxYPcnko' \
    --userId 'bQYMFGYA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'PublicCancelSubscription' test.out

#- 359 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'xdoZulGZ' \
    --userId 'PvhM279d' \
    --excludeFree 'true' \
    --limit '6' \
    --offset '5' \
    > test.out 2>&1
eval_tap $? 359 'PublicGetUserSubscriptionBillingHistories' test.out

#- 360 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'D1CKbG4N' \
    --namespace $AB_NAMESPACE \
    --userId 'CWKQGjfb' \
    > test.out 2>&1
eval_tap $? 360 'PublicGetWallet' test.out

#- 361 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'zQ2706Bo' \
    --namespace $AB_NAMESPACE \
    --userId '1JHtBB68' \
    --limit '84' \
    --offset '83' \
    > test.out 2>&1
eval_tap $? 361 'PublicListUserWalletTransactions' test.out

#- 362 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --availableDate 'F6g06mQG' \
    --baseAppId 'LsFXAZuC' \
    --categoryPath '9aolWnqq' \
    --features 'owrc7wII' \
    --includeSubCategoryItem 'false' \
    --itemName 'LGvzybyL' \
    --itemStatus 'ACTIVE' \
    --itemType 'EXTENSION' \
    --limit '94' \
    --offset '54' \
    --region 'urOYtNph' \
    --sortBy '["displayOrder:asc", "name:asc", "createdAt:asc"]' \
    --storeId 'DWJjHTvk' \
    --tags 'c1YewSzT' \
    --targetNamespace '6kz3igNz' \
    > test.out 2>&1
eval_tap $? 362 'QueryItems1' test.out

#- 363 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'akPFE0yH' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 363 'ImportStore1' test.out

#- 364 ExportStore1
# body param: body
echo '{"itemIds": ["uAwC6PfG", "9r6h5Gsl", "la4y8dCm"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'aZFIwXIe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 364 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE