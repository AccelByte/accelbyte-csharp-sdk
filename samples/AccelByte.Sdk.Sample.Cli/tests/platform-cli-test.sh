#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..346"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "AKK8mLNR", "appType": "GAME", "baseAppId": "E5VRWR6W", "boothName": "NTQPlcHf", "boundItemIds": ["e5SZLGiD", "17kiUPQg", "YyEB6gLx"], "categoryPath": "GmWHnxiZ", "clazz": "6p5dKbus", "createdAt": "1992-12-29T00:00:00Z", "description": "sszNYYIB", "displayOrder": 12, "entitlementType": "DURABLE", "ext": {"tyBLoMCs": {}, "sflL6YpY": {}, "ci3R89s5": {}}, "features": ["WnjvsTUG", "evdoumcl", "EKwZdRio"], "images": [{"as": "SQ5WldIj", "caption": "hIFDpPiJ", "height": 64, "imageUrl": "OCS6nnes", "smallImageUrl": "U6DgXAhX", "width": 100}, {"as": "qfgqhZM7", "caption": "VaPgxIiE", "height": 87, "imageUrl": "XQR3Iw0q", "smallImageUrl": "3eDTJUdP", "width": 75}, {"as": "eQE9WBt1", "caption": "XO8YXfmu", "height": 42, "imageUrl": "NpdhikXD", "smallImageUrl": "zj6IOAcD", "width": 44}], "itemId": "C7OofItd", "itemIds": ["SwIsdals", "UjC4jPqE", "1DiFFNjl"], "itemQty": {"Tqtyrfly": 54, "fuP1hiJP": 92, "3CEZKwvf": 24}, "itemType": "OPTIONBOX", "language": "JeIXqBwN", "listable": false, "localExt": {"bobneABg": {}, "BkAIDo1K": {}, "tmQaOBY5": {}}, "longDescription": "YhNieA1L", "maxCount": 14, "maxCountPerUser": 38, "name": "iuzwPgW9", "namespace": "N49iA47h", "optionBoxConfig": {"boxItems": [{"count": 94, "itemId": "gs8xie25", "itemSku": "yDfxPyaH"}, {"count": 78, "itemId": "vM3Kc3LG", "itemSku": "qtif8plf"}, {"count": 100, "itemId": "N5jTboIz", "itemSku": "3XNyxzT6"}]}, "purchasable": false, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 45, "comparison": "isLessThanOrEqual", "name": "apCKT9S2", "predicateType": "EntitlementPredicate", "value": "lR5qP76l", "values": ["Eu9dXv1f", "7VjrR2f7", "YRRSvJKd"]}, {"anyOf": 82, "comparison": "excludes", "name": "4RdHZcl8", "predicateType": "EntitlementPredicate", "value": "xt3CSFFh", "values": ["qXckzSNv", "wVRDEZzN", "Qu6rWa7z"]}, {"anyOf": 98, "comparison": "excludes", "name": "mm3vuDAV", "predicateType": "SeasonTierPredicate", "value": "CgXky3eF", "values": ["ezXuS7yn", "ag1dosYl", "71JRgvNK"]}]}, {"operator": "and", "predicates": [{"anyOf": 3, "comparison": "is", "name": "hTHQCoZs", "predicateType": "EntitlementPredicate", "value": "X7TpJneM", "values": ["IgEYsPNK", "3lWlfjLF", "1M4ZGTyM"]}, {"anyOf": 10, "comparison": "is", "name": "a4AHwuuf", "predicateType": "SeasonPassPredicate", "value": "6t0jITvG", "values": ["XxDjHeyG", "tjroLbIx", "7ZtbvBlZ"]}, {"anyOf": 40, "comparison": "isLessThan", "name": "TaBtilzR", "predicateType": "SeasonTierPredicate", "value": "NJ7YKL7P", "values": ["n2M4QS29", "AmbV05bF", "UJxPgQk6"]}]}, {"operator": "and", "predicates": [{"anyOf": 17, "comparison": "isNot", "name": "gXXGvGpC", "predicateType": "SeasonPassPredicate", "value": "uUIaQy4h", "values": ["bCFxytzH", "OJ0UUHwG", "PaKshuL0"]}, {"anyOf": 27, "comparison": "isNot", "name": "BOaVleLO", "predicateType": "SeasonTierPredicate", "value": "gYhYn16n", "values": ["lJVRIwmH", "Irms6VtE", "9l0TcOQU"]}, {"anyOf": 60, "comparison": "includes", "name": "NHv03uB3", "predicateType": "SeasonPassPredicate", "value": "QVbzNFKw", "values": ["PZfMqU6N", "dYA9sAW0", "HLbJxzeN"]}]}]}, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 47, "fixedTrialCycles": 47, "graceDays": 2}, "region": "0bjquCfZ", "regionData": [{"currencyCode": "ff6ymXIL", "currencyNamespace": "vg9ICZUO", "currencyType": "REAL", "discountAmount": 2, "discountExpireAt": "1976-09-03T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1990-07-22T00:00:00Z", "discountedPrice": 37, "expireAt": "1980-09-19T00:00:00Z", "price": 86, "purchaseAt": "1975-02-21T00:00:00Z", "trialPrice": 61}, {"currencyCode": "o2u6noj6", "currencyNamespace": "25Bghtnh", "currencyType": "REAL", "discountAmount": 23, "discountExpireAt": "1992-02-11T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1974-02-15T00:00:00Z", "discountedPrice": 90, "expireAt": "1992-01-12T00:00:00Z", "price": 42, "purchaseAt": "1981-05-30T00:00:00Z", "trialPrice": 47}, {"currencyCode": "jF5vHqDG", "currencyNamespace": "k0u4zUx9", "currencyType": "VIRTUAL", "discountAmount": 76, "discountExpireAt": "1974-08-20T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1973-04-07T00:00:00Z", "discountedPrice": 26, "expireAt": "1986-10-01T00:00:00Z", "price": 98, "purchaseAt": "1984-02-16T00:00:00Z", "trialPrice": 47}], "seasonType": "PASS", "sku": "bgBISSd1", "stackable": true, "status": "ACTIVE", "tags": ["e9nEgnOk", "xPVcbH2o", "LZAO6nee"], "targetCurrencyCode": "ygJYKedr", "targetItemId": "3CJNXPM3", "targetNamespace": "Tf2QB3cR", "thumbnailUrl": "wngxEPxq", "title": "yXA3EHLR", "updatedAt": "1976-01-07T00:00:00Z", "useCount": 92}, "namespace": "lXRfJbM1", "order": {"currency": {"currencyCode": "bNilCHQ7", "currencySymbol": "4zERlVyP", "currencyType": "REAL", "decimals": 54, "namespace": "19KPdLWs"}, "ext": {"cUhcM3Ph": {}, "YaN80ztc": {}, "hZzUFMdn": {}}, "free": true}, "source": "PROMOTION"}, "script": "XJEKCntw", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'iZty3ika' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "oH8ecGvV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'w66sbnJh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'maNWbNzp' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "RACa4n83"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id '7V2vFBkK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '64' \
    --name '797LXCh6' \
    --offset '85' \
    --tag '8YEtGR2k' \
    > test.out 2>&1
eval_tap $? 8 'QueryCampaigns' test.out

#- 9 CreateCampaign
# body param: body
echo '{"description": "GazxZQDf", "items": [{"extraSubscriptionDays": 11, "itemId": "s3NJRpnV", "itemName": "Z2ljPZ6a", "quantity": 77}, {"extraSubscriptionDays": 32, "itemId": "fz3G2RxK", "itemName": "rZPkDKe2", "quantity": 95}, {"extraSubscriptionDays": 50, "itemId": "b5HdQzSW", "itemName": "mz68LcrA", "quantity": 72}], "maxRedeemCountPerCampaignPerUser": 16, "maxRedeemCountPerCode": 63, "maxRedeemCountPerCodePerUser": 5, "maxSaleCount": 77, "name": "CoUCUOnk", "redeemEnd": "1998-06-11T00:00:00Z", "redeemStart": "1972-03-20T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["dedSpuSV", "rr8Jfbjz", "tWuKRbKb"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateCampaign' test.out

#- 10 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'MMrGYnsL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'GetCampaign' test.out

#- 11 UpdateCampaign
# body param: body
echo '{"description": "hwKMT4Zw", "items": [{"extraSubscriptionDays": 89, "itemId": "fAxcIHvd", "itemName": "JjJYdpu0", "quantity": 79}, {"extraSubscriptionDays": 95, "itemId": "GNMJpTZk", "itemName": "Tsys23Pe", "quantity": 78}, {"extraSubscriptionDays": 63, "itemId": "PU8zaYIK", "itemName": "txNGNd9h", "quantity": 20}], "maxRedeemCountPerCampaignPerUser": 84, "maxRedeemCountPerCode": 45, "maxRedeemCountPerCodePerUser": 14, "maxSaleCount": 66, "name": "GYlvrKcX", "redeemEnd": "1979-02-01T00:00:00Z", "redeemStart": "1976-06-09T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["a29IxVaB", "2o3uGfvC", "S0c3wlDp"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'l7m0CQjK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateCampaign' test.out

#- 12 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'JcbaDrQK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'GetCampaignDynamic' test.out

#- 13 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId '7FEdyEVJ' \
    > test.out 2>&1
eval_tap $? 13 'GetRootCategories' test.out

#- 14 CreateCategory
# body param: body
echo '{"categoryPath": "4tk8MZwZ", "localizationDisplayNames": {"J265XQt6": "xZcRQ0mx", "uoQBmDpW": "OKySVC9x", "exGR0SS6": "jsgQCmaJ"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '2IS3xlVW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCategory' test.out

#- 15 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'jvqtDA5H' \
    > test.out 2>&1
eval_tap $? 15 'ListCategoriesBasic' test.out

#- 16 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '0Wsd5c9V' \
    --namespace $AB_NAMESPACE \
    --storeId 'xsgmfFXs' \
    > test.out 2>&1
eval_tap $? 16 'GetCategory' test.out

#- 17 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"tP97IT4y": "7NjMUQjg", "pojm8coZ": "oCAXmneK", "CjoiYLbY": "awx3ksNc"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'lqUIzD1b' \
    --namespace $AB_NAMESPACE \
    --storeId 'MxsUNiIi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCategory' test.out

#- 18 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'hDfdYnsb' \
    --namespace $AB_NAMESPACE \
    --storeId 'Afxyuyzm' \
    > test.out 2>&1
eval_tap $? 18 'DeleteCategory' test.out

#- 19 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'Xw0R1iYD' \
    --namespace $AB_NAMESPACE \
    --storeId 'iamo1DDB' \
    > test.out 2>&1
eval_tap $? 19 'GetChildCategories' test.out

#- 20 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'emj4MP8w' \
    --namespace $AB_NAMESPACE \
    --storeId 'JLhEUfKQ' \
    > test.out 2>&1
eval_tap $? 20 'GetDescendantCategories' test.out

#- 21 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '3z1JEbrc' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '45' \
    --code 'STDpeHmu' \
    --limit '69' \
    --offset '9' \
    > test.out 2>&1
eval_tap $? 21 'QueryCodes' test.out

#- 22 CreateCodes
# body param: body
echo '{"quantity": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'dRptc5o6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'CreateCodes' test.out

#- 23 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'XEPawk8E' \
    --namespace $AB_NAMESPACE \
    --batchNo '53' \
    > test.out 2>&1
eval_tap $? 23 'Download' test.out

#- 24 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'fuU94bO8' \
    --namespace $AB_NAMESPACE \
    --batchNo '61' \
    > test.out 2>&1
eval_tap $? 24 'BulkDisableCodes' test.out

#- 25 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'M72t9RdR' \
    --namespace $AB_NAMESPACE \
    --batchNo '39' \
    > test.out 2>&1
eval_tap $? 25 'BulkEnableCodes' test.out

#- 26 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'KLBclMF8' \
    --namespace $AB_NAMESPACE \
    --code '35AjjCwq' \
    --limit '70' \
    --offset '37' \
    --userId 'yQl6HDYV' \
    > test.out 2>&1
eval_tap $? 26 'QueryRedeemHistory' test.out

#- 27 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'R21txK1r' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 27 'GetCode' test.out

#- 28 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'kWpB7c4l' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 28 'DisableCode' test.out

#- 29 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'vBNRvPjX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'EnableCode' test.out

#- 30 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 30 'ListCurrencies' test.out

#- 31 CreateCurrency
# body param: body
echo '{"currencyCode": "EBqsWW59", "currencySymbol": "VKs4Ks7m", "currencyType": "VIRTUAL", "decimals": 29, "localizationDescriptions": {"UKVFGH64": "eSYCeL41", "nohLazgZ": "Nf7UEuZN", "JCTifwsI": "DSRBLRZL"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'CreateCurrency' test.out

#- 32 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"nxL3PhFj": "quhoFFiU", "c9HCBUU0": "GQKZnaxz", "Kxz4aZXa": "9hnPjBDf"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'GNSg4w9E' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'UpdateCurrency' test.out

#- 33 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'azdspX0T' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 33 'DeleteCurrency' test.out

#- 34 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'PXAbEOws' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'GetCurrencyConfig' test.out

#- 35 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'UvMU9Eir' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'GetCurrencySummary' test.out

#- 36 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetDLCItemConfig' test.out

#- 37 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "AsDSWTRl", "rewards": [{"currency": {"currencyCode": "dkdvtCJ0", "namespace": "WHcfEvwx"}, "item": {"itemId": "NDyzN03Q", "itemSku": "6z1RfCH2", "itemType": "pv94KJ34"}, "quantity": 17, "type": "CURRENCY"}, {"currency": {"currencyCode": "pAy4Ljsh", "namespace": "DR3pESOn"}, "item": {"itemId": "37YkaOZ6", "itemSku": "A92cHeTq", "itemType": "j9wmEho8"}, "quantity": 36, "type": "CURRENCY"}, {"currency": {"currencyCode": "zs3wgAl7", "namespace": "J2M6VF88"}, "item": {"itemId": "HRTa9GyE", "itemSku": "3XH5nwZH", "itemType": "qbeG5CeW"}, "quantity": 93, "type": "CURRENCY"}]}, {"id": "Oie8OcLI", "rewards": [{"currency": {"currencyCode": "gMrsednW", "namespace": "0VUneMxe"}, "item": {"itemId": "sp6zgGdy", "itemSku": "wotWN74k", "itemType": "KkKSM6gy"}, "quantity": 24, "type": "CURRENCY"}, {"currency": {"currencyCode": "zTukcqoK", "namespace": "BuIX0Tqk"}, "item": {"itemId": "OJ4pu8HM", "itemSku": "nz0fMfMq", "itemType": "6t2S0Zo4"}, "quantity": 29, "type": "ITEM"}, {"currency": {"currencyCode": "hAkB3p9Y", "namespace": "x8Ev9IWF"}, "item": {"itemId": "tHJYafkT", "itemSku": "HOYrIL9u", "itemType": "wJ3ozx26"}, "quantity": 88, "type": "ITEM"}]}, {"id": "7E6IcPct", "rewards": [{"currency": {"currencyCode": "K6GMzOI1", "namespace": "aNDNw9pO"}, "item": {"itemId": "iLhuarme", "itemSku": "QxeSOfj2", "itemType": "QE17lnsk"}, "quantity": 13, "type": "ITEM"}, {"currency": {"currencyCode": "RumjFNkD", "namespace": "cJfRR94u"}, "item": {"itemId": "mNY3rXAF", "itemSku": "K950E60B", "itemType": "cFmpmKGE"}, "quantity": 42, "type": "ITEM"}, {"currency": {"currencyCode": "vgFgcU30", "namespace": "wvlPkEfw"}, "item": {"itemId": "NeS6thUD", "itemSku": "elJ6Y6k4", "itemType": "i1nnsk18"}, "quantity": 37, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateDLCItemConfig' test.out

#- 38 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteDLCItemConfig' test.out

#- 39 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'GetPlatformDLCConfig' test.out

#- 40 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"e8YPZdkH": "IdhXlFQI", "qoBqevkX": "EpkD3Nxy", "h7fdZ5jJ": "wQ2yDDJ9"}}, {"platform": "STEAM", "platformDlcIdMap": {"4jUffxYw": "ynvjDokr", "jGQZhhMF": "Wq25QLKy", "tm3J3gYT": "xPGidSVH"}}, {"platform": "XBOX", "platformDlcIdMap": {"BE6G5K1Z": "RrfvE33I", "77CljBlw": "4Sgh2GKH", "bcbDCkpO": "uPFgsDmr"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'UpdatePlatformDLCConfig' test.out

#- 41 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'DeletePlatformDLCConfig' test.out

#- 42 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'GAME' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName '8gI2i8LK' \
    --itemId '["GXUa3NQE", "UHq1i5U5", "oSrAUQb6"]' \
    --limit '73' \
    --offset '55' \
    --userId 'Cm51LgaS' \
    > test.out 2>&1
eval_tap $? 42 'QueryEntitlements' test.out

#- 43 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'QG6QkPLZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetEntitlement' test.out

#- 44 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '12' \
    --offset '89' \
    --status 'FAIL' \
    --userId 'yrGf5YlF' \
    > test.out 2>&1
eval_tap $? 44 'QueryFulfillmentHistories' test.out

#- 45 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetAppleIAPConfig' test.out

#- 46 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "gV4lOJJg", "password": "SjxULFjR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateAppleIAPConfig' test.out

#- 47 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteAppleIAPConfig' test.out

#- 48 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetEpicGamesIAPConfig' test.out

#- 49 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "AVVwiDri"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateEpicGamesIAPConfig' test.out

#- 50 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteEpicGamesIAPConfig' test.out

#- 51 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetGoogleIAPConfig' test.out

#- 52 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "RC5H54vy", "serviceAccountId": "VXquFVjn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateGoogleIAPConfig' test.out

#- 53 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteGoogleIAPConfig' test.out

#- 54 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 54 'UpdateGoogleP12File' test.out

#- 55 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetIAPItemConfig' test.out

#- 56 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "NpxgKPt6", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"vEQRE00B": "G3fLJ233", "FbBrTxV9": "CIHL5ztC", "OreSyuIr": "4aNfnWJt"}}, {"itemIdentity": "ibOxVBXn", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"f9H0B8wh": "S518g51w", "K0Vhva4A": "AHOiWsGg", "N6AolaCz": "DQ8dbF9v"}}, {"itemIdentity": "AdmF30l4", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"WuHvTDAt": "qj6LtPNo", "4RLzJpXh": "cEc5irXy", "tMM4xRER": "Ezih3Dfz"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 56 'UpdateIAPItemConfig' test.out

#- 57 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'DeleteIAPItemConfig' test.out

#- 58 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'GetPlayStationIAPConfig' test.out

#- 59 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "xNGwfr5D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 59 'UpdatePlaystationIAPConfig' test.out

#- 60 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'DeletePlaystationIAPConfig' test.out

#- 61 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetStadiaIAPConfig' test.out

#- 62 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteStadiaIAPConfig' test.out

#- 63 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 63 'UpdateStadiaJsonConfigFile' test.out

#- 64 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetSteamIAPConfig' test.out

#- 65 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "5AJyXw23", "publisherAuthenticationKey": "qthqwalw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdateSteamIAPConfig' test.out

#- 66 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeleteSteamIAPConfig' test.out

#- 67 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetTwitchIAPConfig' test.out

#- 68 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "FIhdoCaz", "clientSecret": "BED3frSt", "organizationId": "59888uVf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdateTwitchIAPConfig' test.out

#- 69 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeleteTwitchIAPConfig' test.out

#- 70 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetXblIAPConfig' test.out

#- 71 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "Ly0y9aDQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateXblIAPConfig' test.out

#- 72 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteXblAPConfig' test.out

#- 73 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'dzDs0txp' \
    > test.out 2>&1
eval_tap $? 73 'UpdateXblBPCertFile' test.out

#- 74 SyncInGameItem
# body param: body
echo '{"categoryPath": "qbDcT3Qd", "targetItemId": "jkTDCOAN", "targetNamespace": "AXvCWQoK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'I8hyUGiC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'SyncInGameItem' test.out

#- 75 CreateItem
# body param: body
echo '{"appId": "aNGDN052", "appType": "SOFTWARE", "baseAppId": "SGVCJ32R", "boothName": "RNQJrZOY", "categoryPath": "yAEOWPV0", "clazz": "oEl2rPB0", "displayOrder": 70, "entitlementType": "CONSUMABLE", "ext": {"QrGovSPR": {}, "xezQ5oE8": {}, "XxMo03JZ": {}}, "features": ["41DsQpac", "5dzsAyNq", "NG7HRymn"], "images": [{"as": "yCdriWL4", "caption": "LH6Abr8a", "height": 64, "imageUrl": "X3TPyl1k", "smallImageUrl": "CX5dqIm9", "width": 50}, {"as": "uuaakxPf", "caption": "m3NEtRbl", "height": 9, "imageUrl": "8MPfX5be", "smallImageUrl": "pwOmpE24", "width": 94}, {"as": "LxdGYjny", "caption": "ZeINFtGR", "height": 35, "imageUrl": "n90jZrSK", "smallImageUrl": "867XxtkD", "width": 14}], "itemIds": ["o851fSFu", "cbZ3iAIe", "mVTBEu5W"], "itemQty": {"c5j9gCNS": 54, "YTFxc120": 21, "8y3tV6t8": 4}, "itemType": "APP", "listable": true, "localizations": {"iVX235FH": {"description": "DksaeqhO", "localExt": {"Y9qKp8KQ": {}, "k7HUNFds": {}, "yupHRYLV": {}}, "longDescription": "6a5ITxF8", "title": "b2eVmvIL"}, "qIbQvMsk": {"description": "is1CCTf4", "localExt": {"5pHKYwKK": {}, "bGdfPWkO": {}, "m0H5hNTE": {}}, "longDescription": "HJJl9DLG", "title": "wixtCGUd"}, "BZfxSW8J": {"description": "LxY2Ir4u", "localExt": {"88Sc4SBZ": {}, "5Hu79LrH": {}, "hJh1AKwX": {}}, "longDescription": "aS7grmpk", "title": "SxncD2wv"}}, "maxCount": 89, "maxCountPerUser": 48, "name": "M7gd2nmC", "optionBoxConfig": {"boxItems": [{"count": 73, "itemId": "uiiNUvLW", "itemSku": "fV9lVf5w"}, {"count": 29, "itemId": "gxkdpJUn", "itemSku": "LVLXp2hE"}, {"count": 10, "itemId": "K94KroMQ", "itemSku": "KJ10hMOV"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 4, "fixedTrialCycles": 93, "graceDays": 85}, "regionData": {"S6VuxHRV": [{"currencyCode": "V7wUGFtC", "currencyNamespace": "BwWHP8Sj", "currencyType": "VIRTUAL", "discountAmount": 47, "discountExpireAt": "1983-05-28T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1999-08-15T00:00:00Z", "discountedPrice": 12, "expireAt": "1980-06-30T00:00:00Z", "price": 83, "purchaseAt": "1984-11-01T00:00:00Z", "trialPrice": 31}, {"currencyCode": "FvQwpj6g", "currencyNamespace": "7SciYZya", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1983-06-03T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1979-02-07T00:00:00Z", "discountedPrice": 78, "expireAt": "1974-08-17T00:00:00Z", "price": 53, "purchaseAt": "1979-10-18T00:00:00Z", "trialPrice": 33}, {"currencyCode": "Ck9D0M1D", "currencyNamespace": "S8hdZbZn", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1973-08-22T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1991-03-18T00:00:00Z", "discountedPrice": 97, "expireAt": "1986-08-14T00:00:00Z", "price": 96, "purchaseAt": "1984-03-31T00:00:00Z", "trialPrice": 3}], "ANn05BF5": [{"currencyCode": "mAzTYR8A", "currencyNamespace": "RRRx5gkn", "currencyType": "VIRTUAL", "discountAmount": 42, "discountExpireAt": "1996-07-03T00:00:00Z", "discountPercentage": 20, "discountPurchaseAt": "1997-07-02T00:00:00Z", "discountedPrice": 4, "expireAt": "1988-03-26T00:00:00Z", "price": 49, "purchaseAt": "1991-04-21T00:00:00Z", "trialPrice": 0}, {"currencyCode": "3hbIz9q0", "currencyNamespace": "WocbY0F2", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1987-05-17T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1973-03-02T00:00:00Z", "discountedPrice": 59, "expireAt": "1980-01-27T00:00:00Z", "price": 35, "purchaseAt": "1974-09-26T00:00:00Z", "trialPrice": 44}, {"currencyCode": "xbHhEy5E", "currencyNamespace": "BUkmJAYp", "currencyType": "REAL", "discountAmount": 30, "discountExpireAt": "1972-04-05T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1991-09-23T00:00:00Z", "discountedPrice": 40, "expireAt": "1975-09-15T00:00:00Z", "price": 3, "purchaseAt": "1993-07-29T00:00:00Z", "trialPrice": 52}], "lcUnaCgk": [{"currencyCode": "ffbt0BeH", "currencyNamespace": "TVscrvqI", "currencyType": "VIRTUAL", "discountAmount": 19, "discountExpireAt": "1979-11-08T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1982-11-17T00:00:00Z", "discountedPrice": 5, "expireAt": "1977-04-03T00:00:00Z", "price": 52, "purchaseAt": "1971-12-13T00:00:00Z", "trialPrice": 82}, {"currencyCode": "sNSDFk5u", "currencyNamespace": "Ji8Z65w3", "currencyType": "REAL", "discountAmount": 98, "discountExpireAt": "1988-05-15T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1971-08-20T00:00:00Z", "discountedPrice": 52, "expireAt": "1972-10-06T00:00:00Z", "price": 40, "purchaseAt": "1987-10-16T00:00:00Z", "trialPrice": 21}, {"currencyCode": "QbVC6thK", "currencyNamespace": "Zcds9FRa", "currencyType": "REAL", "discountAmount": 22, "discountExpireAt": "1983-06-23T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1992-11-07T00:00:00Z", "discountedPrice": 80, "expireAt": "1978-10-26T00:00:00Z", "price": 83, "purchaseAt": "1972-03-09T00:00:00Z", "trialPrice": 43}]}, "seasonType": "PASS", "sku": "Z7QUywog", "stackable": true, "status": "ACTIVE", "tags": ["XIvZ6yta", "j5sq7D7V", "qnP3HLRR"], "targetCurrencyCode": "neqRfUiB", "targetNamespace": "l7UDuYCg", "thumbnailUrl": "PGbhIw05", "useCount": 90}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId '5Nlb4cwz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'CreateItem' test.out

#- 76 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'yLG8F7pi' \
    --appId '7vwQUQQ9' \
    > test.out 2>&1
eval_tap $? 76 'GetItemByAppId' test.out

#- 77 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DLC' \
    --availableDate 'ALUkfNgE' \
    --baseAppId 'e6z3jJdH' \
    --categoryPath '9IuF2YiD' \
    --features 'byYT7vnt' \
    --itemType 'APP' \
    --limit '38' \
    --offset '0' \
    --region 'kFegYtEf' \
    --sortBy '["displayOrder:asc", "createdAt", "name"]' \
    --storeId 'c9hrUcV6' \
    --tags 'Mcbly3RU' \
    --targetNamespace 'vidkS0dn' \
    > test.out 2>&1
eval_tap $? 77 'QueryItems' test.out

#- 78 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["QOziO3Xh", "i4CN9aux", "FfvOCJg3"]' \
    > test.out 2>&1
eval_tap $? 78 'ListBasicItemsByFeatures' test.out

#- 79 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'q0F8dk9i' \
    --sku 'zIrdguAe' \
    > test.out 2>&1
eval_tap $? 79 'GetItemBySku' test.out

#- 80 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'W7nnGKTR' \
    --populateBundle 'true' \
    --region 'E7UwV6je' \
    --storeId 's6PSIWan' \
    --sku 'pcy8PiI9' \
    > test.out 2>&1
eval_tap $? 80 'GetLocaleItemBySku' test.out

#- 81 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'QMbaGY2X' \
    --sku '3cowaPBc' \
    > test.out 2>&1
eval_tap $? 81 'GetItemIdBySku' test.out

#- 82 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["sN0Jk6oL", "Odo3iWFl", "6kGQfIat"]' \
    --storeId 'We96oWJm' \
    > test.out 2>&1
eval_tap $? 82 'GetBulkItemIdBySkus' test.out

#- 83 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'gAN4JPea' \
    --region 'tNmet77H' \
    --storeId 'lSZKuPQt' \
    --itemIds 'HfIOCjHl' \
    > test.out 2>&1
eval_tap $? 83 'BulkGetLocaleItems' test.out

#- 84 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'GetAvailablePredicateTypes' test.out

#- 85 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["bo6JUyls", "QB8IWFmP", "pcuqhjPq"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'di018liF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'ValidateItemPurchaseCondition' test.out

#- 86 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'BUNDLE' \
    --limit '48' \
    --offset '44' \
    --storeId 'pRrFFRpo' \
    --keyword 'ZRkl0SAJ' \
    --language 'VBcUWJJS' \
    > test.out 2>&1
eval_tap $? 86 'SearchItems' test.out

#- 87 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '47' \
    --offset '95' \
    --sortBy '["displayOrder", "updatedAt:asc", "createdAt:desc"]' \
    --storeId 'jfjoQl0M' \
    > test.out 2>&1
eval_tap $? 87 'QueryUncategorizedItems' test.out

#- 88 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId '0DEYsKd0' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'ZFN9M0VE' \
    > test.out 2>&1
eval_tap $? 88 'GetItem' test.out

#- 89 UpdateItem
# body param: body
echo '{"appId": "lUf33OEr", "appType": "SOFTWARE", "baseAppId": "VTk2dC5P", "boothName": "7DfPlvxA", "categoryPath": "8bNJePpr", "clazz": "SZEqggJE", "displayOrder": 17, "entitlementType": "DURABLE", "ext": {"ZyVPwWkP": {}, "p468JBjF": {}, "zItIVEVa": {}}, "features": ["QW7oYg4i", "NNNGRxPU", "lsRr7pTV"], "images": [{"as": "dhGuwYMo", "caption": "0hKnxEzZ", "height": 89, "imageUrl": "imptYs4s", "smallImageUrl": "thGgUmY8", "width": 85}, {"as": "4tzBa187", "caption": "RVNywA4s", "height": 41, "imageUrl": "XaLhfE8F", "smallImageUrl": "f9gQWbVf", "width": 91}, {"as": "VJIZWHcz", "caption": "DvXlHP5Q", "height": 75, "imageUrl": "sdzsRWLH", "smallImageUrl": "k0VZK7tf", "width": 61}], "itemIds": ["dbP9O2wV", "l5Ll5AAQ", "QikCqQRH"], "itemQty": {"HiMQeBoP": 53, "DAoqJHKL": 8, "97JCn6bm": 52}, "itemType": "CODE", "listable": false, "localizations": {"FPjJ5XFZ": {"description": "FedsYoAe", "localExt": {"hkjwYMbq": {}, "hN8ZuDbC": {}, "TYKujZWe": {}}, "longDescription": "nGXrHSVV", "title": "VYGetwGu"}, "TOeKmmx0": {"description": "6Dqm3VPr", "localExt": {"jgruwva1": {}, "UqCMIwte": {}, "piJNGMCF": {}}, "longDescription": "gAKsEtss", "title": "fYOYdTok"}, "7dBjHUOq": {"description": "IsobEeJP", "localExt": {"JPZnszEw": {}, "yvCkXlnk": {}, "EYaCqUyZ": {}}, "longDescription": "mpYs7KRS", "title": "QphVMQho"}}, "maxCount": 65, "maxCountPerUser": 87, "name": "KjsoJKcp", "optionBoxConfig": {"boxItems": [{"count": 54, "itemId": "U3GBYiex", "itemSku": "2KuB2JBm"}, {"count": 42, "itemId": "1q07wTLr", "itemSku": "zxqLZrUa"}, {"count": 51, "itemId": "CSzaqd7S", "itemSku": "T1Hc6D1z"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 53, "fixedTrialCycles": 42, "graceDays": 80}, "regionData": {"jI7Kr6xV": [{"currencyCode": "TCIVlfKM", "currencyNamespace": "IRsF5wE7", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1998-07-12T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1999-09-26T00:00:00Z", "discountedPrice": 74, "expireAt": "1991-11-14T00:00:00Z", "price": 54, "purchaseAt": "1993-05-29T00:00:00Z", "trialPrice": 43}, {"currencyCode": "ed82W8dQ", "currencyNamespace": "ZYIcNn0f", "currencyType": "REAL", "discountAmount": 73, "discountExpireAt": "1978-03-28T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1997-04-10T00:00:00Z", "discountedPrice": 92, "expireAt": "1982-12-31T00:00:00Z", "price": 33, "purchaseAt": "1973-02-13T00:00:00Z", "trialPrice": 77}, {"currencyCode": "0NiUrwHc", "currencyNamespace": "fHoxWULY", "currencyType": "REAL", "discountAmount": 61, "discountExpireAt": "1994-07-09T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1987-11-16T00:00:00Z", "discountedPrice": 88, "expireAt": "1980-07-31T00:00:00Z", "price": 96, "purchaseAt": "1981-02-15T00:00:00Z", "trialPrice": 39}], "AitGwxNA": [{"currencyCode": "HKPPfxbh", "currencyNamespace": "cE2ijEmR", "currencyType": "VIRTUAL", "discountAmount": 55, "discountExpireAt": "1976-05-01T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1995-10-28T00:00:00Z", "discountedPrice": 26, "expireAt": "1978-05-25T00:00:00Z", "price": 74, "purchaseAt": "1979-06-23T00:00:00Z", "trialPrice": 47}, {"currencyCode": "cmGtWX1p", "currencyNamespace": "NJJfVuEp", "currencyType": "REAL", "discountAmount": 49, "discountExpireAt": "1996-10-30T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1975-05-10T00:00:00Z", "discountedPrice": 93, "expireAt": "1982-07-01T00:00:00Z", "price": 5, "purchaseAt": "1983-04-15T00:00:00Z", "trialPrice": 81}, {"currencyCode": "098qqwIW", "currencyNamespace": "nVKh1Ljz", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1977-12-07T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1996-09-05T00:00:00Z", "discountedPrice": 12, "expireAt": "1985-12-26T00:00:00Z", "price": 100, "purchaseAt": "1989-05-17T00:00:00Z", "trialPrice": 37}], "j9jFtkXM": [{"currencyCode": "CGn4cbdw", "currencyNamespace": "zafcM0Hs", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1974-03-02T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1989-07-12T00:00:00Z", "discountedPrice": 14, "expireAt": "1981-02-13T00:00:00Z", "price": 80, "purchaseAt": "1971-07-18T00:00:00Z", "trialPrice": 15}, {"currencyCode": "AAiF7dag", "currencyNamespace": "n2CtciHG", "currencyType": "REAL", "discountAmount": 12, "discountExpireAt": "1989-11-29T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1996-06-19T00:00:00Z", "discountedPrice": 91, "expireAt": "1982-09-07T00:00:00Z", "price": 91, "purchaseAt": "1973-11-21T00:00:00Z", "trialPrice": 96}, {"currencyCode": "hog83NSi", "currencyNamespace": "s2xpBm4g", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1972-12-19T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1989-07-29T00:00:00Z", "discountedPrice": 93, "expireAt": "1982-06-10T00:00:00Z", "price": 6, "purchaseAt": "1986-09-08T00:00:00Z", "trialPrice": 79}]}, "seasonType": "TIER", "sku": "g90TpIE9", "stackable": false, "status": "INACTIVE", "tags": ["WgzTmMeq", "fgCoXtuh", "bbFveo4t"], "targetCurrencyCode": "EUg7E8Zw", "targetNamespace": "nb7c8Sqk", "thumbnailUrl": "i6nEUgsw", "useCount": 51}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId '7w4sMiwI' \
    --namespace $AB_NAMESPACE \
    --storeId 'gLBAMxI5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateItem' test.out

#- 90 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'KDfB4NX3' \
    --namespace $AB_NAMESPACE \
    --storeId 'XvG2xoVA' \
    > test.out 2>&1
eval_tap $? 90 'DeleteItem' test.out

#- 91 AcquireItem
# body param: body
echo '{"count": 79, "orderNo": "xq0BDWjz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'shytIOQY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'AcquireItem' test.out

#- 92 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'ltj58yc0' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'aHO3OlKx' \
    > test.out 2>&1
eval_tap $? 92 'GetApp' test.out

#- 93 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "VwRTR3Jn", "previewUrl": "1VbImIwl", "thumbnailUrl": "n1urAuIC", "type": "video", "url": "pLXpDdhZ", "videoSource": "vimeo"}, {"alt": "EbdFWGTg", "previewUrl": "09JNaEuw", "thumbnailUrl": "rZ5lTdJ6", "type": "video", "url": "Oo4Oq8Da", "videoSource": "youtube"}, {"alt": "gwUCy0aH", "previewUrl": "WznJjdC9", "thumbnailUrl": "oREuij1A", "type": "video", "url": "5P0Zdb98", "videoSource": "youtube"}], "developer": "PoGJZLPC", "forumUrl": "v4OI4FiI", "genres": ["Adventure", "Adventure", "FreeToPlay"], "localizations": {"sNffLSgV": {"announcement": "zMqB13C3", "slogan": "vA6G0u1F"}, "aGjtu7Y1": {"announcement": "XlvoXLkF", "slogan": "ZYZsT7Pj"}, "RPYTZLJT": {"announcement": "PIXdscef", "slogan": "quHqPpxv"}}, "platformRequirements": {"sWbOwPSk": [{"additionals": "QYvFNoY5", "directXVersion": "0Hw808pq", "diskSpace": "JMbtP1jj", "graphics": "rEHaQeEh", "label": "XTbLqXzc", "osVersion": "Jt4oLJBs", "processor": "oymOfpLB", "ram": "DqkVXpbQ", "soundCard": "g114VrWV"}, {"additionals": "KV7xR3CD", "directXVersion": "zikQrw57", "diskSpace": "olpRHu7E", "graphics": "Gn2zwUjI", "label": "inkwPC1j", "osVersion": "DllNS6yT", "processor": "zfoSYp9u", "ram": "sKzplpeg", "soundCard": "x14qiFdz"}, {"additionals": "CQCSWwgG", "directXVersion": "4f044nm7", "diskSpace": "1HCa8IeR", "graphics": "Kugfh8Wv", "label": "W9RlQusg", "osVersion": "q1zm30h5", "processor": "a7gbIOwN", "ram": "QlnVj4US", "soundCard": "Ylf3ZkAQ"}], "5VHVY7Qv": [{"additionals": "gOqvBagc", "directXVersion": "I7WtcuNM", "diskSpace": "dy067bGI", "graphics": "NoiFidrl", "label": "acNy7Koo", "osVersion": "RUhdSqdA", "processor": "eaDZ0f0U", "ram": "QQmX3a0j", "soundCard": "QM2AGIZh"}, {"additionals": "BuKvmMuP", "directXVersion": "2ahXjvKF", "diskSpace": "Ky4AzKsF", "graphics": "JdrWmVF7", "label": "ObJqNJem", "osVersion": "Tj29BjKf", "processor": "F3KwFZj5", "ram": "i8f5yjqg", "soundCard": "pMU13kFA"}, {"additionals": "iZJVIG1l", "directXVersion": "4jlTRsBJ", "diskSpace": "cbZAO3nk", "graphics": "5CIwlKo7", "label": "J38P0CEZ", "osVersion": "Qxtbm8LT", "processor": "MvdOeuaH", "ram": "KevND9M5", "soundCard": "sJvbqrwS"}], "EoJSD2GS": [{"additionals": "AbHT5k6T", "directXVersion": "aYnF6GA5", "diskSpace": "w932qLKL", "graphics": "ypAkXXnJ", "label": "xeUcf8kH", "osVersion": "d0xQ768d", "processor": "uhoEtDXk", "ram": "TSl9DqWP", "soundCard": "j8MykZ95"}, {"additionals": "8WRThbBf", "directXVersion": "GyOYANxh", "diskSpace": "RrR7Anuy", "graphics": "YMSIwjO3", "label": "22mRyRQ1", "osVersion": "xayWIg1t", "processor": "vIiNO9I7", "ram": "Dzz146Wo", "soundCard": "71k1WUtt"}, {"additionals": "CGTB6X5F", "directXVersion": "8cU4lX6O", "diskSpace": "taxjxPt9", "graphics": "ZJOT4VrN", "label": "YbdXfQd1", "osVersion": "ZcwhM74i", "processor": "KqdRw3yn", "ram": "w3zPaPbz", "soundCard": "2BYj9TOg"}]}, "platforms": ["MacOS", "Android", "MacOS"], "players": ["CrossPlatformMulti", "LocalCoop", "Multi"], "primaryGenre": "Indie", "publisher": "J1J8xdth", "releaseDate": "1991-08-26T00:00:00Z", "websiteUrl": "DvTDvXK1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'ffHxMlBX' \
    --namespace $AB_NAMESPACE \
    --storeId '5lXFSpBT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'UpdateApp' test.out

#- 94 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId '93GNXaxZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'AJfLd4FV' \
    > test.out 2>&1
eval_tap $? 94 'DisableItem' test.out

#- 95 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'a0tnBxK1' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetItemDynamicData' test.out

#- 96 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'LeB0rr9h' \
    --namespace $AB_NAMESPACE \
    --storeId 'wirExO8p' \
    > test.out 2>&1
eval_tap $? 96 'EnableItem' test.out

#- 97 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'MEzQHcUf' \
    --itemId 'J9dxwb2w' \
    --namespace $AB_NAMESPACE \
    --storeId 'wC0SF3wE' \
    > test.out 2>&1
eval_tap $? 97 'FeatureItem' test.out

#- 98 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'LTmIBfA6' \
    --itemId 'UxcfgDoM' \
    --namespace $AB_NAMESPACE \
    --storeId 'tZgTXUhy' \
    > test.out 2>&1
eval_tap $? 98 'DefeatureItem' test.out

#- 99 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'IONWSsHh' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'P83JoWLn' \
    --populateBundle 'false' \
    --region 'zlrNPiuy' \
    --storeId 'GEaBZ1LT' \
    > test.out 2>&1
eval_tap $? 99 'GetLocaleItem' test.out

#- 100 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 22, "comparison": "excludes", "name": "ZSNbPXWr", "predicateType": "EntitlementPredicate", "value": "1qhMFBhC", "values": ["XlSmln4y", "LHxrLlmr", "siVIAyBy"]}, {"anyOf": 73, "comparison": "excludes", "name": "bfFLWRuV", "predicateType": "SeasonPassPredicate", "value": "2ql77KHH", "values": ["cbiRw1WF", "SLds1gXQ", "SEdl6oPJ"]}, {"anyOf": 64, "comparison": "isLessThan", "name": "nAGDs7wr", "predicateType": "SeasonPassPredicate", "value": "oEttEpCd", "values": ["Wy25QSD3", "EXqcKnIB", "Aummw3yw"]}]}, {"operator": "or", "predicates": [{"anyOf": 73, "comparison": "isLessThanOrEqual", "name": "lCxJ2lCU", "predicateType": "SeasonPassPredicate", "value": "a3MuivEE", "values": ["cztnQeiA", "RO2HPrTp", "5wzFfK51"]}, {"anyOf": 21, "comparison": "isLessThan", "name": "iSMpbFwz", "predicateType": "SeasonPassPredicate", "value": "Obt0ObkV", "values": ["jOPDHero", "PW8xCL1J", "2jyjckFF"]}, {"anyOf": 25, "comparison": "isLessThan", "name": "S8mzb4J6", "predicateType": "SeasonTierPredicate", "value": "QrfeGazY", "values": ["w3cxG1Y9", "3KIIGNnG", "vVMgugxL"]}]}, {"operator": "and", "predicates": [{"anyOf": 14, "comparison": "isGreaterThan", "name": "oCXsNGr0", "predicateType": "EntitlementPredicate", "value": "d0NkQQM4", "values": ["8D0X8Hbh", "OhZOvWh1", "z6EuSVcY"]}, {"anyOf": 22, "comparison": "isLessThanOrEqual", "name": "6x7Njecg", "predicateType": "SeasonPassPredicate", "value": "ywKlwOZe", "values": ["4qePDvS4", "UPppoucW", "f0Gc6E7q"]}, {"anyOf": 34, "comparison": "includes", "name": "hAH6ltUr", "predicateType": "SeasonPassPredicate", "value": "Lu65Gdun", "values": ["c4OOfW7J", "ewWFfcEx", "CjUFsaGE"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'vowuPKpt' \
    --namespace $AB_NAMESPACE \
    --storeId 'KSqVoqBx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateItemPurchaseCondition' test.out

#- 101 ReturnItem
# body param: body
echo '{"orderNo": "NTWJmbG2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'YvYKV7Fk' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'ReturnItem' test.out

#- 102 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '66' \
    --name 'zlXTz45G' \
    --offset '45' \
    --tag 'SNUQ8BlA' \
    > test.out 2>&1
eval_tap $? 102 'QueryKeyGroups' test.out

#- 103 CreateKeyGroup
# body param: body
echo '{"description": "uuOdC8m1", "name": "oIHTNd5p", "status": "INACTIVE", "tags": ["2VYM3O4S", "2xjJroRQ", "lOUfeiQj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateKeyGroup' test.out

#- 104 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'OTXNM1Kn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'GetKeyGroup' test.out

#- 105 UpdateKeyGroup
# body param: body
echo '{"description": "fOLRqeTk", "name": "0zYHipT6", "status": "INACTIVE", "tags": ["L2knUQJw", "K0PjiEsn", "96nBwUyz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId '92S6yMMD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'UpdateKeyGroup' test.out

#- 106 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'nmvVOzJ2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'GetKeyGroupDynamic' test.out

#- 107 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'MWz4Uo25' \
    --namespace $AB_NAMESPACE \
    --limit '87' \
    --offset '78' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 107 'ListKeys' test.out

#- 108 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'q9IrlisV' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 108 'UploadKeys' test.out

#- 109 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'TBaxdzKF' \
    --limit '0' \
    --offset '21' \
    --orderNos '["m6EjzEF5", "D7rert9t", "hMK4P6qZ"]' \
    --sortBy 'tyRjROTq' \
    --startTime 'McznSEmD' \
    --status 'CHARGED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 109 'QueryOrders' test.out

#- 110 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'GetOrderStatistics' test.out

#- 111 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'qcVOIJer' \
    > test.out 2>&1
eval_tap $? 111 'GetOrder' test.out

#- 112 RefundOrder
# body param: body
echo '{"description": "ltXc4CiT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '1We7akBG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'RefundOrder' test.out

#- 113 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetPaymentCallbackConfig' test.out

#- 114 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "z7TT9WPP", "privateKey": "WKLhq0QD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdatePaymentCallbackConfig' test.out

#- 115 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '3eWIZp6i' \
    --externalId 'pAJpuUCb' \
    --limit '81' \
    --notificationSource 'CHECKOUT' \
    --notificationType 'nAAqEMUk' \
    --offset '90' \
    --paymentOrderNo 'lYqiZhqY' \
    --startDate 'M3xQ5992' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 115 'QueryPaymentNotifications' test.out

#- 116 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'NgjBks81' \
    --limit '13' \
    --offset '20' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 116 'QueryPaymentOrders' test.out

#- 117 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "xAaZi1ZD", "currencyNamespace": "Lw14nXGL", "customParameters": {"O5Cnk1AV": {}, "SQ7Uekgu": {}, "lDcP5aej": {}}, "description": "JvAMjNZS", "extOrderNo": "F4Hpd3oV", "extUserId": "vAHvzBgU", "itemType": "SEASON", "language": "XwG_089", "metadata": {"2aJ3HXIO": "NLoUiu9Q", "k2a7gwDj": "UHGYStg8", "TsGrY01P": "UvjWg6Hk"}, "notifyUrl": "sIleYI8Y", "omitNotification": false, "platform": "UkIbQJkT", "price": 35, "recurringPaymentOrderNo": "XGRywx5c", "region": "X1C9TUSX", "returnUrl": "sRbg5tTo", "sandbox": true, "sku": "AdcH19yc", "subscriptionId": "D3ydwA9q", "targetNamespace": "dWLh83d9", "targetUserId": "ZU9RTJ8M", "title": "QDqPwI36"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'CreatePaymentOrderByDedicated' test.out

#- 118 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'Vo7slYHP' \
    > test.out 2>&1
eval_tap $? 118 'ListExtOrderNoByExtTxId' test.out

#- 119 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Jf1vkioF' \
    > test.out 2>&1
eval_tap $? 119 'GetPaymentOrder' test.out

#- 120 ChargePaymentOrder
# body param: body
echo '{"extTxId": "t3ua8cvJ", "paymentMethod": "11cBWZD9", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'kHv8optX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'ChargePaymentOrder' test.out

#- 121 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "S4BoVqXF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'izXTkuGb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundPaymentOrderByDedicated' test.out

#- 122 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 43, "currencyCode": "iWz5SlPh", "notifyType": "CHARGE", "paymentProvider": "ALIPAY", "salesTax": 96, "vat": 54}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'T4WKMvzU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'SimulatePaymentOrderNotification' test.out

#- 123 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'QjHedKdq' \
    > test.out 2>&1
eval_tap $? 123 'GetPaymentOrderChargeStatus' test.out

#- 124 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 124 'GetPlatformWalletConfig' test.out

#- 125 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["IOS", "IOS", "Stadia"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'UpdatePlatformWalletConfig' test.out

#- 126 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 126 'ResetPlatformWalletConfig' test.out

#- 127 CreateReward
# body param: body
echo '{"description": "NwOhIvWJ", "eventTopic": "VSHFQivY", "maxAwarded": 85, "maxAwardedPerUser": 7, "namespaceExpression": "YkOZVXJ6", "rewardCode": "CEil6Bh9", "rewardConditions": [{"condition": "BZQPjEqT", "conditionName": "Qbpemwm8", "eventName": "oq2E9kwS", "rewardItems": [{"duration": 100, "itemId": "7dSRcU2v", "quantity": 65}, {"duration": 57, "itemId": "tYmQjBUQ", "quantity": 93}, {"duration": 91, "itemId": "1ljPwU7Z", "quantity": 21}]}, {"condition": "4Lc9g7pZ", "conditionName": "5rbPQovd", "eventName": "gzUSwBop", "rewardItems": [{"duration": 21, "itemId": "DXGleXO8", "quantity": 46}, {"duration": 48, "itemId": "BiPGrubD", "quantity": 70}, {"duration": 77, "itemId": "gqAQKv7h", "quantity": 24}]}, {"condition": "rvfszNbw", "conditionName": "XYHv9Pqv", "eventName": "DLY7fdei", "rewardItems": [{"duration": 37, "itemId": "IhRrLXTo", "quantity": 66}, {"duration": 60, "itemId": "pzAqUmhz", "quantity": 75}, {"duration": 87, "itemId": "yxlU2iAD", "quantity": 53}]}], "userIdExpression": "nTxdIphd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 127 'CreateReward' test.out

#- 128 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'yEGeLZh7' \
    --limit '92' \
    --offset '13' \
    --sortBy '["namespace", "namespace:asc", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 128 'QueryRewards' test.out

#- 129 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'ExportRewards' test.out

#- 130 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 130 'ImportRewards' test.out

#- 131 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'EBAZG4lZ' \
    > test.out 2>&1
eval_tap $? 131 'GetReward' test.out

#- 132 UpdateReward
# body param: body
echo '{"description": "UNC4QQue", "eventTopic": "qyADVnbH", "maxAwarded": 76, "maxAwardedPerUser": 65, "namespaceExpression": "XxUp79As", "rewardCode": "okdMV2Bp", "rewardConditions": [{"condition": "ZJIvGUlo", "conditionName": "SGmxwk5t", "eventName": "nD23JXw9", "rewardItems": [{"duration": 75, "itemId": "cttuvOzk", "quantity": 45}, {"duration": 15, "itemId": "ZAEq1IhL", "quantity": 100}, {"duration": 68, "itemId": "sgtTHY21", "quantity": 67}]}, {"condition": "1VvRFxke", "conditionName": "1R3QWzV4", "eventName": "Txnq3Dug", "rewardItems": [{"duration": 77, "itemId": "eUEh66Vh", "quantity": 47}, {"duration": 94, "itemId": "ZZH2VIvx", "quantity": 92}, {"duration": 42, "itemId": "ZYhKUGkd", "quantity": 11}]}, {"condition": "AQc7sv5F", "conditionName": "3sknTkmK", "eventName": "XGmTT7PM", "rewardItems": [{"duration": 23, "itemId": "KoE037N1", "quantity": 85}, {"duration": 67, "itemId": "cGDzB8XG", "quantity": 27}, {"duration": 26, "itemId": "Bw5RGsSF", "quantity": 55}]}], "userIdExpression": "BPZ7NHyZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'g3CPATY6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'UpdateReward' test.out

#- 133 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'N9yOWB0x' \
    > test.out 2>&1
eval_tap $? 133 'DeleteReward' test.out

#- 134 CheckEventCondition
# body param: body
echo '{"payload": {"w3Ui7Lt4": {}, "sHMhcu2o": {}, "yCcTXGhh": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId '13US2xRd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CheckEventCondition' test.out

#- 135 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'ListStores' test.out

#- 136 CreateStore
# body param: body
echo '{"defaultLanguage": "g3NX0s3Z", "defaultRegion": "Imj8zYdd", "description": "pw97P4y4", "supportedLanguages": ["NUJpRuLl", "zscjfIsn", "iuuNtFBC"], "supportedRegions": ["uafIfdYi", "vszODsuV", "JOTEjwHb"], "title": "S97FWOhX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateStore' test.out

#- 137 ImportStore
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'yMQcgcu8' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 137 'ImportStore' test.out

#- 138 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetPublishedStore' test.out

#- 139 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'DeletePublishedStore' test.out

#- 140 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'GetPublishedStoreBackup' test.out

#- 141 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 141 'RollbackPublishedStore' test.out

#- 142 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ZJTeKoR8' \
    > test.out 2>&1
eval_tap $? 142 'GetStore' test.out

#- 143 UpdateStore
# body param: body
echo '{"defaultLanguage": "iKK7S4Tz", "defaultRegion": "BK6Qad7d", "description": "u64JncfN", "supportedLanguages": ["7ZuX6Q7i", "WEqTTlAP", "ouPyMtFD"], "supportedRegions": ["TPFrqhHu", "nGssVeN4", "yU4qqADA"], "title": "JIAF4G9D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'SdI5EY1j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateStore' test.out

#- 144 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'yX1VLwd7' \
    > test.out 2>&1
eval_tap $? 144 'DeleteStore' test.out

#- 145 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId '7o8F4tNw' \
    --action 'CREATE' \
    --itemSku 'GP52CTdc' \
    --itemType 'MEDIA' \
    --limit '17' \
    --offset '86' \
    --selected 'false' \
    --sortBy '["createdAt", "updatedAt:desc", "createdAt:asc"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'pmdcBoYL' \
    --updatedAtStart 'uSGpfYcl' \
    > test.out 2>&1
eval_tap $? 145 'QueryChanges' test.out

#- 146 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId '9ty7blD6' \
    > test.out 2>&1
eval_tap $? 146 'PublishAll' test.out

#- 147 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'caSMrTeu' \
    > test.out 2>&1
eval_tap $? 147 'PublishSelected' test.out

#- 148 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'MslNJXEl' \
    > test.out 2>&1
eval_tap $? 148 'SelectAllRecords' test.out

#- 149 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'Hr4aFi4V' \
    --action 'DELETE' \
    --itemSku '6XwtDEoH' \
    --itemType 'OPTIONBOX' \
    --type 'ITEM' \
    --updatedAtEnd 'yEBvziey' \
    --updatedAtStart 'WaXITgax' \
    > test.out 2>&1
eval_tap $? 149 'GetStatistic' test.out

#- 150 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'iUJCgBOX' \
    > test.out 2>&1
eval_tap $? 150 'UnselectAllRecords' test.out

#- 151 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'gwBjKr2m' \
    --namespace $AB_NAMESPACE \
    --storeId '64zNqDNz' \
    > test.out 2>&1
eval_tap $? 151 'SelectRecord' test.out

#- 152 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'VN3aFt8F' \
    --namespace $AB_NAMESPACE \
    --storeId 'RVZZgpm8' \
    > test.out 2>&1
eval_tap $? 152 'UnselectRecord' test.out

#- 153 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'tmNf8gI0' \
    --targetStoreId 'dyy9w6NX' \
    > test.out 2>&1
eval_tap $? 153 'CloneStore' test.out

#- 154 ExportStore
$CLI_EXE \
    --sn platform \
    --op ExportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'VXAok2x7' \
    > test.out 2>&1
eval_tap $? 154 'ExportStore' test.out

#- 155 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'NEVER' \
    --itemId 'qwO15Tzc' \
    --limit '58' \
    --offset '48' \
    --sku 'G6JiWWzT' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    --userId 'zJtWg9kG' \
    > test.out 2>&1
eval_tap $? 155 'QuerySubscriptions' test.out

#- 156 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'IfLiPkdQ' \
    > test.out 2>&1
eval_tap $? 156 'RecurringChargeSubscription' test.out

#- 157 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'PIYv7h5F' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 157 'GetTicketDynamic' test.out

#- 158 DecreaseTicketSale
# body param: body
echo '{"orderNo": "sxDJuFct"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'koKPKhPI' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'DecreaseTicketSale' test.out

#- 159 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'kkcATZtq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'GetTicketBoothID' test.out

#- 160 IncreaseTicketSale
# body param: body
echo '{"count": 31, "orderNo": "Khpttr1f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'XSmFXwN7' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'IncreaseTicketSale' test.out

#- 161 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "oDZsPamf", "value": 53}, {"id": "1nRc3KNN", "value": 73}, {"id": "Fw4lVwqp", "value": 78}], "steamUserId": "YEzyCPSs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '7afEKcuB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'UnlockSteamUserAchievement' test.out

#- 162 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'CzSJRL6L' \
    --xboxUserId 'iGalJ4Md' \
    > test.out 2>&1
eval_tap $? 162 'GetXblUserAchievements' test.out

#- 163 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "wahxfQc8", "percentComplete": 77}, {"id": "8bDxWMPl", "percentComplete": 59}, {"id": "GOhjwfWh", "percentComplete": 63}], "serviceConfigId": "knsgzN6m", "titleId": "LrsIB3ZI", "xboxUserId": "a0jsZVtm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'Zkzm9Dfr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'UpdateXblUserAchievement' test.out

#- 164 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'VtJM1S6a' \
    > test.out 2>&1
eval_tap $? 164 'AnonymizeCampaign' test.out

#- 165 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'EZEBzMgf' \
    > test.out 2>&1
eval_tap $? 165 'AnonymizeEntitlement' test.out

#- 166 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'ybPPPEBk' \
    > test.out 2>&1
eval_tap $? 166 'AnonymizeFulfillment' test.out

#- 167 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'kGChm87P' \
    > test.out 2>&1
eval_tap $? 167 'AnonymizeIntegration' test.out

#- 168 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'LezXbKy7' \
    > test.out 2>&1
eval_tap $? 168 'AnonymizeOrder' test.out

#- 169 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'eGDmHbOt' \
    > test.out 2>&1
eval_tap $? 169 'AnonymizePayment' test.out

#- 170 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'rqKSFJg1' \
    > test.out 2>&1
eval_tap $? 170 'AnonymizeSubscription' test.out

#- 171 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'iEgty1gW' \
    > test.out 2>&1
eval_tap $? 171 'AnonymizeWallet' test.out

#- 172 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ED2tkuNB' \
    --activeOnly 'false' \
    --appType 'GAME' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'x1xEkn8S' \
    --itemId '["iuuCkQbH", "4CnUMI5Q", "bItHSURo"]' \
    --limit '76' \
    --offset '7' \
    > test.out 2>&1
eval_tap $? 172 'QueryUserEntitlements' test.out

#- 173 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1980-02-21T00:00:00Z", "grantedCode": "OkVZikPu", "itemId": "vhLjt6Gt", "itemNamespace": "1Ycnsym1", "language": "KwH_cemC", "quantity": 90, "region": "4qVOabeB", "source": "ACHIEVEMENT", "startDate": "1991-08-01T00:00:00Z", "storeId": "JRslS7vQ"}, {"endDate": "1995-11-14T00:00:00Z", "grantedCode": "1wd7mIK1", "itemId": "EqdiYZtD", "itemNamespace": "gPBKBCNq", "language": "TeJU-039", "quantity": 60, "region": "ayV9XgxU", "source": "PROMOTION", "startDate": "1978-02-16T00:00:00Z", "storeId": "2J13qcrv"}, {"endDate": "1974-01-17T00:00:00Z", "grantedCode": "c8HeRZum", "itemId": "EuVmvKe7", "itemNamespace": "kquwDgIE", "language": "aBla-YT", "quantity": 95, "region": "Z71FHcIa", "source": "REFERRAL_BONUS", "startDate": "1974-03-30T00:00:00Z", "storeId": "wz0EqIxN"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'yMAxq2pe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'GrantUserEntitlement' test.out

#- 174 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'GdLL90nJ' \
    --activeOnly 'true' \
    --appId 'fBnSBtPp' \
    > test.out 2>&1
eval_tap $? 174 'GetUserAppEntitlementByAppId' test.out

#- 175 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'W9rT1dyh' \
    --activeOnly 'true' \
    --limit '86' \
    --offset '10' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 175 'QueryUserEntitlementsByAppType' test.out

#- 176 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'yKdVErl0' \
    --activeOnly 'false' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'ujXRlZjy' \
    > test.out 2>&1
eval_tap $? 176 'GetUserEntitlementByItemId' test.out

#- 177 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'EoS6GoYB' \
    --activeOnly 'false' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'bLnO1p68' \
    > test.out 2>&1
eval_tap $? 177 'GetUserEntitlementBySku' test.out

#- 178 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'WsYXXTvb' \
    --appIds '["sDUiTcns", "E52iuCAQ", "uLfXC9Wc"]' \
    --itemIds '["ss2eMhrC", "fgt5PS4K", "sf3z4T2u"]' \
    --skus '["P1dn6k5I", "pcFSwM34", "5fwoLjMI"]' \
    > test.out 2>&1
eval_tap $? 178 'ExistsAnyUserActiveEntitlement' test.out

#- 179 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'ouYhTem9' \
    --itemIds '["xEvZl5ER", "6s7zgao7", "neCt2kzU"]' \
    > test.out 2>&1
eval_tap $? 179 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 180 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'vJ9c83u1' \
    --appId 'vjqJS3ij' \
    > test.out 2>&1
eval_tap $? 180 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 181 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'pcdnxjoA' \
    --entitlementClazz 'MEDIA' \
    --itemId 'iUjAGZRo' \
    > test.out 2>&1
eval_tap $? 181 'GetUserEntitlementOwnershipByItemId' test.out

#- 182 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'aPA0Mfc1' \
    --ids '["sgjv1tEv", "jcSGw2Ny", "NwlhW0wn"]' \
    > test.out 2>&1
eval_tap $? 182 'GetUserEntitlementOwnershipByItemIds' test.out

#- 183 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'jQs9S2fg' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku '8EBz3JZh' \
    > test.out 2>&1
eval_tap $? 183 'GetUserEntitlementOwnershipBySku' test.out

#- 184 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'fI3IHre3' \
    --entitlementIds 'RI7grpVh' \
    > test.out 2>&1
eval_tap $? 184 'RevokeUserEntitlements' test.out

#- 185 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'dhtKH5EC' \
    --namespace $AB_NAMESPACE \
    --userId 'izDZ6gVz' \
    > test.out 2>&1
eval_tap $? 185 'GetUserEntitlement' test.out

#- 186 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1976-04-10T00:00:00Z", "nullFieldList": ["i3WeEjp5", "5uUqQM79", "dvqnJN8L"], "startDate": "1983-11-26T00:00:00Z", "status": "REVOKED", "useCount": 38}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'J5iIEmzn' \
    --namespace $AB_NAMESPACE \
    --userId 'gXIim5An' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'UpdateUserEntitlement' test.out

#- 187 ConsumeUserEntitlement
# body param: body
echo '{"options": ["0zzDMRZr", "rwDunA7X", "yHSdCSyk"], "useCount": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'RayK6Tf3' \
    --namespace $AB_NAMESPACE \
    --userId 'qTCdpPLZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'ConsumeUserEntitlement' test.out

#- 188 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'BFQx5LOW' \
    --namespace $AB_NAMESPACE \
    --userId 'S6IslfOt' \
    > test.out 2>&1
eval_tap $? 188 'DisableUserEntitlement' test.out

#- 189 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'eAmfSrjt' \
    --namespace $AB_NAMESPACE \
    --userId 'CDOsitQX' \
    > test.out 2>&1
eval_tap $? 189 'EnableUserEntitlement' test.out

#- 190 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'yn5e8LWa' \
    --namespace $AB_NAMESPACE \
    --userId 'Ocs8TDu7' \
    > test.out 2>&1
eval_tap $? 190 'GetUserEntitlementHistories' test.out

#- 191 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'YN4XViSu' \
    --namespace $AB_NAMESPACE \
    --userId 'dZaCw11F' \
    > test.out 2>&1
eval_tap $? 191 'RevokeUserEntitlement' test.out

#- 192 FulfillItem
# body param: body
echo '{"duration": 92, "endDate": "1977-07-10T00:00:00Z", "itemId": "28J5krd2", "itemSku": "e15tU4Zq", "language": "4OrYXjiD", "order": {"currency": {"currencyCode": "EzSJJRKG", "currencySymbol": "day5D0Yy", "currencyType": "VIRTUAL", "decimals": 1, "namespace": "9xSq6KRt"}, "ext": {"EJnWwOrk": {}, "A3IrwocT": {}, "CVxVoPDv": {}}, "free": true}, "orderNo": "oRmKe0lN", "origin": "Nintendo", "quantity": 42, "region": "RPlnOEop", "source": "ACHIEVEMENT", "startDate": "1999-11-16T00:00:00Z", "storeId": "TXPzfwmN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'zwuiBvnU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'FulfillItem' test.out

#- 193 RedeemCode
# body param: body
echo '{"code": "nfpC7swb", "language": "XHi-QjJN_958", "region": "a4DUzxNa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'UN3Q31Kq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'RedeemCode' test.out

#- 194 FulfillRewards
# body param: body
echo '{"origin": "System", "rewards": [{"currency": {"currencyCode": "9etqcg0m", "namespace": "gLfRv7VU"}, "item": {"itemId": "3i6fEN54", "itemSku": "eTrpm8lR", "itemType": "Mqg2GY6S"}, "quantity": 3, "type": "ITEM"}, {"currency": {"currencyCode": "XtSzFjHm", "namespace": "76IZJLZh"}, "item": {"itemId": "xrUqZTTP", "itemSku": "hC6Jp2st", "itemType": "tLBIrehS"}, "quantity": 91, "type": "CURRENCY"}, {"currency": {"currencyCode": "X1sdT5Of", "namespace": "I2IW2O2G"}, "item": {"itemId": "MIUK25gQ", "itemSku": "PSk9lr1q", "itemType": "RdZkrGqB"}, "quantity": 72, "type": "CURRENCY"}], "source": "PURCHASE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'duQSqr4G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'FulfillRewards' test.out

#- 195 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'pjRv45Nd' \
    --endTime 'ePFTNJN5' \
    --limit '86' \
    --offset '24' \
    --productId '6v0GZkWg' \
    --startTime 'HP4tU313' \
    --status 'VERIFIED' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 195 'QueryUserIAPOrders' test.out

#- 196 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'c1CytXlL' \
    > test.out 2>&1
eval_tap $? 196 'QueryAllUserIAPOrders' test.out

#- 197 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "HSqK", "productId": "DsirydIb", "region": "eEjGrCQD", "type": "STEAM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '7JlDZSd0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'MockFulfillIAPItem' test.out

#- 198 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'oArtuFqP' \
    --itemId 'OF3F58BA' \
    --limit '33' \
    --offset '35' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 198 'QueryUserOrders' test.out

#- 199 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "UnLbAcko", "currencyNamespace": "iniGp84O", "discountedPrice": 16, "ext": {"xuJhT1BY": {}, "wKqpYvbl": {}, "GeVlGZl6": {}}, "itemId": "dzb8SDNL", "language": "lXiEqGgB", "options": {"skipPriceValidation": true}, "platform": "Xbox", "price": 48, "quantity": 0, "region": "zq50jO3z", "returnUrl": "T1niAhr1", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '4e6dIQzs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'AdminCreateUserOrder' test.out

#- 200 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'K4qMbKWU' \
    --itemId 'XiDQ1LMa' \
    > test.out 2>&1
eval_tap $? 200 'CountOfPurchasedItem' test.out

#- 201 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '2JD15Z0k' \
    --userId 'eHskL7z8' \
    > test.out 2>&1
eval_tap $? 201 'GetUserOrder' test.out

#- 202 UpdateUserOrderStatus
# body param: body
echo '{"status": "REFUND_FAILED", "statusReason": "znEtv6E8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'fv8eTDvT' \
    --userId 'MTpXAQLk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'UpdateUserOrderStatus' test.out

#- 203 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'tT8a3FJE' \
    --userId '6UVHmLys' \
    > test.out 2>&1
eval_tap $? 203 'FulfillUserOrder' test.out

#- 204 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo '19AaasfT' \
    --userId 'sExyjyXH' \
    > test.out 2>&1
eval_tap $? 204 'GetUserOrderGrant' test.out

#- 205 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'GJ3qqJoC' \
    --userId 'dxKojQsB' \
    > test.out 2>&1
eval_tap $? 205 'GetUserOrderHistories' test.out

#- 206 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "S9hoTTQ2"}, "authorisedTime": "1990-10-27T00:00:00Z", "chargebackReversedTime": "1996-04-22T00:00:00Z", "chargebackTime": "1988-08-08T00:00:00Z", "chargedTime": "1975-06-16T00:00:00Z", "createdTime": "1984-02-15T00:00:00Z", "currency": {"currencyCode": "4ndQWqMx", "currencySymbol": "DYfmxSo1", "currencyType": "VIRTUAL", "decimals": 84, "namespace": "wVRra84p"}, "customParameters": {"yxw4sG4r": {}, "6nigCGgR": {}, "dtLDN7lF": {}}, "extOrderNo": "zb1T5SC3", "extTxId": "rw4qvKH7", "extUserId": "Quz8md4X", "issuedAt": "1986-12-31T00:00:00Z", "metadata": {"3OUaWNp7": "4gVImQqo", "OlOVXdZA": "SXouuwOj", "bw4zfxJl": "s5okiDAA"}, "namespace": "Fb8DD3Vc", "nonceStr": "reLUYlkl", "paymentMethod": "qyFb0cdX", "paymentMethodFee": 50, "paymentOrderNo": "3WF2m7tR", "paymentProvider": "WXPAY", "paymentProviderFee": 22, "paymentStationUrl": "DYC6HAw2", "price": 70, "refundedTime": "1992-03-19T00:00:00Z", "salesTax": 75, "sandbox": false, "sku": "UKO4rOtw", "status": "REFUND_FAILED", "statusReason": "eyIPAmWB", "subscriptionId": "WkhDDPNN", "subtotalPrice": 38, "targetNamespace": "fEplvc2V", "targetUserId": "xxTuMDaR", "tax": 7, "totalPrice": 99, "totalTax": 60, "txEndTime": "1993-09-29T00:00:00Z", "type": "AdoD9F2o", "userId": "2vGOb36L", "vat": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'NOWlxzmA' \
    --userId 'PXDg8l8f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'ProcessUserOrderNotification' test.out

#- 207 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'SVdWaXkT' \
    --userId 'gyKANKGD' \
    > test.out 2>&1
eval_tap $? 207 'DownloadUserOrderReceipt' test.out

#- 208 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "7QsMzw7m", "currencyNamespace": "MoYcKoyF", "customParameters": {"0Klw8OK8": {}, "sWrwtvJJ": {}, "yDF5Cp9u": {}}, "description": "wJMbQTR1", "extOrderNo": "xflw4mXs", "extUserId": "zrpzdPQN", "itemType": "CODE", "language": "lRCk", "metadata": {"T7ByCLbu": "f7D4CaZv", "3jXBjDvq": "3pn5w2Mu", "gUWG1vdr": "NuiyPw1S"}, "notifyUrl": "lCYyVshQ", "omitNotification": true, "platform": "kt4vIlyw", "price": 33, "recurringPaymentOrderNo": "vA3OSyHe", "region": "xidkWrO4", "returnUrl": "pARpQoHe", "sandbox": false, "sku": "HemsxNPJ", "subscriptionId": "DOkwTDL1", "title": "AFyFjtRc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'JcnIwDfn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'CreateUserPaymentOrder' test.out

#- 209 RefundUserPaymentOrder
# body param: body
echo '{"description": "O5dcYLhR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'vSQKbpJU' \
    --userId 't9330K0C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'RefundUserPaymentOrder' test.out

#- 210 ApplyUserRedemption
# body param: body
echo '{"code": "s5uRuff5", "orderNo": "Qr1RJEfr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'ZIbdzNoa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'ApplyUserRedemption' test.out

#- 211 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'Du0BFjYb' \
    --chargeStatus 'CHARGED' \
    --itemId 'yvHZEeg7' \
    --limit '94' \
    --offset '50' \
    --sku 'MZ82ZUdS' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 211 'QueryUserSubscriptions' test.out

#- 212 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'foTU2weD' \
    --excludeSystem 'false' \
    --limit '74' \
    --offset '66' \
    --subscriptionId 'cx75R8SB' \
    > test.out 2>&1
eval_tap $? 212 'GetUserSubscriptionActivities' test.out

#- 213 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 31, "itemId": "aFQBzGx4", "language": "QQJPtNrV", "reason": "tvqDKS0X", "region": "BXR4HpQU", "source": "PaLpOOvX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'oCKOXdrj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'PlatformSubscribeSubscription' test.out

#- 214 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'E2xPrhNo' \
    --itemId 'ItGN3epD' \
    > test.out 2>&1
eval_tap $? 214 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 215 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Tqk9Olzw' \
    --userId '6cRwpmI1' \
    > test.out 2>&1
eval_tap $? 215 'GetUserSubscription' test.out

#- 216 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'XL11tL3H' \
    --userId 'ZUw1glaD' \
    > test.out 2>&1
eval_tap $? 216 'DeleteUserSubscription' test.out

#- 217 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "DcGeEdUR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'L0KaZAfF' \
    --userId 'aiw2rQTs' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'CancelSubscription' test.out

#- 218 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 46, "reason": "Z5NJMxyn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'JFVfMWzt' \
    --userId 'Eyfr7hmG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'GrantDaysToSubscription' test.out

#- 219 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'm1EgVzsG' \
    --userId 'uEsrhdn3' \
    --excludeFree 'true' \
    --limit '63' \
    --offset '27' \
    > test.out 2>&1
eval_tap $? 219 'GetUserSubscriptionBillingHistories' test.out

#- 220 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "bgeeQQ14"}, "authorisedTime": "1998-06-17T00:00:00Z", "chargebackReversedTime": "1980-04-04T00:00:00Z", "chargebackTime": "1983-04-19T00:00:00Z", "chargedTime": "1996-02-19T00:00:00Z", "createdTime": "1980-04-13T00:00:00Z", "currency": {"currencyCode": "eleO45RG", "currencySymbol": "OUvOb7M0", "currencyType": "REAL", "decimals": 81, "namespace": "9lSB4LID"}, "customParameters": {"rmBst22v": {}, "KxlfZWdd": {}, "sjPxb2z6": {}}, "extOrderNo": "0cTl5n0l", "extTxId": "G3LNLuyU", "extUserId": "UrYgFZKc", "issuedAt": "1978-02-13T00:00:00Z", "metadata": {"nuZ2ZWKP": "c85pW2tW", "Cr128P9u": "4r4kB2Jx", "d5Oyujxt": "v66TajiA"}, "namespace": "xH3x6aG2", "nonceStr": "7HzZcEUd", "paymentMethod": "7baZy9A1", "paymentMethodFee": 32, "paymentOrderNo": "WiBDcCE9", "paymentProvider": "XSOLLA", "paymentProviderFee": 22, "paymentStationUrl": "gTDsO5xo", "price": 94, "refundedTime": "1980-02-02T00:00:00Z", "salesTax": 93, "sandbox": false, "sku": "OWDS5C6z", "status": "CHARGEBACK_REVERSED", "statusReason": "i3SxmIAS", "subscriptionId": "rMDRGxAi", "subtotalPrice": 100, "targetNamespace": "GO99bZMW", "targetUserId": "xzmC1pUy", "tax": 88, "totalPrice": 25, "totalTax": 94, "txEndTime": "1992-02-11T00:00:00Z", "type": "t23JgT7R", "userId": "VRjMOa64", "vat": 69}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'HmMQj6AI' \
    --userId 'xwaSYk0p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'ProcessUserSubscriptionNotification' test.out

#- 221 AcquireUserTicket
# body param: body
echo '{"count": 46, "orderNo": "BVJgecWI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'eyGRFe1F' \
    --namespace $AB_NAMESPACE \
    --userId 'VhFZXDVG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'AcquireUserTicket' test.out

#- 222 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'ClzjYk4F' \
    > test.out 2>&1
eval_tap $? 222 'QueryUserCurrencyWallets' test.out

#- 223 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode '7FjcEAS5' \
    --namespace $AB_NAMESPACE \
    --userId 'T9IM3Eh5' \
    --limit '35' \
    --offset '20' \
    > test.out 2>&1
eval_tap $? 223 'ListUserCurrencyTransactions' test.out

#- 224 CheckWallet
eval_tap 0 224 'CheckWallet # SKIP deprecated' test.out

#- 225 CreditUserWallet
# body param: body
echo '{"amount": 17, "expireAt": "1984-11-13T00:00:00Z", "origin": "Playstation", "reason": "B06QSK0u", "source": "PURCHASE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'F0i99TEA' \
    --namespace $AB_NAMESPACE \
    --userId 'Ka8e0Xon' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'CreditUserWallet' test.out

#- 226 PayWithUserWallet
# body param: body
echo '{"amount": 49, "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'w6T2DObU' \
    --namespace $AB_NAMESPACE \
    --userId 'miNdaQU0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'PayWithUserWallet' test.out

#- 227 GetUserWallet
eval_tap 0 227 'GetUserWallet # SKIP deprecated' test.out

#- 228 DebitUserWallet
eval_tap 0 228 'DebitUserWallet # SKIP deprecated' test.out

#- 229 DisableUserWallet
eval_tap 0 229 'DisableUserWallet # SKIP deprecated' test.out

#- 230 EnableUserWallet
eval_tap 0 230 'EnableUserWallet # SKIP deprecated' test.out

#- 231 ListUserWalletTransactions
eval_tap 0 231 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 232 QueryWallets
eval_tap 0 232 'QueryWallets # SKIP deprecated' test.out

#- 233 GetWallet
eval_tap 0 233 'GetWallet # SKIP deprecated' test.out

#- 234 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'E47Pg7zF' \
    --end 'SGpoTwpV' \
    --start 'HYhpv4Uy' \
    > test.out 2>&1
eval_tap $? 234 'SyncOrders' test.out

#- 235 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["XzVobPz9", "MxW43yw2", "5OlBZ5UH"], "apiKey": "gfKLSh74", "authoriseAsCapture": false, "blockedPaymentMethods": ["kD0uNEP8", "hZvJ4Ls0", "rkmL66uP"], "clientKey": "BzgnyfOE", "dropInSettings": "iJRZ1T9f", "liveEndpointUrlPrefix": "8PZafOcM", "merchantAccount": "VOjjuiYZ", "notificationHmacKey": "RtlpcvfF", "notificationPassword": "PmjF4XZh", "notificationUsername": "wQ0KmRCu", "returnUrl": "uaEydU3j", "settings": "gtMlYHsQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'TestAdyenConfig' test.out

#- 236 TestAliPayConfig
# body param: body
echo '{"appId": "dL9kp4v3", "privateKey": "kNFbFBFM", "publicKey": "v4Qbukkc", "returnUrl": "6tUyFJdY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'TestAliPayConfig' test.out

#- 237 TestCheckoutConfig
# body param: body
echo '{"publicKey": "WOdJJOc6", "secretKey": "oGs6mUkC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'TestCheckoutConfig' test.out

#- 238 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ '4yi2BCC2' \
    --region 'PMvwstxe' \
    > test.out 2>&1
eval_tap $? 238 'DebugMatchedPaymentMerchantConfig' test.out

#- 239 TestPayPalConfig
# body param: body
echo '{"clientID": "2pPHjmIU", "clientSecret": "I5BB46uu", "returnUrl": "bmN4svnL", "webHookId": "2QfWKXXd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'TestPayPalConfig' test.out

#- 240 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["YyULqQzF", "AfGfHCnY", "IhryVQKC"], "publishableKey": "clH4G7G4", "secretKey": "XP3x1nnk", "webhookSecret": "pZuqYsw3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'TestStripeConfig' test.out

#- 241 TestWxPayConfig
# body param: body
echo '{"appId": "wiHuXWlQ", "key": "wzwkJV0b", "mchid": "v8qWsjvq", "returnUrl": "9sPwYiYT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'TestWxPayConfig' test.out

#- 242 TestXsollaConfig
# body param: body
echo '{"apiKey": "8uEQB2Q9", "flowCompletionUrl": "JDUnzTgL", "merchantId": 73, "projectId": 56, "projectSecretKey": "27jhcYgs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'TestXsollaConfig' test.out

#- 243 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'jn6zuaBv' \
    > test.out 2>&1
eval_tap $? 243 'GetPaymentMerchantConfig' test.out

#- 244 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["HRYvP2Aw", "jWe47VOj", "WTVN4IE7"], "apiKey": "i5GirKRs", "authoriseAsCapture": true, "blockedPaymentMethods": ["qgJFgeB3", "fqL2yt4v", "0YM9ooUL"], "clientKey": "TeYH3O4j", "dropInSettings": "6lTXn0br", "liveEndpointUrlPrefix": "5DZWdWr5", "merchantAccount": "zSxcRfSs", "notificationHmacKey": "Af1lppy7", "notificationPassword": "Xg5ykuFQ", "notificationUsername": "mUCQYCz0", "returnUrl": "tR5lWh6C", "settings": "Bz3Vep6H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'TI01ggrG' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'UpdateAdyenConfig' test.out

#- 245 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'ZE0YmwPc' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 245 'TestAdyenConfigById' test.out

#- 246 UpdateAliPayConfig
# body param: body
echo '{"appId": "USP3rWCM", "privateKey": "XPrJLVbN", "publicKey": "hkLWzxGp", "returnUrl": "HS2YYU9G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'BuQBoGyi' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'UpdateAliPayConfig' test.out

#- 247 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '9dfE4KUZ' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 247 'TestAliPayConfigById' test.out

#- 248 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "OSq6Wown", "secretKey": "FpxWX99s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id '7JcW49na' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'UpdateCheckoutConfig' test.out

#- 249 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'U0bhhIB5' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 249 'TestCheckoutConfigById' test.out

#- 250 UpdatePayPalConfig
# body param: body
echo '{"clientID": "BEjooMwf", "clientSecret": "p9csMKBC", "returnUrl": "c5DdHQOP", "webHookId": "WzxXnmYI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'oCJOjJB5' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'UpdatePayPalConfig' test.out

#- 251 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'aF6jepFj' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 251 'TestPayPalConfigById' test.out

#- 252 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["YeQHbsNL", "gDohIEvm", "Gze9845Q"], "publishableKey": "e6QpRe4e", "secretKey": "eQ4cldw0", "webhookSecret": "GlhS53wL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'Zi1ZuPmA' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'UpdateStripeConfig' test.out

#- 253 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'SYMvyOwZ' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 253 'TestStripeConfigById' test.out

#- 254 UpdateWxPayConfig
# body param: body
echo '{"appId": "BaX4f1KR", "key": "yAKzLwve", "mchid": "RaeTQY7G", "returnUrl": "GHWogGMV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'RiPFrQ37' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'UpdateWxPayConfig' test.out

#- 255 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'MQxWetP2' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 255 'UpdateWxPayConfigCert' test.out

#- 256 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'sNOhXzdW' \
    > test.out 2>&1
eval_tap $? 256 'TestWxPayConfigById' test.out

#- 257 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "K3c1LXZC", "flowCompletionUrl": "fweGtrDv", "merchantId": 88, "projectId": 30, "projectSecretKey": "69X3RZNd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'nWZt1wgM' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateXsollaConfig' test.out

#- 258 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'TfnkxGsK' \
    > test.out 2>&1
eval_tap $? 258 'TestXsollaConfigById' test.out

#- 259 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "SMALL", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'FgJeXGDW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateXsollaUIConfig' test.out

#- 260 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '32' \
    --namespace_ 'dZlOxddw' \
    --offset '20' \
    --region 'SnaAKWWG' \
    > test.out 2>&1
eval_tap $? 260 'QueryPaymentProviderConfig' test.out

#- 261 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "3onWzwiz", "region": "GsWW6ahk", "sandboxTaxJarApiToken": "PM4IkZNp", "specials": ["ALIPAY", "PAYPAL", "WALLET"], "taxJarApiToken": "I36Vgm9h", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'CreatePaymentProviderConfig' test.out

#- 262 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 262 'GetAggregatePaymentProviders' test.out

#- 263 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'NEDMhaiV' \
    --region 'NLRbzBIX' \
    > test.out 2>&1
eval_tap $? 263 'DebugMatchedPaymentProviderConfig' test.out

#- 264 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 264 'GetSpecialPaymentProviders' test.out

#- 265 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "PpYIQOmt", "region": "pwqMfBfr", "sandboxTaxJarApiToken": "C7cTUUPj", "specials": ["ADYEN", "XSOLLA", "STRIPE"], "taxJarApiToken": "3UtO2nqO", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'wVD2HoHr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'UpdatePaymentProviderConfig' test.out

#- 266 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'bkjxNnAA' \
    > test.out 2>&1
eval_tap $? 266 'DeletePaymentProviderConfig' test.out

#- 267 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 267 'GetPaymentTaxConfig' test.out

#- 268 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "AiQiACx0", "taxJarApiToken": "lCT79yaq", "taxJarEnabled": true, "taxJarProductCodesMapping": {"3Oqubisc": "reUJSQLy", "rULxVNPa": "U3XfnmGH", "aN2koyBc": "HP7T1ehv"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdatePaymentTaxConfig' test.out

#- 269 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'XvjhvijS' \
    --end 'rDOnYuBI' \
    --start 'aWkS0Bzh' \
    > test.out 2>&1
eval_tap $? 269 'SyncPaymentOrders' test.out

#- 270 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'eJK123UL' \
    --storeId 'LyVX4M8S' \
    > test.out 2>&1
eval_tap $? 270 'PublicGetRootCategories' test.out

#- 271 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'sWYYcjAG' \
    --storeId 'JiFguIhV' \
    > test.out 2>&1
eval_tap $? 271 'DownloadCategories' test.out

#- 272 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'fobTRZBg' \
    --namespace $AB_NAMESPACE \
    --language 'tZC5mW08' \
    --storeId 'Uj5jdvt7' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetCategory' test.out

#- 273 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'UHGz2rJm' \
    --namespace $AB_NAMESPACE \
    --language 'zjMSaDk0' \
    --storeId 'SWBMYdYp' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetChildCategories' test.out

#- 274 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'MvBM775T' \
    --namespace $AB_NAMESPACE \
    --language 'quMj2fv3' \
    --storeId 'h0oqvGjh' \
    > test.out 2>&1
eval_tap $? 274 'PublicGetDescendantCategories' test.out

#- 275 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 275 'PublicListCurrencies' test.out

#- 276 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language '8ZIjOWab' \
    --region '4viHrlY0' \
    --storeId 'TgA3C3Wj' \
    --appId '2mSllb9Y' \
    > test.out 2>&1
eval_tap $? 276 'PublicGetItemByAppId' test.out

#- 277 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --baseAppId 'mhl2eAnR' \
    --categoryPath 'knQkjVeW' \
    --features 'K044MkZr' \
    --itemType 'CODE' \
    --language 'u2H65j92' \
    --limit '99' \
    --offset '23' \
    --region 'z0WK9Emp' \
    --sortBy '["updatedAt", "updatedAt:asc", "updatedAt:desc"]' \
    --storeId 'HmGIxt5U' \
    --tags 'trsC8hc2' \
    > test.out 2>&1
eval_tap $? 277 'PublicQueryItems' test.out

#- 278 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'iJimhzZS' \
    --region 'GCAAOVqd' \
    --storeId 'qRmNw84O' \
    --sku 'yYvrmm1P' \
    > test.out 2>&1
eval_tap $? 278 'PublicGetItemBySku' test.out

#- 279 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'mmKtxSD1' \
    --region 'iXzTR0Nq' \
    --storeId 'vArBaLFL' \
    --itemIds 'XRvD5qcz' \
    > test.out 2>&1
eval_tap $? 279 'PublicBulkGetItems' test.out

#- 280 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["nybv9K55", "RdygnyRF", "8WytcvEC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'PublicValidateItemPurchaseCondition' test.out

#- 281 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'CODE' \
    --limit '37' \
    --offset '40' \
    --region 'X6COP2AY' \
    --storeId 'i5p607zB' \
    --keyword '6ggv5LT7' \
    --language 'JeLg5Wmd' \
    > test.out 2>&1
eval_tap $? 281 'PublicSearchItems' test.out

#- 282 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId '8n9junDD' \
    --namespace $AB_NAMESPACE \
    --language 'Y7W3IPGV' \
    --region '693217Ii' \
    --storeId 'ADcLa6k3' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetApp' test.out

#- 283 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'ZC2MH0mM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 283 'PublicGetItemDynamicData' test.out

#- 284 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'yLPyg9Nm' \
    --namespace $AB_NAMESPACE \
    --language 'FChr1Sbf' \
    --populateBundle 'true' \
    --region 's4G5pcMv' \
    --storeId 'U2XqC1An' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetItem' test.out

#- 285 GetPaymentCustomization
eval_tap 0 285 'GetPaymentCustomization # SKIP deprecated' test.out

#- 286 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "vI1S87Ow", "paymentProvider": "ALIPAY", "returnUrl": "sO3tbZG0", "ui": "2weQMS83", "zipCode": "WGTHFjo3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicGetPaymentUrl' test.out

#- 287 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'oKzGACnM' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetPaymentMethods' test.out

#- 288 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'l4SbK9PI' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetUnpaidPaymentOrder' test.out

#- 289 Pay
# body param: body
echo '{"token": "9mHWfECW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'GotmFb0X' \
    --paymentProvider 'STRIPE' \
    --zipCode 'R4hswuKb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'Pay' test.out

#- 290 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'IpnKjMVu' \
    > test.out 2>&1
eval_tap $? 290 'PublicCheckPaymentOrderPaidStatus' test.out

#- 291 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'ADYEN' \
    --region 'bttdZiFP' \
    > test.out 2>&1
eval_tap $? 291 'GetPaymentPublicConfig' test.out

#- 292 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'bQIcrbs1' \
    > test.out 2>&1
eval_tap $? 292 'PublicGetQRCode' test.out

#- 293 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'JiEYfzMh' \
    --foreinginvoice 'CUzUneKM' \
    --invoiceId '49gPY1ez' \
    --payload 'Jt0AWcYl' \
    --redirectResult 'mOtvuiEX' \
    --resultCode 'rQcFQV9L' \
    --sessionId 'jHDqgg8L' \
    --status 'WRVIiFw4' \
    --token '6i8lWwPe' \
    --type 'KMIq3xaU' \
    --userId 'akQCVayU' \
    --orderNo '5d8QQwBM' \
    --paymentOrderNo 'h15Gbqx8' \
    --paymentProvider 'STRIPE' \
    --returnUrl 'J9OcXYMW' \
    > test.out 2>&1
eval_tap $? 293 'PublicNormalizePaymentReturnUrl' test.out

#- 294 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'MMlTkrc0' \
    --paymentOrderNo 'YTAijPPb' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 294 'GetPaymentTaxValue' test.out

#- 295 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'PRBpLs7G' \
    > test.out 2>&1
eval_tap $? 295 'GetRewardByCode' test.out

#- 296 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic '1zytCgRf' \
    --limit '6' \
    --offset '77' \
    --sortBy '["rewardCode:asc", "namespace", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 296 'QueryRewards1' test.out

#- 297 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'thHwUm7j' \
    > test.out 2>&1
eval_tap $? 297 'GetReward1' test.out

#- 298 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 298 'PublicListStores' test.out

#- 299 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["1gXWbgrN", "081VrBRw", "rZgE9aC9"]' \
    --itemIds '["tvUqNKiS", "PNFuSq35", "JExxuvQo"]' \
    --skus '["2hLg2R5s", "DqkCLHwC", "Fgm1LQBp"]' \
    > test.out 2>&1
eval_tap $? 299 'PublicExistsAnyMyActiveEntitlement' test.out

#- 300 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'pj3rGQgl' \
    > test.out 2>&1
eval_tap $? 300 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 301 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'APP' \
    --itemId 'XP0mThA2' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 302 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'dneq89jt' \
    > test.out 2>&1
eval_tap $? 302 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 303 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["qrZaUWNs", "EQWi1Bu6", "BBdztYFD"]' \
    --itemIds '["k0zx87Yf", "6DzTlnRm", "w0IYFuZx"]' \
    --skus '["WGrzMGmB", "xLBVPRYo", "mAduJN5U"]' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetEntitlementOwnershipToken' test.out

#- 304 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'DtJR4MJy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 304 'PublicGetMyWallet' test.out

#- 305 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "LH2QoC59"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'hY9LFN4j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'SyncEpicGameDLC' test.out

#- 306 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 36}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'mNys2lQl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'PublicSyncPsnDlcInventory' test.out

#- 307 SyncSteamDLC
# body param: body
echo '{"appId": "swk4alum", "steamId": "UWwH7RRT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId '4tMkfkfS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'SyncSteamDLC' test.out

#- 308 SyncXboxDLC
# body param: body
echo '{"xstsToken": "BovK2Qwx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'IlSBG5IJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'SyncXboxDLC' test.out

#- 309 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'S1FS9vzE' \
    --appType 'DLC' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName '8yTVvli4' \
    --itemId '["opivf63Q", "YupgQUqy", "7z1D7YxG"]' \
    --limit '15' \
    --offset '53' \
    > test.out 2>&1
eval_tap $? 309 'PublicQueryUserEntitlements' test.out

#- 310 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'NAifgakI' \
    --appId 'PazpkEl3' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserAppEntitlementByAppId' test.out

#- 311 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'pInsMdtN' \
    --limit '64' \
    --offset '22' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 311 'PublicQueryUserEntitlementsByAppType' test.out

#- 312 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '4Fi7j4iA' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'DtJdkQvn' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserEntitlementByItemId' test.out

#- 313 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'Wc9OLzic' \
    --entitlementClazz 'MEDIA' \
    --sku 'pJlJRjoi' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserEntitlementBySku' test.out

#- 314 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'woeylLAr' \
    --appIds '["rzt3EVDv", "N5xvrJqk", "h1YcuU85"]' \
    --itemIds '["sPCRhWCR", "vzBCd6yi", "NHjpkZQU"]' \
    --skus '["BCX2vKzV", "J8CsAAOo", "ufEOiwRc"]' \
    > test.out 2>&1
eval_tap $? 314 'PublicExistsAnyUserActiveEntitlement' test.out

#- 315 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'WzXiydG4' \
    --appId '3rGswtY8' \
    > test.out 2>&1
eval_tap $? 315 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 316 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'UWwF6GY8' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'lkjEISSV' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 317 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'SqsM9L0J' \
    --ids '["khVrQqQZ", "nMc0nQj2", "2WaEYyCy"]' \
    > test.out 2>&1
eval_tap $? 317 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 318 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'LN7I32OZ' \
    --entitlementClazz 'CODE' \
    --sku 'k8L9Qxnj' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 319 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'SiTRttSJ' \
    --namespace $AB_NAMESPACE \
    --userId 'WLtl9bnO' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetUserEntitlement' test.out

#- 320 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["ojhd5ApO", "a93uJRFc", "EjcMMOGq"], "useCount": 36}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'UEbIH3Yq' \
    --namespace $AB_NAMESPACE \
    --userId 'hxCHmYGm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'PublicConsumeUserEntitlement' test.out

#- 321 PublicRedeemCode
# body param: body
echo '{"code": "1iheFASf", "language": "FUmW-811", "region": "ISN9M7TA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'YFDgfyWY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'PublicRedeemCode' test.out

#- 322 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "tPk", "productId": "KwuVteBT", "receiptData": "14XXqVnF", "region": "kVoM8uh3", "transactionId": "xyJM3j6r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'AUMeRkfg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicFulfillAppleIAPItem' test.out

#- 323 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "hfBQQPL2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'ZU3Omoko' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'SyncEpicGamesInventory' test.out

#- 324 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "kXCz", "orderId": "v5ODpwjA", "packageName": "GdL2KwGr", "productId": "SHKYMXlt", "purchaseTime": 67, "purchaseToken": "yyLnQlPK", "region": "K8V4KOka"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'CDa6YqoU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicFulfillGoogleIAPItem' test.out

#- 325 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "LItSh7k8", "price": 0.06458351951277752, "productId": "7IhlPKyV", "serviceLabel": 61}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId '20CHRSON' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'PublicReconcilePlayStationStore' test.out

#- 326 SyncStadiaEntitlement
# body param: body
echo '{"appId": "OP9Mds9F", "language": "kY", "region": "64sIGjp4", "stadiaPlayerId": "D76nwRI3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'fCJPRyTI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'SyncStadiaEntitlement' test.out

#- 327 SyncSteamInventory
# body param: body
echo '{"appId": "6clpOO8Y", "currencyCode": "9sasLIWt", "language": "cgTP-wewO", "price": 0.14340705410520038, "productId": "2Ee2fbgr", "region": "usY2kZrl", "steamId": "3JX9sbrP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'EdPKPTI8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'SyncSteamInventory' test.out

#- 328 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "AE9gX715", "language": "cnXS", "region": "K29yDmnf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'BpgxFmJQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'SyncTwitchDropsEntitlement' test.out

#- 329 SyncXboxInventory
# body param: body
echo '{"currencyCode": "PTt7Wvhh", "price": 0.7233987121705558, "productId": "2x3ypudC", "xstsToken": "pOUvJhQQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'q8Y2Dvxy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'SyncXboxInventory' test.out

#- 330 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'qwM2w7yf' \
    --itemId 'n0EqM8mn' \
    --limit '19' \
    --offset '31' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 330 'PublicQueryUserOrders' test.out

#- 331 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "jgegVioE", "discountedPrice": 11, "ext": {"IM1Y7qSC": {}, "5fAltrQT": {}, "JPfA03X6": {}}, "itemId": "KOtwH6xG", "language": "Dz", "price": 16, "quantity": 100, "region": "XaAwEfXL", "returnUrl": "9XO8gqWs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'xk7LXRWv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicCreateUserOrder' test.out

#- 332 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'rqrhAKTd' \
    --userId 'Dd6mqft1' \
    > test.out 2>&1
eval_tap $? 332 'PublicGetUserOrder' test.out

#- 333 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ZPmtlGq8' \
    --userId 'vvyM6YC3' \
    > test.out 2>&1
eval_tap $? 333 'PublicCancelUserOrder' test.out

#- 334 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'hWmoevOd' \
    --userId 'Hp87CneN' \
    > test.out 2>&1
eval_tap $? 334 'PublicGetUserOrderHistories' test.out

#- 335 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'MBmzD176' \
    --userId 'klk3K1yg' \
    > test.out 2>&1
eval_tap $? 335 'PublicDownloadUserOrderReceipt' test.out

#- 336 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId '99f1UlBX' \
    > test.out 2>&1
eval_tap $? 336 'PublicGetPaymentAccounts' test.out

#- 337 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id '7xSmeCtN' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'BxazFCoZ' \
    > test.out 2>&1
eval_tap $? 337 'PublicDeletePaymentAccount' test.out

#- 338 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'MgJ2P7fV' \
    --chargeStatus 'NEVER' \
    --itemId 'DNaqeObH' \
    --limit '41' \
    --offset '30' \
    --sku '6Mc5xmEp' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 338 'PublicQueryUserSubscriptions' test.out

#- 339 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "7g5jluoT", "itemId": "ERX3AYwI", "language": "PMM", "region": "ZmvvkKas", "returnUrl": "ro09OLfu", "source": "yWoibNYR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'aYErvhdG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'PublicSubscribeSubscription' test.out

#- 340 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'PLnEqBH9' \
    --itemId 'jNTILyFx' \
    > test.out 2>&1
eval_tap $? 340 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 341 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'cseEhFvS' \
    --userId 'nxqKQ1II' \
    > test.out 2>&1
eval_tap $? 341 'PublicGetUserSubscription' test.out

#- 342 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'UaEnAeHh' \
    --userId 'CdTvUptP' \
    > test.out 2>&1
eval_tap $? 342 'PublicChangeSubscriptionBillingAccount' test.out

#- 343 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "7bacJDhy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ZE66DN7v' \
    --userId 'Z2RHp7S7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'PublicCancelSubscription' test.out

#- 344 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'agOG2LfK' \
    --userId 'Hopayrdi' \
    --excludeFree 'false' \
    --limit '32' \
    --offset '74' \
    > test.out 2>&1
eval_tap $? 344 'PublicGetUserSubscriptionBillingHistories' test.out

#- 345 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'Ey5RaBHP' \
    --namespace $AB_NAMESPACE \
    --userId 'Qa06Vzxn' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetWallet' test.out

#- 346 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'U3zcGrHd' \
    --namespace $AB_NAMESPACE \
    --userId '9BSNk9fF' \
    --limit '33' \
    --offset '84' \
    > test.out 2>&1
eval_tap $? 346 'PublicListUserWalletTransactions' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE