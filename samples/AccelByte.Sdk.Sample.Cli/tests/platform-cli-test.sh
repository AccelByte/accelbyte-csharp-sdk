#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..362"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "crZDtOEG", "appType": "SOFTWARE", "baseAppId": "hGf0G0li", "boothName": "rpKOes5h", "boundItemIds": ["6jywhmrY", "mVXWnPDU", "F3y6DuV6"], "categoryPath": "yo81wkBG", "clazz": "sPSTxegK", "createdAt": "1995-03-21T00:00:00Z", "description": "5v3yGcU5", "displayOrder": 52, "entitlementType": "CONSUMABLE", "ext": {"GVQFlM9a": {}, "EkRrsKj6": {}, "FMwHA363": {}}, "features": ["BMGAycsC", "hhSEXZsZ", "H5F3Tuka"], "fresh": true, "images": [{"as": "E8leyBL1", "caption": "2ra0NXbd", "height": 55, "imageUrl": "N4uy25WV", "smallImageUrl": "b8mvMi7D", "width": 87}, {"as": "uDRTWpOE", "caption": "zDjKFBM0", "height": 35, "imageUrl": "8u4O8rgN", "smallImageUrl": "YZxHTJRl", "width": 51}, {"as": "15C55eb3", "caption": "8AowVIfP", "height": 4, "imageUrl": "YDPDFsgB", "smallImageUrl": "f7YyJy2T", "width": 65}], "itemId": "TXTvClUZ", "itemIds": ["eSJ2SdaD", "sLixfW2w", "D8jjMLPC"], "itemQty": {"w1uaXJok": 97, "IcXWY09c": 72, "lA1zrrWg": 47}, "itemType": "EXTENSION", "language": "pMFgpijU", "listable": true, "localExt": {"GJTHq9t6": {}, "Q0Wuk44J": {}, "ytzKsoAQ": {}}, "longDescription": "5b9C3LeD", "lootBoxConfig": {"rewardCount": 99, "rewards": [{"lootBoxItems": [{"count": 3, "itemId": "hgJwdE7s", "itemSku": "yQ2QEomh", "itemType": "EPxZZrCX"}, {"count": 75, "itemId": "a2b0KJwS", "itemSku": "5lzFzJgi", "itemType": "zn7WaCV1"}, {"count": 15, "itemId": "DCGIEXIm", "itemSku": "J6R7dLMc", "itemType": "aAY9ZSlX"}], "name": "QIYi4ulf", "odds": 0.1886862908366279, "type": "REWARD", "weight": 12}, {"lootBoxItems": [{"count": 71, "itemId": "rpDvR91B", "itemSku": "V6SJ3ifJ", "itemType": "S0OPWD0l"}, {"count": 19, "itemId": "TZWsSTB1", "itemSku": "Q8baxJwt", "itemType": "VeHVIg82"}, {"count": 47, "itemId": "SfSDtYmH", "itemSku": "wJDLjX8i", "itemType": "uYPUhcjq"}], "name": "7Lj7ynvB", "odds": 0.254471698389673, "type": "PROBABILITY_GROUP", "weight": 56}, {"lootBoxItems": [{"count": 70, "itemId": "kbt5Yp7Y", "itemSku": "StVk5ARN", "itemType": "rGj2DuR2"}, {"count": 40, "itemId": "j2tWBLbX", "itemSku": "fUbMyVy1", "itemType": "Bw3bVyWz"}, {"count": 64, "itemId": "GxtSo0Kg", "itemSku": "wbqprPvE", "itemType": "oZ59ptTR"}], "name": "lcBBNnp5", "odds": 0.2628071014716825, "type": "PROBABILITY_GROUP", "weight": 18}]}, "maxCount": 96, "maxCountPerUser": 78, "name": "UHBgtvMC", "namespace": "OJNveEiP", "optionBoxConfig": {"boxItems": [{"count": 83, "itemId": "RauqCv3u", "itemSku": "e4ZT2xbS", "itemType": "oZcpqR7h"}, {"count": 100, "itemId": "u9CSjzx2", "itemSku": "1RBMCDLc", "itemType": "ymByOv2S"}, {"count": 63, "itemId": "YlCwkvLD", "itemSku": "b46DpSoS", "itemType": "ljKGY3Li"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 13, "comparison": "includes", "name": "40WJl5b4", "predicateType": "EntitlementPredicate", "value": "1QdcYvgH", "values": ["aoUkH2QZ", "WWlLVEi1", "hzVeVhxT"]}, {"anyOf": 57, "comparison": "isLessThan", "name": "d04mnHXF", "predicateType": "SeasonPassPredicate", "value": "MDXosV0y", "values": ["m5nyFu0N", "Ui60ivUo", "6aDJTdpH"]}, {"anyOf": 92, "comparison": "includes", "name": "7xduKUOG", "predicateType": "SeasonTierPredicate", "value": "UKoxyPNE", "values": ["jsBFUYd6", "JtJtAFjP", "C2DgZQiT"]}]}, {"operator": "and", "predicates": [{"anyOf": 27, "comparison": "isLessThan", "name": "lJlMuB5X", "predicateType": "SeasonTierPredicate", "value": "9BnBy68M", "values": ["wa2ekq5Q", "V6r1BcDN", "RbVu9juC"]}, {"anyOf": 46, "comparison": "excludes", "name": "zbkOIfuK", "predicateType": "EntitlementPredicate", "value": "ieqEOZBl", "values": ["wn7d5Z07", "k1U3GIGT", "yaV08lMb"]}, {"anyOf": 28, "comparison": "excludes", "name": "k7pa3IJE", "predicateType": "SeasonTierPredicate", "value": "CFgj9ug1", "values": ["B3h1v7lU", "LeqVvwoV", "WAt9MT0F"]}]}, {"operator": "and", "predicates": [{"anyOf": 15, "comparison": "excludes", "name": "N3btG7qN", "predicateType": "EntitlementPredicate", "value": "bX3txiMn", "values": ["Z8fmQHS0", "xRBeVAV8", "F7Pb7D9j"]}, {"anyOf": 41, "comparison": "isGreaterThan", "name": "5A9e7q1E", "predicateType": "SeasonPassPredicate", "value": "ljf6cQyl", "values": ["EXfYDKvv", "gRgPnQsI", "Gy6lgMAU"]}, {"anyOf": 25, "comparison": "includes", "name": "MQDXE2zB", "predicateType": "EntitlementPredicate", "value": "7HPwgvwG", "values": ["YZhdinfv", "2AGHDYeJ", "m8rmGBoU"]}]}]}, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 20, "fixedTrialCycles": 17, "graceDays": 93}, "region": "EF7oLadi", "regionData": [{"currencyCode": "Vntm1V0D", "currencyNamespace": "ZDihMMuz", "currencyType": "REAL", "discountAmount": 55, "discountExpireAt": "1975-07-25T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1975-03-24T00:00:00Z", "discountedPrice": 39, "expireAt": "1976-12-16T00:00:00Z", "price": 72, "purchaseAt": "1996-05-06T00:00:00Z", "trialPrice": 62}, {"currencyCode": "6H1V5m5Q", "currencyNamespace": "4RUvwiCq", "currencyType": "VIRTUAL", "discountAmount": 17, "discountExpireAt": "1983-03-20T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1983-05-12T00:00:00Z", "discountedPrice": 29, "expireAt": "1977-08-16T00:00:00Z", "price": 64, "purchaseAt": "1981-05-02T00:00:00Z", "trialPrice": 56}, {"currencyCode": "CVU2A17Z", "currencyNamespace": "hnYRscyX", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1987-08-11T00:00:00Z", "discountPercentage": 89, "discountPurchaseAt": "1981-02-04T00:00:00Z", "discountedPrice": 63, "expireAt": "1973-11-10T00:00:00Z", "price": 52, "purchaseAt": "1983-05-19T00:00:00Z", "trialPrice": 54}], "seasonType": "PASS", "sku": "ghjSel0c", "stackable": true, "status": "INACTIVE", "tags": ["mxIQGmhH", "YT3AOd1B", "gQTmu9HF"], "targetCurrencyCode": "86ZjgQj9", "targetItemId": "3KvSWqdu", "targetNamespace": "p7LzQdko", "thumbnailUrl": "SCJRhNA1", "title": "JYQt2YmC", "updatedAt": "1994-05-29T00:00:00Z", "useCount": 21}, "namespace": "1dKei25b", "order": {"currency": {"currencyCode": "F86An7Ls", "currencySymbol": "8dZAPyqg", "currencyType": "REAL", "decimals": 89, "namespace": "7IJVFxHa"}, "ext": {"RgSNraHs": {}, "h4jh4UI0": {}, "UzYuH2w4": {}}, "free": false}, "source": "ACHIEVEMENT"}, "script": "sebAzUoF", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'lhD1wooX' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "rMtNrkM8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'q1yYN7y7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'RMIz2GpY' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "ck0nmDMV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'Vz11POxM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "PRe9ZnjU", "dryRun": true, "fulfillmentUrl": "XyRK2k2Z", "itemType": "SUBSCRIPTION", "purchaseConditionUrl": "JNKRIwD3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'fa7rCqny' \
    --itemType 'SUBSCRIPTION' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'W20BiL4O' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "La7heXBk", "dryRun": true, "fulfillmentUrl": "zCLo1U37", "purchaseConditionUrl": "IgqoWjzy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'OgrRUcIw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'Xn80jspP' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '95' \
    --name '6yrJWEF9' \
    --offset '81' \
    --tag 'fCand4Db' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "rw5cBtw2", "items": [{"extraSubscriptionDays": 47, "itemId": "YgPjL1TJ", "itemName": "1yP7QrJK", "quantity": 51}, {"extraSubscriptionDays": 28, "itemId": "vz7sSJ5F", "itemName": "2br9OTiv", "quantity": 68}, {"extraSubscriptionDays": 41, "itemId": "mrp4z6G2", "itemName": "wjW4lmMy", "quantity": 36}], "maxRedeemCountPerCampaignPerUser": 66, "maxRedeemCountPerCode": 37, "maxRedeemCountPerCodePerUser": 74, "maxSaleCount": 64, "name": "o71CJ5uS", "redeemEnd": "1998-04-05T00:00:00Z", "redeemStart": "1995-02-24T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["oiSoUZy4", "SIG36bjR", "u9azwRjq"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'BAD9sdki' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "lKOGz5kB", "items": [{"extraSubscriptionDays": 4, "itemId": "Pb7fx1WT", "itemName": "35SYhtdy", "quantity": 57}, {"extraSubscriptionDays": 84, "itemId": "9q7Tl6mo", "itemName": "Wr14bYL2", "quantity": 82}, {"extraSubscriptionDays": 19, "itemId": "HgdvaSsV", "itemName": "Ki7uSI67", "quantity": 30}], "maxRedeemCountPerCampaignPerUser": 87, "maxRedeemCountPerCode": 71, "maxRedeemCountPerCodePerUser": 6, "maxSaleCount": 18, "name": "c5jFztmU", "redeemEnd": "1979-05-11T00:00:00Z", "redeemStart": "1984-04-25T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["LvYgOtUw", "QPuzG6pH", "gFM1QbMv"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'Ibzud6FV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'hYasjedn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'emsbFdXy' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "xzfIbG7K", "localizationDisplayNames": {"EBIVh6MA": "7H846tm7", "sdJaIY6T": "WsdtIqCK", "RCrf2IDq": "jpEmerTl"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'Q1Hsakq8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId '8kalatJf' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'HoQMxXuZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'KqFhfApa' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"CxYmfNn3": "5AUTB3vr", "v2xdCXgl": "qCVMK9Ut", "nXPKRUO4": "F6jDXOQ0"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'rx84yIWy' \
    --namespace $AB_NAMESPACE \
    --storeId '7OiUKZuS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'T7jnCkQZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'ndnw9jRP' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath '63LKbe5Q' \
    --namespace $AB_NAMESPACE \
    --storeId 'KlAM219b' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'j3j0aK0g' \
    --namespace $AB_NAMESPACE \
    --storeId 'fDV6VKwD' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '0w3eZk6D' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '74' \
    --code '0HnDxVyY' \
    --limit '34' \
    --offset '95' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 91}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'SCG3lAPM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'SYO69vlA' \
    --namespace $AB_NAMESPACE \
    --batchNo '8' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId '6F8nERrX' \
    --namespace $AB_NAMESPACE \
    --batchNo '9' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'P6Zteck0' \
    --namespace $AB_NAMESPACE \
    --batchNo '86' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'BZk10Clv' \
    --namespace $AB_NAMESPACE \
    --code 'D7qOcNQX' \
    --limit '79' \
    --offset '42' \
    --userId '8q2XeqJD' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'xhQSWLqM' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'deri2Zs5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'GQXhxDnP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "9jdKRGrm", "currencySymbol": "WMktYYuN", "currencyType": "VIRTUAL", "decimals": 65, "localizationDescriptions": {"iGoVUUSi": "QjKeQoXm", "KwdvFYGl": "sGZ8MXq8", "e9sSmWAL": "S4dzsoLW"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"uhNNBzSj": "lh6p9aHs", "dVQSJXee": "WuhFNtni", "bNAh1cXf": "luPIs76X"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'fpFRpPkA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'sv0QKJ12' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'sUTuyHze' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'ZR4hhS5O' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "TykmXyX8", "rewards": [{"currency": {"currencyCode": "tGtpJ0hh", "namespace": "BpUyPX39"}, "item": {"itemId": "jaDkCseH", "itemSku": "WcGvhQ4y", "itemType": "v2m7Fm5t"}, "quantity": 4, "type": "CURRENCY"}, {"currency": {"currencyCode": "pWu5pUpX", "namespace": "AXC5rn4E"}, "item": {"itemId": "j303jtOB", "itemSku": "qphWnauC", "itemType": "UMe50h9c"}, "quantity": 25, "type": "CURRENCY"}, {"currency": {"currencyCode": "LYY8vb89", "namespace": "pBXAM2DY"}, "item": {"itemId": "q3DHIxVR", "itemSku": "O0ZbXts8", "itemType": "rWweAVU3"}, "quantity": 30, "type": "CURRENCY"}]}, {"id": "dJ0cooDV", "rewards": [{"currency": {"currencyCode": "3p5x6ubE", "namespace": "e4c5GC3R"}, "item": {"itemId": "EaeOBytJ", "itemSku": "rvNZ3WgP", "itemType": "coOvVI9F"}, "quantity": 25, "type": "ITEM"}, {"currency": {"currencyCode": "5xFo9Osm", "namespace": "X7o084Es"}, "item": {"itemId": "nwQS4dkx", "itemSku": "TTyz7eae", "itemType": "uqQMfgHv"}, "quantity": 83, "type": "CURRENCY"}, {"currency": {"currencyCode": "iWOGpELp", "namespace": "AB1NL5MN"}, "item": {"itemId": "Psm3h7S8", "itemSku": "NaGldowS", "itemType": "w2DhMqqb"}, "quantity": 90, "type": "ITEM"}]}, {"id": "AasUNl1G", "rewards": [{"currency": {"currencyCode": "obH9wMGE", "namespace": "fBoXWvEs"}, "item": {"itemId": "P47XaDfY", "itemSku": "9vPo8RVD", "itemType": "aGs0nQ6t"}, "quantity": 72, "type": "CURRENCY"}, {"currency": {"currencyCode": "uhmC27Kk", "namespace": "ekCMGiQW"}, "item": {"itemId": "CSBcYyoS", "itemSku": "oszgbmqw", "itemType": "pTRaO8VK"}, "quantity": 15, "type": "CURRENCY"}, {"currency": {"currencyCode": "P6obBl2v", "namespace": "aYsgy6dh"}, "item": {"itemId": "uC8OCmUW", "itemSku": "1yGXWDCY", "itemType": "XwQmwgcb"}, "quantity": 22, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"UhH6dIBK": "2Nuyo73A", "VgBstoc8": "4bzgTNNQ", "FpvLfcOG": "zC7mET05"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"falvUWlp": "PdAq68OZ", "yx9gfgIy": "jmpFt2nA", "rV2nTiWx": "XG14rwi0"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"vLIiUnhy": "cIxindGj", "oacMUoEw": "7J7YEs1t", "Z3nxWO3B": "qioIDJ9q"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName '7bfznzdp' \
    --itemId '["hGNjWdwZ", "TyQQWSuE", "EfTqwbvd"]' \
    --limit '12' \
    --offset '76' \
    --userId 'hex8fXwi' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'WyLgQO34' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '81' \
    --offset '77' \
    --status 'SUCCESS' \
    --userId 'ZqkUSz5Q' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "nL87sAAe", "password": "11cgNdly"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "THYecOWc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "OLZAtTUR", "serviceAccountId": "1fs8EKbM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "BPz44VYu", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"7vwxEbLh": "oxTXcRou", "cfgvqd8z": "WfCqW9ES", "CBQAwILZ": "YkAJ3jET"}}, {"itemIdentity": "gVsD08Ij", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"ymH3hUtj": "3sPnSDp9", "ZMdSFB2Y": "zuDFIriz", "xkTX4SxV": "LTl32TbV"}}, {"itemIdentity": "LvZ9VMFM", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"0e9D6yhd": "yzX6sjUd", "uXKLZs0r": "OiiHG5fO", "dT45yrCj": "uGAoLp2U"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "B0bn2Bkf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "3A3KCMbQ", "publisherAuthenticationKey": "wkriMHbc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "4DZ0mvLp", "clientSecret": "ldThDb2g", "organizationId": "xZ5Nf5YM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "7l43X5S3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'Z37XK10t' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'TBh56BIj' \
    --itemId 'eLTeVHoq' \
    --itemType 'OPTIONBOX' \
    --endTime 'SrDjdMQv' \
    --startTime '4WHNx7uo' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'YSluQbrS' \
    --itemId 'pUTUg0a9' \
    --itemType 'APP' \
    --endTime 'QTJFtxIg' \
    --startTime 'evoDPQfH' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "oVGJmSzm", "targetItemId": "nKJfaOfQ", "targetNamespace": "eaN7w2wW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'C1KeQvDK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "SvJr5jmf", "appType": "DLC", "baseAppId": "2nNdTpIF", "boothName": "ys0kgAd5", "categoryPath": "cn31NbJD", "clazz": "kQM71578", "displayOrder": 98, "entitlementType": "DURABLE", "ext": {"ZCRdNyd8": {}, "csuWi1uJ": {}, "98E1ubg7": {}}, "features": ["nkfJe6h5", "G3NSHPSY", "Br8xRDWD"], "images": [{"as": "DCh4VAdv", "caption": "2LG0FLhA", "height": 94, "imageUrl": "xiBm8avK", "smallImageUrl": "58mXcek3", "width": 66}, {"as": "iLJghSBT", "caption": "64gHu2Ms", "height": 15, "imageUrl": "ayqXXDMm", "smallImageUrl": "mONDTd59", "width": 12}, {"as": "eNXNz57c", "caption": "rRNTSAY3", "height": 8, "imageUrl": "akVvhlpP", "smallImageUrl": "h3dODZQq", "width": 6}], "itemIds": ["N66Sai6e", "U6VcIEE5", "mdk1BncR"], "itemQty": {"P16B573s": 93, "BosNyU7n": 76, "yfJrbZNL": 0}, "itemType": "SEASON", "listable": true, "localizations": {"VSS5VRT9": {"description": "NA0OtCm2", "localExt": {"0d8Jbxg8": {}, "vfHCw6ph": {}, "vwQuJVq9": {}}, "longDescription": "5rb33xqr", "title": "0gY03iP0"}, "99S55CHm": {"description": "1QJ5uxeF", "localExt": {"Xz2SPt3Z": {}, "to8W3dwd": {}, "gtA01k2w": {}}, "longDescription": "84WUniZp", "title": "PnLctX7y"}, "qegLoLgi": {"description": "Ma9ju8OR", "localExt": {"zYpomeTD": {}, "5zDfIMF9": {}, "hLTzu01h": {}}, "longDescription": "kz6FBHFR", "title": "kONy2OQZ"}}, "lootBoxConfig": {"rewardCount": 31, "rewards": [{"lootBoxItems": [{"count": 72, "itemId": "PLq4Uyg4", "itemSku": "Cf9DkyNw", "itemType": "MUhWmZAP"}, {"count": 80, "itemId": "VHIJ7tHJ", "itemSku": "j4pDpuLk", "itemType": "g6jFycF0"}, {"count": 73, "itemId": "A3rUvIR5", "itemSku": "w0bUb9y7", "itemType": "Djm3BbVW"}], "name": "wPn9rFcJ", "odds": 0.9796985284101501, "type": "REWARD", "weight": 18}, {"lootBoxItems": [{"count": 70, "itemId": "FJIwdpQt", "itemSku": "oZAtDeHZ", "itemType": "WFEtmQDd"}, {"count": 39, "itemId": "DLgcqK86", "itemSku": "bLvZqBe9", "itemType": "yzjJMfzB"}, {"count": 16, "itemId": "nZAmDf3M", "itemSku": "hqFkIbu1", "itemType": "8pLsraN4"}], "name": "qmsSoX1s", "odds": 0.1613282246029656, "type": "REWARD", "weight": 1}, {"lootBoxItems": [{"count": 45, "itemId": "BAOJUGn2", "itemSku": "zp1bNvC9", "itemType": "A4yRNYLP"}, {"count": 30, "itemId": "szxsv2vH", "itemSku": "n56Lj7a9", "itemType": "gd6gImoL"}, {"count": 80, "itemId": "n7ASfZRq", "itemSku": "jLQ54FsX", "itemType": "M87KtfYm"}], "name": "PWAM0QWE", "odds": 0.16139965624945252, "type": "REWARD_GROUP", "weight": 67}]}, "maxCount": 36, "maxCountPerUser": 75, "name": "KKAfvAs1", "optionBoxConfig": {"boxItems": [{"count": 74, "itemId": "aWTJc9tZ", "itemSku": "zwndobgY", "itemType": "kHiAVBtq"}, {"count": 27, "itemId": "R6tNxHJ8", "itemSku": "GvX53cHw", "itemType": "8Q4nzW72"}, {"count": 94, "itemId": "mCEzUAGe", "itemSku": "ug2I5tlX", "itemType": "fXsOlceB"}]}, "purchasable": false, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 49, "fixedTrialCycles": 52, "graceDays": 21}, "regionData": {"3w1bfvfl": [{"currencyCode": "8opd2Iqo", "currencyNamespace": "xgEUtvSO", "currencyType": "VIRTUAL", "discountAmount": 0, "discountExpireAt": "1974-10-10T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1986-04-10T00:00:00Z", "discountedPrice": 4, "expireAt": "1987-07-01T00:00:00Z", "price": 31, "purchaseAt": "1992-06-06T00:00:00Z", "trialPrice": 5}, {"currencyCode": "3YgkowUh", "currencyNamespace": "2GoBGsSQ", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1976-07-26T00:00:00Z", "discountPercentage": 50, "discountPurchaseAt": "1990-08-29T00:00:00Z", "discountedPrice": 13, "expireAt": "1992-05-03T00:00:00Z", "price": 64, "purchaseAt": "1980-09-27T00:00:00Z", "trialPrice": 52}, {"currencyCode": "c4ktSlyE", "currencyNamespace": "zsj7LN6R", "currencyType": "VIRTUAL", "discountAmount": 97, "discountExpireAt": "1973-12-09T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1991-03-18T00:00:00Z", "discountedPrice": 3, "expireAt": "1978-01-21T00:00:00Z", "price": 29, "purchaseAt": "1996-03-20T00:00:00Z", "trialPrice": 81}], "7L1QcO5g": [{"currencyCode": "AN7tCsX8", "currencyNamespace": "nhvbTa8H", "currencyType": "REAL", "discountAmount": 19, "discountExpireAt": "1985-11-01T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1984-03-04T00:00:00Z", "discountedPrice": 64, "expireAt": "1997-03-07T00:00:00Z", "price": 65, "purchaseAt": "1984-12-20T00:00:00Z", "trialPrice": 9}, {"currencyCode": "J0ePsQfr", "currencyNamespace": "bYMraR7O", "currencyType": "VIRTUAL", "discountAmount": 22, "discountExpireAt": "1986-07-21T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1973-09-23T00:00:00Z", "discountedPrice": 75, "expireAt": "1976-03-01T00:00:00Z", "price": 59, "purchaseAt": "1979-05-09T00:00:00Z", "trialPrice": 4}, {"currencyCode": "boJU03Px", "currencyNamespace": "zP6wmko3", "currencyType": "VIRTUAL", "discountAmount": 52, "discountExpireAt": "1995-08-07T00:00:00Z", "discountPercentage": 79, "discountPurchaseAt": "1997-02-10T00:00:00Z", "discountedPrice": 25, "expireAt": "1979-05-23T00:00:00Z", "price": 45, "purchaseAt": "1993-01-08T00:00:00Z", "trialPrice": 66}], "v2ueTc6W": [{"currencyCode": "LbAGDbEF", "currencyNamespace": "mSeuthjI", "currencyType": "VIRTUAL", "discountAmount": 89, "discountExpireAt": "1987-11-10T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1974-05-31T00:00:00Z", "discountedPrice": 47, "expireAt": "1996-03-21T00:00:00Z", "price": 30, "purchaseAt": "1977-04-28T00:00:00Z", "trialPrice": 49}, {"currencyCode": "yEl0DUE5", "currencyNamespace": "iMGHefk3", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1992-10-08T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1981-04-07T00:00:00Z", "discountedPrice": 26, "expireAt": "1972-09-08T00:00:00Z", "price": 79, "purchaseAt": "1978-03-12T00:00:00Z", "trialPrice": 63}, {"currencyCode": "UyW8kqIH", "currencyNamespace": "weJcyNjI", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1972-01-02T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1972-12-30T00:00:00Z", "discountedPrice": 22, "expireAt": "1981-02-02T00:00:00Z", "price": 5, "purchaseAt": "1979-08-30T00:00:00Z", "trialPrice": 36}]}, "seasonType": "TIER", "sku": "FIgYSGRH", "stackable": true, "status": "ACTIVE", "tags": ["EOv8VXHc", "sK7rxbrB", "Rqqx2y4Z"], "targetCurrencyCode": "u2kzQUSX", "targetNamespace": "Y1GDMVAq", "thumbnailUrl": "aSDkpqEz", "useCount": 98}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'UnYbxsFK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'KBZ0jbz1' \
    --appId 'MMyYElYn' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --availableDate '6cN3dpyv' \
    --baseAppId '3P5nyBpE' \
    --categoryPath 'fur50O7U' \
    --features 'ClJD0x5j' \
    --includeSubCategoryItem 'true' \
    --itemType 'SUBSCRIPTION' \
    --limit '73' \
    --offset '70' \
    --region 'vX0aX9pT' \
    --sortBy '["updatedAt:asc", "name:desc"]' \
    --storeId 'w8B7ehn2' \
    --tags 'tZ5Lg9A6' \
    --targetNamespace 'sBnu3gJO' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["3AOhZNn4", "mto59cYS", "O2SgWOsk"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'ZcBJfAXT' \
    --sku 'f3GRnNhz' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'sI971dTq' \
    --populateBundle 'false' \
    --region 'YbpVJonw' \
    --storeId '2xv4NI3K' \
    --sku 'CEuuAwgJ' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'EM7bOzTl' \
    --sku 'GXOstJs7' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["h0uxrign", "SsCjcC5A", "lyouQuB5"]' \
    --storeId 'a1q4epxh' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'xvJ91RH5' \
    --region 'pcRfut36' \
    --storeId 'LYa9NXBe' \
    --itemIds 'FCg0zJgl' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["gjb9r4HX", "H0ABZZ1X", "LLeUloU1"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'iLEm8dar' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'SEASON' \
    --limit '44' \
    --offset '60' \
    --sortBy 'UOSJw7hE' \
    --storeId 'QqXl7I0f' \
    --keyword 'fXkUW7Zu' \
    --language '9TSo5OVO' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '35' \
    --offset '44' \
    --sortBy '["name:asc", "name", "updatedAt:desc"]' \
    --storeId 'a4fsbnpU' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'dUGFgTNd' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 't6L0IWTf' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "JIvKQaYz", "appType": "SOFTWARE", "baseAppId": "WiLAKMPW", "boothName": "Uf560YTA", "categoryPath": "nBkKFeHU", "clazz": "TpBI1LUv", "displayOrder": 41, "entitlementType": "CONSUMABLE", "ext": {"TjUiqGFH": {}, "GUCp7LLA": {}, "8021b3Jp": {}}, "features": ["c27ZfpxK", "gQu5mCnj", "gQgTMTov"], "images": [{"as": "0RgTZ8lR", "caption": "G2vVybTw", "height": 97, "imageUrl": "3waxju7l", "smallImageUrl": "kS9OEcdR", "width": 56}, {"as": "ADvfadHN", "caption": "VvAqC4GT", "height": 23, "imageUrl": "vLWRq90u", "smallImageUrl": "Jv9TLg7y", "width": 37}, {"as": "daIR4Vo5", "caption": "MQcDQfg0", "height": 80, "imageUrl": "Ym3w7Rqv", "smallImageUrl": "SbT2BPd9", "width": 89}], "itemIds": ["X3hb2WtA", "GNzF2743", "q9lL3mLJ"], "itemQty": {"Pj7zZhK4": 3, "JvspMhDc": 21, "dlyRyDYB": 20}, "itemType": "MEDIA", "listable": false, "localizations": {"brFoVTLW": {"description": "DEJEaOgo", "localExt": {"jgNTIint": {}, "4TSxzP8a": {}, "SiEd2ZxZ": {}}, "longDescription": "MEQ4sfd2", "title": "06mJ6w8V"}, "R5vYePyF": {"description": "Bpg0Smj8", "localExt": {"eZ4lhDzo": {}, "OKl7rjGc": {}, "YaFvH780": {}}, "longDescription": "NLckUybg", "title": "YuFkG9dP"}, "6HcFbBWA": {"description": "LWRbcjor", "localExt": {"rPCjJvYs": {}, "s0dnpkrT": {}, "D5WKIhA3": {}}, "longDescription": "tIaGqAix", "title": "U26LWxpU"}}, "lootBoxConfig": {"rewardCount": 87, "rewards": [{"lootBoxItems": [{"count": 59, "itemId": "8OAIsdCy", "itemSku": "LLzBZzhS", "itemType": "Vaj9x77o"}, {"count": 30, "itemId": "NconNUxc", "itemSku": "PyWCrZTs", "itemType": "Iv7Yl8LH"}, {"count": 12, "itemId": "A8ML55C3", "itemSku": "xlK4OedR", "itemType": "XVlrkHet"}], "name": "AVbdqSTV", "odds": 0.010191742015226657, "type": "REWARD_GROUP", "weight": 61}, {"lootBoxItems": [{"count": 56, "itemId": "imiqDLsK", "itemSku": "QTV2ZyY5", "itemType": "xEQP0mjl"}, {"count": 3, "itemId": "ohHHYywy", "itemSku": "t0nBWVT7", "itemType": "Ss6npFIN"}, {"count": 64, "itemId": "GMp41fXe", "itemSku": "WUivDCJ6", "itemType": "QHlYW5cP"}], "name": "74cGBHmS", "odds": 0.12866192328746218, "type": "REWARD_GROUP", "weight": 91}, {"lootBoxItems": [{"count": 12, "itemId": "xm9Cs2Fk", "itemSku": "Hg6McTdP", "itemType": "deZ4ovCD"}, {"count": 36, "itemId": "UPnJtaRt", "itemSku": "GSEOo29Y", "itemType": "kesRrJbb"}, {"count": 62, "itemId": "F8ALKmFf", "itemSku": "a90l9dXR", "itemType": "hVbBYKc2"}], "name": "b3r18B1X", "odds": 0.07774077257209244, "type": "PROBABILITY_GROUP", "weight": 71}]}, "maxCount": 88, "maxCountPerUser": 16, "name": "2JhgIsO0", "optionBoxConfig": {"boxItems": [{"count": 48, "itemId": "hisvhKpa", "itemSku": "KFuQOxdp", "itemType": "u30SYA5L"}, {"count": 90, "itemId": "mQcIb8SI", "itemSku": "TY2UIVoq", "itemType": "G1QOngaW"}, {"count": 9, "itemId": "SqjpbeC9", "itemSku": "3TY92Gfd", "itemType": "dvwZGxvJ"}]}, "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 72, "fixedTrialCycles": 71, "graceDays": 85}, "regionData": {"6IouM2f4": [{"currencyCode": "bs7RVgo8", "currencyNamespace": "W4ohGEYs", "currencyType": "REAL", "discountAmount": 38, "discountExpireAt": "1989-05-30T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1994-08-16T00:00:00Z", "discountedPrice": 80, "expireAt": "1976-06-08T00:00:00Z", "price": 42, "purchaseAt": "1980-01-25T00:00:00Z", "trialPrice": 38}, {"currencyCode": "NLOCIgZA", "currencyNamespace": "9sbUPpGG", "currencyType": "REAL", "discountAmount": 86, "discountExpireAt": "1988-08-14T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1972-11-11T00:00:00Z", "discountedPrice": 38, "expireAt": "1987-02-08T00:00:00Z", "price": 20, "purchaseAt": "1986-09-13T00:00:00Z", "trialPrice": 65}, {"currencyCode": "vwrLiEjF", "currencyNamespace": "uy4zYUzF", "currencyType": "REAL", "discountAmount": 98, "discountExpireAt": "1992-02-05T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1984-10-16T00:00:00Z", "discountedPrice": 74, "expireAt": "1986-07-22T00:00:00Z", "price": 12, "purchaseAt": "1977-03-29T00:00:00Z", "trialPrice": 75}], "kEuepIwm": [{"currencyCode": "NIhoQpPX", "currencyNamespace": "6wz2kPnm", "currencyType": "REAL", "discountAmount": 27, "discountExpireAt": "1998-07-17T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1999-06-21T00:00:00Z", "discountedPrice": 80, "expireAt": "1990-03-12T00:00:00Z", "price": 100, "purchaseAt": "1999-12-01T00:00:00Z", "trialPrice": 85}, {"currencyCode": "2NaXU9Qo", "currencyNamespace": "6qNEjp3D", "currencyType": "REAL", "discountAmount": 71, "discountExpireAt": "1993-01-25T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1996-09-02T00:00:00Z", "discountedPrice": 43, "expireAt": "1976-12-02T00:00:00Z", "price": 51, "purchaseAt": "1979-08-15T00:00:00Z", "trialPrice": 71}, {"currencyCode": "QZz1P7bx", "currencyNamespace": "MsXUsX6I", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1983-06-06T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1978-12-07T00:00:00Z", "discountedPrice": 79, "expireAt": "1993-05-10T00:00:00Z", "price": 4, "purchaseAt": "1997-10-26T00:00:00Z", "trialPrice": 62}], "WBnZCF2g": [{"currencyCode": "9sj5KaFp", "currencyNamespace": "cUNVUUoc", "currencyType": "REAL", "discountAmount": 99, "discountExpireAt": "1988-02-21T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1988-08-26T00:00:00Z", "discountedPrice": 45, "expireAt": "1980-10-04T00:00:00Z", "price": 7, "purchaseAt": "1991-01-21T00:00:00Z", "trialPrice": 49}, {"currencyCode": "RtYZKC5n", "currencyNamespace": "8krQc8d8", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1994-09-26T00:00:00Z", "discountPercentage": 81, "discountPurchaseAt": "1992-10-24T00:00:00Z", "discountedPrice": 41, "expireAt": "1997-06-14T00:00:00Z", "price": 98, "purchaseAt": "1981-08-15T00:00:00Z", "trialPrice": 7}, {"currencyCode": "8aT22XE2", "currencyNamespace": "Zo22E2ym", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1985-10-08T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1997-07-18T00:00:00Z", "discountedPrice": 89, "expireAt": "1989-06-24T00:00:00Z", "price": 47, "purchaseAt": "1987-01-20T00:00:00Z", "trialPrice": 50}]}, "seasonType": "PASS", "sku": "SAvfcg0p", "stackable": false, "status": "INACTIVE", "tags": ["FMvxmRM1", "CY8Fj4Uo", "PNMBKZPr"], "targetCurrencyCode": "SCaP4xSZ", "targetNamespace": "38yQIC8U", "thumbnailUrl": "twc74kDm", "useCount": 71}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'pSbcX8zP' \
    --namespace $AB_NAMESPACE \
    --storeId 'aqKYTlzC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'm5lru7AC' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'f5aSmIIJ' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 33, "orderNo": "eLifH0hu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'ruwYcBFd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'MBf2hUHc' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'vVXiyq3a' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "sdvcSBnm", "previewUrl": "Cvp8wnpv", "thumbnailUrl": "xGPxpiPq", "type": "image", "url": "txvyfbRQ", "videoSource": "vimeo"}, {"alt": "ucGSvK2h", "previewUrl": "k2lDqRjl", "thumbnailUrl": "uNTPgasD", "type": "video", "url": "eYWv3MCS", "videoSource": "vimeo"}, {"alt": "JoqMWCD3", "previewUrl": "EX1mi06D", "thumbnailUrl": "Xk0mxdQr", "type": "image", "url": "BGl79Msw", "videoSource": "youtube"}], "developer": "Pj5JZzFz", "forumUrl": "T3jawnbb", "genres": ["Sports", "Casual", "Strategy"], "localizations": {"tMENjcvc": {"announcement": "7CuGFMl1", "slogan": "wSoDJejq"}, "wX9qQpD9": {"announcement": "hDAC17Xu", "slogan": "is4dKgxK"}, "0ARAqGbC": {"announcement": "FvycxCFm", "slogan": "wfYTmbsy"}}, "platformRequirements": {"UKL390aZ": [{"additionals": "RHuKd6ij", "directXVersion": "vlRKGTOM", "diskSpace": "WBuOzfMT", "graphics": "2g0bzo1v", "label": "zDxxGY6p", "osVersion": "MorntZok", "processor": "6CbKB4zu", "ram": "I81Rm5fM", "soundCard": "TZMfVOSV"}, {"additionals": "CEpeCxMr", "directXVersion": "NR3zKwXN", "diskSpace": "4xML7xAX", "graphics": "8OJPSS0G", "label": "Xd4lKa27", "osVersion": "vhEfyL7J", "processor": "yGczkoON", "ram": "0jxvchcM", "soundCard": "4FScWC4h"}, {"additionals": "RhN8EfLV", "directXVersion": "yq0vU3Rz", "diskSpace": "8Ps6Jp1T", "graphics": "cGYLysYO", "label": "cCKhNu8q", "osVersion": "8pOb8yWw", "processor": "QHuDrCJd", "ram": "c7D6MLfL", "soundCard": "PKX3NlaQ"}], "Scy5Uv99": [{"additionals": "RhunLNFG", "directXVersion": "8CRXnmiL", "diskSpace": "pmRBX0x5", "graphics": "QmLGH7Wj", "label": "KZtgYn2L", "osVersion": "ND0Pu8f9", "processor": "ohDqxnhL", "ram": "CqTHf8rG", "soundCard": "E82Avdqq"}, {"additionals": "zAzXf0vK", "directXVersion": "3rX2DY2a", "diskSpace": "wYhsBZ4r", "graphics": "SpF5PDoP", "label": "IBkYzgiJ", "osVersion": "ActISAg8", "processor": "VeNFD86f", "ram": "R1T8mffc", "soundCard": "mdoqGv7z"}, {"additionals": "bVxtfV8e", "directXVersion": "RVYYviB6", "diskSpace": "SUIqXdMr", "graphics": "C9hwVw0Q", "label": "bFNAyB5A", "osVersion": "8SE2B5D0", "processor": "v9lfazgT", "ram": "WcjJEaSK", "soundCard": "fwjy4Acg"}], "5dxq0xbt": [{"additionals": "Bqhz91X8", "directXVersion": "JEJXeNHQ", "diskSpace": "CjiNZfbQ", "graphics": "VOhVopEq", "label": "ngTVZCA5", "osVersion": "zDqKigdk", "processor": "BRckML5r", "ram": "d9AhwnL3", "soundCard": "YOgUHVBK"}, {"additionals": "2ELYpqqZ", "directXVersion": "MahfyaNk", "diskSpace": "uoURPOWn", "graphics": "R5OE6Uy1", "label": "4emmbkbT", "osVersion": "j3ayKKl4", "processor": "fNztBP15", "ram": "ugURQt6F", "soundCard": "wSVETZSy"}, {"additionals": "5fUHDxd1", "directXVersion": "RjVYJB99", "diskSpace": "vwsb93HL", "graphics": "GskvT1ZB", "label": "ilbrYfDu", "osVersion": "CDkXe9Y2", "processor": "7kUg3efM", "ram": "7ji1QNcu", "soundCard": "IxEVeXby"}]}, "platforms": ["Android", "IOS", "Linux"], "players": ["LocalCoop", "Coop", "CrossPlatformMulti"], "primaryGenre": "Sports", "publisher": "mcupDOAX", "releaseDate": "1995-04-29T00:00:00Z", "websiteUrl": "ex6IZDKK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'p9AvThY7' \
    --namespace $AB_NAMESPACE \
    --storeId 'P2xJ0RcW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'keIvcQ73' \
    --namespace $AB_NAMESPACE \
    --storeId 'GIi9k83E' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId '6dpdqUVV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'loit5jzg' \
    --namespace $AB_NAMESPACE \
    --storeId 'an2eutk9' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'cC6AxNxM' \
    --itemId 'QP28sXNx' \
    --namespace $AB_NAMESPACE \
    --storeId 'ddIwgeLq' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'g3oi5ocQ' \
    --itemId 'gXeRnUOX' \
    --namespace $AB_NAMESPACE \
    --storeId 'bVrSu6HZ' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId '9jKfqa4c' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'U47CEqEv' \
    --populateBundle 'false' \
    --region 'VpSDQXIc' \
    --storeId 'm3PTf7DD' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 96, "comparison": "isGreaterThan", "name": "gUn4uiJo", "predicateType": "EntitlementPredicate", "value": "KUvg7fOz", "values": ["gGv0C7SR", "oKBa02gT", "lEj00ANN"]}, {"anyOf": 88, "comparison": "isGreaterThan", "name": "qMXGVO7C", "predicateType": "EntitlementPredicate", "value": "EJzTQTqY", "values": ["AmUNtiXz", "C6DQeb5h", "7VjHnpfP"]}, {"anyOf": 84, "comparison": "isLessThanOrEqual", "name": "t7VHQcQV", "predicateType": "EntitlementPredicate", "value": "w6b1ht50", "values": ["oZcmAx0l", "psOBxTC8", "d3Av3iv4"]}]}, {"operator": "or", "predicates": [{"anyOf": 94, "comparison": "is", "name": "ELNi7qAk", "predicateType": "SeasonTierPredicate", "value": "I6E8xIGA", "values": ["59gcChuz", "2Wo5G7r3", "Y8FW1SXV"]}, {"anyOf": 78, "comparison": "is", "name": "ynXFabqK", "predicateType": "SeasonPassPredicate", "value": "Md0JjkTU", "values": ["HyAOtTH2", "c7jtuacL", "u2oOSd7U"]}, {"anyOf": 69, "comparison": "excludes", "name": "k6dF526k", "predicateType": "EntitlementPredicate", "value": "oACwqkjk", "values": ["NeTVVsft", "JD6TBaBK", "0mlbeHmv"]}]}, {"operator": "or", "predicates": [{"anyOf": 48, "comparison": "isNot", "name": "9Axvczgq", "predicateType": "SeasonTierPredicate", "value": "IrmViMdm", "values": ["zfOcrjJy", "ahgCMdt5", "ZbHZxeij"]}, {"anyOf": 1, "comparison": "excludes", "name": "ttoVMvIq", "predicateType": "SeasonTierPredicate", "value": "jSLKK6g7", "values": ["BZkAS4Q7", "y1RqtcWP", "C7yRcFmv"]}, {"anyOf": 37, "comparison": "isNot", "name": "aILXM4FY", "predicateType": "EntitlementPredicate", "value": "blbc5sBF", "values": ["iMxWmx29", "ULwuRCT6", "UT3iMNe3"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'qzvUlnsc' \
    --namespace $AB_NAMESPACE \
    --storeId 'TCmg9Usv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "BHzFq2D6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'Q8GOHuSE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '67' \
    --name 'tHYhL2vb' \
    --offset '36' \
    --tag 'm6XzhOEG' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "qCYJM1I7", "name": "KZ7S6vKI", "status": "ACTIVE", "tags": ["UvLSUoNF", "m3DgzTPv", "HJfiFV6Z"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
eval_tap 0 112 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'l2Q2zd6q' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "pHv9s1ni", "name": "THhuqnKH", "status": "ACTIVE", "tags": ["6SjZWBCw", "NnKtqF20", "LrYvo4dx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'TKsWJKM1' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'MN2lYcMs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId '4MrDvUZH' \
    --namespace $AB_NAMESPACE \
    --limit '99' \
    --offset '4' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'poAdMVFS' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'rzPQ7Kk4' \
    --limit '76' \
    --offset '37' \
    --orderNos '["46KVVKjB", "GeyUEbMx", "L1K6F1R1"]' \
    --sortBy 'aK4lrJbA' \
    --startTime 'x4UUjNcx' \
    --status 'CHARGEBACK_REVERSED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'mEuv3T6M' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "mf0nnETy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'grtBhVoi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "ysu2VRWk", "privateKey": "fOz3D88X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'wrAJggnr' \
    --externalId 'tcLAGirC' \
    --limit '61' \
    --notificationSource 'WALLET' \
    --notificationType 'CoAz1OR2' \
    --offset '50' \
    --paymentOrderNo '895Nulru' \
    --startDate 'CrUr71ZJ' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'hzCCGfWV' \
    --limit '86' \
    --offset '28' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "6hzuMP3K", "currencyNamespace": "Uixz4PBe", "customParameters": {"s2y0b4E7": {}, "nww9K1BI": {}, "f5VDfd0k": {}}, "description": "5AoRoeJ1", "extOrderNo": "531WSTym", "extUserId": "mqTOa3Vu", "itemType": "SUBSCRIPTION", "language": "jkh", "metadata": {"6C3esqiX": "gElGNk8j", "W1OUskk2": "f8gPBzga", "yB4PrvnX": "K6nd4Qda"}, "notifyUrl": "FmTVRlTh", "omitNotification": true, "platform": "3RdlBYCm", "price": 44, "recurringPaymentOrderNo": "kL5ResvK", "region": "WLuHSYdV", "returnUrl": "7pNsAsnM", "sandbox": true, "sku": "GOdsh81a", "subscriptionId": "DWr9BJ0u", "targetNamespace": "XByzWyNg", "targetUserId": "PdYpKBDl", "title": "wZ2JaiHc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId '9mUQfYMk' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'iX4lSInq' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "RT9GO8lJ", "paymentMethod": "KzST3mp8", "paymentProvider": "CHECKOUT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'eaKbq0xH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "c6s7hcem"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'J8vQmuBV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 18, "currencyCode": "Si9LTziI", "notifyType": "REFUND", "paymentProvider": "WXPAY", "salesTax": 25, "vat": 42}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'D6quT8rL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'symiKwhw' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Steam", "Nintendo", "Other"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 CreateReward
# body param: body
echo '{"description": "a5WIbnw8", "eventTopic": "pPRAFiGN", "maxAwarded": 26, "maxAwardedPerUser": 71, "namespaceExpression": "j3smo37O", "rewardCode": "TIf94SDS", "rewardConditions": [{"condition": "1ujtDQhc", "conditionName": "liKwRh8O", "eventName": "lHXEdq6g", "rewardItems": [{"duration": 38, "itemId": "5TVOIlMw", "quantity": 29}, {"duration": 96, "itemId": "HUbP4Um9", "quantity": 89}, {"duration": 22, "itemId": "HXpYDwQp", "quantity": 42}]}, {"condition": "QwcMI3kc", "conditionName": "1WgCpiXV", "eventName": "3UJFYHC7", "rewardItems": [{"duration": 58, "itemId": "vLL8KjRX", "quantity": 43}, {"duration": 93, "itemId": "grKWZVCe", "quantity": 61}, {"duration": 98, "itemId": "i7mccEOY", "quantity": 76}]}, {"condition": "ucd1kiBI", "conditionName": "6SOyTNbA", "eventName": "LkqxYgEm", "rewardItems": [{"duration": 15, "itemId": "HNKQRRvZ", "quantity": 73}, {"duration": 77, "itemId": "a5qsbhbL", "quantity": 29}, {"duration": 29, "itemId": "gyP04u50", "quantity": 17}]}], "userIdExpression": "urzOeSuU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateReward' test.out

#- 137 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'Dcb1rBKZ' \
    --limit '36' \
    --offset '98' \
    --sortBy '["rewardCode:desc", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 137 'QueryRewards' test.out

#- 138 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'ExportRewards' test.out

#- 139 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 139 'ImportRewards' test.out

#- 140 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'HUfTsUHj' \
    > test.out 2>&1
eval_tap $? 140 'GetReward' test.out

#- 141 UpdateReward
# body param: body
echo '{"description": "JehzdrJ5", "eventTopic": "4HxUFa8N", "maxAwarded": 43, "maxAwardedPerUser": 19, "namespaceExpression": "beG78pU0", "rewardCode": "dxnSjWio", "rewardConditions": [{"condition": "iGSbJawn", "conditionName": "nInK6MHZ", "eventName": "NKjLnBE2", "rewardItems": [{"duration": 93, "itemId": "hi4W9iC6", "quantity": 50}, {"duration": 97, "itemId": "i1IHVKFz", "quantity": 33}, {"duration": 95, "itemId": "o4wz67Bk", "quantity": 61}]}, {"condition": "muNzhchq", "conditionName": "VxfBUmi1", "eventName": "jwmXXUvX", "rewardItems": [{"duration": 35, "itemId": "C7LEhqnk", "quantity": 84}, {"duration": 13, "itemId": "w7kJtugk", "quantity": 77}, {"duration": 29, "itemId": "k0fnFB8N", "quantity": 71}]}, {"condition": "MRAFHfd6", "conditionName": "G7RH1Pik", "eventName": "0OzdqsXA", "rewardItems": [{"duration": 98, "itemId": "prGrPfRr", "quantity": 71}, {"duration": 37, "itemId": "rgFYTwHB", "quantity": 0}, {"duration": 66, "itemId": "5eJ6zbh2", "quantity": 91}]}], "userIdExpression": "Mzq7jnDt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId '5XOtsYR3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateReward' test.out

#- 142 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'aWYbGbTC' \
    > test.out 2>&1
eval_tap $? 142 'DeleteReward' test.out

#- 143 CheckEventCondition
# body param: body
echo '{"payload": {"DVstSrPG": {}, "B0b6TcRu": {}, "4OOuZkKz": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'FJOUkuTd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CheckEventCondition' test.out

#- 144 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "GglTNpmx", "userId": "o2MCUV7J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'HgU3FZmb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteRewardConditionRecord' test.out

#- 145 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'ListStores' test.out

#- 146 CreateStore
# body param: body
echo '{"defaultLanguage": "2XdozDW7", "defaultRegion": "75Z1Ridf", "description": "AQ7BgkDv", "supportedLanguages": ["VAXmXoIN", "ztIcQxUM", "nlrHlFyZ"], "supportedRegions": ["0FcZR9Ex", "IGlI10NA", "1aWFBF6r"], "title": "nvp2Ej6C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreateStore' test.out

#- 147 ImportStore
eval_tap 0 147 'ImportStore # SKIP deprecated' test.out

#- 148 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'GetPublishedStore' test.out

#- 149 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'DeletePublishedStore' test.out

#- 150 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 150 'GetPublishedStoreBackup' test.out

#- 151 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'RollbackPublishedStore' test.out

#- 152 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId '0fJkW3Sh' \
    > test.out 2>&1
eval_tap $? 152 'GetStore' test.out

#- 153 UpdateStore
# body param: body
echo '{"defaultLanguage": "ueESAr7A", "defaultRegion": "UzD2hluN", "description": "xu91UDtc", "supportedLanguages": ["2MC5gMqD", "2aVKZvOE", "urfJYSls"], "supportedRegions": ["2iWViKxR", "e6JTKLri", "IvJFjbkl"], "title": "PRm3QPsN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'XAhezESq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateStore' test.out

#- 154 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'HmkSF3ba' \
    > test.out 2>&1
eval_tap $? 154 'DeleteStore' test.out

#- 155 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 's0XBGzus' \
    --action 'DELETE' \
    --itemSku '1BGXmZ0V' \
    --itemType 'SEASON' \
    --limit '71' \
    --offset '44' \
    --selected 'true' \
    --sortBy '["updatedAt:asc", "createdAt:desc", "updatedAt:desc"]' \
    --status 'PUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'h7KiiSej' \
    --updatedAtStart 'ybmdrktP' \
    > test.out 2>&1
eval_tap $? 155 'QueryChanges' test.out

#- 156 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'imkBbtAC' \
    > test.out 2>&1
eval_tap $? 156 'PublishAll' test.out

#- 157 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'eZjoOKj0' \
    > test.out 2>&1
eval_tap $? 157 'PublishSelected' test.out

#- 158 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'bKamnBXf' \
    > test.out 2>&1
eval_tap $? 158 'SelectAllRecords' test.out

#- 159 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'PjGeo2BC' \
    --action 'DELETE' \
    --itemSku 'MDNL17XJ' \
    --itemType 'EXTENSION' \
    --type 'ITEM' \
    --updatedAtEnd 'DznULRh9' \
    --updatedAtStart 'j37qNMdE' \
    > test.out 2>&1
eval_tap $? 159 'GetStatistic' test.out

#- 160 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '6rHTTBaV' \
    > test.out 2>&1
eval_tap $? 160 'UnselectAllRecords' test.out

#- 161 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'pI1NQtKS' \
    --namespace $AB_NAMESPACE \
    --storeId 'UnOtxJVE' \
    > test.out 2>&1
eval_tap $? 161 'SelectRecord' test.out

#- 162 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'LFh5iIBR' \
    --namespace $AB_NAMESPACE \
    --storeId 'P2iTpFtM' \
    > test.out 2>&1
eval_tap $? 162 'UnselectRecord' test.out

#- 163 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId '1FRocH77' \
    --targetStoreId 'rHytaoBu' \
    > test.out 2>&1
eval_tap $? 163 'CloneStore' test.out

#- 164 ExportStore
eval_tap 0 164 'ExportStore # SKIP deprecated' test.out

#- 165 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId 'pgb7iYPp' \
    --limit '53' \
    --offset '16' \
    --sku 'MjbHgqPk' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    --userId 'AmNgDbto' \
    > test.out 2>&1
eval_tap $? 165 'QuerySubscriptions' test.out

#- 166 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ibw4976P' \
    > test.out 2>&1
eval_tap $? 166 'RecurringChargeSubscription' test.out

#- 167 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'Va4poPWs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetTicketDynamic' test.out

#- 168 DecreaseTicketSale
# body param: body
echo '{"orderNo": "i90JASSf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'yld9ZJ9l' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'DecreaseTicketSale' test.out

#- 169 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'yb58ylH5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'GetTicketBoothID' test.out

#- 170 IncreaseTicketSale
# body param: body
echo '{"count": 88, "orderNo": "wFsw3Xel"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'qmEayuwR' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'IncreaseTicketSale' test.out

#- 171 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "16r1NpyC", "value": 26}, {"id": "7tjuwbKj", "value": 78}, {"id": "JLYX38KJ", "value": 23}], "steamUserId": "IxHqtZXE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'iW6AkWAt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'UnlockSteamUserAchievement' test.out

#- 172 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'vD2nsYd5' \
    --xboxUserId 'GLKx2CiG' \
    > test.out 2>&1
eval_tap $? 172 'GetXblUserAchievements' test.out

#- 173 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "Rwpt3M9V", "percentComplete": 22}, {"id": "kttBPQG9", "percentComplete": 4}, {"id": "N0ZsmwDN", "percentComplete": 32}], "serviceConfigId": "rajzbR7Y", "titleId": "hX1PhxA8", "xboxUserId": "SKyJrNTY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'CxAUTLgP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'UpdateXblUserAchievement' test.out

#- 174 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'SyXGjs1K' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeCampaign' test.out

#- 175 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '16NpMIq5' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeEntitlement' test.out

#- 176 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'VtR1DG64' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizeFulfillment' test.out

#- 177 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId '7c22LbST' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeIntegration' test.out

#- 178 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '3ZtQ7T30' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizeOrder' test.out

#- 179 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId '0VRkIqti' \
    > test.out 2>&1
eval_tap $? 179 'AnonymizePayment' test.out

#- 180 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'S1l7ZTPE' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeSubscription' test.out

#- 181 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'wdpO3q6m' \
    > test.out 2>&1
eval_tap $? 181 'AnonymizeWallet' test.out

#- 182 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '8SEBb7XI' \
    --activeOnly 'true' \
    --appType 'GAME' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'ScFVcgcM' \
    --features '["xTLBWU9N", "Z9MMLE8i", "dVYsClDn"]' \
    --itemId '["pshu7QQw", "FP8LhKmP", "xP7SVHM5"]' \
    --limit '41' \
    --offset '70' \
    > test.out 2>&1
eval_tap $? 182 'QueryUserEntitlements' test.out

#- 183 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1978-07-04T00:00:00Z", "grantedCode": "ey0HRflE", "itemId": "zYW7ol1J", "itemNamespace": "Tcx685LK", "language": "vI-dUmc-dq", "quantity": 29, "region": "SO7t2ekT", "source": "REFERRAL_BONUS", "startDate": "1985-12-21T00:00:00Z", "storeId": "jbrucsCL"}, {"endDate": "1988-08-23T00:00:00Z", "grantedCode": "LeGyP4kv", "itemId": "ltFam9qL", "itemNamespace": "kaas0ebl", "language": "Da-578", "quantity": 66, "region": "6LZxLPw6", "source": "REFERRAL_BONUS", "startDate": "1986-04-06T00:00:00Z", "storeId": "Orppvhwx"}, {"endDate": "1984-10-18T00:00:00Z", "grantedCode": "hPZduEI8", "itemId": "lucIgg4A", "itemNamespace": "CSxMeBh3", "language": "tC-ky", "quantity": 55, "region": "CFqUm6jn", "source": "REFERRAL_BONUS", "startDate": "1985-12-09T00:00:00Z", "storeId": "krZl2Fc8"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'UkHP7jIX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'GrantUserEntitlement' test.out

#- 184 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'nATVyqKm' \
    --activeOnly 'false' \
    --appId 'YVXoOCQn' \
    > test.out 2>&1
eval_tap $? 184 'GetUserAppEntitlementByAppId' test.out

#- 185 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'tyseL6Gd' \
    --activeOnly 'true' \
    --limit '90' \
    --offset '78' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 185 'QueryUserEntitlementsByAppType' test.out

#- 186 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'rQuhZQhj' \
    --activeOnly 'false' \
    --entitlementClazz 'MEDIA' \
    --itemId 'zIGVWKTu' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlementByItemId' test.out

#- 187 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'nKarsAt3' \
    --activeOnly 'false' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'DEM0zdIJ' \
    > test.out 2>&1
eval_tap $? 187 'GetUserEntitlementBySku' test.out

#- 188 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'm8mFe8TL' \
    --appIds '["kmqiwGkw", "Bfx6FuyS", "mdGzbyO2"]' \
    --itemIds '["Ux0ej2F7", "Tlr9Xayw", "Rhi9E5nv"]' \
    --skus '["R6R2Mf4o", "MzUNYXdo", "KuIgGNXb"]' \
    > test.out 2>&1
eval_tap $? 188 'ExistsAnyUserActiveEntitlement' test.out

#- 189 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'VBfjA9nu' \
    --itemIds '["oR5HWGsL", "08tvVkmq", "T3jltj6E"]' \
    > test.out 2>&1
eval_tap $? 189 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 190 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'jMJLcK33' \
    --appId '2ep6dLUS' \
    > test.out 2>&1
eval_tap $? 190 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 191 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '2ddtoszM' \
    --entitlementClazz 'LOOTBOX' \
    --itemId 'qmTddjRg' \
    > test.out 2>&1
eval_tap $? 191 'GetUserEntitlementOwnershipByItemId' test.out

#- 192 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'x9exqdr2' \
    --ids '["cFAvdeKJ", "TtlT5qWx", "8xMXqwaU"]' \
    > test.out 2>&1
eval_tap $? 192 'GetUserEntitlementOwnershipByItemIds' test.out

#- 193 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'Pmr8l3tB' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'KNVcfs4k' \
    > test.out 2>&1
eval_tap $? 193 'GetUserEntitlementOwnershipBySku' test.out

#- 194 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'WUhExPyH' \
    --entitlementIds '7DenfCmK' \
    > test.out 2>&1
eval_tap $? 194 'RevokeUserEntitlements' test.out

#- 195 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'Ew6mxVkQ' \
    --namespace $AB_NAMESPACE \
    --userId 'qF7s74Wy' \
    > test.out 2>&1
eval_tap $? 195 'GetUserEntitlement' test.out

#- 196 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1971-01-17T00:00:00Z", "nullFieldList": ["lVae0bBE", "lF1s3BwR", "JiBmGCZQ"], "startDate": "1986-06-12T00:00:00Z", "status": "CONSUMED", "useCount": 40}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'GgxsuFW2' \
    --namespace $AB_NAMESPACE \
    --userId 'b90fPjua' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'UpdateUserEntitlement' test.out

#- 197 ConsumeUserEntitlement
# body param: body
echo '{"options": ["8BM67wo9", "aGfEPshG", "49YuZImv"], "requestId": "VI6OaIKm", "useCount": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'NTxb4JP2' \
    --namespace $AB_NAMESPACE \
    --userId '1rqd0lPf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'ConsumeUserEntitlement' test.out

#- 198 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'Q8YX29bq' \
    --namespace $AB_NAMESPACE \
    --userId 'by1YjJS1' \
    > test.out 2>&1
eval_tap $? 198 'DisableUserEntitlement' test.out

#- 199 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'YHGhRGYq' \
    --namespace $AB_NAMESPACE \
    --userId '9Cew3BZM' \
    > test.out 2>&1
eval_tap $? 199 'EnableUserEntitlement' test.out

#- 200 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'BHfFlrlq' \
    --namespace $AB_NAMESPACE \
    --userId 'vFXQM1gX' \
    > test.out 2>&1
eval_tap $? 200 'GetUserEntitlementHistories' test.out

#- 201 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'jZxD8wfy' \
    --namespace $AB_NAMESPACE \
    --userId '0J2uqMsL' \
    > test.out 2>&1
eval_tap $? 201 'RevokeUserEntitlement' test.out

#- 202 FulfillItem
# body param: body
echo '{"duration": 88, "endDate": "1989-09-05T00:00:00Z", "itemId": "uL6QH8oT", "itemSku": "iSmmbfAV", "language": "fNU7Pg8z", "order": {"currency": {"currencyCode": "i7F2aCl8", "currencySymbol": "WdmqY9Wl", "currencyType": "REAL", "decimals": 18, "namespace": "RNVcmXa1"}, "ext": {"AmpV9ayn": {}, "m5EgUTuU": {}, "MYoZiCLU": {}}, "free": false}, "orderNo": "dJV6j4xN", "origin": "GooglePlay", "quantity": 34, "region": "zB7ugvPc", "source": "GIFT", "startDate": "1982-11-06T00:00:00Z", "storeId": "Nk3NbETW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId '1UXjNe00' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'FulfillItem' test.out

#- 203 RedeemCode
# body param: body
echo '{"code": "tcpJl0lF", "language": "iaGA_Uk", "region": "25cfum1z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'LNsblnI1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'RedeemCode' test.out

#- 204 FulfillRewards
# body param: body
echo '{"origin": "System", "rewards": [{"currency": {"currencyCode": "4CZmk4sY", "namespace": "xzeYgvRY"}, "item": {"itemId": "Sskw9H80", "itemSku": "jiNXjms5", "itemType": "cl4ow5RM"}, "quantity": 74, "type": "ITEM"}, {"currency": {"currencyCode": "lXg9ttbG", "namespace": "sz07CGDm"}, "item": {"itemId": "YudP6cAx", "itemSku": "7ENQYMYN", "itemType": "PxMjtZFC"}, "quantity": 68, "type": "CURRENCY"}, {"currency": {"currencyCode": "wD7F8AjT", "namespace": "PCE6ntQJ"}, "item": {"itemId": "TYD9XtwX", "itemSku": "SusdtERz", "itemType": "DzVQvGan"}, "quantity": 26, "type": "ITEM"}], "source": "DLC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'xnyleG94' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'FulfillRewards' test.out

#- 205 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '6LyUx11k' \
    --endTime 'YgZv7twV' \
    --limit '29' \
    --offset '50' \
    --productId 'pVUrg2cM' \
    --startTime 'aUByHojO' \
    --status 'FAILED' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 205 'QueryUserIAPOrders' test.out

#- 206 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'MjGcNOJA' \
    > test.out 2>&1
eval_tap $? 206 'QueryAllUserIAPOrders' test.out

#- 207 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId '9G1hHotO' \
    --endTime 'yOxAUii2' \
    --limit '16' \
    --offset '24' \
    --startTime '4lsrBXv1' \
    --status 'SUCCESS' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 207 'QueryUserIAPConsumeHistory' test.out

#- 208 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "Mpe_Xukp", "productId": "mwxKibxe", "region": "lVYv5moI", "type": "XBOX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'RZ4bQCpB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'MockFulfillIAPItem' test.out

#- 209 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'zGCY2fsV' \
    --itemId '4FnDStIK' \
    --limit '3' \
    --offset '43' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 209 'QueryUserOrders' test.out

#- 210 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "G3ttoioZ", "currencyNamespace": "8VoxbZnE", "discountedPrice": 84, "ext": {"l5LW0YHc": {}, "LZiJHnhU": {}, "f1Ovi2hy": {}}, "itemId": "0xcNObAf", "language": "xaElVj4N", "options": {"skipPriceValidation": true}, "platform": "IOS", "price": 74, "quantity": 87, "region": "gTt1SL8t", "returnUrl": "1dcP7umN", "sandbox": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'crDsIS8U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'AdminCreateUserOrder' test.out

#- 211 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId '7A3aQodf' \
    --itemId 'H56ABqfX' \
    > test.out 2>&1
eval_tap $? 211 'CountOfPurchasedItem' test.out

#- 212 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'FgAgQOQh' \
    --userId 'ar8Di1VF' \
    > test.out 2>&1
eval_tap $? 212 'GetUserOrder' test.out

#- 213 UpdateUserOrderStatus
# body param: body
echo '{"status": "FULFILL_FAILED", "statusReason": "Ok0xCCNr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'AAQo6ulY' \
    --userId 'h6vPsLgC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'UpdateUserOrderStatus' test.out

#- 214 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'v1B63qBn' \
    --userId 'qtY1ou5p' \
    > test.out 2>&1
eval_tap $? 214 'FulfillUserOrder' test.out

#- 215 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'H24rFQSb' \
    --userId 'eQsxo5Tv' \
    > test.out 2>&1
eval_tap $? 215 'GetUserOrderGrant' test.out

#- 216 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'YM5LG50Z' \
    --userId 'Y2Wu1OEp' \
    > test.out 2>&1
eval_tap $? 216 'GetUserOrderHistories' test.out

#- 217 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "UIZChGf4"}, "authorisedTime": "1976-09-08T00:00:00Z", "chargebackReversedTime": "1981-11-24T00:00:00Z", "chargebackTime": "1975-02-13T00:00:00Z", "chargedTime": "1978-06-29T00:00:00Z", "createdTime": "1990-12-05T00:00:00Z", "currency": {"currencyCode": "JsrqUpfh", "currencySymbol": "bW0FNzka", "currencyType": "REAL", "decimals": 47, "namespace": "BMGh1s46"}, "customParameters": {"wYYrmg4S": {}, "n67FaFCC": {}, "a8uWf78L": {}}, "extOrderNo": "Q3ZghltH", "extTxId": "q26wr968", "extUserId": "l2kSrnP3", "issuedAt": "1992-11-10T00:00:00Z", "metadata": {"Qu8zeju7": "RygBMIGi", "sq05nnWd": "Jn8wp3ac", "OGSt5HFd": "FEqjvHmR"}, "namespace": "RPm00Rcj", "nonceStr": "C9RjBTWO", "paymentMethod": "7pCKBH0c", "paymentMethodFee": 57, "paymentOrderNo": "cjfVQdie", "paymentProvider": "PAYPAL", "paymentProviderFee": 39, "paymentStationUrl": "db6xytXy", "price": 19, "refundedTime": "1991-01-23T00:00:00Z", "salesTax": 51, "sandbox": false, "sku": "LPcm5aj0", "status": "CHARGED", "statusReason": "NPgTICsx", "subscriptionId": "HhFcMwd9", "subtotalPrice": 78, "targetNamespace": "rcJyLrdS", "targetUserId": "e6nfM3cP", "tax": 56, "totalPrice": 42, "totalTax": 18, "txEndTime": "1972-12-01T00:00:00Z", "type": "ErTvQPoF", "userId": "2VQlBhp7", "vat": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo '164hr5o8' \
    --userId '03fQNM4Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'ProcessUserOrderNotification' test.out

#- 218 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'av6PbSNV' \
    --userId 'DzZfPlKb' \
    > test.out 2>&1
eval_tap $? 218 'DownloadUserOrderReceipt' test.out

#- 219 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "C0XS412A", "currencyNamespace": "iAZji843", "customParameters": {"tq1PF5Kd": {}, "eFxZgKtW": {}, "373vAuah": {}}, "description": "BGY6fAce", "extOrderNo": "wZZpdIxW", "extUserId": "OzC7BhNH", "itemType": "CODE", "language": "hRw", "metadata": {"lICvx12R": "9MKzsoP7", "MSSZvojb": "ZiHc1ZQH", "xlx2cj2m": "Xut91NWX"}, "notifyUrl": "J60cuwxg", "omitNotification": false, "platform": "Th3cFY1h", "price": 48, "recurringPaymentOrderNo": "MPoYN6jp", "region": "KfkbIorj", "returnUrl": "b49IDmXZ", "sandbox": true, "sku": "n6ixeo15", "subscriptionId": "wU67kyaR", "title": "a7iwF2RX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'dyRQ8eRm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'CreateUserPaymentOrder' test.out

#- 220 RefundUserPaymentOrder
# body param: body
echo '{"description": "GqEptnVW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Dv6O9NE4' \
    --userId 'yPYIdkTz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'RefundUserPaymentOrder' test.out

#- 221 ApplyUserRedemption
# body param: body
echo '{"code": "WMOhkYNx", "orderNo": "VwmiPN5E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'eRYEwm6V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'ApplyUserRedemption' test.out

#- 222 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'NBEdSP5B' \
    --chargeStatus 'SETUP' \
    --itemId '1jq4tRYQ' \
    --limit '97' \
    --offset '41' \
    --sku 'NNBZL64f' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 222 'QueryUserSubscriptions' test.out

#- 223 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'woXDzI6I' \
    --excludeSystem 'true' \
    --limit '87' \
    --offset '72' \
    --subscriptionId 'JIXplHfl' \
    > test.out 2>&1
eval_tap $? 223 'GetUserSubscriptionActivities' test.out

#- 224 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 46, "itemId": "KAgNXYcp", "language": "aTVL6Ub1", "reason": "64nMpWZl", "region": "h39Ol5TM", "source": "uG1yrriw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'RZPI3IP7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'PlatformSubscribeSubscription' test.out

#- 225 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'cLvzWJXn' \
    --itemId 'Vsy35N4x' \
    > test.out 2>&1
eval_tap $? 225 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 226 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '7hNbDwHT' \
    --userId '9gUKQOoK' \
    > test.out 2>&1
eval_tap $? 226 'GetUserSubscription' test.out

#- 227 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BLOUb4iR' \
    --userId '89ndphbd' \
    > test.out 2>&1
eval_tap $? 227 'DeleteUserSubscription' test.out

#- 228 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "k3DjW7VG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '07xUUXS4' \
    --userId 'H7umlQ0Q' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'CancelSubscription' test.out

#- 229 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 86, "reason": "sFlKiyBM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '82yWfchg' \
    --userId 'RQoX72Gu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'GrantDaysToSubscription' test.out

#- 230 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'SsxLL7OS' \
    --userId '3RgznY4S' \
    --excludeFree 'true' \
    --limit '81' \
    --offset '7' \
    > test.out 2>&1
eval_tap $? 230 'GetUserSubscriptionBillingHistories' test.out

#- 231 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "Cpdf6PRd"}, "authorisedTime": "1998-01-24T00:00:00Z", "chargebackReversedTime": "1997-01-13T00:00:00Z", "chargebackTime": "1988-11-10T00:00:00Z", "chargedTime": "1992-01-31T00:00:00Z", "createdTime": "1991-05-22T00:00:00Z", "currency": {"currencyCode": "xqFSNZBP", "currencySymbol": "XkJj1B1W", "currencyType": "VIRTUAL", "decimals": 5, "namespace": "4u0qFDlr"}, "customParameters": {"XG2AvU8B": {}, "2ZZ86Y0w": {}, "2yKhLZnI": {}}, "extOrderNo": "uedfFMVA", "extTxId": "NDrf8DuU", "extUserId": "oOsFceeJ", "issuedAt": "1991-05-15T00:00:00Z", "metadata": {"6k4oan7B": "qSpDBIiE", "SBO1AF75": "7uCJOsBn", "qqKPpRLS": "yo4AsvDt"}, "namespace": "dDFzutUG", "nonceStr": "LTzaqKR7", "paymentMethod": "EGnHnuQu", "paymentMethodFee": 24, "paymentOrderNo": "gz7Qr4CS", "paymentProvider": "PAYPAL", "paymentProviderFee": 70, "paymentStationUrl": "VFpDZbV0", "price": 35, "refundedTime": "1990-01-08T00:00:00Z", "salesTax": 78, "sandbox": false, "sku": "julEat2K", "status": "AUTHORISED", "statusReason": "jYMcHFYk", "subscriptionId": "HIZbgDKB", "subtotalPrice": 88, "targetNamespace": "at9ECZZH", "targetUserId": "5sN4ykdI", "tax": 95, "totalPrice": 8, "totalTax": 12, "txEndTime": "1974-08-24T00:00:00Z", "type": "iGn7DPpe", "userId": "rgTz2Bty", "vat": 80}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'WVYOekCK' \
    --userId 'qrPagPgJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'ProcessUserSubscriptionNotification' test.out

#- 232 AcquireUserTicket
# body param: body
echo '{"count": 14, "orderNo": "ycu9Ed9O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'vfqpbsqJ' \
    --namespace $AB_NAMESPACE \
    --userId 'amCzJtzO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AcquireUserTicket' test.out

#- 233 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'Bg4IDm7m' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserCurrencyWallets' test.out

#- 234 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'jfAOSLaq' \
    --namespace $AB_NAMESPACE \
    --userId 'JHCtHHPR' \
    --limit '59' \
    --offset '68' \
    > test.out 2>&1
eval_tap $? 234 'ListUserCurrencyTransactions' test.out

#- 235 CheckWallet
eval_tap 0 235 'CheckWallet # SKIP deprecated' test.out

#- 236 CreditUserWallet
# body param: body
echo '{"amount": 44, "expireAt": "1996-12-20T00:00:00Z", "origin": "Twitch", "reason": "z9h1i7qw", "source": "ACHIEVEMENT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'Eq0nBrCW' \
    --namespace $AB_NAMESPACE \
    --userId '33w2iF4x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'CreditUserWallet' test.out

#- 237 PayWithUserWallet
# body param: body
echo '{"amount": 20, "walletPlatform": "Steam"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'psqHaVeV' \
    --namespace $AB_NAMESPACE \
    --userId '4r9Z1oTb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'PayWithUserWallet' test.out

#- 238 GetUserWallet
eval_tap 0 238 'GetUserWallet # SKIP deprecated' test.out

#- 239 DebitUserWallet
eval_tap 0 239 'DebitUserWallet # SKIP deprecated' test.out

#- 240 DisableUserWallet
eval_tap 0 240 'DisableUserWallet # SKIP deprecated' test.out

#- 241 EnableUserWallet
eval_tap 0 241 'EnableUserWallet # SKIP deprecated' test.out

#- 242 ListUserWalletTransactions
eval_tap 0 242 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 243 QueryWallets
eval_tap 0 243 'QueryWallets # SKIP deprecated' test.out

#- 244 GetWallet
eval_tap 0 244 'GetWallet # SKIP deprecated' test.out

#- 245 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'kyueFaun' \
    --end 'X3NcuVHo' \
    --start 'id4735kG' \
    > test.out 2>&1
eval_tap $? 245 'SyncOrders' test.out

#- 246 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["KfP1PCkl", "uspMOY6M", "WQdJH2OT"], "apiKey": "3XAxgSH0", "authoriseAsCapture": true, "blockedPaymentMethods": ["9k0Mp712", "f2ONknBi", "8FI16QVA"], "clientKey": "G3Z4uzf8", "dropInSettings": "SHZmNcO1", "liveEndpointUrlPrefix": "oqwlmIJ4", "merchantAccount": "DW5t9twB", "notificationHmacKey": "0Mjgi7TD", "notificationPassword": "ZJEXm5CD", "notificationUsername": "HxIODwb8", "returnUrl": "cSKlnlVr", "settings": "omdPtoCf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'TestAdyenConfig' test.out

#- 247 TestAliPayConfig
# body param: body
echo '{"appId": "E8cxirtT", "privateKey": "WKUYfPNT", "publicKey": "ESdTS0I8", "returnUrl": "VZ6ATLuK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'TestAliPayConfig' test.out

#- 248 TestCheckoutConfig
# body param: body
echo '{"publicKey": "YMoVCFmG", "secretKey": "lp3i0A25"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'TestCheckoutConfig' test.out

#- 249 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 's0CmRb72' \
    --region 'b8CEiNCu' \
    > test.out 2>&1
eval_tap $? 249 'DebugMatchedPaymentMerchantConfig' test.out

#- 250 TestPayPalConfig
# body param: body
echo '{"clientID": "5dK0VwSV", "clientSecret": "zoVew7ID", "returnUrl": "RkutyQEM", "webHookId": "MMARhMcf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'TestPayPalConfig' test.out

#- 251 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["FgGK2nmV", "Q5adkMjp", "mTMtYhFM"], "publishableKey": "FP7fLrwJ", "secretKey": "IaEhfnzM", "webhookSecret": "jqM8DO0q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'TestStripeConfig' test.out

#- 252 TestWxPayConfig
# body param: body
echo '{"appId": "O7vPj1Rf", "key": "2us1nQnc", "mchid": "rgVcYURf", "returnUrl": "cFs4mEIV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'TestWxPayConfig' test.out

#- 253 TestXsollaConfig
# body param: body
echo '{"apiKey": "P1whr6Jh", "flowCompletionUrl": "r9gO0OOA", "merchantId": 40, "projectId": 81, "projectSecretKey": "Sw7zIi6N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'TestXsollaConfig' test.out

#- 254 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'FwdFch59' \
    > test.out 2>&1
eval_tap $? 254 'GetPaymentMerchantConfig' test.out

#- 255 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["AFksmHzj", "JUNQQVaG", "98SFNR7b"], "apiKey": "95ucNk05", "authoriseAsCapture": true, "blockedPaymentMethods": ["6BzCRZx4", "YAQXu605", "CEDzgZN0"], "clientKey": "g0Sh7yQj", "dropInSettings": "Ov18pcfY", "liveEndpointUrlPrefix": "4dUI6KnT", "merchantAccount": "ggAfgDkY", "notificationHmacKey": "FO1RFMx1", "notificationPassword": "iqIAS6cp", "notificationUsername": "L9XtvDQN", "returnUrl": "FdkD40h9", "settings": "UtdZnMwt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'GrfD60LY' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateAdyenConfig' test.out

#- 256 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '37TdmFS3' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 256 'TestAdyenConfigById' test.out

#- 257 UpdateAliPayConfig
# body param: body
echo '{"appId": "MHWgolQF", "privateKey": "MFEIeJu7", "publicKey": "62wDZXBl", "returnUrl": "Yso3oL9L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'mWe99kK2' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateAliPayConfig' test.out

#- 258 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '0kYPmWbI' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 258 'TestAliPayConfigById' test.out

#- 259 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "7ckQja85", "secretKey": "LIcn53Gi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'Qy2LIQOG' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateCheckoutConfig' test.out

#- 260 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'Jnlwkx5y' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 260 'TestCheckoutConfigById' test.out

#- 261 UpdatePayPalConfig
# body param: body
echo '{"clientID": "TzSlbwuQ", "clientSecret": "Aw3USAJJ", "returnUrl": "tfk6icz5", "webHookId": "OlqwABu9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'Co9tjHzB' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdatePayPalConfig' test.out

#- 262 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id '3BLmR8uJ' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 262 'TestPayPalConfigById' test.out

#- 263 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["ynLW7Npm", "VmeCUWN1", "Yrf1eAyn"], "publishableKey": "O2V8QJQY", "secretKey": "aKgBf5w7", "webhookSecret": "iANVxBBm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'TXUEavD0' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdateStripeConfig' test.out

#- 264 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'r50zL41b' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 264 'TestStripeConfigById' test.out

#- 265 UpdateWxPayConfig
# body param: body
echo '{"appId": "tY3v7cXC", "key": "7oe5zY5R", "mchid": "IDW19iNB", "returnUrl": "hAu6ns7m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'pbodWfiz' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'UpdateWxPayConfig' test.out

#- 266 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'IVudgIUM' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 266 'UpdateWxPayConfigCert' test.out

#- 267 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'ljjXECb9' \
    > test.out 2>&1
eval_tap $? 267 'TestWxPayConfigById' test.out

#- 268 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "fXqWmRLS", "flowCompletionUrl": "mcW0gD4Y", "merchantId": 7, "projectId": 9, "projectSecretKey": "TgFMn9E8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'uZ3r9r7V' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdateXsollaConfig' test.out

#- 269 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id '7j2wgRoq' \
    > test.out 2>&1
eval_tap $? 269 'TestXsollaConfigById' test.out

#- 270 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "LARGE", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'BhkKAkxl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'UpdateXsollaUIConfig' test.out

#- 271 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '49' \
    --namespace_ 'BPdZSpN6' \
    --offset '33' \
    --region 'rU3R7FyD' \
    > test.out 2>&1
eval_tap $? 271 'QueryPaymentProviderConfig' test.out

#- 272 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "KLQJnE6t", "region": "DM6YbzuD", "sandboxTaxJarApiToken": "FewEfsKz", "specials": ["WXPAY", "WALLET", "ADYEN"], "taxJarApiToken": "urz2urYM", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'CreatePaymentProviderConfig' test.out

#- 273 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 273 'GetAggregatePaymentProviders' test.out

#- 274 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'sa0vU8pJ' \
    --region '7ZLRAQag' \
    > test.out 2>&1
eval_tap $? 274 'DebugMatchedPaymentProviderConfig' test.out

#- 275 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 275 'GetSpecialPaymentProviders' test.out

#- 276 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "beHhKNnv", "region": "FFawAB5C", "sandboxTaxJarApiToken": "6hHDTOQG", "specials": ["WALLET", "ALIPAY", "CHECKOUT"], "taxJarApiToken": "Gqa2mTft", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'btOPKM4x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'UpdatePaymentProviderConfig' test.out

#- 277 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'a2D3o5oH' \
    > test.out 2>&1
eval_tap $? 277 'DeletePaymentProviderConfig' test.out

#- 278 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 278 'GetPaymentTaxConfig' test.out

#- 279 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "LwFwQCuG", "taxJarApiToken": "nTscduvp", "taxJarEnabled": false, "taxJarProductCodesMapping": {"cFOiBZG7": "z7vFTmmA", "fNrTJBPT": "iVjwTHiQ", "ny5mSkat": "xOSAnz0J"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'UpdatePaymentTaxConfig' test.out

#- 280 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'VZPmfqio' \
    --end '8ekWvPN2' \
    --start '38vZ7ULU' \
    > test.out 2>&1
eval_tap $? 280 'SyncPaymentOrders' test.out

#- 281 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'SUPVD8vF' \
    --storeId 'qNZq6jMi' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetRootCategories' test.out

#- 282 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'b7omJHAo' \
    --storeId 'cO6bbbHK' \
    > test.out 2>&1
eval_tap $? 282 'DownloadCategories' test.out

#- 283 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'rdBieUMy' \
    --namespace $AB_NAMESPACE \
    --language 'RPKQIh90' \
    --storeId '9RpaR4ZR' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetCategory' test.out

#- 284 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'lPF5p7Zt' \
    --namespace $AB_NAMESPACE \
    --language 'lp8Qj259' \
    --storeId 'OegD6Rwp' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetChildCategories' test.out

#- 285 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'O7cv1LPZ' \
    --namespace $AB_NAMESPACE \
    --language 'LAzpz201' \
    --storeId 'viruf1qu' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetDescendantCategories' test.out

#- 286 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 286 'PublicListCurrencies' test.out

#- 287 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language '7NnbM4YT' \
    --region 'ghx0PrKk' \
    --storeId 'JWAsuVNk' \
    --appId 'MFCwRm5E' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetItemByAppId' test.out

#- 288 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --baseAppId '6lykL908' \
    --categoryPath 'NIWfysyo' \
    --features 'K88IhhF8' \
    --includeSubCategoryItem 'true' \
    --itemType 'LOOTBOX' \
    --language 'CC8Fj8NE' \
    --limit '72' \
    --offset '19' \
    --region 'a0ppibJL' \
    --sortBy '["updatedAt:asc", "updatedAt", "createdAt:asc"]' \
    --storeId 'oqXnysX9' \
    --tags '0vITrQ06' \
    > test.out 2>&1
eval_tap $? 288 'PublicQueryItems' test.out

#- 289 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language '02XDK3B1' \
    --region 'e5oanh5j' \
    --storeId 'ii4hJ9aR' \
    --sku '4aPhAvBq' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetItemBySku' test.out

#- 290 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'tOWMR4Bw' \
    --region 'CFGjuolE' \
    --storeId '7BLEz9er' \
    --itemIds 'owi9f7lc' \
    > test.out 2>&1
eval_tap $? 290 'PublicBulkGetItems' test.out

#- 291 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["gmUd39Jd", "KFAtK9sA", "IFE1kpal"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicValidateItemPurchaseCondition' test.out

#- 292 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'COINS' \
    --limit '40' \
    --offset '42' \
    --region 'o1U4ZOCJ' \
    --storeId 'LrQQUrSN' \
    --keyword 'JHxeiOYR' \
    --language 'XvvaRQ0V' \
    > test.out 2>&1
eval_tap $? 292 'PublicSearchItems' test.out

#- 293 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'W0yyJ3Se' \
    --namespace $AB_NAMESPACE \
    --language 'Vp0fBjKp' \
    --region 'q6yaHVoL' \
    --storeId '2XgeTPuM' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetApp' test.out

#- 294 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'jnSZeu1S' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 294 'PublicGetItemDynamicData' test.out

#- 295 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId '9bqaw2gQ' \
    --namespace $AB_NAMESPACE \
    --language 'fUlZJCBq' \
    --populateBundle 'true' \
    --region '6Te94Krk' \
    --storeId 'DHnpXIG8' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetItem' test.out

#- 296 GetPaymentCustomization
eval_tap 0 296 'GetPaymentCustomization # SKIP deprecated' test.out

#- 297 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "tJSyMmj7", "paymentProvider": "PAYPAL", "returnUrl": "uupIHUvF", "ui": "EiLYCgBT", "zipCode": "iFmrwXUo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicGetPaymentUrl' test.out

#- 298 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Em455TIy' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetPaymentMethods' test.out

#- 299 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'wCKf1hD0' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetUnpaidPaymentOrder' test.out

#- 300 Pay
# body param: body
echo '{"token": "SBZ2B7EG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'WwDSzKQC' \
    --paymentProvider 'STRIPE' \
    --zipCode 'Er9XG95A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'Pay' test.out

#- 301 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'BHw4892H' \
    > test.out 2>&1
eval_tap $? 301 'PublicCheckPaymentOrderPaidStatus' test.out

#- 302 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'WALLET' \
    --region 'Jp5n8tNV' \
    > test.out 2>&1
eval_tap $? 302 'GetPaymentPublicConfig' test.out

#- 303 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'O4cIb8Zm' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetQRCode' test.out

#- 304 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'z5FD4fPV' \
    --foreinginvoice 'SE8OHmET' \
    --invoiceId 'ewwdVA5G' \
    --payload 'vbY4yRM1' \
    --redirectResult 'IwX6DwPC' \
    --resultCode 'j7jKdW1H' \
    --sessionId 'TpMoKCDF' \
    --status 'qSgKKNPU' \
    --token '9CvLPVdM' \
    --type 'Fe7J7g7T' \
    --userId 'QHAQFQtw' \
    --orderNo 'zTq3F7WM' \
    --paymentOrderNo 'scA0ffWx' \
    --paymentProvider 'WXPAY' \
    --returnUrl 'RmVpPfi4' \
    > test.out 2>&1
eval_tap $? 304 'PublicNormalizePaymentReturnUrl' test.out

#- 305 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'O2iIdVy0' \
    --paymentOrderNo 'lWGag5B5' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 305 'GetPaymentTaxValue' test.out

#- 306 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'QHzwqtlF' \
    > test.out 2>&1
eval_tap $? 306 'GetRewardByCode' test.out

#- 307 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'f8oXRckh' \
    --limit '44' \
    --offset '98' \
    --sortBy '["namespace:asc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 307 'QueryRewards1' test.out

#- 308 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'WXIGYHlH' \
    > test.out 2>&1
eval_tap $? 308 'GetReward1' test.out

#- 309 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 309 'PublicListStores' test.out

#- 310 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["217FxKHq", "IA1m97rA", "BAkiyoBu"]' \
    --itemIds '["fH1g1QMj", "P9lgsuyQ", "48zYbXbl"]' \
    --skus '["HhL8UbBJ", "dor8GrhW", "3H4vGaID"]' \
    > test.out 2>&1
eval_tap $? 310 'PublicExistsAnyMyActiveEntitlement' test.out

#- 311 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'RtgHLtBT' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 312 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'MqfwDH8c' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 313 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'ndaG1SGs' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 314 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["7eT1x4G8", "xOx3Fg4z", "YnZIsu9Z"]' \
    --itemIds '["FqHB0GkA", "GUEovE72", "thgViVpf"]' \
    --skus '["heaD7Dlm", "v4IpDfSb", "sPGmSYU7"]' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetEntitlementOwnershipToken' test.out

#- 315 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'ECQh6Ahl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 315 'PublicGetMyWallet' test.out

#- 316 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "MID2iOFR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'LBteC6Ve' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'SyncEpicGameDLC' test.out

#- 317 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 28}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'ZBTakwFQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicSyncPsnDlcInventory' test.out

#- 318 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [97, 92, 6]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'MApSK559' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 319 SyncSteamDLC
# body param: body
echo '{"appId": "IFniFxU8", "steamId": "RdmEwPz4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'ZXYsfr7Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'SyncSteamDLC' test.out

#- 320 SyncXboxDLC
# body param: body
echo '{"xstsToken": "yJdzjsa1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'kivSJWE1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'SyncXboxDLC' test.out

#- 321 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'FkImQVvJ' \
    --appType 'GAME' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'c5mS2C6D' \
    --features '["m6QOJAJu", "hCJVR9yX", "Ixfm4cD5"]' \
    --itemId '["0LSGI7Eu", "04d5YxOV", "rSOpoy2O"]' \
    --limit '39' \
    --offset '1' \
    > test.out 2>&1
eval_tap $? 321 'PublicQueryUserEntitlements' test.out

#- 322 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'fYskVEXh' \
    --appId 'W6T6Hz6V' \
    > test.out 2>&1
eval_tap $? 322 'PublicGetUserAppEntitlementByAppId' test.out

#- 323 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '0so6RpmD' \
    --limit '6' \
    --offset '48' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 323 'PublicQueryUserEntitlementsByAppType' test.out

#- 324 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'xFnngzlz' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'ZWCbKV61' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserEntitlementByItemId' test.out

#- 325 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'BvcX0E4j' \
    --entitlementClazz 'APP' \
    --sku 'Z8aVQPkG' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetUserEntitlementBySku' test.out

#- 326 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'kFMcQcsj' \
    --appIds '["a8TbCLBL", "f5JGeZVZ", "yJMvAInW"]' \
    --itemIds '["unafZ6iS", "4QbrDGDb", "vWVpZx3F"]' \
    --skus '["MXTVdD6I", "gssgV0dK", "pyVLgl1F"]' \
    > test.out 2>&1
eval_tap $? 326 'PublicExistsAnyUserActiveEntitlement' test.out

#- 327 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'L6EYipcV' \
    --appId 'Hnmb7I9V' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 328 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'edB2vs9d' \
    --entitlementClazz 'MEDIA' \
    --itemId 'MQZopgGJ' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 329 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '2DFzYFPM' \
    --ids '["UFzxXCVz", "HK0k62je", "19oXwLe2"]' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 330 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'YiHG7T0V' \
    --entitlementClazz 'CODE' \
    --sku 'L0lBCuA3' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 331 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'uisO3tqM' \
    --namespace $AB_NAMESPACE \
    --userId 'OAHgXVmI' \
    > test.out 2>&1
eval_tap $? 331 'PublicGetUserEntitlement' test.out

#- 332 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["wsobQ9NB", "G0ir5SED", "IbnyShEn"], "requestId": "cgxr7dhv", "useCount": 88}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'UwbpVEvg' \
    --namespace $AB_NAMESPACE \
    --userId 'OBT4NxDb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicConsumeUserEntitlement' test.out

#- 333 PublicRedeemCode
# body param: body
echo '{"code": "cpa2Qgso", "language": "WCl-vu", "region": "PmLwMzAZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'GGxSYA6n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicRedeemCode' test.out

#- 334 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "KCCy", "productId": "EZI9rkT8", "receiptData": "y5HTQ14A", "region": "KC9tdh3J", "transactionId": "5flHHEXy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'DSB29JFk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'PublicFulfillAppleIAPItem' test.out

#- 335 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "J6Dp96vA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId '3tbAJZKk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'SyncEpicGamesInventory' test.out

#- 336 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "uTzo", "orderId": "3VbGEKqo", "packageName": "nesa2lV3", "productId": "SfbFv93j", "purchaseTime": 41, "purchaseToken": "YxGtkOod", "region": "dbI1XifX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'MjqUv9m5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'PublicFulfillGoogleIAPItem' test.out

#- 337 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "TrfnUU4k", "price": 0.7462890449707514, "productId": "qPD2Gi1U", "serviceLabel": 22}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'cgGHeHj8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'PublicReconcilePlayStationStore' test.out

#- 338 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "T9FUdwKy", "price": 0.3672403450925743, "productId": "XxdWSOib", "serviceLabels": [42, 58, 13]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '5PL9E0tf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 339 SyncStadiaEntitlement
# body param: body
echo '{"appId": "NgfqQmxW", "language": "Ytf_SW", "region": "BSPTGPsZ", "stadiaPlayerId": "kaypAC2C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'JlP18vBV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'SyncStadiaEntitlement' test.out

#- 340 SyncSteamInventory
# body param: body
echo '{"appId": "VS1fsKDt", "currencyCode": "Aa4xIOBA", "language": "YvYD_TPad", "price": 0.061050572293327776, "productId": "mXAyNRka", "region": "xLgKtZMD", "steamId": "46AfQeo2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId '04zhXZhX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'SyncSteamInventory' test.out

#- 341 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "Eag5zmIj", "language": "Nv-FrpJ", "region": "kj6AE68p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'ZvCAfN3H' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'SyncTwitchDropsEntitlement' test.out

#- 342 SyncXboxInventory
# body param: body
echo '{"currencyCode": "GCngVLGB", "price": 0.9443786089398172, "productId": "phuwFtEb", "xstsToken": "tcDWpYBk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId '1dIdkEIP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'SyncXboxInventory' test.out

#- 343 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'vy5iX4Nw' \
    --itemId 'Q3EEoAni' \
    --limit '5' \
    --offset '25' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 343 'PublicQueryUserOrders' test.out

#- 344 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "1unpOsyZ", "discountedPrice": 96, "ext": {"Zi51Yi6W": {}, "6920nfeK": {}, "G8MRpJWx": {}}, "itemId": "oELwgmrr", "language": "vinq_CtJG", "price": 3, "quantity": 51, "region": "iWrdS2Rl", "returnUrl": "G8vugeaM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Hfo8ZfBB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'PublicCreateUserOrder' test.out

#- 345 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'dMyHLPWh' \
    --userId 'HYJvosAM' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserOrder' test.out

#- 346 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '2vmfSNzx' \
    --userId 'A1kNok1m' \
    > test.out 2>&1
eval_tap $? 346 'PublicCancelUserOrder' test.out

#- 347 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'nRtnojpz' \
    --userId 'D8CIuqvm' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetUserOrderHistories' test.out

#- 348 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'xQWKAusN' \
    --userId 'nuuH68KU' \
    > test.out 2>&1
eval_tap $? 348 'PublicDownloadUserOrderReceipt' test.out

#- 349 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'lxLwlUEN' \
    > test.out 2>&1
eval_tap $? 349 'PublicGetPaymentAccounts' test.out

#- 350 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'VClPiOHE' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId '1mn3P4Rv' \
    > test.out 2>&1
eval_tap $? 350 'PublicDeletePaymentAccount' test.out

#- 351 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'wcOtZBJN' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'MTLC32AP' \
    --limit '93' \
    --offset '82' \
    --sku 'WjkKYm60' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 351 'PublicQueryUserSubscriptions' test.out

#- 352 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "OAqaeZv4", "itemId": "IqxO2MKs", "language": "ucw-OP", "region": "zC8Zdx5X", "returnUrl": "3Y2HUtRP", "source": "IqtdyIax"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'FDxe3ils' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'PublicSubscribeSubscription' test.out

#- 353 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'D5wlCH6z' \
    --itemId 'u04JthMU' \
    > test.out 2>&1
eval_tap $? 353 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 354 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BaVREwH8' \
    --userId 'rcDlIAXs' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetUserSubscription' test.out

#- 355 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId '4lKw52ys' \
    --userId 'KXpffIHz' \
    > test.out 2>&1
eval_tap $? 355 'PublicChangeSubscriptionBillingAccount' test.out

#- 356 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "EHtlGvtG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Xiff8Afq' \
    --userId 'nkOMX8xR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'PublicCancelSubscription' test.out

#- 357 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'riHT7dKE' \
    --userId '5EdykY8O' \
    --excludeFree 'true' \
    --limit '100' \
    --offset '28' \
    > test.out 2>&1
eval_tap $? 357 'PublicGetUserSubscriptionBillingHistories' test.out

#- 358 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'unDmcu2F' \
    --namespace $AB_NAMESPACE \
    --userId 'BTEtdnJm' \
    > test.out 2>&1
eval_tap $? 358 'PublicGetWallet' test.out

#- 359 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'CtxFwItG' \
    --namespace $AB_NAMESPACE \
    --userId '0iILyh5x' \
    --limit '50' \
    --offset '87' \
    > test.out 2>&1
eval_tap $? 359 'PublicListUserWalletTransactions' test.out

#- 360 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --availableDate 'ew2seI1z' \
    --baseAppId 'B94WrFgE' \
    --categoryPath 'bPEJGPoG' \
    --features 'ea4xbcMw' \
    --includeSubCategoryItem 'true' \
    --itemName 'myCTL9DT' \
    --itemStatus 'ACTIVE' \
    --itemType 'INGAMEITEM' \
    --limit '44' \
    --offset '38' \
    --region '6jIM0VRi' \
    --sortBy '["displayOrder:desc", "name:asc", "updatedAt"]' \
    --storeId 'GYyZskG5' \
    --tags 'UKZ7tT5F' \
    --targetNamespace 'XPYtV11x' \
    > test.out 2>&1
eval_tap $? 360 'QueryItems1' test.out

#- 361 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'Rug7fNSU' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 361 'ImportStore1' test.out

#- 362 ExportStore1
# body param: body
echo '{"itemIds": ["aTSjQt3H", "NlVt3ilE", "z6gTs3Sp"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'x6SmmwrZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 362 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE