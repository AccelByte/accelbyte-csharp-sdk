#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..380"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "WR5GeUoq", "appType": "DLC", "baseAppId": "IoQBHpPe", "boothName": "WBxY3Yaq", "boundItemIds": ["89vevSCJ", "rXa5wNyj", "JSKlhRu9"], "categoryPath": "cAZpaxnN", "clazz": "QzMrtMkf", "createdAt": "1998-07-14T00:00:00Z", "description": "lBfUcrbl", "displayOrder": 70, "entitlementType": "DURABLE", "ext": {"ma0BkGPB": {}, "EnxnBuIX": {}, "uu15s6Gy": {}}, "features": ["o4Prn8Qn", "Wf1aoz6a", "EAt1C00v"], "fresh": false, "images": [{"as": "BQTPDoiW", "caption": "gtEVnLsH", "height": 86, "imageUrl": "h5zVnqJr", "smallImageUrl": "ZhDRi3Pk", "width": 28}, {"as": "KN52IanL", "caption": "KgxePWzH", "height": 71, "imageUrl": "ebtLc1tv", "smallImageUrl": "ycvpQWRz", "width": 47}, {"as": "xhHXLegF", "caption": "MRdSBeUG", "height": 36, "imageUrl": "30qu6OQ1", "smallImageUrl": "suPogUjr", "width": 81}], "itemId": "RctfvP5Z", "itemIds": ["CgpMB22U", "UAYeEHJg", "3FYJXQ1v"], "itemQty": {"PrcsyVvy": 7, "RyF08hTq": 56, "CKd2UVxJ": 75}, "itemType": "EXTENSION", "language": "ClNK0ALx", "listable": true, "localExt": {"9DUwFXZl": {}, "DIJfwFzU": {}, "U1zk8FKJ": {}}, "longDescription": "j7ADti7t", "lootBoxConfig": {"rewardCount": 19, "rewards": [{"lootBoxItems": [{"count": 15, "itemId": "EMm4spqs", "itemSku": "bqET2zOU", "itemType": "kFPnwSBI"}, {"count": 19, "itemId": "rq6sWqKv", "itemSku": "26AGIzBO", "itemType": "Fa2ErWYv"}, {"count": 65, "itemId": "XHrMKHJw", "itemSku": "eOtxhFEL", "itemType": "Ybef6Q1l"}], "name": "F2yHng5s", "odds": 0.7334980531739127, "type": "REWARD", "weight": 7}, {"lootBoxItems": [{"count": 90, "itemId": "R9wDPkHY", "itemSku": "1drFOnx0", "itemType": "vBjjBJd6"}, {"count": 30, "itemId": "RWiIAK92", "itemSku": "Qwl1sp18", "itemType": "7aQXVYQs"}, {"count": 19, "itemId": "do42YN7M", "itemSku": "3L9aioLx", "itemType": "luVulTBB"}], "name": "CKsmgqxr", "odds": 0.5093795168982355, "type": "REWARD", "weight": 23}, {"lootBoxItems": [{"count": 70, "itemId": "Dq7uCqgH", "itemSku": "xFyGa3SR", "itemType": "8IjW99Of"}, {"count": 7, "itemId": "6bLaTkAa", "itemSku": "unVnZKc9", "itemType": "8NR2fPpY"}, {"count": 99, "itemId": "tHYNwFCl", "itemSku": "WEyYhaLG", "itemType": "IvplKJBX"}], "name": "jp1QDfed", "odds": 0.7518802963149167, "type": "REWARD", "weight": 11}]}, "maxCount": 89, "maxCountPerUser": 88, "name": "INFdlBs2", "namespace": "MvOxMll4", "optionBoxConfig": {"boxItems": [{"count": 96, "itemId": "uThbXbvL", "itemSku": "Fcnk0LOZ", "itemType": "YDLEOLEd"}, {"count": 80, "itemId": "V4XDVeNm", "itemSku": "TvznVLxR", "itemType": "eQr8fCbp"}, {"count": 73, "itemId": "ylUoDsK1", "itemSku": "q1CK817J", "itemType": "ltscqRG7"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 85, "comparison": "isGreaterThanOrEqual", "name": "CTBADWBi", "predicateType": "EntitlementPredicate", "value": "KFvSBMvG", "values": ["vv5ajDCY", "h8dXl3F8", "ZmSSKLQz"]}, {"anyOf": 72, "comparison": "isNot", "name": "Y9vEk2NN", "predicateType": "SeasonTierPredicate", "value": "841fLvjD", "values": ["9zgRsxFZ", "lpNlSzoN", "v325c5PU"]}, {"anyOf": 97, "comparison": "includes", "name": "DXYh5TI8", "predicateType": "EntitlementPredicate", "value": "FanEZVhK", "values": ["JsMy5gva", "bC6hnf9P", "PPspW1Hc"]}]}, {"operator": "or", "predicates": [{"anyOf": 100, "comparison": "includes", "name": "RWk2Y2Sy", "predicateType": "SeasonTierPredicate", "value": "O4m16ohb", "values": ["vLxtD7Rh", "pGL0hxZh", "SQVhvHq1"]}, {"anyOf": 9, "comparison": "isGreaterThan", "name": "rdSrIw9B", "predicateType": "EntitlementPredicate", "value": "PgmnaxFl", "values": ["E3i8cUkj", "ZQ2JRw36", "HBMsQeGF"]}, {"anyOf": 23, "comparison": "includes", "name": "VViAeSP6", "predicateType": "EntitlementPredicate", "value": "eMrSUHzC", "values": ["reDY5tA7", "7gEzc8hb", "xCZN8tNQ"]}]}, {"operator": "or", "predicates": [{"anyOf": 54, "comparison": "isGreaterThanOrEqual", "name": "Og2X0Kut", "predicateType": "EntitlementPredicate", "value": "L71G9wDb", "values": ["8J6of0Cf", "e6xAHkCy", "dRDUJAJ7"]}, {"anyOf": 98, "comparison": "excludes", "name": "lfVUH7hM", "predicateType": "EntitlementPredicate", "value": "2PswxYhh", "values": ["T8VUFIU9", "R84RFEiI", "WE8ohFYv"]}, {"anyOf": 32, "comparison": "isGreaterThanOrEqual", "name": "iKHVoDGL", "predicateType": "EntitlementPredicate", "value": "R6TtiN94", "values": ["1kmwvxAC", "Gh1zpUlY", "C3RTyofI"]}]}]}, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 9, "fixedTrialCycles": 86, "graceDays": 65}, "region": "NqT01ddu", "regionData": [{"currencyCode": "hNQ1myCe", "currencyNamespace": "HAWi90i6", "currencyType": "REAL", "discountAmount": 36, "discountExpireAt": "1989-01-12T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1987-04-18T00:00:00Z", "discountedPrice": 25, "expireAt": "1989-02-20T00:00:00Z", "price": 8, "purchaseAt": "1987-04-10T00:00:00Z", "trialPrice": 85}, {"currencyCode": "0FgQd8Gk", "currencyNamespace": "SoGra4dr", "currencyType": "REAL", "discountAmount": 49, "discountExpireAt": "1981-02-06T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1977-09-10T00:00:00Z", "discountedPrice": 94, "expireAt": "1983-02-11T00:00:00Z", "price": 25, "purchaseAt": "1975-09-07T00:00:00Z", "trialPrice": 70}, {"currencyCode": "AXOrwE4Q", "currencyNamespace": "JqkKRunn", "currencyType": "REAL", "discountAmount": 39, "discountExpireAt": "1993-09-05T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1998-09-26T00:00:00Z", "discountedPrice": 91, "expireAt": "1998-04-20T00:00:00Z", "price": 30, "purchaseAt": "1986-10-05T00:00:00Z", "trialPrice": 36}], "seasonType": "TIER", "sku": "HSFw24Ne", "stackable": false, "status": "ACTIVE", "tags": ["a8i94Hwm", "jqWDOe4S", "iwTY5oN8"], "targetCurrencyCode": "VRR84HOs", "targetItemId": "wwffPjPk", "targetNamespace": "7Un0qwXB", "thumbnailUrl": "TTTTNZJU", "title": "I4NfwZLA", "updatedAt": "1991-02-04T00:00:00Z", "useCount": 59}, "namespace": "keyVfCYI", "order": {"currency": {"currencyCode": "EG0BBrXr", "currencySymbol": "5UZKQdKJ", "currencyType": "VIRTUAL", "decimals": 52, "namespace": "o5Yfvc0N"}, "ext": {"xzvL1jzz": {}, "PyUk4Nu3": {}, "ppdf1Dd8": {}}, "free": false}, "source": "DLC"}, "script": "5fD8CAA5", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '8YiLLLLX' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "X3oQkAZm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id '7dDB0B1P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'w3nXnLPF' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "jru28cr1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'CPjW0DLk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "mWhqa8jc", "dryRun": true, "fulfillmentUrl": "L0drey7B", "itemType": "MEDIA", "purchaseConditionUrl": "tTXRq0gO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'dmvbM1lE' \
    --itemType 'CODE' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'pygjRJqD' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "9FEQK985", "dryRun": true, "fulfillmentUrl": "PM1tnlJ8", "purchaseConditionUrl": "8oEWfWDv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'uoxjyCxy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'k5nVYdQ1' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '78' \
    --name 'XxNAJAVy' \
    --offset '83' \
    --tag 'dOQa6qPB' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "87KY1Nwz", "items": [{"extraSubscriptionDays": 12, "itemId": "iKs5Df6s", "itemName": "SypGH1zM", "quantity": 88}, {"extraSubscriptionDays": 28, "itemId": "Vu82d2xD", "itemName": "MwXPt9mz", "quantity": 8}, {"extraSubscriptionDays": 46, "itemId": "c0wb6cjX", "itemName": "me9mqAtF", "quantity": 75}], "maxRedeemCountPerCampaignPerUser": 10, "maxRedeemCountPerCode": 98, "maxRedeemCountPerCodePerUser": 94, "maxSaleCount": 96, "name": "ssb7DGEz", "redeemEnd": "1974-09-01T00:00:00Z", "redeemStart": "1974-03-08T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["yZ2eAHd4", "MIJQ2fQl", "MS3vIuNC"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '6d1Biyvi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "THrom4nI", "items": [{"extraSubscriptionDays": 27, "itemId": "rRPRu7Wy", "itemName": "LBEcGl8D", "quantity": 8}, {"extraSubscriptionDays": 51, "itemId": "K5Ja0nAV", "itemName": "fiuYF0q6", "quantity": 42}, {"extraSubscriptionDays": 15, "itemId": "i0MuIC3r", "itemName": "4c3tXn61", "quantity": 77}], "maxRedeemCountPerCampaignPerUser": 20, "maxRedeemCountPerCode": 68, "maxRedeemCountPerCodePerUser": 26, "maxSaleCount": 54, "name": "EJ3sfVET", "redeemEnd": "1981-06-14T00:00:00Z", "redeemStart": "1980-09-22T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["1yj8nOA9", "DJtmwwcM", "GpkBl5LT"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'R50E9V4y' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId '9X4KDNcd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId '39eiWXcR' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "gIH4GOqG", "localizationDisplayNames": {"m1zMjmJG": "1otQXl7o", "HTYWu31o": "iN47Sf4r", "iPMVi7a5": "ukp7Y7iH"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'llhwTztG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId '7FctnXjE' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'BPoVn93Z' \
    --namespace $AB_NAMESPACE \
    --storeId 'UJG6M0O0' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"DlYqot2w": "2yJHbTch", "C7zKfJJU": "kRYFx58Q", "Zm9bmAG9": "yuqLSSkZ"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'C4NP9Vpo' \
    --namespace $AB_NAMESPACE \
    --storeId 'lTL8umNm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'n5yy65lb' \
    --namespace $AB_NAMESPACE \
    --storeId 'ZtoFJCun' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'Cf41qS3w' \
    --namespace $AB_NAMESPACE \
    --storeId 'fiD6R97l' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath '8pj4xx1r' \
    --namespace $AB_NAMESPACE \
    --storeId 'eiibXuIm' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'sO4gVDfm' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '53' \
    --code '5iL4vzVm' \
    --limit '48' \
    --offset '20' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 98}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'tTx7aFFx' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'F4HUybIL' \
    --namespace $AB_NAMESPACE \
    --batchNo '28' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'NRQrSjJo' \
    --namespace $AB_NAMESPACE \
    --batchNo '45' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'b46Aaw2F' \
    --namespace $AB_NAMESPACE \
    --batchNo '94' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'f7A35abX' \
    --namespace $AB_NAMESPACE \
    --code 'WWzVEIhb' \
    --limit '81' \
    --offset '80' \
    --userId 'TGslyRNm' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'pIuwCyWa' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '25MGv80J' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'ZDlrLssf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 GetServicePluginConfig
$CLI_EXE \
    --sn platform \
    --op GetServicePluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetServicePluginConfig' test.out

#- 37 UpdateServicePluginConfig
# body param: body
echo '{"grpcServerAddress": "JZq2XmM0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateServicePluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateServicePluginConfig' test.out

#- 38 DeleteServicePluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteServicePluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteServicePluginConfig' test.out

#- 39 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 39 'ListCurrencies' test.out

#- 40 CreateCurrency
# body param: body
echo '{"currencyCode": "1gONsbNG", "currencySymbol": "LeeYAns2", "currencyType": "VIRTUAL", "decimals": 0, "localizationDescriptions": {"7dQXeAEA": "95q4Jzc5", "voIevpua": "uWDYqCjA", "QcuEVgxH": "RKuPlxN0"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCurrency' test.out

#- 41 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"dcqBELvF": "zuHsQcoL", "0S4F7nS2": "5ozWAXPC", "6TwAozXH": "HpLVsxaW"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'YYSsm6XV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'UpdateCurrency' test.out

#- 42 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'Hy0d6Plc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DeleteCurrency' test.out

#- 43 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'WznJhStM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetCurrencyConfig' test.out

#- 44 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode '22NiLPNY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'GetCurrencySummary' test.out

#- 45 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetDLCItemConfig' test.out

#- 46 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "jBm9DVe1", "rewards": [{"currency": {"currencyCode": "qvbzEu0U", "namespace": "ylKhUHyV"}, "item": {"itemId": "y7kTpnnE", "itemSku": "6XOOswhc", "itemType": "SSv0k0l6"}, "quantity": 48, "type": "ITEM"}, {"currency": {"currencyCode": "wmtmW19D", "namespace": "fvzBIL6D"}, "item": {"itemId": "FrSGzq6W", "itemSku": "6tvZXJRV", "itemType": "MtgTA5KY"}, "quantity": 97, "type": "CURRENCY"}, {"currency": {"currencyCode": "fufyELbd", "namespace": "4fNdzTNe"}, "item": {"itemId": "NKD3e8FS", "itemSku": "foK1zyGG", "itemType": "l2xlR4Ap"}, "quantity": 5, "type": "CURRENCY"}]}, {"id": "89xp6y0q", "rewards": [{"currency": {"currencyCode": "GLzQGBNl", "namespace": "andcoIax"}, "item": {"itemId": "JIFQxyu0", "itemSku": "6uJYui6l", "itemType": "gyTPhopQ"}, "quantity": 79, "type": "CURRENCY"}, {"currency": {"currencyCode": "DfhlaVWc", "namespace": "cGmFvU1z"}, "item": {"itemId": "d1rhWf0B", "itemSku": "dRqZin8g", "itemType": "ddT2Z6Wi"}, "quantity": 19, "type": "CURRENCY"}, {"currency": {"currencyCode": "lA0VTsXH", "namespace": "WkwwJ7wJ"}, "item": {"itemId": "L3Oo2MV7", "itemSku": "HyVatiQF", "itemType": "xKEZfvBx"}, "quantity": 62, "type": "ITEM"}]}, {"id": "tUWr2Yx6", "rewards": [{"currency": {"currencyCode": "WG0alM8w", "namespace": "ygWkO5Be"}, "item": {"itemId": "WLqTvIBd", "itemSku": "v7VbEGwN", "itemType": "8OZZUEKW"}, "quantity": 4, "type": "CURRENCY"}, {"currency": {"currencyCode": "Pra7GXva", "namespace": "IjbYVSU3"}, "item": {"itemId": "F4nQ7uwU", "itemSku": "FwBafb2F", "itemType": "WtqJ71mj"}, "quantity": 4, "type": "ITEM"}, {"currency": {"currencyCode": "HDHNtK5A", "namespace": "g6F3iYni"}, "item": {"itemId": "pofyQFTV", "itemSku": "mU8ZFRNo", "itemType": "5PWFUc3g"}, "quantity": 78, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateDLCItemConfig' test.out

#- 47 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteDLCItemConfig' test.out

#- 48 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetPlatformDLCConfig' test.out

#- 49 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"49m9XQEb": "J0tmec9k", "Yp0p5psC": "pqdFrAZ1", "fFrjibjd": "36T12gNM"}}, {"platform": "PSN", "platformDlcIdMap": {"ZvcZkcA3": "FNzgej4F", "7p5eRpcV": "zkzo4Bbi", "0RIyUNxh": "H9Q1eEMX"}}, {"platform": "STEAM", "platformDlcIdMap": {"wvk5IVem": "AWphhxNt", "dVrEexrL": "VsyuCsKF", "s28p5w2F": "9Bo2qwUG"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdatePlatformDLCConfig' test.out

#- 50 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeletePlatformDLCConfig' test.out

#- 51 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'GAME' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'BMZJ40MM' \
    --itemId '["g44dmilY", "fnesFL9H", "O9MaIq1T"]' \
    --limit '95' \
    --offset '78' \
    --userId 'VPX9544m' \
    > test.out 2>&1
eval_tap $? 51 'QueryEntitlements' test.out

#- 52 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId '6G3s2wTt' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetEntitlement' test.out

#- 53 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '64' \
    --offset '21' \
    --status 'FAIL' \
    --userId 'ciZxBfdw' \
    > test.out 2>&1
eval_tap $? 53 'QueryFulfillmentHistories' test.out

#- 54 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetAppleIAPConfig' test.out

#- 55 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "nh4HqY2w", "password": "od1VpfEG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateAppleIAPConfig' test.out

#- 56 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteAppleIAPConfig' test.out

#- 57 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetEpicGamesIAPConfig' test.out

#- 58 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "rwA9wPw9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateEpicGamesIAPConfig' test.out

#- 59 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteEpicGamesIAPConfig' test.out

#- 60 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetGoogleIAPConfig' test.out

#- 61 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "kXVo0qzY", "serviceAccountId": "GXfN1Il3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdateGoogleIAPConfig' test.out

#- 62 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteGoogleIAPConfig' test.out

#- 63 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 63 'UpdateGoogleP12File' test.out

#- 64 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetIAPItemConfig' test.out

#- 65 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "DSMjStyf", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"T8iS6pMR": "0ZWIdP4w", "y7rzcQDy": "URu8qLYH", "OTQDLRu7": "vLvNqS8M"}}, {"itemIdentity": "JgPRES0F", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"SUMPaRbY": "wCwUgEEc", "ggjupBpY": "5T95EeOa", "UGWEZLqw": "YUDhxKn6"}}, {"itemIdentity": "ID5FkcSb", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"aGi1HlcJ": "X27DGorz", "4KHml8hK": "JDlf5nB2", "lulPaQLv": "ulde1hqn"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdateIAPItemConfig' test.out

#- 66 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeleteIAPItemConfig' test.out

#- 67 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetPlayStationIAPConfig' test.out

#- 68 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "oG1yuifV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdatePlaystationIAPConfig' test.out

#- 69 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeletePlaystationIAPConfig' test.out

#- 70 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetStadiaIAPConfig' test.out

#- 71 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteStadiaIAPConfig' test.out

#- 72 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 72 'UpdateStadiaJsonConfigFile' test.out

#- 73 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetSteamIAPConfig' test.out

#- 74 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "jxqXQ9Ev", "publisherAuthenticationKey": "d1DpoVCw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateSteamIAPConfig' test.out

#- 75 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteSteamIAPConfig' test.out

#- 76 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetTwitchIAPConfig' test.out

#- 77 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "OjqMr0YV", "clientSecret": "gbBowSho", "organizationId": "FNHop586"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateTwitchIAPConfig' test.out

#- 78 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteTwitchIAPConfig' test.out

#- 79 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetXblIAPConfig' test.out

#- 80 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "i8nam1Fe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateXblIAPConfig' test.out

#- 81 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteXblAPConfig' test.out

#- 82 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'r85XevhN' \
    > test.out 2>&1
eval_tap $? 82 'UpdateXblBPCertFile' test.out

#- 83 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'AQwngTfe' \
    --itemId 'hHQbsBWe' \
    --itemType 'SUBSCRIPTION' \
    --endTime 'dOwROLfM' \
    --startTime 'hzFSZrTT' \
    > test.out 2>&1
eval_tap $? 83 'DownloadInvoiceDetails' test.out

#- 84 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'i7sxz6Eu' \
    --itemId 'jzuKcaXF' \
    --itemType 'CODE' \
    --endTime 'dzR71d30' \
    --startTime 'UAMaKhRb' \
    > test.out 2>&1
eval_tap $? 84 'GenerateInvoiceSummary' test.out

#- 85 SyncInGameItem
# body param: body
echo '{"categoryPath": "CLAyjeY0", "targetItemId": "Jjx42AHl", "targetNamespace": "3mPhctEQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'NEtQFtHA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'SyncInGameItem' test.out

#- 86 CreateItem
# body param: body
echo '{"appId": "dNtxFUqG", "appType": "GAME", "baseAppId": "TFrc6okm", "boothName": "hgPgMlN5", "categoryPath": "jdyI9TZY", "clazz": "B2TJV581", "displayOrder": 57, "entitlementType": "CONSUMABLE", "ext": {"uHiMAq2a": {}, "T8aGjN2t": {}, "UaAUGS2h": {}}, "features": ["yPmW6u2T", "REAUKlvT", "kRBtNTDv"], "images": [{"as": "HSZ0EKCn", "caption": "0P5URplU", "height": 78, "imageUrl": "Qd3oQ7gG", "smallImageUrl": "cdzGTqbh", "width": 99}, {"as": "WkimIT41", "caption": "0OdFV2YX", "height": 92, "imageUrl": "kzr6YOcm", "smallImageUrl": "SNvgvdub", "width": 33}, {"as": "tWgHs3gJ", "caption": "OofgEZjH", "height": 6, "imageUrl": "JhMteCMi", "smallImageUrl": "Dko2jcUI", "width": 34}], "itemIds": ["7xN85VGQ", "Mwatbg9v", "DuiNdtil"], "itemQty": {"RcUXqlLZ": 74, "P0FcfH3D": 26, "dfq3LZ7U": 62}, "itemType": "EXTENSION", "listable": false, "localizations": {"0YeMrmlL": {"description": "ApHktjiK", "localExt": {"7m3Kpppt": {}, "vqWQC7rM": {}, "63HIJY8g": {}}, "longDescription": "k0HAKajJ", "title": "n9fFp76d"}, "Of9W8sAC": {"description": "SAAVHAkt", "localExt": {"QN0KJest": {}, "PvBP0orl": {}, "PN4UFDrG": {}}, "longDescription": "EVBgHhfd", "title": "daRsl8Rh"}, "HaJFooFe": {"description": "FsSgXB5l", "localExt": {"wBSHKfXd": {}, "oDwCeMmF": {}, "eyfp2kpU": {}}, "longDescription": "X9wrwzDC", "title": "cHx29QlR"}}, "lootBoxConfig": {"rewardCount": 31, "rewards": [{"lootBoxItems": [{"count": 52, "itemId": "Jou9YZrm", "itemSku": "ilTwj6AW", "itemType": "i6Es49IV"}, {"count": 16, "itemId": "gOhQxi9a", "itemSku": "JFDYxzVw", "itemType": "WBoGsTIi"}, {"count": 49, "itemId": "x4FIgo3B", "itemSku": "Vf0cHYce", "itemType": "HujsKfiO"}], "name": "3uYcSZFB", "odds": 0.3285691478510998, "type": "REWARD", "weight": 30}, {"lootBoxItems": [{"count": 56, "itemId": "qIaC3gaE", "itemSku": "5iiftpuc", "itemType": "rrWu1zVy"}, {"count": 61, "itemId": "EED1hNnn", "itemSku": "vxh2uLow", "itemType": "rmrd9MRh"}, {"count": 93, "itemId": "rYQ18UCN", "itemSku": "SBYfVMK8", "itemType": "yoGcpMfI"}], "name": "pOVgxBw2", "odds": 0.9012001248300854, "type": "PROBABILITY_GROUP", "weight": 36}, {"lootBoxItems": [{"count": 38, "itemId": "NhD4e6ca", "itemSku": "4sQQ2cBY", "itemType": "WuLoLTv3"}, {"count": 32, "itemId": "vYdC1U5w", "itemSku": "4m5txx07", "itemType": "HqdTGEHG"}, {"count": 46, "itemId": "OVNM4htK", "itemSku": "8bN3fsA1", "itemType": "m2oYqenr"}], "name": "rle69F8B", "odds": 0.676972783305129, "type": "REWARD", "weight": 55}]}, "maxCount": 93, "maxCountPerUser": 23, "name": "OERGSNRI", "optionBoxConfig": {"boxItems": [{"count": 29, "itemId": "sdhPa8Vg", "itemSku": "LNqQgkh1", "itemType": "zHGsEhGa"}, {"count": 38, "itemId": "xhMXl2Qd", "itemSku": "NPMzVRKs", "itemType": "rebzcmeV"}, {"count": 44, "itemId": "DJOCSAIO", "itemSku": "ZDV6Uqcl", "itemType": "pHjDU7i5"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 85, "fixedTrialCycles": 32, "graceDays": 32}, "regionData": {"NUzuLid8": [{"currencyCode": "9fFT9JCv", "currencyNamespace": "tAb0RL9I", "currencyType": "REAL", "discountAmount": 31, "discountExpireAt": "1978-12-01T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1980-12-18T00:00:00Z", "discountedPrice": 67, "expireAt": "1972-06-22T00:00:00Z", "price": 84, "purchaseAt": "1990-01-25T00:00:00Z", "trialPrice": 100}, {"currencyCode": "skwcGdcu", "currencyNamespace": "OYr2Q83m", "currencyType": "VIRTUAL", "discountAmount": 29, "discountExpireAt": "1987-08-05T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1975-03-06T00:00:00Z", "discountedPrice": 57, "expireAt": "1983-09-29T00:00:00Z", "price": 75, "purchaseAt": "1979-03-20T00:00:00Z", "trialPrice": 33}, {"currencyCode": "BjjMn6oz", "currencyNamespace": "i4wsPwS1", "currencyType": "VIRTUAL", "discountAmount": 46, "discountExpireAt": "1981-11-08T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1981-03-03T00:00:00Z", "discountedPrice": 1, "expireAt": "1996-08-05T00:00:00Z", "price": 46, "purchaseAt": "1973-08-27T00:00:00Z", "trialPrice": 97}], "y2mEsEnc": [{"currencyCode": "zu8UvOnD", "currencyNamespace": "hP48zAZL", "currencyType": "REAL", "discountAmount": 89, "discountExpireAt": "1994-09-05T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1975-01-15T00:00:00Z", "discountedPrice": 3, "expireAt": "1988-01-02T00:00:00Z", "price": 68, "purchaseAt": "1997-03-14T00:00:00Z", "trialPrice": 33}, {"currencyCode": "QtRrZSm5", "currencyNamespace": "OAC6FKj3", "currencyType": "REAL", "discountAmount": 73, "discountExpireAt": "1977-07-15T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1988-05-03T00:00:00Z", "discountedPrice": 42, "expireAt": "1989-06-04T00:00:00Z", "price": 45, "purchaseAt": "1999-03-28T00:00:00Z", "trialPrice": 69}, {"currencyCode": "NoaM7C9g", "currencyNamespace": "Aao6BldV", "currencyType": "VIRTUAL", "discountAmount": 76, "discountExpireAt": "1977-01-26T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1994-02-09T00:00:00Z", "discountedPrice": 40, "expireAt": "1982-07-16T00:00:00Z", "price": 69, "purchaseAt": "1973-04-29T00:00:00Z", "trialPrice": 71}], "UYdX6ctx": [{"currencyCode": "BucFm0oI", "currencyNamespace": "xMWEc22g", "currencyType": "REAL", "discountAmount": 64, "discountExpireAt": "1973-04-14T00:00:00Z", "discountPercentage": 34, "discountPurchaseAt": "1992-12-22T00:00:00Z", "discountedPrice": 49, "expireAt": "1997-10-12T00:00:00Z", "price": 75, "purchaseAt": "1979-10-29T00:00:00Z", "trialPrice": 35}, {"currencyCode": "KXRn0oGp", "currencyNamespace": "tSlT268x", "currencyType": "VIRTUAL", "discountAmount": 91, "discountExpireAt": "1986-01-26T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1993-10-27T00:00:00Z", "discountedPrice": 4, "expireAt": "1982-09-18T00:00:00Z", "price": 54, "purchaseAt": "1980-11-18T00:00:00Z", "trialPrice": 99}, {"currencyCode": "P1myGuxH", "currencyNamespace": "YcbCmuOP", "currencyType": "REAL", "discountAmount": 30, "discountExpireAt": "1979-10-23T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1987-04-03T00:00:00Z", "discountedPrice": 60, "expireAt": "1975-08-01T00:00:00Z", "price": 28, "purchaseAt": "1995-11-28T00:00:00Z", "trialPrice": 48}]}, "seasonType": "PASS", "sku": "cXyrSIGf", "stackable": true, "status": "INACTIVE", "tags": ["upqJriGU", "O9LoO46W", "uExGbfYK"], "targetCurrencyCode": "E2TaziLv", "targetNamespace": "HmCCPdis", "thumbnailUrl": "PTeSzqwg", "useCount": 2}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'BjY5HJfu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'CreateItem' test.out

#- 87 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'm2BURh3y' \
    --appId '8dW2h3rq' \
    > test.out 2>&1
eval_tap $? 87 'GetItemByAppId' test.out

#- 88 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'GAME' \
    --availableDate 'gGOH8kpq' \
    --baseAppId '3zFenrSh' \
    --categoryPath 'TOby4ybG' \
    --features 'igdQK3BH' \
    --includeSubCategoryItem 'false' \
    --itemType 'EXTENSION' \
    --limit '13' \
    --offset '74' \
    --region 'RNK7bYkZ' \
    --sortBy '["name:asc", "updatedAt"]' \
    --storeId 'PGEHDehL' \
    --tags 'kgPYfv0t' \
    --targetNamespace 'frU5EgIz' \
    > test.out 2>&1
eval_tap $? 88 'QueryItems' test.out

#- 89 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["jWmMXcHI", "UguBDd8e", "Sh0LCgYz"]' \
    > test.out 2>&1
eval_tap $? 89 'ListBasicItemsByFeatures' test.out

#- 90 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'z7uV763f' \
    --sku 'tvPpLdZJ' \
    > test.out 2>&1
eval_tap $? 90 'GetItemBySku' test.out

#- 91 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'uywBFN66' \
    --populateBundle 'false' \
    --region 'KGbFAUUP' \
    --storeId 'hLMg8H68' \
    --sku 'Ed7iVoMr' \
    > test.out 2>&1
eval_tap $? 91 'GetLocaleItemBySku' test.out

#- 92 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'xXkeAUzT' \
    --sku '7Q97Q50n' \
    > test.out 2>&1
eval_tap $? 92 'GetItemIdBySku' test.out

#- 93 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["APxzW8un", "KuTePr0l", "m13bi5IU"]' \
    --storeId 'T8qErkOe' \
    > test.out 2>&1
eval_tap $? 93 'GetBulkItemIdBySkus' test.out

#- 94 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'mDrqarMs' \
    --region 'quODzrZE' \
    --storeId 'MaqaVt21' \
    --itemIds 'DyyjeUEu' \
    > test.out 2>&1
eval_tap $? 94 'BulkGetLocaleItems' test.out

#- 95 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetAvailablePredicateTypes' test.out

#- 96 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["Bf3O1Vma", "gf48asOk", "e71iWKbG"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'RUKoyqeR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 96 'ValidateItemPurchaseCondition' test.out

#- 97 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'INGAMEITEM' \
    --limit '39' \
    --offset '89' \
    --sortBy '6TRXI7V7' \
    --storeId 'ggcZBMKc' \
    --keyword 'Nd276YYD' \
    --language 'IkUKxZCK' \
    > test.out 2>&1
eval_tap $? 97 'SearchItems' test.out

#- 98 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '98' \
    --offset '10' \
    --sortBy '["name:asc", "updatedAt:desc", "updatedAt"]' \
    --storeId 'EtmmNM7o' \
    > test.out 2>&1
eval_tap $? 98 'QueryUncategorizedItems' test.out

#- 99 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'B697bHE6' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'WunzFSJS' \
    > test.out 2>&1
eval_tap $? 99 'GetItem' test.out

#- 100 UpdateItem
# body param: body
echo '{"appId": "voHtWHIE", "appType": "DEMO", "baseAppId": "JP2chvcf", "boothName": "gy3ZUu2w", "categoryPath": "frz5CMnV", "clazz": "VuVZluVO", "displayOrder": 81, "entitlementType": "CONSUMABLE", "ext": {"FXeBp69A": {}, "lqIU2Czq": {}, "VlZbYIGD": {}}, "features": ["sj5XULvH", "naDnpuUw", "DMOuojiW"], "images": [{"as": "gkIfuX6Y", "caption": "riQaHNsq", "height": 46, "imageUrl": "tw9824nS", "smallImageUrl": "xT61pfhA", "width": 63}, {"as": "lYLXnBTn", "caption": "rxxlnDmD", "height": 61, "imageUrl": "4rmkvtB8", "smallImageUrl": "OoaBKHFz", "width": 49}, {"as": "QFwQQXyK", "caption": "W7zcq8uC", "height": 34, "imageUrl": "FEaCSiqp", "smallImageUrl": "yOKK56bp", "width": 91}], "itemIds": ["qpQjMtCW", "emyS1N4e", "xrpKN5Yx"], "itemQty": {"ghINilMS": 77, "qyX8ucn0": 24, "noP7tg2p": 7}, "itemType": "CODE", "listable": false, "localizations": {"qESo6cka": {"description": "r963WHrm", "localExt": {"OeYXRO8j": {}, "Ov5PWmER": {}, "5ybabHQ9": {}}, "longDescription": "RPWcNANf", "title": "fiD7zXhO"}, "zHt8Geil": {"description": "R4OCeEvO", "localExt": {"D2zfhrvg": {}, "ASiVF6r2": {}, "tidS1M8o": {}}, "longDescription": "iowiZMcZ", "title": "9O0hHMmW"}, "xyXaUY7S": {"description": "L9qgBxVI", "localExt": {"HJ2NEyTK": {}, "3yUpCD16": {}, "hZQPEza2": {}}, "longDescription": "ZqrghAV9", "title": "IdzW0DY0"}}, "lootBoxConfig": {"rewardCount": 88, "rewards": [{"lootBoxItems": [{"count": 53, "itemId": "cfKKTogg", "itemSku": "TeJMbNV9", "itemType": "jac60ZV6"}, {"count": 83, "itemId": "pXm2k78t", "itemSku": "8UvKsKEu", "itemType": "1hiGyL8y"}, {"count": 37, "itemId": "YUxE62wC", "itemSku": "QlZTRYxr", "itemType": "G9OurXh9"}], "name": "xJ7BG24t", "odds": 0.0038279570601292834, "type": "REWARD", "weight": 22}, {"lootBoxItems": [{"count": 45, "itemId": "rZQuAqff", "itemSku": "WEEze9y5", "itemType": "9cUxuZpN"}, {"count": 46, "itemId": "kl1eJYvb", "itemSku": "3YWS3MPv", "itemType": "RUKmQIi8"}, {"count": 8, "itemId": "BU7WGjLy", "itemSku": "49Xt1yPv", "itemType": "Xh27gkQd"}], "name": "CErahfV8", "odds": 0.016573463082898088, "type": "PROBABILITY_GROUP", "weight": 89}, {"lootBoxItems": [{"count": 66, "itemId": "kIVNYZC4", "itemSku": "aEgTMQcU", "itemType": "0Xp6GFGj"}, {"count": 88, "itemId": "hRz235tV", "itemSku": "s8M1qm4s", "itemType": "JkEWidK3"}, {"count": 35, "itemId": "F3uM9Uj3", "itemSku": "t3uw1pTC", "itemType": "n2LzcQVi"}], "name": "EBEGA1OT", "odds": 0.5956014026109129, "type": "REWARD_GROUP", "weight": 64}]}, "maxCount": 49, "maxCountPerUser": 76, "name": "h9Bem0oW", "optionBoxConfig": {"boxItems": [{"count": 37, "itemId": "pqzXlOqn", "itemSku": "ibdjXqhz", "itemType": "Y1wsVbpB"}, {"count": 92, "itemId": "mzNofXuQ", "itemSku": "l8Tmi668", "itemType": "zY3vZYta"}, {"count": 86, "itemId": "1FZ09cHr", "itemSku": "ZHoB7BeA", "itemType": "LYT5fAXf"}]}, "purchasable": false, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 26, "fixedTrialCycles": 28, "graceDays": 39}, "regionData": {"SaOziNj8": [{"currencyCode": "4q3b12Ki", "currencyNamespace": "MC1P0vLz", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1984-01-07T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1999-05-06T00:00:00Z", "discountedPrice": 78, "expireAt": "1990-07-11T00:00:00Z", "price": 2, "purchaseAt": "1971-11-26T00:00:00Z", "trialPrice": 15}, {"currencyCode": "V0XP9Z6z", "currencyNamespace": "mT2Gv2vp", "currencyType": "REAL", "discountAmount": 79, "discountExpireAt": "1983-02-18T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1977-05-04T00:00:00Z", "discountedPrice": 32, "expireAt": "1982-10-04T00:00:00Z", "price": 98, "purchaseAt": "1993-02-15T00:00:00Z", "trialPrice": 72}, {"currencyCode": "M5hVH3Cu", "currencyNamespace": "3PwFsvqM", "currencyType": "REAL", "discountAmount": 10, "discountExpireAt": "1993-03-17T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1981-03-25T00:00:00Z", "discountedPrice": 38, "expireAt": "1982-08-04T00:00:00Z", "price": 63, "purchaseAt": "1978-06-29T00:00:00Z", "trialPrice": 14}], "M0NQ5s8S": [{"currencyCode": "TcOtlSqp", "currencyNamespace": "NhzDUdPi", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1990-05-11T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1982-05-02T00:00:00Z", "discountedPrice": 55, "expireAt": "1976-01-11T00:00:00Z", "price": 93, "purchaseAt": "1974-11-10T00:00:00Z", "trialPrice": 38}, {"currencyCode": "XPSUilDi", "currencyNamespace": "aXqtz7sg", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1997-04-22T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1973-06-07T00:00:00Z", "discountedPrice": 18, "expireAt": "1987-11-18T00:00:00Z", "price": 55, "purchaseAt": "1981-11-28T00:00:00Z", "trialPrice": 50}, {"currencyCode": "9VUxw4SF", "currencyNamespace": "RXfcY8m4", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1986-02-16T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1995-01-19T00:00:00Z", "discountedPrice": 9, "expireAt": "1978-03-04T00:00:00Z", "price": 99, "purchaseAt": "1995-04-13T00:00:00Z", "trialPrice": 29}], "Gn79Hwq2": [{"currencyCode": "vSRdRxGq", "currencyNamespace": "tqwUdwuf", "currencyType": "VIRTUAL", "discountAmount": 100, "discountExpireAt": "1975-04-14T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1977-05-24T00:00:00Z", "discountedPrice": 40, "expireAt": "1973-12-07T00:00:00Z", "price": 59, "purchaseAt": "1972-12-14T00:00:00Z", "trialPrice": 15}, {"currencyCode": "v0Z4yoza", "currencyNamespace": "L23a5KvQ", "currencyType": "VIRTUAL", "discountAmount": 45, "discountExpireAt": "1972-12-13T00:00:00Z", "discountPercentage": 86, "discountPurchaseAt": "1993-06-14T00:00:00Z", "discountedPrice": 89, "expireAt": "1990-06-30T00:00:00Z", "price": 85, "purchaseAt": "1981-02-12T00:00:00Z", "trialPrice": 89}, {"currencyCode": "I15x4qDl", "currencyNamespace": "o59JCEKi", "currencyType": "REAL", "discountAmount": 5, "discountExpireAt": "1994-03-04T00:00:00Z", "discountPercentage": 18, "discountPurchaseAt": "1988-11-23T00:00:00Z", "discountedPrice": 30, "expireAt": "1978-04-26T00:00:00Z", "price": 4, "purchaseAt": "1989-06-28T00:00:00Z", "trialPrice": 15}]}, "seasonType": "TIER", "sku": "tqURQmuw", "stackable": true, "status": "INACTIVE", "tags": ["OU3stVFJ", "y8a5naFh", "TCxICTjn"], "targetCurrencyCode": "B4e9OIgO", "targetNamespace": "nDwnxT4I", "thumbnailUrl": "J3rpEAts", "useCount": 53}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId '4FfH12fO' \
    --namespace $AB_NAMESPACE \
    --storeId '8r9woxdS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateItem' test.out

#- 101 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'ceBW4rTA' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'ABww4MTb' \
    > test.out 2>&1
eval_tap $? 101 'DeleteItem' test.out

#- 102 AcquireItem
# body param: body
echo '{"count": 69, "orderNo": "AxyNkPs0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId '7KNIJIEa' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'AcquireItem' test.out

#- 103 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'U5WUPlhz' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'JKFOaCMS' \
    > test.out 2>&1
eval_tap $? 103 'GetApp' test.out

#- 104 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "YAhPHx4s", "previewUrl": "2Rg0f4j9", "thumbnailUrl": "4kuEhgDa", "type": "video", "url": "a1uVOXmd", "videoSource": "youtube"}, {"alt": "OAXrJPyn", "previewUrl": "EBQJjPvr", "thumbnailUrl": "FHTUAAue", "type": "video", "url": "n6smiFNZ", "videoSource": "youtube"}, {"alt": "t4lX9nBp", "previewUrl": "1HLCDJvJ", "thumbnailUrl": "40i8OGbJ", "type": "video", "url": "RCp7mb70", "videoSource": "vimeo"}], "developer": "VKB6oaqc", "forumUrl": "LMskmdoP", "genres": ["Sports", "FreeToPlay", "MassivelyMultiplayer"], "localizations": {"xRF0ecWf": {"announcement": "HAMVB9ev", "slogan": "GuCmfMk0"}, "a4lW2wAR": {"announcement": "lKcoT0y7", "slogan": "F2aUJkW7"}, "Vk2mshSI": {"announcement": "HAOw6rK1", "slogan": "CkZDZ6eq"}}, "platformRequirements": {"nXCV39em": [{"additionals": "HB2JDkdE", "directXVersion": "qgADzv4i", "diskSpace": "M5y3YbDq", "graphics": "y33vMnvi", "label": "ni6YE18M", "osVersion": "SHZYbJUx", "processor": "WCks6jtS", "ram": "jyX48i0F", "soundCard": "qcWghLv2"}, {"additionals": "DFbk40RG", "directXVersion": "6mOxhrSF", "diskSpace": "Mntw5OUT", "graphics": "uXrNKwuB", "label": "COXwLuzW", "osVersion": "qgVcrygT", "processor": "M99gdcDN", "ram": "6kxZcgX3", "soundCard": "TH82hFcG"}, {"additionals": "OwH7N8wY", "directXVersion": "pLcMaA8a", "diskSpace": "tKCGGVvj", "graphics": "O7Dboo82", "label": "L8cotf7g", "osVersion": "nxcvNYos", "processor": "pd6j4abW", "ram": "PGjshUsX", "soundCard": "KZNKTHvr"}], "hDkUsEUF": [{"additionals": "acMkOqMb", "directXVersion": "zaMrcyqO", "diskSpace": "4tiCvSAI", "graphics": "6Aa5HpVo", "label": "90NYXWG0", "osVersion": "42SjtOWx", "processor": "IdibMZDT", "ram": "tLZfNxUR", "soundCard": "derQMOig"}, {"additionals": "ZUZ2ZOmP", "directXVersion": "339NstjS", "diskSpace": "g8tLkNCL", "graphics": "WWjragsB", "label": "SCB4XM7h", "osVersion": "MO474QhL", "processor": "8fLEm4Xx", "ram": "KOfpOZmN", "soundCard": "8QTgag3L"}, {"additionals": "NlHZXFrd", "directXVersion": "vEScoPOd", "diskSpace": "Hg9KgUGS", "graphics": "0yqW4XlB", "label": "cjE1Ka8o", "osVersion": "QixeGz9z", "processor": "cHX85hSj", "ram": "gUw3BOpY", "soundCard": "a71QkLs6"}], "55k4rN7U": [{"additionals": "k5u6QNkI", "directXVersion": "izLcBHJO", "diskSpace": "xRzpEjwc", "graphics": "bMiYZG9s", "label": "H1mCgz94", "osVersion": "3cLvG2Mc", "processor": "UQnqCo2f", "ram": "tTDPAmCa", "soundCard": "UW2z3k9P"}, {"additionals": "bJYzm2AQ", "directXVersion": "UWSF699Q", "diskSpace": "PKTr56OR", "graphics": "lB2ZCOXE", "label": "if3YDIP4", "osVersion": "UfDldKRd", "processor": "D3S2XuPA", "ram": "HikA330s", "soundCard": "RDcddcYK"}, {"additionals": "zK7NgFJK", "directXVersion": "V5yg2COi", "diskSpace": "6VOZ4aa6", "graphics": "J0LqrGMH", "label": "i4o3H4S2", "osVersion": "RZEvk1PI", "processor": "jwTKlbEX", "ram": "qhRYm6AK", "soundCard": "h6pndyhN"}]}, "platforms": ["IOS", "Windows", "Android"], "players": ["LocalCoop", "Single", "LocalCoop"], "primaryGenre": "Strategy", "publisher": "0hZXGf04", "releaseDate": "1996-04-15T00:00:00Z", "websiteUrl": "wKXMYAXu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'JnyINCk8' \
    --namespace $AB_NAMESPACE \
    --storeId 'EVVR0tLT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 104 'UpdateApp' test.out

#- 105 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'c8UQCVuI' \
    --namespace $AB_NAMESPACE \
    --storeId 'BxItxBfY' \
    > test.out 2>&1
eval_tap $? 105 'DisableItem' test.out

#- 106 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'hZaiG9GJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'GetItemDynamicData' test.out

#- 107 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'M39JVkbD' \
    --namespace $AB_NAMESPACE \
    --storeId 'A4KrOfXt' \
    > test.out 2>&1
eval_tap $? 107 'EnableItem' test.out

#- 108 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'SWDXScLI' \
    --itemId 'eNA9caLf' \
    --namespace $AB_NAMESPACE \
    --storeId 'LZXqbFMv' \
    > test.out 2>&1
eval_tap $? 108 'FeatureItem' test.out

#- 109 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'PmIaL6VX' \
    --itemId 'sPpd7xDv' \
    --namespace $AB_NAMESPACE \
    --storeId '0ZkZlj8B' \
    > test.out 2>&1
eval_tap $? 109 'DefeatureItem' test.out

#- 110 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'flyC0vQX' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language '2KEaFcMW' \
    --populateBundle 'false' \
    --region '92vs8fiH' \
    --storeId '8ZyRqxMT' \
    > test.out 2>&1
eval_tap $? 110 'GetLocaleItem' test.out

#- 111 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 90, "comparison": "isLessThan", "name": "bY8UBxoL", "predicateType": "SeasonPassPredicate", "value": "0z2DAHHz", "values": ["PKLGXz2D", "Pn3cIUYR", "npfnjluk"]}, {"anyOf": 39, "comparison": "isLessThanOrEqual", "name": "OePn3k8c", "predicateType": "SeasonTierPredicate", "value": "lXh74IQ6", "values": ["JgZTbDww", "yGqhFENG", "KH9rzRtp"]}, {"anyOf": 78, "comparison": "isGreaterThan", "name": "Ol8r5AZ9", "predicateType": "EntitlementPredicate", "value": "rV7ZAs6Q", "values": ["u64M4tw9", "arZvg7Bc", "04R1kbRU"]}]}, {"operator": "and", "predicates": [{"anyOf": 40, "comparison": "isLessThan", "name": "MALeJGot", "predicateType": "SeasonTierPredicate", "value": "407sZySW", "values": ["WnUIaJ25", "uGdq9k1R", "4cgy92YH"]}, {"anyOf": 68, "comparison": "isGreaterThan", "name": "MSl8e4o6", "predicateType": "EntitlementPredicate", "value": "9XBXaiLE", "values": ["i7N10HGL", "kvstax6N", "hw3YdBAX"]}, {"anyOf": 58, "comparison": "isLessThanOrEqual", "name": "X76JbGxA", "predicateType": "SeasonPassPredicate", "value": "wVjLUzQF", "values": ["8uCdauxg", "hySqgqcP", "fnvWsQPv"]}]}, {"operator": "and", "predicates": [{"anyOf": 52, "comparison": "isLessThan", "name": "a3Sny4SB", "predicateType": "SeasonPassPredicate", "value": "qCUy4KtQ", "values": ["isGDMHzn", "MMZ4ILew", "DEIWVQN1"]}, {"anyOf": 16, "comparison": "is", "name": "T3PJVFnj", "predicateType": "EntitlementPredicate", "value": "K5JHDhEp", "values": ["92Mp7oqA", "CbR9No07", "V6WVV0SA"]}, {"anyOf": 2, "comparison": "isNot", "name": "N4ZKm97Q", "predicateType": "EntitlementPredicate", "value": "Ixrhv1Ij", "values": ["M3B45mUl", "GafcLaLt", "38Gz9UJN"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId '78s8INhr' \
    --namespace $AB_NAMESPACE \
    --storeId 'VjVzoQGV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'UpdateItemPurchaseCondition' test.out

#- 112 ReturnItem
# body param: body
echo '{"orderNo": "i1NPs7OH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'K7XpfWkZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'ReturnItem' test.out

#- 113 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '98' \
    --name 'a4lD7N2r' \
    --offset '98' \
    --tag 'PBk9h864' \
    > test.out 2>&1
eval_tap $? 113 'QueryKeyGroups' test.out

#- 114 CreateKeyGroup
# body param: body
echo '{"description": "ZJYUXrww", "name": "hFgKGWie", "status": "INACTIVE", "tags": ["9JJl2gLz", "PUQcyhR0", "iGQLLlmF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'CreateKeyGroup' test.out

#- 115 GetKeyGroupByBoothName
eval_tap 0 115 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 116 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'oYuo6YZf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'GetKeyGroup' test.out

#- 117 UpdateKeyGroup
# body param: body
echo '{"description": "ZPvMqGTS", "name": "8kfXmX6J", "status": "INACTIVE", "tags": ["9WHvNJR9", "3RddiODf", "R5VNxJHi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'dL3fue7B' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'UpdateKeyGroup' test.out

#- 118 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'dg8nv4Tw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'GetKeyGroupDynamic' test.out

#- 119 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'xKTF61GB' \
    --namespace $AB_NAMESPACE \
    --limit '14' \
    --offset '37' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 119 'ListKeys' test.out

#- 120 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'tbD5UuqM' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 120 'UploadKeys' test.out

#- 121 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'odDqDJ1C' \
    --limit '96' \
    --offset '97' \
    --orderNos '["y5HD8rWs", "Gf3ajkGl", "fr9c6u12"]' \
    --sortBy 's9nKpUhT' \
    --startTime 'MrSDzCyT' \
    --status 'CHARGEBACK_REVERSED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 121 'QueryOrders' test.out

#- 122 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetOrderStatistics' test.out

#- 123 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'eEHuMX6q' \
    > test.out 2>&1
eval_tap $? 123 'GetOrder' test.out

#- 124 RefundOrder
# body param: body
echo '{"description": "8FVJwLIu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '5EVKbZGy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'RefundOrder' test.out

#- 125 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 125 'GetPaymentCallbackConfig' test.out

#- 126 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "SsQ2BiiL", "privateKey": "eoku1LkE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'UpdatePaymentCallbackConfig' test.out

#- 127 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'lEKGKoIQ' \
    --externalId '3wM8xKCw' \
    --limit '34' \
    --notificationSource 'STRIPE' \
    --notificationType 'oNFWBK4F' \
    --offset '58' \
    --paymentOrderNo 'h9nRJ1Hs' \
    --startDate 'zBQKeMEq' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 127 'QueryPaymentNotifications' test.out

#- 128 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'KAmnD9gY' \
    --limit '80' \
    --offset '53' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 128 'QueryPaymentOrders' test.out

#- 129 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "5QQwIj2r", "currencyNamespace": "z9J0qNSJ", "customParameters": {"fXOGzE6r": {}, "T9PB0tpC": {}, "A3pTUP2f": {}}, "description": "kuGRIGch", "extOrderNo": "aNRaOScP", "extUserId": "8Fvc1LNh", "itemType": "COINS", "language": "DC_Wd", "metadata": {"kgw6lEyt": "efIF2ghc", "qZ9zJWPN": "BCPLwAJu", "PJ4lvCDJ": "TV5VQlJv"}, "notifyUrl": "y18tuwaS", "omitNotification": false, "platform": "u9KMw9Si", "price": 77, "recurringPaymentOrderNo": "wW4kT9Yh", "region": "pn53Ezxz", "returnUrl": "kKpXXsBr", "sandbox": false, "sku": "v2Nkg4CV", "subscriptionId": "YrQhRRHq", "targetNamespace": "3gsPA8BB", "targetUserId": "q9axSFzw", "title": "o6KNWUCh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'CreatePaymentOrderByDedicated' test.out

#- 130 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'fydBzgKy' \
    > test.out 2>&1
eval_tap $? 130 'ListExtOrderNoByExtTxId' test.out

#- 131 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'vSByyiEF' \
    > test.out 2>&1
eval_tap $? 131 'GetPaymentOrder' test.out

#- 132 ChargePaymentOrder
# body param: body
echo '{"extTxId": "olvoIdF3", "paymentMethod": "jMNyNwfk", "paymentProvider": "CHECKOUT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'HXxtNJEK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ChargePaymentOrder' test.out

#- 133 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "XUdVli4U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '3webe2SZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'RefundPaymentOrderByDedicated' test.out

#- 134 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 95, "currencyCode": "CmeDue4d", "notifyType": "REFUND", "paymentProvider": "WXPAY", "salesTax": 36, "vat": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'kMiYqxZS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'SimulatePaymentOrderNotification' test.out

#- 135 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'JK8KUWcq' \
    > test.out 2>&1
eval_tap $? 135 'GetPaymentOrderChargeStatus' test.out

#- 136 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 136 'GetPlatformWalletConfig' test.out

#- 137 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Xbox", "GooglePlay", "System"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdatePlatformWalletConfig' test.out

#- 138 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 138 'ResetPlatformWalletConfig' test.out

#- 139 CreateReward
# body param: body
echo '{"description": "omlE8qra", "eventTopic": "8qhLQjJX", "maxAwarded": 72, "maxAwardedPerUser": 1, "namespaceExpression": "zTbs4wAo", "rewardCode": "bCVBNlbb", "rewardConditions": [{"condition": "dqFMl57d", "conditionName": "TccC2n4h", "eventName": "ReloQqP4", "rewardItems": [{"duration": 2, "itemId": "vf0IFcGk", "quantity": 25}, {"duration": 89, "itemId": "RrezY4bO", "quantity": 80}, {"duration": 75, "itemId": "hjOQrhW3", "quantity": 69}]}, {"condition": "tOopHblE", "conditionName": "H9yW5CI4", "eventName": "FSEIKmRA", "rewardItems": [{"duration": 71, "itemId": "c1LlLaWi", "quantity": 17}, {"duration": 82, "itemId": "1MKZiNXO", "quantity": 33}, {"duration": 95, "itemId": "Xinfqu4V", "quantity": 87}]}, {"condition": "HsxVYMFc", "conditionName": "PzP2XVam", "eventName": "kWy9JO47", "rewardItems": [{"duration": 53, "itemId": "trI09H7K", "quantity": 100}, {"duration": 51, "itemId": "CvVBOkkw", "quantity": 28}, {"duration": 14, "itemId": "PnUdmR3o", "quantity": 99}]}], "userIdExpression": "pQhQuMEI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'CreateReward' test.out

#- 140 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'VS1OlgsL' \
    --limit '16' \
    --offset '41' \
    --sortBy '["namespace", "rewardCode", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 140 'QueryRewards' test.out

#- 141 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 141 'ExportRewards' test.out

#- 142 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 142 'ImportRewards' test.out

#- 143 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'QYa2PC79' \
    > test.out 2>&1
eval_tap $? 143 'GetReward' test.out

#- 144 UpdateReward
# body param: body
echo '{"description": "duvCrZhu", "eventTopic": "pzhMaJ2L", "maxAwarded": 17, "maxAwardedPerUser": 12, "namespaceExpression": "SVD5aVZq", "rewardCode": "igAUqTSO", "rewardConditions": [{"condition": "LJIz7ByC", "conditionName": "6j0GNlpM", "eventName": "JdmsI8xE", "rewardItems": [{"duration": 30, "itemId": "N9VNXYJv", "quantity": 14}, {"duration": 72, "itemId": "JS5QqaM5", "quantity": 25}, {"duration": 89, "itemId": "ACCDyMgR", "quantity": 4}]}, {"condition": "IbrLgFsQ", "conditionName": "GggCdkhG", "eventName": "Qr0oPw6k", "rewardItems": [{"duration": 28, "itemId": "W4nwctwB", "quantity": 16}, {"duration": 39, "itemId": "WMa1Afht", "quantity": 33}, {"duration": 57, "itemId": "8JmB737o", "quantity": 60}]}, {"condition": "nTGVi50u", "conditionName": "V3kQhE8H", "eventName": "MWfNPDFA", "rewardItems": [{"duration": 54, "itemId": "ZvM9ZqO1", "quantity": 94}, {"duration": 90, "itemId": "OcFiHUbf", "quantity": 44}, {"duration": 57, "itemId": "IyIKkYti", "quantity": 62}]}], "userIdExpression": "c89apEcS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ij4amhx6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateReward' test.out

#- 145 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'kl7IYCcy' \
    > test.out 2>&1
eval_tap $? 145 'DeleteReward' test.out

#- 146 CheckEventCondition
# body param: body
echo '{"payload": {"Lww0EFOM": {}, "dmXypBwW": {}, "w3WKqxZi": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'i5ljPXA9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CheckEventCondition' test.out

#- 147 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "sbpIPlhC", "userId": "BOFQSd8H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'cg5IT9mV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteRewardConditionRecord' test.out

#- 148 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'h5lryp3A' \
    --limit '42' \
    --offset '52' \
    --start '7VZT0vUz' \
    --storeId 'wbASwRc3' \
    --viewId 'RwZcFLIu' \
    > test.out 2>&1
eval_tap $? 148 'QuerySections' test.out

#- 149 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 0, "endDate": "1987-08-28T00:00:00Z", "ext": {"1oGMnK0A": {}, "lsj6bCNW": {}, "FTUQxQ7I": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 67, "itemCount": 30, "rule": "SEQUENCE"}, "items": [{"id": "9IQyRm7l", "sku": "spspI4KJ"}, {"id": "WqFFIMNi", "sku": "r4C7aZ5T"}, {"id": "ECmIX5cX", "sku": "Sh2fzIwH"}], "localizations": {"2o8IaY6P": {"description": "K3DfQlxw", "localExt": {"ssXPSOnS": {}, "3h9zZaQS": {}, "Op7OwDXl": {}}, "longDescription": "gxxbJlDd", "title": "mJBiYH6Z"}, "1xrTshaa": {"description": "3pVnPX7w", "localExt": {"aY6kjhfL": {}, "sW6oD7xT": {}, "FmPQYlec": {}}, "longDescription": "TpmbG47Y", "title": "OORWX4tV"}, "Bsi3nkJp": {"description": "2g6SoVHa", "localExt": {"55cqpclF": {}, "gOHl7Ve5": {}, "8pjfrhXz": {}}, "longDescription": "FM1DJjtM", "title": "Ep7CDJ0g"}}, "name": "iarWFjdP", "rotationType": "NONE", "startDate": "1978-05-31T00:00:00Z", "viewId": "4NaYt9Sq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId '4ILc3TzL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreateSection' test.out

#- 150 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'c1tcRDFp' \
    > test.out 2>&1
eval_tap $? 150 'PurgeExpiredSection' test.out

#- 151 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId '9nTEaQ4y' \
    --storeId 'o5CUjdLL' \
    > test.out 2>&1
eval_tap $? 151 'GetSection' test.out

#- 152 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 56, "endDate": "1973-05-25T00:00:00Z", "ext": {"yqATbHdI": {}, "sUxDTHKj": {}, "kPIbDwXa": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 45, "itemCount": 92, "rule": "SEQUENCE"}, "items": [{"id": "4nCoImDk", "sku": "Om5Ihddl"}, {"id": "GoLf1cCp", "sku": "Nvr2ow8E"}, {"id": "jRDh502S", "sku": "KxNKhZEq"}], "localizations": {"TOsDx0Ku": {"description": "ZLBt9mzd", "localExt": {"9P00kevF": {}, "MLDtnw3S": {}, "EbBYOHgg": {}}, "longDescription": "qxgCAx5f", "title": "MmuTNEOT"}, "QFR2EgYQ": {"description": "4Hj5JBc0", "localExt": {"q0gV7hXE": {}, "asJXbStL": {}, "QsCbr3BD": {}}, "longDescription": "b26RJNJ9", "title": "PKCcWs6C"}, "J6TzDzR7": {"description": "mbyIT06e", "localExt": {"XbppKvIq": {}, "tPznDHUj": {}, "MklhJmxA": {}}, "longDescription": "X1MQTcPm", "title": "bgu7Mhrz"}}, "name": "V2Hhn8SW", "rotationType": "NONE", "startDate": "1999-04-28T00:00:00Z", "viewId": "Re6SuHCR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'casujyj4' \
    --storeId 'jd6XkUjD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSection' test.out

#- 153 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'n6MrXRZb' \
    --storeId 'dR3R1sri' \
    > test.out 2>&1
eval_tap $? 153 'DeleteSection' test.out

#- 154 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 154 'ListStores' test.out

#- 155 CreateStore
# body param: body
echo '{"defaultLanguage": "tzLjB7Rm", "defaultRegion": "nnJdHvLE", "description": "1eHkiFbc", "supportedLanguages": ["ncRwf12V", "dL4WclHo", "eUYcZqCR"], "supportedRegions": ["UZNxRvTk", "QIayAoe1", "MCa4RhOc"], "title": "nMHl1jn4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'CreateStore' test.out

#- 156 ImportStore
eval_tap 0 156 'ImportStore # SKIP deprecated' test.out

#- 157 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 157 'GetPublishedStore' test.out

#- 158 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 158 'DeletePublishedStore' test.out

#- 159 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'GetPublishedStoreBackup' test.out

#- 160 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 160 'RollbackPublishedStore' test.out

#- 161 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'fFVj12cd' \
    > test.out 2>&1
eval_tap $? 161 'GetStore' test.out

#- 162 UpdateStore
# body param: body
echo '{"defaultLanguage": "psTWTKAx", "defaultRegion": "0aSPyKEA", "description": "hLHk0dJS", "supportedLanguages": ["xyTQPhax", "0yKQGxvi", "sUO7xe7g"], "supportedRegions": ["WsygRTrP", "5b6TdcyF", "5XZeuW55"], "title": "LFXEJALr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'G4Wvw3EE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateStore' test.out

#- 163 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'VqrmDz4D' \
    > test.out 2>&1
eval_tap $? 163 'DeleteStore' test.out

#- 164 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'xyIiMK5R' \
    --action 'CREATE' \
    --itemSku 'CsxgZaXv' \
    --itemType 'COINS' \
    --limit '27' \
    --offset '91' \
    --selected 'false' \
    --sortBy '["createdAt:desc", "updatedAt:desc"]' \
    --status 'UNPUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'U5HPQUfY' \
    --updatedAtStart 'llRACaBj' \
    > test.out 2>&1
eval_tap $? 164 'QueryChanges' test.out

#- 165 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'Ybgq2AzU' \
    > test.out 2>&1
eval_tap $? 165 'PublishAll' test.out

#- 166 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'ensTvRyR' \
    > test.out 2>&1
eval_tap $? 166 'PublishSelected' test.out

#- 167 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'KPghUqAM' \
    > test.out 2>&1
eval_tap $? 167 'SelectAllRecords' test.out

#- 168 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'iyDCAkPQ' \
    --action 'CREATE' \
    --itemSku 'J0FN1KMu' \
    --itemType 'CODE' \
    --type 'STORE' \
    --updatedAtEnd 'cdA5F6TW' \
    --updatedAtStart 'frPkuN6I' \
    > test.out 2>&1
eval_tap $? 168 'GetStatistic' test.out

#- 169 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'WOdHo4yT' \
    > test.out 2>&1
eval_tap $? 169 'UnselectAllRecords' test.out

#- 170 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'o6MNS1hD' \
    --namespace $AB_NAMESPACE \
    --storeId '8hudtHT3' \
    > test.out 2>&1
eval_tap $? 170 'SelectRecord' test.out

#- 171 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'S9wxd7zb' \
    --namespace $AB_NAMESPACE \
    --storeId 'L7OKLQlY' \
    > test.out 2>&1
eval_tap $? 171 'UnselectRecord' test.out

#- 172 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'sLiQqXAD' \
    --targetStoreId 'otaHpgkK' \
    > test.out 2>&1
eval_tap $? 172 'CloneStore' test.out

#- 173 ExportStore
eval_tap 0 173 'ExportStore # SKIP deprecated' test.out

#- 174 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGED' \
    --itemId 'fwdbb5SR' \
    --limit '48' \
    --offset '48' \
    --sku 'KPvVq1f6' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    --userId 'MjtUFrho' \
    > test.out 2>&1
eval_tap $? 174 'QuerySubscriptions' test.out

#- 175 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'aIfp76W1' \
    > test.out 2>&1
eval_tap $? 175 'RecurringChargeSubscription' test.out

#- 176 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName '0oAgZg3S' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 176 'GetTicketDynamic' test.out

#- 177 DecreaseTicketSale
# body param: body
echo '{"orderNo": "POm5e9EQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'Q06vrmXA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DecreaseTicketSale' test.out

#- 178 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'ybYE9IU0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 178 'GetTicketBoothID' test.out

#- 179 IncreaseTicketSale
# body param: body
echo '{"count": 24, "orderNo": "2B3ZkvLi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'a0OhXxfF' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'IncreaseTicketSale' test.out

#- 180 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "ednkI8X5", "value": 48}, {"id": "bVW9roSe", "value": 28}, {"id": "ohBilDXV", "value": 55}], "steamUserId": "Ux4alxYS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'd5KacxA5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'UnlockSteamUserAchievement' test.out

#- 181 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'YjJLSFh7' \
    --xboxUserId 'gP6PaRs3' \
    > test.out 2>&1
eval_tap $? 181 'GetXblUserAchievements' test.out

#- 182 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "Z9vxMpGN", "percentComplete": 50}, {"id": "DX1Q7Gsv", "percentComplete": 74}, {"id": "eZB3VkO4", "percentComplete": 54}], "serviceConfigId": "CkhLKHK7", "titleId": "RwnwPKA4", "xboxUserId": "OgAXUNN8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'vVwIVaaZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateXblUserAchievement' test.out

#- 183 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId '8tViFfkh' \
    > test.out 2>&1
eval_tap $? 183 'AnonymizeCampaign' test.out

#- 184 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'vyzMBVWL' \
    > test.out 2>&1
eval_tap $? 184 'AnonymizeEntitlement' test.out

#- 185 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'tnHzF6M9' \
    > test.out 2>&1
eval_tap $? 185 'AnonymizeFulfillment' test.out

#- 186 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId '2dig1SrD' \
    > test.out 2>&1
eval_tap $? 186 'AnonymizeIntegration' test.out

#- 187 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'idIh2kW0' \
    > test.out 2>&1
eval_tap $? 187 'AnonymizeOrder' test.out

#- 188 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'V5dMBC7y' \
    > test.out 2>&1
eval_tap $? 188 'AnonymizePayment' test.out

#- 189 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '1Rs31QOB' \
    > test.out 2>&1
eval_tap $? 189 'AnonymizeSubscription' test.out

#- 190 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'eunqfMkF' \
    > test.out 2>&1
eval_tap $? 190 'AnonymizeWallet' test.out

#- 191 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId '6wsKc5Uu' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 191 'GetUserDLC' test.out

#- 192 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'Hr4LpMyu' \
    --activeOnly 'false' \
    --appType 'DLC' \
    --entitlementClazz 'CODE' \
    --entitlementName 'uKFhIFXU' \
    --features '["yEmAWVdd", "2IJXfQiW", "qxkDCA3C"]' \
    --itemId '["0qaTsAKW", "89oPSEJk", "rRSj9qNE"]' \
    --limit '64' \
    --offset '86' \
    > test.out 2>&1
eval_tap $? 192 'QueryUserEntitlements' test.out

#- 193 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1981-10-26T00:00:00Z", "grantedCode": "FtxdIpqg", "itemId": "86hDXedj", "itemNamespace": "JrnEkkDR", "language": "VZ-LKpv-aq", "quantity": 30, "region": "IspEa1fi", "source": "REFERRAL_BONUS", "startDate": "1982-07-04T00:00:00Z", "storeId": "dNTDqzYm"}, {"endDate": "1986-09-04T00:00:00Z", "grantedCode": "bjWovEJl", "itemId": "8gVb7bM4", "itemNamespace": "P1laXwCm", "language": "GWx_306", "quantity": 51, "region": "4b3pQa2C", "source": "PROMOTION", "startDate": "1990-07-11T00:00:00Z", "storeId": "ufg4r7Ba"}, {"endDate": "1999-11-22T00:00:00Z", "grantedCode": "ULPv7uTN", "itemId": "d27T2bYB", "itemNamespace": "GVZS7Z3o", "language": "Eqxr_HjnE", "quantity": 41, "region": "mhY1ALgA", "source": "PURCHASE", "startDate": "1979-12-13T00:00:00Z", "storeId": "xPYIHBIr"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'V5UHqXZr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'GrantUserEntitlement' test.out

#- 194 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'Ms61eBDf' \
    --activeOnly 'false' \
    --appId '1zXvHCR1' \
    > test.out 2>&1
eval_tap $? 194 'GetUserAppEntitlementByAppId' test.out

#- 195 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '7vvSTjUs' \
    --activeOnly 'true' \
    --limit '95' \
    --offset '17' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 195 'QueryUserEntitlementsByAppType' test.out

#- 196 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Tb96L4qd' \
    --activeOnly 'false' \
    --entitlementClazz 'CODE' \
    --itemId 'C4mBd9en' \
    > test.out 2>&1
eval_tap $? 196 'GetUserEntitlementByItemId' test.out

#- 197 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'A9qN9uAM' \
    --ids '["LeS0oe07", "SrFLplks", "VIhbywPm"]' \
    > test.out 2>&1
eval_tap $? 197 'GetUserActiveEntitlementsByItemIds' test.out

#- 198 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'QEllHAW3' \
    --activeOnly 'true' \
    --entitlementClazz 'APP' \
    --sku 'iZfI9btL' \
    > test.out 2>&1
eval_tap $? 198 'GetUserEntitlementBySku' test.out

#- 199 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'yXNCshfG' \
    --appIds '["s67SfJAD", "8PQgYhZG", "kWSv9VGa"]' \
    --itemIds '["rYzlAU38", "7nsm4Ohp", "Qlhz6vnC"]' \
    --skus '["NaIwQsr1", "mEI1DxXI", "c0Moact6"]' \
    > test.out 2>&1
eval_tap $? 199 'ExistsAnyUserActiveEntitlement' test.out

#- 200 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'taTjkrzB' \
    --itemIds '["clo3XTy3", "3R0eRh4H", "BMWrg0xo"]' \
    > test.out 2>&1
eval_tap $? 200 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 201 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'O70hyD40' \
    --appId 'mDWQ9EpM' \
    > test.out 2>&1
eval_tap $? 201 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 202 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'xJWzrdqR' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'SedP8n2s' \
    > test.out 2>&1
eval_tap $? 202 'GetUserEntitlementOwnershipByItemId' test.out

#- 203 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'shwvpCHd' \
    --ids '["EDFtpARJ", "WgTz8cpQ", "AdJ43foc"]' \
    > test.out 2>&1
eval_tap $? 203 'GetUserEntitlementOwnershipByItemIds' test.out

#- 204 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'aCDeuJoo' \
    --entitlementClazz 'MEDIA' \
    --sku '8OgSpXKH' \
    > test.out 2>&1
eval_tap $? 204 'GetUserEntitlementOwnershipBySku' test.out

#- 205 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'miltrOTi' \
    --entitlementIds 'tKgrTtjv' \
    > test.out 2>&1
eval_tap $? 205 'RevokeUserEntitlements' test.out

#- 206 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'xAe5JEEb' \
    --namespace $AB_NAMESPACE \
    --userId 'WxNPXz9j' \
    > test.out 2>&1
eval_tap $? 206 'GetUserEntitlement' test.out

#- 207 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1992-09-19T00:00:00Z", "nullFieldList": ["Vb16OCEh", "pCfDUwaK", "5NZmP3Tq"], "startDate": "1980-06-25T00:00:00Z", "status": "REVOKED", "useCount": 28}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'itsTB3Nn' \
    --namespace $AB_NAMESPACE \
    --userId '2VsSaYB7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'UpdateUserEntitlement' test.out

#- 208 ConsumeUserEntitlement
# body param: body
echo '{"options": ["TEBIa08F", "jFqpp1PU", "3x0hz6aW"], "requestId": "fKPAtpxZ", "useCount": 80}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'DOx1rXgr' \
    --namespace $AB_NAMESPACE \
    --userId 'AHGi9Pb8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'ConsumeUserEntitlement' test.out

#- 209 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'vcd0cHl4' \
    --namespace $AB_NAMESPACE \
    --userId 'p5EoVqcv' \
    > test.out 2>&1
eval_tap $? 209 'DisableUserEntitlement' test.out

#- 210 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'DNf9wrej' \
    --namespace $AB_NAMESPACE \
    --userId '7Ah8BfIl' \
    > test.out 2>&1
eval_tap $? 210 'EnableUserEntitlement' test.out

#- 211 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'oNbP3CZ3' \
    --namespace $AB_NAMESPACE \
    --userId 'ZXd2RVPm' \
    > test.out 2>&1
eval_tap $? 211 'GetUserEntitlementHistories' test.out

#- 212 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '7yo0vFQr' \
    --namespace $AB_NAMESPACE \
    --userId 'efKmpqm2' \
    > test.out 2>&1
eval_tap $? 212 'RevokeUserEntitlement' test.out

#- 213 FulfillItem
# body param: body
echo '{"duration": 22, "endDate": "1986-01-26T00:00:00Z", "itemId": "96Cxr3sp", "itemSku": "KOkDuEiS", "language": "sSp3KmRH", "order": {"currency": {"currencyCode": "mpc95HVb", "currencySymbol": "iwF0AWbS", "currencyType": "REAL", "decimals": 26, "namespace": "toJXf7uf"}, "ext": {"RWU9QVjG": {}, "mWQwPHpx": {}, "46jQtOM8": {}}, "free": true}, "orderNo": "Ve9Ggoe3", "origin": "Nintendo", "quantity": 86, "region": "FGBtTY9A", "source": "REWARD", "startDate": "1972-12-18T00:00:00Z", "storeId": "Df9lXf9f"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'W3AQITFz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'FulfillItem' test.out

#- 214 RedeemCode
# body param: body
echo '{"code": "jbBNxDK2", "language": "imnL", "region": "VDa7FAzo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'EZd1Ffic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'RedeemCode' test.out

#- 215 FulfillRewards
# body param: body
echo '{"origin": "Twitch", "rewards": [{"currency": {"currencyCode": "XY8TQr47", "namespace": "8rvt42Ep"}, "item": {"itemId": "h6xRfDX9", "itemSku": "mHdisTsC", "itemType": "R3iYlGRX"}, "quantity": 75, "type": "ITEM"}, {"currency": {"currencyCode": "SzIkz3tf", "namespace": "qXYzOaik"}, "item": {"itemId": "Zrx3w6G0", "itemSku": "fvmf2VJQ", "itemType": "3b9fomFz"}, "quantity": 76, "type": "CURRENCY"}, {"currency": {"currencyCode": "HbOkVWc3", "namespace": "5qP3ByD5"}, "item": {"itemId": "RTN9upsH", "itemSku": "9qUW5oZ9", "itemType": "AYgChyAa"}, "quantity": 11, "type": "ITEM"}], "source": "GIFT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'jNdZAhYF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'FulfillRewards' test.out

#- 216 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'VuoX5ZVy' \
    --endTime '4e0DbCXN' \
    --limit '49' \
    --offset '44' \
    --productId '78gPJj9b' \
    --startTime 'SqnM04Zv' \
    --status 'VERIFIED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 216 'QueryUserIAPOrders' test.out

#- 217 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'Em28jr96' \
    > test.out 2>&1
eval_tap $? 217 'QueryAllUserIAPOrders' test.out

#- 218 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'X3oZJRr9' \
    --endTime 'AIEUCFhb' \
    --limit '48' \
    --offset '100' \
    --startTime 'pPe2r4a4' \
    --status 'PENDING' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 218 'QueryUserIAPConsumeHistory' test.out

#- 219 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "Di-ZqQM", "productId": "dNWhj5Rv", "region": "k9MX9Kvb", "type": "GOOGLE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '6YBEssAA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'MockFulfillIAPItem' test.out

#- 220 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'Ji2DZxVP' \
    --itemId 'IuAZyrwO' \
    --limit '3' \
    --offset '10' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 220 'QueryUserOrders' test.out

#- 221 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "kHgKH4xy", "currencyNamespace": "pX9Yruhx", "discountedPrice": 83, "ext": {"FDBVPTJ5": {}, "DqtymrMQ": {}, "Va92yKGs": {}}, "itemId": "B2TSV8bK", "language": "EKMahP9J", "options": {"skipPriceValidation": true}, "platform": "Playstation", "price": 3, "quantity": 63, "region": "Z6uUZO27", "returnUrl": "mMHKuBOq", "sandbox": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'OVIjUp0D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'AdminCreateUserOrder' test.out

#- 222 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'gUWTeBcv' \
    --itemId 'HS6whWvv' \
    > test.out 2>&1
eval_tap $? 222 'CountOfPurchasedItem' test.out

#- 223 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'mFi6C6jf' \
    --userId 'agFnUvpr' \
    > test.out 2>&1
eval_tap $? 223 'GetUserOrder' test.out

#- 224 UpdateUserOrderStatus
# body param: body
echo '{"status": "INIT", "statusReason": "ObxvdR11"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'K4nYFHx2' \
    --userId 'BJJ71YEs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'UpdateUserOrderStatus' test.out

#- 225 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '0j753E8a' \
    --userId '51kFT9Ws' \
    > test.out 2>&1
eval_tap $? 225 'FulfillUserOrder' test.out

#- 226 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'dJmQmMC9' \
    --userId '9gdSKRxg' \
    > test.out 2>&1
eval_tap $? 226 'GetUserOrderGrant' test.out

#- 227 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'rc6vd0We' \
    --userId '2w5VkvB4' \
    > test.out 2>&1
eval_tap $? 227 'GetUserOrderHistories' test.out

#- 228 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "8ZtJ4leP"}, "authorisedTime": "1976-05-24T00:00:00Z", "chargebackReversedTime": "1972-01-04T00:00:00Z", "chargebackTime": "1989-10-23T00:00:00Z", "chargedTime": "1991-05-28T00:00:00Z", "createdTime": "1985-04-30T00:00:00Z", "currency": {"currencyCode": "hktPyWUv", "currencySymbol": "IMhnFRIr", "currencyType": "VIRTUAL", "decimals": 4, "namespace": "hDhXqXYV"}, "customParameters": {"67ju0w43": {}, "lx9rZgQE": {}, "COibQnM6": {}}, "extOrderNo": "RRm8gFv6", "extTxId": "GM5qoySA", "extUserId": "5OEGZOIQ", "issuedAt": "1982-03-09T00:00:00Z", "metadata": {"kuPLg9gL": "1F865Yt1", "75L7Lch9": "Oz7Ff8wn", "Ugyi1DX1": "Uf8r4fTX"}, "namespace": "x505dOJ5", "nonceStr": "samn05hY", "paymentMethod": "hUeHbCWG", "paymentMethodFee": 8, "paymentOrderNo": "F1u4IE58", "paymentProvider": "ALIPAY", "paymentProviderFee": 21, "paymentStationUrl": "i81ELSo3", "price": 82, "refundedTime": "1992-09-29T00:00:00Z", "salesTax": 46, "sandbox": true, "sku": "M1rlvcqq", "status": "NOTIFICATION_OF_CHARGEBACK", "statusReason": "gFBj9EOc", "subscriptionId": "HdFxcHQO", "subtotalPrice": 92, "targetNamespace": "tz8emKio", "targetUserId": "BG3M0Gg6", "tax": 49, "totalPrice": 34, "totalTax": 37, "txEndTime": "1977-12-16T00:00:00Z", "type": "MFYffzI2", "userId": "2OuyrU4i", "vat": 85}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'AKpHiQgh' \
    --userId 'S0FtY318' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'ProcessUserOrderNotification' test.out

#- 229 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'qItntO02' \
    --userId 'MyJ0OERd' \
    > test.out 2>&1
eval_tap $? 229 'DownloadUserOrderReceipt' test.out

#- 230 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "jyiNVIXR", "currencyNamespace": "PPlx6CTQ", "customParameters": {"TSzfpTxR": {}, "YXtg9udK": {}, "E6XwblqE": {}}, "description": "BZ7DKvca", "extOrderNo": "5S6Ca378", "extUserId": "RrhDpfqq", "itemType": "LOOTBOX", "language": "EEO", "metadata": {"3RFMRt9q": "EdF1BzaW", "QyZId2me": "gReojoA7", "yU3K9liT": "r05YnZAh"}, "notifyUrl": "NjRpTs9k", "omitNotification": true, "platform": "8BE0eKyx", "price": 79, "recurringPaymentOrderNo": "D1ZZSLoK", "region": "kWppZd4F", "returnUrl": "Uo7zgRjO", "sandbox": true, "sku": "nOhP5BRq", "subscriptionId": "KefwH0Ff", "title": "FlG4K47R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'XllDiBlp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'CreateUserPaymentOrder' test.out

#- 231 RefundUserPaymentOrder
# body param: body
echo '{"description": "1LIm9YeC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'l9Nx5H6L' \
    --userId 'sdHYcuIx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'RefundUserPaymentOrder' test.out

#- 232 ApplyUserRedemption
# body param: body
echo '{"code": "DyIBvylQ", "orderNo": "gH8sjkIP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'olLB2Ddm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'ApplyUserRedemption' test.out

#- 233 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'Vw5FBPeA' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId '5fVw4Cl0' \
    --limit '43' \
    --offset '81' \
    --sku 'MHdNstA4' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserSubscriptions' test.out

#- 234 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'Jcg70nk3' \
    --excludeSystem 'true' \
    --limit '13' \
    --offset '59' \
    --subscriptionId 'UQNE6NnO' \
    > test.out 2>&1
eval_tap $? 234 'GetUserSubscriptionActivities' test.out

#- 235 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 74, "itemId": "u7Cu3uLj", "language": "gghSxU88", "reason": "j7ZwmapH", "region": "VxGsrhM4", "source": "DPkCgMbN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'nGbGtSXz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'PlatformSubscribeSubscription' test.out

#- 236 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'FKgEFxzA' \
    --itemId 'Gu4iF3Xa' \
    > test.out 2>&1
eval_tap $? 236 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 237 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'HG06LCKS' \
    --userId 'waV6ZfmX' \
    > test.out 2>&1
eval_tap $? 237 'GetUserSubscription' test.out

#- 238 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'JuwRGFSW' \
    --userId 'r3gDx8lm' \
    > test.out 2>&1
eval_tap $? 238 'DeleteUserSubscription' test.out

#- 239 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "i1Z9D4Xa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Nm0uU1X5' \
    --userId 'VY0UMZkj' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'CancelSubscription' test.out

#- 240 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 48, "reason": "SIvKxT9q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '08nf5whi' \
    --userId '8dSbiLxk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'GrantDaysToSubscription' test.out

#- 241 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '33WlM16a' \
    --userId 'yvjGtTdb' \
    --excludeFree 'true' \
    --limit '4' \
    --offset '45' \
    > test.out 2>&1
eval_tap $? 241 'GetUserSubscriptionBillingHistories' test.out

#- 242 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "syHyHwFf"}, "authorisedTime": "1983-12-31T00:00:00Z", "chargebackReversedTime": "1977-06-09T00:00:00Z", "chargebackTime": "1993-02-03T00:00:00Z", "chargedTime": "1992-10-21T00:00:00Z", "createdTime": "1987-10-21T00:00:00Z", "currency": {"currencyCode": "yOqwErUi", "currencySymbol": "cEh64ZTH", "currencyType": "REAL", "decimals": 92, "namespace": "rVIUpqm2"}, "customParameters": {"Sa7H1Zo9": {}, "6KV1lYbG": {}, "JH7f5MaG": {}}, "extOrderNo": "bT8VQTAx", "extTxId": "OkAPaVnN", "extUserId": "gPzQX9vY", "issuedAt": "1984-06-28T00:00:00Z", "metadata": {"fUWBBKTV": "C7IjbUWL", "2mYOr0ZC": "ix7p6mTI", "hHP1LVxg": "Hq8J8bh6"}, "namespace": "TP9n29At", "nonceStr": "DHkKcKV9", "paymentMethod": "j4BdM1Hh", "paymentMethodFee": 84, "paymentOrderNo": "IBXZSr9D", "paymentProvider": "XSOLLA", "paymentProviderFee": 61, "paymentStationUrl": "GlpRyI0d", "price": 66, "refundedTime": "1971-09-16T00:00:00Z", "salesTax": 73, "sandbox": false, "sku": "sK10M9yl", "status": "AUTHORISED", "statusReason": "VcXN4Pmc", "subscriptionId": "GtCAfUFZ", "subtotalPrice": 65, "targetNamespace": "RrJhu3tL", "targetUserId": "bPm4XHRV", "tax": 20, "totalPrice": 7, "totalTax": 91, "txEndTime": "1992-08-31T00:00:00Z", "type": "oLI3IaB3", "userId": "NFpTEaI8", "vat": 54}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId '48cfEQVw' \
    --userId 'tJVLsmFd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'ProcessUserSubscriptionNotification' test.out

#- 243 AcquireUserTicket
# body param: body
echo '{"count": 19, "orderNo": "3O5X1iSm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'nySNMl6w' \
    --namespace $AB_NAMESPACE \
    --userId 'ls3urwp8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'AcquireUserTicket' test.out

#- 244 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId '1LtZI6Wz' \
    > test.out 2>&1
eval_tap $? 244 'QueryUserCurrencyWallets' test.out

#- 245 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'W6HAhmSd' \
    --namespace $AB_NAMESPACE \
    --userId 'GnGAFqow' \
    --limit '100' \
    --offset '4' \
    > test.out 2>&1
eval_tap $? 245 'ListUserCurrencyTransactions' test.out

#- 246 CheckWallet
eval_tap 0 246 'CheckWallet # SKIP deprecated' test.out

#- 247 CreditUserWallet
# body param: body
echo '{"amount": 50, "expireAt": "1980-09-05T00:00:00Z", "origin": "Stadia", "reason": "tU2icboC", "source": "REWARD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'UGFXmF9Y' \
    --namespace $AB_NAMESPACE \
    --userId 'yHoDhQBZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'CreditUserWallet' test.out

#- 248 PayWithUserWallet
# body param: body
echo '{"amount": 33, "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode '0D67e0TQ' \
    --namespace $AB_NAMESPACE \
    --userId 'XR2yqR9f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PayWithUserWallet' test.out

#- 249 GetUserWallet
eval_tap 0 249 'GetUserWallet # SKIP deprecated' test.out

#- 250 DebitUserWallet
eval_tap 0 250 'DebitUserWallet # SKIP deprecated' test.out

#- 251 DisableUserWallet
eval_tap 0 251 'DisableUserWallet # SKIP deprecated' test.out

#- 252 EnableUserWallet
eval_tap 0 252 'EnableUserWallet # SKIP deprecated' test.out

#- 253 ListUserWalletTransactions
eval_tap 0 253 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 254 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'Xxqbwsxg' \
    > test.out 2>&1
eval_tap $? 254 'ListViews' test.out

#- 255 CreateView
# body param: body
echo '{"displayOrder": 67, "localizations": {"RbiRxYXQ": {"description": "Jw8kdEqr", "localExt": {"062Sgaok": {}, "qFIl616k": {}, "0MLElz6a": {}}, "longDescription": "0ib8Yq2U", "title": "akJxZxAh"}, "dxzY9pbp": {"description": "szp8gnuA", "localExt": {"ViRqA9x2": {}, "OCXGJ8Sa": {}, "gqmSsOtb": {}}, "longDescription": "XSGtomvI", "title": "jZ7GYNqf"}, "5F7DXq4Z": {"description": "sZkV9lqO", "localExt": {"JU6iwFEO": {}, "ZXMjhfzc": {}, "Xag4tKfZ": {}}, "longDescription": "nk3ISQ6p", "title": "9sXVPly2"}}, "name": "HAeQeoHJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'sI8aXMRa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'CreateView' test.out

#- 256 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId '2yK5SjL6' \
    --storeId 'QTeF3zsu' \
    > test.out 2>&1
eval_tap $? 256 'GetView' test.out

#- 257 UpdateView
# body param: body
echo '{"displayOrder": 32, "localizations": {"mK7x66Xc": {"description": "YtiShghM", "localExt": {"SGMhSpUq": {}, "jeSQM8x5": {}, "f7KFGjUw": {}}, "longDescription": "smtAyAZj", "title": "eeEjEYDg"}, "gFubIBh4": {"description": "NkRQg2l8", "localExt": {"Z9OHmucz": {}, "Gka1evrD": {}, "S0TL7qqS": {}}, "longDescription": "GO82w5MP", "title": "jsKfdEyS"}, "FF4DSDuI": {"description": "d5XeE2vA", "localExt": {"DurgrJ8z": {}, "oRiitpBi": {}, "Hb1yvAzN": {}}, "longDescription": "a5fO9LgF", "title": "fjWom0N3"}}, "name": "oYZQ6ws3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'Z1ZfduxM' \
    --storeId 'VkOdXWyy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateView' test.out

#- 258 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'rIx5dy9l' \
    --storeId 'uspDvWh2' \
    > test.out 2>&1
eval_tap $? 258 'DeleteView' test.out

#- 259 QueryWallets
eval_tap 0 259 'QueryWallets # SKIP deprecated' test.out

#- 260 GetWallet
eval_tap 0 260 'GetWallet # SKIP deprecated' test.out

#- 261 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'EfVfpF3u' \
    --end 'TsPg4NTF' \
    --start 'uRsnBJdj' \
    > test.out 2>&1
eval_tap $? 261 'SyncOrders' test.out

#- 262 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["7n4nF05m", "r2KR086s", "gxyl0m4E"], "apiKey": "GGqAZuk9", "authoriseAsCapture": true, "blockedPaymentMethods": ["PIi5mhz5", "55dWBt1B", "ZS7mALQb"], "clientKey": "4nnfrq0j", "dropInSettings": "8eTl4FD5", "liveEndpointUrlPrefix": "qDv45WFA", "merchantAccount": "5JJ1pGMB", "notificationHmacKey": "RtInjgeV", "notificationPassword": "WQHLpE9o", "notificationUsername": "hTOvqfry", "returnUrl": "a2bcfPcS", "settings": "aQQgzRL4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'TestAdyenConfig' test.out

#- 263 TestAliPayConfig
# body param: body
echo '{"appId": "Uh1rInLv", "privateKey": "Kfc4j4Uz", "publicKey": "w5dwWIG0", "returnUrl": "qAr7Rw4U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'TestAliPayConfig' test.out

#- 264 TestCheckoutConfig
# body param: body
echo '{"publicKey": "ocxtCvWA", "secretKey": "W5f2ZH9Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'TestCheckoutConfig' test.out

#- 265 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'ZiwxtUNx' \
    --region 'AwhsBX3Z' \
    > test.out 2>&1
eval_tap $? 265 'DebugMatchedPaymentMerchantConfig' test.out

#- 266 TestPayPalConfig
# body param: body
echo '{"clientID": "qyzf7Ea1", "clientSecret": "25VB93i3", "returnUrl": "mZ3aldMC", "webHookId": "Ss5CK9rR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'TestPayPalConfig' test.out

#- 267 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["ca2ehwoh", "CEE7Oh71", "FLKG0KG3"], "publishableKey": "jRExztPH", "secretKey": "YJWCEbBT", "webhookSecret": "BNkkhHYR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'TestStripeConfig' test.out

#- 268 TestWxPayConfig
# body param: body
echo '{"appId": "yli9gthi", "key": "4DVHCu9U", "mchid": "9nRuCNi7", "returnUrl": "Wkk1FYaz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'TestWxPayConfig' test.out

#- 269 TestXsollaConfig
# body param: body
echo '{"apiKey": "68uABsbL", "flowCompletionUrl": "YrCcuz3N", "merchantId": 67, "projectId": 37, "projectSecretKey": "pk3oNNom"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'TestXsollaConfig' test.out

#- 270 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'cP33DoHG' \
    > test.out 2>&1
eval_tap $? 270 'GetPaymentMerchantConfig' test.out

#- 271 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["l81jkx8I", "3MMFAeUv", "Cjc7cJp2"], "apiKey": "z3BQFPxc", "authoriseAsCapture": false, "blockedPaymentMethods": ["ed3vsGeC", "Ie4Okhrz", "jtWBMtux"], "clientKey": "oRe5wCcM", "dropInSettings": "Jpy4BGXJ", "liveEndpointUrlPrefix": "1PmIW6OR", "merchantAccount": "0D8nh36A", "notificationHmacKey": "REErXMnb", "notificationPassword": "sIeIX95b", "notificationUsername": "jXvpaS2T", "returnUrl": "Jdrzyf7X", "settings": "W24OJIIF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'spkLeBQS' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateAdyenConfig' test.out

#- 272 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '3meLz1Yg' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 272 'TestAdyenConfigById' test.out

#- 273 UpdateAliPayConfig
# body param: body
echo '{"appId": "VqYgGeGi", "privateKey": "GtpGanJR", "publicKey": "AfInHpOk", "returnUrl": "M8vJtBTN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'sh6sBgaA' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'UpdateAliPayConfig' test.out

#- 274 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'cLcOAn4S' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 274 'TestAliPayConfigById' test.out

#- 275 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "wggFp8NQ", "secretKey": "FzclOIiV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'dPP51IXh' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'UpdateCheckoutConfig' test.out

#- 276 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'h0wnNKLK' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 276 'TestCheckoutConfigById' test.out

#- 277 UpdatePayPalConfig
# body param: body
echo '{"clientID": "OQR1IVzn", "clientSecret": "ytpzuSdQ", "returnUrl": "QlgNrKIT", "webHookId": "YJj2Vg5C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'lNFfv6Bh' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'UpdatePayPalConfig' test.out

#- 278 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'LmhFFhLo' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 278 'TestPayPalConfigById' test.out

#- 279 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["FPdWI6Ai", "cfoFKNYa", "dO2AvErk"], "publishableKey": "CkdH2hpg", "secretKey": "fsRpjNMX", "webhookSecret": "nU0AduRJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'ttFSih1J' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'UpdateStripeConfig' test.out

#- 280 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'ZCQ0BiTE' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 280 'TestStripeConfigById' test.out

#- 281 UpdateWxPayConfig
# body param: body
echo '{"appId": "CyUzvKYo", "key": "pskDKJxd", "mchid": "60IJEd8j", "returnUrl": "yUfThblt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'e2WPURH5' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'UpdateWxPayConfig' test.out

#- 282 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '3wflj8eY' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 282 'UpdateWxPayConfigCert' test.out

#- 283 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'lwPUo4Ho' \
    > test.out 2>&1
eval_tap $? 283 'TestWxPayConfigById' test.out

#- 284 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "XHcCNAtT", "flowCompletionUrl": "yUDP2Znm", "merchantId": 30, "projectId": 35, "projectSecretKey": "eXlCNjZi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id '33ppt4R1' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'UpdateXsollaConfig' test.out

#- 285 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'jxs0tv3f' \
    > test.out 2>&1
eval_tap $? 285 'TestXsollaConfigById' test.out

#- 286 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "SMALL", "theme": "DEFAULT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'QITUx6Il' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'UpdateXsollaUIConfig' test.out

#- 287 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '60' \
    --namespace_ 'JcQJhGVb' \
    --offset '70' \
    --region 'Gju6lB0h' \
    > test.out 2>&1
eval_tap $? 287 'QueryPaymentProviderConfig' test.out

#- 288 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "D9MbQMIE", "region": "wutiiXkz", "sandboxTaxJarApiToken": "YdK7lDXa", "specials": ["ADYEN", "ALIPAY", "ADYEN"], "taxJarApiToken": "Tskp326g", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CreatePaymentProviderConfig' test.out

#- 289 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 289 'GetAggregatePaymentProviders' test.out

#- 290 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'kmIAflaq' \
    --region 'vgDF7CbB' \
    > test.out 2>&1
eval_tap $? 290 'DebugMatchedPaymentProviderConfig' test.out

#- 291 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 291 'GetSpecialPaymentProviders' test.out

#- 292 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "EoUjFB3r", "region": "zeObRtA8", "sandboxTaxJarApiToken": "YBcrH8V0", "specials": ["WXPAY", "PAYPAL", "XSOLLA"], "taxJarApiToken": "GVt3WHJP", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'CTjPnKmf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdatePaymentProviderConfig' test.out

#- 293 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'aEitBuVQ' \
    > test.out 2>&1
eval_tap $? 293 'DeletePaymentProviderConfig' test.out

#- 294 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 294 'GetPaymentTaxConfig' test.out

#- 295 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "mxsf03qE", "taxJarApiToken": "qCn1g0FD", "taxJarEnabled": false, "taxJarProductCodesMapping": {"WBRqMIbG": "27vB8uzD", "3yQTUAyR": "IPOtGskG", "xvXpBP1c": "aTEXV3rC"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'UpdatePaymentTaxConfig' test.out

#- 296 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'QzWI34Bc' \
    --end 'v2xqwYWa' \
    --start 'C02v9DBm' \
    > test.out 2>&1
eval_tap $? 296 'SyncPaymentOrders' test.out

#- 297 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'VNPZXk8E' \
    --storeId 'X2yjneIf' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetRootCategories' test.out

#- 298 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'bI3QfY85' \
    --storeId 'Y6S56qpm' \
    > test.out 2>&1
eval_tap $? 298 'DownloadCategories' test.out

#- 299 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'deh1BxGq' \
    --namespace $AB_NAMESPACE \
    --language '05hFRUyl' \
    --storeId 'gX8jAHQ1' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetCategory' test.out

#- 300 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'dMogwjVl' \
    --namespace $AB_NAMESPACE \
    --language '1sdtHZYc' \
    --storeId 'SPkkYTD5' \
    > test.out 2>&1
eval_tap $? 300 'PublicGetChildCategories' test.out

#- 301 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'V862rzlA' \
    --namespace $AB_NAMESPACE \
    --language 'bd7NN9uF' \
    --storeId 'pRIs9pST' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetDescendantCategories' test.out

#- 302 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 302 'PublicListCurrencies' test.out

#- 303 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'T4f5m1fp' \
    --region 'xWSCWot5' \
    --storeId 'vAVmiJD7' \
    --appId 'S0AFouwF' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetItemByAppId' test.out

#- 304 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --baseAppId '2xqKnrep' \
    --categoryPath 'O5cHYAf8' \
    --features 'Rmty1Vux' \
    --includeSubCategoryItem 'false' \
    --itemType 'SUBSCRIPTION' \
    --language '7vXIHJ1Q' \
    --limit '34' \
    --offset '73' \
    --region 'wgJVmCP1' \
    --sortBy '["name", "createdAt", "updatedAt:desc"]' \
    --storeId '1Akow8n8' \
    --tags 'RpI9aYUN' \
    > test.out 2>&1
eval_tap $? 304 'PublicQueryItems' test.out

#- 305 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'qRf6UtIO' \
    --region '95a3jxBj' \
    --storeId '2tfb9VQm' \
    --sku 'AHyP229P' \
    > test.out 2>&1
eval_tap $? 305 'PublicGetItemBySku' test.out

#- 306 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'YuaEVzFN' \
    --region 'UUIWSPht' \
    --storeId 'VkqBHhz2' \
    --itemIds 'FIVTONlV' \
    > test.out 2>&1
eval_tap $? 306 'PublicBulkGetItems' test.out

#- 307 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["Rv5jgXdF", "5uairOba", "0bsajkHq"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicValidateItemPurchaseCondition' test.out

#- 308 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'EXTENSION' \
    --limit '91' \
    --offset '70' \
    --region '2Df12BAJ' \
    --storeId '2Kq1ffAg' \
    --keyword '6l7tJPJM' \
    --language 'GDLMFwfJ' \
    > test.out 2>&1
eval_tap $? 308 'PublicSearchItems' test.out

#- 309 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'jCNpEhiP' \
    --namespace $AB_NAMESPACE \
    --language 'FDgZN0Gc' \
    --region 'haaKfmGi' \
    --storeId 'nhaltyzb' \
    > test.out 2>&1
eval_tap $? 309 'PublicGetApp' test.out

#- 310 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'nzXzm6jI' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 310 'PublicGetItemDynamicData' test.out

#- 311 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'fQ2bDmt1' \
    --namespace $AB_NAMESPACE \
    --language 'YMeno0oA' \
    --populateBundle 'true' \
    --region 'VeBfvYmm' \
    --storeId 'vXzAIEad' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetItem' test.out

#- 312 GetPaymentCustomization
eval_tap 0 312 'GetPaymentCustomization # SKIP deprecated' test.out

#- 313 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "68lmJwKP", "paymentProvider": "CHECKOUT", "returnUrl": "WctQ6Ct8", "ui": "qDkstVJ3", "zipCode": "J6cP8c4v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'PublicGetPaymentUrl' test.out

#- 314 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '5sGyAIty' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetPaymentMethods' test.out

#- 315 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'x4RktMwU' \
    > test.out 2>&1
eval_tap $? 315 'PublicGetUnpaidPaymentOrder' test.out

#- 316 Pay
# body param: body
echo '{"token": "OEqD2cEN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ZsVZsHzy' \
    --paymentProvider 'ALIPAY' \
    --zipCode 'JMMEqyCi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'Pay' test.out

#- 317 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'rwJ414jt' \
    > test.out 2>&1
eval_tap $? 317 'PublicCheckPaymentOrderPaidStatus' test.out

#- 318 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'STRIPE' \
    --region 'TeDgTcfT' \
    > test.out 2>&1
eval_tap $? 318 'GetPaymentPublicConfig' test.out

#- 319 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'Cv8Qq6Y0' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetQRCode' test.out

#- 320 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '97xF1YaQ' \
    --foreinginvoice 'CugvosFk' \
    --invoiceId 'KBNkO2Hh' \
    --payload 'qbF1bSNG' \
    --redirectResult 'oFMhG2Oy' \
    --resultCode 'Ir4m7QsP' \
    --sessionId '0N6O319a' \
    --status 'juBWWfm6' \
    --token 'YWLJZzv0' \
    --type 'XlTb2HYi' \
    --userId '6P3PLl7p' \
    --orderNo 'LbrjSoLc' \
    --paymentOrderNo '5ojJ1DDa' \
    --paymentProvider 'PAYPAL' \
    --returnUrl 'DbhpKxmF' \
    > test.out 2>&1
eval_tap $? 320 'PublicNormalizePaymentReturnUrl' test.out

#- 321 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'hU4GLU20' \
    --paymentOrderNo 'OidtQV6L' \
    --paymentProvider 'XSOLLA' \
    > test.out 2>&1
eval_tap $? 321 'GetPaymentTaxValue' test.out

#- 322 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'XKLxC9E1' \
    > test.out 2>&1
eval_tap $? 322 'GetRewardByCode' test.out

#- 323 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic '4sYKftEX' \
    --limit '93' \
    --offset '56' \
    --sortBy '["rewardCode:desc", "rewardCode", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 323 'QueryRewards1' test.out

#- 324 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'c8pLkLfy' \
    > test.out 2>&1
eval_tap $? 324 'GetReward1' test.out

#- 325 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 325 'PublicListStores' test.out

#- 326 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["6YGhNv5E", "hoJisKMI", "o0GWtODQ"]' \
    --itemIds '["yUEwQ97I", "kjhlGqzr", "qkJ9ukWQ"]' \
    --skus '["xpihYqQW", "uTZwhUzU", "HCYDC4Rl"]' \
    > test.out 2>&1
eval_tap $? 326 'PublicExistsAnyMyActiveEntitlement' test.out

#- 327 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'ZAu49nw7' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 328 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --itemId 'h0Cg92r9' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 329 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'UIvFuP7f' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 330 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["la9XGrmb", "0yPCGyqP", "wBP58YAQ"]' \
    --itemIds '["FLJMEULm", "5n4lubvO", "fYlpAJpQ"]' \
    --skus '["1Wc25O8Y", "41l2YHiU", "esHfBBXC"]' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetEntitlementOwnershipToken' test.out

#- 331 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'xqEj6mU4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 331 'PublicGetMyWallet' test.out

#- 332 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "gX9dJQQc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'ggk4fNB8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'SyncEpicGameDLC' test.out

#- 333 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 32}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'k235cRYQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicSyncPsnDlcInventory' test.out

#- 334 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [16, 26, 18]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'uxluLhpb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 335 SyncSteamDLC
# body param: body
echo '{"appId": "e2idRs7w", "steamId": "XhPXOlng"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'YZ6syM4V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'SyncSteamDLC' test.out

#- 336 SyncXboxDLC
# body param: body
echo '{"xstsToken": "MhDLB1TV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'oBUS8NVv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'SyncXboxDLC' test.out

#- 337 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'E8tm0Ei1' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'CODE' \
    --entitlementName 'oOukY4Bz' \
    --features '["8Qj2ZGgk", "Iq4eV81x", "GnfkJDi4"]' \
    --itemId '["kxYbdj1W", "agsKy1wC", "dDgV2Ul5"]' \
    --limit '16' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 337 'PublicQueryUserEntitlements' test.out

#- 338 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 's4rpXrT3' \
    --appId 'gTxKMAY9' \
    > test.out 2>&1
eval_tap $? 338 'PublicGetUserAppEntitlementByAppId' test.out

#- 339 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '8TkoeQlD' \
    --limit '56' \
    --offset '24' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 339 'PublicQueryUserEntitlementsByAppType' test.out

#- 340 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'vhwqjd2r' \
    --entitlementClazz 'CODE' \
    --itemId 'dqBP9zIh' \
    > test.out 2>&1
eval_tap $? 340 'PublicGetUserEntitlementByItemId' test.out

#- 341 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'QvS4YbXg' \
    --entitlementClazz 'MEDIA' \
    --sku '9foH85ue' \
    > test.out 2>&1
eval_tap $? 341 'PublicGetUserEntitlementBySku' test.out

#- 342 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '3AJ2OsN3' \
    --appIds '["gsfNmRvo", "eeb95InM", "p9FEaG6U"]' \
    --itemIds '["XFPLhZ2L", "yTRmxfXj", "kKnFIjZS"]' \
    --skus '["nEgvOgZs", "4YlUT74T", "Lr8dRrFM"]' \
    > test.out 2>&1
eval_tap $? 342 'PublicExistsAnyUserActiveEntitlement' test.out

#- 343 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'A5UTjrBr' \
    --appId 'wehCuq17' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 344 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '4FZp0lyo' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'EgxKbG4A' \
    > test.out 2>&1
eval_tap $? 344 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 345 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'J3cFvrf4' \
    --ids '["7eUhTmFw", "wiaE43UJ", "eDqBl9SH"]' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 346 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '3WwAVfm8' \
    --entitlementClazz 'APP' \
    --sku 'jwgovm8q' \
    > test.out 2>&1
eval_tap $? 346 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 347 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'Nvy1ctdE' \
    --namespace $AB_NAMESPACE \
    --userId '1EN5CvSH' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetUserEntitlement' test.out

#- 348 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["KsLk5iBa", "PCD17IYA", "wDuFcBHp"], "requestId": "woVR78Mu", "useCount": 64}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId '4N3mtwKo' \
    --namespace $AB_NAMESPACE \
    --userId 'mTu3URCt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'PublicConsumeUserEntitlement' test.out

#- 349 PublicRedeemCode
# body param: body
echo '{"code": "VRvl9L1e", "language": "xUI-076", "region": "Fk4wcfH9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'p79SIiiG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'PublicRedeemCode' test.out

#- 350 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "rejK-TALK_177", "productId": "TgbjqG3U", "receiptData": "TcsEep37", "region": "8i0Xc5u2", "transactionId": "1iBHOKOL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '7cOXWspH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicFulfillAppleIAPItem' test.out

#- 351 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "oy8PhSzb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'v7T4GV3q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'SyncEpicGamesInventory' test.out

#- 352 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "UNXr-542", "orderId": "HaLs90kw", "packageName": "evgn6QKx", "productId": "nesOxoxw", "purchaseTime": 2, "purchaseToken": "BIRjjjbE", "region": "wVUklEeI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '3dt4TEUK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'PublicFulfillGoogleIAPItem' test.out

#- 353 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "tGUPOSIi", "price": 0.7720014316628029, "productId": "0T44tT7S", "serviceLabel": 93}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId '65qv8Vp5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'PublicReconcilePlayStationStore' test.out

#- 354 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "Vy7VZthq", "price": 0.5390593125396372, "productId": "5TdwFmi2", "serviceLabels": [80, 38, 30]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'VHcLZrQK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 355 SyncStadiaEntitlement
# body param: body
echo '{"appId": "qK5gWxwI", "language": "CPiW_199", "region": "ItazvKiA", "stadiaPlayerId": "CBHTLvqD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'IuOjN6Ql' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'SyncStadiaEntitlement' test.out

#- 356 SyncSteamInventory
# body param: body
echo '{"appId": "JrWanzzP", "currencyCode": "poZw7og8", "language": "PYh_XivZ-251", "price": 0.5318770054149796, "productId": "bSmgwjMZ", "region": "mxsEcjGC", "steamId": "XQsif4Xx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'olxT54FX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'SyncSteamInventory' test.out

#- 357 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "QyiO8ibp", "language": "OXS_Ikxg", "region": "ren3r9hi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '6d7xbyNA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'SyncTwitchDropsEntitlement' test.out

#- 358 SyncXboxInventory
# body param: body
echo '{"currencyCode": "hD4RxxPr", "price": 0.6997771596035693, "productId": "yvEoDicl", "xstsToken": "ZT9aMyT6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId '5fz9nNnb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'SyncXboxInventory' test.out

#- 359 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'ZXB5CSxr' \
    --itemId '91PW6JuP' \
    --limit '76' \
    --offset '62' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 359 'PublicQueryUserOrders' test.out

#- 360 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "a1FvB1D6", "discountedPrice": 15, "ext": {"MuZBv8OO": {}, "9WrxaTI5": {}, "r7xyGVBe": {}}, "itemId": "591xkqnw", "language": "ZGbY_DxAD", "price": 89, "quantity": 59, "region": "y0b1Pfzg", "returnUrl": "EqwAwgYG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'X5q1tsrG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'PublicCreateUserOrder' test.out

#- 361 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'EaiDS8gY' \
    --userId 'yTF54aei' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetUserOrder' test.out

#- 362 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'xZSLhpag' \
    --userId 'HWYupAwp' \
    > test.out 2>&1
eval_tap $? 362 'PublicCancelUserOrder' test.out

#- 363 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'N3bEgqZ2' \
    --userId 'zZfLSUAW' \
    > test.out 2>&1
eval_tap $? 363 'PublicGetUserOrderHistories' test.out

#- 364 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'VElM2cs1' \
    --userId 'fLvCAwN0' \
    > test.out 2>&1
eval_tap $? 364 'PublicDownloadUserOrderReceipt' test.out

#- 365 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'KsaxFQe9' \
    > test.out 2>&1
eval_tap $? 365 'PublicGetPaymentAccounts' test.out

#- 366 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'bHvI5UL8' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId '68I1ee5i' \
    > test.out 2>&1
eval_tap $? 366 'PublicDeletePaymentAccount' test.out

#- 367 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'ulolCXcL' \
    --language '3TKcSYoS' \
    --region 'opEDsHD2' \
    --storeId 'r9kiH3uB' \
    --viewId '9mIER0gN' \
    > test.out 2>&1
eval_tap $? 367 'PublicListActiveSections' test.out

#- 368 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'Q4ptwDUy' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'GXXO8ua9' \
    --limit '1' \
    --offset '99' \
    --sku 'bxc0SXB4' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 368 'PublicQueryUserSubscriptions' test.out

#- 369 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "OXvc4d04", "itemId": "fnt0sMaY", "language": "tT_QZSk", "region": "jDw63LJh", "returnUrl": "qfiQy84o", "source": "TnfWE503"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'Fuq1zk9y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'PublicSubscribeSubscription' test.out

#- 370 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'SFJceI16' \
    --itemId '2TK069jw' \
    > test.out 2>&1
eval_tap $? 370 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 371 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'e88OHnjm' \
    --userId 'zpIHQyDE' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetUserSubscription' test.out

#- 372 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'HUaur4jE' \
    --userId 'czimhVYX' \
    > test.out 2>&1
eval_tap $? 372 'PublicChangeSubscriptionBillingAccount' test.out

#- 373 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "H1pkQDh6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'LASLuCil' \
    --userId 'dYZBzB1s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'PublicCancelSubscription' test.out

#- 374 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'dFADWZeh' \
    --userId 'pzjwGfns' \
    --excludeFree 'true' \
    --limit '10' \
    --offset '17' \
    > test.out 2>&1
eval_tap $? 374 'PublicGetUserSubscriptionBillingHistories' test.out

#- 375 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId '1iMeNRQl' \
    --language 'vFjBT938' \
    --storeId 'gl5kH5Gw' \
    > test.out 2>&1
eval_tap $? 375 'PublicListViews' test.out

#- 376 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '6ozoM8mO' \
    --namespace $AB_NAMESPACE \
    --userId '51jrPICB' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetWallet' test.out

#- 377 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'lBsiDY0B' \
    --namespace $AB_NAMESPACE \
    --userId 'aBt5Ovig' \
    --limit '99' \
    --offset '57' \
    > test.out 2>&1
eval_tap $? 377 'PublicListUserWalletTransactions' test.out

#- 378 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --availableDate 'ZdL0ZYS5' \
    --baseAppId 'us8Youjc' \
    --categoryPath 'dm20pgK4' \
    --features 'KHuhUYbH' \
    --includeSubCategoryItem 'false' \
    --itemName 'FPgb4bay' \
    --itemStatus 'INACTIVE' \
    --itemType 'SUBSCRIPTION' \
    --limit '31' \
    --offset '89' \
    --region '0J10hCMy' \
    --sortBy '["createdAt:desc", "updatedAt", "displayOrder:desc"]' \
    --storeId '9G1xosk6' \
    --tags 'OvdwpevP' \
    --targetNamespace 'Tbftp6IV' \
    > test.out 2>&1
eval_tap $? 378 'QueryItems1' test.out

#- 379 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'u37dVTcu' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 379 'ImportStore1' test.out

#- 380 ExportStore1
# body param: body
echo '{"itemIds": ["aE5zZXkQ", "HWVcRc5J", "kgKKLEsL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId '4kCgHCfO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE