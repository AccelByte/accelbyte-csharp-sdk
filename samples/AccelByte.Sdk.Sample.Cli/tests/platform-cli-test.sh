#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..360"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "Rm0ZJ6A0", "appType": "SOFTWARE", "baseAppId": "eXG9H8D2", "boothName": "JFFWA3gS", "boundItemIds": ["PJtTcsq2", "hXkFBDoh", "b6Nz5x7e"], "categoryPath": "rPVja233", "clazz": "15Zp6A4G", "createdAt": "1976-06-18T00:00:00Z", "description": "6vJGFMnr", "displayOrder": 63, "entitlementType": "CONSUMABLE", "ext": {"PoHe0FxB": {}, "sZ7QEUwD": {}, "aNEzFVuv": {}}, "features": ["7aTgs0mr", "Jmivh3R7", "hkCWtn4O"], "fresh": false, "images": [{"as": "GNZw3bl1", "caption": "uadMLlJz", "height": 90, "imageUrl": "HeFAJ80Q", "smallImageUrl": "H9UTRjzL", "width": 0}, {"as": "HpjEAWox", "caption": "1T6eSBv3", "height": 25, "imageUrl": "4UOa91pw", "smallImageUrl": "0lAMAKa9", "width": 73}, {"as": "ppnyKtXA", "caption": "gjFjLGAD", "height": 12, "imageUrl": "EKqSkxFg", "smallImageUrl": "P1tq0KWC", "width": 62}], "itemId": "QzILANWJ", "itemIds": ["vCmTBgWp", "FsGkyaII", "Hb3nGZv6"], "itemQty": {"q7NM3hGl": 90, "wreEiUJD": 76, "6R1uOvTo": 10}, "itemType": "MEDIA", "language": "8VqfK6PK", "listable": true, "localExt": {"qeOS7s8n": {}, "5CtIajKf": {}, "QGCbd2FB": {}}, "longDescription": "D5Y5isuG", "maxCount": 65, "maxCountPerUser": 97, "name": "xvidC68t", "namespace": "oWJ9SOdP", "optionBoxConfig": {"boxItems": [{"count": 85, "itemId": "fh6FpVBN", "itemSku": "WPfORAhP"}, {"count": 45, "itemId": "NGkG6Ggb", "itemSku": "yFXzb5JO"}, {"count": 17, "itemId": "6ghnuY2D", "itemSku": "mpm80Piu"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 99, "comparison": "is", "name": "A0lbccgs", "predicateType": "EntitlementPredicate", "value": "x8bWpiZZ", "values": ["Xp53H8im", "LQV8Cf0w", "0vT5M840"]}, {"anyOf": 51, "comparison": "isLessThanOrEqual", "name": "LKjxavxQ", "predicateType": "SeasonTierPredicate", "value": "Uj6MDIlX", "values": ["crLapAFJ", "H47Y9FlZ", "DPvLRrt7"]}, {"anyOf": 91, "comparison": "is", "name": "P6JiPTKZ", "predicateType": "EntitlementPredicate", "value": "TLoXCgeS", "values": ["9XleLUu7", "UeqE7T1L", "tdQAdFzt"]}]}, {"operator": "or", "predicates": [{"anyOf": 52, "comparison": "excludes", "name": "2Y4mKtbp", "predicateType": "SeasonPassPredicate", "value": "0YZK0ava", "values": ["JmpRB3dk", "QGaeF8BS", "n9aa0D3U"]}, {"anyOf": 41, "comparison": "isGreaterThanOrEqual", "name": "p6Ck84sU", "predicateType": "EntitlementPredicate", "value": "u6sD2Kh8", "values": ["jCts4pGg", "IG8XembZ", "0HR7BVtb"]}, {"anyOf": 79, "comparison": "isLessThan", "name": "COlYrtMg", "predicateType": "SeasonTierPredicate", "value": "uq2EcwCw", "values": ["rdEniRhv", "lJrXGELs", "Msl7hoke"]}]}, {"operator": "and", "predicates": [{"anyOf": 15, "comparison": "isGreaterThanOrEqual", "name": "e7VdcD52", "predicateType": "SeasonPassPredicate", "value": "nERBAdKd", "values": ["kHr57u2P", "r1JEZMfu", "846AKeY4"]}, {"anyOf": 77, "comparison": "isLessThanOrEqual", "name": "fAX0Igjc", "predicateType": "EntitlementPredicate", "value": "fcKg3sfR", "values": ["7lYm7Fe8", "7x9zgllw", "chGPgQOh"]}, {"anyOf": 21, "comparison": "isLessThanOrEqual", "name": "3wThfkr9", "predicateType": "EntitlementPredicate", "value": "7xeQswZK", "values": ["MagbxlTR", "XCVpCLvL", "0qYoVR0j"]}]}]}, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 50, "fixedTrialCycles": 65, "graceDays": 5}, "region": "UQoCUNJz", "regionData": [{"currencyCode": "bIZpo2OR", "currencyNamespace": "5uEfMfBf", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1986-03-01T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1985-06-12T00:00:00Z", "discountedPrice": 83, "expireAt": "1997-06-18T00:00:00Z", "price": 71, "purchaseAt": "1972-04-07T00:00:00Z", "trialPrice": 62}, {"currencyCode": "KYAysxFV", "currencyNamespace": "LibzQwkI", "currencyType": "REAL", "discountAmount": 86, "discountExpireAt": "1996-05-25T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1997-11-12T00:00:00Z", "discountedPrice": 67, "expireAt": "1996-04-03T00:00:00Z", "price": 26, "purchaseAt": "1998-07-29T00:00:00Z", "trialPrice": 11}, {"currencyCode": "llnK0j3K", "currencyNamespace": "qZeoQlrH", "currencyType": "REAL", "discountAmount": 13, "discountExpireAt": "1985-06-25T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1990-12-27T00:00:00Z", "discountedPrice": 24, "expireAt": "1996-02-02T00:00:00Z", "price": 26, "purchaseAt": "1979-04-29T00:00:00Z", "trialPrice": 30}], "seasonType": "TIER", "sku": "iP3IRMT7", "stackable": false, "status": "ACTIVE", "tags": ["o0e8Rn4Z", "PEGLHfyR", "BHMWIL8i"], "targetCurrencyCode": "QFrCJqUv", "targetItemId": "6U6lyx3F", "targetNamespace": "oAYrnlCJ", "thumbnailUrl": "MxvfWXqr", "title": "B0lS43RN", "updatedAt": "1999-04-16T00:00:00Z", "useCount": 18}, "namespace": "rjU4u05F", "order": {"currency": {"currencyCode": "xuu9zji5", "currencySymbol": "xHrBpatJ", "currencyType": "REAL", "decimals": 87, "namespace": "9YNcsfLl"}, "ext": {"QGw9nOH9": {}, "I3prT83j": {}, "C2zins7L": {}}, "free": false}, "source": "PURCHASE"}, "script": "eTnE8LfC", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'SAKOEKOI' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "cNjeTwTF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'tQjpF6Mf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'wSnwfRWx' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "4NNkqAfe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'Op9dluMA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "tvwsH18k", "dryRun": false, "fulfillmentUrl": "ab3iYNwe", "itemType": "SEASON", "purchaseConditionUrl": "9pTLdH6x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'nxHArFXc' \
    --itemType 'MEDIA' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'Sw9kSp1M' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "JD7cfVmp", "dryRun": false, "fulfillmentUrl": "Sxg2edjA", "purchaseConditionUrl": "prFmqGcf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'S08hHdUw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'VlIgekpj' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '27' \
    --name '1dHRkwtM' \
    --offset '27' \
    --tag 'VMXg7K0E' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "fnctGpIc", "items": [{"extraSubscriptionDays": 10, "itemId": "JbbESQm9", "itemName": "G9FIYzB2", "quantity": 79}, {"extraSubscriptionDays": 73, "itemId": "CarV4lBA", "itemName": "M1fjdfIa", "quantity": 1}, {"extraSubscriptionDays": 33, "itemId": "ysXIlXfT", "itemName": "KnqzhQbg", "quantity": 33}], "maxRedeemCountPerCampaignPerUser": 25, "maxRedeemCountPerCode": 47, "maxRedeemCountPerCodePerUser": 87, "maxSaleCount": 46, "name": "ApdA9pht", "redeemEnd": "1993-01-08T00:00:00Z", "redeemStart": "1973-03-30T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["fKjiGiGo", "vpYQZvr4", "caSY8w9J"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'mQywiHm0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "77YcHCxC", "items": [{"extraSubscriptionDays": 97, "itemId": "cHMoO2fp", "itemName": "OJBVpsl3", "quantity": 76}, {"extraSubscriptionDays": 66, "itemId": "M3rTNtau", "itemName": "jXewX8OM", "quantity": 37}, {"extraSubscriptionDays": 13, "itemId": "Kfk7jwvz", "itemName": "hASbG3sg", "quantity": 19}], "maxRedeemCountPerCampaignPerUser": 39, "maxRedeemCountPerCode": 80, "maxRedeemCountPerCodePerUser": 32, "maxSaleCount": 57, "name": "1ykYzyzz", "redeemEnd": "1982-05-01T00:00:00Z", "redeemStart": "1990-06-05T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["SXwVDe4V", "srdq4HID", "d3zAUOv8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'Hr3iQrM0' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId '0OU8vyQv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'vHnGvEzq' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "XP6hMYhN", "localizationDisplayNames": {"uvoSkFUx": "rzCmGATh", "w3JCFSNK": "z57wg1K1", "dWmgDvNX": "OaEc7IXq"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'PlnVPLq6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId '35NF1Yiy' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '8j1qQqzN' \
    --namespace $AB_NAMESPACE \
    --storeId 'UbXmsodv' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"nlUHOvkv": "XOiEoRxX", "s1FZF3bl": "b4ZEUCbB", "E3BWtX4k": "ZgvD1VcQ"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'PH153ibN' \
    --namespace $AB_NAMESPACE \
    --storeId 'QkdfksLN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'HBiPBzGO' \
    --namespace $AB_NAMESPACE \
    --storeId 'M9P1Bypy' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'My93fbsx' \
    --namespace $AB_NAMESPACE \
    --storeId 'wL408RqM' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'h0SS1uJo' \
    --namespace $AB_NAMESPACE \
    --storeId 'D9pcQSJz' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'uC5pvHYq' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '26' \
    --code 'p2qKLyk8' \
    --limit '19' \
    --offset '27' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 32}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'ZBiVQmBa' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'ibMN5uL2' \
    --namespace $AB_NAMESPACE \
    --batchNo '18' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'p1pr1Yro' \
    --namespace $AB_NAMESPACE \
    --batchNo '57' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'jBdEXoMq' \
    --namespace $AB_NAMESPACE \
    --batchNo '4' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'nH0alxiB' \
    --namespace $AB_NAMESPACE \
    --code 'fsFC4VXU' \
    --limit '18' \
    --offset '15' \
    --userId 'Q6ovYHnm' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'Znx09aPX' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'kfJxPkim' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'xG4G7d2W' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "yzgLGpF2", "currencySymbol": "tWKZThWP", "currencyType": "REAL", "decimals": 33, "localizationDescriptions": {"sELnLsqE": "jAP9C36u", "Rd1fuvVv": "ikMquAkP", "BeYKykow": "4JRKVqAm"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"2DTP9bKN": "qWxYHikR", "q0Pk3jI2": "SQu4NqcT", "I2EwLpaW": "hRWxMvFi"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode '8GAU5YEP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'HGkztBKw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode '2gREwLhK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'bOJmC2go' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "w0rkpMcV", "rewards": [{"currency": {"currencyCode": "xIOolQvL", "namespace": "l237xXyE"}, "item": {"itemId": "ILekawng", "itemSku": "T9aWSTXg", "itemType": "vHIZ3ozJ"}, "quantity": 38, "type": "CURRENCY"}, {"currency": {"currencyCode": "zv3oXE6K", "namespace": "Um0J0DWH"}, "item": {"itemId": "MS9hF4lp", "itemSku": "0U5JeluC", "itemType": "RaPUplhP"}, "quantity": 24, "type": "ITEM"}, {"currency": {"currencyCode": "zRZo2n0B", "namespace": "7hpoCA7N"}, "item": {"itemId": "OvJnQlBy", "itemSku": "D433oqKb", "itemType": "gqEz6I1v"}, "quantity": 49, "type": "CURRENCY"}]}, {"id": "yqpKH7PI", "rewards": [{"currency": {"currencyCode": "q5oPfDLg", "namespace": "BnIrPPzp"}, "item": {"itemId": "43FI1gVq", "itemSku": "KOOUtFRC", "itemType": "ptcjQP1n"}, "quantity": 52, "type": "CURRENCY"}, {"currency": {"currencyCode": "fhGthH5z", "namespace": "R9NuiVpG"}, "item": {"itemId": "R2rQUjoD", "itemSku": "YQqrDhmB", "itemType": "jQWoc7Fh"}, "quantity": 5, "type": "ITEM"}, {"currency": {"currencyCode": "HNOBcw8p", "namespace": "rgQyjeDQ"}, "item": {"itemId": "owB8QGRk", "itemSku": "dzOCrIui", "itemType": "YGl6AKkP"}, "quantity": 19, "type": "ITEM"}]}, {"id": "GCQTFPk6", "rewards": [{"currency": {"currencyCode": "VMhXCVGD", "namespace": "X4cRcTZC"}, "item": {"itemId": "YEcapnWN", "itemSku": "G4Rvy3Oi", "itemType": "GZVYTL4Z"}, "quantity": 79, "type": "CURRENCY"}, {"currency": {"currencyCode": "SxsLlZEV", "namespace": "0ke8ys75"}, "item": {"itemId": "v5NrElDf", "itemSku": "FIpOao72", "itemType": "nO9XeOcg"}, "quantity": 12, "type": "CURRENCY"}, {"currency": {"currencyCode": "uxgvXHQM", "namespace": "toJ7pofb"}, "item": {"itemId": "QTi7I19A", "itemSku": "Y8K5M1jz", "itemType": "OaldQbOz"}, "quantity": 9, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "STEAM", "platformDlcIdMap": {"VwKHC3K1": "GPRwVkAr", "VyaAgY4C": "S6Smnxl6", "KynpRa4P": "aiLwLTvc"}}, {"platform": "STEAM", "platformDlcIdMap": {"RDQkRhoC": "fecSRfmQ", "93FVNyGa": "EOGGisvF", "emutoPt4": "q7PUR4SL"}}, {"platform": "PSN", "platformDlcIdMap": {"MVUbsVIH": "fGURzfJc", "H1kN7mqF": "8FncsdOX", "kDwsYXCa": "EFtWcgPr"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --entitlementClazz 'APP' \
    --entitlementName 'DVeT8QPi' \
    --itemId '["sRrnx3Fq", "Cy1DBs8r", "HrAOyEIY"]' \
    --limit '75' \
    --offset '66' \
    --userId 'ofW4MFX4' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'Z18ZxPCC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '95' \
    --offset '12' \
    --status 'FAIL' \
    --userId 'aEuxMYsK' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "YKTQ52Wq", "password": "p3BxVSMP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "mhQgOXDG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "6Zrxvcq7", "serviceAccountId": "ZHK2h9d8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "uq2q1Ea0", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"NAC8msSs": "AMI41p6K", "JJ4TFWck": "4T1IP7fG", "bupw9Gja": "luuvCnjd"}}, {"itemIdentity": "GHGGHZzw", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"goPcSYIv": "XKZ2GYi4", "nKbG4ZhU": "fkGXCIfT", "oUSJgE6V": "W5dxz85i"}}, {"itemIdentity": "rNsgxJij", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"iPrtHttU": "EA6ydkvt", "RRlwqOqZ": "RhihLp3Y", "gssrinea": "bUvxM9BY"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "4hNMGEIR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "2rnvQZfG", "publisherAuthenticationKey": "GKaJQY0W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "WfEICNaH", "clientSecret": "GrDtaV8F", "organizationId": "ziXQLuhF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "i4hX56fJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'aaoAoJXp' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'q9HzYqpB' \
    --itemId 'RS3qMuGX' \
    --itemType 'BUNDLE' \
    --endTime 'mjlEMSKQ' \
    --startTime 'eK6XLOXU' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature '9ueeuMei' \
    --itemId 'PNaSrPXg' \
    --itemType 'CODE' \
    --endTime 'MsK2hQGy' \
    --startTime 'BJoQD2jW' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "20EH8kWP", "targetItemId": "u8AYSdVa", "targetNamespace": "A93uvaIh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'ZwZJmwHI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "LK46Xvyu", "appType": "SOFTWARE", "baseAppId": "rP3FL2PJ", "boothName": "GrvFipeI", "categoryPath": "hGBz6hhR", "clazz": "nzDqdY9O", "displayOrder": 6, "entitlementType": "DURABLE", "ext": {"Fhkim8hy": {}, "oCFCGfcj": {}, "tOP655QM": {}}, "features": ["c0hLeIys", "iGg0w4sL", "cWwSCW4l"], "images": [{"as": "E1EGGXe4", "caption": "TNLJq0vs", "height": 8, "imageUrl": "AVicyqdu", "smallImageUrl": "AUoyGNfK", "width": 52}, {"as": "YZcSo8dx", "caption": "rAQ7Ahvg", "height": 95, "imageUrl": "ICT7ejaJ", "smallImageUrl": "Ae9FEbJt", "width": 68}, {"as": "rREzwOD5", "caption": "X41Y4nA5", "height": 57, "imageUrl": "Er6tZC4H", "smallImageUrl": "R1pJG1S3", "width": 37}], "itemIds": ["W9zQikE6", "qS7JGEbm", "gse5rkej"], "itemQty": {"h1Ft74A7": 49, "57xvXxrV": 98, "1B2YDfME": 59}, "itemType": "MEDIA", "listable": false, "localizations": {"4Pa5CQFF": {"description": "RRxW5xOv", "localExt": {"0F6E02IW": {}, "jBO8dFsI": {}, "36ajnjfh": {}}, "longDescription": "09W9NqFg", "title": "zyoKYNdZ"}, "m7Jhl43b": {"description": "5saW3T7x", "localExt": {"z2ovhrZf": {}, "ttqjuQMc": {}, "jk3VdM6t": {}}, "longDescription": "TRNQL4E9", "title": "MchC2hpz"}, "XoFRWwcx": {"description": "S7MmBpCN", "localExt": {"M8OBl9BL": {}, "Rhuh3b0F": {}, "FqWrIhRV": {}}, "longDescription": "DEDGFRzZ", "title": "7WB0cdLb"}}, "maxCount": 9, "maxCountPerUser": 68, "name": "VDmJiygd", "optionBoxConfig": {"boxItems": [{"count": 62, "itemId": "6VObVoz7", "itemSku": "tAUjDR0x"}, {"count": 55, "itemId": "Ei1VjE0R", "itemSku": "u946CL4I"}, {"count": 61, "itemId": "U7tFrehM", "itemSku": "u9rMxxf5"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 88, "fixedTrialCycles": 40, "graceDays": 75}, "regionData": {"g66uY8Si": [{"currencyCode": "D32ktHOP", "currencyNamespace": "kF9oZCvB", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1990-03-24T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1989-04-11T00:00:00Z", "discountedPrice": 96, "expireAt": "1972-04-21T00:00:00Z", "price": 85, "purchaseAt": "1986-01-10T00:00:00Z", "trialPrice": 65}, {"currencyCode": "gtMhzxQb", "currencyNamespace": "VN1B4gL8", "currencyType": "VIRTUAL", "discountAmount": 18, "discountExpireAt": "1973-03-11T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1985-05-13T00:00:00Z", "discountedPrice": 96, "expireAt": "1991-07-18T00:00:00Z", "price": 74, "purchaseAt": "1972-02-06T00:00:00Z", "trialPrice": 46}, {"currencyCode": "141gN8j8", "currencyNamespace": "uONKK8kt", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1996-02-10T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1981-03-28T00:00:00Z", "discountedPrice": 14, "expireAt": "1979-07-15T00:00:00Z", "price": 88, "purchaseAt": "1973-05-20T00:00:00Z", "trialPrice": 14}], "7KHTbAXG": [{"currencyCode": "UE8fVRcV", "currencyNamespace": "IDHBgrea", "currencyType": "VIRTUAL", "discountAmount": 0, "discountExpireAt": "1971-12-29T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1993-11-26T00:00:00Z", "discountedPrice": 90, "expireAt": "1995-09-20T00:00:00Z", "price": 49, "purchaseAt": "1982-06-11T00:00:00Z", "trialPrice": 51}, {"currencyCode": "Jmd8RXPC", "currencyNamespace": "wHm2eYnl", "currencyType": "REAL", "discountAmount": 61, "discountExpireAt": "1989-06-13T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1986-12-30T00:00:00Z", "discountedPrice": 24, "expireAt": "1972-07-28T00:00:00Z", "price": 29, "purchaseAt": "1991-02-13T00:00:00Z", "trialPrice": 65}, {"currencyCode": "7wiXV8D1", "currencyNamespace": "dfhpi4qg", "currencyType": "REAL", "discountAmount": 18, "discountExpireAt": "1995-09-25T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1993-05-09T00:00:00Z", "discountedPrice": 7, "expireAt": "1980-04-27T00:00:00Z", "price": 92, "purchaseAt": "1976-09-15T00:00:00Z", "trialPrice": 74}], "kCELtpHA": [{"currencyCode": "dRxbbhIH", "currencyNamespace": "ZewyBkJN", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1998-02-28T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1972-02-28T00:00:00Z", "discountedPrice": 59, "expireAt": "1996-02-02T00:00:00Z", "price": 80, "purchaseAt": "1972-02-23T00:00:00Z", "trialPrice": 11}, {"currencyCode": "yfHyywD1", "currencyNamespace": "eu1m1uol", "currencyType": "REAL", "discountAmount": 49, "discountExpireAt": "1981-04-29T00:00:00Z", "discountPercentage": 2, "discountPurchaseAt": "1997-05-09T00:00:00Z", "discountedPrice": 14, "expireAt": "1993-11-26T00:00:00Z", "price": 97, "purchaseAt": "1988-12-28T00:00:00Z", "trialPrice": 65}, {"currencyCode": "WxUl9Rer", "currencyNamespace": "q9ZHQHiQ", "currencyType": "VIRTUAL", "discountAmount": 63, "discountExpireAt": "1995-09-23T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1990-05-15T00:00:00Z", "discountedPrice": 89, "expireAt": "1971-12-14T00:00:00Z", "price": 23, "purchaseAt": "1998-04-01T00:00:00Z", "trialPrice": 71}]}, "seasonType": "PASS", "sku": "Z97s9BLu", "stackable": false, "status": "ACTIVE", "tags": ["tPD7fvGs", "taAWFuT2", "9CDWsDHu"], "targetCurrencyCode": "BBvpDJV1", "targetNamespace": "D98s4ppU", "thumbnailUrl": "SUtd1dQ8", "useCount": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'Gn5RlB1o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 's5QYvej1' \
    --appId 'tD13jqaC' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --availableDate '5SXu9MGk' \
    --baseAppId 'JPXkS2hK' \
    --categoryPath 'HCWpcDXx' \
    --features 'MnYw6rJz' \
    --includeSubCategoryItem 'true' \
    --itemType 'APP' \
    --limit '70' \
    --offset '51' \
    --region 'yKNTcHAm' \
    --sortBy '["updatedAt", "name:asc", "name"]' \
    --storeId 'qxTzfswA' \
    --tags 'tOYDRIcf' \
    --targetNamespace 'pCUgqNH9' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["Ljx4BI5J", "Q2U4GvXk", "3x36QRBb"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'oqzWKRCS' \
    --sku '6Me97LJE' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'eBheffwH' \
    --populateBundle 'true' \
    --region 'vcYBUw9g' \
    --storeId 'fLoA3GH5' \
    --sku 'P62KcCkj' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'OsMsu1Dg' \
    --sku 'xbWwhsP3' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["GndltbkX", "jMuVSAIm", "P3WbInpx"]' \
    --storeId '73Ee9Cwn' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'qljbQft2' \
    --region 'Q8Jj6ECs' \
    --storeId 'gpZWDSnl' \
    --itemIds '94kctwVB' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["FWIvh9ty", "uafI5c62", "MEOLaqiM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'Bbc5154B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'COINS' \
    --limit '80' \
    --offset '51' \
    --sortBy 'BaHhj3XR' \
    --storeId 'xPC7ewgc' \
    --keyword 'L8FXkyEu' \
    --language 'obP3Ann6' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '30' \
    --offset '59' \
    --sortBy '["updatedAt:asc", "displayOrder:desc"]' \
    --storeId '8VHbLkdy' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId '49TmqDIj' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'mPLk11im' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "zsq7AMn2", "appType": "SOFTWARE", "baseAppId": "hv9c5ELO", "boothName": "j97NYMrK", "categoryPath": "gmdYWdFV", "clazz": "wCEzlQbB", "displayOrder": 92, "entitlementType": "CONSUMABLE", "ext": {"OdYX8S9i": {}, "lMq5LByJ": {}, "8gYKMgLs": {}}, "features": ["8Q1Gg2hG", "Kd3ieW5f", "Z4laQDn4"], "images": [{"as": "SPbqqIdb", "caption": "gB4HbAzV", "height": 71, "imageUrl": "9uttAo0m", "smallImageUrl": "eJdBlDh7", "width": 61}, {"as": "LKgrpvgF", "caption": "jhUjmUUa", "height": 91, "imageUrl": "UnmunCiV", "smallImageUrl": "aUmGrKqf", "width": 36}, {"as": "d4gWruhH", "caption": "K3kpV3I6", "height": 15, "imageUrl": "ctGCgIqs", "smallImageUrl": "5vaowBzP", "width": 100}], "itemIds": ["Ts51jTcj", "CTIPybSh", "ay1gF904"], "itemQty": {"IDGTTPQb": 19, "asuL5CLm": 46, "5bAfddjY": 67}, "itemType": "APP", "listable": true, "localizations": {"90iQ57XL": {"description": "daZpM9DJ", "localExt": {"6isP5VEJ": {}, "Pmzzl2ym": {}, "2GgvpOMU": {}}, "longDescription": "XeCZeZY4", "title": "ciQlgnuR"}, "0Jt6XeXR": {"description": "1sV91D5O", "localExt": {"rm1sCygp": {}, "nkOxDC1m": {}, "wgPaoGBW": {}}, "longDescription": "AjRvZlOP", "title": "HZW0ANZi"}, "eSxLKilF": {"description": "ynX7oUp4", "localExt": {"7PZ9Gr1Y": {}, "dfVhCnrn": {}, "CQXUI4q3": {}}, "longDescription": "ryqs63pR", "title": "s3qn2eTI"}}, "maxCount": 67, "maxCountPerUser": 49, "name": "zZqVJwCO", "optionBoxConfig": {"boxItems": [{"count": 12, "itemId": "j83Z8anU", "itemSku": "yUpwAaWd"}, {"count": 61, "itemId": "7ImhJOLS", "itemSku": "57jg39gv"}, {"count": 63, "itemId": "dUq9nAI0", "itemSku": "oJCePK3l"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 65, "fixedTrialCycles": 67, "graceDays": 2}, "regionData": {"f8HlgGqK": [{"currencyCode": "Tcfh3zSd", "currencyNamespace": "HEEZlgSo", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1989-06-14T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1979-05-19T00:00:00Z", "discountedPrice": 19, "expireAt": "1982-04-22T00:00:00Z", "price": 81, "purchaseAt": "1987-02-06T00:00:00Z", "trialPrice": 96}, {"currencyCode": "w23VJKIE", "currencyNamespace": "B2F44GkB", "currencyType": "VIRTUAL", "discountAmount": 27, "discountExpireAt": "1978-07-31T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1972-08-29T00:00:00Z", "discountedPrice": 39, "expireAt": "1994-05-06T00:00:00Z", "price": 79, "purchaseAt": "1991-12-05T00:00:00Z", "trialPrice": 40}, {"currencyCode": "b4HZzDgl", "currencyNamespace": "Mu25HqIW", "currencyType": "REAL", "discountAmount": 7, "discountExpireAt": "1976-01-08T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1991-12-18T00:00:00Z", "discountedPrice": 100, "expireAt": "1978-09-18T00:00:00Z", "price": 85, "purchaseAt": "1989-10-28T00:00:00Z", "trialPrice": 0}], "gFWg5geu": [{"currencyCode": "RWN9aRW6", "currencyNamespace": "aQC2WCQ5", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1981-06-15T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1981-05-10T00:00:00Z", "discountedPrice": 1, "expireAt": "1987-08-12T00:00:00Z", "price": 20, "purchaseAt": "1996-12-15T00:00:00Z", "trialPrice": 96}, {"currencyCode": "bAq8NJs9", "currencyNamespace": "AJxB12QD", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1975-12-18T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1982-11-27T00:00:00Z", "discountedPrice": 34, "expireAt": "1973-04-25T00:00:00Z", "price": 81, "purchaseAt": "1978-12-22T00:00:00Z", "trialPrice": 79}, {"currencyCode": "B9NyPT9H", "currencyNamespace": "GV7OF1ly", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1990-10-14T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1992-10-23T00:00:00Z", "discountedPrice": 23, "expireAt": "1991-02-04T00:00:00Z", "price": 13, "purchaseAt": "1972-11-23T00:00:00Z", "trialPrice": 64}], "NprC8EYl": [{"currencyCode": "3rrSUm4S", "currencyNamespace": "2guANOTM", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1989-02-01T00:00:00Z", "discountPercentage": 90, "discountPurchaseAt": "1981-07-08T00:00:00Z", "discountedPrice": 30, "expireAt": "1971-08-23T00:00:00Z", "price": 9, "purchaseAt": "1977-01-26T00:00:00Z", "trialPrice": 38}, {"currencyCode": "64fVqaQl", "currencyNamespace": "03Sffy8N", "currencyType": "REAL", "discountAmount": 3, "discountExpireAt": "1975-10-08T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1971-04-24T00:00:00Z", "discountedPrice": 68, "expireAt": "1997-10-01T00:00:00Z", "price": 92, "purchaseAt": "1995-11-27T00:00:00Z", "trialPrice": 49}, {"currencyCode": "ifGbUUrB", "currencyNamespace": "z35n2WMy", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1986-11-03T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1973-07-27T00:00:00Z", "discountedPrice": 61, "expireAt": "1989-03-19T00:00:00Z", "price": 93, "purchaseAt": "1982-03-01T00:00:00Z", "trialPrice": 93}]}, "seasonType": "PASS", "sku": "62YXohof", "stackable": true, "status": "INACTIVE", "tags": ["SfhBv9iW", "8kudxiMK", "uKfhpWgD"], "targetCurrencyCode": "RroG23C1", "targetNamespace": "dBiBwgdj", "thumbnailUrl": "1DXIrHYS", "useCount": 76}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'bwfO4A7y' \
    --namespace $AB_NAMESPACE \
    --storeId 'dUIIM8PE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'YxHLE49D' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId '3bSIx8mY' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 28, "orderNo": "VDdBQntL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'ALcHU5Pz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'kJ8jRnYd' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'vGABHBbw' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "wXOamBKn", "previewUrl": "hKlvIzC2", "thumbnailUrl": "ALLr7GrS", "type": "image", "url": "RaIO4Pey", "videoSource": "youtube"}, {"alt": "yF7BWoSZ", "previewUrl": "Smce3i7k", "thumbnailUrl": "gjQjj9ML", "type": "video", "url": "fCMlQcap", "videoSource": "vimeo"}, {"alt": "xe1fzmt3", "previewUrl": "DkVt8TKQ", "thumbnailUrl": "qJBdgyBC", "type": "video", "url": "558dyHrS", "videoSource": "youtube"}], "developer": "CEqI3in4", "forumUrl": "st6lJwp9", "genres": ["FreeToPlay", "Casual", "Indie"], "localizations": {"AZHPmm5u": {"announcement": "8w0FZ1hy", "slogan": "TLEOd17K"}, "8BaDeJFR": {"announcement": "JDB1YZOK", "slogan": "apVtpfoh"}, "YIzev6Vv": {"announcement": "4513X5m9", "slogan": "Xlxq4RMQ"}}, "platformRequirements": {"vAqQ4ygg": [{"additionals": "DiP23uTy", "directXVersion": "x2BQUp9O", "diskSpace": "h9IEvAbN", "graphics": "aUK9EEev", "label": "oDV5DMl7", "osVersion": "gH0ZECvB", "processor": "d6BcvjhS", "ram": "Vjl582kV", "soundCard": "D2fujgqj"}, {"additionals": "wiE4pbyR", "directXVersion": "LPuMdBTj", "diskSpace": "9jxkQDHG", "graphics": "qCqhvYwy", "label": "TjSWgKXo", "osVersion": "1ZuWxwUt", "processor": "ldVwukZx", "ram": "E1udwfWK", "soundCard": "40onlOwA"}, {"additionals": "vqOE6Y4J", "directXVersion": "Ezdd3nq3", "diskSpace": "AETSsbif", "graphics": "4lIN89dB", "label": "5TG2Sl8m", "osVersion": "YcN7W5cg", "processor": "aJXLxswc", "ram": "hM2MmuGv", "soundCard": "nNpTvRBH"}], "u75El1bx": [{"additionals": "SVlN4yom", "directXVersion": "YL63KA99", "diskSpace": "ec6Fum3G", "graphics": "Cg56oah5", "label": "48wIksxc", "osVersion": "0FSnoFR2", "processor": "UBaDXiwE", "ram": "ux6UnSj8", "soundCard": "lEOHGEvB"}, {"additionals": "S8TriqrK", "directXVersion": "0XqElck7", "diskSpace": "Nl37ByFt", "graphics": "lP7FPZdh", "label": "h32xkZC5", "osVersion": "emWX5QN9", "processor": "PceW4V4k", "ram": "uOLlTVla", "soundCard": "tXizayAu"}, {"additionals": "pfTEWypu", "directXVersion": "upM7NvJP", "diskSpace": "l9Dc8SzV", "graphics": "KhgjW68Q", "label": "F2gayrfI", "osVersion": "Fbhmx23w", "processor": "dgRTlphE", "ram": "Gc2XWbX2", "soundCard": "T5vz8FER"}], "hdlScYLw": [{"additionals": "IpirkQaT", "directXVersion": "HqTuwSK5", "diskSpace": "fCUfRKdZ", "graphics": "j4QDK12j", "label": "AmVTaPDE", "osVersion": "G83AhqVl", "processor": "eYuhlwMI", "ram": "7bbUW209", "soundCard": "Sy8yjRoE"}, {"additionals": "g4mWXM1o", "directXVersion": "DU1QRujY", "diskSpace": "S13xAgqI", "graphics": "2RMmsivD", "label": "GAlZu6q3", "osVersion": "gc4CebeU", "processor": "wadkaseb", "ram": "gz7dtjiF", "soundCard": "eWZ6INyT"}, {"additionals": "2rdaFk59", "directXVersion": "tLys40Za", "diskSpace": "QbPi1LrX", "graphics": "k0kULpYK", "label": "vvfw57sH", "osVersion": "b1Yf0g38", "processor": "oed7pX9m", "ram": "ZmgQqW50", "soundCard": "QP9jtbgb"}]}, "platforms": ["IOS", "IOS", "MacOS"], "players": ["Coop", "Single", "Single"], "primaryGenre": "Simulation", "publisher": "4yTT46FO", "releaseDate": "1981-02-15T00:00:00Z", "websiteUrl": "D4bHnuqQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'DepgKYlA' \
    --namespace $AB_NAMESPACE \
    --storeId 'v7CMdtN4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'GZa4LkF6' \
    --namespace $AB_NAMESPACE \
    --storeId 'halinc7m' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'rzwUKPeT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'FsymYq1Q' \
    --namespace $AB_NAMESPACE \
    --storeId 'OqeThfTm' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'ItHr5KJt' \
    --itemId '85acdk7U' \
    --namespace $AB_NAMESPACE \
    --storeId 'sLGDfchr' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'pjTd5tce' \
    --itemId 'JgCsOc4h' \
    --namespace $AB_NAMESPACE \
    --storeId '0axnXQ4d' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'v7ls4MW8' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'e21dHhfu' \
    --populateBundle 'true' \
    --region '7Yrsb7q2' \
    --storeId 'r1LXm8bv' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 56, "comparison": "excludes", "name": "agJ4Rj9A", "predicateType": "SeasonPassPredicate", "value": "9sDQLQkw", "values": ["KyLAQFqk", "C0HJWgcX", "gISmNpUs"]}, {"anyOf": 73, "comparison": "includes", "name": "DM4OrX9g", "predicateType": "SeasonTierPredicate", "value": "HPSRjSJk", "values": ["8El2X3T5", "GuK9heQP", "BsrkzMAw"]}, {"anyOf": 86, "comparison": "isLessThan", "name": "VG0ao6IQ", "predicateType": "EntitlementPredicate", "value": "D00P7BUU", "values": ["2rGtLxyJ", "YMPlYAcj", "e962v6bN"]}]}, {"operator": "or", "predicates": [{"anyOf": 46, "comparison": "is", "name": "DxmINaW7", "predicateType": "SeasonTierPredicate", "value": "NLwXMONJ", "values": ["wWU5s7tO", "JMylNl54", "STApOR71"]}, {"anyOf": 99, "comparison": "isNot", "name": "ByeGELvM", "predicateType": "SeasonTierPredicate", "value": "zV2wIuDn", "values": ["MCcvdUEB", "32ffv6k2", "zPQ9R81b"]}, {"anyOf": 13, "comparison": "includes", "name": "iygeUkNg", "predicateType": "SeasonPassPredicate", "value": "BcKX6x4C", "values": ["H5MQAJ5g", "meUswzSe", "tCN9iXoG"]}]}, {"operator": "or", "predicates": [{"anyOf": 78, "comparison": "excludes", "name": "UwvYnPrY", "predicateType": "SeasonTierPredicate", "value": "LmgyX0Dx", "values": ["yUlM7gLF", "lJAZJkpz", "ag9PerpN"]}, {"anyOf": 18, "comparison": "isGreaterThan", "name": "2FwIuHSG", "predicateType": "SeasonPassPredicate", "value": "D1SFS13j", "values": ["nWZFa0Nb", "2QAs5ZNA", "FyAyR7G8"]}, {"anyOf": 71, "comparison": "includes", "name": "AaCn2pxD", "predicateType": "SeasonPassPredicate", "value": "l8i8FkQS", "values": ["ksKcTRQz", "zqfkpCKH", "p62WjdCi"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'aDvtfNj4' \
    --namespace $AB_NAMESPACE \
    --storeId 'uXWgc7ME' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "rBNZBnnO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'rHypxJiI' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '53' \
    --name 'JtdvKOpt' \
    --offset '95' \
    --tag 'jbRmIFh1' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "V3VFh12y", "name": "ZE5DHTlL", "status": "INACTIVE", "tags": ["q73Xibi2", "EUEAwbah", "4Sh5WgE1"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupByBoothName \
    --namespace $AB_NAMESPACE \
    --boothName 'zNrFMwLE' \
    > test.out 2>&1
eval_tap $? 112 'GetKeyGroupByBoothName' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'erljFwtj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "VMjot3D5", "name": "exlZh5b9", "status": "ACTIVE", "tags": ["6vxZhs6t", "8Dvkt185", "uByXMWht"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'YO8m0ytb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'SIjxdVt8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'eMLv84z6' \
    --namespace $AB_NAMESPACE \
    --limit '18' \
    --offset '26' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'b79rkPwF' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'twNXbOtW' \
    --limit '46' \
    --offset '87' \
    --orderNos '["dAIgNNDQ", "UPGgOxdp", "kPtj0Vlv"]' \
    --sortBy 'enFhv6Sz' \
    --startTime 'udVtwTLV' \
    --status 'REFUNDING' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'wXVCEm13' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "BMBzndKo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'anlrgEuK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "Hg4WgcC6", "privateKey": "vh6xKAUz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'zrSYWdTE' \
    --externalId 'WdP8DLxs' \
    --limit '16' \
    --notificationSource 'STRIPE' \
    --notificationType 'XCGeqZ0l' \
    --offset '62' \
    --paymentOrderNo 'Sg47vO3O' \
    --startDate 'pIMwA1Bt' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'c7rpjnVI' \
    --limit '65' \
    --offset '75' \
    --status 'AUTHORISED' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "xPxDzL60", "currencyNamespace": "oWtRHoR1", "customParameters": {"5v6cUW9e": {}, "N3mBnh2u": {}, "7v0Cq9zA": {}}, "description": "MMrYVoLn", "extOrderNo": "2se0e4tL", "extUserId": "4yPGIjlt", "itemType": "OPTIONBOX", "language": "TA-oHFF_316", "metadata": {"sO6owrnv": "qUFouqFx", "JkyWiM0Y": "nnqciP2A", "Ag898wpJ": "IMeGd1js"}, "notifyUrl": "OYPjWNKv", "omitNotification": false, "platform": "alKvD7iD", "price": 89, "recurringPaymentOrderNo": "9GwxwCwW", "region": "nGftozAg", "returnUrl": "K7VS85gn", "sandbox": true, "sku": "whwTfyIw", "subscriptionId": "7nhZj9sA", "targetNamespace": "uzHWA1Sv", "targetUserId": "7ec1HSnZ", "title": "6827Xg1Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'baqpcD6Y' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '0rt1THDM' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "CGEZ4Mo1", "paymentMethod": "Ya3ihMaU", "paymentProvider": "ALIPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'YnYWbk4B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "vy5xjaxk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'G1hzwjWe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 99, "currencyCode": "rr2hLPod", "notifyType": "CHARGE", "paymentProvider": "XSOLLA", "salesTax": 19, "vat": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'joxSkVsm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'w0y8vzNW' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Steam", "Twitch", "Twitch"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 CreateReward
# body param: body
echo '{"description": "8NCqqYpz", "eventTopic": "eL3JZe6o", "maxAwarded": 31, "maxAwardedPerUser": 53, "namespaceExpression": "IfV8Nvi9", "rewardCode": "J2nksp6r", "rewardConditions": [{"condition": "HkzYkrt4", "conditionName": "Wlt2sztR", "eventName": "6fU5LyLM", "rewardItems": [{"duration": 84, "itemId": "xOftcwIw", "quantity": 17}, {"duration": 88, "itemId": "SkFdiltS", "quantity": 84}, {"duration": 87, "itemId": "oIN2oTfI", "quantity": 17}]}, {"condition": "OqRW7EaE", "conditionName": "Z1lS9ono", "eventName": "oovN2ml3", "rewardItems": [{"duration": 7, "itemId": "gVrC0iBc", "quantity": 52}, {"duration": 61, "itemId": "L9UjdjuC", "quantity": 80}, {"duration": 93, "itemId": "oDnMT6pR", "quantity": 4}]}, {"condition": "J8mtYrhm", "conditionName": "GzUz48wJ", "eventName": "iQTSdX5T", "rewardItems": [{"duration": 66, "itemId": "pS1hg1NP", "quantity": 66}, {"duration": 24, "itemId": "qb3IOvJz", "quantity": 54}, {"duration": 79, "itemId": "M8gNPCCs", "quantity": 56}]}], "userIdExpression": "DclyZIRu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateReward' test.out

#- 137 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'T5423mhp' \
    --limit '31' \
    --offset '18' \
    --sortBy '["namespace:asc", "rewardCode:asc"]' \
    > test.out 2>&1
eval_tap $? 137 'QueryRewards' test.out

#- 138 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'ExportRewards' test.out

#- 139 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 139 'ImportRewards' test.out

#- 140 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId '5ecukSQT' \
    > test.out 2>&1
eval_tap $? 140 'GetReward' test.out

#- 141 UpdateReward
# body param: body
echo '{"description": "YpNePeji", "eventTopic": "SYu8UWys", "maxAwarded": 6, "maxAwardedPerUser": 29, "namespaceExpression": "t57vEQD1", "rewardCode": "0zjvAXiQ", "rewardConditions": [{"condition": "E7PtUDYD", "conditionName": "az2t5hKx", "eventName": "gnF6lavo", "rewardItems": [{"duration": 31, "itemId": "Ud9SlEQq", "quantity": 10}, {"duration": 50, "itemId": "MxAZg1Or", "quantity": 18}, {"duration": 67, "itemId": "sha0wU2o", "quantity": 52}]}, {"condition": "wNfLWWyF", "conditionName": "HIahQLad", "eventName": "yJyxAalh", "rewardItems": [{"duration": 6, "itemId": "YpKb8ChK", "quantity": 51}, {"duration": 97, "itemId": "fZbuJVWk", "quantity": 11}, {"duration": 66, "itemId": "EmiF4wVk", "quantity": 98}]}, {"condition": "l8bTBhMN", "conditionName": "ErELzGoL", "eventName": "XdVV4sT3", "rewardItems": [{"duration": 60, "itemId": "iKm6kEBe", "quantity": 3}, {"duration": 83, "itemId": "PokSx06j", "quantity": 18}, {"duration": 28, "itemId": "cRHB7El9", "quantity": 53}]}], "userIdExpression": "BJR0Uup9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'llCQY0qy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateReward' test.out

#- 142 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'EoSX7Ni5' \
    > test.out 2>&1
eval_tap $? 142 'DeleteReward' test.out

#- 143 CheckEventCondition
# body param: body
echo '{"payload": {"k00y1dHy": {}, "P56enMfY": {}, "ImYrKaTZ": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'VVMMtiqV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CheckEventCondition' test.out

#- 144 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "eXW5p4sc", "userId": "Dj4nlouM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'jnMkkZg3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteRewardConditionRecord' test.out

#- 145 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'ListStores' test.out

#- 146 CreateStore
# body param: body
echo '{"defaultLanguage": "vtntPxcZ", "defaultRegion": "aIZavU6r", "description": "3ouPxsHt", "supportedLanguages": ["AaTgdHvM", "JqFxB7zA", "e0mG6KZO"], "supportedRegions": ["dhKUZCv0", "qE7kUjVF", "JmcmY1dh"], "title": "H0H8tCY2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreateStore' test.out

#- 147 ImportStore
eval_tap 0 147 'ImportStore # SKIP deprecated' test.out

#- 148 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'GetPublishedStore' test.out

#- 149 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'DeletePublishedStore' test.out

#- 150 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 150 'GetPublishedStoreBackup' test.out

#- 151 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'RollbackPublishedStore' test.out

#- 152 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'oT0xWSxT' \
    > test.out 2>&1
eval_tap $? 152 'GetStore' test.out

#- 153 UpdateStore
# body param: body
echo '{"defaultLanguage": "Z9FjnImc", "defaultRegion": "Y1104G7C", "description": "4gAZ7wXC", "supportedLanguages": ["pRHBNusA", "h2ziI1hO", "k8Qa3vkf"], "supportedRegions": ["hoJHakWy", "uiLAv8s8", "GbS9rZia"], "title": "lcHKzZfo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'fcwac21e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateStore' test.out

#- 154 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'xJ5Y4Z8J' \
    > test.out 2>&1
eval_tap $? 154 'DeleteStore' test.out

#- 155 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'kVZw9Db7' \
    --action 'DELETE' \
    --itemSku '10D4K1h1' \
    --itemType 'EXTENSION' \
    --limit '80' \
    --offset '65' \
    --selected 'true' \
    --sortBy '["createdAt:asc", "createdAt", "updatedAt"]' \
    --status 'PUBLISHED' \
    --type 'CATEGORY' \
    --updatedAtEnd '2Ecu0rGX' \
    --updatedAtStart 'qGcgxXad' \
    > test.out 2>&1
eval_tap $? 155 'QueryChanges' test.out

#- 156 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'N3uiNuWs' \
    > test.out 2>&1
eval_tap $? 156 'PublishAll' test.out

#- 157 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'yjeDTYjo' \
    > test.out 2>&1
eval_tap $? 157 'PublishSelected' test.out

#- 158 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'E5QuGCrh' \
    > test.out 2>&1
eval_tap $? 158 'SelectAllRecords' test.out

#- 159 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'K1nkrGz8' \
    --action 'CREATE' \
    --itemSku 'gi9pVqaM' \
    --itemType 'SUBSCRIPTION' \
    --type 'STORE' \
    --updatedAtEnd 'maMYzKa1' \
    --updatedAtStart 'SUQC9oET' \
    > test.out 2>&1
eval_tap $? 159 'GetStatistic' test.out

#- 160 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'GvarIJru' \
    > test.out 2>&1
eval_tap $? 160 'UnselectAllRecords' test.out

#- 161 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'poMDE9IX' \
    --namespace $AB_NAMESPACE \
    --storeId 'Ji75tCTy' \
    > test.out 2>&1
eval_tap $? 161 'SelectRecord' test.out

#- 162 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'v2DM2Lge' \
    --namespace $AB_NAMESPACE \
    --storeId 'DbIaGhUv' \
    > test.out 2>&1
eval_tap $? 162 'UnselectRecord' test.out

#- 163 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId '40w7WJHi' \
    --targetStoreId 'DHtCaS3v' \
    > test.out 2>&1
eval_tap $? 163 'CloneStore' test.out

#- 164 ExportStore
eval_tap 0 164 'ExportStore # SKIP deprecated' test.out

#- 165 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'mfNRmtoz' \
    --limit '75' \
    --offset '5' \
    --sku 'TohI4btA' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    --userId 'FFxPWpiF' \
    > test.out 2>&1
eval_tap $? 165 'QuerySubscriptions' test.out

#- 166 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '2cMJVPN9' \
    > test.out 2>&1
eval_tap $? 166 'RecurringChargeSubscription' test.out

#- 167 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'VY1lqhOw' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetTicketDynamic' test.out

#- 168 DecreaseTicketSale
# body param: body
echo '{"orderNo": "KDDE0yuM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'cq3cbLVV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'DecreaseTicketSale' test.out

#- 169 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'hB08dsbf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'GetTicketBoothID' test.out

#- 170 IncreaseTicketSale
# body param: body
echo '{"count": 0, "orderNo": "0auIfNwx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'VkUdrwYy' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'IncreaseTicketSale' test.out

#- 171 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "pObhPUDh", "value": 50}, {"id": "SM6XKGgA", "value": 8}, {"id": "EQCZr6dS", "value": 81}], "steamUserId": "ZREulDak"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '1y5AqAFu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'UnlockSteamUserAchievement' test.out

#- 172 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 's6Y39E0D' \
    --xboxUserId 'ZHalhkLH' \
    > test.out 2>&1
eval_tap $? 172 'GetXblUserAchievements' test.out

#- 173 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "ET59zyFG", "percentComplete": 51}, {"id": "oLKvOVMQ", "percentComplete": 25}, {"id": "0WR0EdyK", "percentComplete": 42}], "serviceConfigId": "zDddWhXy", "titleId": "BAHEQpHG", "xboxUserId": "Wf9Mj5Er"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'po1uf980' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'UpdateXblUserAchievement' test.out

#- 174 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'rw0Wsh51' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeCampaign' test.out

#- 175 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Wl1B8kXG' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeEntitlement' test.out

#- 176 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 's43nmotx' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizeFulfillment' test.out

#- 177 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'rTS0jT3T' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeIntegration' test.out

#- 178 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'J9Ncg5jN' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizeOrder' test.out

#- 179 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'bnh8YTJB' \
    > test.out 2>&1
eval_tap $? 179 'AnonymizePayment' test.out

#- 180 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'RKLODDG4' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeSubscription' test.out

#- 181 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'XLYiCStT' \
    > test.out 2>&1
eval_tap $? 181 'AnonymizeWallet' test.out

#- 182 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'dXyAAZrM' \
    --activeOnly 'true' \
    --appType 'GAME' \
    --entitlementClazz 'CODE' \
    --entitlementName 'kxpSFHm7' \
    --features '["jsN7grGT", "bmK7WAJ4", "GJuD9fFT"]' \
    --itemId '["5PtSRIXs", "1qRrUWWn", "ZNne1DoV"]' \
    --limit '29' \
    --offset '80' \
    > test.out 2>&1
eval_tap $? 182 'QueryUserEntitlements' test.out

#- 183 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1994-07-29T00:00:00Z", "grantedCode": "BvE5YML8", "itemId": "Vsq3MJrG", "itemNamespace": "UQOxA7EJ", "language": "zcR_cojC", "quantity": 38, "region": "BcoUNNja", "source": "PURCHASE", "startDate": "1991-02-22T00:00:00Z", "storeId": "3r53JRTy"}, {"endDate": "1992-11-29T00:00:00Z", "grantedCode": "UjGHugWP", "itemId": "CAic9QWT", "itemNamespace": "y9L7tAHw", "language": "fUu_yj", "quantity": 22, "region": "LJRVG0Nu", "source": "PROMOTION", "startDate": "1997-05-14T00:00:00Z", "storeId": "P1aOuj8S"}, {"endDate": "1990-12-23T00:00:00Z", "grantedCode": "syPtvNSn", "itemId": "6tRup7CX", "itemNamespace": "o7LeStYK", "language": "Dy_npWr", "quantity": 16, "region": "jIId36yf", "source": "REDEEM_CODE", "startDate": "1978-12-23T00:00:00Z", "storeId": "XFY2IDcI"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'NMfZyaiW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'GrantUserEntitlement' test.out

#- 184 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'NYmxcKtB' \
    --activeOnly 'true' \
    --appId 'mgnLjEDo' \
    > test.out 2>&1
eval_tap $? 184 'GetUserAppEntitlementByAppId' test.out

#- 185 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '7aMEoCJ2' \
    --activeOnly 'true' \
    --limit '4' \
    --offset '29' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 185 'QueryUserEntitlementsByAppType' test.out

#- 186 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '03kiynAe' \
    --activeOnly 'true' \
    --entitlementClazz 'MEDIA' \
    --itemId 'cH7spPpR' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlementByItemId' test.out

#- 187 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'bPGQd1JM' \
    --activeOnly 'true' \
    --entitlementClazz 'MEDIA' \
    --sku '14HGId9U' \
    > test.out 2>&1
eval_tap $? 187 'GetUserEntitlementBySku' test.out

#- 188 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '2nfhcaDv' \
    --appIds '["SrxDZyvn", "wTu717FL", "A58vI6je"]' \
    --itemIds '["xA4HzY2i", "ZazUGaa1", "WAsVm1nI"]' \
    --skus '["rD7WRka7", "giIH9G31", "zXN0vphV"]' \
    > test.out 2>&1
eval_tap $? 188 'ExistsAnyUserActiveEntitlement' test.out

#- 189 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'ownsJ0uf' \
    --itemIds '["WJTx568N", "uX1RQRE9", "UvZLgzCU"]' \
    > test.out 2>&1
eval_tap $? 189 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 190 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'gD1tOEFI' \
    --appId 'EQ46xmkh' \
    > test.out 2>&1
eval_tap $? 190 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 191 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '9OCneH1l' \
    --entitlementClazz 'CODE' \
    --itemId 'WTP2zm3f' \
    > test.out 2>&1
eval_tap $? 191 'GetUserEntitlementOwnershipByItemId' test.out

#- 192 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'gE58SPek' \
    --ids '["vZNg9xVD", "nYQizUfC", "XKHOPk99"]' \
    > test.out 2>&1
eval_tap $? 192 'GetUserEntitlementOwnershipByItemIds' test.out

#- 193 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '8k2gCddk' \
    --entitlementClazz 'OPTIONBOX' \
    --sku '3V39xreG' \
    > test.out 2>&1
eval_tap $? 193 'GetUserEntitlementOwnershipBySku' test.out

#- 194 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'LK0V8lD0' \
    --entitlementIds 'LNZYd6y7' \
    > test.out 2>&1
eval_tap $? 194 'RevokeUserEntitlements' test.out

#- 195 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'FtrQzUri' \
    --namespace $AB_NAMESPACE \
    --userId 'pTtymIWp' \
    > test.out 2>&1
eval_tap $? 195 'GetUserEntitlement' test.out

#- 196 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1973-08-10T00:00:00Z", "nullFieldList": ["1nPosTtK", "afiXyp2I", "8GbIj65l"], "startDate": "1982-11-17T00:00:00Z", "status": "CONSUMED", "useCount": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'kr8GdwJU' \
    --namespace $AB_NAMESPACE \
    --userId 'KKLy374e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'UpdateUserEntitlement' test.out

#- 197 ConsumeUserEntitlement
# body param: body
echo '{"options": ["mfmO5vN5", "Lw7ssyu1", "AMrbvGdc"], "requestId": "bXJ8XtKY", "useCount": 52}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'Y9gR0O5y' \
    --namespace $AB_NAMESPACE \
    --userId 'fMIUuGDe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'ConsumeUserEntitlement' test.out

#- 198 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'BkU19wML' \
    --namespace $AB_NAMESPACE \
    --userId 'BgggKRTS' \
    > test.out 2>&1
eval_tap $? 198 'DisableUserEntitlement' test.out

#- 199 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'LdgtwZr3' \
    --namespace $AB_NAMESPACE \
    --userId 'PNC1XbAK' \
    > test.out 2>&1
eval_tap $? 199 'EnableUserEntitlement' test.out

#- 200 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'gxf2uqn3' \
    --namespace $AB_NAMESPACE \
    --userId 'McZwq2Xd' \
    > test.out 2>&1
eval_tap $? 200 'GetUserEntitlementHistories' test.out

#- 201 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'klzPXutE' \
    --namespace $AB_NAMESPACE \
    --userId 'WJMnyPcx' \
    > test.out 2>&1
eval_tap $? 201 'RevokeUserEntitlement' test.out

#- 202 FulfillItem
# body param: body
echo '{"duration": 68, "endDate": "1981-10-05T00:00:00Z", "itemId": "WwKLDLnO", "itemSku": "P8k3nimb", "language": "k1ssCHjB", "order": {"currency": {"currencyCode": "tZ4awWcW", "currencySymbol": "kMCpd00c", "currencyType": "VIRTUAL", "decimals": 87, "namespace": "8nJcp9bR"}, "ext": {"tA7rqdOb": {}, "sAc35R8U": {}, "LgJuMkLt": {}}, "free": false}, "orderNo": "ldD1t2q9", "origin": "Steam", "quantity": 78, "region": "JWV21Xtb", "source": "IAP", "startDate": "1987-09-06T00:00:00Z", "storeId": "Peg9gCYj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'o7yUrCa0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'FulfillItem' test.out

#- 203 RedeemCode
# body param: body
echo '{"code": "nOk0DBM8", "language": "ob-663", "region": "gkWkqya5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'H8RnfXuo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'RedeemCode' test.out

#- 204 FulfillRewards
# body param: body
echo '{"origin": "Other", "rewards": [{"currency": {"currencyCode": "kymfGKwV", "namespace": "ElgGm58l"}, "item": {"itemId": "gcISwZ7G", "itemSku": "N9ntxHZf", "itemType": "tZnQMGEc"}, "quantity": 80, "type": "ITEM"}, {"currency": {"currencyCode": "XLGq7Z1o", "namespace": "1rtJeH8N"}, "item": {"itemId": "C1SKqln9", "itemSku": "4VBpF3ki", "itemType": "thhL9n2v"}, "quantity": 93, "type": "CURRENCY"}, {"currency": {"currencyCode": "Web3cZd7", "namespace": "FtJ2oYJt"}, "item": {"itemId": "edNtS4WQ", "itemSku": "nhs6D9ry", "itemType": "MZyPbVTl"}, "quantity": 28, "type": "CURRENCY"}], "source": "OTHER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'fdaczHF1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'FulfillRewards' test.out

#- 205 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '8ibklpkR' \
    --endTime 'qnF9kiRl' \
    --limit '35' \
    --offset '41' \
    --productId 'OBkYF0DN' \
    --startTime '0AFBoEsd' \
    --status 'VERIFIED' \
    --type 'STADIA' \
    > test.out 2>&1
eval_tap $? 205 'QueryUserIAPOrders' test.out

#- 206 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'XvV5hFAn' \
    > test.out 2>&1
eval_tap $? 206 'QueryAllUserIAPOrders' test.out

#- 207 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'gZLhOeGW' \
    --endTime '44U7y3dA' \
    --limit '20' \
    --offset '100' \
    --startTime 't4TxRYtw' \
    --status 'SUCCESS' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 207 'QueryUserIAPConsumeHistory' test.out

#- 208 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "bdY", "productId": "xCoAtbj2", "region": "wa5Rnuar", "type": "STADIA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'n1bOotjP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'MockFulfillIAPItem' test.out

#- 209 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '8hpKKpVt' \
    --itemId 'd5eHmyRc' \
    --limit '79' \
    --offset '42' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 209 'QueryUserOrders' test.out

#- 210 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "rerAuV6k", "currencyNamespace": "TWO1fWOS", "discountedPrice": 11, "ext": {"WN7eidOD": {}, "SOn80aeT": {}, "lZou0rNi": {}}, "itemId": "bzek6H3T", "language": "Jl6fMDrM", "options": {"skipPriceValidation": false}, "platform": "Epic", "price": 45, "quantity": 84, "region": "29YGiMvH", "returnUrl": "YTe4IL4G", "sandbox": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '5TMxkMMc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'AdminCreateUserOrder' test.out

#- 211 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'oKYFWWBo' \
    --itemId 'C5hJHiDO' \
    > test.out 2>&1
eval_tap $? 211 'CountOfPurchasedItem' test.out

#- 212 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'izPaMWTA' \
    --userId '1pdpFpXS' \
    > test.out 2>&1
eval_tap $? 212 'GetUserOrder' test.out

#- 213 UpdateUserOrderStatus
# body param: body
echo '{"status": "INIT", "statusReason": "u108Z989"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'ByPRK40h' \
    --userId 'pzm8MTUt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'UpdateUserOrderStatus' test.out

#- 214 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'S0pX7V01' \
    --userId 'S4VP9OBT' \
    > test.out 2>&1
eval_tap $? 214 'FulfillUserOrder' test.out

#- 215 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'FTTcD4o5' \
    --userId 'RyJHRIP4' \
    > test.out 2>&1
eval_tap $? 215 'GetUserOrderGrant' test.out

#- 216 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'BTty13HJ' \
    --userId 'UeTTxLXo' \
    > test.out 2>&1
eval_tap $? 216 'GetUserOrderHistories' test.out

#- 217 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "DgRmf84E"}, "authorisedTime": "1976-10-30T00:00:00Z", "chargebackReversedTime": "1994-04-26T00:00:00Z", "chargebackTime": "1999-06-09T00:00:00Z", "chargedTime": "1996-08-17T00:00:00Z", "createdTime": "1992-03-25T00:00:00Z", "currency": {"currencyCode": "44Rmjc1K", "currencySymbol": "5MffIfn4", "currencyType": "VIRTUAL", "decimals": 66, "namespace": "ngDZUkqi"}, "customParameters": {"1cYDWBAV": {}, "fZfYrxy4": {}, "cuJofUzn": {}}, "extOrderNo": "knWli0by", "extTxId": "YXCAJ8gu", "extUserId": "4vDRaU2k", "issuedAt": "1988-07-31T00:00:00Z", "metadata": {"Ile2uILW": "tDH3UNRE", "VI2abEyw": "lxZ006jx", "dlYAyzF4": "dZTyMPyt"}, "namespace": "NO2c6i50", "nonceStr": "G4fVCU6f", "paymentMethod": "9OjPwaGB", "paymentMethodFee": 64, "paymentOrderNo": "BPUz22Bg", "paymentProvider": "XSOLLA", "paymentProviderFee": 21, "paymentStationUrl": "fLiMbHjv", "price": 4, "refundedTime": "1974-05-04T00:00:00Z", "salesTax": 85, "sandbox": false, "sku": "oShC6FVU", "status": "CHARGEBACK", "statusReason": "ZkcItAgU", "subscriptionId": "p9DbOKql", "subtotalPrice": 68, "targetNamespace": "vtY0hGv1", "targetUserId": "sRxLCBE8", "tax": 18, "totalPrice": 98, "totalTax": 65, "txEndTime": "1977-06-05T00:00:00Z", "type": "MEDf8w9f", "userId": "q6RQFCke", "vat": 54}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'Gr3R12n9' \
    --userId '6XlZNwHJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'ProcessUserOrderNotification' test.out

#- 218 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'YkbZZj65' \
    --userId 'L7sazntC' \
    > test.out 2>&1
eval_tap $? 218 'DownloadUserOrderReceipt' test.out

#- 219 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "9gNbcZwM", "currencyNamespace": "2iKfdvGO", "customParameters": {"PbnVl7oR": {}, "i85zXJDT": {}, "hSjOtZeo": {}}, "description": "wOt5DvQY", "extOrderNo": "pNJOFTPT", "extUserId": "7xvOklI3", "itemType": "MEDIA", "language": "SJ_TDKm_lM", "metadata": {"200DMvVy": "fNZgT1QT", "RhQNti4O": "LyjcqvNK", "tJfn1ALj": "lJIbwDaE"}, "notifyUrl": "uKFXMFNF", "omitNotification": false, "platform": "GaU6fwe2", "price": 83, "recurringPaymentOrderNo": "FbPZYiNR", "region": "uyYwKw3y", "returnUrl": "ph7uuPvL", "sandbox": true, "sku": "vNMgJyOE", "subscriptionId": "tl40wf5Z", "title": "O9NocW6U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'txlKZIqg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'CreateUserPaymentOrder' test.out

#- 220 RefundUserPaymentOrder
# body param: body
echo '{"description": "dKYIzIlN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'GTUt0nwm' \
    --userId 'DxgJm7T0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'RefundUserPaymentOrder' test.out

#- 221 ApplyUserRedemption
# body param: body
echo '{"code": "6Y40fg9S", "orderNo": "RBHMXReK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'XetnnnEc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'ApplyUserRedemption' test.out

#- 222 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'IzsO8kol' \
    --chargeStatus 'NEVER' \
    --itemId 't1RHKD68' \
    --limit '78' \
    --offset '74' \
    --sku 'KjU08tsS' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 222 'QueryUserSubscriptions' test.out

#- 223 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'sUHciORI' \
    --excludeSystem 'true' \
    --limit '83' \
    --offset '96' \
    --subscriptionId 'vO4xtg3E' \
    > test.out 2>&1
eval_tap $? 223 'GetUserSubscriptionActivities' test.out

#- 224 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 55, "itemId": "yBtPvdia", "language": "MBOj9cTo", "reason": "1hrMUnXc", "region": "BU7w37SP", "source": "RqhFco5r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'yw5mFMYW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'PlatformSubscribeSubscription' test.out

#- 225 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'b5NRXw6v' \
    --itemId 'jxFaLZeV' \
    > test.out 2>&1
eval_tap $? 225 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 226 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'pVd8J01l' \
    --userId 'OQbMIHlq' \
    > test.out 2>&1
eval_tap $? 226 'GetUserSubscription' test.out

#- 227 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'N3xO1Z0Y' \
    --userId 'eweGnAqK' \
    > test.out 2>&1
eval_tap $? 227 'DeleteUserSubscription' test.out

#- 228 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "oR8SES92"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'gsbPS2cd' \
    --userId 'rJAiOAUH' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'CancelSubscription' test.out

#- 229 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 99, "reason": "YKnFnuOL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'dKPJFIhV' \
    --userId 'eKc5RbyR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'GrantDaysToSubscription' test.out

#- 230 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '77YKMi8m' \
    --userId 'dHD2q0i3' \
    --excludeFree 'false' \
    --limit '88' \
    --offset '24' \
    > test.out 2>&1
eval_tap $? 230 'GetUserSubscriptionBillingHistories' test.out

#- 231 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "GGPoWqHi"}, "authorisedTime": "1974-11-24T00:00:00Z", "chargebackReversedTime": "1976-12-11T00:00:00Z", "chargebackTime": "1991-12-07T00:00:00Z", "chargedTime": "1972-06-11T00:00:00Z", "createdTime": "1993-06-25T00:00:00Z", "currency": {"currencyCode": "lEBxNacb", "currencySymbol": "SKHo7JDu", "currencyType": "REAL", "decimals": 23, "namespace": "O6vmmAx3"}, "customParameters": {"n9SG6x6B": {}, "5h67hvlm": {}, "VuKjpIfZ": {}}, "extOrderNo": "CpJ7uofu", "extTxId": "RoVwetgF", "extUserId": "P5i0s5XB", "issuedAt": "1973-10-12T00:00:00Z", "metadata": {"0fBTCV5I": "Vd5aDiZz", "uOJ2EjJs": "8Gsm6yrc", "CxJzyF0i": "64RMtLNd"}, "namespace": "VZZFT6iu", "nonceStr": "7xMiZmXy", "paymentMethod": "v1muNbJb", "paymentMethodFee": 31, "paymentOrderNo": "omQH0yKh", "paymentProvider": "ALIPAY", "paymentProviderFee": 22, "paymentStationUrl": "9eUULUxM", "price": 58, "refundedTime": "1983-11-19T00:00:00Z", "salesTax": 1, "sandbox": false, "sku": "F6wB1Grr", "status": "NOTIFICATION_OF_CHARGEBACK", "statusReason": "L0t1n2IN", "subscriptionId": "F8i3Fa1e", "subtotalPrice": 65, "targetNamespace": "EtfAURZL", "targetUserId": "NSD9YuvI", "tax": 80, "totalPrice": 33, "totalTax": 39, "txEndTime": "1975-12-04T00:00:00Z", "type": "J5z7zxk1", "userId": "vyXkoeVQ", "vat": 91}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'DAVnFRju' \
    --userId 'YwepzOQ7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'ProcessUserSubscriptionNotification' test.out

#- 232 AcquireUserTicket
# body param: body
echo '{"count": 27, "orderNo": "RREGhrzU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName '3FSrymfa' \
    --namespace $AB_NAMESPACE \
    --userId 'lmfeVw8x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AcquireUserTicket' test.out

#- 233 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'DwhGq3O3' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserCurrencyWallets' test.out

#- 234 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode '618I7yp3' \
    --namespace $AB_NAMESPACE \
    --userId 'hs8gbCpj' \
    --limit '27' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 234 'ListUserCurrencyTransactions' test.out

#- 235 CheckWallet
eval_tap 0 235 'CheckWallet # SKIP deprecated' test.out

#- 236 CreditUserWallet
# body param: body
echo '{"amount": 97, "expireAt": "1976-09-07T00:00:00Z", "origin": "Other", "reason": "YchCbQWS", "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'EYQZCIss' \
    --namespace $AB_NAMESPACE \
    --userId 'E9nzuSSa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'CreditUserWallet' test.out

#- 237 PayWithUserWallet
# body param: body
echo '{"amount": 61, "walletPlatform": "GooglePlay"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode '8KBtYtng' \
    --namespace $AB_NAMESPACE \
    --userId 'QpzUqeqw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'PayWithUserWallet' test.out

#- 238 GetUserWallet
eval_tap 0 238 'GetUserWallet # SKIP deprecated' test.out

#- 239 DebitUserWallet
eval_tap 0 239 'DebitUserWallet # SKIP deprecated' test.out

#- 240 DisableUserWallet
eval_tap 0 240 'DisableUserWallet # SKIP deprecated' test.out

#- 241 EnableUserWallet
eval_tap 0 241 'EnableUserWallet # SKIP deprecated' test.out

#- 242 ListUserWalletTransactions
eval_tap 0 242 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 243 QueryWallets
eval_tap 0 243 'QueryWallets # SKIP deprecated' test.out

#- 244 GetWallet
eval_tap 0 244 'GetWallet # SKIP deprecated' test.out

#- 245 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'K6qJAEKO' \
    --end 'RM7I5gXJ' \
    --start 'mEHYUoSQ' \
    > test.out 2>&1
eval_tap $? 245 'SyncOrders' test.out

#- 246 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["tFvTNHMy", "VNLkxBc9", "O5Wb167t"], "apiKey": "sUiPrpD3", "authoriseAsCapture": true, "blockedPaymentMethods": ["2jOrotLi", "11D8LFQz", "5bxUfadg"], "clientKey": "3ektoTUD", "dropInSettings": "TodhtLP7", "liveEndpointUrlPrefix": "Ffv3ycvV", "merchantAccount": "KeZv0gr7", "notificationHmacKey": "xB4fXoz6", "notificationPassword": "gHnRI5mu", "notificationUsername": "wPoJ7wqc", "returnUrl": "ts8O5TRb", "settings": "VrLR4m7k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'TestAdyenConfig' test.out

#- 247 TestAliPayConfig
# body param: body
echo '{"appId": "5GUU8KmX", "privateKey": "PNRq2LbY", "publicKey": "43QPgoxc", "returnUrl": "GN4iayWk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'TestAliPayConfig' test.out

#- 248 TestCheckoutConfig
# body param: body
echo '{"publicKey": "Gdy12US0", "secretKey": "qlTDt7Vb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'TestCheckoutConfig' test.out

#- 249 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'ldHtZbOG' \
    --region 'YIEBojMO' \
    > test.out 2>&1
eval_tap $? 249 'DebugMatchedPaymentMerchantConfig' test.out

#- 250 TestPayPalConfig
# body param: body
echo '{"clientID": "mMuW3Xfx", "clientSecret": "8fXnUGb1", "returnUrl": "QxObFCQI", "webHookId": "8684f9ds"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'TestPayPalConfig' test.out

#- 251 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["RboxWl0K", "1TfwSp9A", "ybz5l89d"], "publishableKey": "lw6M3I4a", "secretKey": "NUrbL1rT", "webhookSecret": "qUPGem66"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'TestStripeConfig' test.out

#- 252 TestWxPayConfig
# body param: body
echo '{"appId": "kyp1ZS8z", "key": "qVEjaY1y", "mchid": "Pw8yjJl3", "returnUrl": "rMQ6mo20"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'TestWxPayConfig' test.out

#- 253 TestXsollaConfig
# body param: body
echo '{"apiKey": "2tMwtv9G", "flowCompletionUrl": "y6CWyxnG", "merchantId": 26, "projectId": 60, "projectSecretKey": "eAOYRmMF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'TestXsollaConfig' test.out

#- 254 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'CuWcx6A7' \
    > test.out 2>&1
eval_tap $? 254 'GetPaymentMerchantConfig' test.out

#- 255 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["EJMa1WWF", "dPE0IUpR", "8OlaOtop"], "apiKey": "RmTBY7yh", "authoriseAsCapture": true, "blockedPaymentMethods": ["UMCvIzx3", "NuS1Gh64", "r5KSmisG"], "clientKey": "9YtC7cHA", "dropInSettings": "by9oVNEe", "liveEndpointUrlPrefix": "bgreALUv", "merchantAccount": "wfdXeaB4", "notificationHmacKey": "DoE20gYB", "notificationPassword": "lswdubQQ", "notificationUsername": "54LPblGg", "returnUrl": "pSBM3Eo3", "settings": "66pCpgm8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'eBkiPuaM' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateAdyenConfig' test.out

#- 256 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'hREiGjav' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 256 'TestAdyenConfigById' test.out

#- 257 UpdateAliPayConfig
# body param: body
echo '{"appId": "YaOW3VJ3", "privateKey": "hhbUT2Wl", "publicKey": "Vw31rLBK", "returnUrl": "CTgZNTD5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'dUYJbITb' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateAliPayConfig' test.out

#- 258 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '08tlRl4G' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 258 'TestAliPayConfigById' test.out

#- 259 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "6m7qMJwh", "secretKey": "L8X5VtJ5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'nchNHHEf' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateCheckoutConfig' test.out

#- 260 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id '0ZZLv43I' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 260 'TestCheckoutConfigById' test.out

#- 261 UpdatePayPalConfig
# body param: body
echo '{"clientID": "Os5SvYtn", "clientSecret": "RFq1evlZ", "returnUrl": "9oTUWsVr", "webHookId": "Tv8rJDLp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'XWHy1FjA' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdatePayPalConfig' test.out

#- 262 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'beBBdAYz' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 262 'TestPayPalConfigById' test.out

#- 263 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["PL3eQ2rG", "MkLKWHtK", "mEIyqxVp"], "publishableKey": "LcqdYJS3", "secretKey": "UvDfUGrC", "webhookSecret": "mnWlwCba"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id '5GbaL2Qu' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdateStripeConfig' test.out

#- 264 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 's1bgIcZx' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 264 'TestStripeConfigById' test.out

#- 265 UpdateWxPayConfig
# body param: body
echo '{"appId": "PgPXMMeR", "key": "IWJ2Vcxh", "mchid": "N0F4WvjM", "returnUrl": "eZoAA7F8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id '6wevaHfz' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'UpdateWxPayConfig' test.out

#- 266 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'K9dUi8fR' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 266 'UpdateWxPayConfigCert' test.out

#- 267 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'D0sAQmwn' \
    > test.out 2>&1
eval_tap $? 267 'TestWxPayConfigById' test.out

#- 268 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "zXF3uF8y", "flowCompletionUrl": "a6vTE0Zl", "merchantId": 66, "projectId": 45, "projectSecretKey": "aQEpAKoN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'Bx9oFF0E' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdateXsollaConfig' test.out

#- 269 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id '9jHwygZu' \
    > test.out 2>&1
eval_tap $? 269 'TestXsollaConfigById' test.out

#- 270 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "LARGE", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'vd9hB1Ag' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'UpdateXsollaUIConfig' test.out

#- 271 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '71' \
    --namespace_ '310wOUg3' \
    --offset '93' \
    --region 'nNBxmWXQ' \
    > test.out 2>&1
eval_tap $? 271 'QueryPaymentProviderConfig' test.out

#- 272 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "fLcKlsAk", "region": "5yjATMCH", "sandboxTaxJarApiToken": "fZMfujc0", "specials": ["ADYEN", "STRIPE", "PAYPAL"], "taxJarApiToken": "Ad1T9tdL", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'CreatePaymentProviderConfig' test.out

#- 273 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 273 'GetAggregatePaymentProviders' test.out

#- 274 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'ly4fdblc' \
    --region 'THRLNkLp' \
    > test.out 2>&1
eval_tap $? 274 'DebugMatchedPaymentProviderConfig' test.out

#- 275 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 275 'GetSpecialPaymentProviders' test.out

#- 276 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "Vq0eUpwt", "region": "sckEnraL", "sandboxTaxJarApiToken": "9FGfLkEz", "specials": ["ADYEN", "WXPAY", "ADYEN"], "taxJarApiToken": "NvO7IJzr", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'uSyEANGY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'UpdatePaymentProviderConfig' test.out

#- 277 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'NxVvUedz' \
    > test.out 2>&1
eval_tap $? 277 'DeletePaymentProviderConfig' test.out

#- 278 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 278 'GetPaymentTaxConfig' test.out

#- 279 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "RjuBQhub", "taxJarApiToken": "bwQOV3UQ", "taxJarEnabled": false, "taxJarProductCodesMapping": {"ZhOQ2xYJ": "jpRhQjN8", "7nLcaf4f": "2g0wGxYm", "RL1uJ9hK": "RIereuY4"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'UpdatePaymentTaxConfig' test.out

#- 280 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'VmdC90IA' \
    --end '1sQeMo1S' \
    --start 'vt23tEqj' \
    > test.out 2>&1
eval_tap $? 280 'SyncPaymentOrders' test.out

#- 281 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'dCLjhjss' \
    --storeId 'r6R97OIO' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetRootCategories' test.out

#- 282 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'Uc6vhUcP' \
    --storeId 'CI5jhgI3' \
    > test.out 2>&1
eval_tap $? 282 'DownloadCategories' test.out

#- 283 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '0riPzIRw' \
    --namespace $AB_NAMESPACE \
    --language 'zgFKu5nq' \
    --storeId 'LIItpIdI' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetCategory' test.out

#- 284 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath '0D3naI5t' \
    --namespace $AB_NAMESPACE \
    --language 'qzfzelCV' \
    --storeId 'MpplKwF5' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetChildCategories' test.out

#- 285 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath '1k9C6FEA' \
    --namespace $AB_NAMESPACE \
    --language '61v56aXF' \
    --storeId 'x6eJTl92' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetDescendantCategories' test.out

#- 286 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 286 'PublicListCurrencies' test.out

#- 287 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language '6qEuEW4p' \
    --region 'MSiQ1poF' \
    --storeId 'bOvpiNUR' \
    --appId 'BUR1jykT' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetItemByAppId' test.out

#- 288 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --baseAppId 'rFZJEKKL' \
    --categoryPath 'nGLLxri9' \
    --features 'QsZmFx55' \
    --includeSubCategoryItem 'false' \
    --itemType 'MEDIA' \
    --language 'W5MRiukb' \
    --limit '8' \
    --offset '79' \
    --region 'PZQQyQXW' \
    --sortBy '["createdAt", "displayOrder:desc", "name:desc"]' \
    --storeId 'afwjDvdM' \
    --tags 'uSIod9Ax' \
    > test.out 2>&1
eval_tap $? 288 'PublicQueryItems' test.out

#- 289 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'sV2WcdUp' \
    --region 'I3n1p9xQ' \
    --storeId 'VVJeAmuf' \
    --sku 'PChD2blM' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetItemBySku' test.out

#- 290 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'X2W7V1l4' \
    --region 'FQm6pVWs' \
    --storeId 'Ezh7sMrO' \
    --itemIds 'NXrH3Yie' \
    > test.out 2>&1
eval_tap $? 290 'PublicBulkGetItems' test.out

#- 291 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["Q8SIm0Ul", "9pO7edQV", "pIu39c5o"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicValidateItemPurchaseCondition' test.out

#- 292 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'COINS' \
    --limit '83' \
    --offset '50' \
    --region 'lld22zqI' \
    --storeId 'mVKlMaY1' \
    --keyword '14WqERDK' \
    --language 'eEKJHgqX' \
    > test.out 2>&1
eval_tap $? 292 'PublicSearchItems' test.out

#- 293 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'XlytgVDH' \
    --namespace $AB_NAMESPACE \
    --language 'kHAbwx9q' \
    --region 'bW7aBUZo' \
    --storeId 'FV9hKDfQ' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetApp' test.out

#- 294 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'NGjvkdOD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 294 'PublicGetItemDynamicData' test.out

#- 295 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'Uj2G3PHZ' \
    --namespace $AB_NAMESPACE \
    --language 'yrFBSIHH' \
    --populateBundle 'true' \
    --region 'HRdVgYU8' \
    --storeId 'ODeJczEz' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetItem' test.out

#- 296 GetPaymentCustomization
eval_tap 0 296 'GetPaymentCustomization # SKIP deprecated' test.out

#- 297 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "QViCE035", "paymentProvider": "PAYPAL", "returnUrl": "YErjZZ7Z", "ui": "1dmtNDjq", "zipCode": "w1LtKRJJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicGetPaymentUrl' test.out

#- 298 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'R1J9zOaH' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetPaymentMethods' test.out

#- 299 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ufV83nQR' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetUnpaidPaymentOrder' test.out

#- 300 Pay
# body param: body
echo '{"token": "XU1qmXCZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '7rVzct37' \
    --paymentProvider 'CHECKOUT' \
    --zipCode 'MoAv4j9o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'Pay' test.out

#- 301 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'H97cTuej' \
    > test.out 2>&1
eval_tap $? 301 'PublicCheckPaymentOrderPaidStatus' test.out

#- 302 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'WALLET' \
    --region '7twjQrAG' \
    > test.out 2>&1
eval_tap $? 302 'GetPaymentPublicConfig' test.out

#- 303 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'cecJfoOy' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetQRCode' test.out

#- 304 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'ebnaLvJ8' \
    --foreinginvoice '2oLgIiUu' \
    --invoiceId 'M6DpXNHS' \
    --payload 'vyezHL0n' \
    --redirectResult 'mKIAu015' \
    --resultCode 'ggEGB3qT' \
    --sessionId '0dz2JdlL' \
    --status 'cjuTfG0R' \
    --token 'Ff4CqgH4' \
    --type 'aIwekqCX' \
    --userId 'P6smK6Ny' \
    --orderNo 'IimkHLxF' \
    --paymentOrderNo 'BcBd04pM' \
    --paymentProvider 'XSOLLA' \
    --returnUrl '7zsNF26m' \
    > test.out 2>&1
eval_tap $? 304 'PublicNormalizePaymentReturnUrl' test.out

#- 305 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'U7elWVKT' \
    --paymentOrderNo 'rDS9OnBy' \
    --paymentProvider 'ALIPAY' \
    > test.out 2>&1
eval_tap $? 305 'GetPaymentTaxValue' test.out

#- 306 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'B0IBlJOm' \
    > test.out 2>&1
eval_tap $? 306 'GetRewardByCode' test.out

#- 307 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic '1cP1oslo' \
    --limit '96' \
    --offset '40' \
    --sortBy '["rewardCode", "namespace"]' \
    > test.out 2>&1
eval_tap $? 307 'QueryRewards1' test.out

#- 308 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'prTO7upd' \
    > test.out 2>&1
eval_tap $? 308 'GetReward1' test.out

#- 309 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 309 'PublicListStores' test.out

#- 310 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["eB4JhaVW", "0QKWwyWs", "6N6Y4Kn6"]' \
    --itemIds '["qBDkRuAs", "vmB4Fhy0", "ZjjIYong"]' \
    --skus '["4YH3k8m4", "rHpnYAQx", "Y5biGbUD"]' \
    > test.out 2>&1
eval_tap $? 310 'PublicExistsAnyMyActiveEntitlement' test.out

#- 311 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'MHncUcdL' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 312 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'mo4VpQzg' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 313 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'mCSuZTHq' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 314 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["71cFRJR4", "gbL6OYb7", "dhS9Vj4i"]' \
    --itemIds '["AFLhVYHj", "MuBpeCHi", "RWzG2m0G"]' \
    --skus '["jm8aQfdE", "DNSB2skk", "7vaPAuq1"]' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetEntitlementOwnershipToken' test.out

#- 315 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'NrXnWCTa' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 315 'PublicGetMyWallet' test.out

#- 316 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "2quXQzHv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'VpAiUwZL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'SyncEpicGameDLC' test.out

#- 317 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'uBHNcoDe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicSyncPsnDlcInventory' test.out

#- 318 SyncSteamDLC
# body param: body
echo '{"appId": "rSu9Ii8z", "steamId": "yNe6wBmP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId '7H4lNfAL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'SyncSteamDLC' test.out

#- 319 SyncXboxDLC
# body param: body
echo '{"xstsToken": "9zETyFiK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'aAC4tyPp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'SyncXboxDLC' test.out

#- 320 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'egMDVSMh' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'H3gUIp9P' \
    --features '["BZtcqRPm", "EjXRukbJ", "UvPPH2GW"]' \
    --itemId '["p8H8kx0f", "ai2sQTnx", "xVUVoK2K"]' \
    --limit '65' \
    --offset '85' \
    > test.out 2>&1
eval_tap $? 320 'PublicQueryUserEntitlements' test.out

#- 321 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '2IHJaMD7' \
    --appId '1JVkdDBA' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetUserAppEntitlementByAppId' test.out

#- 322 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'PG1DBUjM' \
    --limit '37' \
    --offset '32' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 322 'PublicQueryUserEntitlementsByAppType' test.out

#- 323 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'g6VH8Afp' \
    --entitlementClazz 'MEDIA' \
    --itemId 'yvwQuXGj' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetUserEntitlementByItemId' test.out

#- 324 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '0uhESAGs' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku '3i6yhtBm' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserEntitlementBySku' test.out

#- 325 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'LSvkzZH2' \
    --appIds '["mpm2juD6", "f9TPWkSR", "o06aNe9E"]' \
    --itemIds '["Cms7YP4c", "NNskner0", "H0PoAEP4"]' \
    --skus '["PTC6Pr9Y", "h2zIDvvG", "fOt8lBoO"]' \
    > test.out 2>&1
eval_tap $? 325 'PublicExistsAnyUserActiveEntitlement' test.out

#- 326 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '8H5eQaeo' \
    --appId 'VVe8VZzA' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 327 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'jwgPGHD7' \
    --entitlementClazz 'APP' \
    --itemId 'TJQyjqb8' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 328 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '8htSthUb' \
    --ids '["VZAJxPEj", "ZbfMjKkT", "okk9q2AQ"]' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 329 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'CGB0j5MY' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'AVCZtpnM' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 330 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '225ZOo34' \
    --namespace $AB_NAMESPACE \
    --userId '1FpVQWpz' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetUserEntitlement' test.out

#- 331 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["3j5BUU3c", "1HDcXGd1", "IoQ3h3NH"], "requestId": "bpjETznd", "useCount": 100}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId '5fQQnhsa' \
    --namespace $AB_NAMESPACE \
    --userId 'LDyMECGF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicConsumeUserEntitlement' test.out

#- 332 PublicRedeemCode
# body param: body
echo '{"code": "4iWjM64N", "language": "nsK_MUkZ", "region": "YHxAMpIY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'OvRmC8n1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicRedeemCode' test.out

#- 333 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "Jq_uhje_272", "productId": "7GzAOm90", "receiptData": "L5dFiKJ3", "region": "7ZQZMI48", "transactionId": "e605hMKk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'qaJmqLmz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicFulfillAppleIAPItem' test.out

#- 334 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "uFBSw6dc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'kjqTyECz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'SyncEpicGamesInventory' test.out

#- 335 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "NKS_hn", "orderId": "FCYDBtix", "packageName": "OmXFij8Q", "productId": "PGyEjjck", "purchaseTime": 14, "purchaseToken": "m495HHJe", "region": "OzfBE9EL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'HV3Pbpvl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PublicFulfillGoogleIAPItem' test.out

#- 336 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "9Ppt3gB0", "price": 0.9454793808844443, "productId": "3yVq3klu", "serviceLabel": 90}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId '3JGwVNrH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'PublicReconcilePlayStationStore' test.out

#- 337 SyncStadiaEntitlement
# body param: body
echo '{"appId": "Rp2A2Ery", "language": "AsNl", "region": "IXMr12GL", "stadiaPlayerId": "GaXZrkZX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'gh5FmYWP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'SyncStadiaEntitlement' test.out

#- 338 SyncSteamInventory
# body param: body
echo '{"appId": "uWHeAiSA", "currencyCode": "VdcMm9X5", "language": "TBS", "price": 0.11622881312090305, "productId": "Yt3ZPljW", "region": "9utnUIpY", "steamId": "5FHdTdnM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'cimM626g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'SyncSteamInventory' test.out

#- 339 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "OIZi8aBd", "language": "sE-mC", "region": "IJugyKys"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '3NtuUj5a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'SyncTwitchDropsEntitlement' test.out

#- 340 SyncXboxInventory
# body param: body
echo '{"currencyCode": "v6vt49J2", "price": 0.5186299083581805, "productId": "LAAerLeo", "xstsToken": "cMxdVTNf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'prF2SeCQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'SyncXboxInventory' test.out

#- 341 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'KkwTR6Gz' \
    --itemId 'WuGujdie' \
    --limit '10' \
    --offset '21' \
    --status 'INIT' \
    > test.out 2>&1
eval_tap $? 341 'PublicQueryUserOrders' test.out

#- 342 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "mkBzsGSJ", "discountedPrice": 57, "ext": {"Xctzl40E": {}, "AVt8IAnU": {}, "7Bpvm3ti": {}}, "itemId": "Brx6CpLN", "language": "pe_783", "price": 30, "quantity": 47, "region": "WBv1dQi9", "returnUrl": "VGNXWan1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'aYAtaqlr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'PublicCreateUserOrder' test.out

#- 343 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'eZNA0HOA' \
    --userId 'uAR3PVvP' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetUserOrder' test.out

#- 344 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '9OVekpZG' \
    --userId 'yLg8IWiO' \
    > test.out 2>&1
eval_tap $? 344 'PublicCancelUserOrder' test.out

#- 345 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'pYJtxlV0' \
    --userId 'nHrqvutb' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserOrderHistories' test.out

#- 346 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'pcPNmIDh' \
    --userId 'IIZjQn2z' \
    > test.out 2>&1
eval_tap $? 346 'PublicDownloadUserOrderReceipt' test.out

#- 347 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'wUXC0rPr' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetPaymentAccounts' test.out

#- 348 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'nkvn8mJ2' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'mqVGGH3e' \
    > test.out 2>&1
eval_tap $? 348 'PublicDeletePaymentAccount' test.out

#- 349 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'IAHOI84J' \
    --chargeStatus 'NEVER' \
    --itemId 'lXVndzkS' \
    --limit '65' \
    --offset '6' \
    --sku 'U1HSesjU' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 349 'PublicQueryUserSubscriptions' test.out

#- 350 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "Foc7O8M7", "itemId": "0642F24Q", "language": "HpO_JKYD_480", "region": "c837Iaqh", "returnUrl": "WZEQ7voP", "source": "olyqtGkJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'kidgjwz7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicSubscribeSubscription' test.out

#- 351 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '58Omwku0' \
    --itemId '4hAEo4C3' \
    > test.out 2>&1
eval_tap $? 351 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 352 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'val0h6vM' \
    --userId 'brOUokzt' \
    > test.out 2>&1
eval_tap $? 352 'PublicGetUserSubscription' test.out

#- 353 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'EvYgE5JQ' \
    --userId 'bUifeDbU' \
    > test.out 2>&1
eval_tap $? 353 'PublicChangeSubscriptionBillingAccount' test.out

#- 354 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "MYUVkGnX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'bDI2tY8u' \
    --userId '9vSzPLPk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicCancelSubscription' test.out

#- 355 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'YAIZMbwH' \
    --userId 'Y0AIUYTW' \
    --excludeFree 'true' \
    --limit '45' \
    --offset '89' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetUserSubscriptionBillingHistories' test.out

#- 356 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'noZlJ1PS' \
    --namespace $AB_NAMESPACE \
    --userId 'HaLwtXZn' \
    > test.out 2>&1
eval_tap $? 356 'PublicGetWallet' test.out

#- 357 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'trsB7wmd' \
    --namespace $AB_NAMESPACE \
    --userId 'YMBJ0iF1' \
    --limit '8' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 357 'PublicListUserWalletTransactions' test.out

#- 358 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --availableDate 'e9fIG5wU' \
    --baseAppId 'ZS0Xtzq1' \
    --categoryPath 'CHyBrWQP' \
    --features 'jcNOR12O' \
    --includeSubCategoryItem 'false' \
    --itemStatus 'INACTIVE' \
    --itemType 'COINS' \
    --limit '31' \
    --offset '30' \
    --region 'IITM6ryF' \
    --sortBy '["updatedAt", "displayOrder:desc", "name"]' \
    --storeId '5DUPG160' \
    --tags 'e7orxDPC' \
    --targetNamespace 'e3mHCYkz' \
    > test.out 2>&1
eval_tap $? 358 'QueryItems1' test.out

#- 359 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'EvIwacHF' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 359 'ImportStore1' test.out

#- 360 ExportStore1
# body param: body
echo '{"itemIds": ["8Ta8vYuZ", "vQKZLy0E", "ELjh3vDe"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'FupcXEjF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE