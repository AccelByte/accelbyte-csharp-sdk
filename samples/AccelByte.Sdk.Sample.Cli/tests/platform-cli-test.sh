#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..347"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "e7TceuSt", "appType": "DLC", "baseAppId": "eCQMUlVn", "boothName": "NnFqXJbQ", "boundItemIds": ["XRumxtkD", "pi8qsO65", "F9UmwowQ"], "categoryPath": "m8TjqUEV", "clazz": "PK5ZPNzH", "createdAt": "1987-05-13T00:00:00Z", "description": "gzYVdgJ1", "displayOrder": 17, "entitlementType": "CONSUMABLE", "ext": {"RdA1Uzg4": {}, "4CGo8cGc": {}, "qeg8Mylc": {}}, "features": ["1X0z4mWK", "v10qjBuS", "eRpSf7gk"], "fresh": true, "images": [{"as": "MuPX6boQ", "caption": "1uQ2b19d", "height": 73, "imageUrl": "QQnKMnsP", "smallImageUrl": "s6VPM8wj", "width": 1}, {"as": "REdh9I8I", "caption": "xKsxL5ca", "height": 88, "imageUrl": "EC0EIGzR", "smallImageUrl": "HLyHQH5W", "width": 90}, {"as": "WVkiuhZA", "caption": "DZkjf5bd", "height": 58, "imageUrl": "MxuVWLtb", "smallImageUrl": "ClY1JpTU", "width": 89}], "itemId": "S5xAK52y", "itemIds": ["aW4Eh305", "GnH8MfKH", "l28vBQ4M"], "itemQty": {"ZTAGayHa": 81, "N4QX8SYF": 79, "6LYbtsHy": 9}, "itemType": "APP", "language": "wr40a5Ra", "listable": true, "localExt": {"xC8OfDJO": {}, "5Pj2d1XU": {}, "HbjYrbaW": {}}, "longDescription": "AtpP3nFh", "maxCount": 90, "maxCountPerUser": 5, "name": "HJtmiNWK", "namespace": "HDiJibNH", "optionBoxConfig": {"boxItems": [{"count": 68, "itemId": "KPsZNSDJ", "itemSku": "82O4XSL5"}, {"count": 98, "itemId": "zqnFw7EB", "itemSku": "E3RIJ0DT"}, {"count": 7, "itemId": "kIVL8PfC", "itemSku": "V9AZzxiQ"}]}, "purchasable": false, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 2, "comparison": "isLessThan", "name": "VuN5aQFd", "predicateType": "SeasonPassPredicate", "value": "UwJJ6Nvn", "values": ["4s4jitV3", "ARH7Ndfq", "l8L6pMYB"]}, {"anyOf": 51, "comparison": "isNot", "name": "LSUE8Bd1", "predicateType": "EntitlementPredicate", "value": "9nLFCJ5F", "values": ["K7BMF0PF", "906VQkvw", "SRssKQko"]}, {"anyOf": 28, "comparison": "is", "name": "HeTK0wjR", "predicateType": "EntitlementPredicate", "value": "xknu4czh", "values": ["ePWzfECy", "n7PVyIX0", "ioEgegFp"]}]}, {"operator": "or", "predicates": [{"anyOf": 82, "comparison": "isNot", "name": "eXlK1mbo", "predicateType": "SeasonTierPredicate", "value": "JvrNU6Wb", "values": ["DtPgOHNw", "7zVCrkN8", "ML8HKj2m"]}, {"anyOf": 0, "comparison": "excludes", "name": "GM0TdzzM", "predicateType": "SeasonPassPredicate", "value": "ntYRFG4B", "values": ["7UNx2DeV", "EdSJp95x", "14Cbyls0"]}, {"anyOf": 77, "comparison": "excludes", "name": "GoOrnIGZ", "predicateType": "SeasonTierPredicate", "value": "NFLrYZT5", "values": ["D62aygfE", "fVnJhxlG", "z2r4h9QA"]}]}, {"operator": "or", "predicates": [{"anyOf": 46, "comparison": "excludes", "name": "4XMzbIsY", "predicateType": "EntitlementPredicate", "value": "lykixcpU", "values": ["i5TPzP1D", "cHKMLu1u", "NS4R8GpH"]}, {"anyOf": 50, "comparison": "isLessThan", "name": "XCfsIkhq", "predicateType": "EntitlementPredicate", "value": "jjFA2FjO", "values": ["mcdBbIrk", "J1pK5G0X", "wfpq4uLY"]}, {"anyOf": 31, "comparison": "includes", "name": "SshA9wJU", "predicateType": "SeasonTierPredicate", "value": "MwAI7GXV", "values": ["9M0nDJjB", "iHVdhbUn", "2bRwlqyY"]}]}]}, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 70, "fixedTrialCycles": 5, "graceDays": 32}, "region": "UQBVRh1v", "regionData": [{"currencyCode": "RWxuqMdm", "currencyNamespace": "p4nTa043", "currencyType": "VIRTUAL", "discountAmount": 47, "discountExpireAt": "1991-09-19T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1993-07-07T00:00:00Z", "discountedPrice": 86, "expireAt": "1976-03-19T00:00:00Z", "price": 73, "purchaseAt": "1972-04-23T00:00:00Z", "trialPrice": 67}, {"currencyCode": "vAeEyyCj", "currencyNamespace": "qMvQt9rg", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1975-01-07T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1993-04-14T00:00:00Z", "discountedPrice": 31, "expireAt": "1978-04-12T00:00:00Z", "price": 20, "purchaseAt": "1974-11-06T00:00:00Z", "trialPrice": 83}, {"currencyCode": "VYnljmIB", "currencyNamespace": "eWQv4uSZ", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1991-11-07T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1976-10-04T00:00:00Z", "discountedPrice": 10, "expireAt": "1985-05-26T00:00:00Z", "price": 41, "purchaseAt": "1981-04-25T00:00:00Z", "trialPrice": 60}], "seasonType": "TIER", "sku": "KS5kToI8", "stackable": true, "status": "INACTIVE", "tags": ["FJQ0CiMH", "ejaTXXgN", "YxkBcXd6"], "targetCurrencyCode": "40iUJngB", "targetItemId": "sAaUMf9p", "targetNamespace": "NOCgvFsq", "thumbnailUrl": "z5KS9slY", "title": "32EkIm2K", "updatedAt": "1978-02-21T00:00:00Z", "useCount": 58}, "namespace": "fCXJdQGB", "order": {"currency": {"currencyCode": "ZP2MikuS", "currencySymbol": "sVm0z1k6", "currencyType": "VIRTUAL", "decimals": 57, "namespace": "JmdsUC3D"}, "ext": {"wTLJ7J2h": {}, "Jz86Z4vn": {}, "63P51Kum": {}}, "free": false}, "source": "OTHER"}, "script": "2WKidduP", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'Q0rPf3Qb' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "eOWYKxOi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'V9gaoLVt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'IPPfccul' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "ZGY87mWS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'OUwEEHnh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '22' \
    --name 'cqL9p7ao' \
    --offset '75' \
    --tag '1Vf4g0Rb' \
    > test.out 2>&1
eval_tap $? 8 'QueryCampaigns' test.out

#- 9 CreateCampaign
# body param: body
echo '{"description": "vcI1Ez7t", "items": [{"extraSubscriptionDays": 77, "itemId": "5MnEEurA", "itemName": "AXQJRvHp", "quantity": 78}, {"extraSubscriptionDays": 34, "itemId": "AgExtBdC", "itemName": "xQm3KBez", "quantity": 80}, {"extraSubscriptionDays": 46, "itemId": "18jSdqUo", "itemName": "oRBKEBPE", "quantity": 42}], "maxRedeemCountPerCampaignPerUser": 22, "maxRedeemCountPerCode": 98, "maxRedeemCountPerCodePerUser": 46, "maxSaleCount": 10, "name": "xcy5m2pz", "redeemEnd": "1976-11-15T00:00:00Z", "redeemStart": "1992-10-12T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["zAqdUOog", "6cCDBxfi", "f20Ok4sa"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateCampaign' test.out

#- 10 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '3A8WNUWA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'GetCampaign' test.out

#- 11 UpdateCampaign
# body param: body
echo '{"description": "mUTZ4Fmu", "items": [{"extraSubscriptionDays": 37, "itemId": "zXUH9mG7", "itemName": "cKeNBChd", "quantity": 14}, {"extraSubscriptionDays": 32, "itemId": "gVWaYC8i", "itemName": "vhw4I7w6", "quantity": 56}, {"extraSubscriptionDays": 81, "itemId": "IrKWZx9c", "itemName": "wtLPprIB", "quantity": 57}], "maxRedeemCountPerCampaignPerUser": 81, "maxRedeemCountPerCode": 77, "maxRedeemCountPerCodePerUser": 57, "maxSaleCount": 39, "name": "vwO6ZDQR", "redeemEnd": "1975-12-13T00:00:00Z", "redeemStart": "1989-10-17T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["1Pe63D3q", "BDacuzYV", "z8houHy3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId '3qstxKaJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateCampaign' test.out

#- 12 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'aOTFthz9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'GetCampaignDynamic' test.out

#- 13 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'X4tSAsX5' \
    > test.out 2>&1
eval_tap $? 13 'GetRootCategories' test.out

#- 14 CreateCategory
# body param: body
echo '{"categoryPath": "6sATt4yX", "localizationDisplayNames": {"2PrK0sw2": "PRTfZM6e", "D92VZNTe": "yIdapHI6", "NkGBDdsj": "EnHfEDMS"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'TUx5xXtx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCategory' test.out

#- 15 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'TyiuzUH2' \
    > test.out 2>&1
eval_tap $? 15 'ListCategoriesBasic' test.out

#- 16 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'SJkVeUQo' \
    --namespace $AB_NAMESPACE \
    --storeId 'kFFx20Dz' \
    > test.out 2>&1
eval_tap $? 16 'GetCategory' test.out

#- 17 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"neUi2La8": "mZnFMteq", "wqoJ5DGK": "ChVSKtIN", "QD3rNrqq": "c169q4S2"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'REs3Vrj3' \
    --namespace $AB_NAMESPACE \
    --storeId 'lqmpDLCj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCategory' test.out

#- 18 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'ksrUthqe' \
    --namespace $AB_NAMESPACE \
    --storeId 'Mi7xNQ4M' \
    > test.out 2>&1
eval_tap $? 18 'DeleteCategory' test.out

#- 19 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'NVqiU4CQ' \
    --namespace $AB_NAMESPACE \
    --storeId 'WCqD9ynX' \
    > test.out 2>&1
eval_tap $? 19 'GetChildCategories' test.out

#- 20 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'QNFlHzM3' \
    --namespace $AB_NAMESPACE \
    --storeId 'GQFt4M2l' \
    > test.out 2>&1
eval_tap $? 20 'GetDescendantCategories' test.out

#- 21 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'EmPBp28h' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '45' \
    --code 'C9DEJZi4' \
    --limit '49' \
    --offset '66' \
    > test.out 2>&1
eval_tap $? 21 'QueryCodes' test.out

#- 22 CreateCodes
# body param: body
echo '{"quantity": 64}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'SD659FuD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'CreateCodes' test.out

#- 23 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId '2FFhPcpW' \
    --namespace $AB_NAMESPACE \
    --batchNo '57' \
    > test.out 2>&1
eval_tap $? 23 'Download' test.out

#- 24 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'gL35CrrV' \
    --namespace $AB_NAMESPACE \
    --batchNo '1' \
    > test.out 2>&1
eval_tap $? 24 'BulkDisableCodes' test.out

#- 25 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'oqHUBjfz' \
    --namespace $AB_NAMESPACE \
    --batchNo '40' \
    > test.out 2>&1
eval_tap $? 25 'BulkEnableCodes' test.out

#- 26 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'P3wEudDO' \
    --namespace $AB_NAMESPACE \
    --code 'QbXEf3oE' \
    --limit '79' \
    --offset '36' \
    --userId '6jylknMj' \
    > test.out 2>&1
eval_tap $? 26 'QueryRedeemHistory' test.out

#- 27 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code '3rZxXRzv' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 27 'GetCode' test.out

#- 28 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'gLElnelW' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 28 'DisableCode' test.out

#- 29 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'bBcNk0bq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'EnableCode' test.out

#- 30 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 30 'ListCurrencies' test.out

#- 31 CreateCurrency
# body param: body
echo '{"currencyCode": "DV7owTqe", "currencySymbol": "f2Da9Jb5", "currencyType": "VIRTUAL", "decimals": 41, "localizationDescriptions": {"9ozTtm4A": "Qh9QCchn", "PXLwh7CM": "hsv5Y9kk", "wSG2V2CF": "a6r16sPI"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'CreateCurrency' test.out

#- 32 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"oB2DY2A6": "BGwAnoSA", "v7n6aFTu": "yM6ArLvh", "8o1N8UM3": "f2KyV5xw"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'r1trNv8r' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'UpdateCurrency' test.out

#- 33 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'i0gvf5GR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 33 'DeleteCurrency' test.out

#- 34 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode '2xfJYmzS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'GetCurrencyConfig' test.out

#- 35 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'Z3JyAFF2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'GetCurrencySummary' test.out

#- 36 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetDLCItemConfig' test.out

#- 37 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "RUUsRqrA", "rewards": [{"currency": {"currencyCode": "P2MuCly9", "namespace": "2BqjXXYH"}, "item": {"itemId": "ir4dCUtJ", "itemSku": "NdLRL4en", "itemType": "8cTGpQgJ"}, "quantity": 20, "type": "ITEM"}, {"currency": {"currencyCode": "KxAP1RrM", "namespace": "DuW0RcRF"}, "item": {"itemId": "51FqFFBs", "itemSku": "pgAdnctJ", "itemType": "LGiZJImf"}, "quantity": 58, "type": "ITEM"}, {"currency": {"currencyCode": "j7q12Jgp", "namespace": "SOuQ2feJ"}, "item": {"itemId": "9zf2yxTj", "itemSku": "wlHXZBk1", "itemType": "F1Z1GzVA"}, "quantity": 86, "type": "ITEM"}]}, {"id": "c0ElE7kR", "rewards": [{"currency": {"currencyCode": "TCjbLQHG", "namespace": "eWRXU3LU"}, "item": {"itemId": "TWlqvS16", "itemSku": "gfumiJR8", "itemType": "pqCkJGzN"}, "quantity": 43, "type": "CURRENCY"}, {"currency": {"currencyCode": "ck0qziIv", "namespace": "kDpH4EX9"}, "item": {"itemId": "8FLEnVMC", "itemSku": "MMLSPE23", "itemType": "AIytPvNT"}, "quantity": 93, "type": "ITEM"}, {"currency": {"currencyCode": "qANysqTG", "namespace": "cB2bHjmM"}, "item": {"itemId": "iLUlTDyr", "itemSku": "CPZJUKiM", "itemType": "K5EbK2Ca"}, "quantity": 22, "type": "ITEM"}]}, {"id": "T7gc7uBd", "rewards": [{"currency": {"currencyCode": "tSxT12fL", "namespace": "R7GNkWiy"}, "item": {"itemId": "EL9dd3zx", "itemSku": "6oahd32Z", "itemType": "K0YMMFSE"}, "quantity": 76, "type": "ITEM"}, {"currency": {"currencyCode": "Jw8ghxrZ", "namespace": "pmGimRSW"}, "item": {"itemId": "dfFkK3Me", "itemSku": "O5UstjSX", "itemType": "0wVP8duN"}, "quantity": 51, "type": "CURRENCY"}, {"currency": {"currencyCode": "rXHiLKr8", "namespace": "XSade3UK"}, "item": {"itemId": "dgg1mUEg", "itemSku": "Sjf6BYCU", "itemType": "Jl0KCU3n"}, "quantity": 63, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateDLCItemConfig' test.out

#- 38 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteDLCItemConfig' test.out

#- 39 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'GetPlatformDLCConfig' test.out

#- 40 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"hiiHFXXE": "Xj0RNZbw", "qMAnBjIM": "autKP6kZ", "tYZetZzT": "XeTXoAyn"}}, {"platform": "PSN", "platformDlcIdMap": {"26lAkbj9": "jJ51SrSh", "NYGhpatk": "f6AKLUhK", "loHy8Sok": "DOhXcJ4s"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"MrO0P5Xd": "6iuIRJh5", "Lgo3jfsq": "TyOCRzg6", "wZjXYCIO": "2gngLFTo"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'UpdatePlatformDLCConfig' test.out

#- 41 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'DeletePlatformDLCConfig' test.out

#- 42 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'DLC' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName '1rCZhN6t' \
    --itemId '["WMPTUedf", "DTFBYAqL", "mlBvtcGw"]' \
    --limit '76' \
    --offset '5' \
    --userId 'KC3hLSyc' \
    > test.out 2>&1
eval_tap $? 42 'QueryEntitlements' test.out

#- 43 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'DJXHOhib' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetEntitlement' test.out

#- 44 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '0' \
    --offset '32' \
    --status 'FAIL' \
    --userId 'tQ8L0NHQ' \
    > test.out 2>&1
eval_tap $? 44 'QueryFulfillmentHistories' test.out

#- 45 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetAppleIAPConfig' test.out

#- 46 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "DwAUhFBB", "password": "UIjv9oO7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateAppleIAPConfig' test.out

#- 47 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteAppleIAPConfig' test.out

#- 48 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetEpicGamesIAPConfig' test.out

#- 49 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "Zn7aFHuX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateEpicGamesIAPConfig' test.out

#- 50 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteEpicGamesIAPConfig' test.out

#- 51 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetGoogleIAPConfig' test.out

#- 52 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "4WaEuH2y", "serviceAccountId": "vGEZq8er"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateGoogleIAPConfig' test.out

#- 53 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteGoogleIAPConfig' test.out

#- 54 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 54 'UpdateGoogleP12File' test.out

#- 55 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetIAPItemConfig' test.out

#- 56 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "pAf7qr8P", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"w6Zxd2LL": "p7TaMGOF", "iPw52sHF": "hX29vxWF", "gEdjhtot": "VrLvvAuL"}}, {"itemIdentity": "6UHArNa1", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"71FAr56p": "9obcgMFx", "fdjZnKRP": "PnY1q3pC", "5CoNuznB": "3wGM3VY5"}}, {"itemIdentity": "fcamCKP6", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"2YxyrCMf": "0chxCvca", "9HlD49zR": "SPBDBaKa", "0qAU6gf1": "KuartpVM"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 56 'UpdateIAPItemConfig' test.out

#- 57 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'DeleteIAPItemConfig' test.out

#- 58 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'GetPlayStationIAPConfig' test.out

#- 59 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "79FtNGBy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 59 'UpdatePlaystationIAPConfig' test.out

#- 60 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'DeletePlaystationIAPConfig' test.out

#- 61 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetStadiaIAPConfig' test.out

#- 62 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteStadiaIAPConfig' test.out

#- 63 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 63 'UpdateStadiaJsonConfigFile' test.out

#- 64 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetSteamIAPConfig' test.out

#- 65 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "7a9FCQIh", "publisherAuthenticationKey": "rm6HXPs7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdateSteamIAPConfig' test.out

#- 66 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeleteSteamIAPConfig' test.out

#- 67 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetTwitchIAPConfig' test.out

#- 68 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "gfy8m5ES", "clientSecret": "fSfU30tV", "organizationId": "etebchpX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdateTwitchIAPConfig' test.out

#- 69 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeleteTwitchIAPConfig' test.out

#- 70 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetXblIAPConfig' test.out

#- 71 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "EFPxZNiq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateXblIAPConfig' test.out

#- 72 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteXblAPConfig' test.out

#- 73 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'Ag53zmVr' \
    > test.out 2>&1
eval_tap $? 73 'UpdateXblBPCertFile' test.out

#- 74 SyncInGameItem
# body param: body
echo '{"categoryPath": "vXa2VHJ9", "targetItemId": "xat5BNrN", "targetNamespace": "r7RqfttZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '5pvzr6oc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'SyncInGameItem' test.out

#- 75 CreateItem
# body param: body
echo '{"appId": "TKBSQZjS", "appType": "SOFTWARE", "baseAppId": "fkwS8yWn", "boothName": "fjIp3Kdb", "categoryPath": "tVd96ksx", "clazz": "xZxOSMhG", "displayOrder": 28, "entitlementType": "CONSUMABLE", "ext": {"U5p35bCn": {}, "H3PJBQwG": {}, "9WLryRir": {}}, "features": ["Jpjp4W8f", "lgsVULVM", "ZuwOtn4m"], "images": [{"as": "TYZa1dG0", "caption": "95kzROqA", "height": 69, "imageUrl": "FJrAc3py", "smallImageUrl": "zcTCLoJP", "width": 75}, {"as": "JlcAgvQ0", "caption": "Ak1fJJHl", "height": 92, "imageUrl": "rPKvLBNX", "smallImageUrl": "CU0agdnA", "width": 7}, {"as": "QzTRmXqL", "caption": "TcmDNoY6", "height": 1, "imageUrl": "R9ybBKn8", "smallImageUrl": "w5IBqZsx", "width": 21}], "itemIds": ["j3bwCAEy", "tjGsMpmE", "Xy1OPMY2"], "itemQty": {"f1mdk8MZ": 34, "Qql2hC3m": 57, "Xdr3h2JD": 43}, "itemType": "CODE", "listable": false, "localizations": {"fCI1O4ps": {"description": "r1c7gX0N", "localExt": {"yBT2vym7": {}, "AejaVzpQ": {}, "X8tTiUyZ": {}}, "longDescription": "qs0JdcnT", "title": "MfpUa6cq"}, "KpYOiERU": {"description": "0GG1nKM7", "localExt": {"VmGiCANL": {}, "h61CFPEn": {}, "m2H1tbRi": {}}, "longDescription": "OgCpbVjJ", "title": "OfRHKMJp"}, "mdMosrqf": {"description": "MF1UIh17", "localExt": {"WzxLEPvs": {}, "Y80TOY4e": {}, "iOAkLmel": {}}, "longDescription": "OsnaDmoL", "title": "HCRt4GtU"}}, "maxCount": 36, "maxCountPerUser": 32, "name": "UhI3twIb", "optionBoxConfig": {"boxItems": [{"count": 54, "itemId": "wgX0SUKx", "itemSku": "URpDZs3D"}, {"count": 1, "itemId": "86XKl61b", "itemSku": "G1r9ytsb"}, {"count": 32, "itemId": "RPZ53Mkb", "itemSku": "ltg5MsgE"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 20, "fixedTrialCycles": 38, "graceDays": 76}, "regionData": {"CApsP5Nt": [{"currencyCode": "OfwIp9kY", "currencyNamespace": "5qxPRYCL", "currencyType": "REAL", "discountAmount": 68, "discountExpireAt": "1988-04-18T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1982-01-06T00:00:00Z", "discountedPrice": 37, "expireAt": "1976-10-18T00:00:00Z", "price": 34, "purchaseAt": "1971-09-14T00:00:00Z", "trialPrice": 18}, {"currencyCode": "FysGBPgX", "currencyNamespace": "3CGPhU62", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1999-04-08T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1972-04-23T00:00:00Z", "discountedPrice": 7, "expireAt": "1989-10-09T00:00:00Z", "price": 64, "purchaseAt": "1992-12-20T00:00:00Z", "trialPrice": 95}, {"currencyCode": "yf4dK4pf", "currencyNamespace": "Qb9KrilO", "currencyType": "VIRTUAL", "discountAmount": 8, "discountExpireAt": "1993-05-28T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1971-12-02T00:00:00Z", "discountedPrice": 49, "expireAt": "1979-05-07T00:00:00Z", "price": 29, "purchaseAt": "1994-01-01T00:00:00Z", "trialPrice": 97}], "XRnQnlN0": [{"currencyCode": "MwGAtzWU", "currencyNamespace": "hGXAcD7K", "currencyType": "VIRTUAL", "discountAmount": 33, "discountExpireAt": "1990-12-04T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1987-10-20T00:00:00Z", "discountedPrice": 26, "expireAt": "1987-07-14T00:00:00Z", "price": 83, "purchaseAt": "1979-05-16T00:00:00Z", "trialPrice": 95}, {"currencyCode": "CflcTXkp", "currencyNamespace": "bvTWHqKZ", "currencyType": "VIRTUAL", "discountAmount": 22, "discountExpireAt": "1973-10-23T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1978-09-30T00:00:00Z", "discountedPrice": 39, "expireAt": "1972-11-05T00:00:00Z", "price": 74, "purchaseAt": "1979-10-18T00:00:00Z", "trialPrice": 43}, {"currencyCode": "jKJ6qIBE", "currencyNamespace": "ugI53zV2", "currencyType": "VIRTUAL", "discountAmount": 60, "discountExpireAt": "1999-06-06T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1988-04-28T00:00:00Z", "discountedPrice": 80, "expireAt": "1979-02-04T00:00:00Z", "price": 60, "purchaseAt": "1989-09-26T00:00:00Z", "trialPrice": 28}], "hc6rwxQG": [{"currencyCode": "OiXjdWlS", "currencyNamespace": "CN3lA95e", "currencyType": "REAL", "discountAmount": 42, "discountExpireAt": "1975-06-15T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1971-11-17T00:00:00Z", "discountedPrice": 55, "expireAt": "1994-08-23T00:00:00Z", "price": 64, "purchaseAt": "1977-02-23T00:00:00Z", "trialPrice": 3}, {"currencyCode": "SsLMEkT5", "currencyNamespace": "7GAHyev1", "currencyType": "REAL", "discountAmount": 87, "discountExpireAt": "1978-09-14T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1994-05-12T00:00:00Z", "discountedPrice": 6, "expireAt": "1972-01-26T00:00:00Z", "price": 58, "purchaseAt": "1985-06-23T00:00:00Z", "trialPrice": 62}, {"currencyCode": "yGfadBnw", "currencyNamespace": "TZxhyJkb", "currencyType": "REAL", "discountAmount": 36, "discountExpireAt": "1984-10-04T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1980-03-02T00:00:00Z", "discountedPrice": 74, "expireAt": "1997-10-15T00:00:00Z", "price": 12, "purchaseAt": "1993-08-18T00:00:00Z", "trialPrice": 66}]}, "seasonType": "PASS", "sku": "kPqXpKZN", "stackable": true, "status": "ACTIVE", "tags": ["X1Zi0Eb5", "3Kl8KMNa", "sZhghEoU"], "targetCurrencyCode": "CDkXPByW", "targetNamespace": "ULGllnOy", "thumbnailUrl": "q29uCd7X", "useCount": 99}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'AXehWa1K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'CreateItem' test.out

#- 76 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '5JPMOjQS' \
    --appId 'AryFk7rv' \
    > test.out 2>&1
eval_tap $? 76 'GetItemByAppId' test.out

#- 77 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --availableDate 'XkuXCZYI' \
    --baseAppId 'xnacTf07' \
    --categoryPath '1SFMAtOU' \
    --features '5Urg4fSk' \
    --itemType 'COINS' \
    --limit '32' \
    --offset '32' \
    --region 'ZCxbBn2u' \
    --sortBy '["updatedAt:desc", "name:asc", "updatedAt"]' \
    --storeId 'WwTLJ9SD' \
    --tags 't0BOWpqz' \
    --targetNamespace '0DCIH1Uj' \
    > test.out 2>&1
eval_tap $? 77 'QueryItems' test.out

#- 78 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["LG6032RJ", "faeSi1cS", "eC6jXZ9z"]' \
    > test.out 2>&1
eval_tap $? 78 'ListBasicItemsByFeatures' test.out

#- 79 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'jQbWCa15' \
    --sku 'yWiPXtqx' \
    > test.out 2>&1
eval_tap $? 79 'GetItemBySku' test.out

#- 80 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language '8suB6Qb0' \
    --populateBundle 'false' \
    --region 'OLgp4g9P' \
    --storeId 'Qo5uuXMD' \
    --sku 'IdKesAoc' \
    > test.out 2>&1
eval_tap $? 80 'GetLocaleItemBySku' test.out

#- 81 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'JEj8Kjyn' \
    --sku 'FuPvutGR' \
    > test.out 2>&1
eval_tap $? 81 'GetItemIdBySku' test.out

#- 82 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["zc5vqODj", "Ko686erc", "HB7V2hoI"]' \
    --storeId '3sRpXLyj' \
    > test.out 2>&1
eval_tap $? 82 'GetBulkItemIdBySkus' test.out

#- 83 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'tpW9yTFy' \
    --region '25QxBRcC' \
    --storeId 'T3QfgwlU' \
    --itemIds 'AeHWSYel' \
    > test.out 2>&1
eval_tap $? 83 'BulkGetLocaleItems' test.out

#- 84 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'GetAvailablePredicateTypes' test.out

#- 85 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["aLwsLUge", "m0MwW8Rg", "e2Tu425I"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'vHTVLU2z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'ValidateItemPurchaseCondition' test.out

#- 86 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'INGAMEITEM' \
    --limit '11' \
    --offset '13' \
    --storeId 'ytTsVB5M' \
    --keyword 'yPxsIhOK' \
    --language 'wXNl57Qs' \
    > test.out 2>&1
eval_tap $? 86 'SearchItems' test.out

#- 87 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '46' \
    --offset '11' \
    --sortBy '["updatedAt:desc", "displayOrder"]' \
    --storeId 'vow0iAO8' \
    > test.out 2>&1
eval_tap $? 87 'QueryUncategorizedItems' test.out

#- 88 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId '5NwEqJSp' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'S4QMBnw7' \
    > test.out 2>&1
eval_tap $? 88 'GetItem' test.out

#- 89 UpdateItem
# body param: body
echo '{"appId": "Dmpu7NoU", "appType": "SOFTWARE", "baseAppId": "5K3SY26K", "boothName": "vDocsouH", "categoryPath": "E0JTuMSb", "clazz": "ygbhBv7a", "displayOrder": 35, "entitlementType": "CONSUMABLE", "ext": {"1lmFBfBY": {}, "nkTfHgfK": {}, "hkan8uSA": {}}, "features": ["nACJTsPe", "XUYMiJwi", "5WX7BlJQ"], "images": [{"as": "YYt1SYUQ", "caption": "tZPEn4xt", "height": 76, "imageUrl": "iCWL1R8X", "smallImageUrl": "0s8LAwIv", "width": 38}, {"as": "onOqZivO", "caption": "GiAH57F7", "height": 89, "imageUrl": "BKuSo5pw", "smallImageUrl": "iFAmDzcn", "width": 86}, {"as": "FWeffFat", "caption": "VZOaK6gc", "height": 73, "imageUrl": "pyGTHACc", "smallImageUrl": "QqUT4LMo", "width": 58}], "itemIds": ["yZ0GJ4m3", "uiPwBAZ7", "yuKpjbm4"], "itemQty": {"7dj1lP3j": 81, "xyCyGEQM": 86, "5bweAqOG": 15}, "itemType": "CODE", "listable": false, "localizations": {"d8M77kPn": {"description": "Ym41IMCr", "localExt": {"XXCp1QQk": {}, "3AeVi3CV": {}, "Dhtu9a1U": {}}, "longDescription": "fj9hPQ4V", "title": "QQAjMcGn"}, "k1ri90uK": {"description": "TUdUQEy7", "localExt": {"ScG5g5rj": {}, "NqRAKrC6": {}, "McMR5Boq": {}}, "longDescription": "ZerLjqWS", "title": "rS5IMonR"}, "uPgBiglU": {"description": "4EmIczeZ", "localExt": {"0oyhfH6C": {}, "6820STsg": {}, "H8Msyabn": {}}, "longDescription": "3rXGklbm", "title": "AinbOFkc"}}, "maxCount": 72, "maxCountPerUser": 25, "name": "b0LA9OJk", "optionBoxConfig": {"boxItems": [{"count": 13, "itemId": "54fQZXq2", "itemSku": "6jrPy6ez"}, {"count": 56, "itemId": "C2ehSZec", "itemSku": "rqUDR9vM"}, {"count": 83, "itemId": "TgfgZx3q", "itemSku": "0nZUcecq"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 56, "fixedTrialCycles": 12, "graceDays": 13}, "regionData": {"mPeOumEy": [{"currencyCode": "yWWcHrjz", "currencyNamespace": "TFHV1IC6", "currencyType": "VIRTUAL", "discountAmount": 23, "discountExpireAt": "1973-06-27T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1973-02-23T00:00:00Z", "discountedPrice": 53, "expireAt": "1995-11-25T00:00:00Z", "price": 4, "purchaseAt": "1997-04-12T00:00:00Z", "trialPrice": 75}, {"currencyCode": "2NMYuU1G", "currencyNamespace": "QkgchdvT", "currencyType": "REAL", "discountAmount": 62, "discountExpireAt": "1972-03-29T00:00:00Z", "discountPercentage": 23, "discountPurchaseAt": "1972-09-27T00:00:00Z", "discountedPrice": 26, "expireAt": "1990-06-17T00:00:00Z", "price": 96, "purchaseAt": "1971-08-12T00:00:00Z", "trialPrice": 29}, {"currencyCode": "RSCK3OUN", "currencyNamespace": "Cara5R6q", "currencyType": "REAL", "discountAmount": 81, "discountExpireAt": "1987-08-03T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1984-01-20T00:00:00Z", "discountedPrice": 3, "expireAt": "1990-08-05T00:00:00Z", "price": 70, "purchaseAt": "1980-04-02T00:00:00Z", "trialPrice": 48}], "2QRXk50V": [{"currencyCode": "8ihxo3DY", "currencyNamespace": "9KL6Ejlb", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1995-04-22T00:00:00Z", "discountPercentage": 19, "discountPurchaseAt": "1973-02-09T00:00:00Z", "discountedPrice": 52, "expireAt": "1982-05-25T00:00:00Z", "price": 2, "purchaseAt": "1975-08-24T00:00:00Z", "trialPrice": 8}, {"currencyCode": "JPPbesDc", "currencyNamespace": "DPhJqYp1", "currencyType": "REAL", "discountAmount": 45, "discountExpireAt": "1986-12-24T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1971-12-15T00:00:00Z", "discountedPrice": 72, "expireAt": "1990-04-06T00:00:00Z", "price": 57, "purchaseAt": "1992-06-15T00:00:00Z", "trialPrice": 16}, {"currencyCode": "CHkbySr4", "currencyNamespace": "neVvrQUI", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1987-05-26T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1981-06-17T00:00:00Z", "discountedPrice": 99, "expireAt": "1979-12-11T00:00:00Z", "price": 34, "purchaseAt": "1994-05-21T00:00:00Z", "trialPrice": 2}], "Ruhny7Mz": [{"currencyCode": "NciuDIpU", "currencyNamespace": "7kHmMOkQ", "currencyType": "VIRTUAL", "discountAmount": 77, "discountExpireAt": "1989-10-24T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1991-08-24T00:00:00Z", "discountedPrice": 34, "expireAt": "1999-08-08T00:00:00Z", "price": 1, "purchaseAt": "1991-11-02T00:00:00Z", "trialPrice": 57}, {"currencyCode": "iTKz8y2P", "currencyNamespace": "Osm2rkMV", "currencyType": "VIRTUAL", "discountAmount": 91, "discountExpireAt": "1993-06-18T00:00:00Z", "discountPercentage": 69, "discountPurchaseAt": "1977-12-26T00:00:00Z", "discountedPrice": 76, "expireAt": "1983-12-06T00:00:00Z", "price": 21, "purchaseAt": "1973-06-24T00:00:00Z", "trialPrice": 6}, {"currencyCode": "gOQEGelU", "currencyNamespace": "EPv7xnRN", "currencyType": "VIRTUAL", "discountAmount": 16, "discountExpireAt": "1998-02-28T00:00:00Z", "discountPercentage": 36, "discountPurchaseAt": "1996-11-29T00:00:00Z", "discountedPrice": 6, "expireAt": "1976-05-13T00:00:00Z", "price": 25, "purchaseAt": "1979-01-08T00:00:00Z", "trialPrice": 79}]}, "seasonType": "TIER", "sku": "ZLuAE3As", "stackable": false, "status": "INACTIVE", "tags": ["BB92dYu4", "ZRognq3j", "5ldT03vE"], "targetCurrencyCode": "oLSwWxkt", "targetNamespace": "nRW9s4Br", "thumbnailUrl": "1nTm90Xe", "useCount": 2}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'DMdEG2qI' \
    --namespace $AB_NAMESPACE \
    --storeId 'ziOFRKmZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateItem' test.out

#- 90 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'xJO55ULy' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId '7DtMQM5w' \
    > test.out 2>&1
eval_tap $? 90 'DeleteItem' test.out

#- 91 AcquireItem
# body param: body
echo '{"count": 36, "orderNo": "rYmfAgRV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'bwwSz3s8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'AcquireItem' test.out

#- 92 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'SBQSdnrV' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'zY8nTIt9' \
    > test.out 2>&1
eval_tap $? 92 'GetApp' test.out

#- 93 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "qpAHLxjV", "previewUrl": "Zu64PJ12", "thumbnailUrl": "o1zHG80K", "type": "video", "url": "bW2g0286", "videoSource": "vimeo"}, {"alt": "y0gF1cS9", "previewUrl": "yZTZF4gF", "thumbnailUrl": "2ROFy5oe", "type": "video", "url": "HN1sfRyU", "videoSource": "generic"}, {"alt": "2yUeHVU2", "previewUrl": "r72f2zGS", "thumbnailUrl": "cDAfIGdS", "type": "image", "url": "X7W76KN6", "videoSource": "youtube"}], "developer": "mgeq05hy", "forumUrl": "td0pScuk", "genres": ["Simulation", "Action", "Simulation"], "localizations": {"NNXVV6yp": {"announcement": "X5Z7BKL4", "slogan": "O71K7aj0"}, "YEj3DJtj": {"announcement": "hG9fM1x9", "slogan": "17SV2KFC"}, "vlg8vB36": {"announcement": "d1rcoeZ1", "slogan": "JNYe44Nm"}}, "platformRequirements": {"dGf0Vkw1": [{"additionals": "y2n2pIOK", "directXVersion": "Bt5aK7JA", "diskSpace": "BmB5HubM", "graphics": "4F77K6n3", "label": "m1xp3s6t", "osVersion": "5o3bcWYj", "processor": "WAKqo4bz", "ram": "QJXu7HkE", "soundCard": "7eS0bYf1"}, {"additionals": "p6YheFEW", "directXVersion": "IkkLLUBH", "diskSpace": "V2t3nLjr", "graphics": "SwedjJlB", "label": "IuGtZadY", "osVersion": "tDjxfIRI", "processor": "Tmbnkhdl", "ram": "nOAdxBN2", "soundCard": "sVwQf1IX"}, {"additionals": "0Op8Soet", "directXVersion": "O6NfNbxG", "diskSpace": "6ZlGOGoS", "graphics": "vOe74yrO", "label": "mW7a84Z6", "osVersion": "EbeY2hLg", "processor": "GRshzK7H", "ram": "gjTfP44T", "soundCard": "aU1PFzo2"}], "U3OZXgD8": [{"additionals": "7b17Cr3a", "directXVersion": "KTSMRqzK", "diskSpace": "UiTj5xdy", "graphics": "mSfuOIC4", "label": "dHXTZmBi", "osVersion": "lZxRT4mW", "processor": "0jpuBuxF", "ram": "ejR3lipm", "soundCard": "Kn7SVlL3"}, {"additionals": "OyqrqV0E", "directXVersion": "2MXmtLa3", "diskSpace": "gx55GGBX", "graphics": "0KwhiknE", "label": "DCDmKLF4", "osVersion": "yQXfyDJ5", "processor": "Qk6iZu1r", "ram": "sSjZqaVA", "soundCard": "Ng6fku6f"}, {"additionals": "4HQ74yo8", "directXVersion": "xMxj9UPT", "diskSpace": "7jNKGzxT", "graphics": "ekhIGwga", "label": "NdRvW2Yu", "osVersion": "98GjBBJl", "processor": "ieV6UxQE", "ram": "vP6OZVbW", "soundCard": "VY5rSQfq"}], "9OfiaWDg": [{"additionals": "udDBwROz", "directXVersion": "S6CgAGSv", "diskSpace": "9bSO1KFJ", "graphics": "iu5PFUyG", "label": "fXdYa2g5", "osVersion": "BCDxiME2", "processor": "B1hBzhkp", "ram": "2snHxxDN", "soundCard": "O4IA932B"}, {"additionals": "6ZXkxkGs", "directXVersion": "8IdIzuKB", "diskSpace": "ZtXVDOik", "graphics": "shKZ93tU", "label": "iG9ZMtBF", "osVersion": "ZfPvN7Zc", "processor": "F60HjAZu", "ram": "CEIExv8l", "soundCard": "94SnJ5gE"}, {"additionals": "cH5pCpTR", "directXVersion": "tedtzKat", "diskSpace": "HHToRb1q", "graphics": "3oGSDxIA", "label": "aQ5BBgWH", "osVersion": "RWNKlAks", "processor": "pcurzXbu", "ram": "AmOpAzL7", "soundCard": "Of3I8oKC"}]}, "platforms": ["Linux", "MacOS", "Linux"], "players": ["CrossPlatformMulti", "Coop", "Coop"], "primaryGenre": "FreeToPlay", "publisher": "Ro7pOVoj", "releaseDate": "1987-07-15T00:00:00Z", "websiteUrl": "x4BfUQkS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'd6h6KcnO' \
    --namespace $AB_NAMESPACE \
    --storeId 'OvQ9rKyc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'UpdateApp' test.out

#- 94 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId '9gR62B53' \
    --namespace $AB_NAMESPACE \
    --storeId 'yN06Pr5k' \
    > test.out 2>&1
eval_tap $? 94 'DisableItem' test.out

#- 95 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId '8KR3slSE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetItemDynamicData' test.out

#- 96 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'tY08KkGq' \
    --namespace $AB_NAMESPACE \
    --storeId 'P8S4AgVo' \
    > test.out 2>&1
eval_tap $? 96 'EnableItem' test.out

#- 97 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'Chf8TKOY' \
    --itemId 'Eg5m4OLW' \
    --namespace $AB_NAMESPACE \
    --storeId 'W5KySs9m' \
    > test.out 2>&1
eval_tap $? 97 'FeatureItem' test.out

#- 98 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature '8vcgTcSG' \
    --itemId 'J681toJL' \
    --namespace $AB_NAMESPACE \
    --storeId 'euOb0M4y' \
    > test.out 2>&1
eval_tap $? 98 'DefeatureItem' test.out

#- 99 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'ECh0YVOn' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'TTKriiCa' \
    --populateBundle 'true' \
    --region 'juul2woF' \
    --storeId 'rgxCHkWS' \
    > test.out 2>&1
eval_tap $? 99 'GetLocaleItem' test.out

#- 100 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 56, "comparison": "isGreaterThan", "name": "RU5wVYW8", "predicateType": "EntitlementPredicate", "value": "kZ0tTjGg", "values": ["gEvgZ4kA", "sUJeQWKJ", "p4AkaYk4"]}, {"anyOf": 34, "comparison": "isLessThanOrEqual", "name": "1BKpmD3Y", "predicateType": "EntitlementPredicate", "value": "dNDQdPqr", "values": ["6pVvHvwd", "42Xm3eh6", "wVwnzkc9"]}, {"anyOf": 76, "comparison": "isGreaterThanOrEqual", "name": "4i7B3SxX", "predicateType": "EntitlementPredicate", "value": "zxOb8419", "values": ["i2Z6psir", "bpjYsRBp", "luN6LRq0"]}]}, {"operator": "and", "predicates": [{"anyOf": 71, "comparison": "includes", "name": "gZbO4fkb", "predicateType": "SeasonTierPredicate", "value": "G8FVDD06", "values": ["1bER8Yqk", "P57wCRt9", "IGbAjqQQ"]}, {"anyOf": 81, "comparison": "isLessThanOrEqual", "name": "WhNdN3Pa", "predicateType": "SeasonPassPredicate", "value": "3bXTaX75", "values": ["uj0ZxELS", "5p1V3BPQ", "MjXlP4mH"]}, {"anyOf": 12, "comparison": "isNot", "name": "pLWvjGSx", "predicateType": "SeasonTierPredicate", "value": "m9tTMgUA", "values": ["EAUHy5Eu", "ib6IAfzR", "46OfCPHJ"]}]}, {"operator": "or", "predicates": [{"anyOf": 48, "comparison": "isGreaterThanOrEqual", "name": "u11FNvgb", "predicateType": "SeasonPassPredicate", "value": "fjrFh40Y", "values": ["jSBqf8IJ", "mBVHaSTv", "8iEatOob"]}, {"anyOf": 31, "comparison": "isLessThan", "name": "GXlP5iHz", "predicateType": "EntitlementPredicate", "value": "XjPYd3Ig", "values": ["1Bc16chE", "cc1EnT6e", "SmnQCt9D"]}, {"anyOf": 41, "comparison": "isLessThanOrEqual", "name": "3qDgHcRX", "predicateType": "SeasonTierPredicate", "value": "Hxba1grR", "values": ["KwUBsOFn", "fp1GGwl9", "UD46ZVKd"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId '0RqcV9j9' \
    --namespace $AB_NAMESPACE \
    --storeId '8Vcuuagt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateItemPurchaseCondition' test.out

#- 101 ReturnItem
# body param: body
echo '{"orderNo": "gYYErfE2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'UmXrlva0' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'ReturnItem' test.out

#- 102 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '94' \
    --name '8gmn49HA' \
    --offset '14' \
    --tag 'CUCHOVpK' \
    > test.out 2>&1
eval_tap $? 102 'QueryKeyGroups' test.out

#- 103 CreateKeyGroup
# body param: body
echo '{"description": "klPyuldT", "name": "MIFQvKxO", "status": "INACTIVE", "tags": ["PuuudDON", "eMDi7DZf", "qy4LejSX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateKeyGroup' test.out

#- 104 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'oj2BfzI1' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'GetKeyGroup' test.out

#- 105 UpdateKeyGroup
# body param: body
echo '{"description": "dYvYQxOy", "name": "zin4048T", "status": "INACTIVE", "tags": ["y1Vf1V4l", "UNPKIwQ9", "GvNDenmJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'lOfa0Ss8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'UpdateKeyGroup' test.out

#- 106 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'mbjJiTAM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'GetKeyGroupDynamic' test.out

#- 107 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'KdWeiYLN' \
    --namespace $AB_NAMESPACE \
    --limit '95' \
    --offset '46' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 107 'ListKeys' test.out

#- 108 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'kqZZPtww' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 108 'UploadKeys' test.out

#- 109 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime '5dFitJAS' \
    --limit '61' \
    --offset '58' \
    --orderNos '["GwJA8cr0", "2lsIk45x", "L6PwBgWd"]' \
    --sortBy 'vXWKgxhe' \
    --startTime 'ThktjwWA' \
    --status 'CLOSED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 109 'QueryOrders' test.out

#- 110 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'GetOrderStatistics' test.out

#- 111 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'fIGL9RfL' \
    > test.out 2>&1
eval_tap $? 111 'GetOrder' test.out

#- 112 RefundOrder
# body param: body
echo '{"description": "jyDRsvL1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'BkubiJdA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'RefundOrder' test.out

#- 113 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetPaymentCallbackConfig' test.out

#- 114 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "jCIwuNii", "privateKey": "zkvX5oSt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdatePaymentCallbackConfig' test.out

#- 115 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate '13Dz8BU4' \
    --externalId 'LJJNiEnN' \
    --limit '44' \
    --notificationSource 'STRIPE' \
    --notificationType 'TVJbieZp' \
    --offset '93' \
    --paymentOrderNo 'oRSeyYgs' \
    --startDate 'zreenqH4' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 115 'QueryPaymentNotifications' test.out

#- 116 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'CasVhaXo' \
    --limit '74' \
    --offset '18' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 116 'QueryPaymentOrders' test.out

#- 117 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "Re5mOzU1", "currencyNamespace": "fO9jBKgs", "customParameters": {"ghj4QNnr": {}, "Xe7PqfQ6": {}, "GV6H9WcA": {}}, "description": "897U5AYR", "extOrderNo": "AUqeAqkU", "extUserId": "jANJYw4u", "itemType": "SEASON", "language": "wiP_vDrd", "metadata": {"nu3LLhlz": "uF9L2OUu", "7LdFxDX0": "pYWxA1BY", "U32hwV8b": "DBjdQXVK"}, "notifyUrl": "cM0czlJ1", "omitNotification": true, "platform": "WQchu4Mz", "price": 98, "recurringPaymentOrderNo": "p0Rt7mMw", "region": "kRbJHY30", "returnUrl": "YFYjTt9f", "sandbox": true, "sku": "s5Rhs7CA", "subscriptionId": "7B5vXsyc", "targetNamespace": "Ig7O3p5i", "targetUserId": "QGOsu5Wg", "title": "E6xAjhFj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'CreatePaymentOrderByDedicated' test.out

#- 118 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'OLfApL7Z' \
    > test.out 2>&1
eval_tap $? 118 'ListExtOrderNoByExtTxId' test.out

#- 119 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '9JyGmRTb' \
    > test.out 2>&1
eval_tap $? 119 'GetPaymentOrder' test.out

#- 120 ChargePaymentOrder
# body param: body
echo '{"extTxId": "XxoIBMiS", "paymentMethod": "ERdMEsEg", "paymentProvider": "CHECKOUT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '00sHtcVZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'ChargePaymentOrder' test.out

#- 121 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "S2wwqEK8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'erJqf94y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundPaymentOrderByDedicated' test.out

#- 122 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 69, "currencyCode": "rZeQV11j", "notifyType": "REFUND", "paymentProvider": "ADYEN", "salesTax": 69, "vat": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'V12QNib1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'SimulatePaymentOrderNotification' test.out

#- 123 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'OygiiExK' \
    > test.out 2>&1
eval_tap $? 123 'GetPaymentOrderChargeStatus' test.out

#- 124 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 124 'GetPlatformWalletConfig' test.out

#- 125 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Nintendo", "Other", "System"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'UpdatePlatformWalletConfig' test.out

#- 126 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 126 'ResetPlatformWalletConfig' test.out

#- 127 CreateReward
# body param: body
echo '{"description": "VsUuslE6", "eventTopic": "6Ip9LeVB", "maxAwarded": 1, "maxAwardedPerUser": 1, "namespaceExpression": "vUEQN4ts", "rewardCode": "JX1pFBgg", "rewardConditions": [{"condition": "Kg4NHISF", "conditionName": "quVrcuD3", "eventName": "5GaiITwE", "rewardItems": [{"duration": 67, "itemId": "NYyDjiyG", "quantity": 68}, {"duration": 26, "itemId": "QugYiCoV", "quantity": 87}, {"duration": 26, "itemId": "VAj5bt7L", "quantity": 42}]}, {"condition": "2je0yI93", "conditionName": "peYJavr8", "eventName": "YYMf9eSr", "rewardItems": [{"duration": 9, "itemId": "x52mMLqO", "quantity": 9}, {"duration": 23, "itemId": "Loqp4QcZ", "quantity": 78}, {"duration": 16, "itemId": "vI9SaZmx", "quantity": 81}]}, {"condition": "X1tatltQ", "conditionName": "3KCxxedV", "eventName": "WhiC81Mn", "rewardItems": [{"duration": 3, "itemId": "ytvIkMeX", "quantity": 80}, {"duration": 84, "itemId": "j6KIXeZi", "quantity": 90}, {"duration": 88, "itemId": "sj9og329", "quantity": 76}]}], "userIdExpression": "fSaAbVRn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 127 'CreateReward' test.out

#- 128 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'NpahGKfV' \
    --limit '65' \
    --offset '40' \
    --sortBy '["rewardCode:asc", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 128 'QueryRewards' test.out

#- 129 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'ExportRewards' test.out

#- 130 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 130 'ImportRewards' test.out

#- 131 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'awnBq6D4' \
    > test.out 2>&1
eval_tap $? 131 'GetReward' test.out

#- 132 UpdateReward
# body param: body
echo '{"description": "yadtlTgo", "eventTopic": "1YIakcCf", "maxAwarded": 48, "maxAwardedPerUser": 33, "namespaceExpression": "5Ya0TKAz", "rewardCode": "fWh5JLBO", "rewardConditions": [{"condition": "8xku6QJY", "conditionName": "oYfuJ9vR", "eventName": "TDA5zbuB", "rewardItems": [{"duration": 57, "itemId": "H9QS2b31", "quantity": 14}, {"duration": 30, "itemId": "X4SYpVKf", "quantity": 45}, {"duration": 99, "itemId": "fbZZPUmd", "quantity": 68}]}, {"condition": "7LLkGboz", "conditionName": "wtNeW3OG", "eventName": "4dDL6rOz", "rewardItems": [{"duration": 87, "itemId": "KOC20yfu", "quantity": 24}, {"duration": 62, "itemId": "biIyP2ab", "quantity": 85}, {"duration": 95, "itemId": "9D46YjB3", "quantity": 22}]}, {"condition": "q06nxSsD", "conditionName": "EWTJ9csU", "eventName": "YtzRGuq2", "rewardItems": [{"duration": 80, "itemId": "bISp6TsA", "quantity": 59}, {"duration": 84, "itemId": "z6X8WTYl", "quantity": 91}, {"duration": 93, "itemId": "I8arkDJ7", "quantity": 21}]}], "userIdExpression": "3bQCfG8L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'GFNn4m6L' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'UpdateReward' test.out

#- 133 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'BdakP03u' \
    > test.out 2>&1
eval_tap $? 133 'DeleteReward' test.out

#- 134 CheckEventCondition
# body param: body
echo '{"payload": {"plP6RIfj": {}, "YBSLFViA": {}, "xkqRaoSr": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'g2FM5Hvd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CheckEventCondition' test.out

#- 135 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "3Ht90PZ7", "userId": "oyWg2lcN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'JOzPFVDf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'DeleteRewardConditionRecord' test.out

#- 136 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'ListStores' test.out

#- 137 CreateStore
# body param: body
echo '{"defaultLanguage": "DLJS9rbK", "defaultRegion": "huBzbDFG", "description": "NBJJTNWi", "supportedLanguages": ["N4BzVNTt", "AbCBx4ha", "3Ep0QWjO"], "supportedRegions": ["sDQaZqSB", "m6XLIIAs", "6pcLPPSO"], "title": "EMyHPoWp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'CreateStore' test.out

#- 138 ImportStore
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'CAgxdQwW' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 138 'ImportStore' test.out

#- 139 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'GetPublishedStore' test.out

#- 140 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'DeletePublishedStore' test.out

#- 141 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 141 'GetPublishedStoreBackup' test.out

#- 142 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'RollbackPublishedStore' test.out

#- 143 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'a5ceobyh' \
    > test.out 2>&1
eval_tap $? 143 'GetStore' test.out

#- 144 UpdateStore
# body param: body
echo '{"defaultLanguage": "aDxN4nKX", "defaultRegion": "oWstlQ95", "description": "HAwJMoYg", "supportedLanguages": ["B5U3h9bZ", "WSu05FGy", "yWLOiG7E"], "supportedRegions": ["rjYKxLtf", "Pbia0ikq", "l3xUNzCE"], "title": "HxSAx4Gc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'Jbuy9mFc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateStore' test.out

#- 145 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId '8H3YIXsG' \
    > test.out 2>&1
eval_tap $? 145 'DeleteStore' test.out

#- 146 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId '6NgKsJCy' \
    --action 'UPDATE' \
    --itemSku '1TghjJlw' \
    --itemType 'CODE' \
    --limit '60' \
    --offset '91' \
    --selected 'false' \
    --sortBy '["createdAt:asc", "createdAt:desc", "updatedAt"]' \
    --status 'PUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'gzmpdaAj' \
    --updatedAtStart 'FAYXFRHX' \
    > test.out 2>&1
eval_tap $? 146 'QueryChanges' test.out

#- 147 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'HiO2Qj2z' \
    > test.out 2>&1
eval_tap $? 147 'PublishAll' test.out

#- 148 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'l5AJb1Yr' \
    > test.out 2>&1
eval_tap $? 148 'PublishSelected' test.out

#- 149 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'VJcQONh2' \
    > test.out 2>&1
eval_tap $? 149 'SelectAllRecords' test.out

#- 150 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'QhdbSDTp' \
    --action 'CREATE' \
    --itemSku 'j5LoDtGy' \
    --itemType 'BUNDLE' \
    --type 'STORE' \
    --updatedAtEnd 'bHDLbUkR' \
    --updatedAtStart 'zDELeqD1' \
    > test.out 2>&1
eval_tap $? 150 'GetStatistic' test.out

#- 151 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'UlwsL3FQ' \
    > test.out 2>&1
eval_tap $? 151 'UnselectAllRecords' test.out

#- 152 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'ZqnCbcVx' \
    --namespace $AB_NAMESPACE \
    --storeId 'f3FsuscO' \
    > test.out 2>&1
eval_tap $? 152 'SelectRecord' test.out

#- 153 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'kgN0rY7l' \
    --namespace $AB_NAMESPACE \
    --storeId 'e9WJZG60' \
    > test.out 2>&1
eval_tap $? 153 'UnselectRecord' test.out

#- 154 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId '9damLIMW' \
    --targetStoreId 'biZe8nKJ' \
    > test.out 2>&1
eval_tap $? 154 'CloneStore' test.out

#- 155 ExportStore
$CLI_EXE \
    --sn platform \
    --op ExportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ozIADRCD' \
    > test.out 2>&1
eval_tap $? 155 'ExportStore' test.out

#- 156 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'r9lVGqM5' \
    --limit '41' \
    --offset '7' \
    --sku '6ivGQ7Pr' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    --userId 'sjQrShB1' \
    > test.out 2>&1
eval_tap $? 156 'QuerySubscriptions' test.out

#- 157 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'DnDquWUs' \
    > test.out 2>&1
eval_tap $? 157 'RecurringChargeSubscription' test.out

#- 158 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'NVKUBqjM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 158 'GetTicketDynamic' test.out

#- 159 DecreaseTicketSale
# body param: body
echo '{"orderNo": "c9CaNH6t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName '40TgWumj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'DecreaseTicketSale' test.out

#- 160 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'GWDT1GMJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 160 'GetTicketBoothID' test.out

#- 161 IncreaseTicketSale
# body param: body
echo '{"count": 26, "orderNo": "nVr9P0Yg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '5uY2yfAb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'IncreaseTicketSale' test.out

#- 162 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "4PFMu0pR", "value": 38}, {"id": "LMAH188g", "value": 46}, {"id": "8714Sqjg", "value": 100}], "steamUserId": "fpfUV5eV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'pZyKERv9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UnlockSteamUserAchievement' test.out

#- 163 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'tTJvArb5' \
    --xboxUserId 'j2FtgJ5j' \
    > test.out 2>&1
eval_tap $? 163 'GetXblUserAchievements' test.out

#- 164 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "WHIsm4yP", "percentComplete": 36}, {"id": "I39cPs0g", "percentComplete": 58}, {"id": "7px8vkpR", "percentComplete": 10}], "serviceConfigId": "nbhLJFyZ", "titleId": "rnYAqU94", "xboxUserId": "LpuIEvEI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'MG92SVuK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'UpdateXblUserAchievement' test.out

#- 165 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'RrRTrlSl' \
    > test.out 2>&1
eval_tap $? 165 'AnonymizeCampaign' test.out

#- 166 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'nDOrwl6m' \
    > test.out 2>&1
eval_tap $? 166 'AnonymizeEntitlement' test.out

#- 167 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'EESUqG6Z' \
    > test.out 2>&1
eval_tap $? 167 'AnonymizeFulfillment' test.out

#- 168 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'MPxGrvcY' \
    > test.out 2>&1
eval_tap $? 168 'AnonymizeIntegration' test.out

#- 169 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'KYNFtZSY' \
    > test.out 2>&1
eval_tap $? 169 'AnonymizeOrder' test.out

#- 170 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'jbcO6nEW' \
    > test.out 2>&1
eval_tap $? 170 'AnonymizePayment' test.out

#- 171 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'wMNCO7KX' \
    > test.out 2>&1
eval_tap $? 171 'AnonymizeSubscription' test.out

#- 172 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'VwVMiwGS' \
    > test.out 2>&1
eval_tap $? 172 'AnonymizeWallet' test.out

#- 173 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '3s5jMY6O' \
    --activeOnly 'true' \
    --appType 'DLC' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'MNqwCsfN' \
    --features '["JbIaH6L3", "e05vW0qz", "Vualk3lD"]' \
    --itemId '["tGFY8MXP", "POGUh1y0", "2FYoGyCr"]' \
    --limit '51' \
    --offset '29' \
    > test.out 2>&1
eval_tap $? 173 'QueryUserEntitlements' test.out

#- 174 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1983-07-04T00:00:00Z", "grantedCode": "uHzbRirt", "itemId": "GYK7Phs0", "itemNamespace": "6K39W6CF", "language": "fLV", "quantity": 13, "region": "0qJMaQoO", "source": "REDEEM_CODE", "startDate": "1978-03-01T00:00:00Z", "storeId": "1SfJP2lF"}, {"endDate": "1978-10-16T00:00:00Z", "grantedCode": "21YV9UuA", "itemId": "sOrWwnih", "itemNamespace": "Z9TCVIR7", "language": "gVjR_tUvy-lJ", "quantity": 94, "region": "oTz02HTv", "source": "REWARD", "startDate": "1998-05-04T00:00:00Z", "storeId": "ZfZ1DMTw"}, {"endDate": "1980-11-21T00:00:00Z", "grantedCode": "fEAIzbPZ", "itemId": "QrkqQXEg", "itemNamespace": "JidvVjf5", "language": "WLed-BglA", "quantity": 66, "region": "sME1Mxgv", "source": "REDEEM_CODE", "startDate": "1982-01-09T00:00:00Z", "storeId": "5G2W8pLh"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '6PhvEMjl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'GrantUserEntitlement' test.out

#- 175 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'pvJXlXp8' \
    --activeOnly 'false' \
    --appId '1S8cmXZm' \
    > test.out 2>&1
eval_tap $? 175 'GetUserAppEntitlementByAppId' test.out

#- 176 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '4ibieCRb' \
    --activeOnly 'false' \
    --limit '21' \
    --offset '5' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 176 'QueryUserEntitlementsByAppType' test.out

#- 177 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'PoICIqI7' \
    --activeOnly 'true' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'Cc7SGUpx' \
    > test.out 2>&1
eval_tap $? 177 'GetUserEntitlementByItemId' test.out

#- 178 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'cf2lSgYt' \
    --activeOnly 'false' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'Fm8bOwKt' \
    > test.out 2>&1
eval_tap $? 178 'GetUserEntitlementBySku' test.out

#- 179 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'OH4lguDX' \
    --appIds '["6Z9rzCqf", "gmy6ol8n", "gQYutKnN"]' \
    --itemIds '["yMNnJ3M9", "KEG4Nv7E", "z6EJSMLF"]' \
    --skus '["6kFZjBD7", "WM8of6Pm", "icoRzn3Y"]' \
    > test.out 2>&1
eval_tap $? 179 'ExistsAnyUserActiveEntitlement' test.out

#- 180 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'mx2HSob0' \
    --itemIds '["WIbQEdDP", "PUpIbXIV", "9XIuerZG"]' \
    > test.out 2>&1
eval_tap $? 180 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 181 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'M9rAqIr3' \
    --appId '7kBZgLJ4' \
    > test.out 2>&1
eval_tap $? 181 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 182 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'VPjT6gWU' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'HI8hrVK5' \
    > test.out 2>&1
eval_tap $? 182 'GetUserEntitlementOwnershipByItemId' test.out

#- 183 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'jecS0ZYG' \
    --ids '["l6pTBqDy", "Baeko5WP", "xwMKyRBz"]' \
    > test.out 2>&1
eval_tap $? 183 'GetUserEntitlementOwnershipByItemIds' test.out

#- 184 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ARKGeTWu' \
    --entitlementClazz 'CODE' \
    --sku 'izmNncOs' \
    > test.out 2>&1
eval_tap $? 184 'GetUserEntitlementOwnershipBySku' test.out

#- 185 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '0ftw9dBp' \
    --entitlementIds 'Cl97Qk2p' \
    > test.out 2>&1
eval_tap $? 185 'RevokeUserEntitlements' test.out

#- 186 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId '9lbIUkiG' \
    --namespace $AB_NAMESPACE \
    --userId 'vHJubQFU' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlement' test.out

#- 187 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1989-04-21T00:00:00Z", "nullFieldList": ["8sJ6dNlq", "rq4yw8mb", "tz8ICVsC"], "startDate": "1982-04-03T00:00:00Z", "status": "ACTIVE", "useCount": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'Qo4KPlHC' \
    --namespace $AB_NAMESPACE \
    --userId 'Azj4hjjK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'UpdateUserEntitlement' test.out

#- 188 ConsumeUserEntitlement
# body param: body
echo '{"options": ["ruDxqsrY", "FnG1y02A", "FxHWgzbv"], "useCount": 96}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'sAE4Nuez' \
    --namespace $AB_NAMESPACE \
    --userId 'F75jlIN2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'ConsumeUserEntitlement' test.out

#- 189 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId '0BgbiwBR' \
    --namespace $AB_NAMESPACE \
    --userId 'IMIZ52vP' \
    > test.out 2>&1
eval_tap $? 189 'DisableUserEntitlement' test.out

#- 190 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'OzlNCCnd' \
    --namespace $AB_NAMESPACE \
    --userId 'C3lBE2LD' \
    > test.out 2>&1
eval_tap $? 190 'EnableUserEntitlement' test.out

#- 191 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'BEDOB9sq' \
    --namespace $AB_NAMESPACE \
    --userId 'XBgtdXc4' \
    > test.out 2>&1
eval_tap $? 191 'GetUserEntitlementHistories' test.out

#- 192 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'Kii08F3E' \
    --namespace $AB_NAMESPACE \
    --userId 'zcYKRNDN' \
    > test.out 2>&1
eval_tap $? 192 'RevokeUserEntitlement' test.out

#- 193 FulfillItem
# body param: body
echo '{"duration": 32, "endDate": "1986-08-23T00:00:00Z", "itemId": "wS49f7uT", "itemSku": "bLtB15SM", "language": "FHeVqm8D", "order": {"currency": {"currencyCode": "UZ517VtV", "currencySymbol": "PpLGDKAx", "currencyType": "REAL", "decimals": 48, "namespace": "dQpvzn8i"}, "ext": {"TYQVSwt7": {}, "ZXK5aFXz": {}, "bakou3F4": {}}, "free": false}, "orderNo": "PlQy8NsK", "origin": "Nintendo", "quantity": 82, "region": "ocA8HIIt", "source": "REWARD", "startDate": "1981-09-18T00:00:00Z", "storeId": "o8H4gQ5N"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId '0SNXQV4N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'FulfillItem' test.out

#- 194 RedeemCode
# body param: body
echo '{"code": "f7ydr4YD", "language": "ckao-YGjk", "region": "2STFWQCg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'phsvDdhx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'RedeemCode' test.out

#- 195 FulfillRewards
# body param: body
echo '{"origin": "IOS", "rewards": [{"currency": {"currencyCode": "scqoYXeO", "namespace": "QoSUnJLr"}, "item": {"itemId": "7TfV4ezi", "itemSku": "dCkdfUzB", "itemType": "2dglznQQ"}, "quantity": 98, "type": "CURRENCY"}, {"currency": {"currencyCode": "u6yPzryl", "namespace": "lF1cguDR"}, "item": {"itemId": "0nrREmnq", "itemSku": "M2BGdtJU", "itemType": "JU1r4Klx"}, "quantity": 37, "type": "ITEM"}, {"currency": {"currencyCode": "5kc8rWDR", "namespace": "Ln5NhfSZ"}, "item": {"itemId": "Ae0vEsXG", "itemSku": "w6RDhZvV", "itemType": "OFtLSP0B"}, "quantity": 64, "type": "CURRENCY"}], "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'C9O3S8jn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'FulfillRewards' test.out

#- 196 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'RJNv9Gqd' \
    --endTime '9sKTHg0F' \
    --limit '3' \
    --offset '3' \
    --productId 'nmG5OTEO' \
    --startTime 'wfpsTy3b' \
    --status 'VERIFIED' \
    --type 'STADIA' \
    > test.out 2>&1
eval_tap $? 196 'QueryUserIAPOrders' test.out

#- 197 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'MVysQrZG' \
    > test.out 2>&1
eval_tap $? 197 'QueryAllUserIAPOrders' test.out

#- 198 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "JAlo", "productId": "sJpk8jQp", "region": "zMY21uma", "type": "STADIA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'wyqjih3v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'MockFulfillIAPItem' test.out

#- 199 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'pRFClLJ0' \
    --itemId '66iRqoiD' \
    --limit '55' \
    --offset '36' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 199 'QueryUserOrders' test.out

#- 200 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "050XkTo1", "currencyNamespace": "lYeVqqmp", "discountedPrice": 100, "ext": {"yuuWbTOS": {}, "MK3Myiq7": {}, "ACv4HvBQ": {}}, "itemId": "IGY6Zsry", "language": "KepT2iu6", "options": {"skipPriceValidation": true}, "platform": "Steam", "price": 14, "quantity": 61, "region": "gFkWOpOp", "returnUrl": "p7tWl3Qp", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'bxw4KxWp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'AdminCreateUserOrder' test.out

#- 201 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'XxSjz04K' \
    --itemId 'ZD2yvRxP' \
    > test.out 2>&1
eval_tap $? 201 'CountOfPurchasedItem' test.out

#- 202 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'eAbM8aqc' \
    --userId 'klNm0tf0' \
    > test.out 2>&1
eval_tap $? 202 'GetUserOrder' test.out

#- 203 UpdateUserOrderStatus
# body param: body
echo '{"status": "DELETED", "statusReason": "nnlmnOkh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'GK00LgK2' \
    --userId 'cQhC7Zqk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'UpdateUserOrderStatus' test.out

#- 204 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'U9Uc42CL' \
    --userId '02OzL6dJ' \
    > test.out 2>&1
eval_tap $? 204 'FulfillUserOrder' test.out

#- 205 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'kXtL9QNJ' \
    --userId 'd5Q4rqMD' \
    > test.out 2>&1
eval_tap $? 205 'GetUserOrderGrant' test.out

#- 206 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'P7FSVY94' \
    --userId '2n13khpZ' \
    > test.out 2>&1
eval_tap $? 206 'GetUserOrderHistories' test.out

#- 207 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "hbEJqPAJ"}, "authorisedTime": "1973-03-11T00:00:00Z", "chargebackReversedTime": "1986-06-26T00:00:00Z", "chargebackTime": "1984-08-28T00:00:00Z", "chargedTime": "1977-09-19T00:00:00Z", "createdTime": "1981-03-26T00:00:00Z", "currency": {"currencyCode": "uiSqgFnr", "currencySymbol": "DSDmrHFo", "currencyType": "REAL", "decimals": 21, "namespace": "zx31qWlt"}, "customParameters": {"kmrcRyTS": {}, "eFxzauRr": {}, "3PZSuJTu": {}}, "extOrderNo": "ruQiztPb", "extTxId": "uHjZqa94", "extUserId": "sbVd2yR2", "issuedAt": "1991-01-06T00:00:00Z", "metadata": {"kV5nqndd": "OD5L2ugB", "pfNbGW2x": "YlGMDJVK", "TIYlpvaB": "ktmwENU3"}, "namespace": "FJ1qY4Xw", "nonceStr": "BJPb83s6", "paymentMethod": "DfIjBz6A", "paymentMethodFee": 81, "paymentOrderNo": "9TxFeO2x", "paymentProvider": "ALIPAY", "paymentProviderFee": 59, "paymentStationUrl": "L0oe5GFZ", "price": 92, "refundedTime": "1972-02-24T00:00:00Z", "salesTax": 34, "sandbox": true, "sku": "cks9hxzD", "status": "CHARGED", "statusReason": "QMaShIYL", "subscriptionId": "fCQPBRdq", "subtotalPrice": 40, "targetNamespace": "QTSPHZon", "targetUserId": "1MEEVQMP", "tax": 40, "totalPrice": 24, "totalTax": 23, "txEndTime": "1972-04-23T00:00:00Z", "type": "fr6KQWFp", "userId": "VJaprVtE", "vat": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'LvBTvyb8' \
    --userId 'DyRAecvn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'ProcessUserOrderNotification' test.out

#- 208 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'Mq8Fjqj9' \
    --userId '9M293xcA' \
    > test.out 2>&1
eval_tap $? 208 'DownloadUserOrderReceipt' test.out

#- 209 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "5GV1c2aR", "currencyNamespace": "6ryfjYz8", "customParameters": {"7ZcpPT6t": {}, "M0FVkJVD": {}, "hlfoID1o": {}}, "description": "VHFR6cri", "extOrderNo": "wJSo2zYX", "extUserId": "CFfBSFZD", "itemType": "SEASON", "language": "sEmf_KKGg_591", "metadata": {"mAQkyLAy": "JnPdaa9j", "ribYlgSU": "DaGkxkBH", "sJpi9DFG": "oRP84khk"}, "notifyUrl": "Z6lc3kOz", "omitNotification": false, "platform": "ZcjwOh6S", "price": 58, "recurringPaymentOrderNo": "g6ro4S5T", "region": "tkPAO2lx", "returnUrl": "L2bfTXib", "sandbox": false, "sku": "ZUc8Yqrb", "subscriptionId": "jel7QzyQ", "title": "sm3sK0Cj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'kQDj1P2i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'CreateUserPaymentOrder' test.out

#- 210 RefundUserPaymentOrder
# body param: body
echo '{"description": "lKZlARXL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'bIYU3fnF' \
    --userId 'rwY2ozjq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'RefundUserPaymentOrder' test.out

#- 211 ApplyUserRedemption
# body param: body
echo '{"code": "78ZqBjCR", "orderNo": "blyk5Yi1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'DvuPNqWl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'ApplyUserRedemption' test.out

#- 212 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'crQBLMAY' \
    --chargeStatus 'NEVER' \
    --itemId '1aABPKVo' \
    --limit '64' \
    --offset '58' \
    --sku 'ky300PUq' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 212 'QueryUserSubscriptions' test.out

#- 213 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'NaNrwpdj' \
    --excludeSystem 'false' \
    --limit '10' \
    --offset '58' \
    --subscriptionId 'VsNlFYYE' \
    > test.out 2>&1
eval_tap $? 213 'GetUserSubscriptionActivities' test.out

#- 214 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 65, "itemId": "t2nnM7IE", "language": "bMFqPihP", "reason": "YcFTe88q", "region": "YUNw9TAx", "source": "P30c67m0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '1MEFOL61' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'PlatformSubscribeSubscription' test.out

#- 215 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'l8RrQfz8' \
    --itemId '4OATWpjW' \
    > test.out 2>&1
eval_tap $? 215 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 216 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'H1IPxKZa' \
    --userId 'ipyVhozT' \
    > test.out 2>&1
eval_tap $? 216 'GetUserSubscription' test.out

#- 217 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zCOwXInc' \
    --userId 'R6V45Oia' \
    > test.out 2>&1
eval_tap $? 217 'DeleteUserSubscription' test.out

#- 218 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "MKY0p976"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zKwJ4Qu7' \
    --userId 'PekSxmKH' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'CancelSubscription' test.out

#- 219 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 2, "reason": "pzwZACyu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'pH5ZFxcV' \
    --userId '9QkZnXoX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'GrantDaysToSubscription' test.out

#- 220 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '61VnJqCy' \
    --userId 'l1xStkzB' \
    --excludeFree 'false' \
    --limit '3' \
    --offset '45' \
    > test.out 2>&1
eval_tap $? 220 'GetUserSubscriptionBillingHistories' test.out

#- 221 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "xB7V9qLE"}, "authorisedTime": "1979-04-14T00:00:00Z", "chargebackReversedTime": "1996-10-24T00:00:00Z", "chargebackTime": "1977-02-18T00:00:00Z", "chargedTime": "1979-08-07T00:00:00Z", "createdTime": "1991-08-18T00:00:00Z", "currency": {"currencyCode": "6HcZ75C3", "currencySymbol": "yRWDMhzD", "currencyType": "REAL", "decimals": 15, "namespace": "b4xbSCHs"}, "customParameters": {"qwKNbWsj": {}, "NhlOzLsr": {}, "5tHPEKhx": {}}, "extOrderNo": "UpjDahOM", "extTxId": "9mvLHoML", "extUserId": "whKZlzhY", "issuedAt": "1984-07-16T00:00:00Z", "metadata": {"gI5xa88x": "JKwYbX8J", "72Uo96Om": "6D45mwlf", "yZCiCGUh": "cygGWtck"}, "namespace": "fAiTMaW1", "nonceStr": "LVaxldio", "paymentMethod": "wYMHByQf", "paymentMethodFee": 24, "paymentOrderNo": "hUhBKS7J", "paymentProvider": "WXPAY", "paymentProviderFee": 61, "paymentStationUrl": "PTGwkH0H", "price": 15, "refundedTime": "1989-01-03T00:00:00Z", "salesTax": 53, "sandbox": true, "sku": "SsQZoRvx", "status": "AUTHORISE_FAILED", "statusReason": "lBucG4ZX", "subscriptionId": "zbfzoD64", "subtotalPrice": 71, "targetNamespace": "eJb8Ke3o", "targetUserId": "aM78F8Nu", "tax": 37, "totalPrice": 15, "totalTax": 0, "txEndTime": "1980-01-21T00:00:00Z", "type": "shRhd4Fl", "userId": "AuoVbixl", "vat": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'xQeFdqOI' \
    --userId '5oa1xBzL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'ProcessUserSubscriptionNotification' test.out

#- 222 AcquireUserTicket
# body param: body
echo '{"count": 3, "orderNo": "IGb3JM0n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'Ditkcl8u' \
    --namespace $AB_NAMESPACE \
    --userId 'WpHJpoo7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'AcquireUserTicket' test.out

#- 223 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'XkW3qtYg' \
    > test.out 2>&1
eval_tap $? 223 'QueryUserCurrencyWallets' test.out

#- 224 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode '1JpyVS4c' \
    --namespace $AB_NAMESPACE \
    --userId 'ySLipLMg' \
    --limit '1' \
    --offset '2' \
    > test.out 2>&1
eval_tap $? 224 'ListUserCurrencyTransactions' test.out

#- 225 CheckWallet
eval_tap 0 225 'CheckWallet # SKIP deprecated' test.out

#- 226 CreditUserWallet
# body param: body
echo '{"amount": 86, "expireAt": "1988-11-11T00:00:00Z", "origin": "Epic", "reason": "sylLmC39", "source": "IAP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '8YTMQ5wf' \
    --namespace $AB_NAMESPACE \
    --userId 'wowF9Yvb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'CreditUserWallet' test.out

#- 227 PayWithUserWallet
# body param: body
echo '{"amount": 82, "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'gHYHcxPF' \
    --namespace $AB_NAMESPACE \
    --userId 'MPbAgKp3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'PayWithUserWallet' test.out

#- 228 GetUserWallet
eval_tap 0 228 'GetUserWallet # SKIP deprecated' test.out

#- 229 DebitUserWallet
eval_tap 0 229 'DebitUserWallet # SKIP deprecated' test.out

#- 230 DisableUserWallet
eval_tap 0 230 'DisableUserWallet # SKIP deprecated' test.out

#- 231 EnableUserWallet
eval_tap 0 231 'EnableUserWallet # SKIP deprecated' test.out

#- 232 ListUserWalletTransactions
eval_tap 0 232 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 233 QueryWallets
eval_tap 0 233 'QueryWallets # SKIP deprecated' test.out

#- 234 GetWallet
eval_tap 0 234 'GetWallet # SKIP deprecated' test.out

#- 235 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'JxxOyXE7' \
    --end 'L6vywbGN' \
    --start 'MDB9fMZF' \
    > test.out 2>&1
eval_tap $? 235 'SyncOrders' test.out

#- 236 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["XRnBAZ1T", "2zTKXkPH", "1a1oOOPJ"], "apiKey": "4LQHUJBF", "authoriseAsCapture": true, "blockedPaymentMethods": ["PtsaD7Ro", "2pLUSEtM", "m2HLg8yx"], "clientKey": "4bd7Awkj", "dropInSettings": "8OHqajkp", "liveEndpointUrlPrefix": "jEGCWyuT", "merchantAccount": "Kcrdfg8v", "notificationHmacKey": "nKHBJk60", "notificationPassword": "6sArZtAz", "notificationUsername": "C2WcEHZx", "returnUrl": "Llwpozty", "settings": "rWzV2kGT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'TestAdyenConfig' test.out

#- 237 TestAliPayConfig
# body param: body
echo '{"appId": "HkPIEhkn", "privateKey": "cRlrFxFS", "publicKey": "0JmznRDP", "returnUrl": "o18cbvm0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'TestAliPayConfig' test.out

#- 238 TestCheckoutConfig
# body param: body
echo '{"publicKey": "WS7mSTHI", "secretKey": "H8ZbZuBI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'TestCheckoutConfig' test.out

#- 239 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'T2HU8IWb' \
    --region 'Qy6X5z9Q' \
    > test.out 2>&1
eval_tap $? 239 'DebugMatchedPaymentMerchantConfig' test.out

#- 240 TestPayPalConfig
# body param: body
echo '{"clientID": "JTTUDHmd", "clientSecret": "U7efhhTQ", "returnUrl": "jO4cdJMe", "webHookId": "MqYQEQVv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'TestPayPalConfig' test.out

#- 241 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["PBaHXYaJ", "d3yB3qVl", "RBcqfry2"], "publishableKey": "kUqBkgI3", "secretKey": "2N34IW4n", "webhookSecret": "CslaR1R8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'TestStripeConfig' test.out

#- 242 TestWxPayConfig
# body param: body
echo '{"appId": "9N6S4FPj", "key": "Kpnn8XCR", "mchid": "6QBrqpIZ", "returnUrl": "Dxl1MgfN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'TestWxPayConfig' test.out

#- 243 TestXsollaConfig
# body param: body
echo '{"apiKey": "oFSwpNvg", "flowCompletionUrl": "14UGLlj4", "merchantId": 23, "projectId": 60, "projectSecretKey": "y6XH6klE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'TestXsollaConfig' test.out

#- 244 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'kJAwowsn' \
    > test.out 2>&1
eval_tap $? 244 'GetPaymentMerchantConfig' test.out

#- 245 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["mI3bAJPb", "YPgmnCYD", "qxQPUOcx"], "apiKey": "yj3wluZV", "authoriseAsCapture": true, "blockedPaymentMethods": ["TPZAzorW", "oAKckqsm", "Zg9K0CZU"], "clientKey": "MWwkw3hT", "dropInSettings": "AmeC6O8c", "liveEndpointUrlPrefix": "J9TJ3x7n", "merchantAccount": "LAOeu28J", "notificationHmacKey": "GRybjcii", "notificationPassword": "Gpc6ttJb", "notificationUsername": "4NuWNZMR", "returnUrl": "LZp2e5B4", "settings": "NTym7fyd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'F2kLvAbg' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'UpdateAdyenConfig' test.out

#- 246 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'hQ4qBRqm' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 246 'TestAdyenConfigById' test.out

#- 247 UpdateAliPayConfig
# body param: body
echo '{"appId": "3FPiaQnu", "privateKey": "tfWIYmMU", "publicKey": "IjZ6T1nr", "returnUrl": "Y0e4eoeG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'Q3C1rSx7' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'UpdateAliPayConfig' test.out

#- 248 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'W0GcdNzF' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 248 'TestAliPayConfigById' test.out

#- 249 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "apYsf1Uu", "secretKey": "l77DMVWd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'fJmctogG' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateCheckoutConfig' test.out

#- 250 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'UcLZBzsL' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 250 'TestCheckoutConfigById' test.out

#- 251 UpdatePayPalConfig
# body param: body
echo '{"clientID": "Jlxgkkzu", "clientSecret": "ARvpq3qW", "returnUrl": "9KV506qi", "webHookId": "ULBjyPJr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'EXUasczw' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'UpdatePayPalConfig' test.out

#- 252 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'BONmakxv' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 252 'TestPayPalConfigById' test.out

#- 253 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["03CeoReC", "zJiRrhyJ", "06KIJH8n"], "publishableKey": "TCpyDWsa", "secretKey": "yBS02JkM", "webhookSecret": "g27m0OZT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'oZIT7qOO' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'UpdateStripeConfig' test.out

#- 254 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'njJuKYj1' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 254 'TestStripeConfigById' test.out

#- 255 UpdateWxPayConfig
# body param: body
echo '{"appId": "yS60oGEQ", "key": "Pc3Q35qW", "mchid": "cDZHrI7K", "returnUrl": "0r3oPELi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'rXoEvI5E' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateWxPayConfig' test.out

#- 256 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'JZJF94SZ' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 256 'UpdateWxPayConfigCert' test.out

#- 257 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id '9rbt4aFn' \
    > test.out 2>&1
eval_tap $? 257 'TestWxPayConfigById' test.out

#- 258 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "IwjgDTWH", "flowCompletionUrl": "tEZqvPM3", "merchantId": 16, "projectId": 73, "projectSecretKey": "JgRwKCAi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'F6fnR8y0' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'UpdateXsollaConfig' test.out

#- 259 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'FZO0UEli' \
    > test.out 2>&1
eval_tap $? 259 'TestXsollaConfigById' test.out

#- 260 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "SMALL", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'oSoguwHT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'UpdateXsollaUIConfig' test.out

#- 261 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '32' \
    --namespace_ 'Zq20nHxV' \
    --offset '12' \
    --region 'H8IY04CG' \
    > test.out 2>&1
eval_tap $? 261 'QueryPaymentProviderConfig' test.out

#- 262 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "RxwQayjV", "region": "SkRjRPKI", "sandboxTaxJarApiToken": "wZfbdZoa", "specials": ["STRIPE", "WALLET", "ADYEN"], "taxJarApiToken": "2j4DJT69", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'CreatePaymentProviderConfig' test.out

#- 263 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 263 'GetAggregatePaymentProviders' test.out

#- 264 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '9ZWcFGSB' \
    --region 'u5WN1cYC' \
    > test.out 2>&1
eval_tap $? 264 'DebugMatchedPaymentProviderConfig' test.out

#- 265 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 265 'GetSpecialPaymentProviders' test.out

#- 266 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "aCnjM6YY", "region": "7agNoAsV", "sandboxTaxJarApiToken": "vregughn", "specials": ["WXPAY", "WXPAY", "STRIPE"], "taxJarApiToken": "rvc1nl8H", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'Nav1mSTP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'UpdatePaymentProviderConfig' test.out

#- 267 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'n1cvTRtO' \
    > test.out 2>&1
eval_tap $? 267 'DeletePaymentProviderConfig' test.out

#- 268 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 268 'GetPaymentTaxConfig' test.out

#- 269 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "BYMnv4yV", "taxJarApiToken": "y2jl7ujo", "taxJarEnabled": false, "taxJarProductCodesMapping": {"HOAeNRgE": "BWGebKnI", "oBcwHL1x": "vtNTfuh9", "BSAgOlrm": "9E9Cym1d"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'UpdatePaymentTaxConfig' test.out

#- 270 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 't0LTsqah' \
    --end 'irg5ZRNv' \
    --start '2eQ0sgqu' \
    > test.out 2>&1
eval_tap $? 270 'SyncPaymentOrders' test.out

#- 271 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'g1ifpm51' \
    --storeId 'CjtZrnYu' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetRootCategories' test.out

#- 272 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'umxShSSN' \
    --storeId '0I8jqLRT' \
    > test.out 2>&1
eval_tap $? 272 'DownloadCategories' test.out

#- 273 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '7TofmLID' \
    --namespace $AB_NAMESPACE \
    --language 'bnaNqHnM' \
    --storeId '3V70VrtT' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetCategory' test.out

#- 274 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'SbWCiqDI' \
    --namespace $AB_NAMESPACE \
    --language '1kQWubAX' \
    --storeId 'IoUaKvMv' \
    > test.out 2>&1
eval_tap $? 274 'PublicGetChildCategories' test.out

#- 275 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'dwHsE2KV' \
    --namespace $AB_NAMESPACE \
    --language 'EVzvHEn4' \
    --storeId 'k5Lnz1nG' \
    > test.out 2>&1
eval_tap $? 275 'PublicGetDescendantCategories' test.out

#- 276 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 276 'PublicListCurrencies' test.out

#- 277 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'MUtDK0Dh' \
    --region 'u9TfHTsx' \
    --storeId 'gq0lNB3Y' \
    --appId 'EBbiZvz9' \
    > test.out 2>&1
eval_tap $? 277 'PublicGetItemByAppId' test.out

#- 278 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --baseAppId 'KYm2Wpt7' \
    --categoryPath 'ztj3hmEN' \
    --features 'BYeCiYyp' \
    --itemType 'APP' \
    --language 'AopOwEsw' \
    --limit '57' \
    --offset '36' \
    --region 'U1PaZ290' \
    --sortBy '["displayOrder:asc", "createdAt:asc"]' \
    --storeId 'qZ2Ifj0S' \
    --tags 'XOg6rdAt' \
    > test.out 2>&1
eval_tap $? 278 'PublicQueryItems' test.out

#- 279 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language '0uBNra5u' \
    --region 'wIFHQIws' \
    --storeId 'B5XlEklg' \
    --sku 'naE0KIAs' \
    > test.out 2>&1
eval_tap $? 279 'PublicGetItemBySku' test.out

#- 280 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'X0SsG2tS' \
    --region 'dT2D32NI' \
    --storeId 'bBcu0KAd' \
    --itemIds 'XI8k7eVg' \
    > test.out 2>&1
eval_tap $? 280 'PublicBulkGetItems' test.out

#- 281 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["nNnCcrxB", "qGjIu3Y0", "RLwYHntj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PublicValidateItemPurchaseCondition' test.out

#- 282 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'APP' \
    --limit '31' \
    --offset '56' \
    --region 'h0QbR0oe' \
    --storeId 'JfK0YB5h' \
    --keyword 'k3ked6mH' \
    --language 'XaZw9oFQ' \
    > test.out 2>&1
eval_tap $? 282 'PublicSearchItems' test.out

#- 283 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'ygRPrw9n' \
    --namespace $AB_NAMESPACE \
    --language 'KvX25Fs7' \
    --region 'jfm1B7K9' \
    --storeId 'oqoCr1fV' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetApp' test.out

#- 284 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId '1tF539JX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 284 'PublicGetItemDynamicData' test.out

#- 285 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'ffSjC5cs' \
    --namespace $AB_NAMESPACE \
    --language 'mmbZbDSi' \
    --populateBundle 'false' \
    --region 'lqp3by1m' \
    --storeId '42P6wTwy' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetItem' test.out

#- 286 GetPaymentCustomization
eval_tap 0 286 'GetPaymentCustomization # SKIP deprecated' test.out

#- 287 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "fEUCYpn9", "paymentProvider": "ADYEN", "returnUrl": "00XY4hB4", "ui": "9yLxDqgR", "zipCode": "wLSp6tVo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'PublicGetPaymentUrl' test.out

#- 288 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Djck6HkM' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetPaymentMethods' test.out

#- 289 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '1uBGCgFh' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetUnpaidPaymentOrder' test.out

#- 290 Pay
# body param: body
echo '{"token": "yWVxnD8b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'CeDxursQ' \
    --paymentProvider 'WALLET' \
    --zipCode 'UVjG5BNq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'Pay' test.out

#- 291 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'zRmjWQsd' \
    > test.out 2>&1
eval_tap $? 291 'PublicCheckPaymentOrderPaidStatus' test.out

#- 292 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'WXPAY' \
    --region '7UUrz56t' \
    > test.out 2>&1
eval_tap $? 292 'GetPaymentPublicConfig' test.out

#- 293 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'miAIGQGX' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetQRCode' test.out

#- 294 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '5ZMpd8dk' \
    --foreinginvoice 'ze8cVLQk' \
    --invoiceId 'CwVgbPmg' \
    --payload 'VfLJB1Ov' \
    --redirectResult 'Wy4fZ46U' \
    --resultCode 'x9WVm0CX' \
    --sessionId 'V7kr4wlE' \
    --status 'fKwxrAUn' \
    --token 'gH3i1YZK' \
    --type 'INLTmyBF' \
    --userId '2CUgZ9q6' \
    --orderNo 'KNbKPtPY' \
    --paymentOrderNo '8Jway70M' \
    --paymentProvider 'CHECKOUT' \
    --returnUrl '4wHGlwjE' \
    > test.out 2>&1
eval_tap $? 294 'PublicNormalizePaymentReturnUrl' test.out

#- 295 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'sQyqZvFj' \
    --paymentOrderNo 'Y7XiBiBy' \
    --paymentProvider 'CHECKOUT' \
    > test.out 2>&1
eval_tap $? 295 'GetPaymentTaxValue' test.out

#- 296 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'AF4e9As5' \
    > test.out 2>&1
eval_tap $? 296 'GetRewardByCode' test.out

#- 297 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'A4iDg7k1' \
    --limit '81' \
    --offset '64' \
    --sortBy '["rewardCode:desc", "rewardCode", "namespace"]' \
    > test.out 2>&1
eval_tap $? 297 'QueryRewards1' test.out

#- 298 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'dB6powIT' \
    > test.out 2>&1
eval_tap $? 298 'GetReward1' test.out

#- 299 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 299 'PublicListStores' test.out

#- 300 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["JnkVWyc3", "s9s86r2m", "Dnjhmu3d"]' \
    --itemIds '["zVI1qBWJ", "FJyFyM4J", "1WckYkOE"]' \
    --skus '["XiPADr6W", "YpmVaMFK", "qLEXTajj"]' \
    > test.out 2>&1
eval_tap $? 300 'PublicExistsAnyMyActiveEntitlement' test.out

#- 301 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'jHeUi99O' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 302 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --itemId 'Vxo7Q3vE' \
    > test.out 2>&1
eval_tap $? 302 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 303 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'esd8KcQr' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 304 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["Quepqmxn", "mehdlr4U", "cqoq0aO5"]' \
    --itemIds '["dLnFIMvj", "ya7QkukN", "HKjzHThg"]' \
    --skus '["tPUGz5Qu", "o16nab6n", "vB8I08eH"]' \
    > test.out 2>&1
eval_tap $? 304 'PublicGetEntitlementOwnershipToken' test.out

#- 305 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'ImHwVUFt' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 305 'PublicGetMyWallet' test.out

#- 306 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "hBPPakTJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'ClsthXvG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'SyncEpicGameDLC' test.out

#- 307 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 100}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'lswCINHH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicSyncPsnDlcInventory' test.out

#- 308 SyncSteamDLC
# body param: body
echo '{"appId": "2R0zQNao", "steamId": "isLfjWNG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'l4bFg69s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'SyncSteamDLC' test.out

#- 309 SyncXboxDLC
# body param: body
echo '{"xstsToken": "O2pIO2vi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'L0pn4RL3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'SyncXboxDLC' test.out

#- 310 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'D0GRp8m3' \
    --appType 'DLC' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'fwKKabSo' \
    --features '["VD9JNMZs", "yHUSd9dd", "ka66gf3x"]' \
    --itemId '["DxwbwBT1", "fdZJJecg", "35x0o1yd"]' \
    --limit '46' \
    --offset '34' \
    > test.out 2>&1
eval_tap $? 310 'PublicQueryUserEntitlements' test.out

#- 311 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 't8eoNSyB' \
    --appId 'mCagUPhy' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetUserAppEntitlementByAppId' test.out

#- 312 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'wCGfxpl3' \
    --limit '47' \
    --offset '100' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 312 'PublicQueryUserEntitlementsByAppType' test.out

#- 313 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '4VXXSlyp' \
    --entitlementClazz 'MEDIA' \
    --itemId 'sniMADSu' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserEntitlementByItemId' test.out

#- 314 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'WC73Vxqr' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'BK0lo00d' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetUserEntitlementBySku' test.out

#- 315 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'FGi5OYsF' \
    --appIds '["kIySTgpz", "6QowxDSX", "ffFeDwb1"]' \
    --itemIds '["AxATzGia", "M6AOiAJo", "9vrCMsxL"]' \
    --skus '["9NOxJn3I", "tNiLqIt5", "S4i7bGob"]' \
    > test.out 2>&1
eval_tap $? 315 'PublicExistsAnyUserActiveEntitlement' test.out

#- 316 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '6DXNHBp8' \
    --appId 'neh20lwz' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 317 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'xvcK8B6d' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'sSv0Pfro' \
    > test.out 2>&1
eval_tap $? 317 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 318 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '7m3zfJIk' \
    --ids '["ZXloRz0A", "FYamAAuD", "O0Q5icC9"]' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 319 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'xEPnUqgI' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'ospDhM19' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 320 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'CVYYzHpx' \
    --namespace $AB_NAMESPACE \
    --userId 'xcaG2xXA' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetUserEntitlement' test.out

#- 321 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["K9FyUd2p", "bF7792FK", "bZsrZ7dk"], "useCount": 63}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'RHH9x93V' \
    --namespace $AB_NAMESPACE \
    --userId 'IcbDggNx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'PublicConsumeUserEntitlement' test.out

#- 322 PublicRedeemCode
# body param: body
echo '{"code": "Ya5Po6MO", "language": "TA-Mh", "region": "NYpV4buG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'paHB5bg1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicRedeemCode' test.out

#- 323 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "VAJ", "productId": "pHy8jzVE", "receiptData": "utICDUnr", "region": "QiWjJh0z", "transactionId": "no2q2RyY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'Ar7e9XHe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'PublicFulfillAppleIAPItem' test.out

#- 324 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "yz4gvecY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'bCFZ78Uu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'SyncEpicGamesInventory' test.out

#- 325 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "UGqf-Mlef-fW", "orderId": "NyWq13J1", "packageName": "ugbbYi2B", "productId": "O0XLPpFg", "purchaseTime": 18, "purchaseToken": "K8fhCr0g", "region": "5fXcX1EL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'NXEFo4NP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'PublicFulfillGoogleIAPItem' test.out

#- 326 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "IlMZ0LlA", "price": 0.957648886875704, "productId": "QBvECBpv", "serviceLabel": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'o1cpAw2j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'PublicReconcilePlayStationStore' test.out

#- 327 SyncStadiaEntitlement
# body param: body
echo '{"appId": "sQpZuZ09", "language": "Cd", "region": "Df1o6Z7C", "stadiaPlayerId": "BTRO7Ruz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '9ZkVga4l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'SyncStadiaEntitlement' test.out

#- 328 SyncSteamInventory
# body param: body
echo '{"appId": "I2MIZl2m", "currencyCode": "c7k05nvs", "language": "jkKx-JMoW", "price": 0.5295588787656373, "productId": "QcanRF1s", "region": "hQQ68DSE", "steamId": "gFtFXtY6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'QZ9EHq3D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'SyncSteamInventory' test.out

#- 329 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "BxoXEWJd", "language": "OrJu", "region": "mfg2zpJl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'j6scWXfj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'SyncTwitchDropsEntitlement' test.out

#- 330 SyncXboxInventory
# body param: body
echo '{"currencyCode": "oqXdEBHP", "price": 0.828822857485837, "productId": "SBzhvPba", "xstsToken": "3tsu6JoT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'p9SDAjGY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'SyncXboxInventory' test.out

#- 331 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'x4efIoLs' \
    --itemId 'okCq4o7Z' \
    --limit '92' \
    --offset '74' \
    --status 'CHARGEBACK_REVERSED' \
    > test.out 2>&1
eval_tap $? 331 'PublicQueryUserOrders' test.out

#- 332 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "vNFEgTlR", "discountedPrice": 83, "ext": {"YpYbzpl2": {}, "BehHHUmG": {}, "FfI38J5a": {}}, "itemId": "Bd1K34hU", "language": "QD_svrS", "price": 39, "quantity": 73, "region": "23Nxh7fb", "returnUrl": "SVmoSlt0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Qi3vfkg4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicCreateUserOrder' test.out

#- 333 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'U3nOevwx' \
    --userId 'mQsKkq4N' \
    > test.out 2>&1
eval_tap $? 333 'PublicGetUserOrder' test.out

#- 334 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'iMpgSxLl' \
    --userId '4kYvaYd0' \
    > test.out 2>&1
eval_tap $? 334 'PublicCancelUserOrder' test.out

#- 335 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'PGx5kVzR' \
    --userId 'fcUTzjK9' \
    > test.out 2>&1
eval_tap $? 335 'PublicGetUserOrderHistories' test.out

#- 336 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'PR9rADfI' \
    --userId 'yZtTamPe' \
    > test.out 2>&1
eval_tap $? 336 'PublicDownloadUserOrderReceipt' test.out

#- 337 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'swx5EA0z' \
    > test.out 2>&1
eval_tap $? 337 'PublicGetPaymentAccounts' test.out

#- 338 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'yCwp5srr' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'lYcqgTa6' \
    > test.out 2>&1
eval_tap $? 338 'PublicDeletePaymentAccount' test.out

#- 339 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'QhXGaucj' \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'E7iuJ05Z' \
    --limit '29' \
    --offset '77' \
    --sku 'E9x9lGsW' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 339 'PublicQueryUserSubscriptions' test.out

#- 340 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "D46nX1ON", "itemId": "3r5z8tWJ", "language": "Jk_NXwI_tp", "region": "cCKPYDbo", "returnUrl": "x6cCPg8o", "source": "EwN793XN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'UlqnEYAF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'PublicSubscribeSubscription' test.out

#- 341 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'PRXeNqxZ' \
    --itemId 'LMheyh08' \
    > test.out 2>&1
eval_tap $? 341 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 342 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'wiV1Ncnb' \
    --userId 'E6FdKny7' \
    > test.out 2>&1
eval_tap $? 342 'PublicGetUserSubscription' test.out

#- 343 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ft8UL6hf' \
    --userId 'Inm3Il0d' \
    > test.out 2>&1
eval_tap $? 343 'PublicChangeSubscriptionBillingAccount' test.out

#- 344 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "Gq25qgWY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Fjpphj8d' \
    --userId 'dmirjX6W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'PublicCancelSubscription' test.out

#- 345 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'kIVvpgSK' \
    --userId '1C8pLP6j' \
    --excludeFree 'false' \
    --limit '78' \
    --offset '38' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserSubscriptionBillingHistories' test.out

#- 346 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '9VpCVUUK' \
    --namespace $AB_NAMESPACE \
    --userId '50OnfFfb' \
    > test.out 2>&1
eval_tap $? 346 'PublicGetWallet' test.out

#- 347 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'toqX1A6A' \
    --namespace $AB_NAMESPACE \
    --userId 'Mdp6JyLJ' \
    --limit '39' \
    --offset '0' \
    > test.out 2>&1
eval_tap $? 347 'PublicListUserWalletTransactions' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE