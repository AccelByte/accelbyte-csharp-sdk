#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..360"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "BGPtpR29", "appType": "SOFTWARE", "baseAppId": "bfUEiIBx", "boothName": "IsPVf9Dj", "boundItemIds": ["thaqIMwm", "0Klf8843", "Bzvvg6Vn"], "categoryPath": "8hOA45xb", "clazz": "CGepf2t9", "createdAt": "1974-04-13T00:00:00Z", "description": "65Ihcyzy", "displayOrder": 24, "entitlementType": "DURABLE", "ext": {"dtuZUlOA": {}, "xJHIKW2K": {}, "cwLyNtej": {}}, "features": ["nyxkVE6n", "6W2eY8bP", "SfPZ4qvp"], "fresh": false, "images": [{"as": "Iqeg3vUQ", "caption": "Aq6i1RH4", "height": 87, "imageUrl": "7TyY7P7K", "smallImageUrl": "z2rdtULI", "width": 29}, {"as": "4o0LwCtE", "caption": "u0Nb28Nd", "height": 48, "imageUrl": "nlZCJIc4", "smallImageUrl": "jrPGw2Wz", "width": 28}, {"as": "z6qJ6j4s", "caption": "L0Lib5UP", "height": 66, "imageUrl": "okxkA9OC", "smallImageUrl": "0Y6e0wZL", "width": 4}], "itemId": "n4O5Rvdu", "itemIds": ["Cyo1Lui5", "HkaNWvYb", "kn5ed4cT"], "itemQty": {"yGIas5Y7": 80, "xGfng19D": 88, "ekZiC6It": 23}, "itemType": "INGAMEITEM", "language": "ojd0fGfW", "listable": false, "localExt": {"E2KHILA3": {}, "bgt8tVcm": {}, "1pxGipYu": {}}, "longDescription": "DKm8fLKQ", "maxCount": 44, "maxCountPerUser": 4, "name": "0Fz6qRYA", "namespace": "dQ8h46SV", "optionBoxConfig": {"boxItems": [{"count": 90, "itemId": "3VpjXMcZ", "itemSku": "r5kArczM"}, {"count": 69, "itemId": "4gcxjyoq", "itemSku": "Y4s6MoOf"}, {"count": 82, "itemId": "lYnOmnP4", "itemSku": "vmhsHZTL"}]}, "purchasable": false, "purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 52, "comparison": "isLessThan", "name": "DKBXNNAW", "predicateType": "SeasonPassPredicate", "value": "nJC47cPM", "values": ["KbJykKnR", "CyvNut4J", "CROSyTmC"]}, {"anyOf": 35, "comparison": "includes", "name": "QBkvdFMe", "predicateType": "SeasonTierPredicate", "value": "eDTCRYPT", "values": ["FWpA6Uv5", "gEJT7Ner", "o15qCNPK"]}, {"anyOf": 30, "comparison": "isLessThan", "name": "X2w34OgA", "predicateType": "EntitlementPredicate", "value": "DloDnWwG", "values": ["anAzU2sp", "8PkCbrvF", "klkIAPNX"]}]}, {"operator": "and", "predicates": [{"anyOf": 49, "comparison": "includes", "name": "WeI3xtAF", "predicateType": "EntitlementPredicate", "value": "EHjW0S6c", "values": ["ijS3bszt", "fCi1Nsfj", "UfOGoXYc"]}, {"anyOf": 27, "comparison": "isLessThan", "name": "tJViu67o", "predicateType": "SeasonTierPredicate", "value": "NYmreT6f", "values": ["5eUMD3HR", "le5E8A13", "JqnkpJmB"]}, {"anyOf": 73, "comparison": "is", "name": "wokkBP8V", "predicateType": "EntitlementPredicate", "value": "IXfUBwBw", "values": ["tvpavlWs", "Daxfir0D", "DypfzFze"]}]}, {"operator": "or", "predicates": [{"anyOf": 61, "comparison": "isGreaterThan", "name": "PuOuixpe", "predicateType": "EntitlementPredicate", "value": "dg1TMzDX", "values": ["YdRqSX2l", "r7Aqybao", "k4JsOnLG"]}, {"anyOf": 15, "comparison": "isGreaterThan", "name": "Y0PnM5Lu", "predicateType": "EntitlementPredicate", "value": "L26XxCez", "values": ["y7H6Y94E", "YZkM44Ps", "f3z3SpyN"]}, {"anyOf": 28, "comparison": "excludes", "name": "3DLQAYRv", "predicateType": "SeasonTierPredicate", "value": "IGGWByaF", "values": ["6OQSB3FC", "l8HVi4UG", "SuEctcgK"]}]}]}, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 17, "fixedTrialCycles": 47, "graceDays": 2}, "region": "8Xbin1qa", "regionData": [{"currencyCode": "tMIILigU", "currencyNamespace": "sZapk9FF", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1985-12-23T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1987-11-20T00:00:00Z", "discountedPrice": 7, "expireAt": "1980-08-01T00:00:00Z", "price": 45, "purchaseAt": "1983-09-03T00:00:00Z", "trialPrice": 35}, {"currencyCode": "73YlKz0B", "currencyNamespace": "xAzGmq87", "currencyType": "VIRTUAL", "discountAmount": 28, "discountExpireAt": "1992-12-24T00:00:00Z", "discountPercentage": 32, "discountPurchaseAt": "1979-04-15T00:00:00Z", "discountedPrice": 79, "expireAt": "1982-11-04T00:00:00Z", "price": 77, "purchaseAt": "1987-09-26T00:00:00Z", "trialPrice": 69}, {"currencyCode": "6Yy1aiwx", "currencyNamespace": "7twGVmeQ", "currencyType": "VIRTUAL", "discountAmount": 5, "discountExpireAt": "1977-04-26T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1984-12-30T00:00:00Z", "discountedPrice": 93, "expireAt": "1975-04-14T00:00:00Z", "price": 16, "purchaseAt": "1979-05-13T00:00:00Z", "trialPrice": 35}], "seasonType": "TIER", "sku": "pRJp8Mdd", "stackable": true, "status": "ACTIVE", "tags": ["sbTle6Wo", "B3cAfJby", "L4vQP4WA"], "targetCurrencyCode": "LubGOK6A", "targetItemId": "rS9zv3eJ", "targetNamespace": "iSOdqbpR", "thumbnailUrl": "RLwrUKsQ", "title": "jcp4GYOS", "updatedAt": "1986-07-13T00:00:00Z", "useCount": 39}, "namespace": "VBg06wOv", "order": {"currency": {"currencyCode": "Y7kXiZlD", "currencySymbol": "GUyWJCmT", "currencyType": "VIRTUAL", "decimals": 21, "namespace": "n1LjgFtl"}, "ext": {"PORSfAZg": {}, "GPn4S38p": {}, "kVh2IaHX": {}}, "free": true}, "source": "OTHER"}, "script": "sgRgDTxJ", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '5z8I63l5' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "RY81hi5m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id '6yO52FKg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'PqDVbJVH' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "HLgc5hDX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'aRJC2zgN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "FBcc4rhE", "dryRun": true, "fulfillmentUrl": "9sK8zCxu", "itemType": "SUBSCRIPTION", "purchaseConditionUrl": "bHjAbWEO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'h57SEYkO' \
    --itemType 'OPTIONBOX' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'YCuJBH1T' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "nACL9l5j", "dryRun": false, "fulfillmentUrl": "gseCKMVN", "purchaseConditionUrl": "mH2bqWOs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'E6e5YshV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'm7fjeUtw' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '99' \
    --name 'Z0TVLRHK' \
    --offset '53' \
    --tag '8Q4ZSBgB' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "hDIjyWqN", "items": [{"extraSubscriptionDays": 8, "itemId": "fzB4e99P", "itemName": "dD4sG6WG", "quantity": 32}, {"extraSubscriptionDays": 98, "itemId": "mN2BqLFk", "itemName": "lyKTNY7p", "quantity": 31}, {"extraSubscriptionDays": 66, "itemId": "AysNE9aT", "itemName": "bIAfKBBF", "quantity": 26}], "maxRedeemCountPerCampaignPerUser": 52, "maxRedeemCountPerCode": 43, "maxRedeemCountPerCodePerUser": 93, "maxSaleCount": 0, "name": "6bZIzGw5", "redeemEnd": "1991-07-26T00:00:00Z", "redeemStart": "1977-08-16T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["axNJ5rUC", "cZzjwBXk", "x5fT911q"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId '9nIBxE5v' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "8akcLs2j", "items": [{"extraSubscriptionDays": 74, "itemId": "pD6zy6im", "itemName": "Ya1YA54X", "quantity": 13}, {"extraSubscriptionDays": 83, "itemId": "Gj4Mp4KC", "itemName": "4BxKFWwY", "quantity": 90}, {"extraSubscriptionDays": 75, "itemId": "hvDwTHpM", "itemName": "kMZTI5vu", "quantity": 24}], "maxRedeemCountPerCampaignPerUser": 14, "maxRedeemCountPerCode": 95, "maxRedeemCountPerCodePerUser": 85, "maxSaleCount": 91, "name": "Mte7ApR0", "redeemEnd": "1998-05-31T00:00:00Z", "redeemStart": "1984-05-15T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["MuMxjNuJ", "VFWDy800", "zvds66FX"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'Nru9f7bH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'BtejWhDu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'kQlRn2pU' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "0GaOEF6T", "localizationDisplayNames": {"pvlkA6K8": "sPsqJhva", "CAfI9Bf6": "VZmNNHCx", "VusKIWWX": "CZEsmhen"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'y9rJpP3m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'YXe4jGCY' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'D5wPAEpq' \
    --namespace $AB_NAMESPACE \
    --storeId 'XGG8IUDP' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"VSSbQpIM": "pmjdc5ln", "QIhP0wfI": "gdWmIzFP", "RwbyRQV9": "MNoXPOQC"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath '1QOOf9VK' \
    --namespace $AB_NAMESPACE \
    --storeId 'O34KG0Jj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'PkDHZKcv' \
    --namespace $AB_NAMESPACE \
    --storeId 'VPfT843S' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath '4F05Wmyt' \
    --namespace $AB_NAMESPACE \
    --storeId 'JRRFepbR' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'llnpP0cZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'VRYp7mMm' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'i5Cl1bGw' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '17' \
    --code 'Hv4xeFQ4' \
    --limit '2' \
    --offset '53' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 18}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'kKA9i0B6' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'mKDmiegM' \
    --namespace $AB_NAMESPACE \
    --batchNo '91' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'FRQUduFm' \
    --namespace $AB_NAMESPACE \
    --batchNo '54' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'CrwtwoxM' \
    --namespace $AB_NAMESPACE \
    --batchNo '18' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'FnVejVkY' \
    --namespace $AB_NAMESPACE \
    --code 'RwBXacRD' \
    --limit '81' \
    --offset '33' \
    --userId '6pb6P9Hw' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code '5l4jvRFq' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'sttDU83s' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'OGXdaPka' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "eIxAH4R3", "currencySymbol": "JBHM6uFt", "currencyType": "VIRTUAL", "decimals": 60, "localizationDescriptions": {"hvKhaltj": "Ax9l8DAq", "2nHGhC5M": "5I17dwSh", "wdO3NyKE": "pk6cLVVG"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"BTdS7M7c": "3PlFaVaV", "SSnDbOEd": "yPbKJj9I", "erjyjEvB": "ZETiWf3O"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'we2F34eD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'cWwD5nPg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'RTNmgOfu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'sCHOmDr7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "6eEBkVqf", "rewards": [{"currency": {"currencyCode": "1MapI2OG", "namespace": "qbbfrsKF"}, "item": {"itemId": "XqbOTzwV", "itemSku": "vq6Km4uY", "itemType": "nLzPM6KR"}, "quantity": 48, "type": "ITEM"}, {"currency": {"currencyCode": "0SPmT8iG", "namespace": "gawViIhi"}, "item": {"itemId": "Mc4N5dQm", "itemSku": "oIVEMYYq", "itemType": "jcLrj1ho"}, "quantity": 9, "type": "ITEM"}, {"currency": {"currencyCode": "czIgVPCT", "namespace": "52eFZ9As"}, "item": {"itemId": "9sWvvkM0", "itemSku": "tgIaSERz", "itemType": "6lwHJD8r"}, "quantity": 82, "type": "ITEM"}]}, {"id": "S0sgi5OJ", "rewards": [{"currency": {"currencyCode": "FT1GJ4ZZ", "namespace": "8V3YzIR0"}, "item": {"itemId": "t2OpTO1M", "itemSku": "qXKiS8X9", "itemType": "ZHXK9lG6"}, "quantity": 87, "type": "CURRENCY"}, {"currency": {"currencyCode": "e3ZnInPU", "namespace": "WcscvRCA"}, "item": {"itemId": "o9Dq89Jd", "itemSku": "lEAsqxtj", "itemType": "ngvaFmlo"}, "quantity": 85, "type": "ITEM"}, {"currency": {"currencyCode": "Cn7fDrTM", "namespace": "EdMTuVwO"}, "item": {"itemId": "m1fbkYrc", "itemSku": "hy7C9yqR", "itemType": "K40TTX1J"}, "quantity": 31, "type": "ITEM"}]}, {"id": "gAli2La6", "rewards": [{"currency": {"currencyCode": "2snUHxid", "namespace": "sKD84dop"}, "item": {"itemId": "uErUjfPI", "itemSku": "PsAuKD5I", "itemType": "CVX5Y1Xa"}, "quantity": 93, "type": "ITEM"}, {"currency": {"currencyCode": "Sp7jxJ3L", "namespace": "1fxIcpzA"}, "item": {"itemId": "L60cw9Aw", "itemSku": "2dLFYOKQ", "itemType": "9afbw4sz"}, "quantity": 70, "type": "CURRENCY"}, {"currency": {"currencyCode": "vKCmmz6Z", "namespace": "2QraFeeO"}, "item": {"itemId": "85gpi5nQ", "itemSku": "9HBxw9WI", "itemType": "IjhccnEx"}, "quantity": 65, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "STEAM", "platformDlcIdMap": {"U87pl4u3": "39EVXqPo", "WhKaUcnK": "5GSaPACC", "aLq2cnCa": "uGYbru3K"}}, {"platform": "XBOX", "platformDlcIdMap": {"eI2h9cHz": "2IWyN426", "A8UIjne2": "YyqCXQlu", "gOheNhGp": "rKCRsJmq"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"wIbhqFnH": "P0lUZYLf", "eW35VRyF": "nK3KxLJF", "ldusyasx": "zdm8uRaL"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'CODE' \
    --entitlementName '3SOPn2TU' \
    --itemId '["8dNOBwIj", "8KzvtoUN", "OzMtvhzL"]' \
    --limit '47' \
    --offset '5' \
    --userId 'WJeeVNXh' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId '1wIZ33Sm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '11' \
    --offset '59' \
    --status 'FAIL' \
    --userId 'A4UHvY7X' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "llxROuwS", "password": "6mH2pHE9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "H1LnKqIy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "CRnaKg6t", "serviceAccountId": "pmktD2cq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "YzeFti1L", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"xh3gKBpP": "5rv34GII", "f7wSwQTz": "5UlGFPUa", "RYmEWGjQ": "cvsJshzz"}}, {"itemIdentity": "9l3jq1yk", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"xf087VeS": "T7I6osYI", "M0FoWVXR": "Zpj7WeyX", "DHcNsnVO": "PAfKYqtT"}}, {"itemIdentity": "78eBZ5B5", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"khfC4VX0": "FCd0mLVF", "Fi7fyHDY": "cCWIBg1d", "pP4FuCV4": "QWzX27l7"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "wx3mkhIn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "iZJq4HjJ", "publisherAuthenticationKey": "i9PXkI4r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "1yU0V3vf", "clientSecret": "7ia3qsDf", "organizationId": "Vg2EKawK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "UFrp87R6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'ELMlQqkJ' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'I8gz2FPI' \
    --itemId 'jiie8Hkh' \
    --itemType 'EXTENSION' \
    --endTime '9IaKYR25' \
    --startTime '9MUHjoU8' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'spAGA5AW' \
    --itemId 'qecs7hLE' \
    --itemType 'EXTENSION' \
    --endTime 'Vxn5qTNT' \
    --startTime 'xik0QqmC' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "HvwjpGVY", "targetItemId": "c9DJsQRW", "targetNamespace": "NX0nnSAI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'wBrz2n9A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "P3oBvp0q", "appType": "DLC", "baseAppId": "h8WpP2mP", "boothName": "XVUtdNJb", "categoryPath": "zZyvLKiz", "clazz": "7LMQeJdI", "displayOrder": 94, "entitlementType": "CONSUMABLE", "ext": {"411lxNNm": {}, "qahHH0ti": {}, "jwcFJgJH": {}}, "features": ["aeiuxMKn", "5qGqCpH4", "CKxiaAVr"], "images": [{"as": "4bIVxqgF", "caption": "19FFygKp", "height": 1, "imageUrl": "r9cyvc32", "smallImageUrl": "YdzOmavw", "width": 92}, {"as": "AkF1khv0", "caption": "e4L9c9u2", "height": 9, "imageUrl": "uwvm5Ftj", "smallImageUrl": "swZCaJlq", "width": 22}, {"as": "LPXSgAuy", "caption": "hStxk1kF", "height": 33, "imageUrl": "Z9Ql6pXF", "smallImageUrl": "5UKe0nIe", "width": 11}], "itemIds": ["3t5LK9Ud", "22wPMC92", "wF385pWk"], "itemQty": {"NQXuDKIp": 76, "vJXQpOJX": 23, "DyUIrXNG": 77}, "itemType": "INGAMEITEM", "listable": false, "localizations": {"uFMUEft0": {"description": "z6o9miiy", "localExt": {"FYGrv2rr": {}, "wCuyDyYN": {}, "s9xaXcjC": {}}, "longDescription": "UonwOS9m", "title": "xh9hGk8l"}, "tnEyJbDl": {"description": "KCjfuJ6W", "localExt": {"7bTc5ZAb": {}, "KKdr22l6": {}, "N1dCb3lC": {}}, "longDescription": "hhKxl9VE", "title": "QWdGB5A1"}, "lkCR1lEV": {"description": "snAqeOwK", "localExt": {"ApTDhwMi": {}, "3Gi4HpuD": {}, "vzdf8eEY": {}}, "longDescription": "IsEVZwSJ", "title": "zxg14YRq"}}, "maxCount": 11, "maxCountPerUser": 4, "name": "VokQzjo5", "optionBoxConfig": {"boxItems": [{"count": 17, "itemId": "FfXLOSE1", "itemSku": "LgOkooio"}, {"count": 40, "itemId": "e9sN1CBP", "itemSku": "hmO1edTv"}, {"count": 84, "itemId": "pnPmwmvN", "itemSku": "yWSj4t2w"}]}, "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 47, "fixedTrialCycles": 0, "graceDays": 89}, "regionData": {"U3AXkVdM": [{"currencyCode": "kEtFG8FC", "currencyNamespace": "JXUyb70G", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1991-04-11T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1979-08-27T00:00:00Z", "discountedPrice": 69, "expireAt": "1982-02-09T00:00:00Z", "price": 22, "purchaseAt": "1992-10-13T00:00:00Z", "trialPrice": 28}, {"currencyCode": "YL6BBO9y", "currencyNamespace": "0vc8yPCj", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1995-03-15T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1997-10-27T00:00:00Z", "discountedPrice": 84, "expireAt": "1999-09-26T00:00:00Z", "price": 28, "purchaseAt": "1988-10-29T00:00:00Z", "trialPrice": 62}, {"currencyCode": "gVEbiytz", "currencyNamespace": "FAY3c6xv", "currencyType": "REAL", "discountAmount": 89, "discountExpireAt": "1982-09-03T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1979-08-07T00:00:00Z", "discountedPrice": 74, "expireAt": "1980-07-30T00:00:00Z", "price": 36, "purchaseAt": "1983-09-04T00:00:00Z", "trialPrice": 39}], "jCQIol9C": [{"currencyCode": "rZSvdhqI", "currencyNamespace": "p0HP1B4Y", "currencyType": "REAL", "discountAmount": 76, "discountExpireAt": "1988-02-25T00:00:00Z", "discountPercentage": 89, "discountPurchaseAt": "1997-07-24T00:00:00Z", "discountedPrice": 67, "expireAt": "1993-12-19T00:00:00Z", "price": 20, "purchaseAt": "1983-05-04T00:00:00Z", "trialPrice": 6}, {"currencyCode": "6FJPERK7", "currencyNamespace": "erZnPxyZ", "currencyType": "VIRTUAL", "discountAmount": 10, "discountExpireAt": "1987-11-02T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1993-02-06T00:00:00Z", "discountedPrice": 89, "expireAt": "1980-01-18T00:00:00Z", "price": 51, "purchaseAt": "1993-01-23T00:00:00Z", "trialPrice": 47}, {"currencyCode": "8lNRc4S7", "currencyNamespace": "sjJ9yFfi", "currencyType": "VIRTUAL", "discountAmount": 63, "discountExpireAt": "1977-11-29T00:00:00Z", "discountPercentage": 67, "discountPurchaseAt": "1981-12-23T00:00:00Z", "discountedPrice": 3, "expireAt": "1973-10-15T00:00:00Z", "price": 100, "purchaseAt": "1999-06-02T00:00:00Z", "trialPrice": 76}], "msZ6cAQi": [{"currencyCode": "YN03OV8u", "currencyNamespace": "KQfXG5Sp", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1972-05-15T00:00:00Z", "discountPercentage": 99, "discountPurchaseAt": "1972-06-13T00:00:00Z", "discountedPrice": 84, "expireAt": "1973-11-08T00:00:00Z", "price": 64, "purchaseAt": "1991-12-14T00:00:00Z", "trialPrice": 60}, {"currencyCode": "52UVGuWy", "currencyNamespace": "r6KuF3Xc", "currencyType": "REAL", "discountAmount": 70, "discountExpireAt": "1978-03-31T00:00:00Z", "discountPercentage": 31, "discountPurchaseAt": "1985-09-12T00:00:00Z", "discountedPrice": 63, "expireAt": "1988-04-30T00:00:00Z", "price": 42, "purchaseAt": "1983-02-20T00:00:00Z", "trialPrice": 99}, {"currencyCode": "ahK5KygH", "currencyNamespace": "d6be5WKZ", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1978-01-22T00:00:00Z", "discountPercentage": 25, "discountPurchaseAt": "1975-05-14T00:00:00Z", "discountedPrice": 98, "expireAt": "1991-03-16T00:00:00Z", "price": 16, "purchaseAt": "1975-03-30T00:00:00Z", "trialPrice": 56}]}, "seasonType": "PASS", "sku": "irwOUTzQ", "stackable": true, "status": "INACTIVE", "tags": ["wVdPoITz", "Ks9SlccW", "KxV6rmAQ"], "targetCurrencyCode": "O2xNuk7P", "targetNamespace": "N0lRgmtv", "thumbnailUrl": "t3pmM44t", "useCount": 91}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'YmdfbhVm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'mR7EwDgm' \
    --appId 'lWzjPAZJ' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --availableDate 'aeJFS0RX' \
    --baseAppId 'fRX2n3KK' \
    --categoryPath 'HOe1kx6x' \
    --features 'JGOSWwv4' \
    --includeSubCategoryItem 'false' \
    --itemType 'SUBSCRIPTION' \
    --limit '69' \
    --offset '4' \
    --region 'LXGY7tu1' \
    --sortBy '["displayOrder", "updatedAt:desc", "displayOrder:asc"]' \
    --storeId 'K9vFkrnO' \
    --tags 'D13wS7kt' \
    --targetNamespace 'CQwDWiKM' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["xWC1G7YI", "maN1WJ9D", "ih5SPOSY"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'KPYFHfKJ' \
    --sku 'uRVphKVe' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'ZFNLrduU' \
    --populateBundle 'true' \
    --region '9MWHZTjj' \
    --storeId 'JqUtdcn6' \
    --sku 'H0sYp3ic' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '5Hb7qhIQ' \
    --sku 'waEpRGaN' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["LkNPWtKv", "kA6UOIlJ", "li2hWzCE"]' \
    --storeId '5004rAXQ' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'JCFE4q1M' \
    --region '4hmoY7tY' \
    --storeId 'IfiUcUqV' \
    --itemIds 'TKGQ6TBh' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["FQPQbHqK", "jkiK28Qw", "f7x9GdTK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'J5u3KalN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'COINS' \
    --limit '4' \
    --offset '80' \
    --sortBy 'nFkf7zxl' \
    --storeId 'waCNTRIe' \
    --keyword 'hNIw3DsC' \
    --language 'ezE5smbq' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '12' \
    --offset '23' \
    --sortBy '["name:asc", "updatedAt:desc", "name:desc"]' \
    --storeId 'Sb9Vdsc6' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'a1F3APJk' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'ivlMZurP' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "WEINjmFU", "appType": "DEMO", "baseAppId": "DX7GTtGQ", "boothName": "FuyOWDRh", "categoryPath": "6HDEaxIM", "clazz": "3rh9moXb", "displayOrder": 38, "entitlementType": "CONSUMABLE", "ext": {"WsdMcA5J": {}, "slyERTVp": {}, "iNWfUgWq": {}}, "features": ["yu61zhqC", "7GltroBF", "lE4ULsLy"], "images": [{"as": "O38LIJRF", "caption": "R7r8jKsT", "height": 47, "imageUrl": "bSaOGfPp", "smallImageUrl": "wrDrE4Lc", "width": 6}, {"as": "oHO2kgPJ", "caption": "sVLRZAtC", "height": 65, "imageUrl": "SkktU74p", "smallImageUrl": "adb7gnlz", "width": 70}, {"as": "kh9gDq7f", "caption": "kkVWnrc1", "height": 79, "imageUrl": "rl6aqZFu", "smallImageUrl": "8V0mabr1", "width": 52}], "itemIds": ["N4S807hd", "45FegwAK", "XGqGalGb"], "itemQty": {"Z71vlQi3": 98, "eFuSlbkH": 98, "DAR1pf9T": 70}, "itemType": "INGAMEITEM", "listable": true, "localizations": {"fgL4mpcO": {"description": "RHsJENwu", "localExt": {"jhxWvity": {}, "ZwipyZR1": {}, "wJeWNqt5": {}}, "longDescription": "7XQK9HvG", "title": "7wCGpMyT"}, "IHmi5nJT": {"description": "3760CAug", "localExt": {"FYRin0pe": {}, "RXf2ufkU": {}, "EVsnt3rz": {}}, "longDescription": "QJ0K2DK9", "title": "saFinwRr"}, "VEZyMcZH": {"description": "mESncvY2", "localExt": {"XKwRdY5x": {}, "BWJIfStX": {}, "xitpOcTh": {}}, "longDescription": "vjCq2tHA", "title": "a4oHIzjB"}}, "maxCount": 51, "maxCountPerUser": 92, "name": "bFPvjdkp", "optionBoxConfig": {"boxItems": [{"count": 32, "itemId": "g9Uz3ZEQ", "itemSku": "qfrGlCxf"}, {"count": 81, "itemId": "KQlvwOAt", "itemSku": "N2HIuYcn"}, {"count": 55, "itemId": "NJw8L3wD", "itemSku": "ddKmKDAI"}]}, "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 16, "fixedTrialCycles": 82, "graceDays": 67}, "regionData": {"PxABGXA6": [{"currencyCode": "E211cYp6", "currencyNamespace": "dal8AH3a", "currencyType": "VIRTUAL", "discountAmount": 59, "discountExpireAt": "1981-12-18T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1984-08-24T00:00:00Z", "discountedPrice": 76, "expireAt": "1983-05-16T00:00:00Z", "price": 22, "purchaseAt": "1980-05-03T00:00:00Z", "trialPrice": 28}, {"currencyCode": "8R0IpUQT", "currencyNamespace": "hZwwpQqw", "currencyType": "REAL", "discountAmount": 39, "discountExpireAt": "1993-02-09T00:00:00Z", "discountPercentage": 71, "discountPurchaseAt": "1991-01-02T00:00:00Z", "discountedPrice": 69, "expireAt": "1984-01-10T00:00:00Z", "price": 34, "purchaseAt": "1992-10-27T00:00:00Z", "trialPrice": 52}, {"currencyCode": "u0y9yiNy", "currencyNamespace": "Lau798Mt", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1988-02-28T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1980-04-17T00:00:00Z", "discountedPrice": 73, "expireAt": "1985-08-09T00:00:00Z", "price": 66, "purchaseAt": "1974-07-01T00:00:00Z", "trialPrice": 51}], "iBH115qn": [{"currencyCode": "z8AuUWhF", "currencyNamespace": "enuhAIEC", "currencyType": "REAL", "discountAmount": 75, "discountExpireAt": "1981-11-24T00:00:00Z", "discountPercentage": 5, "discountPurchaseAt": "1980-08-09T00:00:00Z", "discountedPrice": 76, "expireAt": "1980-03-21T00:00:00Z", "price": 83, "purchaseAt": "1984-12-24T00:00:00Z", "trialPrice": 27}, {"currencyCode": "CRXVEkJ6", "currencyNamespace": "xOzJLNUw", "currencyType": "VIRTUAL", "discountAmount": 17, "discountExpireAt": "1997-12-18T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1990-04-12T00:00:00Z", "discountedPrice": 38, "expireAt": "1997-04-19T00:00:00Z", "price": 40, "purchaseAt": "1988-11-19T00:00:00Z", "trialPrice": 31}, {"currencyCode": "yKQisvAN", "currencyNamespace": "Rt8cHeDF", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1991-08-18T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1991-01-28T00:00:00Z", "discountedPrice": 63, "expireAt": "1980-04-20T00:00:00Z", "price": 46, "purchaseAt": "1995-04-01T00:00:00Z", "trialPrice": 4}], "ylLPgCFY": [{"currencyCode": "xPAg1dr0", "currencyNamespace": "dXFUMEcK", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1988-08-29T00:00:00Z", "discountPercentage": 13, "discountPurchaseAt": "1985-06-17T00:00:00Z", "discountedPrice": 44, "expireAt": "1976-01-16T00:00:00Z", "price": 90, "purchaseAt": "1993-01-11T00:00:00Z", "trialPrice": 96}, {"currencyCode": "QIsx2U7v", "currencyNamespace": "OTb4xGLQ", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1984-05-20T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1990-03-24T00:00:00Z", "discountedPrice": 81, "expireAt": "1974-08-25T00:00:00Z", "price": 87, "purchaseAt": "1994-03-20T00:00:00Z", "trialPrice": 56}, {"currencyCode": "hnuLWApK", "currencyNamespace": "koRUcm9x", "currencyType": "VIRTUAL", "discountAmount": 33, "discountExpireAt": "1972-02-22T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1998-05-15T00:00:00Z", "discountedPrice": 95, "expireAt": "1999-04-24T00:00:00Z", "price": 50, "purchaseAt": "1998-01-14T00:00:00Z", "trialPrice": 70}]}, "seasonType": "PASS", "sku": "zW7B7rKT", "stackable": false, "status": "INACTIVE", "tags": ["5Cg2OgM1", "8keNQSSk", "9TUmilSX"], "targetCurrencyCode": "cEBlSekz", "targetNamespace": "i9tNxQS8", "thumbnailUrl": "jS6WhSSs", "useCount": 56}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'QUCUMufL' \
    --namespace $AB_NAMESPACE \
    --storeId '24CMLFPT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'nDE7S3qk' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'hKbIxm7m' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 38, "orderNo": "NUQgpvPO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'dF5oJJYa' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'rafiyKyl' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'aJrQ049H' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "yrZlv0Vn", "previewUrl": "Iuw73Qwj", "thumbnailUrl": "h8b1mHfU", "type": "video", "url": "0bEHTCXv", "videoSource": "generic"}, {"alt": "xg44IgHH", "previewUrl": "iPbQU3qN", "thumbnailUrl": "cR3coRj4", "type": "video", "url": "iehL4aPW", "videoSource": "youtube"}, {"alt": "NjKDLl0r", "previewUrl": "8QG5GQeX", "thumbnailUrl": "X0FmSOpB", "type": "image", "url": "vcT9aVdK", "videoSource": "vimeo"}], "developer": "vX3hA2Qg", "forumUrl": "CCu33ZNl", "genres": ["Simulation", "Racing", "Racing"], "localizations": {"UOmNyrmq": {"announcement": "CZrRYqkF", "slogan": "oXDr0Apq"}, "pxt3jPBi": {"announcement": "i1mxUqwu", "slogan": "HBjhfZWu"}, "lh1NaHV0": {"announcement": "opmTYVUz", "slogan": "F13go6ap"}}, "platformRequirements": {"uh1LznKU": [{"additionals": "cDqjaF8n", "directXVersion": "ZogduhR4", "diskSpace": "0GNoFMYN", "graphics": "2iAYNIMt", "label": "0SfRJQLq", "osVersion": "KEjWn9lT", "processor": "qGMaXD1x", "ram": "x9DSzLIC", "soundCard": "N8xxhgD3"}, {"additionals": "SqvLSGn3", "directXVersion": "zqBc6Eb1", "diskSpace": "2VtNckIm", "graphics": "suUtfff6", "label": "qeVEIQZq", "osVersion": "3OfzrjuZ", "processor": "R0sBuhHq", "ram": "lbOKO1Rw", "soundCard": "LfsaoViP"}, {"additionals": "d07g8y6K", "directXVersion": "Lr9f9AQX", "diskSpace": "VWjrvRB8", "graphics": "tzC5Q3Xr", "label": "pbakk734", "osVersion": "6Kzgt2k3", "processor": "JgEna8US", "ram": "kOzJUjar", "soundCard": "MxGurn3G"}], "1BTs5RYo": [{"additionals": "G3nXvjZr", "directXVersion": "1hW17Lrj", "diskSpace": "JBvu9RTO", "graphics": "Pvoci4TB", "label": "bUR075mz", "osVersion": "aBPBLw7q", "processor": "cgokeiZl", "ram": "TXFnFmiZ", "soundCard": "TgMS7NLR"}, {"additionals": "ZT19r3u1", "directXVersion": "Cy3UTYTd", "diskSpace": "5LTnsIWM", "graphics": "nKuLZpAW", "label": "VJ8NFYhS", "osVersion": "DUkR0K6i", "processor": "xBhp2U2l", "ram": "5zHnthJb", "soundCard": "DqIMEW8h"}, {"additionals": "j98uwMPE", "directXVersion": "mCDrG2Fr", "diskSpace": "gKWg8a3q", "graphics": "wZ4l8vo3", "label": "sNwHYpkp", "osVersion": "2kEwESnT", "processor": "lzcjAUcM", "ram": "vOOUrKG3", "soundCard": "5HO3DKnC"}], "81OYZhHQ": [{"additionals": "RCyHtN4n", "directXVersion": "kwWvgKoI", "diskSpace": "haHExOjp", "graphics": "2xwioN1H", "label": "fQsEcKPo", "osVersion": "oY1N1W2R", "processor": "X8wNoS5Q", "ram": "k7P35LjZ", "soundCard": "J2akobKQ"}, {"additionals": "VWrw0fDB", "directXVersion": "JmQJ4pXf", "diskSpace": "MoCcQdvC", "graphics": "1gTqco2x", "label": "lCOUgVov", "osVersion": "3BuoVoCr", "processor": "1QoFgK9E", "ram": "8CJ80dId", "soundCard": "Ddp8wc5G"}, {"additionals": "IYNvuByc", "directXVersion": "iAMvruS6", "diskSpace": "nU53Xqqj", "graphics": "k0UDcXJX", "label": "mim1YJje", "osVersion": "XrpzEom1", "processor": "jStxMfZk", "ram": "Sv12zdhp", "soundCard": "pV6zBlg6"}]}, "platforms": ["Android", "IOS", "Linux"], "players": ["Single", "MMO", "Coop"], "primaryGenre": "Racing", "publisher": "Y1hFsAFz", "releaseDate": "1997-04-03T00:00:00Z", "websiteUrl": "heV5N7op"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'mmbO8A1w' \
    --namespace $AB_NAMESPACE \
    --storeId 'iXjh4VaJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'eHfkl5u2' \
    --namespace $AB_NAMESPACE \
    --storeId 'VwR8su8p' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'H0FELNSg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'HK394uRI' \
    --namespace $AB_NAMESPACE \
    --storeId 'zqWXvAt6' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'ygOH16yo' \
    --itemId 'LB478Omh' \
    --namespace $AB_NAMESPACE \
    --storeId 'NYz8O85E' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'nMHzDtYZ' \
    --itemId 'GPluLmut' \
    --namespace $AB_NAMESPACE \
    --storeId 'XINgLiI4' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'uHxSCPI4' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'VcupPOKh' \
    --populateBundle 'true' \
    --region '8YVzSGoF' \
    --storeId 'LN7mcvWo' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 58, "comparison": "includes", "name": "s982eAa9", "predicateType": "SeasonTierPredicate", "value": "ljlaCsZh", "values": ["PEhpX7e9", "NpJ2VuFp", "ETVekF3w"]}, {"anyOf": 96, "comparison": "isNot", "name": "CJlCXmiv", "predicateType": "SeasonPassPredicate", "value": "sAvZ7dwG", "values": ["U43neiaX", "0jX9gnXl", "JkRWhAh8"]}, {"anyOf": 13, "comparison": "isGreaterThan", "name": "x1gaTsZK", "predicateType": "EntitlementPredicate", "value": "bxcmaDhr", "values": ["vCxqhoQu", "eImwrXkW", "7Vp5NdcT"]}]}, {"operator": "and", "predicates": [{"anyOf": 14, "comparison": "is", "name": "8QT11yYC", "predicateType": "SeasonTierPredicate", "value": "kb91tiuL", "values": ["dn1UVG38", "N98FU4jL", "7Tv4wcIm"]}, {"anyOf": 38, "comparison": "isGreaterThanOrEqual", "name": "2ybULyFW", "predicateType": "SeasonPassPredicate", "value": "H0KKX3jQ", "values": ["UAobt8xU", "0svgNEyr", "ovVt2dZp"]}, {"anyOf": 59, "comparison": "isNot", "name": "aPI5lLKJ", "predicateType": "EntitlementPredicate", "value": "5aWqnaUP", "values": ["l6XhuSHc", "VIkKZ1CH", "yAuwg6Jt"]}]}, {"operator": "or", "predicates": [{"anyOf": 41, "comparison": "isLessThan", "name": "2Hj3SHoo", "predicateType": "EntitlementPredicate", "value": "LuqdHpbq", "values": ["h75qs2QE", "9aHPagIG", "ozaLuy9O"]}, {"anyOf": 38, "comparison": "isGreaterThan", "name": "H2nPGTQV", "predicateType": "SeasonTierPredicate", "value": "biAG9l8Y", "values": ["9degAsue", "33vuuk57", "1W5ZS8L6"]}, {"anyOf": 31, "comparison": "isLessThanOrEqual", "name": "Wb67CTJF", "predicateType": "SeasonPassPredicate", "value": "D3Ac8h9c", "values": ["ZC4i5CPW", "kmlc2em3", "uRb7IDLx"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'cf8yExt2' \
    --namespace $AB_NAMESPACE \
    --storeId 'jF8v3MYv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "P1WQLHYc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'Jp030Yp9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '47' \
    --name 'dYcpXFBE' \
    --offset '100' \
    --tag '3VqLhfXG' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "utH8ggm0", "name": "1820neFh", "status": "ACTIVE", "tags": ["sSGtXTnj", "5nDldqUt", "gYUavOwa"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupByBoothName \
    --namespace $AB_NAMESPACE \
    --boothName '0VGxokXP' \
    > test.out 2>&1
eval_tap $? 112 'GetKeyGroupByBoothName' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'Lzjct6uj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "fp5XeihN", "name": "ZUuVI5W6", "status": "ACTIVE", "tags": ["TWEVZsys", "cpgpLqCI", "vWGpUOWi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'lJOoEWmP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '9C0Bt1Km' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'pE51ejRZ' \
    --namespace $AB_NAMESPACE \
    --limit '20' \
    --offset '23' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'JkXGHxAd' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 't4PzKXtN' \
    --limit '27' \
    --offset '7' \
    --orderNos '["LcejtUDC", "7FO7qKLh", "a3Gqz70O"]' \
    --sortBy 'eCgZU0lN' \
    --startTime 's99ePpdU' \
    --status 'DELETED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '7WwsPqLN' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "lgqQ1hmi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'BlOxeGYJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "POeqPOHh", "privateKey": "K5zVeMM0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'dYniBk8K' \
    --externalId 'RvXnuIIK' \
    --limit '14' \
    --notificationSource 'PAYPAL' \
    --notificationType 'CRlMWQQH' \
    --offset '84' \
    --paymentOrderNo 'FOY8Wqfe' \
    --startDate 'yGd2qe5O' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'olGMDh87' \
    --limit '28' \
    --offset '17' \
    --status 'CHARGED' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "KfakxXUa", "currencyNamespace": "ssqwZTUB", "customParameters": {"WOHLAPQa": {}, "LBwPdzMg": {}, "kpZ2VrHM": {}}, "description": "w7r2Vebr", "extOrderNo": "pHwY1Qu9", "extUserId": "ZgxfQllA", "itemType": "EXTENSION", "language": "FJj-vu", "metadata": {"MoLxRiPE": "uftphd7s", "dqVynqUp": "CpP3Nusd", "1KvQ0esw": "MDhYIdPK"}, "notifyUrl": "iIS1sCSR", "omitNotification": false, "platform": "VxbLXOf8", "price": 0, "recurringPaymentOrderNo": "CoopfoY6", "region": "9mbdgqbQ", "returnUrl": "Z9DAcTLI", "sandbox": true, "sku": "DMlf3NT7", "subscriptionId": "ECYIvAoC", "targetNamespace": "mAwqu0Lx", "targetUserId": "sPlD8PrE", "title": "ZBpgYPhJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'qzuKbQM9' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qdgzbhfB' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "tucUH7kK", "paymentMethod": "KJh9fCaU", "paymentProvider": "WALLET"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'RiXtOI2h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "aRp0pGVY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'QoGJNNkY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 19, "currencyCode": "qYD8bGpK", "notifyType": "CHARGE", "paymentProvider": "STRIPE", "salesTax": 11, "vat": 24}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'fm5cyIjy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'vPZy1Lcd' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["GooglePlay", "System", "System"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 CreateReward
# body param: body
echo '{"description": "sRT2OLuZ", "eventTopic": "MCVBq0oU", "maxAwarded": 97, "maxAwardedPerUser": 75, "namespaceExpression": "apBbyhyE", "rewardCode": "CDJwbE7N", "rewardConditions": [{"condition": "KmESjxIX", "conditionName": "kx9qzOIH", "eventName": "sTJ710kp", "rewardItems": [{"duration": 88, "itemId": "g9YFFQQ7", "quantity": 45}, {"duration": 12, "itemId": "I8ZbOKt1", "quantity": 50}, {"duration": 76, "itemId": "u2lUqwhk", "quantity": 10}]}, {"condition": "FfVBL7zY", "conditionName": "cV9Cr2ik", "eventName": "YqghVRZ6", "rewardItems": [{"duration": 87, "itemId": "FQ9hypzc", "quantity": 28}, {"duration": 51, "itemId": "PvWCEmiZ", "quantity": 96}, {"duration": 2, "itemId": "D99WKBvY", "quantity": 34}]}, {"condition": "QNhU7rsS", "conditionName": "UMDIpVAk", "eventName": "qyMOokYS", "rewardItems": [{"duration": 33, "itemId": "A1Ns3487", "quantity": 6}, {"duration": 5, "itemId": "IZyuLKff", "quantity": 22}, {"duration": 56, "itemId": "c6kTQvGA", "quantity": 8}]}], "userIdExpression": "GiJzqPWy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateReward' test.out

#- 137 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'BTUY4H7G' \
    --limit '75' \
    --offset '49' \
    --sortBy '["namespace:asc", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 137 'QueryRewards' test.out

#- 138 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'ExportRewards' test.out

#- 139 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 139 'ImportRewards' test.out

#- 140 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ZUZzZ1eS' \
    > test.out 2>&1
eval_tap $? 140 'GetReward' test.out

#- 141 UpdateReward
# body param: body
echo '{"description": "dHSDQCCL", "eventTopic": "0Cny6kKG", "maxAwarded": 22, "maxAwardedPerUser": 7, "namespaceExpression": "Tz6pyrNq", "rewardCode": "EqVe85wb", "rewardConditions": [{"condition": "gEzssiis", "conditionName": "pB9Y9A5M", "eventName": "Gb4YFgSk", "rewardItems": [{"duration": 7, "itemId": "pLdnwelZ", "quantity": 98}, {"duration": 94, "itemId": "NKIjJBXs", "quantity": 52}, {"duration": 38, "itemId": "v5SApwDn", "quantity": 62}]}, {"condition": "UHNkqPQ8", "conditionName": "qMfH0JPv", "eventName": "wBP1Yezg", "rewardItems": [{"duration": 71, "itemId": "p4eb7cQs", "quantity": 52}, {"duration": 41, "itemId": "IBePKHge", "quantity": 9}, {"duration": 89, "itemId": "XGhyfRI6", "quantity": 2}]}, {"condition": "K7CTOQtV", "conditionName": "tJwllp9l", "eventName": "h84HCWzo", "rewardItems": [{"duration": 82, "itemId": "J1FgyrxC", "quantity": 73}, {"duration": 91, "itemId": "dHRdYXIN", "quantity": 75}, {"duration": 46, "itemId": "NAvDR7xM", "quantity": 49}]}], "userIdExpression": "I8zx9P6K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId '0utKDghn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateReward' test.out

#- 142 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'eN3EmPGB' \
    > test.out 2>&1
eval_tap $? 142 'DeleteReward' test.out

#- 143 CheckEventCondition
# body param: body
echo '{"payload": {"2G5hzpcG": {}, "17naV3Fl": {}, "CECjuE7i": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'wYqQn0RM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CheckEventCondition' test.out

#- 144 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "aMK2LeVC", "userId": "vUNlHBED"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'It4iu5zy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteRewardConditionRecord' test.out

#- 145 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'ListStores' test.out

#- 146 CreateStore
# body param: body
echo '{"defaultLanguage": "95MFWlnG", "defaultRegion": "axtNbuFZ", "description": "r24AbqEB", "supportedLanguages": ["ATufLIqW", "J3xejh9m", "lQDkjru3"], "supportedRegions": ["D78An1jT", "praaKnSX", "fR6EMwZX"], "title": "dEpyHis6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreateStore' test.out

#- 147 ImportStore
eval_tap 0 147 'ImportStore # SKIP deprecated' test.out

#- 148 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'GetPublishedStore' test.out

#- 149 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'DeletePublishedStore' test.out

#- 150 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 150 'GetPublishedStoreBackup' test.out

#- 151 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'RollbackPublishedStore' test.out

#- 152 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'U3uXN1Aa' \
    > test.out 2>&1
eval_tap $? 152 'GetStore' test.out

#- 153 UpdateStore
# body param: body
echo '{"defaultLanguage": "2SnxCalE", "defaultRegion": "WI67nFiH", "description": "PtxN7RjR", "supportedLanguages": ["eSUYQeTC", "lEo0z94q", "SAaXdNdD"], "supportedRegions": ["3D4AmPYv", "N2KaqaYx", "CzKNW0UW"], "title": "x6rOxgMf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'hlza7tYR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateStore' test.out

#- 154 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'E2N6awCr' \
    > test.out 2>&1
eval_tap $? 154 'DeleteStore' test.out

#- 155 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 's9zjz5uB' \
    --action 'DELETE' \
    --itemSku '78tG5hNj' \
    --itemType 'COINS' \
    --limit '45' \
    --offset '61' \
    --selected 'false' \
    --sortBy '["updatedAt", "createdAt", "updatedAt:desc"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd '4kPK4JNX' \
    --updatedAtStart 'ThoVI9tn' \
    > test.out 2>&1
eval_tap $? 155 'QueryChanges' test.out

#- 156 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'qnBWCa5z' \
    > test.out 2>&1
eval_tap $? 156 'PublishAll' test.out

#- 157 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'KrS84ZT8' \
    > test.out 2>&1
eval_tap $? 157 'PublishSelected' test.out

#- 158 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'mV75ogB0' \
    > test.out 2>&1
eval_tap $? 158 'SelectAllRecords' test.out

#- 159 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'GRrH8hD1' \
    --action 'UPDATE' \
    --itemSku 'jjKF99eH' \
    --itemType 'INGAMEITEM' \
    --type 'ITEM' \
    --updatedAtEnd 'rVf5fNXX' \
    --updatedAtStart '7TXNvdkl' \
    > test.out 2>&1
eval_tap $? 159 'GetStatistic' test.out

#- 160 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'WQtsfmbu' \
    > test.out 2>&1
eval_tap $? 160 'UnselectAllRecords' test.out

#- 161 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'Xu7siQRE' \
    --namespace $AB_NAMESPACE \
    --storeId 'WhD6Bkye' \
    > test.out 2>&1
eval_tap $? 161 'SelectRecord' test.out

#- 162 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'clF2WkEq' \
    --namespace $AB_NAMESPACE \
    --storeId 'Ir9Wx79N' \
    > test.out 2>&1
eval_tap $? 162 'UnselectRecord' test.out

#- 163 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'A9S8A1eW' \
    --targetStoreId 'lkKVtFrI' \
    > test.out 2>&1
eval_tap $? 163 'CloneStore' test.out

#- 164 ExportStore
eval_tap 0 164 'ExportStore # SKIP deprecated' test.out

#- 165 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'Qd44J6i2' \
    --limit '46' \
    --offset '78' \
    --sku 'xuWD8lHy' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    --userId 'a6SrHdoD' \
    > test.out 2>&1
eval_tap $? 165 'QuerySubscriptions' test.out

#- 166 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qpj8W6jX' \
    > test.out 2>&1
eval_tap $? 166 'RecurringChargeSubscription' test.out

#- 167 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName '2VOCginW' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetTicketDynamic' test.out

#- 168 DecreaseTicketSale
# body param: body
echo '{"orderNo": "njjwH3qV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'MEyHQlyn' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'DecreaseTicketSale' test.out

#- 169 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName '4VrGwoHd' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'GetTicketBoothID' test.out

#- 170 IncreaseTicketSale
# body param: body
echo '{"count": 4, "orderNo": "2DPIip19"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'Xpxt8tZ2' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'IncreaseTicketSale' test.out

#- 171 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "eiQiRsIr", "value": 98}, {"id": "dbAxSHJ8", "value": 93}, {"id": "xTEx4H0F", "value": 61}], "steamUserId": "JGuVfB7o"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'D9lwVo41' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'UnlockSteamUserAchievement' test.out

#- 172 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'jIBKjBog' \
    --xboxUserId 'Bcy7W5Qq' \
    > test.out 2>&1
eval_tap $? 172 'GetXblUserAchievements' test.out

#- 173 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "kYyqlSSi", "percentComplete": 76}, {"id": "SWzXmjsF", "percentComplete": 20}, {"id": "vd1mQDZ5", "percentComplete": 47}], "serviceConfigId": "rZEHO5rU", "titleId": "C7HCsnUi", "xboxUserId": "JwiMVbRE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'zjHUnf7w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'UpdateXblUserAchievement' test.out

#- 174 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'RJ2YRLq0' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeCampaign' test.out

#- 175 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'hCW765vJ' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeEntitlement' test.out

#- 176 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'OKEBYE90' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizeFulfillment' test.out

#- 177 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'OTLa99pi' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeIntegration' test.out

#- 178 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Qg5slhwK' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizeOrder' test.out

#- 179 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'whI8mTdj' \
    > test.out 2>&1
eval_tap $? 179 'AnonymizePayment' test.out

#- 180 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'M83Q4TXY' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeSubscription' test.out

#- 181 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'H3SA1DIC' \
    > test.out 2>&1
eval_tap $? 181 'AnonymizeWallet' test.out

#- 182 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'dEbAB1pK' \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'CODE' \
    --entitlementName 'wu2t1M2S' \
    --features '["cdSV2YjS", "Q7GJRN6y", "ZzDt1Kwz"]' \
    --itemId '["OBwvPdvb", "nNtEfLQE", "x1XYTtSR"]' \
    --limit '47' \
    --offset '28' \
    > test.out 2>&1
eval_tap $? 182 'QueryUserEntitlements' test.out

#- 183 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1992-04-09T00:00:00Z", "grantedCode": "16GVdMge", "itemId": "N7SwBPNZ", "itemNamespace": "jLFoqgmY", "language": "fQMt", "quantity": 15, "region": "GtV2TN5s", "source": "REFERRAL_BONUS", "startDate": "1982-01-29T00:00:00Z", "storeId": "dUh7HhOj"}, {"endDate": "1989-06-26T00:00:00Z", "grantedCode": "4tMHVjkJ", "itemId": "8EXScdce", "itemNamespace": "uMwKgbW4", "language": "Sr_zhyC", "quantity": 26, "region": "ULj6tb0z", "source": "PROMOTION", "startDate": "1975-03-30T00:00:00Z", "storeId": "A7kM75RR"}, {"endDate": "1990-10-07T00:00:00Z", "grantedCode": "MoSr2iOq", "itemId": "6bNipQR1", "itemNamespace": "eqoyhzkM", "language": "xAn-AGmB_gc", "quantity": 38, "region": "EEdBhSx8", "source": "IAP", "startDate": "1975-07-28T00:00:00Z", "storeId": "z2EtQOEB"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'CcsJMGU8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'GrantUserEntitlement' test.out

#- 184 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'AUUV3hLE' \
    --activeOnly 'false' \
    --appId 'tuSJsO4O' \
    > test.out 2>&1
eval_tap $? 184 'GetUserAppEntitlementByAppId' test.out

#- 185 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'wxt22PQy' \
    --activeOnly 'false' \
    --limit '35' \
    --offset '9' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 185 'QueryUserEntitlementsByAppType' test.out

#- 186 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'UfrbDiLe' \
    --activeOnly 'false' \
    --entitlementClazz 'MEDIA' \
    --itemId '21W5iJko' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlementByItemId' test.out

#- 187 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'qU18KCea' \
    --activeOnly 'false' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku '7v9WUVAQ' \
    > test.out 2>&1
eval_tap $? 187 'GetUserEntitlementBySku' test.out

#- 188 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '3p78qKr6' \
    --appIds '["zJMsXy7n", "BlGK8uMt", "T1PFmz9u"]' \
    --itemIds '["ZlN9EfVZ", "AbVCWRGu", "mTP9t16H"]' \
    --skus '["IOAxOeDK", "tn9cHGDQ", "YHuRknLH"]' \
    > test.out 2>&1
eval_tap $? 188 'ExistsAnyUserActiveEntitlement' test.out

#- 189 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '1wCfCjFb' \
    --itemIds '["1wl3XGyU", "0at1ZQZW", "6PFOexnL"]' \
    > test.out 2>&1
eval_tap $? 189 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 190 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'z0JaiH3e' \
    --appId '1uGnq4FG' \
    > test.out 2>&1
eval_tap $? 190 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 191 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'pE1pAaSD' \
    --entitlementClazz 'APP' \
    --itemId 'FG6vhadc' \
    > test.out 2>&1
eval_tap $? 191 'GetUserEntitlementOwnershipByItemId' test.out

#- 192 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'XcWkvPFN' \
    --ids '["ybf1xHW4", "U06GDVPU", "rValDTIg"]' \
    > test.out 2>&1
eval_tap $? 192 'GetUserEntitlementOwnershipByItemIds' test.out

#- 193 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'HSu4G76x' \
    --entitlementClazz 'APP' \
    --sku 'zGD9JlGV' \
    > test.out 2>&1
eval_tap $? 193 'GetUserEntitlementOwnershipBySku' test.out

#- 194 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'aT6hzC7d' \
    --entitlementIds 't23T5w9a' \
    > test.out 2>&1
eval_tap $? 194 'RevokeUserEntitlements' test.out

#- 195 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'd1Fqmf5p' \
    --namespace $AB_NAMESPACE \
    --userId 'N0BKIRle' \
    > test.out 2>&1
eval_tap $? 195 'GetUserEntitlement' test.out

#- 196 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1997-11-12T00:00:00Z", "nullFieldList": ["jeTxz9jx", "DaK765qY", "rs7Izrrc"], "startDate": "1975-09-28T00:00:00Z", "status": "ACTIVE", "useCount": 64}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'W1ldWQbr' \
    --namespace $AB_NAMESPACE \
    --userId 'HjerTVul' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'UpdateUserEntitlement' test.out

#- 197 ConsumeUserEntitlement
# body param: body
echo '{"options": ["AdTpTNYL", "QMwexrFx", "P3JnCMeC"], "requestId": "t9oR0hgm", "useCount": 24}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'esBrP6lD' \
    --namespace $AB_NAMESPACE \
    --userId 'HE1hEJnI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'ConsumeUserEntitlement' test.out

#- 198 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'j6dOQymV' \
    --namespace $AB_NAMESPACE \
    --userId 'spEOcCDk' \
    > test.out 2>&1
eval_tap $? 198 'DisableUserEntitlement' test.out

#- 199 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'GTQlSc3m' \
    --namespace $AB_NAMESPACE \
    --userId 'Qgz2uiOg' \
    > test.out 2>&1
eval_tap $? 199 'EnableUserEntitlement' test.out

#- 200 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'h1S5Ifu3' \
    --namespace $AB_NAMESPACE \
    --userId 'NEvYRQ7d' \
    > test.out 2>&1
eval_tap $? 200 'GetUserEntitlementHistories' test.out

#- 201 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '0eZCcRjd' \
    --namespace $AB_NAMESPACE \
    --userId 'miXaAkYE' \
    > test.out 2>&1
eval_tap $? 201 'RevokeUserEntitlement' test.out

#- 202 FulfillItem
# body param: body
echo '{"duration": 75, "endDate": "1991-03-26T00:00:00Z", "itemId": "iscuhufm", "itemSku": "Px7rDgmC", "language": "rVNtwKgV", "order": {"currency": {"currencyCode": "Z2quZ52m", "currencySymbol": "nXCvGBX7", "currencyType": "VIRTUAL", "decimals": 87, "namespace": "dcpxvO1W"}, "ext": {"ecOvfk5u": {}, "kAh2BU01": {}, "AMSv9hRF": {}}, "free": true}, "orderNo": "SGRV5oHO", "origin": "Twitch", "quantity": 22, "region": "wzhNcidW", "source": "REDEEM_CODE", "startDate": "1996-12-05T00:00:00Z", "storeId": "EVt3x8j2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'sk4htrai' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'FulfillItem' test.out

#- 203 RedeemCode
# body param: body
echo '{"code": "ENmK7L2a", "language": "ZAqB-ASAU_461", "region": "szwMsbri"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'nYaBbxQJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'RedeemCode' test.out

#- 204 FulfillRewards
# body param: body
echo '{"origin": "IOS", "rewards": [{"currency": {"currencyCode": "PGnca16A", "namespace": "vvcBvgYA"}, "item": {"itemId": "t0aW9XtO", "itemSku": "p0doGYwD", "itemType": "OnduUDyx"}, "quantity": 1, "type": "ITEM"}, {"currency": {"currencyCode": "jea04ulV", "namespace": "FXixJv9B"}, "item": {"itemId": "dobH2ip2", "itemSku": "Nt9nOGcH", "itemType": "uSirYbG7"}, "quantity": 89, "type": "CURRENCY"}, {"currency": {"currencyCode": "xlJghuAP", "namespace": "RXHsrupS"}, "item": {"itemId": "GiXLqRtj", "itemSku": "x6pSDp4t", "itemType": "iqYqKAGw"}, "quantity": 4, "type": "ITEM"}], "source": "REWARD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId '7LooxLx9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'FulfillRewards' test.out

#- 205 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'XI4tFotF' \
    --endTime 'Ap1YiGxi' \
    --limit '37' \
    --offset '46' \
    --productId 'rXD8huKr' \
    --startTime '9VsOE0CV' \
    --status 'FAILED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 205 'QueryUserIAPOrders' test.out

#- 206 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'ipsnJuLN' \
    > test.out 2>&1
eval_tap $? 206 'QueryAllUserIAPOrders' test.out

#- 207 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'JLij67sC' \
    --endTime 'QtZr7C83' \
    --limit '53' \
    --offset '39' \
    --startTime 'Mj2a4Ihz' \
    --status 'FAIL' \
    --type 'APPLE' \
    > test.out 2>&1
eval_tap $? 207 'QueryUserIAPConsumeHistory' test.out

#- 208 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "tgm", "productId": "aZhpCRjN", "region": "1hTf9Rdi", "type": "APPLE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'qUoLri0X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'MockFulfillIAPItem' test.out

#- 209 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'fsmme8qc' \
    --itemId 'qWJDEAfD' \
    --limit '16' \
    --offset '76' \
    --status 'DELETED' \
    > test.out 2>&1
eval_tap $? 209 'QueryUserOrders' test.out

#- 210 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "imiPlLKM", "currencyNamespace": "NSvl4zeZ", "discountedPrice": 89, "ext": {"5qFc3YMC": {}, "yf2WgvfN": {}, "2T5UcJWG": {}}, "itemId": "Dg8I83Gm", "language": "Qm06kRCH", "options": {"skipPriceValidation": true}, "platform": "Xbox", "price": 66, "quantity": 67, "region": "oGuqe3tQ", "returnUrl": "dKHT5L2Z", "sandbox": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'SgExBDpI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'AdminCreateUserOrder' test.out

#- 211 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'SCsB19lD' \
    --itemId '9W4rYVMn' \
    > test.out 2>&1
eval_tap $? 211 'CountOfPurchasedItem' test.out

#- 212 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'pRNJkB5P' \
    --userId 'cTezdg3w' \
    > test.out 2>&1
eval_tap $? 212 'GetUserOrder' test.out

#- 213 UpdateUserOrderStatus
# body param: body
echo '{"status": "DELETED", "statusReason": "K0PGXnOz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'ipgd7dpU' \
    --userId 'MEor0jMy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'UpdateUserOrderStatus' test.out

#- 214 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ZxLn5Xzk' \
    --userId 'VvckXJdP' \
    > test.out 2>&1
eval_tap $? 214 'FulfillUserOrder' test.out

#- 215 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'aB3Ds978' \
    --userId '1rlwqThB' \
    > test.out 2>&1
eval_tap $? 215 'GetUserOrderGrant' test.out

#- 216 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'DbAks1MG' \
    --userId 'eV7YZ7E3' \
    > test.out 2>&1
eval_tap $? 216 'GetUserOrderHistories' test.out

#- 217 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "Xrxz2hT4"}, "authorisedTime": "1972-12-31T00:00:00Z", "chargebackReversedTime": "1974-07-05T00:00:00Z", "chargebackTime": "1989-04-18T00:00:00Z", "chargedTime": "1990-01-13T00:00:00Z", "createdTime": "1973-12-26T00:00:00Z", "currency": {"currencyCode": "nZaY7lsg", "currencySymbol": "fljhq5zi", "currencyType": "REAL", "decimals": 100, "namespace": "G9euhCjb"}, "customParameters": {"p2qdd9ms": {}, "ccGs9pZK": {}, "xgVTrcEa": {}}, "extOrderNo": "Pz8BaNTA", "extTxId": "2vath9fw", "extUserId": "2sxG7lvj", "issuedAt": "1996-10-01T00:00:00Z", "metadata": {"MT5mbjbV": "LF1MZXZc", "NaXTSfrY": "jsGhriNV", "8Rw7eu7L": "YyKribaG"}, "namespace": "1fZIBnun", "nonceStr": "eiHAba1Y", "paymentMethod": "A7eDM7QO", "paymentMethodFee": 26, "paymentOrderNo": "ckunkwPJ", "paymentProvider": "WXPAY", "paymentProviderFee": 50, "paymentStationUrl": "UqnQgpbk", "price": 68, "refundedTime": "1983-01-09T00:00:00Z", "salesTax": 52, "sandbox": true, "sku": "pdyGpvrl", "status": "INIT", "statusReason": "U4m4LLrv", "subscriptionId": "uGWP9VsZ", "subtotalPrice": 91, "targetNamespace": "SKb1CN71", "targetUserId": "jbp4jzFN", "tax": 15, "totalPrice": 44, "totalTax": 79, "txEndTime": "1980-10-16T00:00:00Z", "type": "huZIwW5F", "userId": "P8Qe37C5", "vat": 28}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'LxmstYai' \
    --userId 'XX2YAbCV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'ProcessUserOrderNotification' test.out

#- 218 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'jlKX0kkV' \
    --userId 'fo6udGeW' \
    > test.out 2>&1
eval_tap $? 218 'DownloadUserOrderReceipt' test.out

#- 219 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "kpO1QCAr", "currencyNamespace": "XeWNzCAv", "customParameters": {"6vzmxFOC": {}, "tPmUqbPo": {}, "gIBmqdH9": {}}, "description": "wxzIi0PM", "extOrderNo": "H4gCGXUo", "extUserId": "bvdMdIRY", "itemType": "OPTIONBOX", "language": "XGfH_DO", "metadata": {"TGLOqeD1": "lmD0zqn6", "1JD1Zmru": "voQwp722", "hmRbHCer": "s3KY2eYk"}, "notifyUrl": "6c3T8kz9", "omitNotification": false, "platform": "9HREYReR", "price": 60, "recurringPaymentOrderNo": "Q3Se6F5E", "region": "IC0fTacI", "returnUrl": "k19SJPFe", "sandbox": true, "sku": "Y1LLDpz9", "subscriptionId": "ci7E9cxO", "title": "Jxs0zVyS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId '0pdCPjzw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'CreateUserPaymentOrder' test.out

#- 220 RefundUserPaymentOrder
# body param: body
echo '{"description": "eyY7BHOs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'RIs5HFeR' \
    --userId 'Q8fAnvNl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'RefundUserPaymentOrder' test.out

#- 221 ApplyUserRedemption
# body param: body
echo '{"code": "7AlyCCni", "orderNo": "yjP0M7BS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'nabh3nyy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'ApplyUserRedemption' test.out

#- 222 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'tFXHp6NY' \
    --chargeStatus 'SETUP' \
    --itemId '9IzwBVJn' \
    --limit '52' \
    --offset '66' \
    --sku 'QBiU2KEk' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 222 'QueryUserSubscriptions' test.out

#- 223 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'sQATGySv' \
    --excludeSystem 'false' \
    --limit '74' \
    --offset '11' \
    --subscriptionId 'NVq2xhCs' \
    > test.out 2>&1
eval_tap $? 223 'GetUserSubscriptionActivities' test.out

#- 224 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 50, "itemId": "U1Y4XfGm", "language": "wz2e5dj3", "reason": "OOhlEjcR", "region": "7p0wJZ5W", "source": "MHKltjvy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'dvKzeYWB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'PlatformSubscribeSubscription' test.out

#- 225 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'rDy10mgi' \
    --itemId 'DN3A6MwR' \
    > test.out 2>&1
eval_tap $? 225 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 226 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'vcxXnTff' \
    --userId 'lR65DD9r' \
    > test.out 2>&1
eval_tap $? 226 'GetUserSubscription' test.out

#- 227 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'keQl9g3z' \
    --userId 't66t5B1o' \
    > test.out 2>&1
eval_tap $? 227 'DeleteUserSubscription' test.out

#- 228 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "CGQKFWl9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '46INOM6u' \
    --userId 'cxF2BgIA' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'CancelSubscription' test.out

#- 229 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 66, "reason": "ZeJy9tZF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'lZuv156g' \
    --userId 'yQQCqPOn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'GrantDaysToSubscription' test.out

#- 230 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'F4NNoVBG' \
    --userId 'eL5GwYUk' \
    --excludeFree 'true' \
    --limit '90' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 230 'GetUserSubscriptionBillingHistories' test.out

#- 231 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "CDuuVNRp"}, "authorisedTime": "1989-08-30T00:00:00Z", "chargebackReversedTime": "1992-12-01T00:00:00Z", "chargebackTime": "1981-07-10T00:00:00Z", "chargedTime": "1979-04-07T00:00:00Z", "createdTime": "1998-12-21T00:00:00Z", "currency": {"currencyCode": "mJPHesaX", "currencySymbol": "tDBPlP7M", "currencyType": "VIRTUAL", "decimals": 16, "namespace": "bPObRQKD"}, "customParameters": {"EquWr16t": {}, "SLLuKVMV": {}, "9mF8A4jv": {}}, "extOrderNo": "V3K43hWL", "extTxId": "1HVHRAoQ", "extUserId": "TON4nQeM", "issuedAt": "1998-07-03T00:00:00Z", "metadata": {"8EMj2qPo": "f00pS64m", "XYp2dj0q": "wiGocPA0", "WhdUye8d": "GLl4Pele"}, "namespace": "Nq7WJIVw", "nonceStr": "VwL0hWOS", "paymentMethod": "w9EwMbv9", "paymentMethodFee": 83, "paymentOrderNo": "e4Ud7K2f", "paymentProvider": "CHECKOUT", "paymentProviderFee": 96, "paymentStationUrl": "UsF0MdSk", "price": 35, "refundedTime": "1978-12-17T00:00:00Z", "salesTax": 33, "sandbox": true, "sku": "FkPzg9Z8", "status": "REFUNDING", "statusReason": "4d1HnGW2", "subscriptionId": "0ngYxxIa", "subtotalPrice": 91, "targetNamespace": "5AQl3fHJ", "targetUserId": "AegAWqKf", "tax": 44, "totalPrice": 74, "totalTax": 6, "txEndTime": "1995-06-23T00:00:00Z", "type": "6iPVwl8G", "userId": "miRYufvs", "vat": 35}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zRGCaSRC' \
    --userId '1Galvvhe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'ProcessUserSubscriptionNotification' test.out

#- 232 AcquireUserTicket
# body param: body
echo '{"count": 87, "orderNo": "4SkoOObi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName '2c0oyOII' \
    --namespace $AB_NAMESPACE \
    --userId 'FmbGcoyr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AcquireUserTicket' test.out

#- 233 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'b2VotKOw' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserCurrencyWallets' test.out

#- 234 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'eSvLLLpQ' \
    --namespace $AB_NAMESPACE \
    --userId 'RtDamMt7' \
    --limit '96' \
    --offset '46' \
    > test.out 2>&1
eval_tap $? 234 'ListUserCurrencyTransactions' test.out

#- 235 CheckWallet
eval_tap 0 235 'CheckWallet # SKIP deprecated' test.out

#- 236 CreditUserWallet
# body param: body
echo '{"amount": 19, "expireAt": "1976-10-24T00:00:00Z", "origin": "Stadia", "reason": "H7xynV5b", "source": "GIFT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'dCX3BvM7' \
    --namespace $AB_NAMESPACE \
    --userId 'MnXRsu45' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'CreditUserWallet' test.out

#- 237 PayWithUserWallet
# body param: body
echo '{"amount": 26, "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'iZf7XIGZ' \
    --namespace $AB_NAMESPACE \
    --userId 'LYl8nt4e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'PayWithUserWallet' test.out

#- 238 GetUserWallet
eval_tap 0 238 'GetUserWallet # SKIP deprecated' test.out

#- 239 DebitUserWallet
eval_tap 0 239 'DebitUserWallet # SKIP deprecated' test.out

#- 240 DisableUserWallet
eval_tap 0 240 'DisableUserWallet # SKIP deprecated' test.out

#- 241 EnableUserWallet
eval_tap 0 241 'EnableUserWallet # SKIP deprecated' test.out

#- 242 ListUserWalletTransactions
eval_tap 0 242 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 243 QueryWallets
eval_tap 0 243 'QueryWallets # SKIP deprecated' test.out

#- 244 GetWallet
eval_tap 0 244 'GetWallet # SKIP deprecated' test.out

#- 245 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'h012Z7MU' \
    --end 'bCfQhvrO' \
    --start 'eLStTi9I' \
    > test.out 2>&1
eval_tap $? 245 'SyncOrders' test.out

#- 246 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["tNQmjmuo", "VmED9Kou", "XGaQLcSk"], "apiKey": "T0acz1U0", "authoriseAsCapture": true, "blockedPaymentMethods": ["m9cyoUba", "gJkinur6", "E8IQPWqa"], "clientKey": "dcs1lYv7", "dropInSettings": "gdFU9XHD", "liveEndpointUrlPrefix": "x38ulFE2", "merchantAccount": "FwVdkTgN", "notificationHmacKey": "kWDcNXpe", "notificationPassword": "M1XwvWHu", "notificationUsername": "Mi3ULtT6", "returnUrl": "otTHW9ie", "settings": "NpoPiix5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'TestAdyenConfig' test.out

#- 247 TestAliPayConfig
# body param: body
echo '{"appId": "HcM5rXct", "privateKey": "In0Vw72R", "publicKey": "5S2Qx4ri", "returnUrl": "n83GBRqM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'TestAliPayConfig' test.out

#- 248 TestCheckoutConfig
# body param: body
echo '{"publicKey": "AQ0TGAX2", "secretKey": "UlUYQQGz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'TestCheckoutConfig' test.out

#- 249 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'M9eDReSi' \
    --region '5KvXQFxX' \
    > test.out 2>&1
eval_tap $? 249 'DebugMatchedPaymentMerchantConfig' test.out

#- 250 TestPayPalConfig
# body param: body
echo '{"clientID": "07wIM5co", "clientSecret": "p4KuBJI1", "returnUrl": "quTTHJC5", "webHookId": "P4yIM7Na"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'TestPayPalConfig' test.out

#- 251 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["cLmdmO3W", "N3jAfAT4", "1wQaYeeB"], "publishableKey": "nsLzzN2c", "secretKey": "zHLFRXqn", "webhookSecret": "qDavNLnb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'TestStripeConfig' test.out

#- 252 TestWxPayConfig
# body param: body
echo '{"appId": "6Ah5EoA2", "key": "hC4qvPyk", "mchid": "QZChNykf", "returnUrl": "ZIeGp6b0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'TestWxPayConfig' test.out

#- 253 TestXsollaConfig
# body param: body
echo '{"apiKey": "3AMPvXCO", "flowCompletionUrl": "orOJBgAD", "merchantId": 40, "projectId": 35, "projectSecretKey": "nAjKmYBY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'TestXsollaConfig' test.out

#- 254 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'rhIJRkUL' \
    > test.out 2>&1
eval_tap $? 254 'GetPaymentMerchantConfig' test.out

#- 255 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["xOSyDTYm", "LR6H3gZ4", "OCWzQJdS"], "apiKey": "0lqA8gwV", "authoriseAsCapture": true, "blockedPaymentMethods": ["8o7ViJoq", "MtpYTQFD", "qhkFDX3d"], "clientKey": "99iFskjC", "dropInSettings": "TXzzWa8I", "liveEndpointUrlPrefix": "jkdjOxLs", "merchantAccount": "vd12KEtJ", "notificationHmacKey": "xvvyh7PJ", "notificationPassword": "leE79uSa", "notificationUsername": "hDfWJmr0", "returnUrl": "kkKsWOSy", "settings": "fBLf181l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'I07nrw3V' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateAdyenConfig' test.out

#- 256 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '8bSENVV3' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 256 'TestAdyenConfigById' test.out

#- 257 UpdateAliPayConfig
# body param: body
echo '{"appId": "yh3QKLwd", "privateKey": "9YoiAEFa", "publicKey": "65VZhtAz", "returnUrl": "UnlLCL01"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'lN0dNhh8' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateAliPayConfig' test.out

#- 258 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'hGWV6aKj' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 258 'TestAliPayConfigById' test.out

#- 259 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "2hFRw6q0", "secretKey": "jNlYeqQm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'RVJ8Fa4o' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateCheckoutConfig' test.out

#- 260 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'CPOKyPsg' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 260 'TestCheckoutConfigById' test.out

#- 261 UpdatePayPalConfig
# body param: body
echo '{"clientID": "v4PQ4q6m", "clientSecret": "wPjt7yc0", "returnUrl": "erQeqF3s", "webHookId": "dOXXpT7c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'emkqklT1' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdatePayPalConfig' test.out

#- 262 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'DhQM8eyL' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 262 'TestPayPalConfigById' test.out

#- 263 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["sSPHMhJo", "uW76omAv", "7uBS536w"], "publishableKey": "UedLBsX6", "secretKey": "KbyOYHxF", "webhookSecret": "wRbI7PKe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'GBgQ1r2Q' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdateStripeConfig' test.out

#- 264 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'UggedF9s' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 264 'TestStripeConfigById' test.out

#- 265 UpdateWxPayConfig
# body param: body
echo '{"appId": "CZhvJJmj", "key": "1M2XdzYY", "mchid": "mtydEBqv", "returnUrl": "dUvfAm83"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'nqrglZMO' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'UpdateWxPayConfig' test.out

#- 266 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'JxwBn77A' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 266 'UpdateWxPayConfigCert' test.out

#- 267 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'MYb9h58a' \
    > test.out 2>&1
eval_tap $? 267 'TestWxPayConfigById' test.out

#- 268 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "tK7bsoEh", "flowCompletionUrl": "BaV8wEJP", "merchantId": 6, "projectId": 56, "projectSecretKey": "KAEbCsTb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'oUx4MP9z' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdateXsollaConfig' test.out

#- 269 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'MbiCOGzo' \
    > test.out 2>&1
eval_tap $? 269 'TestXsollaConfigById' test.out

#- 270 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "MEDIUM", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'X0Z2RynC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'UpdateXsollaUIConfig' test.out

#- 271 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '64' \
    --namespace_ '5znhxTj2' \
    --offset '69' \
    --region 'DS4vKOor' \
    > test.out 2>&1
eval_tap $? 271 'QueryPaymentProviderConfig' test.out

#- 272 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "akeCwdU5", "region": "123Y3eA5", "sandboxTaxJarApiToken": "pFMU8eaT", "specials": ["WALLET", "ALIPAY", "CHECKOUT"], "taxJarApiToken": "hslbWFfR", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'CreatePaymentProviderConfig' test.out

#- 273 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 273 'GetAggregatePaymentProviders' test.out

#- 274 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'eqW08Klz' \
    --region 'KKydfYEA' \
    > test.out 2>&1
eval_tap $? 274 'DebugMatchedPaymentProviderConfig' test.out

#- 275 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 275 'GetSpecialPaymentProviders' test.out

#- 276 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "6IzKQGE1", "region": "9Ih3ULXx", "sandboxTaxJarApiToken": "8syq52AH", "specials": ["WXPAY", "ADYEN", "STRIPE"], "taxJarApiToken": "WrVKCmC0", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id '54BN8UV2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'UpdatePaymentProviderConfig' test.out

#- 277 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'oNwFLSRG' \
    > test.out 2>&1
eval_tap $? 277 'DeletePaymentProviderConfig' test.out

#- 278 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 278 'GetPaymentTaxConfig' test.out

#- 279 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "gwmpREXG", "taxJarApiToken": "qIqZGxdn", "taxJarEnabled": false, "taxJarProductCodesMapping": {"HSdUxHmG": "fd2bjfqT", "KP64SIUF": "BiqQ5EYP", "DwhsVx6V": "UWe8leZ2"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'UpdatePaymentTaxConfig' test.out

#- 280 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'HFEpk8AP' \
    --end '16b78KBj' \
    --start 'khZYTnkL' \
    > test.out 2>&1
eval_tap $? 280 'SyncPaymentOrders' test.out

#- 281 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'pJpuU5bP' \
    --storeId 'ScZyeS2z' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetRootCategories' test.out

#- 282 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'pUiQdikM' \
    --storeId 'Js7ApsOX' \
    > test.out 2>&1
eval_tap $? 282 'DownloadCategories' test.out

#- 283 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'izraNzt0' \
    --namespace $AB_NAMESPACE \
    --language 'DWu6XuGt' \
    --storeId 'qsSnVpjw' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetCategory' test.out

#- 284 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'x407ErJR' \
    --namespace $AB_NAMESPACE \
    --language 'FUgC9tip' \
    --storeId 'sr0EpsmY' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetChildCategories' test.out

#- 285 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'GQA5PbVt' \
    --namespace $AB_NAMESPACE \
    --language 'yFkgw9HG' \
    --storeId 'kMzgAiEx' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetDescendantCategories' test.out

#- 286 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 286 'PublicListCurrencies' test.out

#- 287 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language '7eNui351' \
    --region 'tngX3Xrf' \
    --storeId '0FkYPYuh' \
    --appId '6abki7Gk' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetItemByAppId' test.out

#- 288 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --baseAppId 'Erhe1PmL' \
    --categoryPath 'LIBIOMD4' \
    --features '8WGYqOCk' \
    --includeSubCategoryItem 'false' \
    --itemType 'CODE' \
    --language 'yN43QoOm' \
    --limit '86' \
    --offset '63' \
    --region 'r7JLf02Z' \
    --sortBy '["name", "updatedAt"]' \
    --storeId 'Dq9AIJkY' \
    --tags 'oSFNEYLh' \
    > test.out 2>&1
eval_tap $? 288 'PublicQueryItems' test.out

#- 289 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'NnaK2tlO' \
    --region 'ZGTMluXT' \
    --storeId 'WODZVJlQ' \
    --sku 'njeenW81' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetItemBySku' test.out

#- 290 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'Y7eUP5aD' \
    --region 'SPVBbUBA' \
    --storeId 'Shmi55Pu' \
    --itemIds 'Yb1DGNH3' \
    > test.out 2>&1
eval_tap $? 290 'PublicBulkGetItems' test.out

#- 291 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["xaSvvmcO", "vBIGjGUs", "GswzoXUP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicValidateItemPurchaseCondition' test.out

#- 292 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'APP' \
    --limit '66' \
    --offset '63' \
    --region 'MffebbbX' \
    --storeId 'FMPa7apA' \
    --keyword 'GRxdXbPm' \
    --language 'ImyVj55H' \
    > test.out 2>&1
eval_tap $? 292 'PublicSearchItems' test.out

#- 293 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'Ml17Urei' \
    --namespace $AB_NAMESPACE \
    --language 'CUfbkSnl' \
    --region 'aTArxHIx' \
    --storeId 'WMKONX2B' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetApp' test.out

#- 294 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'kre40Hxl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 294 'PublicGetItemDynamicData' test.out

#- 295 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId '2mdVXoMH' \
    --namespace $AB_NAMESPACE \
    --language 'BWbFPxqp' \
    --populateBundle 'false' \
    --region '9ZyliKDM' \
    --storeId 'UM8bY3FQ' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetItem' test.out

#- 296 GetPaymentCustomization
eval_tap 0 296 'GetPaymentCustomization # SKIP deprecated' test.out

#- 297 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "FelE6l33", "paymentProvider": "ALIPAY", "returnUrl": "0NHuWm3E", "ui": "iyYC4A80", "zipCode": "AWWyJemt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicGetPaymentUrl' test.out

#- 298 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'KFST9Wx5' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetPaymentMethods' test.out

#- 299 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ws6GCELP' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetUnpaidPaymentOrder' test.out

#- 300 Pay
# body param: body
echo '{"token": "2wMuvMiR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'kmhB80hp' \
    --paymentProvider 'PAYPAL' \
    --zipCode 'ysATW6tS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'Pay' test.out

#- 301 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'DP4NZDkC' \
    > test.out 2>&1
eval_tap $? 301 'PublicCheckPaymentOrderPaidStatus' test.out

#- 302 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'WXPAY' \
    --region '1gaLc58Q' \
    > test.out 2>&1
eval_tap $? 302 'GetPaymentPublicConfig' test.out

#- 303 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'RsibHtKz' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetQRCode' test.out

#- 304 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'r8KeBOVD' \
    --foreinginvoice 'T6AgMCYB' \
    --invoiceId 'YRGuYlLD' \
    --payload '7Saig3OK' \
    --redirectResult '8F3HUU6v' \
    --resultCode '99a8wX63' \
    --sessionId '2AIpuVjo' \
    --status '2yUoNLjL' \
    --token 'nWCleylw' \
    --type 'Pe6Tbc8N' \
    --userId '7U6qcfxJ' \
    --orderNo 'GQr9tiWc' \
    --paymentOrderNo 'TRdpFZJd' \
    --paymentProvider 'CHECKOUT' \
    --returnUrl 'dWmOC5sh' \
    > test.out 2>&1
eval_tap $? 304 'PublicNormalizePaymentReturnUrl' test.out

#- 305 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'tAgmwB2f' \
    --paymentOrderNo 'P3qWlm6K' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 305 'GetPaymentTaxValue' test.out

#- 306 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'KG3mzkWC' \
    > test.out 2>&1
eval_tap $? 306 'GetRewardByCode' test.out

#- 307 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'fn1xOpjw' \
    --limit '75' \
    --offset '66' \
    --sortBy '["rewardCode", "namespace:desc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 307 'QueryRewards1' test.out

#- 308 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'x7KLbg1v' \
    > test.out 2>&1
eval_tap $? 308 'GetReward1' test.out

#- 309 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 309 'PublicListStores' test.out

#- 310 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["5oQBhOHb", "CmVh7FzJ", "CiqlNvv5"]' \
    --itemIds '["w8bjWFVw", "KGG2mmyh", "jo6T0RH3"]' \
    --skus '["hib7YZZ7", "xt2SqOmk", "5robRjWz"]' \
    > test.out 2>&1
eval_tap $? 310 'PublicExistsAnyMyActiveEntitlement' test.out

#- 311 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'mzevpUFr' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 312 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'APP' \
    --itemId 'NxzR17hp' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 313 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'KqAMp05c' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 314 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["5FmoxxHW", "TPM0l4CA", "lVP6JuEU"]' \
    --itemIds '["i2Qxwjxr", "v5cCgLAx", "zCiJmGlY"]' \
    --skus '["vjlaxegK", "PsgRpKCl", "xwsHr02A"]' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetEntitlementOwnershipToken' test.out

#- 315 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'Z6pOMXIm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 315 'PublicGetMyWallet' test.out

#- 316 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "f38U3zAE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'BCkzVbtU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'SyncEpicGameDLC' test.out

#- 317 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 69}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'pb8lAi1e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicSyncPsnDlcInventory' test.out

#- 318 SyncSteamDLC
# body param: body
echo '{"appId": "JgXoq2lo", "steamId": "W9GpmXr2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'rtAwJZ6F' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'SyncSteamDLC' test.out

#- 319 SyncXboxDLC
# body param: body
echo '{"xstsToken": "x3VqSVTr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'HpLJ5Q7C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'SyncXboxDLC' test.out

#- 320 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '6K4FO6KN' \
    --appType 'GAME' \
    --entitlementClazz 'APP' \
    --entitlementName '72CHt6Bx' \
    --features '["ht0JWzFB", "QtVtpAMW", "uRtHshig"]' \
    --itemId '["ETqf0bUp", "g6TktYXi", "KbF2o0IF"]' \
    --limit '55' \
    --offset '4' \
    > test.out 2>&1
eval_tap $? 320 'PublicQueryUserEntitlements' test.out

#- 321 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'cJFwg1hj' \
    --appId 'ArCdgBYO' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetUserAppEntitlementByAppId' test.out

#- 322 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'xkg5ePRF' \
    --limit '98' \
    --offset '49' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 322 'PublicQueryUserEntitlementsByAppType' test.out

#- 323 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'aNGmrrwY' \
    --entitlementClazz 'APP' \
    --itemId 'CoRC3nD9' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetUserEntitlementByItemId' test.out

#- 324 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'BqF91gFJ' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'vxmeFhHa' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserEntitlementBySku' test.out

#- 325 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '45di69y3' \
    --appIds '["T5iIA7P8", "HQAs2Xz2", "CGI4Y6EF"]' \
    --itemIds '["2rHx5Sk5", "7DC5GZwP", "jmaO8qu2"]' \
    --skus '["jjUk8vWM", "gPHoE59b", "GIumujcV"]' \
    > test.out 2>&1
eval_tap $? 325 'PublicExistsAnyUserActiveEntitlement' test.out

#- 326 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'djmlckwj' \
    --appId 'x1yFvHTI' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 327 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'hiwnxics' \
    --entitlementClazz 'MEDIA' \
    --itemId 'w13r54Ln' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 328 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'i4fDTOtj' \
    --ids '["5uJ4EC9A", "XyYBXaxz", "AFVNeSR1"]' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 329 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'gUaeEgw5' \
    --entitlementClazz 'CODE' \
    --sku 'BrNOnhoh' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 330 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '8nEZTgEA' \
    --namespace $AB_NAMESPACE \
    --userId 'tHaPmxDD' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetUserEntitlement' test.out

#- 331 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["xL52L6DT", "nr1go8NX", "aSkCLknZ"], "requestId": "OgCe26ef", "useCount": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'nR7fTnTQ' \
    --namespace $AB_NAMESPACE \
    --userId '5QkaurGE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicConsumeUserEntitlement' test.out

#- 332 PublicRedeemCode
# body param: body
echo '{"code": "2S4sOfsl", "language": "JBP_zGKp", "region": "4Dep0fvV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'Eu3qenAo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicRedeemCode' test.out

#- 333 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "xmRg_504", "productId": "7rXLgrQh", "receiptData": "AnQWUQ1V", "region": "4sJZ1gxJ", "transactionId": "yIQ2pfC8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '62gl9J9l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicFulfillAppleIAPItem' test.out

#- 334 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "CrYRVdSD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'ScyGnIJV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'SyncEpicGamesInventory' test.out

#- 335 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "od", "orderId": "kvSOteOP", "packageName": "PlOg1Qgb", "productId": "74Zy3JS8", "purchaseTime": 7, "purchaseToken": "kZjcOehB", "region": "ptTG8byg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '4AeHZg1G' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PublicFulfillGoogleIAPItem' test.out

#- 336 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "RqoQawWA", "price": 0.21606193216686154, "productId": "oVd8gE2F", "serviceLabel": 51}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'MSFYefAg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'PublicReconcilePlayStationStore' test.out

#- 337 SyncStadiaEntitlement
# body param: body
echo '{"appId": "nNgDWtig", "language": "bbL-xFNq_732", "region": "msEhxBvF", "stadiaPlayerId": "96vtZwXz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Y86EsF9N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'SyncStadiaEntitlement' test.out

#- 338 SyncSteamInventory
# body param: body
echo '{"appId": "qNijCeB1", "currencyCode": "WsURovmI", "language": "qq-SdPI", "price": 0.11923985705596796, "productId": "DBC016DV", "region": "DHATVdGF", "steamId": "9hyvjxnJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'mmTIdNGO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'SyncSteamInventory' test.out

#- 339 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "pPMstRJw", "language": "oxt_kCFM", "region": "l4Hl67SO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '27WbV9II' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'SyncTwitchDropsEntitlement' test.out

#- 340 SyncXboxInventory
# body param: body
echo '{"currencyCode": "xUZYC9lQ", "price": 0.4701467628375443, "productId": "7mbi2Iy2", "xstsToken": "MhMAN3AR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'L6yfL73l' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'SyncXboxInventory' test.out

#- 341 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'PbX0Bzjs' \
    --itemId 'WJqrYE01' \
    --limit '98' \
    --offset '99' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 341 'PublicQueryUserOrders' test.out

#- 342 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "SeRxlKcY", "discountedPrice": 88, "ext": {"0n7KF5dn": {}, "ECWyNjJJ": {}, "Hr2Z74du": {}}, "itemId": "rvSPdVvu", "language": "LG-700", "price": 79, "quantity": 81, "region": "7H0U5Gk1", "returnUrl": "gugRw6TZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'b57a6LMX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'PublicCreateUserOrder' test.out

#- 343 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '6GfWJfAN' \
    --userId 'N8IvjNoZ' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetUserOrder' test.out

#- 344 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'nopKFiW3' \
    --userId 'TzBGrTHp' \
    > test.out 2>&1
eval_tap $? 344 'PublicCancelUserOrder' test.out

#- 345 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'GovwNDtN' \
    --userId 'EYhqX6yy' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserOrderHistories' test.out

#- 346 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '9Tk4tNdj' \
    --userId 'z2NWyWyQ' \
    > test.out 2>&1
eval_tap $? 346 'PublicDownloadUserOrderReceipt' test.out

#- 347 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'tgO15Cpw' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetPaymentAccounts' test.out

#- 348 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'F0477Khs' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId '5tMoasr4' \
    > test.out 2>&1
eval_tap $? 348 'PublicDeletePaymentAccount' test.out

#- 349 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'MMyZsIug' \
    --chargeStatus 'SETUP' \
    --itemId 'xEuMk1Jw' \
    --limit '6' \
    --offset '76' \
    --sku '6uXa2FWv' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 349 'PublicQueryUserSubscriptions' test.out

#- 350 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "QhaGTJEx", "itemId": "JqX8dlmF", "language": "gyC_EyfQ_854", "region": "mQvQzApx", "returnUrl": "rBZGHcCw", "source": "rUMKpQxt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'xWeLg63v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicSubscribeSubscription' test.out

#- 351 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'wmjoXapH' \
    --itemId 'iKhRMP1V' \
    > test.out 2>&1
eval_tap $? 351 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 352 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'T4KofroF' \
    --userId 'ZFxV3p4j' \
    > test.out 2>&1
eval_tap $? 352 'PublicGetUserSubscription' test.out

#- 353 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ie8PrhxA' \
    --userId 'fE462gcP' \
    > test.out 2>&1
eval_tap $? 353 'PublicChangeSubscriptionBillingAccount' test.out

#- 354 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "gaNmjDfa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '22URc7hT' \
    --userId 'oNgjDJ8E' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicCancelSubscription' test.out

#- 355 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NfOLEUIt' \
    --userId 'dLzn6adV' \
    --excludeFree 'true' \
    --limit '38' \
    --offset '82' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetUserSubscriptionBillingHistories' test.out

#- 356 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'ka6rp7hs' \
    --namespace $AB_NAMESPACE \
    --userId 'RGmR4tXN' \
    > test.out 2>&1
eval_tap $? 356 'PublicGetWallet' test.out

#- 357 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'Lih1QuCB' \
    --namespace $AB_NAMESPACE \
    --userId '2QMAzbAD' \
    --limit '12' \
    --offset '60' \
    > test.out 2>&1
eval_tap $? 357 'PublicListUserWalletTransactions' test.out

#- 358 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'ggVMgfUJ' \
    --baseAppId '7XbuWkWL' \
    --categoryPath 'FwU6PXLm' \
    --features 'mq11GcrW' \
    --includeSubCategoryItem 'false' \
    --itemStatus 'ACTIVE' \
    --itemType 'MEDIA' \
    --limit '3' \
    --offset '43' \
    --region 'Yx6qflft' \
    --sortBy '["name", "name:asc", "createdAt:desc"]' \
    --storeId 'b7IGcKZX' \
    --tags 'F7W32oQi' \
    --targetNamespace '1QHBFqDN' \
    > test.out 2>&1
eval_tap $? 358 'QueryItems1' test.out

#- 359 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'jxfn7N28' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 359 'ImportStore1' test.out

#- 360 ExportStore1
# body param: body
echo '{"itemIds": ["OG1X1oc6", "Y7JXSCP6", "obAbUHY5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'lxjeDrKe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE