#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..383"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "W3UsIuo8", "appType": "GAME", "baseAppId": "4kTlB89O", "boothName": "HTLGeLbh", "boundItemIds": ["4xuh3HQ7", "3BMWV6Sh", "UjNSGqj3"], "categoryPath": "V6LizQPn", "clazz": "xUgfeiZF", "createdAt": "1999-06-02T00:00:00Z", "description": "3DyOjMQz", "displayOrder": 56, "entitlementType": "CONSUMABLE", "ext": {"udZXUKmT": {}, "HYU067t9": {}, "1JZEA9aQ": {}}, "features": ["QundmC7s", "ATCZqwQW", "vv8iq0Xx"], "fresh": true, "images": [{"as": "98EUGsqE", "caption": "garGpJde", "height": 41, "imageUrl": "3Wg8Yxvq", "smallImageUrl": "ZKyqEcwJ", "width": 100}, {"as": "KW0LnVjx", "caption": "IPUZEIkS", "height": 16, "imageUrl": "ZQOUEScm", "smallImageUrl": "nTOvPtng", "width": 47}, {"as": "QUCRJvZm", "caption": "GFdl4CFu", "height": 74, "imageUrl": "z12qMlwz", "smallImageUrl": "6MGFaS5i", "width": 91}], "itemId": "ZfZjVi5v", "itemIds": ["ajhNhKyl", "2GhD1V2X", "niCN4tfB"], "itemQty": {"9VzHgWhq": 82, "9c7Tlh75": 1, "XYR46USv": 45}, "itemType": "MEDIA", "language": "18VPFqi8", "listable": false, "localExt": {"Nc2vGjp5": {}, "WIscacYa": {}, "KEOVfryb": {}}, "longDescription": "7zgu5mzG", "lootBoxConfig": {"rewardCount": 96, "rewards": [{"lootBoxItems": [{"count": 48, "itemId": "vN1FEyBG", "itemSku": "3tIuZMRj", "itemType": "uhIF97BT"}, {"count": 47, "itemId": "MhSKV3mV", "itemSku": "u19Z6QwA", "itemType": "Ca5SH52a"}, {"count": 91, "itemId": "ojIjg9TY", "itemSku": "3ZAcN8Ea", "itemType": "f44Eq890"}], "name": "RxnwSF1L", "odds": 0.776666549586979, "type": "REWARD_GROUP", "weight": 54}, {"lootBoxItems": [{"count": 16, "itemId": "MYlehdlb", "itemSku": "odwSB0Kq", "itemType": "7sAvA8lW"}, {"count": 75, "itemId": "PVPtSS4t", "itemSku": "PP4ykoXi", "itemType": "GW416GiG"}, {"count": 88, "itemId": "LOUfQRyF", "itemSku": "fRCgBeYv", "itemType": "iVfWIWni"}], "name": "ruAN6mnD", "odds": 0.7858563163410498, "type": "PROBABILITY_GROUP", "weight": 33}, {"lootBoxItems": [{"count": 60, "itemId": "PrWw0aAS", "itemSku": "EgyK8i4P", "itemType": "FpeM5TOv"}, {"count": 99, "itemId": "XR4BBnMs", "itemSku": "LBNuVp35", "itemType": "uzVte2f6"}, {"count": 23, "itemId": "o2i2orJU", "itemSku": "QwCCiUUD", "itemType": "DpG5D1Mx"}], "name": "wPZECkbp", "odds": 0.5611002624362602, "type": "REWARD", "weight": 41}], "rollFunction": "CUSTOM"}, "maxCount": 26, "maxCountPerUser": 49, "name": "2WRh5IDR", "namespace": "mFyzeHZp", "optionBoxConfig": {"boxItems": [{"count": 85, "itemId": "oV9bfVV3", "itemSku": "RTTwSzbj", "itemType": "JAoNRBlM"}, {"count": 15, "itemId": "KapY62Zk", "itemSku": "Wv8u43Ep", "itemType": "vF8x9hiK"}, {"count": 63, "itemId": "Mb1Jz9Og", "itemSku": "sb9FpKUh", "itemType": "FI9l5gWz"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 48, "comparison": "excludes", "name": "YcGUyane", "predicateType": "SeasonPassPredicate", "value": "v0PbNDRC", "values": ["PAB89ssj", "2svGXgac", "mzht81z9"]}, {"anyOf": 43, "comparison": "isLessThan", "name": "yPaxEdgD", "predicateType": "SeasonTierPredicate", "value": "2uia8sG0", "values": ["fjeH5qu1", "jZd952Yd", "saGyny89"]}, {"anyOf": 5, "comparison": "is", "name": "8J0yfaKi", "predicateType": "SeasonPassPredicate", "value": "aOuMaiDR", "values": ["gzAlZLSs", "EyYKvqus", "1hh3xwrx"]}]}, {"operator": "or", "predicates": [{"anyOf": 80, "comparison": "isNot", "name": "ubbWzt9e", "predicateType": "EntitlementPredicate", "value": "dQCjJYyX", "values": ["tcVlcbwu", "IR1MmP5L", "UC101cSL"]}, {"anyOf": 18, "comparison": "isLessThanOrEqual", "name": "IXDiuAzZ", "predicateType": "SeasonPassPredicate", "value": "p0sMLTKB", "values": ["myiJhnEo", "GoEVbfXN", "1sZU4NzL"]}, {"anyOf": 0, "comparison": "isLessThanOrEqual", "name": "Xu4bMLu0", "predicateType": "SeasonTierPredicate", "value": "6UbaDNwr", "values": ["X6zYWenC", "CeN8pfp8", "0Bj0jk7t"]}]}, {"operator": "and", "predicates": [{"anyOf": 54, "comparison": "isLessThanOrEqual", "name": "zjp4V7vN", "predicateType": "EntitlementPredicate", "value": "iEjfMxz7", "values": ["QIoyN1fZ", "L9e76A6g", "7ae8bPu4"]}, {"anyOf": 66, "comparison": "is", "name": "8ATpmcUY", "predicateType": "SeasonTierPredicate", "value": "VwviW8rx", "values": ["E5LKxloT", "aHOxyss2", "48zkFQmP"]}, {"anyOf": 67, "comparison": "isNot", "name": "DrfDS4Yu", "predicateType": "EntitlementPredicate", "value": "MBJxNY6i", "values": ["pmmxWNoY", "t6gsyBn2", "6p47HrIf"]}]}]}, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 34, "fixedTrialCycles": 79, "graceDays": 35}, "region": "35xozwRT", "regionData": [{"currencyCode": "Oseg8E2q", "currencyNamespace": "sO5aTY4s", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1977-12-08T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1980-01-03T00:00:00Z", "discountedPrice": 99, "expireAt": "1978-12-28T00:00:00Z", "price": 32, "purchaseAt": "1980-12-22T00:00:00Z", "trialPrice": 36}, {"currencyCode": "pAqp52pN", "currencyNamespace": "DxJ2i1O4", "currencyType": "VIRTUAL", "discountAmount": 63, "discountExpireAt": "1981-08-21T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1981-08-20T00:00:00Z", "discountedPrice": 20, "expireAt": "1990-10-09T00:00:00Z", "price": 91, "purchaseAt": "1995-07-09T00:00:00Z", "trialPrice": 26}, {"currencyCode": "9on4O6XR", "currencyNamespace": "c9511LCM", "currencyType": "REAL", "discountAmount": 71, "discountExpireAt": "1991-04-03T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1975-01-22T00:00:00Z", "discountedPrice": 71, "expireAt": "1988-07-25T00:00:00Z", "price": 32, "purchaseAt": "1979-07-08T00:00:00Z", "trialPrice": 17}], "seasonType": "TIER", "sku": "KqwmLCcD", "stackable": false, "status": "ACTIVE", "tags": ["0UqQ7M1t", "KQUWJGCy", "alSX5wq7"], "targetCurrencyCode": "NHKKFev3", "targetItemId": "x5VR97WQ", "targetNamespace": "dLcEXcId", "thumbnailUrl": "gkAYLQEF", "title": "9LXbQLLI", "updatedAt": "1976-10-05T00:00:00Z", "useCount": 29}, "namespace": "TSXSVxBk", "order": {"currency": {"currencyCode": "XoOUPVZt", "currencySymbol": "l5tugMS8", "currencyType": "VIRTUAL", "decimals": 71, "namespace": "65xGuHGj"}, "ext": {"hXXvtnvw": {}, "MW6ecr2c": {}, "rtspLjrn": {}}, "free": false}, "source": "DLC"}, "script": "B2eksueo", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '7MCZWgRc' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "3ha3AUHT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'C9B89oIG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id '4YshadLk' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "Rs3FGUXY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'sPp6Aein' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "qQy07Z4r", "dryRun": true, "fulfillmentUrl": "z8deDcSv", "itemType": "APP", "purchaseConditionUrl": "z4Ra1hbL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'vg8HUnfO' \
    --itemType 'LOOTBOX' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'VFGE8Mm4' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "xTRL6NJu", "dryRun": true, "fulfillmentUrl": "CZnHcxM5", "purchaseConditionUrl": "PHe4RHgj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'FqQk2JKd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'Cmz2gWTW' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '71' \
    --name 'UuoQcfOF' \
    --offset '73' \
    --tag 'kDxK4AsP' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "ILE4RAhX", "items": [{"extraSubscriptionDays": 95, "itemId": "Iqc79yyi", "itemName": "IDvNyUCM", "quantity": 75}, {"extraSubscriptionDays": 74, "itemId": "wm7eVgUO", "itemName": "yRFOAbIr", "quantity": 77}, {"extraSubscriptionDays": 99, "itemId": "FaC5H5cG", "itemName": "hs6PpMm1", "quantity": 43}], "maxRedeemCountPerCampaignPerUser": 90, "maxRedeemCountPerCode": 40, "maxRedeemCountPerCodePerUser": 16, "maxSaleCount": 12, "name": "sy7xiPcA", "redeemEnd": "1985-01-17T00:00:00Z", "redeemStart": "1974-06-07T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["ucMXMOsF", "YLtv9rVq", "nFMST2En"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'zAmyZFjy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "50n4ExKW", "items": [{"extraSubscriptionDays": 68, "itemId": "LeDkFH1w", "itemName": "4OHD50t5", "quantity": 82}, {"extraSubscriptionDays": 59, "itemId": "swN7enmB", "itemName": "xxUhFeQn", "quantity": 3}, {"extraSubscriptionDays": 52, "itemId": "Yqvja3un", "itemName": "eJLMzzpY", "quantity": 10}], "maxRedeemCountPerCampaignPerUser": 58, "maxRedeemCountPerCode": 70, "maxRedeemCountPerCodePerUser": 45, "maxSaleCount": 31, "name": "MWlVoMhb", "redeemEnd": "1988-01-15T00:00:00Z", "redeemStart": "1997-08-01T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["vSsgn25N", "gbLIminW", "OY5MVCKJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'gGx7AgBh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'oPosfxlP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'O8zeCioN' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "Hx1Dfs0V", "localizationDisplayNames": {"BBskP1fw": "imoEAGnM", "w09EnOxQ": "nVbO5Gpp", "cZVFdt76": "KP1km9SL"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'zMmXhaEJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'pXIyf98r' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '3Y53T6az' \
    --namespace $AB_NAMESPACE \
    --storeId 'C663DOnz' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"F8WRjuhr": "pevuf5bi", "COGGnsvD": "CLjNGE2T", "JZqmEoMY": "BpYsj9wn"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'jLl5o7Zd' \
    --namespace $AB_NAMESPACE \
    --storeId '1u5hT5Z7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'xRH2MPVu' \
    --namespace $AB_NAMESPACE \
    --storeId 'QHTtIvUx' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'DD0CEzHA' \
    --namespace $AB_NAMESPACE \
    --storeId 'IBAVLp5K' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'BtwjDwpC' \
    --namespace $AB_NAMESPACE \
    --storeId 'XtzKSi4g' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'Tug4s7WP' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '38' \
    --code 'IYrhbMXy' \
    --limit '97' \
    --offset '24' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 30}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'mOZali6n' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'IOVgwGHY' \
    --namespace $AB_NAMESPACE \
    --batchNo '54' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'KjQNuScJ' \
    --namespace $AB_NAMESPACE \
    --batchNo '49' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId '5lT12isV' \
    --namespace $AB_NAMESPACE \
    --batchNo '16' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'atKkVMOI' \
    --namespace $AB_NAMESPACE \
    --code 'PRnlHsp6' \
    --limit '10' \
    --offset '75' \
    --userId 'bmVpdYqN' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'c3uWy3W1' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'XKCbZgbQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code '5Yje7tsj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 GetServicePluginConfig
$CLI_EXE \
    --sn platform \
    --op GetServicePluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetServicePluginConfig' test.out

#- 37 UpdateServicePluginConfig
# body param: body
echo '{"grpcServerAddress": "hFbgrbzG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateServicePluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateServicePluginConfig' test.out

#- 38 DeleteServicePluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteServicePluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteServicePluginConfig' test.out

#- 39 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 39 'ListCurrencies' test.out

#- 40 CreateCurrency
# body param: body
echo '{"currencyCode": "BaOhkgpH", "currencySymbol": "ObK4kbSx", "currencyType": "VIRTUAL", "decimals": 45, "localizationDescriptions": {"wZgzDYhw": "h5j0tYt7", "MtsObnBc": "IHu9ab74", "BtPfy8bR": "bkydqBIj"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCurrency' test.out

#- 41 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"o3cch6Le": "YTr9YmLb", "ru4rkHXF": "W60JuUdm", "MoBaGsqL": "vKkpcKh2"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'NlJFDolt' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'UpdateCurrency' test.out

#- 42 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'LYJsJ0ip' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DeleteCurrency' test.out

#- 43 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'w94eWPsL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetCurrencyConfig' test.out

#- 44 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode '96blJzdm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'GetCurrencySummary' test.out

#- 45 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetDLCItemConfig' test.out

#- 46 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "RXOYKqmE", "rewards": [{"currency": {"currencyCode": "60kzglQC", "namespace": "xvgF9lgL"}, "item": {"itemId": "Mnu14WSu", "itemSku": "Vw0lbua3", "itemType": "VtOVytV3"}, "quantity": 13, "type": "ITEM"}, {"currency": {"currencyCode": "Fjuxuxdc", "namespace": "rB0nYPN9"}, "item": {"itemId": "lf7YOXPh", "itemSku": "7rjUCmQH", "itemType": "Q6MJOoPV"}, "quantity": 34, "type": "CURRENCY"}, {"currency": {"currencyCode": "uJC5itQ5", "namespace": "MWCV2ntV"}, "item": {"itemId": "Hnqf1uZz", "itemSku": "bGporKhJ", "itemType": "rQ3dsfQJ"}, "quantity": 45, "type": "ITEM"}]}, {"id": "tXE4ZgxO", "rewards": [{"currency": {"currencyCode": "sSuqvEJk", "namespace": "vGrbFtBm"}, "item": {"itemId": "7Z8aBQVn", "itemSku": "eDVWOGx3", "itemType": "OCJunlI9"}, "quantity": 96, "type": "ITEM"}, {"currency": {"currencyCode": "KYLiLsWn", "namespace": "FldAFrHs"}, "item": {"itemId": "0snBowXs", "itemSku": "oMn4Og8b", "itemType": "Igc2OtGQ"}, "quantity": 52, "type": "CURRENCY"}, {"currency": {"currencyCode": "6dMz3a3L", "namespace": "QDUGBqOH"}, "item": {"itemId": "pysiRoUD", "itemSku": "t2qJACiJ", "itemType": "rueFoNl0"}, "quantity": 5, "type": "ITEM"}]}, {"id": "T0SYB4l0", "rewards": [{"currency": {"currencyCode": "3Se7uo5P", "namespace": "DQmDwAEa"}, "item": {"itemId": "a0xrUDba", "itemSku": "qMF4QSKB", "itemType": "ZhXUNv8h"}, "quantity": 18, "type": "CURRENCY"}, {"currency": {"currencyCode": "zQ0Dawk5", "namespace": "7EHmyxa2"}, "item": {"itemId": "Gg6A3md7", "itemSku": "AT95oQXe", "itemType": "BhNZtmA7"}, "quantity": 8, "type": "CURRENCY"}, {"currency": {"currencyCode": "p3za30wt", "namespace": "5Ml4xu3x"}, "item": {"itemId": "RZ5ziFH8", "itemSku": "0nVR8KZH", "itemType": "3gRAMFnK"}, "quantity": 98, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateDLCItemConfig' test.out

#- 47 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteDLCItemConfig' test.out

#- 48 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetPlatformDLCConfig' test.out

#- 49 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"vsnq3M4p": "5KVNEpya", "6b1YH2qM": "DHp73jUA", "peRuinHL": "14C7Envh"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"tg5LRywf": "2qjfRKti", "FzD8aEqG": "Flh1kO24", "Yq4TnZev": "OBk4McNC"}}, {"platform": "PSN", "platformDlcIdMap": {"HRb3p2De": "RKByVP2Q", "TokDPpfI": "6IJHaeP9", "jJzRuNYy": "eueb7Yjn"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdatePlatformDLCConfig' test.out

#- 50 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeletePlatformDLCConfig' test.out

#- 51 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'v3tydNQn' \
    --itemId '["W8eoNiqL", "F5tQ9ezO", "5MhrwjwT"]' \
    --limit '22' \
    --offset '100' \
    --userId 'T7Rzri6Y' \
    > test.out 2>&1
eval_tap $? 51 'QueryEntitlements' test.out

#- 52 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId '2UQjrePF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetEntitlement' test.out

#- 53 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '50' \
    --offset '79' \
    --status 'SUCCESS' \
    --userId 'a9cwYVEF' \
    > test.out 2>&1
eval_tap $? 53 'QueryFulfillmentHistories' test.out

#- 54 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetAppleIAPConfig' test.out

#- 55 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "eIzX5KeH", "password": "iKywBe7W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateAppleIAPConfig' test.out

#- 56 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteAppleIAPConfig' test.out

#- 57 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetEpicGamesIAPConfig' test.out

#- 58 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "vUL1KQtG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateEpicGamesIAPConfig' test.out

#- 59 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteEpicGamesIAPConfig' test.out

#- 60 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetGoogleIAPConfig' test.out

#- 61 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "24FcNqis", "serviceAccountId": "wV8IZA6g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdateGoogleIAPConfig' test.out

#- 62 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteGoogleIAPConfig' test.out

#- 63 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 63 'UpdateGoogleP12File' test.out

#- 64 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetIAPItemConfig' test.out

#- 65 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "MnLDFNJU", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"OI7dpjQk": "j3JalUYp", "eaNTMCmC": "lSKOGmKO", "6Z0cTTAk": "epFCIdNg"}}, {"itemIdentity": "mhf3M9GI", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"kQhKC4Or": "ibqtl3Zq", "B7VHP4bb": "sYr9ZELk", "KUuS6G5l": "nrZ8zbML"}}, {"itemIdentity": "1P7WL9QL", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"wHOEQQJQ": "Ajwh06h8", "4btbb4G8": "OkpXF99L", "d50EsKX6": "O5rvvVKm"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdateIAPItemConfig' test.out

#- 66 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeleteIAPItemConfig' test.out

#- 67 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetPlayStationIAPConfig' test.out

#- 68 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "r6aFGSFN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdatePlaystationIAPConfig' test.out

#- 69 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeletePlaystationIAPConfig' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "SbG0pzsC", "publisherAuthenticationKey": "PCpecEZr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "0iJ5A0yB", "clientSecret": "v58GZkKP", "organizationId": "9oPGdiXD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "olwhglpf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'N2ZOkX2s' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'yS3KXye6' \
    --itemId '7wIglPEq' \
    --itemType 'BUNDLE' \
    --endTime '7NkYUQtS' \
    --startTime 'UpNpefii' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'Oaaoyii8' \
    --itemId '68LXoJMo' \
    --itemType 'COINS' \
    --endTime '0I3cAzzm' \
    --startTime 'Utip36ua' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "Oed2Z2Wz", "targetItemId": "4unZbz5z", "targetNamespace": "i0yRY2Th"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'TMEAoZN2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "4EbBIAcj", "appType": "SOFTWARE", "baseAppId": "UiBjn2AB", "boothName": "m1y8p9cN", "categoryPath": "1VIDAXg7", "clazz": "faRT9JBI", "displayOrder": 39, "entitlementType": "DURABLE", "ext": {"fl30TiyR": {}, "yg3Gf2VF": {}, "yUpOwHRv": {}}, "features": ["iAhWU6ql", "JWhwpkJJ", "v5z7pzos"], "images": [{"as": "kTAhLNsF", "caption": "l743dliw", "height": 83, "imageUrl": "QYRgsBT6", "smallImageUrl": "KPvsuq6S", "width": 3}, {"as": "lbCUW0pY", "caption": "iAqGLVeO", "height": 81, "imageUrl": "68ibe0T1", "smallImageUrl": "X54LWGUf", "width": 19}, {"as": "ceCLKEGD", "caption": "j6MDbIqc", "height": 20, "imageUrl": "rjv2AtQZ", "smallImageUrl": "7s7lBxdx", "width": 58}], "itemIds": ["d4qZqIUK", "7eAvc3S8", "9u0IgXi1"], "itemQty": {"Id5ETevn": 60, "wDQ93ylc": 92, "a8sKBJNj": 14}, "itemType": "INGAMEITEM", "listable": false, "localizations": {"835jdj0E": {"description": "XkVmOv2s", "localExt": {"AaSa2jCG": {}, "Rfbcto2h": {}, "2uUrTUee": {}}, "longDescription": "H1OexF5V", "title": "4yLXi9fo"}, "sdmkv8jP": {"description": "2zsmaum2", "localExt": {"ucDEphC2": {}, "x48Rkg2F": {}, "LuC4Owzd": {}}, "longDescription": "jJU0aTQa", "title": "aKqG3yfH"}, "RmehF2uh": {"description": "oJ3EpRWY", "localExt": {"QpIu7ods": {}, "LbvnLLDU": {}, "FFYct12L": {}}, "longDescription": "O37dmUT7", "title": "Zx8Adc75"}}, "lootBoxConfig": {"rewardCount": 27, "rewards": [{"lootBoxItems": [{"count": 90, "itemId": "TIoO3BKN", "itemSku": "UvMKfaZT", "itemType": "4b60Tn17"}, {"count": 42, "itemId": "9PUeHb01", "itemSku": "5kAYsfwW", "itemType": "cL33bl3z"}, {"count": 96, "itemId": "MoU9r4I5", "itemSku": "5MfRG3N4", "itemType": "FdVz2P8v"}], "name": "616S16MK", "odds": 0.006260157083585627, "type": "REWARD", "weight": 2}, {"lootBoxItems": [{"count": 14, "itemId": "AZTAbe6g", "itemSku": "saCZmvoX", "itemType": "JOV7H5th"}, {"count": 39, "itemId": "ocrJKuhM", "itemSku": "I1dCawWx", "itemType": "HRkmADcI"}, {"count": 53, "itemId": "kJ0BegJO", "itemSku": "xzRhqqVL", "itemType": "TEO1rjkt"}], "name": "1RsGHC0p", "odds": 0.5386852357401313, "type": "PROBABILITY_GROUP", "weight": 88}, {"lootBoxItems": [{"count": 53, "itemId": "QsbbilqE", "itemSku": "7Fz3eAIB", "itemType": "new7YIOY"}, {"count": 32, "itemId": "1NArip3F", "itemSku": "hu7zuBak", "itemType": "9h96EI2H"}, {"count": 28, "itemId": "ZTqjVjyu", "itemSku": "Qj2Zpy3z", "itemType": "s8kvPoDn"}], "name": "0Lo4nEfo", "odds": 0.6441534355231691, "type": "REWARD_GROUP", "weight": 68}], "rollFunction": "DEFAULT"}, "maxCount": 33, "maxCountPerUser": 79, "name": "gsFDUoye", "optionBoxConfig": {"boxItems": [{"count": 40, "itemId": "x16P2lLM", "itemSku": "IfgV4yCR", "itemType": "sZEsbS2H"}, {"count": 75, "itemId": "8cZSJnSx", "itemSku": "9wpz5lmi", "itemType": "QvUX6ZHc"}, {"count": 51, "itemId": "iG1vlTbm", "itemSku": "zDJxmgOZ", "itemType": "2bHr5Jjy"}]}, "purchasable": false, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 43, "fixedTrialCycles": 1, "graceDays": 7}, "regionData": {"41aqOOgA": [{"currencyCode": "ylyh9jmE", "currencyNamespace": "SflTWM9t", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1994-01-14T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1993-11-25T00:00:00Z", "discountedPrice": 56, "expireAt": "1976-02-06T00:00:00Z", "price": 20, "purchaseAt": "1982-01-13T00:00:00Z", "trialPrice": 83}, {"currencyCode": "tLtS8r4X", "currencyNamespace": "ydZmG4er", "currencyType": "REAL", "discountAmount": 73, "discountExpireAt": "1983-07-07T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1983-06-25T00:00:00Z", "discountedPrice": 56, "expireAt": "1980-07-16T00:00:00Z", "price": 32, "purchaseAt": "1994-09-19T00:00:00Z", "trialPrice": 71}, {"currencyCode": "FdIaAWSf", "currencyNamespace": "h368N3TV", "currencyType": "REAL", "discountAmount": 20, "discountExpireAt": "1982-10-20T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1991-03-22T00:00:00Z", "discountedPrice": 15, "expireAt": "1993-10-08T00:00:00Z", "price": 69, "purchaseAt": "1972-01-08T00:00:00Z", "trialPrice": 21}], "JnzYxmwX": [{"currencyCode": "bkzND4gw", "currencyNamespace": "ar3m0OsH", "currencyType": "VIRTUAL", "discountAmount": 43, "discountExpireAt": "1999-12-01T00:00:00Z", "discountPercentage": 6, "discountPurchaseAt": "1993-10-17T00:00:00Z", "discountedPrice": 56, "expireAt": "1973-09-06T00:00:00Z", "price": 1, "purchaseAt": "1978-07-16T00:00:00Z", "trialPrice": 50}, {"currencyCode": "BIDJQJFV", "currencyNamespace": "zv71VUp9", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1984-12-05T00:00:00Z", "discountPercentage": 77, "discountPurchaseAt": "1975-03-13T00:00:00Z", "discountedPrice": 100, "expireAt": "1989-11-23T00:00:00Z", "price": 49, "purchaseAt": "1996-08-27T00:00:00Z", "trialPrice": 87}, {"currencyCode": "wbhPMQMn", "currencyNamespace": "Q1faObot", "currencyType": "VIRTUAL", "discountAmount": 19, "discountExpireAt": "1997-10-20T00:00:00Z", "discountPercentage": 97, "discountPurchaseAt": "1988-10-24T00:00:00Z", "discountedPrice": 34, "expireAt": "1974-08-29T00:00:00Z", "price": 24, "purchaseAt": "1987-10-03T00:00:00Z", "trialPrice": 23}], "a0nImAAt": [{"currencyCode": "6r53a0LA", "currencyNamespace": "pybUNCZz", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1978-05-12T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1971-05-02T00:00:00Z", "discountedPrice": 31, "expireAt": "1978-02-07T00:00:00Z", "price": 92, "purchaseAt": "1985-06-14T00:00:00Z", "trialPrice": 75}, {"currencyCode": "jHa3QLKM", "currencyNamespace": "2H8IgEuJ", "currencyType": "VIRTUAL", "discountAmount": 53, "discountExpireAt": "1998-04-11T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1993-07-08T00:00:00Z", "discountedPrice": 14, "expireAt": "1996-03-19T00:00:00Z", "price": 19, "purchaseAt": "1980-07-27T00:00:00Z", "trialPrice": 13}, {"currencyCode": "Ra43bU1J", "currencyNamespace": "NhVtfmVl", "currencyType": "REAL", "discountAmount": 56, "discountExpireAt": "1980-06-07T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1973-01-02T00:00:00Z", "discountedPrice": 4, "expireAt": "1996-08-11T00:00:00Z", "price": 15, "purchaseAt": "1998-04-08T00:00:00Z", "trialPrice": 8}]}, "seasonType": "TIER", "sku": "U2qzceTg", "stackable": true, "status": "ACTIVE", "tags": ["0e0GAmMa", "X697by0j", "q74QtRvP"], "targetCurrencyCode": "v85WGGff", "targetNamespace": "Cmp3hIbr", "thumbnailUrl": "5kgEBDTI", "useCount": 95}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'fHbjj1k7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'iZO0U4Yn' \
    --appId 'jguZuh7n' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --availableDate 'nIVqUXs3' \
    --baseAppId 'ZZvPdrLV' \
    --categoryPath 'ztKghweI' \
    --features 'NcSCe0St' \
    --includeSubCategoryItem 'true' \
    --itemType 'SEASON' \
    --limit '75' \
    --offset '35' \
    --region 'Y1tTObtZ' \
    --sortBy '["updatedAt:asc", "createdAt:desc", "displayOrder:desc"]' \
    --storeId 'D9gs3F6o' \
    --tags 'Je71UtvF' \
    --targetNamespace '8NHyiqeA' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["6II1aWoj", "7lTqICRR", "f6u9yBae"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'o2WtJNJC' \
    --sku 'eOHEkD7b' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'vD1CcjaH' \
    --populateBundle 'false' \
    --region 'ETsjyrJz' \
    --storeId 'ISrP4ntF' \
    --sku 'xNqb3REE' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '1MswQX1G' \
    --sku 'lbEytoWe' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["ZLEA8i2G", "Dz4wDT0Y", "NKpZhL7P"]' \
    --storeId 'hjfSQPZR' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'FYHSjgEl' \
    --region 'F133BFGw' \
    --storeId '7MQTR4qG' \
    --itemIds 'hMHjFiNt' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["CYlCnt7g", "fxUdc40Y", "7NJsZfiD"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'gZWGyQAI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'BUNDLE' \
    --limit '37' \
    --offset '51' \
    --sortBy 'kLyjkDBl' \
    --storeId 'dMKpcb45' \
    --keyword '4Y3srT9C' \
    --language 'pa5Cir2X' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '92' \
    --offset '31' \
    --sortBy '["updatedAt", "displayOrder:asc", "updatedAt:asc"]' \
    --storeId 'gDhdMtoY' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'ZtSHNewi' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'GkyHQTq4' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "nwHxlpNM", "appType": "DLC", "baseAppId": "KKdj5P8a", "boothName": "vhwkw79C", "categoryPath": "KaHoqzNE", "clazz": "4FoRKakT", "displayOrder": 44, "entitlementType": "DURABLE", "ext": {"WKbdtW61": {}, "EJJK0WP2": {}, "mmPGz3bT": {}}, "features": ["thtFLCyy", "e93Ibf7g", "ZlTD2UJ8"], "images": [{"as": "0x5K6BzN", "caption": "a4W93PFl", "height": 39, "imageUrl": "WffThobI", "smallImageUrl": "z1Ao9BB9", "width": 8}, {"as": "HtpAcHYq", "caption": "HKetWhIU", "height": 58, "imageUrl": "UiagsSB6", "smallImageUrl": "KN3JkYFu", "width": 96}, {"as": "v6HNuHaz", "caption": "9uzQQjmv", "height": 62, "imageUrl": "5GnegEfW", "smallImageUrl": "22r532fj", "width": 29}], "itemIds": ["xlfsYEzg", "bW3UTYeo", "X5Md3CrD"], "itemQty": {"9MYAL7mS": 41, "D1kc6zbv": 53, "ABO5deTP": 25}, "itemType": "CODE", "listable": true, "localizations": {"IOo2tf4E": {"description": "pWxWnSB9", "localExt": {"QTBVDLVj": {}, "Ntzb9ts1": {}, "bgiezc3T": {}}, "longDescription": "fS5bFU13", "title": "a75XdWd9"}, "nFFoBaKU": {"description": "heP5alJF", "localExt": {"7eCezqm0": {}, "RoI3peL2": {}, "qI0FMHw7": {}}, "longDescription": "2pVsChB8", "title": "XyvQBOE9"}, "fk4G08hE": {"description": "FHzhhzuz", "localExt": {"g6EMOAzz": {}, "oatzvdfK": {}, "LHKoxePV": {}}, "longDescription": "ta1OBexz", "title": "vHXAwYS3"}}, "lootBoxConfig": {"rewardCount": 24, "rewards": [{"lootBoxItems": [{"count": 74, "itemId": "bNTJwRCQ", "itemSku": "nwu4iP6R", "itemType": "8QcCNXor"}, {"count": 80, "itemId": "ObQ3Shtx", "itemSku": "Dqx7QrxR", "itemType": "h1TAoajZ"}, {"count": 73, "itemId": "B2ggPUYb", "itemSku": "2nFYam34", "itemType": "GRzH2Jc1"}], "name": "ODXXEG5X", "odds": 0.913684427910515, "type": "REWARD", "weight": 60}, {"lootBoxItems": [{"count": 57, "itemId": "nvH8OvL8", "itemSku": "o0Ex0CoL", "itemType": "9VgNC6nI"}, {"count": 67, "itemId": "GA1DXtpQ", "itemSku": "kBaCmEYc", "itemType": "v14UP4zr"}, {"count": 71, "itemId": "ihUFnpa7", "itemSku": "k3WMRlsJ", "itemType": "u2iH0CTA"}], "name": "dfx044cR", "odds": 0.1593226360019041, "type": "REWARD_GROUP", "weight": 5}, {"lootBoxItems": [{"count": 100, "itemId": "RBQBl087", "itemSku": "9fUMqBiC", "itemType": "HpCwwPsf"}, {"count": 41, "itemId": "nkUzpeuS", "itemSku": "S2I99vZU", "itemType": "z9pREB5g"}, {"count": 31, "itemId": "07pWcPoU", "itemSku": "73DeyRjd", "itemType": "pnF0SomY"}], "name": "dN1W3MdH", "odds": 0.19938818398527502, "type": "REWARD", "weight": 100}], "rollFunction": "CUSTOM"}, "maxCount": 71, "maxCountPerUser": 60, "name": "gTaVN77U", "optionBoxConfig": {"boxItems": [{"count": 29, "itemId": "n8mYKi9R", "itemSku": "2fjuI7d1", "itemType": "a33ZWN6n"}, {"count": 81, "itemId": "cFmKUdzx", "itemSku": "VdqEC3xl", "itemType": "odqu8Oxr"}, {"count": 70, "itemId": "6Sg2iwbc", "itemSku": "8ajNF6ra", "itemType": "tY1lNJuU"}]}, "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 6, "fixedTrialCycles": 41, "graceDays": 42}, "regionData": {"aMLRUoEU": [{"currencyCode": "vfGhmsdc", "currencyNamespace": "8mN1zGWZ", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1984-12-11T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1985-12-14T00:00:00Z", "discountedPrice": 45, "expireAt": "1999-04-16T00:00:00Z", "price": 62, "purchaseAt": "1976-02-02T00:00:00Z", "trialPrice": 5}, {"currencyCode": "zsrfd1Uw", "currencyNamespace": "zHlA3Y04", "currencyType": "VIRTUAL", "discountAmount": 14, "discountExpireAt": "1994-08-23T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1993-12-26T00:00:00Z", "discountedPrice": 12, "expireAt": "1986-01-20T00:00:00Z", "price": 81, "purchaseAt": "1983-07-01T00:00:00Z", "trialPrice": 35}, {"currencyCode": "TpBZH7oE", "currencyNamespace": "nzKQzfku", "currencyType": "REAL", "discountAmount": 70, "discountExpireAt": "1985-03-18T00:00:00Z", "discountPercentage": 26, "discountPurchaseAt": "1974-07-11T00:00:00Z", "discountedPrice": 2, "expireAt": "1999-04-09T00:00:00Z", "price": 57, "purchaseAt": "1992-07-17T00:00:00Z", "trialPrice": 49}], "wU6YNkJo": [{"currencyCode": "68Wp0x7A", "currencyNamespace": "vqdD75dP", "currencyType": "VIRTUAL", "discountAmount": 25, "discountExpireAt": "1978-02-22T00:00:00Z", "discountPercentage": 15, "discountPurchaseAt": "1981-01-04T00:00:00Z", "discountedPrice": 78, "expireAt": "1971-06-04T00:00:00Z", "price": 76, "purchaseAt": "1972-02-09T00:00:00Z", "trialPrice": 6}, {"currencyCode": "K4QvVD0j", "currencyNamespace": "jTVxAvAH", "currencyType": "VIRTUAL", "discountAmount": 41, "discountExpireAt": "1971-05-31T00:00:00Z", "discountPercentage": 64, "discountPurchaseAt": "1980-11-13T00:00:00Z", "discountedPrice": 66, "expireAt": "1974-04-22T00:00:00Z", "price": 5, "purchaseAt": "1987-02-11T00:00:00Z", "trialPrice": 38}, {"currencyCode": "uOW9YSAo", "currencyNamespace": "KKcn9Ppx", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1992-12-30T00:00:00Z", "discountPercentage": 98, "discountPurchaseAt": "1985-01-04T00:00:00Z", "discountedPrice": 22, "expireAt": "1988-06-22T00:00:00Z", "price": 16, "purchaseAt": "1987-02-18T00:00:00Z", "trialPrice": 29}], "UyPsolRi": [{"currencyCode": "YVxBvh0Q", "currencyNamespace": "QKzz2Uhu", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1980-04-08T00:00:00Z", "discountPercentage": 11, "discountPurchaseAt": "1971-03-17T00:00:00Z", "discountedPrice": 98, "expireAt": "1983-07-02T00:00:00Z", "price": 9, "purchaseAt": "1998-09-01T00:00:00Z", "trialPrice": 94}, {"currencyCode": "zi8NmRmn", "currencyNamespace": "qYaPohLF", "currencyType": "REAL", "discountAmount": 79, "discountExpireAt": "1993-07-24T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1999-10-03T00:00:00Z", "discountedPrice": 79, "expireAt": "1980-02-26T00:00:00Z", "price": 72, "purchaseAt": "1992-08-19T00:00:00Z", "trialPrice": 46}, {"currencyCode": "GZ0aQOsg", "currencyNamespace": "FgrdRPJE", "currencyType": "REAL", "discountAmount": 69, "discountExpireAt": "1993-10-05T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1987-11-22T00:00:00Z", "discountedPrice": 19, "expireAt": "1987-11-30T00:00:00Z", "price": 12, "purchaseAt": "1993-07-24T00:00:00Z", "trialPrice": 99}]}, "seasonType": "PASS", "sku": "TGivwKFh", "stackable": false, "status": "INACTIVE", "tags": ["4tDzX3rj", "TAS13zVB", "cBh1a4k1"], "targetCurrencyCode": "rIcWynnM", "targetNamespace": "qRTiT0L1", "thumbnailUrl": "QEMwrzhT", "useCount": 60}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'TuwkWh8y' \
    --namespace $AB_NAMESPACE \
    --storeId 'tmcKFVYf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'CXMkFG6i' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId '7d5mI4PP' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 34, "orderNo": "Y0DNj7s3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'rThRXzkT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'lHDE6ZhQ' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '4ZIpI7NK' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "dacRXS6X", "previewUrl": "x2uJAzsd", "thumbnailUrl": "p4WKYx2Y", "type": "video", "url": "cgU5Td7U", "videoSource": "youtube"}, {"alt": "4VOSYEtz", "previewUrl": "8bbgdc9U", "thumbnailUrl": "ohEqx4lq", "type": "video", "url": "nQu1r3Bv", "videoSource": "vimeo"}, {"alt": "RaOz4TNl", "previewUrl": "gETp0hyp", "thumbnailUrl": "O30COMH2", "type": "video", "url": "0qafl6q6", "videoSource": "generic"}], "developer": "D4zbzNb2", "forumUrl": "QqpqAVdO", "genres": ["Racing", "Racing", "Simulation"], "localizations": {"JWxWVueN": {"announcement": "ZrNypkg7", "slogan": "lYffA7iK"}, "d74PAjFW": {"announcement": "7l3M85RH", "slogan": "Xqmp4Man"}, "0GAmHo2E": {"announcement": "bTfw73G1", "slogan": "E9VN4Qnn"}}, "platformRequirements": {"5rG8ktOr": [{"additionals": "BY9SSzdp", "directXVersion": "HVtsa6Ms", "diskSpace": "fMEAPQLd", "graphics": "kqG5WJ6t", "label": "m7SAJLGo", "osVersion": "ewZEYskT", "processor": "2eRn4Ron", "ram": "BhiyMSdk", "soundCard": "8iNNUlge"}, {"additionals": "sVchl6vj", "directXVersion": "tBxOb6vm", "diskSpace": "PnnHLaxP", "graphics": "64s6TGba", "label": "vuMX8uEE", "osVersion": "YGBs3hgX", "processor": "ZpJbaROA", "ram": "VhQVjcjn", "soundCard": "umWDXw77"}, {"additionals": "a5WyjN3E", "directXVersion": "Ir5C5emJ", "diskSpace": "OHWTg0SJ", "graphics": "QkpRXf2o", "label": "ioIIGo9M", "osVersion": "lGVhlIMq", "processor": "9NWORihm", "ram": "ui4tTgT3", "soundCard": "mkcIS4O1"}], "9odMwGDd": [{"additionals": "QNGjINeV", "directXVersion": "9YJIGenN", "diskSpace": "CDQaRd2L", "graphics": "Ods9I3ho", "label": "H88y2lG0", "osVersion": "0B6qydl7", "processor": "8dHkrSjo", "ram": "zOd62VEw", "soundCard": "eemhNIL3"}, {"additionals": "zQ3JuHHg", "directXVersion": "ZEDApnyf", "diskSpace": "TcOM4FjO", "graphics": "VOwQetwa", "label": "668LMONZ", "osVersion": "F5DXwqOs", "processor": "tm4gfVNd", "ram": "AZ03xewN", "soundCard": "3mYOcelQ"}, {"additionals": "UxZyUlnu", "directXVersion": "KGUlkhxd", "diskSpace": "IkRf93Ea", "graphics": "uH8jcEBJ", "label": "d2XF8IyN", "osVersion": "6hzbgWoP", "processor": "KKnrPZX4", "ram": "pVx8VmPh", "soundCard": "BNGCCbR6"}], "tMjfFaiD": [{"additionals": "P7KDK63A", "directXVersion": "h4sgdYiN", "diskSpace": "DLyGuZkT", "graphics": "5LDguZKc", "label": "1BNWjsur", "osVersion": "U2AOR9cD", "processor": "7m1TLiCg", "ram": "zAlGhRM6", "soundCard": "uYHKKRZr"}, {"additionals": "gdKdxFoV", "directXVersion": "a69wrh2P", "diskSpace": "zyjZzfb7", "graphics": "8ICmX9nq", "label": "um6UwPaP", "osVersion": "qtBthhAo", "processor": "vDOb7N85", "ram": "JnkumihS", "soundCard": "U5PpgTVK"}, {"additionals": "AJwBypCH", "directXVersion": "Ar8HzmrY", "diskSpace": "Nma1CipK", "graphics": "Lvql2q5p", "label": "hoaKEBc9", "osVersion": "RauSLvQr", "processor": "n6nlXDE6", "ram": "rrdrhk04", "soundCard": "gMbmj4Xf"}]}, "platforms": ["MacOS", "IOS", "Android"], "players": ["Single", "LocalCoop", "Coop"], "primaryGenre": "Casual", "publisher": "fnXQITo9", "releaseDate": "1981-07-31T00:00:00Z", "websiteUrl": "hdpuYbaX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'Z9QxMfcy' \
    --namespace $AB_NAMESPACE \
    --storeId '2vvdvGDx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'YTZDcYkO' \
    --namespace $AB_NAMESPACE \
    --storeId 'vPusk9pg' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'CTIo7XVy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'zZQQRDpP' \
    --namespace $AB_NAMESPACE \
    --storeId 'Nh8SvMl4' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'hb9JUysb' \
    --itemId 'kR9oness' \
    --namespace $AB_NAMESPACE \
    --storeId 'S3jHnzQs' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'g6Fnhoa8' \
    --itemId 'cPhIJgE1' \
    --namespace $AB_NAMESPACE \
    --storeId 'AePxze2h' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'mXCLTKTD' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'RqQe3sDI' \
    --populateBundle 'false' \
    --region 'lJwpdFm5' \
    --storeId 'NPs4RMrS' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 92, "comparison": "includes", "name": "KKx27AiH", "predicateType": "SeasonPassPredicate", "value": "l7LlPx49", "values": ["gApMzTnz", "xMnFDR6E", "rWcZbT2h"]}, {"anyOf": 46, "comparison": "isGreaterThan", "name": "FwyunkWv", "predicateType": "SeasonTierPredicate", "value": "kFDNVNmZ", "values": ["GbaFehUb", "CxIeAZ9w", "BS4cR7jF"]}, {"anyOf": 94, "comparison": "isGreaterThan", "name": "ml0nSP7u", "predicateType": "EntitlementPredicate", "value": "IVw6fjpC", "values": ["nfQgfKr9", "8xGX1rnp", "JzICQjcn"]}]}, {"operator": "and", "predicates": [{"anyOf": 78, "comparison": "excludes", "name": "jbmm7Mt3", "predicateType": "SeasonTierPredicate", "value": "poDnf468", "values": ["BbJBKyyw", "PnFmz7Lv", "OOljmYCN"]}, {"anyOf": 91, "comparison": "excludes", "name": "pvqgMRhg", "predicateType": "SeasonTierPredicate", "value": "n3BJIRLg", "values": ["Wu1e7Kwl", "aGPQRi1q", "AOOyC028"]}, {"anyOf": 72, "comparison": "includes", "name": "sJWvJiAw", "predicateType": "EntitlementPredicate", "value": "RYAEw2h9", "values": ["iZA57UeV", "0RSWeqpC", "EbGzCYUQ"]}]}, {"operator": "or", "predicates": [{"anyOf": 62, "comparison": "isLessThanOrEqual", "name": "aHPMeRdU", "predicateType": "EntitlementPredicate", "value": "yQEzvRCY", "values": ["VDLuJAtz", "XccfpEC2", "MncPaEtV"]}, {"anyOf": 63, "comparison": "isNot", "name": "xxVH26en", "predicateType": "EntitlementPredicate", "value": "Dpo1revB", "values": ["wHkHN9IQ", "6fUlQ2UG", "DVZZPaiZ"]}, {"anyOf": 4, "comparison": "isLessThan", "name": "brhONgHc", "predicateType": "SeasonTierPredicate", "value": "g8y0hkh1", "values": ["StrbcUlN", "S0XXTxkJ", "HaB6Dtc7"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'DB9IxEM3' \
    --namespace $AB_NAMESPACE \
    --storeId 'AQr9aa8d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "4ri5rLqo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'Hzpg1Arl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --name 'vBGb5HRd' \
    --offset '42' \
    --tag 'T9IcV2XZ' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "WGdXJMQM", "name": "L3Yx7wwE", "status": "INACTIVE", "tags": ["VPcNhyvN", "HDMwAZLE", "UVNVo989"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
eval_tap 0 112 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'z5MwnXQR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "4WsxVTgz", "name": "GOo7uYrG", "status": "INACTIVE", "tags": ["zXoEsstU", "JUi8Lamz", "t0JmXw3T"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'iNUoppIV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '4561RwvZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'bqCHq9SW' \
    --namespace $AB_NAMESPACE \
    --limit '10' \
    --offset '19' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'p20sECFA' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'PWr98Bf3' \
    --limit '2' \
    --offset '29' \
    --orderNos '["iVuBmXWH", "3Rwp4JDE", "qTXlFGnE"]' \
    --sortBy 'YfNubefd' \
    --startTime 'cvYe13My' \
    --status 'DELETED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'pd96MHMA' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "bpuM3dii"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'mUDThxpZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "nGspN8gA", "privateKey": "0EHgxaXY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'mxWyMMKK' \
    --externalId '3bJZnITa' \
    --limit '45' \
    --notificationSource 'CHECKOUT' \
    --notificationType 'JNteq9yY' \
    --offset '88' \
    --paymentOrderNo 'BodaESWL' \
    --startDate 'mhhlnBpJ' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'slLTsqiY' \
    --limit '70' \
    --offset '99' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "hddgni0i", "currencyNamespace": "wUs1G5hY", "customParameters": {"jYv3ZeCG": {}, "sHBAo96Q": {}, "LF6KnSAR": {}}, "description": "mUYoySnw", "extOrderNo": "2yHB9DeR", "extUserId": "oNoZiDHn", "itemType": "APP", "language": "iHig-TYIp", "metadata": {"7AcXjmJB": "iEHfXCyB", "x6h4fe5n": "MgvkzZsb", "mPP826A6": "ed9iuSkF"}, "notifyUrl": "jzFhOako", "omitNotification": false, "platform": "QLvcyBVu", "price": 52, "recurringPaymentOrderNo": "dINmt5dz", "region": "uqAXrTIb", "returnUrl": "h2fRUDvA", "sandbox": true, "sku": "VfuUKorI", "subscriptionId": "Wso3AxqL", "targetNamespace": "EHrmrhZr", "targetUserId": "8rZvEfV2", "title": "9Sga78yC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'tfg2cS2L' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'hMvCvZKn' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "7IF1ifhK", "paymentMethod": "N1BCzvop", "paymentProvider": "STRIPE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '8p6P3VR5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "8sQXwvOC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'BSQXYP8S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 2, "currencyCode": "qhlJ4PM3", "notifyType": "REFUND", "paymentProvider": "WXPAY", "salesTax": 50, "vat": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '4utkjAM8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'dUhp8Gck' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Nintendo", "Nintendo", "Twitch"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 GetPaymentCallbackConfig1
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig1 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'GetPaymentCallbackConfig1' test.out

#- 137 UpdateRevocationConfig
# body param: body
echo '{"entitlement": {"durable": {"enabled": false, "strategy": "REVOKE_OR_REPORT"}}, "wallet": {"enabled": true, "strategy": "ALWAYS_REVOKE"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateRevocationConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateRevocationConfig' test.out

#- 138 DeleteRevocationConfig
$CLI_EXE \
    --sn platform \
    --op DeleteRevocationConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'DeleteRevocationConfig' test.out

#- 139 QueryRevocationHistories
$CLI_EXE \
    --sn platform \
    --op QueryRevocationHistories \
    --namespace $AB_NAMESPACE \
    --endTime 'PPrKYAyV' \
    --limit '20' \
    --offset '60' \
    --source 'DLC' \
    --startTime 'PE99bnYl' \
    --status 'FAIL' \
    --transactionId '8H1loUbC' \
    --userId '2CeyuZuJ' \
    > test.out 2>&1
eval_tap $? 139 'QueryRevocationHistories' test.out

#- 140 CreateReward
# body param: body
echo '{"description": "S3Z5T5QL", "eventTopic": "jC1fi199", "maxAwarded": 81, "maxAwardedPerUser": 53, "namespaceExpression": "KA9lqoMs", "rewardCode": "iGhlyTCt", "rewardConditions": [{"condition": "KRwgj4Rl", "conditionName": "ClgwtTI7", "eventName": "F2bKKnaN", "rewardItems": [{"duration": 37, "itemId": "cSy4DLHk", "quantity": 43}, {"duration": 39, "itemId": "clWh0GsV", "quantity": 45}, {"duration": 76, "itemId": "tjWQ1Dk3", "quantity": 18}]}, {"condition": "YIxKEIAA", "conditionName": "I0VRMzdt", "eventName": "Imbr1aOc", "rewardItems": [{"duration": 18, "itemId": "23AMqHLc", "quantity": 67}, {"duration": 2, "itemId": "RSxg2M43", "quantity": 60}, {"duration": 80, "itemId": "J6tq6OGf", "quantity": 85}]}, {"condition": "vxmKexqB", "conditionName": "NXo0FHwe", "eventName": "nqUSucdQ", "rewardItems": [{"duration": 31, "itemId": "eE5c3Vqp", "quantity": 68}, {"duration": 18, "itemId": "CtFC0rPx", "quantity": 88}, {"duration": 37, "itemId": "9mYMNfrV", "quantity": 60}]}], "userIdExpression": "WGiuUoil"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'CreateReward' test.out

#- 141 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'AjYH8XIf' \
    --limit '13' \
    --offset '73' \
    --sortBy '["namespace:asc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 141 'QueryRewards' test.out

#- 142 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 142 'ExportRewards' test.out

#- 143 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 143 'ImportRewards' test.out

#- 144 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ys5swsE5' \
    > test.out 2>&1
eval_tap $? 144 'GetReward' test.out

#- 145 UpdateReward
# body param: body
echo '{"description": "lFanwgis", "eventTopic": "hYrlXIt4", "maxAwarded": 97, "maxAwardedPerUser": 21, "namespaceExpression": "LLUgvypf", "rewardCode": "HrShB2gb", "rewardConditions": [{"condition": "ZzTj7hK4", "conditionName": "l8kFJ9Dg", "eventName": "n6uLVtBp", "rewardItems": [{"duration": 27, "itemId": "x5m8z2Zu", "quantity": 89}, {"duration": 4, "itemId": "AvhWU6qk", "quantity": 25}, {"duration": 53, "itemId": "FG6kX3Bg", "quantity": 24}]}, {"condition": "URRe6Iw4", "conditionName": "GEMwUqgd", "eventName": "Z75ov0Gg", "rewardItems": [{"duration": 77, "itemId": "IdRe0cMe", "quantity": 31}, {"duration": 41, "itemId": "sd2vSDL4", "quantity": 59}, {"duration": 31, "itemId": "BiBatwbm", "quantity": 100}]}, {"condition": "p4KvvgIL", "conditionName": "TH1WG0ON", "eventName": "c1BqmOZV", "rewardItems": [{"duration": 88, "itemId": "HSaaNL7W", "quantity": 74}, {"duration": 100, "itemId": "f7nQckrF", "quantity": 96}, {"duration": 60, "itemId": "4FrRbJsq", "quantity": 46}]}], "userIdExpression": "yYdFIfq9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'sRV1zNMS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'UpdateReward' test.out

#- 146 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'bCXEsGXA' \
    > test.out 2>&1
eval_tap $? 146 'DeleteReward' test.out

#- 147 CheckEventCondition
# body param: body
echo '{"payload": {"FNxPhdQh": {}, "4LkKfbqU": {}, "pNjN9M1m": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'jhzZy6la' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'CheckEventCondition' test.out

#- 148 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "KZzD88Vx", "userId": "1DTgYBiM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'ElaoMAcC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'DeleteRewardConditionRecord' test.out

#- 149 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end '0QAsJ7Yi' \
    --limit '75' \
    --offset '32' \
    --start 'CQD9iBEx' \
    --storeId 'DgqjnGDe' \
    --viewId '1SwjZcSC' \
    > test.out 2>&1
eval_tap $? 149 'QuerySections' test.out

#- 150 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 95, "endDate": "1994-06-18T00:00:00Z", "ext": {"NPCKuzAg": {}, "9IVurf50": {}, "qbUlr3fD": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 8, "itemCount": 72, "rule": "SEQUENCE"}, "items": [{"id": "tdGpJ6Md", "sku": "C9ztrfVP"}, {"id": "Yma0C0d6", "sku": "mmiuPtbR"}, {"id": "LKZZT7e3", "sku": "vOi7n7hO"}], "localizations": {"2NC6Yh6p": {"description": "yutlJZmr", "localExt": {"6jUvJTyj": {}, "OyTaOsac": {}, "jZLFX6eN": {}}, "longDescription": "tPRxPmed", "title": "PPQcArry"}, "62ag6bq1": {"description": "axJJZsJG", "localExt": {"xbftKac7": {}, "RLPpnZ0I": {}, "8Jp1Iek2": {}}, "longDescription": "HIkZ7czH", "title": "Ax4zU7Mj"}, "ptoJ2v1o": {"description": "36S11IDD", "localExt": {"a8BdNlc1": {}, "zv8jRba9": {}, "gcQhhflQ": {}}, "longDescription": "ODzxHukw", "title": "H4GiOXyj"}}, "name": "lMpDtRRX", "rotationType": "CUSTOM", "startDate": "1999-01-04T00:00:00Z", "viewId": "3ypvLIrA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId '83NXTrQf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'CreateSection' test.out

#- 151 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'kT90DZCM' \
    > test.out 2>&1
eval_tap $? 151 'PurgeExpiredSection' test.out

#- 152 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'IxyYaAtk' \
    --storeId 'j4NHawA2' \
    > test.out 2>&1
eval_tap $? 152 'GetSection' test.out

#- 153 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 30, "endDate": "1971-02-11T00:00:00Z", "ext": {"v17K6vpw": {}, "TgtkKY4L": {}, "s9ywdJKB": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 96, "itemCount": 27, "rule": "SEQUENCE"}, "items": [{"id": "eSDgP6d2", "sku": "qjqXvHpt"}, {"id": "wRHi4vl2", "sku": "tL7Og18q"}, {"id": "ahwHL1ui", "sku": "XsPQyTD6"}], "localizations": {"oBQyeoA1": {"description": "EQJ6TTas", "localExt": {"tkoXNpNT": {}, "wgIzB2Cd": {}, "zTk9i3F3": {}}, "longDescription": "brA417PN", "title": "DUePNNQJ"}, "VtK1Yv1T": {"description": "29USm2Je", "localExt": {"hPumJb8Z": {}, "TEoMohh1": {}, "7oxE7LzZ": {}}, "longDescription": "WClvk0q1", "title": "NqmIgSYI"}, "QKi9OhNe": {"description": "UulfIubh", "localExt": {"3lZkcSxs": {}, "ey89OuVn": {}, "XtMBLqpl": {}}, "longDescription": "J41P2xUw", "title": "pcPHZKi5"}}, "name": "Mjj4qB1G", "rotationType": "NONE", "startDate": "1996-12-05T00:00:00Z", "viewId": "KCUXXUZG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId '60uagz3U' \
    --storeId 'NxtNrPn1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateSection' test.out

#- 154 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'MPiQe8yM' \
    --storeId 'fnsBUm46' \
    > test.out 2>&1
eval_tap $? 154 'DeleteSection' test.out

#- 155 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 155 'ListStores' test.out

#- 156 CreateStore
# body param: body
echo '{"defaultLanguage": "3jyUf59P", "defaultRegion": "c4INz5RA", "description": "G2zXyVVk", "supportedLanguages": ["ibvZcQt2", "GrAOoXAJ", "I5fQV9E1"], "supportedRegions": ["l1EzV5Sg", "oXrjiJdL", "X26fbC2s"], "title": "CrfW64Yw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'CreateStore' test.out

#- 157 ImportStore
eval_tap 0 157 'ImportStore # SKIP deprecated' test.out

#- 158 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 158 'GetPublishedStore' test.out

#- 159 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'DeletePublishedStore' test.out

#- 160 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 160 'GetPublishedStoreBackup' test.out

#- 161 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 161 'RollbackPublishedStore' test.out

#- 162 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId '6bH8hqDk' \
    > test.out 2>&1
eval_tap $? 162 'GetStore' test.out

#- 163 UpdateStore
# body param: body
echo '{"defaultLanguage": "hFfGJMQo", "defaultRegion": "cwwXOee0", "description": "Zcnd1Tn4", "supportedLanguages": ["LlsI2uJK", "kUEEg29a", "BFtkRJHd"], "supportedRegions": ["Oh3KnDJS", "2yyxTyXC", "gfUMkAig"], "title": "xHYzM2P0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'G92WUXJn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'UpdateStore' test.out

#- 164 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'C0uDpZk5' \
    > test.out 2>&1
eval_tap $? 164 'DeleteStore' test.out

#- 165 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId '5pHD9YPS' \
    --action 'DELETE' \
    --itemSku 'EyjuMwAn' \
    --itemType 'COINS' \
    --limit '89' \
    --offset '80' \
    --selected 'true' \
    --sortBy '["updatedAt", "updatedAt:desc"]' \
    --status 'UNPUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'wCUWrin4' \
    --updatedAtStart 'Dj1oNGqy' \
    > test.out 2>&1
eval_tap $? 165 'QueryChanges' test.out

#- 166 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'btCDQ6aN' \
    > test.out 2>&1
eval_tap $? 166 'PublishAll' test.out

#- 167 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId '9mtTI54B' \
    > test.out 2>&1
eval_tap $? 167 'PublishSelected' test.out

#- 168 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'quizRN1a' \
    > test.out 2>&1
eval_tap $? 168 'SelectAllRecords' test.out

#- 169 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'Pit5rrC8' \
    --action 'UPDATE' \
    --itemSku 'F40niRD4' \
    --itemType 'SEASON' \
    --type 'STORE' \
    --updatedAtEnd 'OfDWdgWh' \
    --updatedAtStart 'P54nqqu4' \
    > test.out 2>&1
eval_tap $? 169 'GetStatistic' test.out

#- 170 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'vrfBnRwc' \
    > test.out 2>&1
eval_tap $? 170 'UnselectAllRecords' test.out

#- 171 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'bZoePk2Y' \
    --namespace $AB_NAMESPACE \
    --storeId 'aeuIdI2s' \
    > test.out 2>&1
eval_tap $? 171 'SelectRecord' test.out

#- 172 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'dti76aht' \
    --namespace $AB_NAMESPACE \
    --storeId 'R8911aZX' \
    > test.out 2>&1
eval_tap $? 172 'UnselectRecord' test.out

#- 173 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'SyTnzJNZ' \
    --targetStoreId 'YWtvUFxM' \
    > test.out 2>&1
eval_tap $? 173 'CloneStore' test.out

#- 174 ExportStore
eval_tap 0 174 'ExportStore # SKIP deprecated' test.out

#- 175 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId 'DLQfkfob' \
    --limit '70' \
    --offset '96' \
    --sku 'NWmADv80' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    --userId 'jkfYsNER' \
    > test.out 2>&1
eval_tap $? 175 'QuerySubscriptions' test.out

#- 176 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 's0giQYLd' \
    > test.out 2>&1
eval_tap $? 176 'RecurringChargeSubscription' test.out

#- 177 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'JUDthnLY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 177 'GetTicketDynamic' test.out

#- 178 DecreaseTicketSale
# body param: body
echo '{"orderNo": "eBexBYWv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'TWjUHNai' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'DecreaseTicketSale' test.out

#- 179 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'ct8s6L6S' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 179 'GetTicketBoothID' test.out

#- 180 IncreaseTicketSale
# body param: body
echo '{"count": 21, "orderNo": "jPznFM2k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'DhXcQ0AS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'IncreaseTicketSale' test.out

#- 181 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "VtG22im2", "value": 65}, {"id": "TiFzCcjb", "value": 9}, {"id": "OilFuQlT", "value": 23}], "steamUserId": "yPo7E67P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'vmoM3cGn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'UnlockSteamUserAchievement' test.out

#- 182 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'G2iMvA1R' \
    --xboxUserId 'l5DvLe2u' \
    > test.out 2>&1
eval_tap $? 182 'GetXblUserAchievements' test.out

#- 183 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "uKNuChHm", "value": 85}, {"id": "xj7ioOxO", "value": 5}, {"id": "045cGrkD", "value": 82}], "serviceConfigId": "wlv0p0xm", "titleId": "d0KFLQ3w", "xboxUserId": "wTeFHJXh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '8sWfes9F' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'UpdateXblUserAchievement' test.out

#- 184 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'WfR1YthN' \
    > test.out 2>&1
eval_tap $? 184 'AnonymizeCampaign' test.out

#- 185 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'MlNJoqXC' \
    > test.out 2>&1
eval_tap $? 185 'AnonymizeEntitlement' test.out

#- 186 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'kO3wViAX' \
    > test.out 2>&1
eval_tap $? 186 'AnonymizeFulfillment' test.out

#- 187 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'qCwTjUX6' \
    > test.out 2>&1
eval_tap $? 187 'AnonymizeIntegration' test.out

#- 188 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'dB7WgYfE' \
    > test.out 2>&1
eval_tap $? 188 'AnonymizeOrder' test.out

#- 189 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'xoxVslLW' \
    > test.out 2>&1
eval_tap $? 189 'AnonymizePayment' test.out

#- 190 AnonymizeRevocation
$CLI_EXE \
    --sn platform \
    --op AnonymizeRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'Ts9dQ4S4' \
    > test.out 2>&1
eval_tap $? 190 'AnonymizeRevocation' test.out

#- 191 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '60FuY6FF' \
    > test.out 2>&1
eval_tap $? 191 'AnonymizeSubscription' test.out

#- 192 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'x4gIfC8r' \
    > test.out 2>&1
eval_tap $? 192 'AnonymizeWallet' test.out

#- 193 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId 'FZ8dBSoY' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 193 'GetUserDLC' test.out

#- 194 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '59Jf7jwT' \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'PmkPxi96' \
    --features '["iIcqNCer", "8hHXVsls", "uqUE06Mh"]' \
    --itemId '["V84o4EmQ", "ukbIt8zb", "5DeBMMgz"]' \
    --limit '84' \
    --offset '55' \
    > test.out 2>&1
eval_tap $? 194 'QueryUserEntitlements' test.out

#- 195 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1983-09-18T00:00:00Z", "grantedCode": "F35kI7H9", "itemId": "cHLZbiIT", "itemNamespace": "sbBdO0G9", "language": "qNhH_YLst-lD", "quantity": 99, "region": "aVelvIW3", "source": "OTHER", "startDate": "1995-06-14T00:00:00Z", "storeId": "XqiLkPoU"}, {"endDate": "1997-01-06T00:00:00Z", "grantedCode": "rtgfFq2w", "itemId": "YFhAjqz7", "itemNamespace": "0Hx42Xde", "language": "hmSE_dtEE", "quantity": 27, "region": "SfZrEj4Q", "source": "REDEEM_CODE", "startDate": "1976-07-04T00:00:00Z", "storeId": "pS5fUTGV"}, {"endDate": "1981-04-11T00:00:00Z", "grantedCode": "5UgGVloW", "itemId": "q6b61NU6", "itemNamespace": "Ewp0UoDc", "language": "EU_vuKB_387", "quantity": 73, "region": "4Qbfa7nn", "source": "IAP", "startDate": "1977-10-29T00:00:00Z", "storeId": "NlxDz0lV"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'n42lZtrF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'GrantUserEntitlement' test.out

#- 196 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'OFjxW5Vj' \
    --activeOnly 'false' \
    --appId 'o3huH7qL' \
    > test.out 2>&1
eval_tap $? 196 'GetUserAppEntitlementByAppId' test.out

#- 197 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'lH6Uphuv' \
    --activeOnly 'false' \
    --limit '16' \
    --offset '16' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 197 'QueryUserEntitlementsByAppType' test.out

#- 198 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'CyrqmdxW' \
    --activeOnly 'true' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'FOT2OYTi' \
    > test.out 2>&1
eval_tap $? 198 'GetUserEntitlementByItemId' test.out

#- 199 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'c5NvRoK3' \
    --ids '["V7OrFVJU", "p2vQTaoI", "T44KwST9"]' \
    > test.out 2>&1
eval_tap $? 199 'GetUserActiveEntitlementsByItemIds' test.out

#- 200 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'sm7QNRYk' \
    --activeOnly 'false' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'X6tBNiI0' \
    > test.out 2>&1
eval_tap $? 200 'GetUserEntitlementBySku' test.out

#- 201 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'SAugWhFa' \
    --appIds '["d8LDASya", "NIfLryhx", "1CfmuarI"]' \
    --itemIds '["5UOdshG8", "rd7PVylp", "nVYoKsbA"]' \
    --skus '["BmFQCikL", "k3QiHK7E", "ew9PHxc7"]' \
    > test.out 2>&1
eval_tap $? 201 'ExistsAnyUserActiveEntitlement' test.out

#- 202 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'lJHPITB2' \
    --itemIds '["kHgca2nP", "iOmDL6zu", "qrVgILm7"]' \
    > test.out 2>&1
eval_tap $? 202 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 203 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'jgX7Eslf' \
    --appId 'sfIOZp72' \
    > test.out 2>&1
eval_tap $? 203 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 204 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '7sdoihRM' \
    --entitlementClazz 'LOOTBOX' \
    --itemId 'xkaICSKC' \
    > test.out 2>&1
eval_tap $? 204 'GetUserEntitlementOwnershipByItemId' test.out

#- 205 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'TtTPZDPX' \
    --ids '["ZEj93P7E", "dOPXn76K", "0peS0YMI"]' \
    > test.out 2>&1
eval_tap $? 205 'GetUserEntitlementOwnershipByItemIds' test.out

#- 206 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'eXcUYP9W' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'kjZERF9n' \
    > test.out 2>&1
eval_tap $? 206 'GetUserEntitlementOwnershipBySku' test.out

#- 207 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'X1fHqBsm' \
    --entitlementIds 'Ibo1nUe3' \
    > test.out 2>&1
eval_tap $? 207 'RevokeUserEntitlements' test.out

#- 208 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'NzLjVoHh' \
    --namespace $AB_NAMESPACE \
    --userId 'iwNA7gZt' \
    > test.out 2>&1
eval_tap $? 208 'GetUserEntitlement' test.out

#- 209 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1985-02-25T00:00:00Z", "nullFieldList": ["4trL6FlR", "8ej5fWEh", "OaZ4HFAS"], "startDate": "1976-08-01T00:00:00Z", "status": "ACTIVE", "useCount": 46}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'MPXO8HcQ' \
    --namespace $AB_NAMESPACE \
    --userId 'zpB3Vyql' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'UpdateUserEntitlement' test.out

#- 210 ConsumeUserEntitlement
# body param: body
echo '{"options": ["of1DcB9H", "G2ukeF22", "1Se6Ibsi"], "requestId": "MJWQJX9z", "useCount": 88}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'HZjPBuCc' \
    --namespace $AB_NAMESPACE \
    --userId 'mAJb6nub' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'ConsumeUserEntitlement' test.out

#- 211 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'HyLImlSs' \
    --namespace $AB_NAMESPACE \
    --userId 'sOTxIQFp' \
    > test.out 2>&1
eval_tap $? 211 'DisableUserEntitlement' test.out

#- 212 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'uTNKm5fo' \
    --namespace $AB_NAMESPACE \
    --userId 'aYwnUCSa' \
    > test.out 2>&1
eval_tap $? 212 'EnableUserEntitlement' test.out

#- 213 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'FwZvnx7G' \
    --namespace $AB_NAMESPACE \
    --userId 'OHMNV7TC' \
    > test.out 2>&1
eval_tap $? 213 'GetUserEntitlementHistories' test.out

#- 214 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'uEYz6JV5' \
    --namespace $AB_NAMESPACE \
    --userId 'Aw9MESgg' \
    > test.out 2>&1
eval_tap $? 214 'RevokeUserEntitlement' test.out

#- 215 FulfillItem
# body param: body
echo '{"duration": 63, "endDate": "1990-08-10T00:00:00Z", "itemId": "DQR9uJc2", "itemSku": "l7htqDvv", "language": "lSqGUy8s", "order": {"currency": {"currencyCode": "el6AVl6Y", "currencySymbol": "WgXDGVDT", "currencyType": "VIRTUAL", "decimals": 24, "namespace": "VjckKxhG"}, "ext": {"Y5vECZT8": {}, "TKRk0gzd": {}, "ztbkmc4C": {}}, "free": true}, "orderNo": "sHqPYqLb", "origin": "Other", "quantity": 85, "region": "CM1SCTjc", "source": "OTHER", "startDate": "1982-05-29T00:00:00Z", "storeId": "UoFGsotf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'BJmUAGwI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'FulfillItem' test.out

#- 216 RedeemCode
# body param: body
echo '{"code": "9INeZcUg", "language": "BT-445", "region": "3m1JZucN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'HzcysE3U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'RedeemCode' test.out

#- 217 FulfillRewards
# body param: body
echo '{"origin": "Steam", "rewards": [{"currency": {"currencyCode": "eq1GFv8k", "namespace": "EPlytaqa"}, "item": {"itemId": "vuMb0rxW", "itemSku": "cV4LGDFg", "itemType": "acyzg7jV"}, "quantity": 48, "type": "ITEM"}, {"currency": {"currencyCode": "yI0lVG2n", "namespace": "P89Fm7Fb"}, "item": {"itemId": "C0Z7t57P", "itemSku": "nmWkKa0O", "itemType": "uW54ouzp"}, "quantity": 59, "type": "ITEM"}, {"currency": {"currencyCode": "UdcHCoGG", "namespace": "Sw3OKRrz"}, "item": {"itemId": "IvoY1I0z", "itemSku": "P8cTf4uI", "itemType": "GFYVyODW"}, "quantity": 29, "type": "ITEM"}], "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'tYJWCkFn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'FulfillRewards' test.out

#- 218 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'lv77mUO5' \
    --endTime '0iMbm1nz' \
    --limit '33' \
    --offset '6' \
    --productId 'Tef7z17F' \
    --startTime 'zI41VXTw' \
    --status 'VERIFIED' \
    --type 'TWITCH' \
    > test.out 2>&1
eval_tap $? 218 'QueryUserIAPOrders' test.out

#- 219 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '0264WsoJ' \
    > test.out 2>&1
eval_tap $? 219 'QueryAllUserIAPOrders' test.out

#- 220 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'gMuSrew2' \
    --endTime 'kHk1xTne' \
    --limit '80' \
    --offset '2' \
    --startTime 'ZIChglsh' \
    --status 'PENDING' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 220 'QueryUserIAPConsumeHistory' test.out

#- 221 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "ObVR-NVAV", "productId": "ghs7jliT", "region": "bSrM6eGR", "type": "STADIA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '5uydPZx2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'MockFulfillIAPItem' test.out

#- 222 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'brSH1LFU' \
    --itemId 'acXR1scH' \
    --limit '54' \
    --offset '44' \
    --status 'INIT' \
    > test.out 2>&1
eval_tap $? 222 'QueryUserOrders' test.out

#- 223 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "73g0I3Ef", "currencyNamespace": "SsEuelpy", "discountedPrice": 98, "ext": {"qiY04Ije": {}, "FpE9hBsh": {}, "zLxhpMTH": {}}, "itemId": "UmNSxSJ5", "language": "0Q23RoRQ", "options": {"skipPriceValidation": true}, "platform": "Nintendo", "price": 13, "quantity": 17, "region": "FVMOkMpT", "returnUrl": "k4WwYeck", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'O9OvSEvq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'AdminCreateUserOrder' test.out

#- 224 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'HkHAR51m' \
    --itemId 'Eyxo6HjL' \
    > test.out 2>&1
eval_tap $? 224 'CountOfPurchasedItem' test.out

#- 225 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'YBIl9kOp' \
    --userId 'hNdKVOyg' \
    > test.out 2>&1
eval_tap $? 225 'GetUserOrder' test.out

#- 226 UpdateUserOrderStatus
# body param: body
echo '{"status": "CLOSED", "statusReason": "NmnTZ8Wg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'xIjqkv5d' \
    --userId '9cOlpFS3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'UpdateUserOrderStatus' test.out

#- 227 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ZuvNa866' \
    --userId 'Yx5s0toC' \
    > test.out 2>&1
eval_tap $? 227 'FulfillUserOrder' test.out

#- 228 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'w4vwv0Yh' \
    --userId 'tZsX7FJl' \
    > test.out 2>&1
eval_tap $? 228 'GetUserOrderGrant' test.out

#- 229 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'HM5Zi76X' \
    --userId 'QIioAlRC' \
    > test.out 2>&1
eval_tap $? 229 'GetUserOrderHistories' test.out

#- 230 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "RCIfKK4C"}, "authorisedTime": "1982-08-19T00:00:00Z", "chargebackReversedTime": "1998-09-06T00:00:00Z", "chargebackTime": "1986-05-27T00:00:00Z", "chargedTime": "1996-12-01T00:00:00Z", "createdTime": "1987-07-31T00:00:00Z", "currency": {"currencyCode": "XhMQvxig", "currencySymbol": "ZU9VNhYh", "currencyType": "REAL", "decimals": 24, "namespace": "FRUAMDUB"}, "customParameters": {"o7fYQ7K6": {}, "BTzRsaM6": {}, "1vMyxuXk": {}}, "extOrderNo": "mZtuGBpu", "extTxId": "decfjngF", "extUserId": "sUqB6ANl", "issuedAt": "1984-09-29T00:00:00Z", "metadata": {"sA7mET4S": "uATnC9ov", "NVeKy8Fm": "GGTD8fKI", "wU8HnIfz": "PP2i8gFE"}, "namespace": "28vu2SYV", "nonceStr": "MIwDDdRc", "paymentMethod": "bKL8fpF5", "paymentMethodFee": 67, "paymentOrderNo": "Q0lAPznR", "paymentProvider": "STRIPE", "paymentProviderFee": 14, "paymentStationUrl": "0Gq7qoNL", "price": 79, "refundedTime": "1972-04-30T00:00:00Z", "salesTax": 19, "sandbox": true, "sku": "ikyOZ9ZO", "status": "REFUNDING", "statusReason": "uhro6lwb", "subscriptionId": "WI0HFepW", "subtotalPrice": 12, "targetNamespace": "537URQmR", "targetUserId": "nbWZBCia", "tax": 78, "totalPrice": 53, "totalTax": 46, "txEndTime": "1994-10-06T00:00:00Z", "type": "5IOIO0mp", "userId": "th0f3fHi", "vat": 82}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo '1r5uMudn' \
    --userId 'iB94A9o2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'ProcessUserOrderNotification' test.out

#- 231 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'g0j7YYsp' \
    --userId '7cJdOoWb' \
    > test.out 2>&1
eval_tap $? 231 'DownloadUserOrderReceipt' test.out

#- 232 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "sAvi20uY", "currencyNamespace": "DLwL9tdu", "customParameters": {"0isVeEgf": {}, "IFZJVVJv": {}, "KYEIN6c3": {}}, "description": "IW1mg2pr", "extOrderNo": "a5O48HbQ", "extUserId": "K9c3rPST", "itemType": "BUNDLE", "language": "ATK_zMqw_BJ", "metadata": {"LlH8D6Jn": "Qsumx1yy", "1LNTF8Vl": "HRUTFjoK", "eAXThdAz": "CK1qzUdC"}, "notifyUrl": "DzXIpKRf", "omitNotification": true, "platform": "ckKfvAGh", "price": 23, "recurringPaymentOrderNo": "wFHr6oX3", "region": "tZ4v0ydB", "returnUrl": "fGjuLW8B", "sandbox": true, "sku": "6r9vXeyM", "subscriptionId": "N0i68ybp", "title": "jZI4aGn9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'eQt4gsmc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'CreateUserPaymentOrder' test.out

#- 233 RefundUserPaymentOrder
# body param: body
echo '{"description": "U0U7ulNK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'bISBgpzj' \
    --userId 'H6eZ8i7t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'RefundUserPaymentOrder' test.out

#- 234 ApplyUserRedemption
# body param: body
echo '{"code": "fw9R0n7h", "orderNo": "RTeoBriU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId '2Zw5MlYY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'ApplyUserRedemption' test.out

#- 235 DoRevocation
# body param: body
echo '{"meta": {"uuNFUgtL": {}, "PLoNJydz": {}, "ZgNfxcUe": {}}, "revokeEntries": [{"currency": {"balanceOrigin": "GooglePlay", "currencyCode": "QERJJpuk", "namespace": "9VZAN27p"}, "entitlement": {"clazz": "CODE", "entitlementId": "N8h4jfBi", "type": "CONSUMABLE"}, "item": {"itemIdentity": "elzXIFWP", "itemIdentityType": "ITEM_SKU", "origin": "System"}, "quantity": 84, "type": "ITEM"}, {"currency": {"balanceOrigin": "Steam", "currencyCode": "Qh9U60lS", "namespace": "2R5nndSW"}, "entitlement": {"clazz": "MEDIA", "entitlementId": "agypj9xY", "type": "CONSUMABLE"}, "item": {"itemIdentity": "LpIos3oK", "itemIdentityType": "ITEM_ID", "origin": "IOS"}, "quantity": 58, "type": "ENTITLEMENT"}, {"currency": {"balanceOrigin": "Xbox", "currencyCode": "av2v2q0K", "namespace": "vFiBPQCs"}, "entitlement": {"clazz": "CODE", "entitlementId": "ePUSy76f", "type": "DURABLE"}, "item": {"itemIdentity": "dthXp3aE", "itemIdentityType": "ITEM_SKU", "origin": "Playstation"}, "quantity": 48, "type": "ITEM"}], "source": "ORDER", "transactionId": "TFyos7CA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DoRevocation \
    --namespace $AB_NAMESPACE \
    --userId 'ffalLO46' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'DoRevocation' test.out

#- 236 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '7diTx7uY' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId '2ihoAuRb' \
    --limit '4' \
    --offset '48' \
    --sku 'ML0SsmLS' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 236 'QueryUserSubscriptions' test.out

#- 237 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'VYSgPb0H' \
    --excludeSystem 'true' \
    --limit '52' \
    --offset '39' \
    --subscriptionId '1s7pl3RY' \
    > test.out 2>&1
eval_tap $? 237 'GetUserSubscriptionActivities' test.out

#- 238 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 70, "itemId": "CnfELoGI", "language": "Ke2z0zTb", "reason": "UKtNMdT5", "region": "urSR2q5C", "source": "9bneIWAZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '9npWTUXf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'PlatformSubscribeSubscription' test.out

#- 239 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'QJufvbus' \
    --itemId 'ralfV55B' \
    > test.out 2>&1
eval_tap $? 239 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 240 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '9rRb9WzL' \
    --userId 'OYmPEB7k' \
    > test.out 2>&1
eval_tap $? 240 'GetUserSubscription' test.out

#- 241 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Vy8YCTez' \
    --userId '1KFbxXNo' \
    > test.out 2>&1
eval_tap $? 241 'DeleteUserSubscription' test.out

#- 242 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "YhThHB7K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '6o94Al70' \
    --userId 'N99Li31U' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'CancelSubscription' test.out

#- 243 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 39, "reason": "8ck93msZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'MWodT9Iy' \
    --userId 'cLxGEP5N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'GrantDaysToSubscription' test.out

#- 244 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'U3tDfV6G' \
    --userId '5n69Tb7P' \
    --excludeFree 'true' \
    --limit '43' \
    --offset '39' \
    > test.out 2>&1
eval_tap $? 244 'GetUserSubscriptionBillingHistories' test.out

#- 245 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "ZROiizLS"}, "authorisedTime": "1978-07-22T00:00:00Z", "chargebackReversedTime": "1972-04-29T00:00:00Z", "chargebackTime": "1974-12-26T00:00:00Z", "chargedTime": "1994-01-06T00:00:00Z", "createdTime": "1989-10-06T00:00:00Z", "currency": {"currencyCode": "kDYTynDC", "currencySymbol": "plvjVVPp", "currencyType": "REAL", "decimals": 69, "namespace": "aIEmD3Md"}, "customParameters": {"IzAbH2bV": {}, "MTbv3msR": {}, "cBi1UJYn": {}}, "extOrderNo": "VkOdeI9m", "extTxId": "7x8d4JVR", "extUserId": "fuVD1b5r", "issuedAt": "1977-01-21T00:00:00Z", "metadata": {"NmxMfAI8": "xDUxXKou", "xasH768h": "ySFhHFrA", "6yimQNmy": "GqeAJOga"}, "namespace": "8RBiyT3b", "nonceStr": "bsBI9q6J", "paymentMethod": "YjoedY4y", "paymentMethodFee": 87, "paymentOrderNo": "kOPFPCw1", "paymentProvider": "WALLET", "paymentProviderFee": 49, "paymentStationUrl": "7ogiIoqg", "price": 95, "refundedTime": "1984-05-01T00:00:00Z", "salesTax": 61, "sandbox": false, "sku": "rMiVMn3O", "status": "CHARGEBACK", "statusReason": "tYKU4ZQe", "subscriptionId": "eT6AwgtF", "subtotalPrice": 52, "targetNamespace": "tkgiobZT", "targetUserId": "G0sJfj94", "tax": 36, "totalPrice": 70, "totalTax": 68, "txEndTime": "1973-10-14T00:00:00Z", "type": "K8krtX8h", "userId": "0w2XSssg", "vat": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'pagbiVD1' \
    --userId 'zEtnzDqy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'ProcessUserSubscriptionNotification' test.out

#- 246 AcquireUserTicket
# body param: body
echo '{"count": 17, "orderNo": "u2IHcIxD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'gRA9EDi1' \
    --namespace $AB_NAMESPACE \
    --userId 's3Bk1yBD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'AcquireUserTicket' test.out

#- 247 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'iBgG7tLU' \
    > test.out 2>&1
eval_tap $? 247 'QueryUserCurrencyWallets' test.out

#- 248 DebitUserWalletByCurrencyCode
# body param: body
echo '{"allowOverdraft": false, "amount": 69, "balanceOrigin": "IOS", "reason": "oAAX46fX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DebitUserWalletByCurrencyCode \
    --currencyCode 'wCFLQPqc' \
    --namespace $AB_NAMESPACE \
    --userId '0tNWdi9S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'DebitUserWalletByCurrencyCode' test.out

#- 249 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'EbRDzwZX' \
    --namespace $AB_NAMESPACE \
    --userId 'iE0jiFfA' \
    --limit '31' \
    --offset '99' \
    > test.out 2>&1
eval_tap $? 249 'ListUserCurrencyTransactions' test.out

#- 250 CheckWallet
eval_tap 0 250 'CheckWallet # SKIP deprecated' test.out

#- 251 CreditUserWallet
# body param: body
echo '{"amount": 38, "expireAt": "1981-11-07T00:00:00Z", "origin": "Nintendo", "reason": "5hdrlGRU", "source": "PURCHASE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'sRT7nR7F' \
    --namespace $AB_NAMESPACE \
    --userId '9JlfOmYX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'CreditUserWallet' test.out

#- 252 PayWithUserWallet
# body param: body
echo '{"amount": 12, "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'UFXdumlR' \
    --namespace $AB_NAMESPACE \
    --userId '7g1a9Brf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'PayWithUserWallet' test.out

#- 253 GetUserWallet
eval_tap 0 253 'GetUserWallet # SKIP deprecated' test.out

#- 254 DebitUserWallet
eval_tap 0 254 'DebitUserWallet # SKIP deprecated' test.out

#- 255 DisableUserWallet
eval_tap 0 255 'DisableUserWallet # SKIP deprecated' test.out

#- 256 EnableUserWallet
eval_tap 0 256 'EnableUserWallet # SKIP deprecated' test.out

#- 257 ListUserWalletTransactions
eval_tap 0 257 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 258 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'GFCZlHFS' \
    > test.out 2>&1
eval_tap $? 258 'ListViews' test.out

#- 259 CreateView
# body param: body
echo '{"displayOrder": 58, "localizations": {"dx7Hhz5M": {"description": "bKdkNuO6", "localExt": {"0zyiULnk": {}, "rzYziGQy": {}, "bU4BVxy5": {}}, "longDescription": "or7y49y5", "title": "TdMmJUZw"}, "V3gLRDv1": {"description": "6e66YDuU", "localExt": {"LpfGpgwE": {}, "rV4jKTKq": {}, "AeXRdR86": {}}, "longDescription": "bwtJGnj9", "title": "02sd9loo"}, "obB8aCch": {"description": "GEoNHiD7", "localExt": {"Lxu7BpNi": {}, "4G11XW0Z": {}, "Dx85xnM5": {}}, "longDescription": "PBMjPL0E", "title": "Vgj5EkI3"}}, "name": "xinR978j"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'X8cZNN7c' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'CreateView' test.out

#- 260 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'LAeQ7knQ' \
    --storeId '1nEtMdl0' \
    > test.out 2>&1
eval_tap $? 260 'GetView' test.out

#- 261 UpdateView
# body param: body
echo '{"displayOrder": 27, "localizations": {"hzEOW3R3": {"description": "mRzjYlIg", "localExt": {"Gk4LM69V": {}, "qA0rcYAm": {}, "AKk32t9L": {}}, "longDescription": "X5tijGK5", "title": "dWyNyQBe"}, "RVnT9b2l": {"description": "D53gxrFy", "localExt": {"tF80Rv6v": {}, "Buxdf9rk": {}, "NlMm5JWJ": {}}, "longDescription": "zFweAAFn", "title": "JZ5K3IYS"}, "hpAbyQyN": {"description": "oBvgOwcu", "localExt": {"7nFbjMYc": {}, "CBP1iAJE": {}, "OLXJb5TP": {}}, "longDescription": "Oeqy1uZm", "title": "IVaf2IGI"}}, "name": "Ba8c0KJG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId '0TnPbwo1' \
    --storeId '7K3PHxC5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdateView' test.out

#- 262 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'WMiikTWV' \
    --storeId 'r8f5k5oG' \
    > test.out 2>&1
eval_tap $? 262 'DeleteView' test.out

#- 263 QueryWallets
eval_tap 0 263 'QueryWallets # SKIP deprecated' test.out

#- 264 GetWallet
eval_tap 0 264 'GetWallet # SKIP deprecated' test.out

#- 265 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'eJxbnRsT' \
    --end 'ZNdhtY3j' \
    --start 'zgLPXVcV' \
    > test.out 2>&1
eval_tap $? 265 'SyncOrders' test.out

#- 266 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["0VKYqurx", "pj4lsMNC", "j83VPKWW"], "apiKey": "2pww9QJa", "authoriseAsCapture": true, "blockedPaymentMethods": ["suZgMMag", "k7SB6Rgm", "bcWmXTFD"], "clientKey": "iHscv7fD", "dropInSettings": "57YJoZ63", "liveEndpointUrlPrefix": "thGDMLME", "merchantAccount": "RMB7fzar", "notificationHmacKey": "xf2Jktfn", "notificationPassword": "HeFxRAcA", "notificationUsername": "2s31Q9fI", "returnUrl": "VrGWOLMf", "settings": "ygbEJpv7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'TestAdyenConfig' test.out

#- 267 TestAliPayConfig
# body param: body
echo '{"appId": "UMEoT2G0", "privateKey": "NvcOSZ3s", "publicKey": "AgvQXDqc", "returnUrl": "A1wlluUA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'TestAliPayConfig' test.out

#- 268 TestCheckoutConfig
# body param: body
echo '{"publicKey": "y87oQ6GQ", "secretKey": "ETohkV9y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'TestCheckoutConfig' test.out

#- 269 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'DzSQravE' \
    --region 'JI5ITvF6' \
    > test.out 2>&1
eval_tap $? 269 'DebugMatchedPaymentMerchantConfig' test.out

#- 270 TestPayPalConfig
# body param: body
echo '{"clientID": "bLouLibE", "clientSecret": "MNq1CeOn", "returnUrl": "cLEmgHhM", "webHookId": "lKmJUXc0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'TestPayPalConfig' test.out

#- 271 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["uugdT5rT", "Cf1ue2T2", "X0pZ2LiH"], "publishableKey": "FhwsXZTb", "secretKey": "Cx9h8EEj", "webhookSecret": "9Q3sIVRC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'TestStripeConfig' test.out

#- 272 TestWxPayConfig
# body param: body
echo '{"appId": "wRVlUAYv", "key": "dfRjYtWn", "mchid": "Nox0zy2Z", "returnUrl": "wtNIzW5C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'TestWxPayConfig' test.out

#- 273 TestXsollaConfig
# body param: body
echo '{"apiKey": "Tt4A5Tow", "flowCompletionUrl": "6wFBEezW", "merchantId": 5, "projectId": 60, "projectSecretKey": "mbxdrxL0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'TestXsollaConfig' test.out

#- 274 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'Rx3J6UzV' \
    > test.out 2>&1
eval_tap $? 274 'GetPaymentMerchantConfig' test.out

#- 275 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["m5cAKfGL", "ntlVXJwU", "jwUCmCoz"], "apiKey": "WOnCMSMc", "authoriseAsCapture": false, "blockedPaymentMethods": ["JfxMLS1o", "lz3NgGlN", "1z9XKePj"], "clientKey": "ZxuVF4FI", "dropInSettings": "bLKxcoFV", "liveEndpointUrlPrefix": "zAe2J3vt", "merchantAccount": "XdhfNXeJ", "notificationHmacKey": "Jvrp2goR", "notificationPassword": "gK0MNITX", "notificationUsername": "C8PdJeLY", "returnUrl": "Cw4H06zT", "settings": "lW3SMFmf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id '3BLPgj8U' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'UpdateAdyenConfig' test.out

#- 276 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'x0Fu7c4a' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 276 'TestAdyenConfigById' test.out

#- 277 UpdateAliPayConfig
# body param: body
echo '{"appId": "J45M0cZE", "privateKey": "tuC36ywv", "publicKey": "78KQ6Pyt", "returnUrl": "cQs2FaLR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id '6Fi0NUnR' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'UpdateAliPayConfig' test.out

#- 278 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '4rOiZtPg' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 278 'TestAliPayConfigById' test.out

#- 279 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "p1qlxNgB", "secretKey": "varq57DR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'apfumtqd' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'UpdateCheckoutConfig' test.out

#- 280 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id '4D9FcO90' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 280 'TestCheckoutConfigById' test.out

#- 281 UpdatePayPalConfig
# body param: body
echo '{"clientID": "6nDdm4fg", "clientSecret": "Oa3Zfojs", "returnUrl": "AIGkxPNv", "webHookId": "8W515KS6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'x08espXM' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'UpdatePayPalConfig' test.out

#- 282 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'cRjeLoo0' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 282 'TestPayPalConfigById' test.out

#- 283 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["4si7eXdG", "0KPuu7TN", "TxH8HZRb"], "publishableKey": "BaFBawgI", "secretKey": "23z9F3Vs", "webhookSecret": "3BuZsoon"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id '23pj5nhF' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'UpdateStripeConfig' test.out

#- 284 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'dxcwNApH' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 284 'TestStripeConfigById' test.out

#- 285 UpdateWxPayConfig
# body param: body
echo '{"appId": "oaMasExj", "key": "vtPivNWW", "mchid": "8kKk1P7l", "returnUrl": "KmElBhOo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'n1lUtgu7' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'UpdateWxPayConfig' test.out

#- 286 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'FYwueJmf' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 286 'UpdateWxPayConfigCert' test.out

#- 287 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'DXdjvsnB' \
    > test.out 2>&1
eval_tap $? 287 'TestWxPayConfigById' test.out

#- 288 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "vKoIxZTa", "flowCompletionUrl": "cp7ibujf", "merchantId": 96, "projectId": 47, "projectSecretKey": "HPvwzjp7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'VNS0QS4G' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'UpdateXsollaConfig' test.out

#- 289 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'e8j4Yurw' \
    > test.out 2>&1
eval_tap $? 289 'TestXsollaConfigById' test.out

#- 290 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": false, "size": "LARGE", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'eThoQJ5o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'UpdateXsollaUIConfig' test.out

#- 291 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '54' \
    --namespace_ 'CWj9oNz8' \
    --offset '68' \
    --region 'oIA6ozY0' \
    > test.out 2>&1
eval_tap $? 291 'QueryPaymentProviderConfig' test.out

#- 292 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "FcRP46xD", "region": "cUQdXO6K", "sandboxTaxJarApiToken": "eA8SI0cU", "specials": ["STRIPE", "XSOLLA", "WXPAY"], "taxJarApiToken": "OOS6J79L", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'CreatePaymentProviderConfig' test.out

#- 293 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 293 'GetAggregatePaymentProviders' test.out

#- 294 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'ByZhRTuh' \
    --region 'vLMFyV8V' \
    > test.out 2>&1
eval_tap $? 294 'DebugMatchedPaymentProviderConfig' test.out

#- 295 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 295 'GetSpecialPaymentProviders' test.out

#- 296 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "wSgBZI4d", "region": "7XBZRRyM", "sandboxTaxJarApiToken": "kiV5Sjny", "specials": ["XSOLLA", "ADYEN", "XSOLLA"], "taxJarApiToken": "KwzZ3qfb", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'aLu8hlOY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'UpdatePaymentProviderConfig' test.out

#- 297 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'NcrjBgIp' \
    > test.out 2>&1
eval_tap $? 297 'DeletePaymentProviderConfig' test.out

#- 298 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 298 'GetPaymentTaxConfig' test.out

#- 299 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "oLYBaP0F", "taxJarApiToken": "MSUWkR39", "taxJarEnabled": false, "taxJarProductCodesMapping": {"EpdEcMCF": "qQytD8bC", "03iGVaBB": "NRzFvYwd", "Vqxeub2p": "S8za6eWK"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'UpdatePaymentTaxConfig' test.out

#- 300 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'n5MWTrzE' \
    --end 'XMQUgosp' \
    --start 'EgDQwmCo' \
    > test.out 2>&1
eval_tap $? 300 'SyncPaymentOrders' test.out

#- 301 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'MhCGyLq5' \
    --storeId 'mq3esXPm' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetRootCategories' test.out

#- 302 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'HpH7eA6k' \
    --storeId '6ANAu8Dq' \
    > test.out 2>&1
eval_tap $? 302 'DownloadCategories' test.out

#- 303 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'sKlxTOOl' \
    --namespace $AB_NAMESPACE \
    --language 'Ds7agonh' \
    --storeId 'QHq1urT3' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetCategory' test.out

#- 304 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'hRP74zmA' \
    --namespace $AB_NAMESPACE \
    --language '3dbe2Sva' \
    --storeId '6SWs9FrB' \
    > test.out 2>&1
eval_tap $? 304 'PublicGetChildCategories' test.out

#- 305 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'ZFNUNykX' \
    --namespace $AB_NAMESPACE \
    --language '7hCfueTz' \
    --storeId 'OnjougjR' \
    > test.out 2>&1
eval_tap $? 305 'PublicGetDescendantCategories' test.out

#- 306 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 306 'PublicListCurrencies' test.out

#- 307 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'ZJ8uUn7Y' \
    --region '4e3V78VV' \
    --storeId 'Osxpmg3k' \
    --appId 'SKhB34Jr' \
    > test.out 2>&1
eval_tap $? 307 'PublicGetItemByAppId' test.out

#- 308 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --baseAppId 'Sv2w7Wab' \
    --categoryPath '5oTLrffK' \
    --features 'WbLLCWKv' \
    --includeSubCategoryItem 'false' \
    --itemType 'BUNDLE' \
    --language 'xWSCvMOH' \
    --limit '20' \
    --offset '73' \
    --region 'yYbrWWNW' \
    --sortBy '["name", "updatedAt:desc", "displayOrder"]' \
    --storeId 'jwT5VYxs' \
    --tags 'SeInKTSQ' \
    > test.out 2>&1
eval_tap $? 308 'PublicQueryItems' test.out

#- 309 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'gRHDOON2' \
    --region 'qQskSnJL' \
    --storeId 'O3XL6zcG' \
    --sku 'kYH6KSTr' \
    > test.out 2>&1
eval_tap $? 309 'PublicGetItemBySku' test.out

#- 310 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language '2lZ1uk05' \
    --region 'qVPx5Vjc' \
    --storeId 'kw7q18s4' \
    --itemIds 'tWGtIPRh' \
    > test.out 2>&1
eval_tap $? 310 'PublicBulkGetItems' test.out

#- 311 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["wjwSXtij", "i1dtJILE", "w2gT9IcH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'PublicValidateItemPurchaseCondition' test.out

#- 312 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'LOOTBOX' \
    --limit '2' \
    --offset '71' \
    --region 'qKYNWtuV' \
    --storeId 'ZYCdLcDI' \
    --keyword 'tC7zOGvA' \
    --language 'eIYVg9fa' \
    > test.out 2>&1
eval_tap $? 312 'PublicSearchItems' test.out

#- 313 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'f2Mj3zWF' \
    --namespace $AB_NAMESPACE \
    --language 'ZjH9XHfZ' \
    --region 'zmq9vb1j' \
    --storeId '9qnV3bdn' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetApp' test.out

#- 314 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'JB8FLWnX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 314 'PublicGetItemDynamicData' test.out

#- 315 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'vvy9abn8' \
    --namespace $AB_NAMESPACE \
    --language 'S3etaK7B' \
    --populateBundle 'false' \
    --region 'X3TxQq9G' \
    --storeId 'XCLu2YUr' \
    > test.out 2>&1
eval_tap $? 315 'PublicGetItem' test.out

#- 316 GetPaymentCustomization
eval_tap 0 316 'GetPaymentCustomization # SKIP deprecated' test.out

#- 317 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "ExwQFlcB", "paymentProvider": "STRIPE", "returnUrl": "6NIEf52X", "ui": "ye5vvCSX", "zipCode": "zB5z3RiR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicGetPaymentUrl' test.out

#- 318 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 's77SeXRT' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetPaymentMethods' test.out

#- 319 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'eB4jOPTE' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetUnpaidPaymentOrder' test.out

#- 320 Pay
# body param: body
echo '{"token": "Qapguklb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'ZwG2w2w0' \
    --paymentProvider 'CHECKOUT' \
    --zipCode 's2R5TdLx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'Pay' test.out

#- 321 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'dAJ75UDU' \
    > test.out 2>&1
eval_tap $? 321 'PublicCheckPaymentOrderPaidStatus' test.out

#- 322 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'CHECKOUT' \
    --region 'PbYJaBgY' \
    > test.out 2>&1
eval_tap $? 322 'GetPaymentPublicConfig' test.out

#- 323 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code '9naLxPS8' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetQRCode' test.out

#- 324 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'CjxDAdMa' \
    --foreinginvoice 'Pz3A1Z1c' \
    --invoiceId 'jdtxdplc' \
    --payload 'jJLKctBN' \
    --redirectResult 'P1WRkGBq' \
    --resultCode 'EmNtdmCi' \
    --sessionId 'u1KvKTPz' \
    --status 'Bxj1TcpQ' \
    --token 'Pvj6FN3u' \
    --type 'bTSLWCNU' \
    --userId 'OXYtcSiw' \
    --orderNo 'uJjN2CTQ' \
    --paymentOrderNo 'q2dJn4Cb' \
    --paymentProvider 'STRIPE' \
    --returnUrl 'FUfCHKJW' \
    > test.out 2>&1
eval_tap $? 324 'PublicNormalizePaymentReturnUrl' test.out

#- 325 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'dKz8fqLS' \
    --paymentOrderNo 'Ouncs2ZB' \
    --paymentProvider 'STRIPE' \
    > test.out 2>&1
eval_tap $? 325 'GetPaymentTaxValue' test.out

#- 326 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'jxJOdTU8' \
    > test.out 2>&1
eval_tap $? 326 'GetRewardByCode' test.out

#- 327 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'tU56SCkP' \
    --limit '71' \
    --offset '66' \
    --sortBy '["rewardCode:asc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 327 'QueryRewards1' test.out

#- 328 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId '2xssLDJM' \
    > test.out 2>&1
eval_tap $? 328 'GetReward1' test.out

#- 329 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 329 'PublicListStores' test.out

#- 330 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["dDfZAxxb", "JqzhjFcl", "r94pfuQy"]' \
    --itemIds '["xMAKNugd", "Dot4UImZ", "BffJ3hqN"]' \
    --skus '["FZkqt29j", "wZCiO6r9", "JgObc5sg"]' \
    > test.out 2>&1
eval_tap $? 330 'PublicExistsAnyMyActiveEntitlement' test.out

#- 331 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'S1kJQNxg' \
    > test.out 2>&1
eval_tap $? 331 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 332 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 't8BEQjz2' \
    > test.out 2>&1
eval_tap $? 332 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 333 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'N875XfLm' \
    > test.out 2>&1
eval_tap $? 333 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 334 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["yyEVpQ2L", "i53jGwqN", "NvefJkqZ"]' \
    --itemIds '["wDJXYWLm", "Zsc3JqbL", "s5lJmQQz"]' \
    --skus '["0RpRxvhI", "JWaIi55H", "YWWp5Eqd"]' \
    > test.out 2>&1
eval_tap $? 334 'PublicGetEntitlementOwnershipToken' test.out

#- 335 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'SRFAw5aT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 335 'PublicGetMyWallet' test.out

#- 336 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "7mxEfdO4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'NK0rpHIu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'SyncEpicGameDLC' test.out

#- 337 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 42}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'NbNivHsm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'PublicSyncPsnDlcInventory' test.out

#- 338 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [5, 45, 61]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '3Vr7yg8g' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 339 SyncSteamDLC
# body param: body
echo '{"appId": "YzgwW7jc", "steamId": "8soEb62n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'LZlllmEk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'SyncSteamDLC' test.out

#- 340 SyncXboxDLC
# body param: body
echo '{"xstsToken": "gm9Nocun"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'HPNtW3Xw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'SyncXboxDLC' test.out

#- 341 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'dgElSjrK' \
    --appType 'DLC' \
    --entitlementClazz 'LOOTBOX' \
    --entitlementName 'QrUS8lpL' \
    --features '["DVesFtKu", "bluCSJyu", "OZZY8Tk1"]' \
    --itemId '["ceGhKcx7", "3U1cFL9F", "imgDgvj8"]' \
    --limit '22' \
    --offset '16' \
    > test.out 2>&1
eval_tap $? 341 'PublicQueryUserEntitlements' test.out

#- 342 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'fyWpGg83' \
    --appId '1klA2YR3' \
    > test.out 2>&1
eval_tap $? 342 'PublicGetUserAppEntitlementByAppId' test.out

#- 343 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'gg3HKEZD' \
    --limit '19' \
    --offset '2' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 343 'PublicQueryUserEntitlementsByAppType' test.out

#- 344 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'K7t2rgYx' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'cLqbtEDj' \
    > test.out 2>&1
eval_tap $? 344 'PublicGetUserEntitlementByItemId' test.out

#- 345 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'nYyvKTEC' \
    --entitlementClazz 'APP' \
    --sku 'v78xwf5U' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserEntitlementBySku' test.out

#- 346 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'kYTb6Hkc' \
    --appIds '["b9tTkpxt", "o1SFzl3T", "RId9jvf8"]' \
    --itemIds '["mrK4kazt", "ojDH4j16", "wdV2TVkh"]' \
    --skus '["le7Rkh3K", "46qNRB1H", "f06KWQZq"]' \
    > test.out 2>&1
eval_tap $? 346 'PublicExistsAnyUserActiveEntitlement' test.out

#- 347 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'zgOnsP6D' \
    --appId 'kKzoesAz' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 348 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'l937s8JE' \
    --entitlementClazz 'MEDIA' \
    --itemId 'slAFb97d' \
    > test.out 2>&1
eval_tap $? 348 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 349 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'nMcHhMBW' \
    --ids '["htqBcOV7", "iUgsYYwD", "veLKvJVA"]' \
    > test.out 2>&1
eval_tap $? 349 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 350 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '60w3M3YZ' \
    --entitlementClazz 'MEDIA' \
    --sku '7m0rR4WA' \
    > test.out 2>&1
eval_tap $? 350 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 351 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '728SSkHP' \
    --namespace $AB_NAMESPACE \
    --userId 'MClu9Uas' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetUserEntitlement' test.out

#- 352 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["13JOaoEl", "9olH8cJq", "v4ZdtFp4"], "requestId": "Ju8TXpVy", "useCount": 60}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'G1bovsmq' \
    --namespace $AB_NAMESPACE \
    --userId 'bzecSPt2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'PublicConsumeUserEntitlement' test.out

#- 353 PublicRedeemCode
# body param: body
echo '{"code": "tQi9B5C1", "language": "ecLS-383", "region": "RxqMvfJb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '5KNfYJyh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'PublicRedeemCode' test.out

#- 354 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "ro_vwej-Bn", "productId": "vabo9CMc", "receiptData": "pFGDFI60", "region": "YaJPkp11", "transactionId": "c5Z3s4iv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'RlSV03D3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicFulfillAppleIAPItem' test.out

#- 355 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "aRXnEtS8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'QG2Zsil4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'SyncEpicGamesInventory' test.out

#- 356 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "bq-589", "orderId": "YKibwx88", "packageName": "IjqBUwr1", "productId": "REylLGc7", "purchaseTime": 9, "purchaseToken": "bDKn7i98", "region": "rvVhZV3y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '7A59exPm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'PublicFulfillGoogleIAPItem' test.out

#- 357 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "9e6fpdBk", "price": 0.44911017824611776, "productId": "QvyJ9V6d", "serviceLabel": 2}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'zdSYpUoK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'PublicReconcilePlayStationStore' test.out

#- 358 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "reH58sHE", "price": 0.2731462785640997, "productId": "DOPrApb7", "serviceLabels": [21, 85, 86]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'DmWIsfnh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 359 SyncSteamInventory
# body param: body
echo '{"appId": "5ikurL2V", "currencyCode": "fXR2Kbkx", "language": "sc_WABp", "price": 0.6810151968179255, "productId": "sg9ARoxs", "region": "EIJCTWj8", "steamId": "TIKGHEFr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'jNokiNo2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'SyncSteamInventory' test.out

#- 360 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "dxCUswDI", "language": "NIHR_va", "region": "IruvDEVJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '2pxgMETe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'SyncTwitchDropsEntitlement' test.out

#- 361 SyncXboxInventory
# body param: body
echo '{"currencyCode": "hAW1lJ9w", "price": 0.7118177471148913, "productId": "WgAPCon2", "xstsToken": "xUc4vnSI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'xVDcbn40' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 361 'SyncXboxInventory' test.out

#- 362 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'VaNDULmc' \
    --itemId 'xJt1Sxcb' \
    --limit '44' \
    --offset '4' \
    --status 'FULFILLED' \
    > test.out 2>&1
eval_tap $? 362 'PublicQueryUserOrders' test.out

#- 363 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "NRM5qADv", "discountedPrice": 95, "ext": {"M4ia7rhV": {}, "PpDwiuTl": {}, "BbBXB41Z": {}}, "itemId": "D3CZlNrj", "language": "bo", "price": 11, "quantity": 76, "region": "cbt8atWr", "returnUrl": "gYr4Lw9F"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '2xPWNW2x' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'PublicCreateUserOrder' test.out

#- 364 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'MJF1pB8E' \
    --userId 'm500BnUp' \
    > test.out 2>&1
eval_tap $? 364 'PublicGetUserOrder' test.out

#- 365 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'jfY3wknL' \
    --userId '08et7FNl' \
    > test.out 2>&1
eval_tap $? 365 'PublicCancelUserOrder' test.out

#- 366 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'IJItijQY' \
    --userId 'hRHB3Pqt' \
    > test.out 2>&1
eval_tap $? 366 'PublicGetUserOrderHistories' test.out

#- 367 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'lpXQSPvZ' \
    --userId 'Z0iR0Rlu' \
    > test.out 2>&1
eval_tap $? 367 'PublicDownloadUserOrderReceipt' test.out

#- 368 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'f56gJuZ5' \
    > test.out 2>&1
eval_tap $? 368 'PublicGetPaymentAccounts' test.out

#- 369 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'xuHB277r' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'jGS8VLvU' \
    > test.out 2>&1
eval_tap $? 369 'PublicDeletePaymentAccount' test.out

#- 370 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId '2M53Yt2m' \
    --language 'WmmlZnNv' \
    --region 'FeoJlYR0' \
    --storeId 'R701a9dq' \
    --viewId 'Qlc9eRUv' \
    > test.out 2>&1
eval_tap $? 370 'PublicListActiveSections' test.out

#- 371 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'sedMIxt4' \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'wav43iRN' \
    --limit '40' \
    --offset '31' \
    --sku 'kA7zCtTS' \
    --status 'ACTIVE' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 371 'PublicQueryUserSubscriptions' test.out

#- 372 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "rPBKaCcx", "itemId": "3Oab0eeH", "language": "WXI-RQaR", "region": "Pq56hfLC", "returnUrl": "hxsRfktw", "source": "EnIoMdAs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '7hAotH4n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 372 'PublicSubscribeSubscription' test.out

#- 373 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'JInBiMii' \
    --itemId 'OsQsUe3A' \
    > test.out 2>&1
eval_tap $? 373 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 374 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'X84sY2j6' \
    --userId 'pB6NEy7s' \
    > test.out 2>&1
eval_tap $? 374 'PublicGetUserSubscription' test.out

#- 375 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId '2f0JYClI' \
    --userId 'AF9fi758' \
    > test.out 2>&1
eval_tap $? 375 'PublicChangeSubscriptionBillingAccount' test.out

#- 376 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "nKTFoiwu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'HCFkbJCB' \
    --userId '2OcmThtI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 376 'PublicCancelSubscription' test.out

#- 377 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '9tWqIgdt' \
    --userId 'w356wWTC' \
    --excludeFree 'true' \
    --limit '17' \
    --offset '59' \
    > test.out 2>&1
eval_tap $? 377 'PublicGetUserSubscriptionBillingHistories' test.out

#- 378 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId '5nfY3L1L' \
    --language 'xmSngleX' \
    --storeId 'AnYIw0jV' \
    > test.out 2>&1
eval_tap $? 378 'PublicListViews' test.out

#- 379 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'UjZ0wxLH' \
    --namespace $AB_NAMESPACE \
    --userId '9gDC4dpb' \
    > test.out 2>&1
eval_tap $? 379 'PublicGetWallet' test.out

#- 380 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'osFhLEPu' \
    --namespace $AB_NAMESPACE \
    --userId '9cXCiaqp' \
    --limit '47' \
    --offset '96' \
    > test.out 2>&1
eval_tap $? 380 'PublicListUserWalletTransactions' test.out

#- 381 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --availableDate 'ZMqywI44' \
    --baseAppId 'iEsCmnAk' \
    --categoryPath 'rENpT3k4' \
    --features 'wLZPmkNA' \
    --includeSubCategoryItem 'true' \
    --itemName 'ljOlsyQZ' \
    --itemStatus 'INACTIVE' \
    --itemType 'MEDIA' \
    --limit '81' \
    --offset '28' \
    --region 'U1t84B38' \
    --sortBy '["displayOrder:asc", "name", "displayOrder:desc"]' \
    --storeId 'kcX5uRNZ' \
    --tags '9NoPij9l' \
    --targetNamespace 'qQiA1VgY' \
    > test.out 2>&1
eval_tap $? 381 'QueryItems1' test.out

#- 382 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'I6mndZPt' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 382 'ImportStore1' test.out

#- 383 ExportStore1
# body param: body
echo '{"itemIds": ["MnVXEUks", "WRKxzQCE", "ly01UbnC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'FeHtAv9N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 383 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE