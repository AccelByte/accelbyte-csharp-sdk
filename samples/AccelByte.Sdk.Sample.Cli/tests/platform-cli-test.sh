#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..360"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "wZqfwOHV", "appType": "DLC", "baseAppId": "TEPF9NFS", "boothName": "gpLZx5oJ", "boundItemIds": ["MdT2J7pH", "HTfl0P3R", "yUeFIBde"], "categoryPath": "ttZ6lhXj", "clazz": "Z7R9CFSt", "createdAt": "1985-09-15T00:00:00Z", "description": "4kHJxizw", "displayOrder": 6, "entitlementType": "CONSUMABLE", "ext": {"eg8cVHRB": {}, "nC1pXUaB": {}, "oVPG9D2v": {}}, "features": ["N6alvT8U", "39KGa3BN", "XQMSdyyF"], "fresh": true, "images": [{"as": "xDIjFTeE", "caption": "tQUx6qFo", "height": 97, "imageUrl": "mtbxJiwp", "smallImageUrl": "dpxXgpY2", "width": 28}, {"as": "4scSJyhY", "caption": "IbRiD1GZ", "height": 45, "imageUrl": "OFv9TwpM", "smallImageUrl": "o05y8dxT", "width": 21}, {"as": "IOSuL9Ac", "caption": "J7KQkgSv", "height": 56, "imageUrl": "V9TJBwUk", "smallImageUrl": "PeiN8LfH", "width": 98}], "itemId": "Gdz1BrTx", "itemIds": ["pyAkbPmw", "P8GdYXsR", "rVOgK7K9"], "itemQty": {"B6QXeltv": 14, "TbpnD2DK": 29, "wHX0AwZV": 17}, "itemType": "MEDIA", "language": "7LFW6mwC", "listable": false, "localExt": {"L4vkiIHy": {}, "ay6NAW6w": {}, "iMV1o1nX": {}}, "longDescription": "deBahKJA", "maxCount": 25, "maxCountPerUser": 35, "name": "QkSprnFW", "namespace": "L3ZDbVRB", "optionBoxConfig": {"boxItems": [{"count": 65, "itemId": "bOgC1HPO", "itemSku": "du3jIZky"}, {"count": 6, "itemId": "5ExGZL8Z", "itemSku": "r3IuBNkr"}, {"count": 8, "itemId": "hIfWStwm", "itemSku": "VehAoJet"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 34, "comparison": "isNot", "name": "KhpwOcV4", "predicateType": "SeasonPassPredicate", "value": "zaHXEKLo", "values": ["dDPQHJk3", "c8I36vcI", "mmiB9fUv"]}, {"anyOf": 81, "comparison": "excludes", "name": "m2Z14psr", "predicateType": "EntitlementPredicate", "value": "qGboDX9f", "values": ["qiPtILtd", "yhkxITM4", "aa57gBuz"]}, {"anyOf": 0, "comparison": "isLessThanOrEqual", "name": "FAMqIdvK", "predicateType": "SeasonTierPredicate", "value": "CXfYFo4i", "values": ["0X5OL6pB", "EmZZRbqx", "7UzeI5KN"]}]}, {"operator": "or", "predicates": [{"anyOf": 85, "comparison": "isGreaterThanOrEqual", "name": "ZpGVvyzD", "predicateType": "EntitlementPredicate", "value": "oCP0HQUV", "values": ["Rb9HyIiV", "aTJ49j6P", "4mvIJlSH"]}, {"anyOf": 9, "comparison": "is", "name": "g0R0GsuR", "predicateType": "EntitlementPredicate", "value": "ASPFkdgd", "values": ["jPv6NlcT", "2nSjXu1K", "AO0nCKF0"]}, {"anyOf": 75, "comparison": "isGreaterThanOrEqual", "name": "cyk3AKEE", "predicateType": "SeasonPassPredicate", "value": "QaiAkNw4", "values": ["gWDxEZHZ", "5dPhgZGM", "wLPCE6P5"]}]}, {"operator": "and", "predicates": [{"anyOf": 21, "comparison": "isGreaterThan", "name": "Ed6rRFVc", "predicateType": "SeasonPassPredicate", "value": "FKP80Lbw", "values": ["pxYbjhcJ", "ho8ngkbl", "6wqovmWb"]}, {"anyOf": 89, "comparison": "is", "name": "jBeR0Z0Z", "predicateType": "SeasonPassPredicate", "value": "ACYyNKWk", "values": ["qtuJdn0w", "7GPiyBqn", "SWpmqloB"]}, {"anyOf": 36, "comparison": "includes", "name": "W2NLdE6A", "predicateType": "SeasonPassPredicate", "value": "b9ygtInO", "values": ["kQQCuetG", "qs3bvWLR", "htvkcSGg"]}]}]}, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 55, "fixedTrialCycles": 77, "graceDays": 56}, "region": "KdOP03E6", "regionData": [{"currencyCode": "xZighlDS", "currencyNamespace": "MEym7eE8", "currencyType": "VIRTUAL", "discountAmount": 9, "discountExpireAt": "1988-11-25T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1975-04-13T00:00:00Z", "discountedPrice": 11, "expireAt": "1978-08-05T00:00:00Z", "price": 44, "purchaseAt": "1995-02-23T00:00:00Z", "trialPrice": 65}, {"currencyCode": "EugWLsE1", "currencyNamespace": "KDviAi1b", "currencyType": "VIRTUAL", "discountAmount": 48, "discountExpireAt": "1984-06-20T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1983-03-28T00:00:00Z", "discountedPrice": 58, "expireAt": "1997-12-15T00:00:00Z", "price": 77, "purchaseAt": "1978-05-27T00:00:00Z", "trialPrice": 36}, {"currencyCode": "mdZ8kkgv", "currencyNamespace": "PGNmJ0JU", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1978-02-26T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1981-07-16T00:00:00Z", "discountedPrice": 90, "expireAt": "1984-05-16T00:00:00Z", "price": 13, "purchaseAt": "1997-11-22T00:00:00Z", "trialPrice": 72}], "seasonType": "PASS", "sku": "NbhDzw8j", "stackable": false, "status": "ACTIVE", "tags": ["CnxdiiqU", "XDGNGZRh", "eiibunw9"], "targetCurrencyCode": "TGpBty29", "targetItemId": "0QMjmGCu", "targetNamespace": "ELOt2LHg", "thumbnailUrl": "HM1Uoeyi", "title": "PC2oHaBV", "updatedAt": "1978-04-05T00:00:00Z", "useCount": 45}, "namespace": "xgpiVCt8", "order": {"currency": {"currencyCode": "tGKTCRmT", "currencySymbol": "XvnYUbTe", "currencyType": "VIRTUAL", "decimals": 83, "namespace": "P4t8kfOx"}, "ext": {"sixCBDcO": {}, "shxKJQpt": {}, "Oed5nBlz": {}}, "free": true}, "source": "OTHER"}, "script": "XSkLelc0", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '2zZ6nQag' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "oYWGfIsA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'khYEbje4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'tJdPp65Q' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "4bzTT90o"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'jmbEIU51' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "SdK2L7xf", "dryRun": false, "fulfillmentUrl": "fjcUQxYM", "itemType": "BUNDLE", "purchaseConditionUrl": "bsWoHmaT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz '3y2cjkBL' \
    --itemType 'INGAMEITEM' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'BxaBT6Re' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "2VJnGddq", "dryRun": true, "fulfillmentUrl": "KwOB9Njd", "purchaseConditionUrl": "9s1se1TF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'UHA330n6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'eCzsmzVm' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '1' \
    --name 'mVMxQBIE' \
    --offset '27' \
    --tag 'QC05V8Vl' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "NiKM7N6r", "items": [{"extraSubscriptionDays": 36, "itemId": "nvE6jzFq", "itemName": "jYznlukm", "quantity": 36}, {"extraSubscriptionDays": 71, "itemId": "L4SwnF6G", "itemName": "9wKeGrgd", "quantity": 22}, {"extraSubscriptionDays": 7, "itemId": "VfZ8kGSc", "itemName": "g3G2Za4y", "quantity": 23}], "maxRedeemCountPerCampaignPerUser": 85, "maxRedeemCountPerCode": 15, "maxRedeemCountPerCodePerUser": 82, "maxSaleCount": 74, "name": "uNJ1ULid", "redeemEnd": "1974-01-26T00:00:00Z", "redeemStart": "1986-12-24T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["iXcua6Ox", "In2tbT29", "jBTA80tp"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'NVXlPue0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "t07uLERt", "items": [{"extraSubscriptionDays": 13, "itemId": "f48YbH46", "itemName": "4Qsi4ibz", "quantity": 9}, {"extraSubscriptionDays": 19, "itemId": "LuC1Rwma", "itemName": "LG2agAuQ", "quantity": 85}, {"extraSubscriptionDays": 81, "itemId": "0ofKlQNJ", "itemName": "d6PYbMFN", "quantity": 9}], "maxRedeemCountPerCampaignPerUser": 4, "maxRedeemCountPerCode": 36, "maxRedeemCountPerCodePerUser": 69, "maxSaleCount": 48, "name": "RuzKK6MC", "redeemEnd": "1976-08-09T00:00:00Z", "redeemStart": "1977-06-09T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["f1PHXYit", "LsKPSLio", "ddYspHc5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId '4UVkFUbY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'YMfISul2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId '7RWJS0fg' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "PmumYsBH", "localizationDisplayNames": {"zofhpG6z": "QRvwTum5", "6J61jcDv": "KSqawaCc", "RrUEI9fI": "3BS7doGz"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'Js35U5wv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'LAJngv77' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'KSLpJwAh' \
    --namespace $AB_NAMESPACE \
    --storeId 'qNBB6fPv' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"fIGXA1UL": "CXIETVRJ", "SN1XvGrq": "rF9PMsAh", "B1rBrFDV": "AWwVpvIf"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'w28Dbs0g' \
    --namespace $AB_NAMESPACE \
    --storeId '7X3H3wFW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'gAMvb2kQ' \
    --namespace $AB_NAMESPACE \
    --storeId '0kuZr6lK' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'Ohuz9qhZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'LhBYeSJX' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath '1Z4nUSIO' \
    --namespace $AB_NAMESPACE \
    --storeId 'XErn0qy9' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'FFlhxOTZ' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '63' \
    --code 'r2HX7WuS' \
    --limit '38' \
    --offset '94' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 89}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'hwJj3A8n' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'McHOixfV' \
    --namespace $AB_NAMESPACE \
    --batchNo '18' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'BN8dfbLc' \
    --namespace $AB_NAMESPACE \
    --batchNo '46' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId '91RpFuNk' \
    --namespace $AB_NAMESPACE \
    --batchNo '70' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'TDQyyJTe' \
    --namespace $AB_NAMESPACE \
    --code '8w0Ok286' \
    --limit '60' \
    --offset '87' \
    --userId 'nfUCpNBU' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'q9hI2uaW' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'AgVnG59s' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'TCYSyg04' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "B8KvjZsB", "currencySymbol": "kpd3d1HJ", "currencyType": "REAL", "decimals": 54, "localizationDescriptions": {"gLwnUKMH": "V5xeTWS1", "HtxL8I6F": "uj6Uhii2", "Ri2P3nFy": "wjxyEq4B"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"c719i0oi": "49a6k5bv", "D0HHa3FB": "mcQmTjDF", "Y1yD9SZ2": "Pm8E7yn1"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'trZtRtw7' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'KUsUh3er' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'qplCEVNj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode '49S4HGvj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "4A7VU4kq", "rewards": [{"currency": {"currencyCode": "3Wv1ruMq", "namespace": "uvowFulW"}, "item": {"itemId": "tQwhRIuQ", "itemSku": "PiBTlGqp", "itemType": "MhILkvFT"}, "quantity": 66, "type": "ITEM"}, {"currency": {"currencyCode": "lXK3NcWF", "namespace": "pKRu68zB"}, "item": {"itemId": "Nce9wC2y", "itemSku": "HqTIdqaU", "itemType": "7vOTdYoT"}, "quantity": 46, "type": "ITEM"}, {"currency": {"currencyCode": "JFRQKTR7", "namespace": "0lNFFvBl"}, "item": {"itemId": "unrfkz1K", "itemSku": "GxIsrlDR", "itemType": "YCAdd8ci"}, "quantity": 25, "type": "CURRENCY"}]}, {"id": "H1P4H7em", "rewards": [{"currency": {"currencyCode": "h2RLaTry", "namespace": "42rG674H"}, "item": {"itemId": "W1u1YLx1", "itemSku": "zzcO4eWD", "itemType": "F2T5gDzI"}, "quantity": 1, "type": "CURRENCY"}, {"currency": {"currencyCode": "YWbjIGoQ", "namespace": "gw6bYOGV"}, "item": {"itemId": "g8RIPmWo", "itemSku": "WBBdFIow", "itemType": "JR2Fr01U"}, "quantity": 95, "type": "ITEM"}, {"currency": {"currencyCode": "tHhdH6O1", "namespace": "HO8YrqhQ"}, "item": {"itemId": "uw6plzQC", "itemSku": "y2gjck6G", "itemType": "ac3hx6Hi"}, "quantity": 68, "type": "ITEM"}]}, {"id": "GmjTXLPi", "rewards": [{"currency": {"currencyCode": "EJj7ZySM", "namespace": "2g1eW32O"}, "item": {"itemId": "LNgLseho", "itemSku": "dILUpybU", "itemType": "l6rc0ll2"}, "quantity": 98, "type": "CURRENCY"}, {"currency": {"currencyCode": "0TRsMJK5", "namespace": "9ToQdx4q"}, "item": {"itemId": "lMpwlVR9", "itemSku": "eWeCHGZx", "itemType": "Uyngl7RZ"}, "quantity": 70, "type": "ITEM"}, {"currency": {"currencyCode": "yFeFDLYa", "namespace": "NFZ0Wnod"}, "item": {"itemId": "2k3YnNOs", "itemSku": "w9Iebr2l", "itemType": "5S9rWVh0"}, "quantity": 70, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"l7Wbyx8c": "rHC8Ln8M", "Psmwbp7e": "Lc2EXTY6", "mAz1Hg5l": "jbJO13DK"}}, {"platform": "STEAM", "platformDlcIdMap": {"U5vFysCA": "64BmKikh", "kdUCz2Vq": "92w9pTxx", "fUEIBLUO": "OZimFEGW"}}, {"platform": "STEAM", "platformDlcIdMap": {"raMv3cSB": "2l1oTvHY", "jxopenRY": "5dW1fZHk", "iQnXwowG": "pCrLt6y5"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DLC' \
    --entitlementClazz 'APP' \
    --entitlementName 'uwd2jzbM' \
    --itemId '["qL96505l", "t5M6sGgn", "cF1d3Wcm"]' \
    --limit '93' \
    --offset '15' \
    --userId 'adjU4lOk' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'gelPaENR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '28' \
    --offset '35' \
    --status 'SUCCESS' \
    --userId 'STX22ok9' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "TGHVHO86", "password": "vqJHeVly"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "P3l4dInt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "Ft4jNp2X", "serviceAccountId": "UaCijGDJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "aPMdLmSM", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"bpe0iA7y": "s8E6GlTg", "uliUaJaa": "tsQhV8M5", "JHytKIi6": "S8UjItfN"}}, {"itemIdentity": "sonSYWVH", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"T7vSrQCB": "nXoCi1y9", "8mqkq1Om": "TXzMlfxq", "QgZzGq8d": "cxHG2bvj"}}, {"itemIdentity": "sxhyMfNG", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"DPnj8X8e": "36SJxn0P", "hJJ6Kyyl": "SEHipxRH", "ha7caGGC": "NmG1LGMs"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "uaqh2RBz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "UKXxT5gr", "publisherAuthenticationKey": "3ENhWRmY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "Fkp9tonD", "clientSecret": "OWWwrcpx", "organizationId": "8tWpKIjY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "JGV7qrCP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'aeqBMint' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'jnjBH9Cf' \
    --itemId 'w67x8TLX' \
    --itemType 'EXTENSION' \
    --endTime '7sYWxwfB' \
    --startTime 'XDUc19PN' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'OEc04Mw1' \
    --itemId 'mNT0VAIr' \
    --itemType 'SUBSCRIPTION' \
    --endTime '3mYK6mUO' \
    --startTime '4oXqcis2' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "W5KpIOkH", "targetItemId": "3KvelAz5", "targetNamespace": "NKvy76lm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'J1EYDGNo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "d5DnBrYE", "appType": "SOFTWARE", "baseAppId": "cUgWHODP", "boothName": "blRXyKNm", "categoryPath": "5uAj2oAX", "clazz": "WUvc8Uc6", "displayOrder": 50, "entitlementType": "CONSUMABLE", "ext": {"POctVpJK": {}, "2W2rYUrY": {}, "2duxHHqg": {}}, "features": ["gBinjHbZ", "FUFe56PF", "pDcmiTAW"], "images": [{"as": "xEZTn8Fw", "caption": "uWlMaWM8", "height": 55, "imageUrl": "ZGBUogcA", "smallImageUrl": "UgC0qWqy", "width": 3}, {"as": "yNhlfIlz", "caption": "h5SAvW1r", "height": 80, "imageUrl": "RLU6jAIv", "smallImageUrl": "7OOpLq6H", "width": 92}, {"as": "ZxdJRL1J", "caption": "2Xqrl8BS", "height": 0, "imageUrl": "J1Tdwn9x", "smallImageUrl": "FporF2mL", "width": 26}], "itemIds": ["foZWc932", "WP37Xvtx", "mkYjQMcF"], "itemQty": {"40gnZ4mL": 38, "tEIIshs6": 69, "jDJvaRbE": 75}, "itemType": "CODE", "listable": true, "localizations": {"yueeLged": {"description": "ihLjjy3E", "localExt": {"kp6pgHqu": {}, "35WaqxPF": {}, "hqKEcwL4": {}}, "longDescription": "emjuFdSH", "title": "JhFFhQWa"}, "8J6ubocj": {"description": "gkim6ERE", "localExt": {"r0ztBZpr": {}, "iEPVSXcu": {}, "B6RAmiqr": {}}, "longDescription": "onD7c31g", "title": "3klXRWxQ"}, "rd4cS1mm": {"description": "9ZRtapve", "localExt": {"dwu6bFMp": {}, "cSS9y5Qg": {}, "JCT7lnWt": {}}, "longDescription": "hJVKXLWp", "title": "fMp7FrDB"}}, "maxCount": 16, "maxCountPerUser": 40, "name": "9umwdO6A", "optionBoxConfig": {"boxItems": [{"count": 7, "itemId": "BQRLM0Wu", "itemSku": "qFwAau55"}, {"count": 29, "itemId": "tI2dBEH8", "itemSku": "VluCQhxA"}, {"count": 76, "itemId": "tVSBzuDs", "itemSku": "GqzLhNMQ"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 75, "fixedTrialCycles": 46, "graceDays": 29}, "regionData": {"g2A4tTgj": [{"currencyCode": "ggfi4YM4", "currencyNamespace": "xyujSpJZ", "currencyType": "REAL", "discountAmount": 56, "discountExpireAt": "1997-05-25T00:00:00Z", "discountPercentage": 41, "discountPurchaseAt": "1972-07-11T00:00:00Z", "discountedPrice": 37, "expireAt": "1990-09-02T00:00:00Z", "price": 66, "purchaseAt": "1973-09-21T00:00:00Z", "trialPrice": 97}, {"currencyCode": "1EvLeidF", "currencyNamespace": "c0wBvh47", "currencyType": "VIRTUAL", "discountAmount": 2, "discountExpireAt": "1974-03-21T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1979-01-02T00:00:00Z", "discountedPrice": 88, "expireAt": "1991-06-26T00:00:00Z", "price": 11, "purchaseAt": "1985-03-10T00:00:00Z", "trialPrice": 3}, {"currencyCode": "OzTUm2sk", "currencyNamespace": "QgpE1yF7", "currencyType": "VIRTUAL", "discountAmount": 50, "discountExpireAt": "1971-08-20T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1979-10-21T00:00:00Z", "discountedPrice": 82, "expireAt": "1972-03-02T00:00:00Z", "price": 1, "purchaseAt": "1984-04-10T00:00:00Z", "trialPrice": 84}], "7qltTWcf": [{"currencyCode": "1tVj1GH6", "currencyNamespace": "bN7FXilb", "currencyType": "REAL", "discountAmount": 95, "discountExpireAt": "1976-04-10T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1991-07-03T00:00:00Z", "discountedPrice": 84, "expireAt": "1988-02-05T00:00:00Z", "price": 63, "purchaseAt": "1984-10-01T00:00:00Z", "trialPrice": 63}, {"currencyCode": "I6Q3TB21", "currencyNamespace": "0q7v2qJt", "currencyType": "REAL", "discountAmount": 95, "discountExpireAt": "1987-05-18T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1993-04-26T00:00:00Z", "discountedPrice": 12, "expireAt": "1987-09-03T00:00:00Z", "price": 45, "purchaseAt": "1975-12-09T00:00:00Z", "trialPrice": 46}, {"currencyCode": "bnxM0D1w", "currencyNamespace": "FWmKS43w", "currencyType": "VIRTUAL", "discountAmount": 92, "discountExpireAt": "1999-10-27T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1979-09-04T00:00:00Z", "discountedPrice": 15, "expireAt": "1988-08-31T00:00:00Z", "price": 30, "purchaseAt": "1986-08-26T00:00:00Z", "trialPrice": 52}], "OJCUkaY9": [{"currencyCode": "lo0QX9UV", "currencyNamespace": "Xrusz5oA", "currencyType": "REAL", "discountAmount": 92, "discountExpireAt": "1988-08-09T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1975-01-09T00:00:00Z", "discountedPrice": 58, "expireAt": "1994-07-21T00:00:00Z", "price": 65, "purchaseAt": "1987-08-16T00:00:00Z", "trialPrice": 55}, {"currencyCode": "iew1BpNL", "currencyNamespace": "GEWKEVV5", "currencyType": "VIRTUAL", "discountAmount": 94, "discountExpireAt": "1989-05-12T00:00:00Z", "discountPercentage": 73, "discountPurchaseAt": "1992-05-13T00:00:00Z", "discountedPrice": 90, "expireAt": "1993-12-22T00:00:00Z", "price": 64, "purchaseAt": "1975-12-10T00:00:00Z", "trialPrice": 72}, {"currencyCode": "C8k4QdnY", "currencyNamespace": "iaopqV93", "currencyType": "VIRTUAL", "discountAmount": 72, "discountExpireAt": "1989-11-14T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1975-03-01T00:00:00Z", "discountedPrice": 14, "expireAt": "1986-10-09T00:00:00Z", "price": 57, "purchaseAt": "1990-01-24T00:00:00Z", "trialPrice": 44}]}, "seasonType": "PASS", "sku": "R9MsNtzo", "stackable": true, "status": "ACTIVE", "tags": ["3ZH4xaCH", "eKVveP89", "IlOqhqx1"], "targetCurrencyCode": "R1weuweA", "targetNamespace": "oqjyVU4v", "thumbnailUrl": "tZyQOlzB", "useCount": 11}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'eg7ReXCK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'VKMD4XZX' \
    --appId 'oH30cliS' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --availableDate 'Mo8buRZS' \
    --baseAppId 'DL3FVTaI' \
    --categoryPath 'BByORBBH' \
    --features 'V0oHWS4i' \
    --includeSubCategoryItem 'false' \
    --itemType 'MEDIA' \
    --limit '95' \
    --offset '93' \
    --region 'Kgtsn91N' \
    --sortBy '["displayOrder", "name", "createdAt:desc"]' \
    --storeId 'AyyZdnDd' \
    --tags 'ieRiUpB0' \
    --targetNamespace 'MELLn5Mv' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["JzyphJ7W", "ZgLzoPMo", "Iza9fLCg"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'kVbAeboz' \
    --sku 'uG3fghGo' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'R0yYLWTk' \
    --populateBundle 'true' \
    --region 'RyjQuUke' \
    --storeId '2XSoyVnq' \
    --sku 'HCnnuAsk' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'Nvs9OEOc' \
    --sku '4OvHdx5B' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["U1J8KUbq", "KKBH6iPO", "fQelvNQt"]' \
    --storeId '5pHYPs5r' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'PafxLiEC' \
    --region 'bcgsF9Mm' \
    --storeId '9sarp3Xj' \
    --itemIds 'nhuMNT12' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["i6R9UPF3", "uUTWrHkZ", "W3xfiu4C"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'TyzXld8Y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'SEASON' \
    --limit '97' \
    --offset '22' \
    --sortBy 'D9ncPrFQ' \
    --storeId '47hwmPNJ' \
    --keyword '9scdq2gI' \
    --language 'RYJoPnhc' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '7' \
    --offset '94' \
    --sortBy '["createdAt", "name:asc", "displayOrder"]' \
    --storeId 'MxNNgtjf' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'pF2M4d3C' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'BEcVqknr' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "iigeNGSB", "appType": "GAME", "baseAppId": "qbu3RVZ9", "boothName": "1EvciJoz", "categoryPath": "0nr6DUpp", "clazz": "iPAtHjH1", "displayOrder": 44, "entitlementType": "DURABLE", "ext": {"iB7ub6w6": {}, "Cp0Wxzlw": {}, "9P0xDdQk": {}}, "features": ["t3msmWWd", "3ZHaMzW6", "7731eKQt"], "images": [{"as": "tEftXbLp", "caption": "xmC6oNoq", "height": 28, "imageUrl": "z5uv6D2C", "smallImageUrl": "947Tipeh", "width": 87}, {"as": "ChoFy1H9", "caption": "D8kTop10", "height": 7, "imageUrl": "DmUnSGVP", "smallImageUrl": "cRBvGiwp", "width": 74}, {"as": "G2ljYYJs", "caption": "dK4cW5gd", "height": 8, "imageUrl": "K6euCNXj", "smallImageUrl": "cqqZWcjp", "width": 77}], "itemIds": ["7lEB0EsT", "k5wSDXk0", "6ki5Tylq"], "itemQty": {"BtQtG9V6": 34, "C1Zw2HRT": 71, "RaUaVL4Q": 47}, "itemType": "CODE", "listable": false, "localizations": {"0JYL64Z9": {"description": "dcW7wZ3q", "localExt": {"YMHE3FRe": {}, "007Fte3m": {}, "lQvJQPLO": {}}, "longDescription": "Tkqod6VZ", "title": "ev5xsCJK"}, "LyPoW4cI": {"description": "z4Gu6ERS", "localExt": {"7EjRRKYb": {}, "qt1lJh1b": {}, "BhtpKECJ": {}}, "longDescription": "wCpXkoXp", "title": "YN6Z2XIk"}, "ghNW0k0Y": {"description": "59QaXXlM", "localExt": {"eeISAbV8": {}, "bKEDmkT9": {}, "XFBSmZLi": {}}, "longDescription": "V36vc1F8", "title": "BMpgj1n1"}}, "maxCount": 98, "maxCountPerUser": 88, "name": "6Rn0ZCng", "optionBoxConfig": {"boxItems": [{"count": 92, "itemId": "xxETNpO7", "itemSku": "0wbhzIY4"}, {"count": 37, "itemId": "wjmRUJ6b", "itemSku": "mWVu3bKy"}, {"count": 15, "itemId": "m2AwiEsz", "itemSku": "22Qxteaa"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 0, "fixedTrialCycles": 32, "graceDays": 27}, "regionData": {"TpQ0vUW1": [{"currencyCode": "9dk2uJZx", "currencyNamespace": "MzpfxUKd", "currencyType": "REAL", "discountAmount": 29, "discountExpireAt": "1988-02-28T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1992-07-25T00:00:00Z", "discountedPrice": 5, "expireAt": "1977-05-26T00:00:00Z", "price": 24, "purchaseAt": "1992-02-18T00:00:00Z", "trialPrice": 89}, {"currencyCode": "Gxno9GnS", "currencyNamespace": "L9cGk2UQ", "currencyType": "REAL", "discountAmount": 47, "discountExpireAt": "1984-06-04T00:00:00Z", "discountPercentage": 100, "discountPurchaseAt": "1999-12-10T00:00:00Z", "discountedPrice": 18, "expireAt": "1985-01-03T00:00:00Z", "price": 1, "purchaseAt": "1992-01-17T00:00:00Z", "trialPrice": 81}, {"currencyCode": "CftLWOgt", "currencyNamespace": "ZSqcsvop", "currencyType": "REAL", "discountAmount": 1, "discountExpireAt": "1983-05-31T00:00:00Z", "discountPercentage": 24, "discountPurchaseAt": "1999-09-18T00:00:00Z", "discountedPrice": 42, "expireAt": "1982-11-14T00:00:00Z", "price": 16, "purchaseAt": "1999-06-10T00:00:00Z", "trialPrice": 98}], "GoF3hHRH": [{"currencyCode": "q1FzWRnz", "currencyNamespace": "tUvl1VYo", "currencyType": "VIRTUAL", "discountAmount": 65, "discountExpireAt": "1987-08-31T00:00:00Z", "discountPercentage": 89, "discountPurchaseAt": "1988-01-28T00:00:00Z", "discountedPrice": 20, "expireAt": "1996-02-24T00:00:00Z", "price": 0, "purchaseAt": "1987-11-26T00:00:00Z", "trialPrice": 71}, {"currencyCode": "221NH9ot", "currencyNamespace": "LE6cg0Vb", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1999-04-07T00:00:00Z", "discountPercentage": 58, "discountPurchaseAt": "1997-10-30T00:00:00Z", "discountedPrice": 36, "expireAt": "1984-10-31T00:00:00Z", "price": 83, "purchaseAt": "1998-12-03T00:00:00Z", "trialPrice": 8}, {"currencyCode": "gmr9nnAf", "currencyNamespace": "ivfzOHny", "currencyType": "REAL", "discountAmount": 94, "discountExpireAt": "1986-12-13T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1975-07-28T00:00:00Z", "discountedPrice": 34, "expireAt": "1980-06-04T00:00:00Z", "price": 20, "purchaseAt": "1977-05-19T00:00:00Z", "trialPrice": 16}], "zKjZAJcH": [{"currencyCode": "l9JlQlBs", "currencyNamespace": "ARVsws0u", "currencyType": "REAL", "discountAmount": 36, "discountExpireAt": "1974-11-17T00:00:00Z", "discountPercentage": 46, "discountPurchaseAt": "1993-01-16T00:00:00Z", "discountedPrice": 88, "expireAt": "1996-06-01T00:00:00Z", "price": 49, "purchaseAt": "1971-01-17T00:00:00Z", "trialPrice": 84}, {"currencyCode": "iLYGIMX6", "currencyNamespace": "MjisjkrG", "currencyType": "VIRTUAL", "discountAmount": 94, "discountExpireAt": "1993-04-20T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1998-10-25T00:00:00Z", "discountedPrice": 21, "expireAt": "1987-12-10T00:00:00Z", "price": 17, "purchaseAt": "1985-07-14T00:00:00Z", "trialPrice": 95}, {"currencyCode": "8zIodd0s", "currencyNamespace": "NHaFbyqK", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1990-08-07T00:00:00Z", "discountPercentage": 74, "discountPurchaseAt": "1997-06-04T00:00:00Z", "discountedPrice": 57, "expireAt": "1994-10-16T00:00:00Z", "price": 28, "purchaseAt": "1983-04-15T00:00:00Z", "trialPrice": 29}]}, "seasonType": "TIER", "sku": "4d1Z91II", "stackable": true, "status": "ACTIVE", "tags": ["IGHBSkAb", "op8tA9if", "zycyUTYi"], "targetCurrencyCode": "gjDibiRV", "targetNamespace": "e5E6SHTe", "thumbnailUrl": "NvtT3rb9", "useCount": 67}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'WlzKNA4S' \
    --namespace $AB_NAMESPACE \
    --storeId 'QA9oWlvv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'W67Q5lWI' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId 'tI0LCIWS' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 83, "orderNo": "KGNWZX9D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'oQdvpbhs' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'I7oacyX8' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'GSoLdysY' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "h5n0SmNj", "previewUrl": "ogBLwlmK", "thumbnailUrl": "xqkdxQMb", "type": "image", "url": "KBT6n5U9", "videoSource": "vimeo"}, {"alt": "dYyOqngQ", "previewUrl": "B3wt94Px", "thumbnailUrl": "MGWbsCeL", "type": "image", "url": "cH0fJaG2", "videoSource": "generic"}, {"alt": "mOSfcp84", "previewUrl": "4jtfWHA4", "thumbnailUrl": "3NR1cpXN", "type": "image", "url": "kuVSfh9w", "videoSource": "vimeo"}], "developer": "gLyCcUhV", "forumUrl": "QrIAgu9U", "genres": ["MassivelyMultiplayer", "Simulation", "MassivelyMultiplayer"], "localizations": {"usQHf6dM": {"announcement": "zprpd1Up", "slogan": "AjVdnRfh"}, "7YqAKgfW": {"announcement": "UjmacqIY", "slogan": "YzxeGX8q"}, "e7wQ6LYn": {"announcement": "6eNbgPLS", "slogan": "a0zV25HP"}}, "platformRequirements": {"Ltq11Zmh": [{"additionals": "QKcbsHQM", "directXVersion": "Zwaql4yv", "diskSpace": "2a7meInT", "graphics": "WWP9imTz", "label": "HtPtNtJW", "osVersion": "WhRvsIm7", "processor": "bWYvcqjp", "ram": "ruh8c9c1", "soundCard": "qIfEuPq9"}, {"additionals": "T69Gl40P", "directXVersion": "d52PHUbA", "diskSpace": "POR6TTiL", "graphics": "ttCgOnAF", "label": "dyiHO4b0", "osVersion": "WzVM7WCD", "processor": "uKeHVkkR", "ram": "YtYEWxeg", "soundCard": "ekot269p"}, {"additionals": "tEbgl1gW", "directXVersion": "mi10Hnpx", "diskSpace": "7lXpz8lf", "graphics": "oo8YdnLs", "label": "H3wxvuSf", "osVersion": "JrI6Udmm", "processor": "Uo3dIsWd", "ram": "nIyKgrxB", "soundCard": "cLpKZBSb"}], "IS2TNKTJ": [{"additionals": "T70Us6G5", "directXVersion": "ZeYLAx1C", "diskSpace": "NecYPce0", "graphics": "qxc12gNa", "label": "sbXWC4wa", "osVersion": "PkbDlXx3", "processor": "7Vh9i8L4", "ram": "Nm9biuxz", "soundCard": "Oq2qbYyX"}, {"additionals": "z4dZgtxv", "directXVersion": "ZN2IHs4Z", "diskSpace": "62IVvYJU", "graphics": "PLsENDc2", "label": "xYIxs1Gi", "osVersion": "Bd9mBuDX", "processor": "NcRSsYKT", "ram": "hyRHQ5El", "soundCard": "Avo9XD68"}, {"additionals": "EKlJQS5N", "directXVersion": "fTZKi9au", "diskSpace": "RnHdswtn", "graphics": "FYeELEri", "label": "dWdBa11z", "osVersion": "pRElu6SM", "processor": "wn06d6LB", "ram": "gG8CdbrK", "soundCard": "D89mcbMz"}], "m4s9pe0T": [{"additionals": "ldUsKVy1", "directXVersion": "O02vyrye", "diskSpace": "IqUnT6k0", "graphics": "xrO6oMj8", "label": "MFBCqLgk", "osVersion": "WencRksI", "processor": "5CVdWgxe", "ram": "zKErvhzg", "soundCard": "52Nwtbzs"}, {"additionals": "KpLSKFlJ", "directXVersion": "AHniucm7", "diskSpace": "Ws52jP4P", "graphics": "Pj4PpUGM", "label": "T6Vzro35", "osVersion": "yKDrdv5J", "processor": "g33UuNFe", "ram": "iYDdfSV7", "soundCard": "RtaYzu1N"}, {"additionals": "xC7AEH97", "directXVersion": "Tx4LZOfA", "diskSpace": "yc1vQ0du", "graphics": "ZQDvcuQx", "label": "q7HiYbwU", "osVersion": "zNMrdJY3", "processor": "crm517Fu", "ram": "U97hxq7Q", "soundCard": "qAzTHrZ5"}]}, "platforms": ["Linux", "Linux", "IOS"], "players": ["Single", "Coop", "Multi"], "primaryGenre": "Simulation", "publisher": "dsJ5jug6", "releaseDate": "1972-12-15T00:00:00Z", "websiteUrl": "k4dgl7s2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'qVotZwPW' \
    --namespace $AB_NAMESPACE \
    --storeId 'CL4oVPg0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId '6FDPQnw9' \
    --namespace $AB_NAMESPACE \
    --storeId 'C0savAo8' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'ddIesWhL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'u4t7HPxz' \
    --namespace $AB_NAMESPACE \
    --storeId '4RRzm3ki' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'xF4gvm9m' \
    --itemId 'sdmeDF1k' \
    --namespace $AB_NAMESPACE \
    --storeId 'Wzr21k1h' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature '45servAX' \
    --itemId 'MOI6urVN' \
    --namespace $AB_NAMESPACE \
    --storeId '1I4iGZAm' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'XDA3r1Pc' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '2BSA0kvR' \
    --populateBundle 'true' \
    --region '7KHZ9RMx' \
    --storeId '6SwYBb52' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 44, "comparison": "includes", "name": "DiuRlkTF", "predicateType": "EntitlementPredicate", "value": "CdSOP9x5", "values": ["9yh8fYdI", "kPNUYMNG", "Zk7NwlXH"]}, {"anyOf": 3, "comparison": "isNot", "name": "hPZVBgf6", "predicateType": "EntitlementPredicate", "value": "8Qx8tIeF", "values": ["q9FpfeWS", "6IicfteY", "xah2igh1"]}, {"anyOf": 20, "comparison": "isLessThan", "name": "fX2t68j7", "predicateType": "EntitlementPredicate", "value": "CTQVNre0", "values": ["LH8c3C4K", "sFBjZWwl", "wEFOwqkb"]}]}, {"operator": "or", "predicates": [{"anyOf": 30, "comparison": "is", "name": "reMKY72V", "predicateType": "SeasonPassPredicate", "value": "hH55CPXf", "values": ["2yIN43Gs", "XFCirm8A", "MNxRANKw"]}, {"anyOf": 68, "comparison": "isNot", "name": "ozNrCu4O", "predicateType": "EntitlementPredicate", "value": "V3M7gGef", "values": ["Nb6ye5ve", "bodcLvCq", "2p7IzgrE"]}, {"anyOf": 59, "comparison": "is", "name": "XXHsmE28", "predicateType": "SeasonTierPredicate", "value": "ckl3fF4a", "values": ["nfQUZao8", "mBmpFejt", "HGLBZ7cX"]}]}, {"operator": "or", "predicates": [{"anyOf": 71, "comparison": "isNot", "name": "ehUAm9cJ", "predicateType": "SeasonTierPredicate", "value": "t1G9CdN4", "values": ["K2rdXwas", "9u5Af1BQ", "yokGgxuK"]}, {"anyOf": 67, "comparison": "includes", "name": "vjDGYtN0", "predicateType": "EntitlementPredicate", "value": "RA9HneUu", "values": ["BEUWywgj", "LnoDzfKt", "Ds7OTIAo"]}, {"anyOf": 19, "comparison": "is", "name": "yDSKS2rf", "predicateType": "SeasonPassPredicate", "value": "AmkbaGxS", "values": ["oQkOdMc5", "WOwaQtwr", "LoepkI85"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'pnNhF8Zk' \
    --namespace $AB_NAMESPACE \
    --storeId 'bM4AamEQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "AxAGEAQv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'P4SCllO5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '20' \
    --name 'MxDLa4pN' \
    --offset '16' \
    --tag 'NouQoZya' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "o5kVoY7k", "name": "EdC2y45V", "status": "ACTIVE", "tags": ["MOmRfSBX", "fGk349T6", "8EYEdBEe"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupByBoothName \
    --namespace $AB_NAMESPACE \
    --boothName 'bPFjjKsd' \
    > test.out 2>&1
eval_tap $? 112 'GetKeyGroupByBoothName' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId '7yypig1Y' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "g7igYNVI", "name": "73ZhUsXT", "status": "INACTIVE", "tags": ["w9RX5534", "RlvR3ARX", "G7jvGGSN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId '3elQ7L94' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'ZiM73eOH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'Zvp5Tkhn' \
    --namespace $AB_NAMESPACE \
    --limit '20' \
    --offset '98' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'iBB4fqmC' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'n4savz8z' \
    --limit '1' \
    --offset '72' \
    --orderNos '["E38hoQ6S", "ryhbDPZ4", "B12zxK0H"]' \
    --sortBy 'kBAFywZ7' \
    --startTime 'IzVimmdt' \
    --status 'CHARGED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'jm0Fkd7w' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "ajYfMIJp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'f0a6NUx1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "yM8JPI6w", "privateKey": "VXdabhVf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'kY1Qltdp' \
    --externalId 'bJUPLlRj' \
    --limit '19' \
    --notificationSource 'STRIPE' \
    --notificationType '8G3pbl7S' \
    --offset '60' \
    --paymentOrderNo 'UTMNUtz7' \
    --startDate '8JwJd1fk' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'KBx2ef5s' \
    --limit '55' \
    --offset '50' \
    --status 'REQUEST_FOR_INFORMATION' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "oZracyb3", "currencyNamespace": "EtpjHrN3", "customParameters": {"XhuCQhDb": {}, "LjOaCcOu": {}, "6FrSwlnP": {}}, "description": "VoSQtR6h", "extOrderNo": "b6Q45aje", "extUserId": "xrCZmlcR", "itemType": "CODE", "language": "VRNU", "metadata": {"jC9JZgXh": "Bz6JsOME", "PtUg7skG": "ypvNzOOv", "BnOneFXQ": "cfEpLP2r"}, "notifyUrl": "HqGDlzG5", "omitNotification": false, "platform": "xZLCtsNf", "price": 84, "recurringPaymentOrderNo": "lsSvfWwN", "region": "Z3sUtvL4", "returnUrl": "gRZYIHe8", "sandbox": false, "sku": "rbG2RGbQ", "subscriptionId": "M6JLbQx3", "targetNamespace": "6j1tiw2L", "targetUserId": "Z7PrqvT6", "title": "6eeHvzbS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'm31ViuTL' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '9PZVbPkZ' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "LiVAie7j", "paymentMethod": "KW74acz8", "paymentProvider": "PAYPAL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'iBj3WNii' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "iEYTQM5c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '4046O04M' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 100, "currencyCode": "oXAE6LCq", "notifyType": "REFUND", "paymentProvider": "STRIPE", "salesTax": 69, "vat": 27}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'WJEq7i0z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'UZIxBYsF' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Playstation", "Stadia", "Epic"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 CreateReward
# body param: body
echo '{"description": "dEBvNpbt", "eventTopic": "SEwuurAh", "maxAwarded": 7, "maxAwardedPerUser": 60, "namespaceExpression": "xJoNcKBm", "rewardCode": "oRPdLMo8", "rewardConditions": [{"condition": "2d6TbMGz", "conditionName": "cFepw3X4", "eventName": "byBSGNV2", "rewardItems": [{"duration": 90, "itemId": "UrG9wJBr", "quantity": 62}, {"duration": 41, "itemId": "FkkRvRcC", "quantity": 89}, {"duration": 49, "itemId": "uTwvIhTI", "quantity": 40}]}, {"condition": "PTNZwJGM", "conditionName": "NV03Y4VR", "eventName": "1bOQ1JKw", "rewardItems": [{"duration": 99, "itemId": "0fPrbfe8", "quantity": 21}, {"duration": 7, "itemId": "Jbv1gCNB", "quantity": 55}, {"duration": 43, "itemId": "K7w6CGqI", "quantity": 80}]}, {"condition": "L13hBz8j", "conditionName": "MlzzLLvn", "eventName": "eS0riLZz", "rewardItems": [{"duration": 35, "itemId": "hCpzJgYo", "quantity": 65}, {"duration": 82, "itemId": "rkSjPUBY", "quantity": 24}, {"duration": 47, "itemId": "fWQM5kOH", "quantity": 75}]}], "userIdExpression": "dCOyIJng"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateReward' test.out

#- 137 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'UPJ2lwf6' \
    --limit '36' \
    --offset '61' \
    --sortBy '["namespace", "namespace:asc", "namespace:desc"]' \
    > test.out 2>&1
eval_tap $? 137 'QueryRewards' test.out

#- 138 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'ExportRewards' test.out

#- 139 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 139 'ImportRewards' test.out

#- 140 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId '8zWuVc0S' \
    > test.out 2>&1
eval_tap $? 140 'GetReward' test.out

#- 141 UpdateReward
# body param: body
echo '{"description": "Rq8bzXAr", "eventTopic": "AhToqLtk", "maxAwarded": 17, "maxAwardedPerUser": 66, "namespaceExpression": "1K9agIhe", "rewardCode": "oYycuksY", "rewardConditions": [{"condition": "LffTDLDV", "conditionName": "ApPSq08u", "eventName": "peuM3gmi", "rewardItems": [{"duration": 12, "itemId": "oRnuKarD", "quantity": 63}, {"duration": 11, "itemId": "5kivcYum", "quantity": 54}, {"duration": 80, "itemId": "tYVut1LI", "quantity": 87}]}, {"condition": "QLHbrvRJ", "conditionName": "22l2YpoK", "eventName": "UtkyT6T3", "rewardItems": [{"duration": 80, "itemId": "HZSKqSmz", "quantity": 28}, {"duration": 49, "itemId": "JOcuojLf", "quantity": 0}, {"duration": 56, "itemId": "ZLoSL15V", "quantity": 79}]}, {"condition": "rulzG5zl", "conditionName": "ETKFOsD0", "eventName": "sTmmqseb", "rewardItems": [{"duration": 58, "itemId": "HnTUQo0i", "quantity": 100}, {"duration": 82, "itemId": "Nq5olPEp", "quantity": 16}, {"duration": 12, "itemId": "2O3uXMdJ", "quantity": 62}]}], "userIdExpression": "b08hylZy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'mGfibZBM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateReward' test.out

#- 142 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'uWiKd3bE' \
    > test.out 2>&1
eval_tap $? 142 'DeleteReward' test.out

#- 143 CheckEventCondition
# body param: body
echo '{"payload": {"6zsfCJqk": {}, "jsXISlh4": {}, "8mTe4Boj": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'lowk7rW5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CheckEventCondition' test.out

#- 144 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "4iEH7eV3", "userId": "FvKu8hzG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'M2mDC4nA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteRewardConditionRecord' test.out

#- 145 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'ListStores' test.out

#- 146 CreateStore
# body param: body
echo '{"defaultLanguage": "btVE9V1R", "defaultRegion": "HLuJQyKi", "description": "hYxW2sAx", "supportedLanguages": ["hR0h3AUv", "Nw9AvYy5", "HGdLrP55"], "supportedRegions": ["5tcQJc1N", "kPFw8uhO", "KRrHOYYD"], "title": "eHsuGAip"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreateStore' test.out

#- 147 ImportStore
eval_tap 0 147 'ImportStore # SKIP deprecated' test.out

#- 148 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'GetPublishedStore' test.out

#- 149 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'DeletePublishedStore' test.out

#- 150 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 150 'GetPublishedStoreBackup' test.out

#- 151 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'RollbackPublishedStore' test.out

#- 152 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'pRvm91Mw' \
    > test.out 2>&1
eval_tap $? 152 'GetStore' test.out

#- 153 UpdateStore
# body param: body
echo '{"defaultLanguage": "ChEUZ0Hj", "defaultRegion": "7rOueWJh", "description": "sA55Fz84", "supportedLanguages": ["n19Uss7q", "ObH73qzh", "7S2mSnAE"], "supportedRegions": ["srFiynBI", "aRHQfkAC", "BpLJtiQ1"], "title": "0se4VhYi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'bf7cn0gN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateStore' test.out

#- 154 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'pa9CKj3d' \
    > test.out 2>&1
eval_tap $? 154 'DeleteStore' test.out

#- 155 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'ZVBrPSiz' \
    --action 'UPDATE' \
    --itemSku 'Zs4QOTJp' \
    --itemType 'BUNDLE' \
    --limit '78' \
    --offset '36' \
    --selected 'false' \
    --sortBy '["createdAt", "updatedAt"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'YkFb4p5u' \
    --updatedAtStart 'lwsKcyvO' \
    > test.out 2>&1
eval_tap $? 155 'QueryChanges' test.out

#- 156 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'HfWBMXW3' \
    > test.out 2>&1
eval_tap $? 156 'PublishAll' test.out

#- 157 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'kLEvncAo' \
    > test.out 2>&1
eval_tap $? 157 'PublishSelected' test.out

#- 158 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'kMqFs5pg' \
    > test.out 2>&1
eval_tap $? 158 'SelectAllRecords' test.out

#- 159 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'xG3NZU5f' \
    --action 'CREATE' \
    --itemSku 'f24ewmao' \
    --itemType 'CODE' \
    --type 'ITEM' \
    --updatedAtEnd 'D34IzBZU' \
    --updatedAtStart 'ZQD5PxtA' \
    > test.out 2>&1
eval_tap $? 159 'GetStatistic' test.out

#- 160 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '343RPQog' \
    > test.out 2>&1
eval_tap $? 160 'UnselectAllRecords' test.out

#- 161 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId '8R9hUWFu' \
    --namespace $AB_NAMESPACE \
    --storeId 'phzyH6Ce' \
    > test.out 2>&1
eval_tap $? 161 'SelectRecord' test.out

#- 162 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'ZdOwkB8S' \
    --namespace $AB_NAMESPACE \
    --storeId 'mzxe87Jd' \
    > test.out 2>&1
eval_tap $? 162 'UnselectRecord' test.out

#- 163 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId '0YVzE6x5' \
    --targetStoreId 'xDGRtv1i' \
    > test.out 2>&1
eval_tap $? 163 'CloneStore' test.out

#- 164 ExportStore
eval_tap 0 164 'ExportStore # SKIP deprecated' test.out

#- 165 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'efPMFRQW' \
    --limit '84' \
    --offset '88' \
    --sku '1YX3iMyZ' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    --userId 'hEX78jYt' \
    > test.out 2>&1
eval_tap $? 165 'QuerySubscriptions' test.out

#- 166 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'SPaXIu2r' \
    > test.out 2>&1
eval_tap $? 166 'RecurringChargeSubscription' test.out

#- 167 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'IjT9R0uF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetTicketDynamic' test.out

#- 168 DecreaseTicketSale
# body param: body
echo '{"orderNo": "jwIclLcy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'WHAaddkA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'DecreaseTicketSale' test.out

#- 169 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'wrUjk6IP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'GetTicketBoothID' test.out

#- 170 IncreaseTicketSale
# body param: body
echo '{"count": 74, "orderNo": "LT2GFtu7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'zlN27xnl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'IncreaseTicketSale' test.out

#- 171 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "JGkpsBsz", "value": 66}, {"id": "JGjdr4yS", "value": 34}, {"id": "HcVLoBtt", "value": 69}], "steamUserId": "vvxddrpT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'tlrsTI8f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'UnlockSteamUserAchievement' test.out

#- 172 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'j2Ego6NX' \
    --xboxUserId 'PgqSKwDB' \
    > test.out 2>&1
eval_tap $? 172 'GetXblUserAchievements' test.out

#- 173 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "lQEkVq6V", "percentComplete": 39}, {"id": "kcs4nvf3", "percentComplete": 55}, {"id": "RIBjnVLo", "percentComplete": 88}], "serviceConfigId": "dfRPoOJJ", "titleId": "3EEThSPj", "xboxUserId": "4IZHdf5E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'gUu2w4PZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'UpdateXblUserAchievement' test.out

#- 174 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'Z0c8zQEw' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeCampaign' test.out

#- 175 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'QNzTFFFO' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeEntitlement' test.out

#- 176 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'Y84xBLxT' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizeFulfillment' test.out

#- 177 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'Gn1ViJjE' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeIntegration' test.out

#- 178 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '2LoPBvi7' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizeOrder' test.out

#- 179 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'IvQ4VJm0' \
    > test.out 2>&1
eval_tap $? 179 'AnonymizePayment' test.out

#- 180 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'mL9E4ses' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeSubscription' test.out

#- 181 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId '5SMff9Dj' \
    > test.out 2>&1
eval_tap $? 181 'AnonymizeWallet' test.out

#- 182 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'r3usqNQQ' \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'p2ur1j5f' \
    --features '["jDalbf57", "wpVmbZUa", "HpnNtPjr"]' \
    --itemId '["ad8Z9MdM", "N42m3zui", "mLC8wymf"]' \
    --limit '17' \
    --offset '60' \
    > test.out 2>&1
eval_tap $? 182 'QueryUserEntitlements' test.out

#- 183 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1994-09-09T00:00:00Z", "grantedCode": "fFji8T6C", "itemId": "MQfQNb0l", "itemNamespace": "0k4IFKXe", "language": "Mim-Xkhw", "quantity": 40, "region": "VNv4Ssay", "source": "REDEEM_CODE", "startDate": "1973-04-20T00:00:00Z", "storeId": "WvKmSkV7"}, {"endDate": "1991-11-14T00:00:00Z", "grantedCode": "U71pvb2i", "itemId": "r25VuYEx", "itemNamespace": "Ctbq0SqU", "language": "QJ", "quantity": 64, "region": "PigIKjBR", "source": "OTHER", "startDate": "1985-10-13T00:00:00Z", "storeId": "sNAeQGpT"}, {"endDate": "1994-06-23T00:00:00Z", "grantedCode": "QPajE1rk", "itemId": "b8VJYDUN", "itemNamespace": "932qUn7q", "language": "zawf", "quantity": 49, "region": "C3dQsrt4", "source": "OTHER", "startDate": "1975-01-15T00:00:00Z", "storeId": "7yUZwUpc"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'GP6W973w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'GrantUserEntitlement' test.out

#- 184 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'ruW4P5lQ' \
    --activeOnly 'false' \
    --appId 'GyB5t0k1' \
    > test.out 2>&1
eval_tap $? 184 'GetUserAppEntitlementByAppId' test.out

#- 185 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '5Gs8qsQi' \
    --activeOnly 'true' \
    --limit '57' \
    --offset '94' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 185 'QueryUserEntitlementsByAppType' test.out

#- 186 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Y9i8RTwd' \
    --activeOnly 'false' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'q8kL0ci1' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlementByItemId' test.out

#- 187 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'JOcEjeF2' \
    --activeOnly 'true' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'G2QqOWa5' \
    > test.out 2>&1
eval_tap $? 187 'GetUserEntitlementBySku' test.out

#- 188 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'NWP0QocU' \
    --appIds '["21mQFUZL", "mVk1RRxK", "N3ftpDOQ"]' \
    --itemIds '["epKF8QPc", "bRX2zrz3", "Mrm5ULtM"]' \
    --skus '["ZmBpOqSm", "AmyxOUJI", "VcyKXAQT"]' \
    > test.out 2>&1
eval_tap $? 188 'ExistsAnyUserActiveEntitlement' test.out

#- 189 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'aLubtecM' \
    --itemIds '["OTcKR96M", "TDTrXzQv", "0kPg5MHO"]' \
    > test.out 2>&1
eval_tap $? 189 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 190 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'AyGj58b0' \
    --appId 'nHOnH6w1' \
    > test.out 2>&1
eval_tap $? 190 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 191 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'DCZWgnsS' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'tGjLLYH3' \
    > test.out 2>&1
eval_tap $? 191 'GetUserEntitlementOwnershipByItemId' test.out

#- 192 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'QAbkN8hl' \
    --ids '["a0Pu9pHP", "AIqP4g1t", "YwmC222l"]' \
    > test.out 2>&1
eval_tap $? 192 'GetUserEntitlementOwnershipByItemIds' test.out

#- 193 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'X2QWFznj' \
    --entitlementClazz 'MEDIA' \
    --sku 'gi5JKhgp' \
    > test.out 2>&1
eval_tap $? 193 'GetUserEntitlementOwnershipBySku' test.out

#- 194 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '9IwxhnFi' \
    --entitlementIds 'QJtPTFuB' \
    > test.out 2>&1
eval_tap $? 194 'RevokeUserEntitlements' test.out

#- 195 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'WPllvJi4' \
    --namespace $AB_NAMESPACE \
    --userId 'nIZwfOvB' \
    > test.out 2>&1
eval_tap $? 195 'GetUserEntitlement' test.out

#- 196 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1980-02-14T00:00:00Z", "nullFieldList": ["P6mqxGP9", "o1UwqLZ8", "52reTM3y"], "startDate": "1973-12-24T00:00:00Z", "status": "INACTIVE", "useCount": 1}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'Jnfhx3Py' \
    --namespace $AB_NAMESPACE \
    --userId 'xvfyJcaH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'UpdateUserEntitlement' test.out

#- 197 ConsumeUserEntitlement
# body param: body
echo '{"options": ["XXgJ9Lhb", "CdCY6BU7", "BcfRiAx2"], "requestId": "tvzsMy1o", "useCount": 7}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 's5qIns0v' \
    --namespace $AB_NAMESPACE \
    --userId 'sDE4jSW2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'ConsumeUserEntitlement' test.out

#- 198 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'wkOiHKvV' \
    --namespace $AB_NAMESPACE \
    --userId 'z9JB3jzp' \
    > test.out 2>&1
eval_tap $? 198 'DisableUserEntitlement' test.out

#- 199 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'vW3WK4gr' \
    --namespace $AB_NAMESPACE \
    --userId 'qfslGXpL' \
    > test.out 2>&1
eval_tap $? 199 'EnableUserEntitlement' test.out

#- 200 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId '0KqLnVTl' \
    --namespace $AB_NAMESPACE \
    --userId 'i5rYLVvt' \
    > test.out 2>&1
eval_tap $? 200 'GetUserEntitlementHistories' test.out

#- 201 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'EEOnNfly' \
    --namespace $AB_NAMESPACE \
    --userId '2N4xGXMc' \
    > test.out 2>&1
eval_tap $? 201 'RevokeUserEntitlement' test.out

#- 202 FulfillItem
# body param: body
echo '{"duration": 42, "endDate": "1999-06-16T00:00:00Z", "itemId": "ced1C9gK", "itemSku": "BE7r3cZ3", "language": "9SIB1XAv", "order": {"currency": {"currencyCode": "Ikbjg5dP", "currencySymbol": "n2UXIa0u", "currencyType": "REAL", "decimals": 4, "namespace": "gpaEGMyj"}, "ext": {"rguQGEsx": {}, "GSXCzqd2": {}, "d9ugaJwW": {}}, "free": true}, "orderNo": "XC2KM4Dv", "origin": "Playstation", "quantity": 22, "region": "N8UtQPtx", "source": "DLC", "startDate": "1972-12-11T00:00:00Z", "storeId": "pKmQRW5z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'ivtSACQF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'FulfillItem' test.out

#- 203 RedeemCode
# body param: body
echo '{"code": "EGA6j7BA", "language": "OkOD-QmAY", "region": "PLH4ltyz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'vcbhjAUA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'RedeemCode' test.out

#- 204 FulfillRewards
# body param: body
echo '{"origin": "Xbox", "rewards": [{"currency": {"currencyCode": "wRBP1dWF", "namespace": "KYCBr9j5"}, "item": {"itemId": "vGn0x78d", "itemSku": "AN63TB8P", "itemType": "4gFhvdt2"}, "quantity": 62, "type": "CURRENCY"}, {"currency": {"currencyCode": "hgJukmx1", "namespace": "z9cgwbYG"}, "item": {"itemId": "Toeg7mNX", "itemSku": "CuLd4LWB", "itemType": "vC3yXb42"}, "quantity": 98, "type": "CURRENCY"}, {"currency": {"currencyCode": "AnPw0gBI", "namespace": "XAeDCP4J"}, "item": {"itemId": "LbnXTODj", "itemSku": "vXDXsSGv", "itemType": "kTqNfhEq"}, "quantity": 35, "type": "CURRENCY"}], "source": "OTHER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'GeEUWcnk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'FulfillRewards' test.out

#- 205 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'IcL4aY5E' \
    --endTime 'JmBtZrs6' \
    --limit '26' \
    --offset '74' \
    --productId '3vjQoeA9' \
    --startTime 'PSoNjhBV' \
    --status 'VERIFIED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 205 'QueryUserIAPOrders' test.out

#- 206 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'TAQmD29M' \
    > test.out 2>&1
eval_tap $? 206 'QueryAllUserIAPOrders' test.out

#- 207 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId '6Pp1YsRV' \
    --endTime 'ba5lc164' \
    --limit '51' \
    --offset '51' \
    --startTime 'OO5hZJme' \
    --status 'PENDING' \
    --type 'XBOX' \
    > test.out 2>&1
eval_tap $? 207 'QueryUserIAPConsumeHistory' test.out

#- 208 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "HLp_QyGZ", "productId": "7JEIpzqs", "region": "ARWLT0wY", "type": "STEAM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'bRD6cUts' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'MockFulfillIAPItem' test.out

#- 209 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'NHONVyXO' \
    --itemId 'rMy3O2Rl' \
    --limit '21' \
    --offset '71' \
    --status 'INIT' \
    > test.out 2>&1
eval_tap $? 209 'QueryUserOrders' test.out

#- 210 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "PN52c4XV", "currencyNamespace": "u8T3JoSQ", "discountedPrice": 2, "ext": {"s0wY6SHK": {}, "jKwC9EXC": {}, "YPMiwdOR": {}}, "itemId": "xQw3sneu", "language": "dhJdITjo", "options": {"skipPriceValidation": false}, "platform": "IOS", "price": 65, "quantity": 47, "region": "ICSLjvom", "returnUrl": "TAnzHXPD", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'x3RND4wp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'AdminCreateUserOrder' test.out

#- 211 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'gQNB5D3g' \
    --itemId 'awax99Tr' \
    > test.out 2>&1
eval_tap $? 211 'CountOfPurchasedItem' test.out

#- 212 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'UyFRzgwO' \
    --userId '0u218P5Z' \
    > test.out 2>&1
eval_tap $? 212 'GetUserOrder' test.out

#- 213 UpdateUserOrderStatus
# body param: body
echo '{"status": "FULFILLED", "statusReason": "s9VD51vF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo '4ohLIrir' \
    --userId 'YXuJNhp0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'UpdateUserOrderStatus' test.out

#- 214 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'PmnO0FRJ' \
    --userId 'i7KdDCiT' \
    > test.out 2>&1
eval_tap $? 214 'FulfillUserOrder' test.out

#- 215 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'a6Irypag' \
    --userId 'OG80TSgf' \
    > test.out 2>&1
eval_tap $? 215 'GetUserOrderGrant' test.out

#- 216 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'wUbkoy4a' \
    --userId 'psfvRP49' \
    > test.out 2>&1
eval_tap $? 216 'GetUserOrderHistories' test.out

#- 217 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "5RYAr843"}, "authorisedTime": "1977-08-25T00:00:00Z", "chargebackReversedTime": "1993-08-19T00:00:00Z", "chargebackTime": "1977-11-19T00:00:00Z", "chargedTime": "1980-07-03T00:00:00Z", "createdTime": "1972-07-21T00:00:00Z", "currency": {"currencyCode": "l2jAczMJ", "currencySymbol": "2LVjoyTC", "currencyType": "VIRTUAL", "decimals": 83, "namespace": "OzGRrZsp"}, "customParameters": {"moipf7LA": {}, "m7BJy8Lk": {}, "9rxir5yX": {}}, "extOrderNo": "fMSxTCIx", "extTxId": "z0hammvJ", "extUserId": "S31aPzRL", "issuedAt": "1990-01-28T00:00:00Z", "metadata": {"45mHbkaa": "R2SNWR8R", "lTzGq07V": "YwhRORbM", "ttVUYfxn": "Oy6khVcq"}, "namespace": "5vQ3sK5U", "nonceStr": "orHbolRp", "paymentMethod": "seN8SFBy", "paymentMethodFee": 91, "paymentOrderNo": "ZObKmRbD", "paymentProvider": "STRIPE", "paymentProviderFee": 17, "paymentStationUrl": "84LMIQ2X", "price": 68, "refundedTime": "1994-09-04T00:00:00Z", "salesTax": 32, "sandbox": false, "sku": "mLCLqw4o", "status": "CHARGEBACK", "statusReason": "VmOdMml5", "subscriptionId": "CM7lgWwz", "subtotalPrice": 33, "targetNamespace": "EvIBhOmB", "targetUserId": "4htpNpqw", "tax": 51, "totalPrice": 72, "totalTax": 79, "txEndTime": "1998-01-18T00:00:00Z", "type": "BC6mofBc", "userId": "lqHROJsf", "vat": 16}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'bzClSPMQ' \
    --userId 'fH9uRATt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'ProcessUserOrderNotification' test.out

#- 218 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'IYcmOfDu' \
    --userId '7okxLkHN' \
    > test.out 2>&1
eval_tap $? 218 'DownloadUserOrderReceipt' test.out

#- 219 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "TfGaNpZQ", "currencyNamespace": "bnfYXUjQ", "customParameters": {"K6TTIuqs": {}, "jLmMnvBI": {}, "oq7EGgTx": {}}, "description": "rzurjsE6", "extOrderNo": "VJ4Cb3nN", "extUserId": "fCMmi7Vs", "itemType": "MEDIA", "language": "VQqx-873", "metadata": {"yLyKm8sB": "tjAKiaic", "qvDYPdq3": "HNqWcbat", "2gJFPi1D": "halQpDXB"}, "notifyUrl": "cSICbkom", "omitNotification": true, "platform": "N0j8N5eA", "price": 72, "recurringPaymentOrderNo": "YaaFLndR", "region": "d2KsMzL5", "returnUrl": "QvSNYgYN", "sandbox": true, "sku": "oU4np6kL", "subscriptionId": "ZaSoxDWN", "title": "1irZhMTP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'P3wBNHMS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'CreateUserPaymentOrder' test.out

#- 220 RefundUserPaymentOrder
# body param: body
echo '{"description": "oqgktUsB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qbdDt8ZW' \
    --userId 'IfJJepS1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'RefundUserPaymentOrder' test.out

#- 221 ApplyUserRedemption
# body param: body
echo '{"code": "pLT5NbdM", "orderNo": "AYywdHjK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId '4kA1lB9e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'ApplyUserRedemption' test.out

#- 222 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '8YUtsC93' \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'CukZrbDR' \
    --limit '70' \
    --offset '26' \
    --sku 'hbfbVtnc' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 222 'QueryUserSubscriptions' test.out

#- 223 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'le6WpbIw' \
    --excludeSystem 'false' \
    --limit '62' \
    --offset '42' \
    --subscriptionId 'QmYQNSaO' \
    > test.out 2>&1
eval_tap $? 223 'GetUserSubscriptionActivities' test.out

#- 224 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 21, "itemId": "6v46jsCd", "language": "dSQksivG", "reason": "aPLdpNRb", "region": "gndZ5yJY", "source": "I8plw1Oe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'l44xgXmH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'PlatformSubscribeSubscription' test.out

#- 225 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'fc4hv2H3' \
    --itemId 'prgHAHTG' \
    > test.out 2>&1
eval_tap $? 225 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 226 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BMtCYvIP' \
    --userId 'VdUaL9Pq' \
    > test.out 2>&1
eval_tap $? 226 'GetUserSubscription' test.out

#- 227 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'HEuMs5TC' \
    --userId 'rLKqOru1' \
    > test.out 2>&1
eval_tap $? 227 'DeleteUserSubscription' test.out

#- 228 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "h1EraZje"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qk11SUql' \
    --userId 'wVaDvscH' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'CancelSubscription' test.out

#- 229 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 76, "reason": "vdPpUAzc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'UGZgUIBk' \
    --userId 'YgkOk6cc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'GrantDaysToSubscription' test.out

#- 230 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'JBeRe0h5' \
    --userId 'rBLJOoLN' \
    --excludeFree 'false' \
    --limit '27' \
    --offset '8' \
    > test.out 2>&1
eval_tap $? 230 'GetUserSubscriptionBillingHistories' test.out

#- 231 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "K8Yjhz0u"}, "authorisedTime": "1990-04-06T00:00:00Z", "chargebackReversedTime": "1994-08-25T00:00:00Z", "chargebackTime": "1984-05-06T00:00:00Z", "chargedTime": "1997-01-23T00:00:00Z", "createdTime": "1987-12-11T00:00:00Z", "currency": {"currencyCode": "SR8QhwXJ", "currencySymbol": "C2P59VfL", "currencyType": "VIRTUAL", "decimals": 24, "namespace": "5ywJgb4r"}, "customParameters": {"7RnVCirV": {}, "PniH0M3D": {}, "fRTnHOX5": {}}, "extOrderNo": "eqVw3iPp", "extTxId": "Wj3au6tp", "extUserId": "yT9XVFSW", "issuedAt": "1974-07-07T00:00:00Z", "metadata": {"pYRFUrr0": "2xa7GRGw", "vPFBXENS": "M6gvO2l1", "LbMZnPxj": "oecrbCR5"}, "namespace": "1Kns2Z5U", "nonceStr": "FgZ8Kwbf", "paymentMethod": "phYMHEHz", "paymentMethodFee": 66, "paymentOrderNo": "trryJvZc", "paymentProvider": "WALLET", "paymentProviderFee": 96, "paymentStationUrl": "e9wbAM6r", "price": 2, "refundedTime": "1993-05-08T00:00:00Z", "salesTax": 24, "sandbox": true, "sku": "zy2IB6O6", "status": "AUTHORISED", "statusReason": "dKkArZpO", "subscriptionId": "6GSMFSOz", "subtotalPrice": 6, "targetNamespace": "C5felwwy", "targetUserId": "OKY4CPFn", "tax": 0, "totalPrice": 61, "totalTax": 93, "txEndTime": "1984-04-21T00:00:00Z", "type": "jl18WHQG", "userId": "ZvvGAkrt", "vat": 77}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'aLsMI2r0' \
    --userId 'ZpBBYKNx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'ProcessUserSubscriptionNotification' test.out

#- 232 AcquireUserTicket
# body param: body
echo '{"count": 38, "orderNo": "dgqCxcQr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'zn0KesLL' \
    --namespace $AB_NAMESPACE \
    --userId '9DzEzbuT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AcquireUserTicket' test.out

#- 233 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId '0QSbBMLi' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserCurrencyWallets' test.out

#- 234 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'GxFgrHvx' \
    --namespace $AB_NAMESPACE \
    --userId 'p49kOVk2' \
    --limit '77' \
    --offset '39' \
    > test.out 2>&1
eval_tap $? 234 'ListUserCurrencyTransactions' test.out

#- 235 CheckWallet
eval_tap 0 235 'CheckWallet # SKIP deprecated' test.out

#- 236 CreditUserWallet
# body param: body
echo '{"amount": 45, "expireAt": "1993-01-04T00:00:00Z", "origin": "Steam", "reason": "mHA3HKn1", "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'vIeOrOCx' \
    --namespace $AB_NAMESPACE \
    --userId 'HXnzqmZj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'CreditUserWallet' test.out

#- 237 PayWithUserWallet
# body param: body
echo '{"amount": 82, "walletPlatform": "Nintendo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'eWyFGMmf' \
    --namespace $AB_NAMESPACE \
    --userId 's0cBB9mq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'PayWithUserWallet' test.out

#- 238 GetUserWallet
eval_tap 0 238 'GetUserWallet # SKIP deprecated' test.out

#- 239 DebitUserWallet
eval_tap 0 239 'DebitUserWallet # SKIP deprecated' test.out

#- 240 DisableUserWallet
eval_tap 0 240 'DisableUserWallet # SKIP deprecated' test.out

#- 241 EnableUserWallet
eval_tap 0 241 'EnableUserWallet # SKIP deprecated' test.out

#- 242 ListUserWalletTransactions
eval_tap 0 242 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 243 QueryWallets
eval_tap 0 243 'QueryWallets # SKIP deprecated' test.out

#- 244 GetWallet
eval_tap 0 244 'GetWallet # SKIP deprecated' test.out

#- 245 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'tZm2lR14' \
    --end 'L1g4LLSY' \
    --start 'GqCXiMZA' \
    > test.out 2>&1
eval_tap $? 245 'SyncOrders' test.out

#- 246 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["TYVm8r4i", "zlnZPne8", "NPwV6yuM"], "apiKey": "arh72brY", "authoriseAsCapture": false, "blockedPaymentMethods": ["xOGfGhiX", "cZH1bsR0", "DWCVryg9"], "clientKey": "7bj310tf", "dropInSettings": "msUYEiSw", "liveEndpointUrlPrefix": "XLxooJiu", "merchantAccount": "R1sbDZ4s", "notificationHmacKey": "qX3rZElA", "notificationPassword": "jdhSyita", "notificationUsername": "xrrguGe0", "returnUrl": "Nn10D3kh", "settings": "b1mtluMw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'TestAdyenConfig' test.out

#- 247 TestAliPayConfig
# body param: body
echo '{"appId": "Xjsfa1N8", "privateKey": "PWPGlUZ0", "publicKey": "TyRmXC8U", "returnUrl": "oNvJLa6b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'TestAliPayConfig' test.out

#- 248 TestCheckoutConfig
# body param: body
echo '{"publicKey": "wa21L8tL", "secretKey": "fCsLVuwl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'TestCheckoutConfig' test.out

#- 249 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'GemeDgme' \
    --region '3eYtWm9O' \
    > test.out 2>&1
eval_tap $? 249 'DebugMatchedPaymentMerchantConfig' test.out

#- 250 TestPayPalConfig
# body param: body
echo '{"clientID": "FNYM6hmy", "clientSecret": "Y69Y0bAE", "returnUrl": "OiUC3S5Z", "webHookId": "tVhor7ix"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'TestPayPalConfig' test.out

#- 251 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["K5ORrGYd", "gAk3P46i", "mNuVdZAY"], "publishableKey": "5rGD0cz9", "secretKey": "pnSdzP1B", "webhookSecret": "omqIdDGq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'TestStripeConfig' test.out

#- 252 TestWxPayConfig
# body param: body
echo '{"appId": "1E4HJ4Me", "key": "7CGVxKCu", "mchid": "9r3Mb4BF", "returnUrl": "P7JHMFqt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'TestWxPayConfig' test.out

#- 253 TestXsollaConfig
# body param: body
echo '{"apiKey": "VhiruoL7", "flowCompletionUrl": "QEz4jDsI", "merchantId": 58, "projectId": 28, "projectSecretKey": "rmXyy4oY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'TestXsollaConfig' test.out

#- 254 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id '6uIAqgVT' \
    > test.out 2>&1
eval_tap $? 254 'GetPaymentMerchantConfig' test.out

#- 255 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["i1gB7fda", "wiLcuK8R", "LyksquQQ"], "apiKey": "xyfLGd2r", "authoriseAsCapture": false, "blockedPaymentMethods": ["jH5cM9C1", "eLFKm5GR", "bUhBxb3a"], "clientKey": "WJ9eEZDN", "dropInSettings": "72NCd0yQ", "liveEndpointUrlPrefix": "qEAulvO2", "merchantAccount": "Me2hKAJA", "notificationHmacKey": "E5NvtOyg", "notificationPassword": "0e6Pifbh", "notificationUsername": "hpOsCqs9", "returnUrl": "I00QD582", "settings": "Ufxy6KeH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'c3hyf73v' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateAdyenConfig' test.out

#- 256 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'g2eOTDY0' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 256 'TestAdyenConfigById' test.out

#- 257 UpdateAliPayConfig
# body param: body
echo '{"appId": "te1K0ACq", "privateKey": "q3wAannP", "publicKey": "8IuWPzsQ", "returnUrl": "5ltBCgko"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'WE5rnQVU' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateAliPayConfig' test.out

#- 258 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'l8RVNtPB' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 258 'TestAliPayConfigById' test.out

#- 259 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "R6cNxqFl", "secretKey": "O6G06EMX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'PG9dnrQk' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateCheckoutConfig' test.out

#- 260 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'GhzZv3Tl' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 260 'TestCheckoutConfigById' test.out

#- 261 UpdatePayPalConfig
# body param: body
echo '{"clientID": "PVjEZPgw", "clientSecret": "Lgx2Oh40", "returnUrl": "9W5nyksv", "webHookId": "gI6ufbve"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'aBhI2VCk' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdatePayPalConfig' test.out

#- 262 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'O0mOKbRB' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 262 'TestPayPalConfigById' test.out

#- 263 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["1n41JP2q", "t7Ao6lCv", "YHB1UdaS"], "publishableKey": "uryepOvC", "secretKey": "JqMhaNGF", "webhookSecret": "kQ8cQVul"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'cIJKpG2O' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdateStripeConfig' test.out

#- 264 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'FULWU1T0' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 264 'TestStripeConfigById' test.out

#- 265 UpdateWxPayConfig
# body param: body
echo '{"appId": "ScVCX5NX", "key": "4NvtYUWB", "mchid": "Yt9RDUJZ", "returnUrl": "txPEJR6I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'aTjnQZZD' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'UpdateWxPayConfig' test.out

#- 266 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'HV3MhVpH' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 266 'UpdateWxPayConfigCert' test.out

#- 267 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'cjH1Ao1v' \
    > test.out 2>&1
eval_tap $? 267 'TestWxPayConfigById' test.out

#- 268 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "VVWjBgFS", "flowCompletionUrl": "nNn2mEXz", "merchantId": 2, "projectId": 91, "projectSecretKey": "5gscHZ4L"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'k8eKgNRb' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdateXsollaConfig' test.out

#- 269 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'sURhcnlu' \
    > test.out 2>&1
eval_tap $? 269 'TestXsollaConfigById' test.out

#- 270 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": false, "size": "SMALL", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'm63fyDCk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'UpdateXsollaUIConfig' test.out

#- 271 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '86' \
    --namespace_ 'LpEVRO47' \
    --offset '78' \
    --region '59kmWaoU' \
    > test.out 2>&1
eval_tap $? 271 'QueryPaymentProviderConfig' test.out

#- 272 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "uMI9Nzdw", "region": "qG6YIRov", "sandboxTaxJarApiToken": "O5Op1iza", "specials": ["ADYEN", "ALIPAY", "CHECKOUT"], "taxJarApiToken": "VQqaNc6x", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'CreatePaymentProviderConfig' test.out

#- 273 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 273 'GetAggregatePaymentProviders' test.out

#- 274 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'U4mCOrwS' \
    --region 'qxPbiq4S' \
    > test.out 2>&1
eval_tap $? 274 'DebugMatchedPaymentProviderConfig' test.out

#- 275 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 275 'GetSpecialPaymentProviders' test.out

#- 276 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "40jgW42V", "region": "FwCC90MN", "sandboxTaxJarApiToken": "I0VAxhg7", "specials": ["CHECKOUT", "ALIPAY", "CHECKOUT"], "taxJarApiToken": "z99VlHjR", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'q8Ct4c91' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'UpdatePaymentProviderConfig' test.out

#- 277 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'pFktrrPr' \
    > test.out 2>&1
eval_tap $? 277 'DeletePaymentProviderConfig' test.out

#- 278 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 278 'GetPaymentTaxConfig' test.out

#- 279 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "J15sdgda", "taxJarApiToken": "MuAfa0Ei", "taxJarEnabled": false, "taxJarProductCodesMapping": {"RtWgGjVm": "PKN4Mm52", "zZ2Yenvt": "fJdV1dBC", "Q4fd9v6b": "KZ4ope9Q"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'UpdatePaymentTaxConfig' test.out

#- 280 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'ywVDXTpX' \
    --end 'fxlxBzUK' \
    --start 'W1kh23vv' \
    > test.out 2>&1
eval_tap $? 280 'SyncPaymentOrders' test.out

#- 281 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'iXDDAH9S' \
    --storeId 'a3IKM7ts' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetRootCategories' test.out

#- 282 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'w57G1lKU' \
    --storeId 'p352LcQT' \
    > test.out 2>&1
eval_tap $? 282 'DownloadCategories' test.out

#- 283 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '25pVpmik' \
    --namespace $AB_NAMESPACE \
    --language '5Rc1kRzo' \
    --storeId 'aEsGcyPh' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetCategory' test.out

#- 284 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'ZsfYGPNn' \
    --namespace $AB_NAMESPACE \
    --language 'Povw2aA7' \
    --storeId 'IFBVJtoN' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetChildCategories' test.out

#- 285 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath '05nDvOVg' \
    --namespace $AB_NAMESPACE \
    --language 'sJHurY8q' \
    --storeId 'zBo5pknA' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetDescendantCategories' test.out

#- 286 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 286 'PublicListCurrencies' test.out

#- 287 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'gnLxYaC1' \
    --region 'fjaPyPML' \
    --storeId 'a0rFpNee' \
    --appId 'VzyVvgui' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetItemByAppId' test.out

#- 288 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --baseAppId 'pTEdTMr0' \
    --categoryPath '1oM7ZXaF' \
    --features 'Tgil1UzO' \
    --includeSubCategoryItem 'true' \
    --itemType 'SUBSCRIPTION' \
    --language 'KlC1jg1u' \
    --limit '82' \
    --offset '11' \
    --region 'T7m4QtE2' \
    --sortBy '["createdAt", "displayOrder", "name:desc"]' \
    --storeId 'Jy2EGbw2' \
    --tags 'exHMuztf' \
    > test.out 2>&1
eval_tap $? 288 'PublicQueryItems' test.out

#- 289 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'H9euaV5N' \
    --region 'njQApl5k' \
    --storeId 'qinFEPMe' \
    --sku 'jc3Wf4W5' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetItemBySku' test.out

#- 290 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'tbqLpxCU' \
    --region 'qEsdetHQ' \
    --storeId 'YJZqh1kX' \
    --itemIds 'Ned94Krz' \
    > test.out 2>&1
eval_tap $? 290 'PublicBulkGetItems' test.out

#- 291 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["kDhzf3Ap", "EMV4ghYn", "rbaSfuaQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicValidateItemPurchaseCondition' test.out

#- 292 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'BUNDLE' \
    --limit '23' \
    --offset '1' \
    --region 'dn71BrD0' \
    --storeId 'wIOg3aPq' \
    --keyword 'loJziOBE' \
    --language 'eAGxVbdX' \
    > test.out 2>&1
eval_tap $? 292 'PublicSearchItems' test.out

#- 293 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'tAgHDVl6' \
    --namespace $AB_NAMESPACE \
    --language 'iiMptLe5' \
    --region 'KcSvbVNc' \
    --storeId 'yEghn7vv' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetApp' test.out

#- 294 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'jQ0cBV7y' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 294 'PublicGetItemDynamicData' test.out

#- 295 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'biaL6iPX' \
    --namespace $AB_NAMESPACE \
    --language 'PE5BpcUZ' \
    --populateBundle 'true' \
    --region '5YbDT8Sq' \
    --storeId 'x7RYsEHY' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetItem' test.out

#- 296 GetPaymentCustomization
eval_tap 0 296 'GetPaymentCustomization # SKIP deprecated' test.out

#- 297 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "f9myju06", "paymentProvider": "ALIPAY", "returnUrl": "271VDIwM", "ui": "4yXkWTQ9", "zipCode": "31SSraMP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicGetPaymentUrl' test.out

#- 298 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'LT4UaBWJ' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetPaymentMethods' test.out

#- 299 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'PHbH7zbC' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetUnpaidPaymentOrder' test.out

#- 300 Pay
# body param: body
echo '{"token": "6dDreaHn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Z9OkpADp' \
    --paymentProvider 'PAYPAL' \
    --zipCode 'oZHR4ZmV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'Pay' test.out

#- 301 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'd5d8cqys' \
    > test.out 2>&1
eval_tap $? 301 'PublicCheckPaymentOrderPaidStatus' test.out

#- 302 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'WXPAY' \
    --region 'ww54MTQV' \
    > test.out 2>&1
eval_tap $? 302 'GetPaymentPublicConfig' test.out

#- 303 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'Bmjc6Yie' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetQRCode' test.out

#- 304 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'tdbhRNny' \
    --foreinginvoice 'koH5rlQt' \
    --invoiceId '1uAwbDEZ' \
    --payload 'QzqPVFit' \
    --redirectResult 'Crrp6AR1' \
    --resultCode 'XnqWzpET' \
    --sessionId 'WpIauswY' \
    --status 'BxUruiBJ' \
    --token 'BblN2Q71' \
    --type 'XWTvF7bE' \
    --userId 'UH8cahEg' \
    --orderNo 'KEAHPZzz' \
    --paymentOrderNo '2uVhYv70' \
    --paymentProvider 'XSOLLA' \
    --returnUrl 'z2FPNldc' \
    > test.out 2>&1
eval_tap $? 304 'PublicNormalizePaymentReturnUrl' test.out

#- 305 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'y3zftmJa' \
    --paymentOrderNo 'fEO2yAU5' \
    --paymentProvider 'XSOLLA' \
    > test.out 2>&1
eval_tap $? 305 'GetPaymentTaxValue' test.out

#- 306 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'h6dpwtFF' \
    > test.out 2>&1
eval_tap $? 306 'GetRewardByCode' test.out

#- 307 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'vl7rSXFK' \
    --limit '20' \
    --offset '32' \
    --sortBy '["rewardCode:asc", "rewardCode", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 307 'QueryRewards1' test.out

#- 308 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'wihb5eu4' \
    > test.out 2>&1
eval_tap $? 308 'GetReward1' test.out

#- 309 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 309 'PublicListStores' test.out

#- 310 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["xbiaOvTI", "Z4TMDZHL", "pkhotccB"]' \
    --itemIds '["JQboNiMi", "B2gbERqG", "dnbYZneP"]' \
    --skus '["yDGZcDCL", "1ReePiTZ", "DyEYLeCM"]' \
    > test.out 2>&1
eval_tap $? 310 'PublicExistsAnyMyActiveEntitlement' test.out

#- 311 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'JQcVuHjm' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 312 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --itemId 'n1JTRJkL' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 313 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --sku 'vWVLzu3J' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 314 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["XQD8cXoN", "rWrLp8NH", "1nnIs5cg"]' \
    --itemIds '["kTtnFh5V", "ZXwSjrNU", "rfxiwZCH"]' \
    --skus '["dH2bbQIp", "xVrw0ttd", "rMz7Dc8E"]' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetEntitlementOwnershipToken' test.out

#- 315 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'Iy544ROO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 315 'PublicGetMyWallet' test.out

#- 316 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "cSjgWsg4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'gbM0Xuwq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'SyncEpicGameDLC' test.out

#- 317 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 9}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'R4h8VcYK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicSyncPsnDlcInventory' test.out

#- 318 SyncSteamDLC
# body param: body
echo '{"appId": "LxmuGU7L", "steamId": "H644Hl2U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId '3uESXpvW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'SyncSteamDLC' test.out

#- 319 SyncXboxDLC
# body param: body
echo '{"xstsToken": "BAVIbsyZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'p5nmtUYQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'SyncXboxDLC' test.out

#- 320 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ZL3jURuF' \
    --appType 'GAME' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'mlprNhS9' \
    --features '["Wve6oOV5", "15Ladtsj", "h2durGFs"]' \
    --itemId '["I1LNxvlL", "k1OmQP4s", "cfgE17Zi"]' \
    --limit '28' \
    --offset '12' \
    > test.out 2>&1
eval_tap $? 320 'PublicQueryUserEntitlements' test.out

#- 321 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'tFcQmMdS' \
    --appId 'XJic4dcp' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetUserAppEntitlementByAppId' test.out

#- 322 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '9sKr8C4F' \
    --limit '65' \
    --offset '18' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 322 'PublicQueryUserEntitlementsByAppType' test.out

#- 323 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'PPNxdg7o' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'vMZwhZ0B' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetUserEntitlementByItemId' test.out

#- 324 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'qvKZyX2s' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku '9c2wQ6Ec' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserEntitlementBySku' test.out

#- 325 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'DPjGRQjJ' \
    --appIds '["1jnNh9ah", "BmNgc18Q", "PmNVcPZf"]' \
    --itemIds '["S9maeTzL", "SG0tAVU5", "mnspwpbk"]' \
    --skus '["MUjYEG2a", "YdHOanNc", "aRPS7mzz"]' \
    > test.out 2>&1
eval_tap $? 325 'PublicExistsAnyUserActiveEntitlement' test.out

#- 326 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'f0BOakn1' \
    --appId 'TRmOevmQ' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 327 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'DHBXbc2n' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId '6LN18ZQt' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 328 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'dhdJQUqA' \
    --ids '["nOcdMyjF", "rpoJkPDn", "8qUhXMsv"]' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 329 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'riuAohic' \
    --entitlementClazz 'CODE' \
    --sku 'HeadnBM0' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 330 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'cu0z8mSS' \
    --namespace $AB_NAMESPACE \
    --userId 'fNWoxepn' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetUserEntitlement' test.out

#- 331 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["ey7HrrwG", "fFLs3thC", "gAskEkW5"], "requestId": "01Qb4E7Q", "useCount": 19}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'YoXbrd04' \
    --namespace $AB_NAMESPACE \
    --userId 'jR6ig4S1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicConsumeUserEntitlement' test.out

#- 332 PublicRedeemCode
# body param: body
echo '{"code": "P81qnXON", "language": "CaFR", "region": "eKcBXN1k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '4OudUGpI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicRedeemCode' test.out

#- 333 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "Mlh_726", "productId": "ob1HuTsR", "receiptData": "n0rvd5gZ", "region": "vFITEU8K", "transactionId": "BkcL1sak"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '6t0xgcH9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicFulfillAppleIAPItem' test.out

#- 334 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "lvletVXo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'STAi4b02' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'SyncEpicGamesInventory' test.out

#- 335 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "UtYe-cihN-044", "orderId": "ULJPPVC9", "packageName": "4RbFTcEf", "productId": "QgmWtqvv", "purchaseTime": 93, "purchaseToken": "tPbeEMOp", "region": "nDtg2I3a"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'L8KBsIjG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PublicFulfillGoogleIAPItem' test.out

#- 336 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "E6DLxU7R", "price": 0.12363890153733759, "productId": "6Ev60hE2", "serviceLabel": 44}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'aeYwfbzc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'PublicReconcilePlayStationStore' test.out

#- 337 SyncStadiaEntitlement
# body param: body
echo '{"appId": "ApLkSlIq", "language": "xT_VWfu", "region": "vSZsqNPj", "stadiaPlayerId": "DpYCgFDK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'cwNQdXp9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'SyncStadiaEntitlement' test.out

#- 338 SyncSteamInventory
# body param: body
echo '{"appId": "CBaADRuX", "currencyCode": "dEr0mufz", "language": "Vd_lSlh", "price": 0.03143656176363163, "productId": "9WGHXn6O", "region": "KtRtut35", "steamId": "YD3uFjD3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'HnN75Lhf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'SyncSteamInventory' test.out

#- 339 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "KGP5AnPp", "language": "pd-YtSk", "region": "x3cP4VRq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'kHH70RxR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'SyncTwitchDropsEntitlement' test.out

#- 340 SyncXboxInventory
# body param: body
echo '{"currencyCode": "JoDkp54D", "price": 0.11488302876456302, "productId": "bUHWLID3", "xstsToken": "uYuzcYiM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId '6iKSftaP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'SyncXboxInventory' test.out

#- 341 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'qlJyXLD1' \
    --itemId '3Sdozdda' \
    --limit '87' \
    --offset '92' \
    --status 'CLOSED' \
    > test.out 2>&1
eval_tap $? 341 'PublicQueryUserOrders' test.out

#- 342 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "HetofJ1M", "discountedPrice": 13, "ext": {"A0gUJ8H2": {}, "HpfU9kM2": {}, "xIiaiVWs": {}}, "itemId": "D2As1hTe", "language": "ZZ-Mejc", "price": 48, "quantity": 58, "region": "4e0DHSpW", "returnUrl": "1flmrSiQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'uMWTeutT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'PublicCreateUserOrder' test.out

#- 343 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'dnZzqAmG' \
    --userId 'zxAXZK5F' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetUserOrder' test.out

#- 344 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'mHbYrEpK' \
    --userId 'nThSiu1t' \
    > test.out 2>&1
eval_tap $? 344 'PublicCancelUserOrder' test.out

#- 345 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'ohi6qGv6' \
    --userId 'WhsmrJNr' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserOrderHistories' test.out

#- 346 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '6CzLx1D5' \
    --userId 'ltZ2eWlj' \
    > test.out 2>&1
eval_tap $? 346 'PublicDownloadUserOrderReceipt' test.out

#- 347 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'SP6BUvvy' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetPaymentAccounts' test.out

#- 348 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'DyL53l1L' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'beb95Xbf' \
    > test.out 2>&1
eval_tap $? 348 'PublicDeletePaymentAccount' test.out

#- 349 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'YTm9gVxy' \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'EecEWXLm' \
    --limit '95' \
    --offset '7' \
    --sku 'CBR0HxcJ' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 349 'PublicQueryUserSubscriptions' test.out

#- 350 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "OY3p0lDD", "itemId": "zXPXtuPv", "language": "RhH-ht", "region": "MXNKup8D", "returnUrl": "RtPF2cCT", "source": "Un88qOxZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'z5w5et4D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicSubscribeSubscription' test.out

#- 351 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'JTdX07WN' \
    --itemId 'i4IzfL21' \
    > test.out 2>&1
eval_tap $? 351 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 352 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'apyPs4tb' \
    --userId '8GpWTR2T' \
    > test.out 2>&1
eval_tap $? 352 'PublicGetUserSubscription' test.out

#- 353 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'gLMACrnC' \
    --userId 'eKIiPMFn' \
    > test.out 2>&1
eval_tap $? 353 'PublicChangeSubscriptionBillingAccount' test.out

#- 354 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "iy5dNkNU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '8FGMgzFs' \
    --userId 'aClPLTat' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicCancelSubscription' test.out

#- 355 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'cbHEgz7s' \
    --userId 'ka1SJBNp' \
    --excludeFree 'false' \
    --limit '51' \
    --offset '87' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetUserSubscriptionBillingHistories' test.out

#- 356 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'Rzysc7dx' \
    --namespace $AB_NAMESPACE \
    --userId '33JcuR6E' \
    > test.out 2>&1
eval_tap $? 356 'PublicGetWallet' test.out

#- 357 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'D6UGVEL1' \
    --namespace $AB_NAMESPACE \
    --userId 'FyF8drs0' \
    --limit '76' \
    --offset '87' \
    > test.out 2>&1
eval_tap $? 357 'PublicListUserWalletTransactions' test.out

#- 358 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate '6fZgYDeh' \
    --baseAppId 'GybEZm5u' \
    --categoryPath 'NJNz7sBC' \
    --features 'XnNaxNSq' \
    --includeSubCategoryItem 'false' \
    --itemStatus 'ACTIVE' \
    --itemType 'SEASON' \
    --limit '54' \
    --offset '11' \
    --region 'iP13MQjW' \
    --sortBy '["updatedAt:desc", "name:asc", "createdAt:desc"]' \
    --storeId '3W1nxLud' \
    --tags 'QYZOjJOb' \
    --targetNamespace '7gvGGvNq' \
    > test.out 2>&1
eval_tap $? 358 'QueryItems1' test.out

#- 359 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'VUxVRqEz' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 359 'ImportStore1' test.out

#- 360 ExportStore1
# body param: body
echo '{"itemIds": ["SNRiI6R0", "8r5V8ABC", "PBUhNHy6"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId '8VOCjKIc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE