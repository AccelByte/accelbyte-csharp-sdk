#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..338"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "b0Cjv4Ax", "appType": "SOFTWARE", "baseAppId": "Ykoppa0V", "boothName": "gFJAhHwT", "boundItemIds": ["b5q010gN"], "categoryPath": "2MQrbpeR", "clazz": "nxTlCTFS", "createdAt": "1990-09-30T00:00:00Z", "description": "bl1a2jXL", "displayOrder": 57, "entitlementType": "DURABLE", "ext": {"WmHJBi9S": {}}, "features": ["oMkSE4eJ"], "images": [{"as": "elwO4KPM", "caption": "ky2h8R2f", "height": 69, "imageUrl": "XoXP8gd7", "smallImageUrl": "JUabYc3G", "width": 77}], "itemId": "bxTlm1fs", "itemIds": ["u6J3C4s5"], "itemQty": {"ppGR9Xco": 46}, "itemType": "BUNDLE", "language": "ewrLfwvz", "listable": true, "localExt": {"4TpbNhKq": {}}, "longDescription": "2xdmgEBe", "maxCount": 30, "maxCountPerUser": 62, "name": "Htf6Zieg", "namespace": "qdEL4fsM", "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 50, "fixedTrialCycles": 87, "graceDays": 95}, "region": "uC1r7UH1", "regionData": [{"currencyCode": "Liu7UQ03", "currencyNamespace": "04McK873", "currencyType": "VIRTUAL", "discountAmount": 87, "discountExpireAt": "1980-05-17T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1973-11-17T00:00:00Z", "discountedPrice": 71, "expireAt": "1988-01-18T00:00:00Z", "price": 42, "purchaseAt": "1980-11-18T00:00:00Z", "trialPrice": 26}], "seasonType": "TIER", "sku": "4jNWGc7C", "stackable": false, "status": "ACTIVE", "tags": ["4wM5Eu3V"], "targetCurrencyCode": "qymsFXpo", "targetItemId": "rMqEDR8E", "targetNamespace": "72XMKfhl", "thumbnailUrl": "6eq2FzU3", "title": "VL3LNmPL", "updatedAt": "1973-01-28T00:00:00Z", "useCount": 28}, "namespace": "CXfabFXz", "order": {"currency": {"currencyCode": "vjLmai7f", "currencySymbol": "PKvE2Z4a", "currencyType": "VIRTUAL", "decimals": 74, "namespace": "bQSWtsyz"}, "ext": {"0mGGyHHF": {}}, "free": false}, "source": "REFERRAL_BONUS"}, "script": "KsXgvSrk", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'gTYVk5iR' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "BE6zJJ1B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'RHrfCHqq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'p2GwPcmz' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "SuY8w9VY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'wBEfRXoZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --name 'fpVFfDwj' \
    --offset '66' \
    --tag 'HCW2g5u8' \
    > test.out 2>&1
eval_tap $? 8 'QueryCampaigns' test.out

#- 9 CreateCampaign
# body param: body
echo '{"description": "z9yrpJdI", "items": [{"extraSubscriptionDays": 46, "itemId": "5vvHS3d6", "itemName": "PKPE27mI", "quantity": 82}], "maxRedeemCountPerCampaignPerUser": 46, "maxRedeemCountPerCode": 19, "maxRedeemCountPerCodePerUser": 38, "maxSaleCount": 74, "name": "q4x0F7Nc", "redeemEnd": "1978-01-21T00:00:00Z", "redeemStart": "1973-03-31T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["lKYu8iCP"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateCampaign' test.out

#- 10 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'nx0s5TzT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'GetCampaign' test.out

#- 11 UpdateCampaign
# body param: body
echo '{"description": "51oV4HTm", "items": [{"extraSubscriptionDays": 17, "itemId": "vmb6tPmC", "itemName": "irkhYvcO", "quantity": 92}], "maxRedeemCountPerCampaignPerUser": 40, "maxRedeemCountPerCode": 5, "maxRedeemCountPerCodePerUser": 19, "maxSaleCount": 83, "name": "WGwPsvjL", "redeemEnd": "1989-08-16T00:00:00Z", "redeemStart": "1975-12-01T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["tbMkpUFH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'T0fL9q9S' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateCampaign' test.out

#- 12 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'MNAUQVoi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'GetCampaignDynamic' test.out

#- 13 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'QtSQC2kN' \
    > test.out 2>&1
eval_tap $? 13 'GetRootCategories' test.out

#- 14 CreateCategory
# body param: body
echo '{"categoryPath": "SsmT0d2a", "localizationDisplayNames": {"BG4zA2zp": "1Ls0bD6d"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'GgwkYgHz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCategory' test.out

#- 15 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'KuI2RJrb' \
    > test.out 2>&1
eval_tap $? 15 'ListCategoriesBasic' test.out

#- 16 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'oP7kfpIl' \
    --namespace $AB_NAMESPACE \
    --storeId 'etXrCK1U' \
    > test.out 2>&1
eval_tap $? 16 'GetCategory' test.out

#- 17 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"VO0jcs7n": "CqsodoTF"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'TcWlaIBJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'AAknU6Ho' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCategory' test.out

#- 18 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'bZgWlaLn' \
    --namespace $AB_NAMESPACE \
    --storeId 'edDfasTc' \
    > test.out 2>&1
eval_tap $? 18 'DeleteCategory' test.out

#- 19 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath '8gr2znWq' \
    --namespace $AB_NAMESPACE \
    --storeId 'D6tIcfI5' \
    > test.out 2>&1
eval_tap $? 19 'GetChildCategories' test.out

#- 20 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'Z4tUNQ7m' \
    --namespace $AB_NAMESPACE \
    --storeId 'QPjCalZg' \
    > test.out 2>&1
eval_tap $? 20 'GetDescendantCategories' test.out

#- 21 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'FVEQyqav' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --batchNo '46' \
    --code 'CvMqVcXs' \
    --limit '81' \
    --offset '32' \
    > test.out 2>&1
eval_tap $? 21 'QueryCodes' test.out

#- 22 CreateCodes
# body param: body
echo '{"quantity": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'z8ZLBsnc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'CreateCodes' test.out

#- 23 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'bRrf6uEd' \
    --namespace $AB_NAMESPACE \
    --batchNo '19' \
    > test.out 2>&1
eval_tap $? 23 'Download' test.out

#- 24 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'Unr04WZN' \
    --namespace $AB_NAMESPACE \
    --batchNo '14' \
    > test.out 2>&1
eval_tap $? 24 'BulkDisableCodes' test.out

#- 25 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'gEGvqKWQ' \
    --namespace $AB_NAMESPACE \
    --batchNo '90' \
    > test.out 2>&1
eval_tap $? 25 'BulkEnableCodes' test.out

#- 26 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'kE65j618' \
    --namespace $AB_NAMESPACE \
    --code '6p0WfsnW' \
    --limit '40' \
    --offset '92' \
    --userId 'PsaRnVdr' \
    > test.out 2>&1
eval_tap $? 26 'QueryRedeemHistory' test.out

#- 27 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'dBA2hXwY' \
    --namespace $AB_NAMESPACE \
    --redeemable 'True' \
    > test.out 2>&1
eval_tap $? 27 'GetCode' test.out

#- 28 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'zZMdlR4c' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 28 'DisableCode' test.out

#- 29 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'L76hnFDg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'EnableCode' test.out

#- 30 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 30 'ListCurrencies' test.out

#- 31 CreateCurrency
# body param: body
echo '{"currencyCode": "ofHdfoSq", "currencySymbol": "DcaFhOc1", "currencyType": "REAL", "decimals": 72, "localizationDescriptions": {"xI8f5ocf": "y4EIxwBi"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'CreateCurrency' test.out

#- 32 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"B90vdgS5": "YpKsdbpi"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'U2UfyMO4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'UpdateCurrency' test.out

#- 33 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'DhL9fBKJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 33 'DeleteCurrency' test.out

#- 34 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'vjBOUn3b' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'GetCurrencyConfig' test.out

#- 35 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'Yf5ouXqk' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'GetCurrencySummary' test.out

#- 36 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetDLCItemConfig' test.out

#- 37 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "biExqT6D", "rewards": [{"currency": {"currencyCode": "k9QFqaAj", "namespace": "hwOI1P04"}, "item": {"itemId": "dMHfTwrx", "itemSku": "BRfMxZrS", "itemType": "fx3V8OXk"}, "quantity": 76, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateDLCItemConfig' test.out

#- 38 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteDLCItemConfig' test.out

#- 39 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'GetPlatformDLCConfig' test.out

#- 40 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "PSN", "platformDlcIdMap": {"7p2SyFDE": "nmYQzehP"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'UpdatePlatformDLCConfig' test.out

#- 41 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'DeletePlatformDLCConfig' test.out

#- 42 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --appType 'GAME' \
    --entitlementClazz 'MEDIA' \
    --entitlementName '12DvvzNN' \
    --itemId '["ZSu5zZVg"]' \
    --limit '100' \
    --offset '28' \
    --userId 'sfd01vaO' \
    > test.out 2>&1
eval_tap $? 42 'QueryEntitlements' test.out

#- 43 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'GweHacvH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetEntitlement' test.out

#- 44 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '87' \
    --offset '94' \
    --status 'SUCCESS' \
    --userId 'B8hos4ya' \
    > test.out 2>&1
eval_tap $? 44 'QueryFulfillmentHistories' test.out

#- 45 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetAppleIAPConfig' test.out

#- 46 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "OBjMxizC", "password": "xx9qTOIK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateAppleIAPConfig' test.out

#- 47 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteAppleIAPConfig' test.out

#- 48 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetEpicGamesIAPConfig' test.out

#- 49 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "lpdrqo2s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateEpicGamesIAPConfig' test.out

#- 50 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteEpicGamesIAPConfig' test.out

#- 51 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetGoogleIAPConfig' test.out

#- 52 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "mD9RPpjO", "serviceAccountId": "WK0k76i1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateGoogleIAPConfig' test.out

#- 53 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteGoogleIAPConfig' test.out

#- 54 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 54 'UpdateGoogleP12File' test.out

#- 55 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetIAPItemConfig' test.out

#- 56 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "g7rYaEuN", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"yPoQ0oHY": "XUQdtIkA"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 56 'UpdateIAPItemConfig' test.out

#- 57 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'DeleteIAPItemConfig' test.out

#- 58 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'GetPlayStationIAPConfig' test.out

#- 59 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "kltd1zQB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 59 'UpdatePlaystationIAPConfig' test.out

#- 60 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'DeletePlaystationIAPConfig' test.out

#- 61 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetStadiaIAPConfig' test.out

#- 62 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteStadiaIAPConfig' test.out

#- 63 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 63 'UpdateStadiaJsonConfigFile' test.out

#- 64 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetSteamIAPConfig' test.out

#- 65 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "zzC6ldKr", "publisherAuthenticationKey": "iI6lTRbc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdateSteamIAPConfig' test.out

#- 66 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeleteSteamIAPConfig' test.out

#- 67 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetTwitchIAPConfig' test.out

#- 68 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "1Z1HJHzl", "clientSecret": "323Ynwf5", "organizationId": "PvGejCDg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdateTwitchIAPConfig' test.out

#- 69 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeleteTwitchIAPConfig' test.out

#- 70 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetXblIAPConfig' test.out

#- 71 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "Ar1pXDcs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateXblIAPConfig' test.out

#- 72 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteXblAPConfig' test.out

#- 73 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'HnobnaYx' \
    > test.out 2>&1
eval_tap $? 73 'UpdateXblBPCertFile' test.out

#- 74 SyncInGameItem
# body param: body
echo '{"categoryPath": "Gh3FovBn", "targetItemId": "r5VUOHGq", "targetNamespace": "EcuJYo3Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'fMDw4PaB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'SyncInGameItem' test.out

#- 75 CreateItem
# body param: body
echo '{"appId": "KsFXorxY", "appType": "DEMO", "baseAppId": "hG5AgHrE", "boothName": "98qQTSXh", "categoryPath": "1W7MnK2i", "clazz": "8Ely255a", "displayOrder": 44, "entitlementType": "DURABLE", "ext": {"ulbNGSAj": {}}, "features": ["eiiANETl"], "images": [{"as": "kncKPmri", "caption": "36MY2aVC", "height": 79, "imageUrl": "UJgcpAYb", "smallImageUrl": "j0fidlWP", "width": 88}], "itemIds": ["AIjaw5HS"], "itemQty": {"yDsQqMUP": 34}, "itemType": "SEASON", "listable": true, "localizations": {"Ud1bmVSM": {"description": "44scgNAZ", "localExt": {"f7a3R9rI": {}}, "longDescription": "VTDDXZ1f", "title": "ahMp688J"}}, "maxCount": 43, "maxCountPerUser": 45, "name": "Q3hbDlcG", "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 61, "fixedTrialCycles": 47, "graceDays": 25}, "regionData": {"VbXDomWy": [{"currencyCode": "rFZZdM00", "currencyNamespace": "sSdUypOv", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1981-09-29T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1972-12-14T00:00:00Z", "discountedPrice": 54, "expireAt": "1992-07-01T00:00:00Z", "price": 62, "purchaseAt": "1980-08-14T00:00:00Z", "trialPrice": 92}]}, "seasonType": "TIER", "sku": "0koUsUcG", "stackable": false, "status": "ACTIVE", "tags": ["tfyuPNb5"], "targetCurrencyCode": "exiRtR1Q", "targetNamespace": "e0mxLnvZ", "thumbnailUrl": "EG2biyKS", "useCount": 43}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'fIsZ5EAD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'CreateItem' test.out

#- 76 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --storeId 'Jp6HXexn' \
    --appId 'HAXYShIg' \
    > test.out 2>&1
eval_tap $? 76 'GetItemByAppId' test.out

#- 77 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --appType 'DEMO' \
    --availableDate 'zx6WCUdw' \
    --baseAppId 'QnivM1tf' \
    --categoryPath 'IoSsKaP5' \
    --features 'KNn0UGr9' \
    --itemType 'SUBSCRIPTION' \
    --limit '94' \
    --offset '0' \
    --region 'tfxBoakH' \
    --sortBy '["displayOrder:desc"]' \
    --storeId 'qz2uOKJV' \
    --tags 'jX7j5MgR' \
    --targetNamespace 'Z3kPmSrN' \
    > test.out 2>&1
eval_tap $? 77 'QueryItems' test.out

#- 78 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --features '["FzJwBceJ"]' \
    > test.out 2>&1
eval_tap $? 78 'ListBasicItemsByFeatures' test.out

#- 79 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --storeId 'iEYQy4Jx' \
    --sku 'BkyXfgwz' \
    > test.out 2>&1
eval_tap $? 79 'GetItemBySku' test.out

#- 80 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --language 'lT2q2EbG' \
    --populateBundle 'False' \
    --region 'dyWe2X8c' \
    --storeId 'Les0TRTA' \
    --sku 'ekrfR30I' \
    > test.out 2>&1
eval_tap $? 80 'GetLocaleItemBySku' test.out

#- 81 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --storeId '6CzcXFcj' \
    --sku 'Rpu7wVEz' \
    > test.out 2>&1
eval_tap $? 81 'GetItemIdBySku' test.out

#- 82 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["bwHvOGqw"]' \
    --storeId 'b7FAI8lx' \
    > test.out 2>&1
eval_tap $? 82 'GetBulkItemIdBySkus' test.out

#- 83 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --language 'oRtwKNHC' \
    --region 'ncWRyVDP' \
    --storeId 'NRFIbOIi' \
    --itemIds '021vVF26' \
    > test.out 2>&1
eval_tap $? 83 'BulkGetLocaleItems' test.out

#- 84 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --limit '61' \
    --offset '73' \
    --storeId 'nKL26vTD' \
    --keyword 'vjjj8aEP' \
    --language 'jDWSwW54' \
    > test.out 2>&1
eval_tap $? 84 'SearchItems' test.out

#- 85 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --limit '67' \
    --offset '91' \
    --sortBy '["createdAt:desc"]' \
    --storeId 'J1jV4EKp' \
    > test.out 2>&1
eval_tap $? 85 'QueryUncategorizedItems' test.out

#- 86 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'pV4DfTxf' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --storeId '3AGrDhoJ' \
    > test.out 2>&1
eval_tap $? 86 'GetItem' test.out

#- 87 UpdateItem
# body param: body
echo '{"appId": "ooH5WNF4", "appType": "DEMO", "baseAppId": "6DELnHRw", "boothName": "igr039B7", "categoryPath": "fw1zHG7K", "clazz": "QTrQeIv8", "displayOrder": 86, "entitlementType": "DURABLE", "ext": {"tNkXpuQ4": {}}, "features": ["g9IiLxJp"], "images": [{"as": "TlIMuKCd", "caption": "At0XTdLL", "height": 80, "imageUrl": "1WSvdw7F", "smallImageUrl": "I8mOSB2r", "width": 43}], "itemIds": ["QkdnYlPH"], "itemQty": {"6J70BXWV": 39}, "itemType": "MEDIA", "listable": true, "localizations": {"ZzUrVRKR": {"description": "tJuZ5W7n", "localExt": {"PrKtUSfl": {}}, "longDescription": "KqC31jYv", "title": "8832yIJU"}}, "maxCount": 27, "maxCountPerUser": 12, "name": "m7GSrElr", "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 51, "fixedTrialCycles": 86, "graceDays": 48}, "regionData": {"G8SZmnOv": [{"currencyCode": "u24EFzSQ", "currencyNamespace": "yIXv2yW4", "currencyType": "REAL", "discountAmount": 0, "discountExpireAt": "1999-03-08T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1994-03-25T00:00:00Z", "discountedPrice": 52, "expireAt": "1975-02-12T00:00:00Z", "price": 27, "purchaseAt": "1975-04-13T00:00:00Z", "trialPrice": 64}]}, "seasonType": "PASS", "sku": "0BjFUSZe", "stackable": true, "status": "ACTIVE", "tags": ["Z5SaUa0U"], "targetCurrencyCode": "xaP0Kwv6", "targetNamespace": "8OsqOUTP", "thumbnailUrl": "Xzelychm", "useCount": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'jLvnOWOk' \
    --namespace $AB_NAMESPACE \
    --storeId '5AekVVmT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 87 'UpdateItem' test.out

#- 88 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'IEG2ppf1' \
    --namespace $AB_NAMESPACE \
    --storeId 'fH3NwfEQ' \
    > test.out 2>&1
eval_tap $? 88 'DeleteItem' test.out

#- 89 AcquireItem
# body param: body
echo '{"count": 20, "orderNo": "dzI8JQzA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'p0rF8gvd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'AcquireItem' test.out

#- 90 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'nF1yMvoX' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --storeId 'QZhvPg7V' \
    > test.out 2>&1
eval_tap $? 90 'GetApp' test.out

#- 91 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "X5rUNWJa", "previewUrl": "q1fjgDyp", "thumbnailUrl": "xO4ufKfU", "type": "video", "url": "mxSk0Ebj", "videoSource": "vimeo"}], "developer": "4dSLx4vs", "forumUrl": "b6rx9Xxs", "genres": ["MassivelyMultiplayer"], "localizations": {"8TJHpdZV": {"announcement": "C6y6b9fQ", "slogan": "pa7b36my"}}, "platformRequirements": {"8LWzMOfn": [{"additionals": "jwsIxM4s", "directXVersion": "9m2qWNvm", "diskSpace": "PPlRULr7", "graphics": "pPFCzbPX", "label": "1wwBznD7", "osVersion": "NLs7fb4s", "processor": "qWUpB4t2", "ram": "ieA8XRPh", "soundCard": "VzktsWib"}]}, "platforms": ["IOS"], "players": ["CrossPlatformMulti"], "primaryGenre": "RPG", "publisher": "KXMWuoFv", "releaseDate": "1997-05-03T00:00:00Z", "websiteUrl": "jBvBzZGO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'hAwcbpyb' \
    --namespace $AB_NAMESPACE \
    --storeId 'Zn4ZE5Om' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateApp' test.out

#- 92 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'bNkHnefZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'WDwi6anY' \
    > test.out 2>&1
eval_tap $? 92 'DisableItem' test.out

#- 93 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'nQ92kVBD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetItemDynamicData' test.out

#- 94 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'kaMy03Bu' \
    --namespace $AB_NAMESPACE \
    --storeId 'l4GW3V0W' \
    > test.out 2>&1
eval_tap $? 94 'EnableItem' test.out

#- 95 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'CbxvTGyc' \
    --itemId 'cHSkFQzg' \
    --namespace $AB_NAMESPACE \
    --storeId 'VR72Dhxb' \
    > test.out 2>&1
eval_tap $? 95 'FeatureItem' test.out

#- 96 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'r4HtKMGr' \
    --itemId '8tnOEeip' \
    --namespace $AB_NAMESPACE \
    --storeId '505iJTzZ' \
    > test.out 2>&1
eval_tap $? 96 'DefeatureItem' test.out

#- 97 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'uksb4hRE' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --language 'Ox3mATUs' \
    --populateBundle 'False' \
    --region '5Tmapkim' \
    --storeId 'opclvfm7' \
    > test.out 2>&1
eval_tap $? 97 'GetLocaleItem' test.out

#- 98 ReturnItem
# body param: body
echo '{"orderNo": "fdu7isKa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'WRcvkLtf' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 98 'ReturnItem' test.out

#- 99 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --name 'GySrACKa' \
    --offset '25' \
    --tag 'WWkDRcuL' \
    > test.out 2>&1
eval_tap $? 99 'QueryKeyGroups' test.out

#- 100 CreateKeyGroup
# body param: body
echo '{"description": "bIpVJnIA", "name": "FpX2SKNm", "status": "ACTIVE", "tags": ["cDRknJor"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'CreateKeyGroup' test.out

#- 101 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'twVqipgp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'GetKeyGroup' test.out

#- 102 UpdateKeyGroup
# body param: body
echo '{"description": "XVyWoDjO", "name": "HrGczaXW", "status": "ACTIVE", "tags": ["pcAHtRkB"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'JXZwQ443' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'UpdateKeyGroup' test.out

#- 103 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'FfWtsTAA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetKeyGroupDynamic' test.out

#- 104 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'gtCnvDp2' \
    --namespace $AB_NAMESPACE \
    --limit '90' \
    --offset '77' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 104 'ListKeys' test.out

#- 105 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'lTcBaljk' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 105 'UploadKeys' test.out

#- 106 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime '3sB4LS44' \
    --limit '14' \
    --offset '97' \
    --orderNos '["ONXuXihq"]' \
    --sortBy 'BVEXSyrZ' \
    --startTime 'KBvGa0Ls' \
    --status 'CHARGEBACK_REVERSED' \
    --withTotal 'False' \
    > test.out 2>&1
eval_tap $? 106 'QueryOrders' test.out

#- 107 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 107 'GetOrderStatistics' test.out

#- 108 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'P3LqrZcS' \
    > test.out 2>&1
eval_tap $? 108 'GetOrder' test.out

#- 109 RefundOrder
# body param: body
echo '{"description": "sGFDDAiS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'jXH3ypQa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'RefundOrder' test.out

#- 110 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'GetPaymentCallbackConfig' test.out

#- 111 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "FPMAjx7e", "privateKey": "dUxN5KMS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'UpdatePaymentCallbackConfig' test.out

#- 112 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'Ls21gdQU' \
    --externalId '0FhAQYQa' \
    --limit '66' \
    --notificationSource 'STRIPE' \
    --notificationType 'AApJtfB0' \
    --offset '98' \
    --paymentOrderNo 't8Zcpuz7' \
    --startDate 'BY3JPVnM' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 112 'QueryPaymentNotifications' test.out

#- 113 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'FxkSaTdI' \
    --limit '79' \
    --offset '70' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 113 'QueryPaymentOrders' test.out

#- 114 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "dRQmMvxB", "currencyNamespace": "jpVFnEgs", "customParameters": {"ovZbx4UF": {}}, "description": "3pYMzeFc", "extOrderNo": "sBLCwhTS", "extUserId": "tBJZGkIS", "itemType": "APP", "language": "hX_QY", "metadata": {"sdpW3XyQ": "QmftmA5H"}, "notifyUrl": "UHioxzVh", "omitNotification": true, "platform": "Hc1rBqAX", "price": 40, "recurringPaymentOrderNo": "d4JQOWZB", "region": "zUvNkxTU", "returnUrl": "qI2XhbYw", "sandbox": true, "sku": "VSXpJb2J", "subscriptionId": "SuHHCRP9", "targetNamespace": "xW9VeYJC", "targetUserId": "DikIapum", "title": "YwbaGfsJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'CreatePaymentOrderByDedicated' test.out

#- 115 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'TgobWG93' \
    > test.out 2>&1
eval_tap $? 115 'ListExtOrderNoByExtTxId' test.out

#- 116 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'dH2MCGvo' \
    > test.out 2>&1
eval_tap $? 116 'GetPaymentOrder' test.out

#- 117 ChargePaymentOrder
# body param: body
echo '{"extTxId": "hrdRx6lV", "paymentMethod": "i7UcTmEw", "paymentProvider": "ALIPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '9mWH3XVf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'ChargePaymentOrder' test.out

#- 118 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "yejgTi2E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '85VnFsoX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'RefundPaymentOrderByDedicated' test.out

#- 119 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 0, "currencyCode": "REa1WpsZ", "notifyType": "CHARGE", "paymentProvider": "WXPAY", "salesTax": 31, "vat": 61}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Pfic39c2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'SimulatePaymentOrderNotification' test.out

#- 120 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'q3a6kRuG' \
    > test.out 2>&1
eval_tap $? 120 'GetPaymentOrderChargeStatus' test.out

#- 121 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 121 'GetPlatformWalletConfig' test.out

#- 122 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["System"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'UpdatePlatformWalletConfig' test.out

#- 123 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 123 'ResetPlatformWalletConfig' test.out

#- 124 CreateReward
# body param: body
echo '{"description": "ZVjAQCkW", "eventTopic": "jE3gJ6Aw", "maxAwarded": 96, "maxAwardedPerUser": 78, "namespaceExpression": "lFHpDCFu", "rewardCode": "t39Jhj3l", "rewardConditions": [{"condition": "mfXJxKJN", "conditionName": "RD3KumRj", "eventName": "k3wZYVb3", "rewardItems": [{"duration": 88, "itemId": "Fssnx4JY", "quantity": 49}]}], "userIdExpression": "1kXakVQo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'CreateReward' test.out

#- 125 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'G01upsR2' \
    --limit '83' \
    --offset '61' \
    --sortBy '["namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 125 'QueryRewards' test.out

#- 126 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'ExportRewards' test.out

#- 127 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'False' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 127 'ImportRewards' test.out

#- 128 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'CZcCX2iL' \
    > test.out 2>&1
eval_tap $? 128 'GetReward' test.out

#- 129 UpdateReward
# body param: body
echo '{"description": "iQGTL6OY", "eventTopic": "jLlXUV78", "maxAwarded": 16, "maxAwardedPerUser": 4, "namespaceExpression": "sQIO0DRa", "rewardCode": "gPXzsBfU", "rewardConditions": [{"condition": "hCoGFgir", "conditionName": "dMLexA5z", "eventName": "JvQd2cOV", "rewardItems": [{"duration": 98, "itemId": "FoiaYaSo", "quantity": 28}]}], "userIdExpression": "g7pSsQhv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'XbGvqRVS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'UpdateReward' test.out

#- 130 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'SwvlRzdN' \
    > test.out 2>&1
eval_tap $? 130 'DeleteReward' test.out

#- 131 CheckEventCondition
# body param: body
echo '{"payload": {"XrfoKVR4": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'HhlPEfSM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'CheckEventCondition' test.out

#- 132 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 132 'ListStores' test.out

#- 133 CreateStore
# body param: body
echo '{"defaultLanguage": "2K29oqfZ", "defaultRegion": "ssibgoTF", "description": "QAmIZiTS", "supportedLanguages": ["stC2yOum"], "supportedRegions": ["zHMhXysw"], "title": "s3Fwnu7O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'CreateStore' test.out

#- 134 ImportStore
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'X9FZvwJ8' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 134 'ImportStore' test.out

#- 135 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'GetPublishedStore' test.out

#- 136 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'DeletePublishedStore' test.out

#- 137 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'GetPublishedStoreBackup' test.out

#- 138 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'RollbackPublishedStore' test.out

#- 139 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'OQFuCH68' \
    > test.out 2>&1
eval_tap $? 139 'GetStore' test.out

#- 140 UpdateStore
# body param: body
echo '{"defaultLanguage": "pTmT632j", "defaultRegion": "8QfhNDTH", "description": "b8lFvBol", "supportedLanguages": ["f9Pdi5BL"], "supportedRegions": ["CsT8g72t"], "title": "hhduZnNj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId '9cRNlTBx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateStore' test.out

#- 141 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'l3nKj6B4' \
    > test.out 2>&1
eval_tap $? 141 'DeleteStore' test.out

#- 142 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'ffgtxiPL' \
    --action 'CREATE' \
    --itemSku 'V0odbfas' \
    --itemType 'INGAMEITEM' \
    --limit '78' \
    --offset '58' \
    --selected 'True' \
    --sortBy '["updatedAt:desc"]' \
    --status 'PUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'ryryOWzh' \
    --updatedAtStart 'hEmSVFhA' \
    > test.out 2>&1
eval_tap $? 142 'QueryChanges' test.out

#- 143 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'lEacAAoA' \
    > test.out 2>&1
eval_tap $? 143 'PublishAll' test.out

#- 144 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'fsuMB4W3' \
    > test.out 2>&1
eval_tap $? 144 'PublishSelected' test.out

#- 145 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'HIcvS0AL' \
    > test.out 2>&1
eval_tap $? 145 'SelectAllRecords' test.out

#- 146 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId '4tYCwCdC' \
    --action 'CREATE' \
    --itemSku 'gcxlbl30' \
    --itemType 'BUNDLE' \
    --type 'STORE' \
    --updatedAtEnd 'HEjMI4Lc' \
    --updatedAtStart 'gkyDsccF' \
    > test.out 2>&1
eval_tap $? 146 'GetStatistic' test.out

#- 147 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'dvzoafML' \
    > test.out 2>&1
eval_tap $? 147 'UnselectAllRecords' test.out

#- 148 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'oraVj5Ri' \
    --namespace $AB_NAMESPACE \
    --storeId 'DHvo7Kep' \
    > test.out 2>&1
eval_tap $? 148 'SelectRecord' test.out

#- 149 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'gBTMRiEd' \
    --namespace $AB_NAMESPACE \
    --storeId 'eeQwLUW0' \
    > test.out 2>&1
eval_tap $? 149 'UnselectRecord' test.out

#- 150 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'VLupH83A' \
    --targetStoreId 'uxFEFRDT' \
    > test.out 2>&1
eval_tap $? 150 'CloneStore' test.out

#- 151 ExportStore
$CLI_EXE \
    --sn platform \
    --op ExportStore \
    --namespace $AB_NAMESPACE \
    --storeId 't2mauywa' \
    > test.out 2>&1
eval_tap $? 151 'ExportStore' test.out

#- 152 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId 'EsPBAM1a' \
    --limit '40' \
    --offset '18' \
    --sku 'NqlmpKGh' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    --userId 'XeZepm7t' \
    > test.out 2>&1
eval_tap $? 152 'QuerySubscriptions' test.out

#- 153 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'F1wKhQ4H' \
    > test.out 2>&1
eval_tap $? 153 'RecurringChargeSubscription' test.out

#- 154 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'jEcagyjZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 154 'GetTicketDynamic' test.out

#- 155 DecreaseTicketSale
# body param: body
echo '{"orderNo": "ITRuoWjI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'CoCN3Nyz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'DecreaseTicketSale' test.out

#- 156 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'AV4niQQV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 156 'GetTicketBoothID' test.out

#- 157 IncreaseTicketSale
# body param: body
echo '{"count": 18, "orderNo": "gDJE12W5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'eoplrOXw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'IncreaseTicketSale' test.out

#- 158 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "ASJ1PtQu", "value": 46}], "steamUserId": "OJQKgor2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'UMJt4EJ9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'UnlockSteamUserAchievement' test.out

#- 159 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "GccYTYxP", "percentComplete": 91}], "serviceConfigId": "gpBNsUvU", "titleId": "KhANjquB", "xboxUserId": "EHOJbaQp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'z0dfiuv0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdateXblUserAchievement' test.out

#- 160 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId '51lkPCaZ' \
    > test.out 2>&1
eval_tap $? 160 'AnonymizeCampaign' test.out

#- 161 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'sjvFvhZd' \
    > test.out 2>&1
eval_tap $? 161 'AnonymizeEntitlement' test.out

#- 162 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'wi1Ti6V2' \
    > test.out 2>&1
eval_tap $? 162 'AnonymizeFulfillment' test.out

#- 163 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'uWuCsB8F' \
    > test.out 2>&1
eval_tap $? 163 'AnonymizeIntegration' test.out

#- 164 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'bVDwhpNC' \
    > test.out 2>&1
eval_tap $? 164 'AnonymizeOrder' test.out

#- 165 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'Ll2bgIc1' \
    > test.out 2>&1
eval_tap $? 165 'AnonymizePayment' test.out

#- 166 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'y49bqpbf' \
    > test.out 2>&1
eval_tap $? 166 'AnonymizeSubscription' test.out

#- 167 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'yytwm6jQ' \
    > test.out 2>&1
eval_tap $? 167 'AnonymizeWallet' test.out

#- 168 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'JpfOIKCe' \
    --activeOnly 'False' \
    --appType 'DLC' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'QRjoyn3b' \
    --itemId '["GyFGwcAy"]' \
    --limit '23' \
    --offset '91' \
    > test.out 2>&1
eval_tap $? 168 'QueryUserEntitlements' test.out

#- 169 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1975-05-12T00:00:00Z", "grantedCode": "PF190sf2", "itemId": "ZwPi5hI4", "itemNamespace": "k3KwV7P8", "language": "TDbr_Jj", "quantity": 58, "region": "D3bAZF4n", "source": "REDEEM_CODE", "startDate": "1981-11-11T00:00:00Z", "storeId": "xISmVGVz"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '9Jxj8weg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'GrantUserEntitlement' test.out

#- 170 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'rDo6OmeK' \
    --activeOnly 'False' \
    --appId 'I9uWOFTW' \
    > test.out 2>&1
eval_tap $? 170 'GetUserAppEntitlementByAppId' test.out

#- 171 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'dRrL6yNm' \
    --activeOnly 'True' \
    --limit '20' \
    --offset '45' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 171 'QueryUserEntitlementsByAppType' test.out

#- 172 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'HSqOByh4' \
    --activeOnly 'False' \
    --entitlementClazz 'APP' \
    --itemId 'kcO6J7jS' \
    > test.out 2>&1
eval_tap $? 172 'GetUserEntitlementByItemId' test.out

#- 173 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'vYd4J5c6' \
    --activeOnly 'False' \
    --entitlementClazz 'MEDIA' \
    --sku 'FnSrfmOb' \
    > test.out 2>&1
eval_tap $? 173 'GetUserEntitlementBySku' test.out

#- 174 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'FTUBRRDG' \
    --appIds '["CRQtMc3a"]' \
    --itemIds '["n8ZoxLwX"]' \
    --skus '["HS1oUzDd"]' \
    > test.out 2>&1
eval_tap $? 174 'ExistsAnyUserActiveEntitlement' test.out

#- 175 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'DcZ0Rj3Y' \
    --itemIds '["M1fz9Cjq"]' \
    > test.out 2>&1
eval_tap $? 175 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 176 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'tqeiyDCK' \
    --appId '7C3u5GcP' \
    > test.out 2>&1
eval_tap $? 176 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 177 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'bmi5KiFD' \
    --entitlementClazz 'CODE' \
    --itemId 'fvR2Wl0i' \
    > test.out 2>&1
eval_tap $? 177 'GetUserEntitlementOwnershipByItemId' test.out

#- 178 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'ShagpvFu' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku '45zsrSpv' \
    > test.out 2>&1
eval_tap $? 178 'GetUserEntitlementOwnershipBySku' test.out

#- 179 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'MLvQw3sP' \
    --entitlementIds 'xFu8LQGQ' \
    > test.out 2>&1
eval_tap $? 179 'RevokeUserEntitlements' test.out

#- 180 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'CAj6O7iv' \
    --namespace $AB_NAMESPACE \
    --userId 'hNIjVT5H' \
    > test.out 2>&1
eval_tap $? 180 'GetUserEntitlement' test.out

#- 181 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1993-12-06T00:00:00Z", "nullFieldList": ["00UKSLWW"], "startDate": "1983-11-18T00:00:00Z", "status": "CONSUMED", "useCount": 23}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'TLwZQZUM' \
    --namespace $AB_NAMESPACE \
    --userId 'aAJ6ZBTH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'UpdateUserEntitlement' test.out

#- 182 ConsumeUserEntitlement
# body param: body
echo '{"useCount": 100}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'jGbVtzsB' \
    --namespace $AB_NAMESPACE \
    --userId 'TCOWEnaL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'ConsumeUserEntitlement' test.out

#- 183 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'zHuYKrr8' \
    --namespace $AB_NAMESPACE \
    --userId '9z0RkL93' \
    > test.out 2>&1
eval_tap $? 183 'DisableUserEntitlement' test.out

#- 184 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId '2B7thDQ3' \
    --namespace $AB_NAMESPACE \
    --userId 'hfVnPK8i' \
    > test.out 2>&1
eval_tap $? 184 'EnableUserEntitlement' test.out

#- 185 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'K8cdZPnX' \
    --namespace $AB_NAMESPACE \
    --userId 'wGS9fAlx' \
    > test.out 2>&1
eval_tap $? 185 'GetUserEntitlementHistories' test.out

#- 186 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'tjeZUrqm' \
    --namespace $AB_NAMESPACE \
    --userId 'Ic7El44M' \
    > test.out 2>&1
eval_tap $? 186 'RevokeUserEntitlement' test.out

#- 187 FulfillItem
# body param: body
echo '{"duration": 60, "endDate": "1984-06-21T00:00:00Z", "itemId": "aPTwwJrG", "itemSku": "06MtcF7t", "language": "8DQxcoQB", "order": {"currency": {"currencyCode": "TWMc41xD", "currencySymbol": "mUjkXi2L", "currencyType": "REAL", "decimals": 21, "namespace": "ALGxw6qg"}, "ext": {"vIJBe6rD": {}}, "free": false}, "orderNo": "FNzsyQVq", "origin": "Playstation", "quantity": 89, "region": "gtpUVddL", "source": "PURCHASE", "startDate": "1997-01-14T00:00:00Z", "storeId": "TLmuKlGH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'Zdwwo66H' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'FulfillItem' test.out

#- 188 RedeemCode
# body param: body
echo '{"code": "6QOfYztH", "language": "Vr_nwwu-rX", "region": "ni0Kq9Zl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '2b7ChMCx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'RedeemCode' test.out

#- 189 FulfillRewards
# body param: body
echo '{"origin": "Epic", "rewards": [{"currency": {"currencyCode": "6xdzl2OY", "namespace": "VRJNC7Er"}, "item": {"itemId": "uVITunbx", "itemSku": "aOWNrMkf", "itemType": "ALUDrR6M"}, "quantity": 42, "type": "ITEM"}], "source": "PROMOTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId '84TNQYCZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'FulfillRewards' test.out

#- 190 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'IpKFvpQO' \
    --endTime 'jjkIYAQE' \
    --limit '4' \
    --offset '46' \
    --productId 'GPTkn2NJ' \
    --startTime '9gHmB0vf' \
    --status 'FAILED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 190 'QueryUserIAPOrders' test.out

#- 191 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'tGYAEziS' \
    > test.out 2>&1
eval_tap $? 191 'QueryAllUserIAPOrders' test.out

#- 192 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "Hr", "productId": "ZmByxlmW", "region": "BLyhgZsJ", "type": "PLAYSTATION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'onMpOQ9J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'MockFulfillIAPItem' test.out

#- 193 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'mh8wwQ28' \
    --itemId 'fmxMFN8d' \
    --limit '10' \
    --offset '6' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 193 'QueryUserOrders' test.out

#- 194 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "AHphhby7", "discountedPrice": 15, "ext": {"GbKeIkY4": {}}, "itemId": "Fc8atJ3J", "language": "4gbk9YdE", "platform": "Nintendo", "price": 28, "quantity": 86, "region": "jjnkhwq7", "returnUrl": "5VqZH8HU", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '92UFWFC8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminCreateUserOrder' test.out

#- 195 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'oFuU2OFJ' \
    --itemId '6w1Hbioi' \
    > test.out 2>&1
eval_tap $? 195 'CountOfPurchasedItem' test.out

#- 196 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'iaZ8Uc2r' \
    --userId 'WpzX2mgo' \
    > test.out 2>&1
eval_tap $? 196 'GetUserOrder' test.out

#- 197 UpdateUserOrderStatus
# body param: body
echo '{"status": "FULFILL_FAILED", "statusReason": "hruuvEzp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'yRiFs63b' \
    --userId '4Pru2pWi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'UpdateUserOrderStatus' test.out

#- 198 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'VBYjKI1Z' \
    --userId 'lcKXBXcP' \
    > test.out 2>&1
eval_tap $? 198 'FulfillUserOrder' test.out

#- 199 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'AsjW7zBx' \
    --userId 'pVc8svji' \
    > test.out 2>&1
eval_tap $? 199 'GetUserOrderGrant' test.out

#- 200 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'FtRe8k7a' \
    --userId 'mplfhuHr' \
    > test.out 2>&1
eval_tap $? 200 'GetUserOrderHistories' test.out

#- 201 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "opVxIvBj"}, "authorisedTime": "1980-09-01T00:00:00Z", "chargebackReversedTime": "1985-05-01T00:00:00Z", "chargebackTime": "1997-05-31T00:00:00Z", "chargedTime": "1971-11-30T00:00:00Z", "createdTime": "1978-07-12T00:00:00Z", "currency": {"currencyCode": "4Fl6UoVx", "currencySymbol": "gHJLBm3b", "currencyType": "REAL", "decimals": 86, "namespace": "vSUyOgyu"}, "customParameters": {"9dhxaofT": {}}, "extOrderNo": "jMYGTMXy", "extTxId": "4ypcIN4u", "extUserId": "UIzvUI5b", "issuedAt": "1997-06-21T00:00:00Z", "metadata": {"xS2yBTD8": "uNeauLeX"}, "namespace": "NgQBnXZk", "nonceStr": "Q06LUEgy", "paymentMethod": "yiBeJARF", "paymentMethodFee": 94, "paymentOrderNo": "bUvLNtDd", "paymentProvider": "WXPAY", "paymentProviderFee": 26, "paymentStationUrl": "tKI6vd3Q", "price": 6, "refundedTime": "1993-09-24T00:00:00Z", "salesTax": 66, "sandbox": true, "sku": "vosR9Nk0", "status": "NOTIFICATION_OF_CHARGEBACK", "statusReason": "JYXMRcQg", "subscriptionId": "1LwgzWRu", "subtotalPrice": 32, "targetNamespace": "2i8ntDdF", "targetUserId": "SOEIqFse", "tax": 28, "totalPrice": 5, "totalTax": 34, "txEndTime": "1979-03-20T00:00:00Z", "type": "WTbUayIP", "userId": "8oO0z1Vf", "vat": 11}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'DHyFM7T2' \
    --userId 'H6g4jbxD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'ProcessUserOrderNotification' test.out

#- 202 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'DxngEqsA' \
    --userId 'bWEfTc2n' \
    > test.out 2>&1
eval_tap $? 202 'DownloadUserOrderReceipt' test.out

#- 203 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "SU2SijyS", "currencyNamespace": "pnqX01uD", "customParameters": {"kQ1tv3iM": {}}, "description": "MW8aqVbw", "extOrderNo": "ArhGSaFx", "extUserId": "yAsPnfbH", "itemType": "COINS", "language": "vEDm-pQ", "metadata": {"xtNo76oP": "RuvxUGNJ"}, "notifyUrl": "vDRuWXBz", "omitNotification": true, "platform": "WeusWdEJ", "price": 27, "recurringPaymentOrderNo": "qhXgmVQH", "region": "oZNPy0Wq", "returnUrl": "u4qtxTyr", "sandbox": true, "sku": "NhypNLpo", "subscriptionId": "rjcAKSuv", "title": "gVjdXMn2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'juyP3WX3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'CreateUserPaymentOrder' test.out

#- 204 RefundUserPaymentOrder
# body param: body
echo '{"description": "u1OLRUrZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '6vwIqGno' \
    --userId 'qXXAZd7b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'RefundUserPaymentOrder' test.out

#- 205 ApplyUserRedemption
# body param: body
echo '{"code": "vO6Xg2xx", "orderNo": "5vZXC9Ys"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'EXEe9iC3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 205 'ApplyUserRedemption' test.out

#- 206 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'Hp95AtWE' \
    --chargeStatus 'CHARGED' \
    --itemId 'rEipXZfo' \
    --limit '5' \
    --offset '57' \
    --sku 'S9nGM6fY' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 206 'QueryUserSubscriptions' test.out

#- 207 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId '77M1VVgH' \
    --excludeSystem 'False' \
    --limit '75' \
    --offset '11' \
    --subscriptionId 'lEPUxHPh' \
    > test.out 2>&1
eval_tap $? 207 'GetUserSubscriptionActivities' test.out

#- 208 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 60, "itemId": "4YwCRBGA", "language": "R8TtZlDI", "reason": "jOfYlF5j", "region": "ISj4wwqL", "source": "pFnnNydT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'cPOtfkEy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'PlatformSubscribeSubscription' test.out

#- 209 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'Lh6l74AQ' \
    --itemId 'Y5ulxH0l' \
    > test.out 2>&1
eval_tap $? 209 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 210 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ioSoooPh' \
    --userId 'Q9xlLMe7' \
    > test.out 2>&1
eval_tap $? 210 'GetUserSubscription' test.out

#- 211 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ma8Qc9aG' \
    --userId 'N5UJPLch' \
    > test.out 2>&1
eval_tap $? 211 'DeleteUserSubscription' test.out

#- 212 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "ivOQdByk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '3mWQ93Bx' \
    --userId 'bP1VP8rK' \
    --force 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'CancelSubscription' test.out

#- 213 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 94, "reason": "wTTGSX5r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'G8ymO7ml' \
    --userId '7SCwM6RZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'GrantDaysToSubscription' test.out

#- 214 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NerJQroY' \
    --userId 'UkvHx2dA' \
    --excludeFree 'False' \
    --limit '63' \
    --offset '62' \
    > test.out 2>&1
eval_tap $? 214 'GetUserSubscriptionBillingHistories' test.out

#- 215 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "0BBGwZ7X"}, "authorisedTime": "1995-02-24T00:00:00Z", "chargebackReversedTime": "1972-04-28T00:00:00Z", "chargebackTime": "1996-07-01T00:00:00Z", "chargedTime": "1997-08-05T00:00:00Z", "createdTime": "1978-07-08T00:00:00Z", "currency": {"currencyCode": "SCFsBbZL", "currencySymbol": "16L2P8eN", "currencyType": "REAL", "decimals": 81, "namespace": "i4OPQ8ZE"}, "customParameters": {"V8XzBcAn": {}}, "extOrderNo": "iVuoW6wP", "extTxId": "QlP1zgkx", "extUserId": "v25ZHaR8", "issuedAt": "1981-05-28T00:00:00Z", "metadata": {"MhIfogRB": "8XeZhAM4"}, "namespace": "MAL57riU", "nonceStr": "2QbQFRCX", "paymentMethod": "EWG8Sxt5", "paymentMethodFee": 43, "paymentOrderNo": "tTkIWbiH", "paymentProvider": "XSOLLA", "paymentProviderFee": 59, "paymentStationUrl": "L4yzTnQv", "price": 9, "refundedTime": "1983-11-11T00:00:00Z", "salesTax": 21, "sandbox": true, "sku": "vERGP7fm", "status": "DELETED", "statusReason": "d8aJkJYG", "subscriptionId": "Kf4wBCsC", "subtotalPrice": 75, "targetNamespace": "rfH6V3fT", "targetUserId": "Rar0UZS9", "tax": 44, "totalPrice": 59, "totalTax": 34, "txEndTime": "1974-01-25T00:00:00Z", "type": "YvyfGQvB", "userId": "MJGa0RWF", "vat": 17}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'lSDbJxY0' \
    --userId 'YR9wXVRz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'ProcessUserSubscriptionNotification' test.out

#- 216 AcquireUserTicket
# body param: body
echo '{"count": 1, "orderNo": "yquoA8CG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'DmAN0yX8' \
    --namespace $AB_NAMESPACE \
    --userId 'xu01b0bU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'AcquireUserTicket' test.out

#- 217 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'qDheu9id' \
    > test.out 2>&1
eval_tap $? 217 'QueryUserCurrencyWallets' test.out

#- 218 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'RvQ8V1Ca' \
    --namespace $AB_NAMESPACE \
    --userId 'eT74VP6K' \
    --limit '32' \
    --offset '31' \
    > test.out 2>&1
eval_tap $? 218 'ListUserCurrencyTransactions' test.out

#- 219 CheckWallet
eval_tap 0 219 'CheckWallet # SKIP deprecated' test.out

#- 220 CreditUserWallet
# body param: body
echo '{"amount": 70, "expireAt": "1985-08-16T00:00:00Z", "origin": "System", "reason": "QXzjGEvv", "source": "OTHER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode '9VR6Qqao' \
    --namespace $AB_NAMESPACE \
    --userId 'AupKSo0R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'CreditUserWallet' test.out

#- 221 PayWithUserWallet
# body param: body
echo '{"amount": 67, "walletPlatform": "Steam"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'XML3VcaD' \
    --namespace $AB_NAMESPACE \
    --userId 'WEzPCi2t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'PayWithUserWallet' test.out

#- 222 GetUserWallet
eval_tap 0 222 'GetUserWallet # SKIP deprecated' test.out

#- 223 DebitUserWallet
eval_tap 0 223 'DebitUserWallet # SKIP deprecated' test.out

#- 224 DisableUserWallet
eval_tap 0 224 'DisableUserWallet # SKIP deprecated' test.out

#- 225 EnableUserWallet
eval_tap 0 225 'EnableUserWallet # SKIP deprecated' test.out

#- 226 ListUserWalletTransactions
eval_tap 0 226 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 227 QueryWallets
eval_tap 0 227 'QueryWallets # SKIP deprecated' test.out

#- 228 GetWallet
eval_tap 0 228 'GetWallet # SKIP deprecated' test.out

#- 229 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'WPzhrjLF' \
    --end 'LLuGlXIn' \
    --start 'Vkn9ojnp' \
    > test.out 2>&1
eval_tap $? 229 'SyncOrders' test.out

#- 230 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["piU7rYU0"], "apiKey": "98E1JzPm", "authoriseAsCapture": false, "blockedPaymentMethods": ["RkeYX8U7"], "clientKey": "1w09mTap", "dropInSettings": "7y90X88q", "liveEndpointUrlPrefix": "bd2vRMUm", "merchantAccount": "qoGBqBax", "notificationHmacKey": "LbpDekuI", "notificationPassword": "zTODQZkN", "notificationUsername": "g9XscMV2", "returnUrl": "DnOo9Pao", "settings": "BSJJGgg8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'TestAdyenConfig' test.out

#- 231 TestAliPayConfig
# body param: body
echo '{"appId": "pTUehn6I", "privateKey": "zqXsteu4", "publicKey": "pU694ex0", "returnUrl": "bxtkvXIr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'TestAliPayConfig' test.out

#- 232 TestCheckoutConfig
# body param: body
echo '{"publicKey": "CB52HlTe", "secretKey": "FVmpXnrW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'TestCheckoutConfig' test.out

#- 233 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'Cij8S73s' \
    --region 'QDNy12G1' \
    > test.out 2>&1
eval_tap $? 233 'DebugMatchedPaymentMerchantConfig' test.out

#- 234 TestPayPalConfig
# body param: body
echo '{"clientID": "PiTJwxV0", "clientSecret": "rwMM7HsM", "returnUrl": "JnUBZ6Gy", "webHookId": "hfcrddeI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'TestPayPalConfig' test.out

#- 235 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["xQMImB13"], "publishableKey": "f1obTKrw", "secretKey": "FXC2Op2y", "webhookSecret": "XEIOAJh6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'TestStripeConfig' test.out

#- 236 TestWxPayConfig
# body param: body
echo '{"appId": "HWdmibqD", "key": "eNic565h", "mchid": "vy1VY236", "returnUrl": "5rUHkxww"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'TestWxPayConfig' test.out

#- 237 TestXsollaConfig
# body param: body
echo '{"apiKey": "pNwFJyOB", "flowCompletionUrl": "elglT04u", "merchantId": 86, "projectId": 24, "projectSecretKey": "AeOhTeib"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'TestXsollaConfig' test.out

#- 238 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'Sq4H7xDe' \
    > test.out 2>&1
eval_tap $? 238 'GetPaymentMerchantConfig' test.out

#- 239 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["1jh7clQu"], "apiKey": "lgjFzOE2", "authoriseAsCapture": true, "blockedPaymentMethods": ["PDGQYK5u"], "clientKey": "GsklKEj2", "dropInSettings": "cImuLS8r", "liveEndpointUrlPrefix": "rBfOaAEN", "merchantAccount": "FCnYbIQI", "notificationHmacKey": "DkTf41ag", "notificationPassword": "7CX8oWPu", "notificationUsername": "t7xraYva", "returnUrl": "eaiep5aT", "settings": "dbjoDWOL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id '2gmjDt1r' \
    --sandbox 'True' \
    --validate 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'UpdateAdyenConfig' test.out

#- 240 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'T1Axwhim' \
    --sandbox 'False' \
    > test.out 2>&1
eval_tap $? 240 'TestAdyenConfigById' test.out

#- 241 UpdateAliPayConfig
# body param: body
echo '{"appId": "RomBcUU8", "privateKey": "6i9DJulX", "publicKey": "4aR8w6Q4", "returnUrl": "PkLkwcg4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'w7voonsT' \
    --sandbox 'True' \
    --validate 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'UpdateAliPayConfig' test.out

#- 242 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'BECnfwi6' \
    --sandbox 'False' \
    > test.out 2>&1
eval_tap $? 242 'TestAliPayConfigById' test.out

#- 243 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "gqpB4WwK", "secretKey": "tAnQQIfN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'q8tkbUlx' \
    --sandbox 'True' \
    --validate 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'UpdateCheckoutConfig' test.out

#- 244 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'BvJ3twKU' \
    --sandbox 'True' \
    > test.out 2>&1
eval_tap $? 244 'TestCheckoutConfigById' test.out

#- 245 UpdatePayPalConfig
# body param: body
echo '{"clientID": "8SglSHPD", "clientSecret": "OBkao6x7", "returnUrl": "WrSKfNZd", "webHookId": "IGHiCd3v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 's48k8GmW' \
    --sandbox 'False' \
    --validate 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'UpdatePayPalConfig' test.out

#- 246 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'cnbkNsJB' \
    --sandbox 'False' \
    > test.out 2>&1
eval_tap $? 246 'TestPayPalConfigById' test.out

#- 247 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["FAZF2oC4"], "publishableKey": "m8qmGI4g", "secretKey": "3x7VkgLX", "webhookSecret": "zEcgKncl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'UWy7ZJN4' \
    --sandbox 'True' \
    --validate 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'UpdateStripeConfig' test.out

#- 248 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'W2qMkZ2m' \
    --sandbox 'True' \
    > test.out 2>&1
eval_tap $? 248 'TestStripeConfigById' test.out

#- 249 UpdateWxPayConfig
# body param: body
echo '{"appId": "rvZisCVM", "key": "qlZ6nzcA", "mchid": "05v44SCr", "returnUrl": "WkKPTz20"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'CUuON0ql' \
    --validate 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'UpdateWxPayConfig' test.out

#- 250 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '6dAFv7zS' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 250 'UpdateWxPayConfigCert' test.out

#- 251 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'ESiUAVN1' \
    > test.out 2>&1
eval_tap $? 251 'TestWxPayConfigById' test.out

#- 252 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "CwX4ZMRG", "flowCompletionUrl": "0Gf1rfLs", "merchantId": 65, "projectId": 93, "projectSecretKey": "n4LXB9YV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id '8FW73Yeg' \
    --validate 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'UpdateXsollaConfig' test.out

#- 253 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'NcJMlA9w' \
    > test.out 2>&1
eval_tap $? 253 'TestXsollaConfigById' test.out

#- 254 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "SMALL", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'jC8VO4sg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'UpdateXsollaUIConfig' test.out

#- 255 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '29' \
    --namespace_ 'RFcoG9Ev' \
    --offset '12' \
    --region 'BLbT6LIz' \
    > test.out 2>&1
eval_tap $? 255 'QueryPaymentProviderConfig' test.out

#- 256 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "mery1q7R", "region": "u0EPX2t5", "sandboxTaxJarApiToken": "Kl8G5Sm4", "specials": ["WALLET"], "taxJarApiToken": "YJ1bv2f6", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'CreatePaymentProviderConfig' test.out

#- 257 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 257 'GetAggregatePaymentProviders' test.out

#- 258 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'f7yzKmiS' \
    --region 'oLdcKYGi' \
    > test.out 2>&1
eval_tap $? 258 'DebugMatchedPaymentProviderConfig' test.out

#- 259 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 259 'GetSpecialPaymentProviders' test.out

#- 260 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "2Fob7nz3", "region": "cBYTpN9B", "sandboxTaxJarApiToken": "OiieVeCI", "specials": ["PAYPAL"], "taxJarApiToken": "60mv88QY", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'YRXnDSOY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'UpdatePaymentProviderConfig' test.out

#- 261 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'xR9xEcI7' \
    > test.out 2>&1
eval_tap $? 261 'DeletePaymentProviderConfig' test.out

#- 262 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 262 'GetPaymentTaxConfig' test.out

#- 263 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "ktZgyQ1P", "taxJarApiToken": "cqgZnaDT", "taxJarEnabled": false, "taxJarProductCodesMapping": {"4WwM8q1m": "Zu6XW6by"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdatePaymentTaxConfig' test.out

#- 264 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey '2jUjXr2Y' \
    --end 'yM5ho1nP' \
    --start 'rfkWpDz1' \
    > test.out 2>&1
eval_tap $? 264 'SyncPaymentOrders' test.out

#- 265 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'gbwdSWEG' \
    --storeId 'D0k52Xld' \
    > test.out 2>&1
eval_tap $? 265 'PublicGetRootCategories' test.out

#- 266 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'o1D8HlEu' \
    --storeId 'QQfYbi9H' \
    > test.out 2>&1
eval_tap $? 266 'DownloadCategories' test.out

#- 267 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath '9dFCgRp7' \
    --namespace $AB_NAMESPACE \
    --language 'uEwOPWrK' \
    --storeId 'nASgjfbB' \
    > test.out 2>&1
eval_tap $? 267 'PublicGetCategory' test.out

#- 268 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath '7kWEU28x' \
    --namespace $AB_NAMESPACE \
    --language 'X2fI68kS' \
    --storeId 'yNp7CBCt' \
    > test.out 2>&1
eval_tap $? 268 'PublicGetChildCategories' test.out

#- 269 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'gT4nlpO5' \
    --namespace $AB_NAMESPACE \
    --language 'aE9RqY1z' \
    --storeId 'hD25toAL' \
    > test.out 2>&1
eval_tap $? 269 'PublicGetDescendantCategories' test.out

#- 270 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 270 'PublicListCurrencies' test.out

#- 271 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'g3D6sySW' \
    --region 'jGkmDxeI' \
    --storeId 'vWSM0L1e' \
    --appId 'tOsAoob5' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetItemByAppId' test.out

#- 272 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --baseAppId 'BHH7TRU7' \
    --categoryPath 'DSv4Bl1J' \
    --features 'LViUnCf9' \
    --itemType 'APP' \
    --language 'r0AwrYym' \
    --limit '42' \
    --offset '3' \
    --region 'yVtbyXgl' \
    --sortBy '["displayOrder:desc"]' \
    --storeId '0dtEcGJ3' \
    --tags 'VfsszE68' \
    > test.out 2>&1
eval_tap $? 272 'PublicQueryItems' test.out

#- 273 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'nyiKBCyl' \
    --region 'IgcjAQgJ' \
    --storeId 'S7ut6fWj' \
    --sku '0bjzR1qk' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetItemBySku' test.out

#- 274 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language '50WTJSWM' \
    --region 'GCWOqgPc' \
    --storeId 'QEu7XP4K' \
    --itemIds '3h5qA8vx' \
    > test.out 2>&1
eval_tap $? 274 'PublicBulkGetItems' test.out

#- 275 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --limit '96' \
    --offset '68' \
    --region 'wznTWhLb' \
    --storeId 'xZXBhedB' \
    --keyword 'iiMbLGcB' \
    --language 'OF8UnezJ' \
    > test.out 2>&1
eval_tap $? 275 'PublicSearchItems' test.out

#- 276 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'G2VBYcf3' \
    --namespace $AB_NAMESPACE \
    --language '9AKgvjNN' \
    --region 'HD855hjp' \
    --storeId 'm3ss60uZ' \
    > test.out 2>&1
eval_tap $? 276 'PublicGetApp' test.out

#- 277 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'FamFRGic' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 277 'PublicGetItemDynamicData' test.out

#- 278 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'FWBzTUoh' \
    --namespace $AB_NAMESPACE \
    --language 'tqJUSbFz' \
    --populateBundle 'True' \
    --region 'VZmKweEC' \
    --storeId 'uD3sZMCE' \
    > test.out 2>&1
eval_tap $? 278 'PublicGetItem' test.out

#- 279 GetPaymentCustomization
eval_tap 0 279 'GetPaymentCustomization # SKIP deprecated' test.out

#- 280 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "8dESgloJ", "paymentProvider": "PAYPAL", "returnUrl": "M6Je8rVs", "ui": "rMiXvUIC", "zipCode": "pXJUBosG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'PublicGetPaymentUrl' test.out

#- 281 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'v2E5Ud8R' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetPaymentMethods' test.out

#- 282 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '40Via1HQ' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetUnpaidPaymentOrder' test.out

#- 283 Pay
# body param: body
echo '{"token": "GyTJx6eE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '61z1d23W' \
    --paymentProvider 'ALIPAY' \
    --zipCode '1zfjnOgb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'Pay' test.out

#- 284 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'DHxFOx68' \
    > test.out 2>&1
eval_tap $? 284 'PublicCheckPaymentOrderPaidStatus' test.out

#- 285 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'True' \
    --paymentProvider 'WXPAY' \
    --region 'OBVv5za3' \
    > test.out 2>&1
eval_tap $? 285 'GetPaymentPublicConfig' test.out

#- 286 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'wZKkkBXO' \
    > test.out 2>&1
eval_tap $? 286 'PublicGetQRCode' test.out

#- 287 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'pjG8DMYI' \
    --foreinginvoice '7aCPVOXy' \
    --invoiceId 'HlMa4Gck' \
    --payload 'ktYeg98g' \
    --redirectResult 'TKGckRJx' \
    --resultCode 'WrHhn4YO' \
    --sessionId 'K6MnfeVl' \
    --status 'dbEnLYWO' \
    --token 'zyOB0kZo' \
    --type 'eJIWku1P' \
    --userId 'BeZzonuQ' \
    --orderNo 'zxLODS8n' \
    --paymentOrderNo 'TAouPR62' \
    --paymentProvider 'ADYEN' \
    --returnUrl 'ekOPk51s' \
    > test.out 2>&1
eval_tap $? 287 'PublicNormalizePaymentReturnUrl' test.out

#- 288 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'Yy0IuLJP' \
    --paymentOrderNo 'PNclQgSB' \
    --paymentProvider 'STRIPE' \
    > test.out 2>&1
eval_tap $? 288 'GetPaymentTaxValue' test.out

#- 289 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'jtMtdov0' \
    > test.out 2>&1
eval_tap $? 289 'GetRewardByCode' test.out

#- 290 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'qluMZwWF' \
    --limit '84' \
    --offset '4' \
    --sortBy '["rewardCode"]' \
    > test.out 2>&1
eval_tap $? 290 'QueryRewards1' test.out

#- 291 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'AVMLvAvz' \
    > test.out 2>&1
eval_tap $? 291 'GetReward1' test.out

#- 292 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 292 'PublicListStores' test.out

#- 293 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["LjQSHwPO"]' \
    --itemIds '["48On3gCb"]' \
    --skus '["MHOoAwKR"]' \
    > test.out 2>&1
eval_tap $? 293 'PublicExistsAnyMyActiveEntitlement' test.out

#- 294 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'yMNCSpYG' \
    > test.out 2>&1
eval_tap $? 294 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 295 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'QUXcWQhh' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 296 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --sku 'GhyoneUW' \
    > test.out 2>&1
eval_tap $? 296 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 297 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["bDyvutnd"]' \
    --itemIds '["gicjax7O"]' \
    --skus '["NnA3dvJO"]' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetEntitlementOwnershipToken' test.out

#- 298 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'ocdyisYR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 298 'PublicGetMyWallet' test.out

#- 299 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 48}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'hrcsZyvb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'PublicSyncPsnDlcInventory' test.out

#- 300 SyncSteamDLC
# body param: body
echo '{"appId": "LMUUSwl9", "steamId": "luLGR0MZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'KdWXP7dH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'SyncSteamDLC' test.out

#- 301 SyncXboxDLC
# body param: body
echo '{"xstsToken": "vzRSx4xn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'EwseCMo1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'SyncXboxDLC' test.out

#- 302 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'qFRoqmJU' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'APP' \
    --entitlementName 'elYwV2DR' \
    --itemId '["ZfSBnT2V"]' \
    --limit '23' \
    --offset '49' \
    > test.out 2>&1
eval_tap $? 302 'PublicQueryUserEntitlements' test.out

#- 303 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'q5VWu4pL' \
    --appId 'xrqfJr2p' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetUserAppEntitlementByAppId' test.out

#- 304 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'N0CiQ7Ty' \
    --limit '83' \
    --offset '16' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 304 'PublicQueryUserEntitlementsByAppType' test.out

#- 305 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'gSnJZPie' \
    --entitlementClazz 'MEDIA' \
    --itemId 'S6Ozt9Y7' \
    > test.out 2>&1
eval_tap $? 305 'PublicGetUserEntitlementByItemId' test.out

#- 306 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '6Cmi2xN6' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'CLHLyxhc' \
    > test.out 2>&1
eval_tap $? 306 'PublicGetUserEntitlementBySku' test.out

#- 307 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'eLzV7iL4' \
    --appIds '["mwueWqEF"]' \
    --itemIds '["ljovjiFd"]' \
    --skus '["s9U3Q4FL"]' \
    > test.out 2>&1
eval_tap $? 307 'PublicExistsAnyUserActiveEntitlement' test.out

#- 308 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '9FKhfTM3' \
    --appId 'X1GHB92J' \
    > test.out 2>&1
eval_tap $? 308 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 309 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'FCpi6PSp' \
    --entitlementClazz 'MEDIA' \
    --itemId 'vcTnMqT7' \
    > test.out 2>&1
eval_tap $? 309 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 310 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'mELucAFT' \
    --entitlementClazz 'APP' \
    --sku 'fjIfXCWz' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 311 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'atjGv4UV' \
    --namespace $AB_NAMESPACE \
    --userId 'j072ERId' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetUserEntitlement' test.out

#- 312 PublicConsumeUserEntitlement
# body param: body
echo '{"useCount": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'jnEdKEgY' \
    --namespace $AB_NAMESPACE \
    --userId 'rC08a2ge' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'PublicConsumeUserEntitlement' test.out

#- 313 PublicRedeemCode
# body param: body
echo '{"code": "fHyULfaL", "language": "Tb_AwRm", "region": "1NWlgliW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'dgwwepIg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'PublicRedeemCode' test.out

#- 314 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "kagN", "productId": "gWxTfKeg", "receiptData": "xR0U2CEx", "region": "NlVZ2RGv", "transactionId": "Vo9j2WLb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '2CSAgZdA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'PublicFulfillAppleIAPItem' test.out

#- 315 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "FdnSJJFX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'EhP7ZQQT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'SyncEpicGamesInventory' test.out

#- 316 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "cf", "orderId": "jvE58hP4", "packageName": "ov9Lr3Ek", "productId": "TSLIshqS", "purchaseTime": 2, "purchaseToken": "4fuvTw4H", "region": "9hubYPI2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'vvuiybjU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicFulfillGoogleIAPItem' test.out

#- 317 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "8tFnbsYz", "price": 0.539063625341197, "productId": "stOus7bR", "serviceLabel": 31}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId '1CdG3Hbl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicReconcilePlayStationStore' test.out

#- 318 SyncStadiaEntitlement
# body param: body
echo '{"appId": "u98YQD4O", "language": "Xgz-jKHD", "region": "hy686121", "stadiaPlayerId": "Qm42I9Dc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'ReFeyLtN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'SyncStadiaEntitlement' test.out

#- 319 SyncSteamInventory
# body param: body
echo '{"appId": "Ot0SmGDz", "currencyCode": "o1dDuZYx", "language": "wGIW", "price": 0.9604161915205426, "productId": "YwlqrDfy", "region": "jHcFVCYs", "steamId": "ZcY5pJfX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'aaUskhgM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'SyncSteamInventory' test.out

#- 320 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "Zlpxmjm9", "language": "lL_qRDr_812", "region": "KgovowPU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'tF6DLevf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'SyncTwitchDropsEntitlement' test.out

#- 321 SyncXboxInventory
# body param: body
echo '{"currencyCode": "nhWi0LSL", "price": 0.6405495057520656, "productId": "WcjaWpr1", "xstsToken": "gk6Cb5tA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'BJO3orPf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'SyncXboxInventory' test.out

#- 322 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'izPDwbyf' \
    --itemId 'oC6otIQ8' \
    --limit '53' \
    --offset '44' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 322 'PublicQueryUserOrders' test.out

#- 323 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "4gUVBsp0", "discountedPrice": 71, "ext": {"n3BcxN6V": {}}, "itemId": "mGGpzEMv", "language": "Nj_ZqTt_701", "price": 13, "quantity": 73, "region": "DyEroox1", "returnUrl": "ZepOAJRl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Cb7x8BbV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'PublicCreateUserOrder' test.out

#- 324 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '5fQSmVlj' \
    --userId 'KVLc1aVQ' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserOrder' test.out

#- 325 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Nlsm8f2X' \
    --userId 'RjKcW95A' \
    > test.out 2>&1
eval_tap $? 325 'PublicCancelUserOrder' test.out

#- 326 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'O0RLEUgk' \
    --userId 'XqKmlhkX' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserOrderHistories' test.out

#- 327 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'oXwCzgeV' \
    --userId 'yEsm1LKd' \
    > test.out 2>&1
eval_tap $? 327 'PublicDownloadUserOrderReceipt' test.out

#- 328 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'HKmMU5zt' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetPaymentAccounts' test.out

#- 329 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id '6FeqZnSr' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId '4rqOPOg3' \
    > test.out 2>&1
eval_tap $? 329 'PublicDeletePaymentAccount' test.out

#- 330 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'FZjVLWNb' \
    --chargeStatus 'CHARGED' \
    --itemId '1nKpOxBy' \
    --limit '93' \
    --offset '21' \
    --sku 'f4msE7dg' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 330 'PublicQueryUserSubscriptions' test.out

#- 331 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "fALBMEdR", "itemId": "lqlvMdQr", "language": "zh-cs", "region": "SyoE1ObL", "returnUrl": "OfM19ncR", "source": "ZWDIWAas"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'GpSWJ3MI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicSubscribeSubscription' test.out

#- 332 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'W0bFS2wm' \
    --itemId '9bFwyWbe' \
    > test.out 2>&1
eval_tap $? 332 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 333 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'QfxZb1IC' \
    --userId 'FrJpxGTx' \
    > test.out 2>&1
eval_tap $? 333 'PublicGetUserSubscription' test.out

#- 334 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'QpaGHUDB' \
    --userId 'Silu6pzr' \
    > test.out 2>&1
eval_tap $? 334 'PublicChangeSubscriptionBillingAccount' test.out

#- 335 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "hye5k7fQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qYIwnCAY' \
    --userId '16gxZM4A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PublicCancelSubscription' test.out

#- 336 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '4T1m3OTA' \
    --userId 'myJccW7N' \
    --excludeFree 'False' \
    --limit '93' \
    --offset '90' \
    > test.out 2>&1
eval_tap $? 336 'PublicGetUserSubscriptionBillingHistories' test.out

#- 337 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'UzwMTb6Q' \
    --namespace $AB_NAMESPACE \
    --userId 'sAhBNZME' \
    > test.out 2>&1
eval_tap $? 337 'PublicGetWallet' test.out

#- 338 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'v7VJxIB5' \
    --namespace $AB_NAMESPACE \
    --userId 'XdnejUGz' \
    --limit '59' \
    --offset '85' \
    > test.out 2>&1
eval_tap $? 338 'PublicListUserWalletTransactions' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE