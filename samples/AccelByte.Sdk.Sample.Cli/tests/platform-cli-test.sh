#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..360"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "NiUVPpoO", "appType": "SOFTWARE", "baseAppId": "YhU6lKGb", "boothName": "4tCHK8jR", "boundItemIds": ["kcNQXlbj", "b1gH6x0l", "QjtW3QR5"], "categoryPath": "mVod8VA5", "clazz": "tk4iovlN", "createdAt": "1994-02-10T00:00:00Z", "description": "t5KVD9tl", "displayOrder": 77, "entitlementType": "CONSUMABLE", "ext": {"FO505hq3": {}, "Yb9Vkvpf": {}, "rVL8AtO3": {}}, "features": ["o4Vj13AG", "ZdPlvyET", "w3lkEote"], "fresh": true, "images": [{"as": "S2XUDDz5", "caption": "R8MTKzNP", "height": 37, "imageUrl": "SS1R7IRa", "smallImageUrl": "iad6Dv5j", "width": 17}, {"as": "58HrOYge", "caption": "BvyEMi9z", "height": 75, "imageUrl": "tub3M82M", "smallImageUrl": "QNyd1Mtd", "width": 74}, {"as": "Q6MHZnv2", "caption": "iWjy3ZsM", "height": 32, "imageUrl": "verd3qHZ", "smallImageUrl": "mDHm46ys", "width": 6}], "itemId": "LFAIrGt8", "itemIds": ["O3i5KTmo", "QBtgWlUo", "FLKnSMVZ"], "itemQty": {"O04c2mbE": 37, "kbSrw5Nq": 36, "GvngKYG2": 49}, "itemType": "INGAMEITEM", "language": "qMTNHywL", "listable": true, "localExt": {"40ONduLN": {}, "5z5VtkXY": {}, "jUz10G22": {}}, "longDescription": "Vg4VK77n", "maxCount": 4, "maxCountPerUser": 23, "name": "0XC1peXe", "namespace": "W6rtdVqG", "optionBoxConfig": {"boxItems": [{"count": 73, "itemId": "kd1LCA3g", "itemSku": "6YdwiJrQ"}, {"count": 35, "itemId": "R0Nuwqpu", "itemSku": "Lx4asbxs"}, {"count": 26, "itemId": "cHyfF5wO", "itemSku": "4XlOISVk"}]}, "purchasable": false, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 0, "comparison": "isGreaterThan", "name": "89WFcMEW", "predicateType": "SeasonPassPredicate", "value": "uMjLtGx4", "values": ["xaKJbWeb", "gEY0t2hb", "WEhP6xSc"]}, {"anyOf": 87, "comparison": "excludes", "name": "14SAL469", "predicateType": "SeasonTierPredicate", "value": "9MgUFbKI", "values": ["sAc31A2p", "KOHulMCV", "0Q5KekgN"]}, {"anyOf": 50, "comparison": "isGreaterThan", "name": "2dZXZNcQ", "predicateType": "EntitlementPredicate", "value": "SxLob2iJ", "values": ["A1iBLd4F", "14Falbll", "zVgHdcKA"]}]}, {"operator": "and", "predicates": [{"anyOf": 8, "comparison": "includes", "name": "MvMW4Plf", "predicateType": "SeasonTierPredicate", "value": "lmPD9N7J", "values": ["0IniJzrp", "fxNxRfcS", "ghM0tIYS"]}, {"anyOf": 97, "comparison": "isLessThan", "name": "b41LA5PT", "predicateType": "EntitlementPredicate", "value": "ryANUGd1", "values": ["v5VHEFvd", "PrdKjovj", "ij9isxAX"]}, {"anyOf": 86, "comparison": "isLessThanOrEqual", "name": "5GxEWk83", "predicateType": "SeasonPassPredicate", "value": "xm9F93fz", "values": ["bNJ7jnc7", "tA0CMaXF", "RMkwPFb9"]}]}, {"operator": "and", "predicates": [{"anyOf": 92, "comparison": "is", "name": "zwyMyx40", "predicateType": "EntitlementPredicate", "value": "c4nACQNj", "values": ["oInToKRs", "OAJruAxd", "Xod4U0M9"]}, {"anyOf": 33, "comparison": "is", "name": "3T4DoEnc", "predicateType": "SeasonTierPredicate", "value": "G1sBeYxj", "values": ["YfFPcK4o", "uwzuBO9p", "DNw4AMIc"]}, {"anyOf": 79, "comparison": "isNot", "name": "ozFRMNgW", "predicateType": "SeasonTierPredicate", "value": "V2WBoutp", "values": ["eMzcp3yi", "5KzMCcjT", "eu4gWb6g"]}]}]}, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 49, "fixedTrialCycles": 82, "graceDays": 31}, "region": "AoJwROdH", "regionData": [{"currencyCode": "BkCmiX2v", "currencyNamespace": "7FX7zMII", "currencyType": "REAL", "discountAmount": 34, "discountExpireAt": "1973-07-02T00:00:00Z", "discountPercentage": 0, "discountPurchaseAt": "1998-11-07T00:00:00Z", "discountedPrice": 49, "expireAt": "1994-12-06T00:00:00Z", "price": 18, "purchaseAt": "1978-06-20T00:00:00Z", "trialPrice": 36}, {"currencyCode": "vo4XTMtj", "currencyNamespace": "IZZFT2w1", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1987-08-10T00:00:00Z", "discountPercentage": 9, "discountPurchaseAt": "1999-04-09T00:00:00Z", "discountedPrice": 34, "expireAt": "1993-12-15T00:00:00Z", "price": 83, "purchaseAt": "1994-02-11T00:00:00Z", "trialPrice": 78}, {"currencyCode": "bAHdnM2x", "currencyNamespace": "wX8GnEnM", "currencyType": "REAL", "discountAmount": 99, "discountExpireAt": "1993-01-03T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1997-05-05T00:00:00Z", "discountedPrice": 6, "expireAt": "1988-05-21T00:00:00Z", "price": 51, "purchaseAt": "1978-02-10T00:00:00Z", "trialPrice": 66}], "seasonType": "PASS", "sku": "okavtRvQ", "stackable": false, "status": "ACTIVE", "tags": ["JWLgr4xd", "2JCxnX4O", "G01uEYFr"], "targetCurrencyCode": "QxtXP4HR", "targetItemId": "IBwsPCEc", "targetNamespace": "wmBdTfLZ", "thumbnailUrl": "0aoYgIJj", "title": "BmkmPczC", "updatedAt": "1983-05-03T00:00:00Z", "useCount": 53}, "namespace": "8OyfV76C", "order": {"currency": {"currencyCode": "HaG4NgxS", "currencySymbol": "7G82npYv", "currencyType": "REAL", "decimals": 56, "namespace": "atVBT2Zn"}, "ext": {"TA5vit60": {}, "JXH4mddR": {}, "7ucfvoIY": {}}, "free": true}, "source": "REFERRAL_BONUS"}, "script": "uyQkoIwN", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id '8MjTz5yY' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "12RAVmY6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'ipLp4dlm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id '798QcTb9' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "FXxzgF2g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'mkV3TmlZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "fMjA0pvc", "dryRun": true, "fulfillmentUrl": "kgyxe3fQ", "itemType": "OPTIONBOX", "purchaseConditionUrl": "3FK16Axn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'cRfhzXGK' \
    --itemType 'APP' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'fXPelCbu' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "Azf12aSF", "dryRun": true, "fulfillmentUrl": "Tm4nLjxE", "purchaseConditionUrl": "MEHu0X7H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id '5oRmmxsB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'i1O43PJ3' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '58' \
    --name 'zbweChwx' \
    --offset '87' \
    --tag 'OdxvDaIf' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "BTfwAPHF", "items": [{"extraSubscriptionDays": 28, "itemId": "8cDG80qa", "itemName": "1eliMt86", "quantity": 53}, {"extraSubscriptionDays": 13, "itemId": "XyhpR46Y", "itemName": "UIvwbfv3", "quantity": 82}, {"extraSubscriptionDays": 21, "itemId": "iFSRxfav", "itemName": "Zz1Qeqam", "quantity": 4}], "maxRedeemCountPerCampaignPerUser": 5, "maxRedeemCountPerCode": 18, "maxRedeemCountPerCodePerUser": 75, "maxSaleCount": 70, "name": "ZBevpona", "redeemEnd": "1972-12-11T00:00:00Z", "redeemStart": "1986-11-03T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["juY3xdgd", "ITyYz7gr", "PLd73W65"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'ybvnJcm8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "ne4hWbII", "items": [{"extraSubscriptionDays": 93, "itemId": "cYJ2Gpv3", "itemName": "YQC5Glap", "quantity": 54}, {"extraSubscriptionDays": 100, "itemId": "aS0mYB2F", "itemName": "l15HeDLZ", "quantity": 42}, {"extraSubscriptionDays": 62, "itemId": "YP64Towq", "itemName": "GruHpz66", "quantity": 62}], "maxRedeemCountPerCampaignPerUser": 19, "maxRedeemCountPerCode": 29, "maxRedeemCountPerCodePerUser": 28, "maxSaleCount": 77, "name": "yY8A3wrl", "redeemEnd": "1999-09-25T00:00:00Z", "redeemStart": "1975-07-20T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["41COf2ub", "tUZqkBCO", "Q7mT2vLR"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'QrvDYm3Y' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'iRN4Fynj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'LYzL2Yq6' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "dOVv9hCu", "localizationDisplayNames": {"ZzHYR9Kj": "BEPfMExo", "9SEByfuO": "Pmya6tUJ", "bWofnXG1": "cbLJEI90"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId '2RndbnpS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'Qr85bW8z' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'dGCaV1GN' \
    --namespace $AB_NAMESPACE \
    --storeId 'YIh5SHlY' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"wxNFr3f1": "5WlkW69X", "tDf7mKZe": "NwQZUJLF", "0IIBQ99K": "1I7yfhMM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'xtVU6tL7' \
    --namespace $AB_NAMESPACE \
    --storeId 't9uEzm6z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'WKxMAbBR' \
    --namespace $AB_NAMESPACE \
    --storeId 'SdPxE9w5' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'clvqkYo5' \
    --namespace $AB_NAMESPACE \
    --storeId 'q5eEaCfh' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'HmwW8rQq' \
    --namespace $AB_NAMESPACE \
    --storeId 'gS6XQzg4' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId '5aE22oXg' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '100' \
    --code 'Myd5C67H' \
    --limit '75' \
    --offset '6' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 17}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'wIegPgxD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'eEHfE6EC' \
    --namespace $AB_NAMESPACE \
    --batchNo '76' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'ZsGHyDEk' \
    --namespace $AB_NAMESPACE \
    --batchNo '81' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'FOp1uk3t' \
    --namespace $AB_NAMESPACE \
    --batchNo '50' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'i3jn1Xm3' \
    --namespace $AB_NAMESPACE \
    --code 'OZRxzLzr' \
    --limit '95' \
    --offset '2' \
    --userId 'b53zjvR4' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'nWwHNR2m' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '5O8SIZEg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'V9sVWCkM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "vp1T7oHx", "currencySymbol": "cbsxWFIV", "currencyType": "VIRTUAL", "decimals": 5, "localizationDescriptions": {"B4fr0KGm": "kQK1mJDh", "qICEMWKK": "LC7IPxBS", "JtPo57sy": "SzbiWFS7"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"5wio9zoY": "XfFqoXaG", "zTDWWYcI": "fxpjpqTl", "sfQpy33Q": "TEbf7RvZ"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'Z0JeAgCS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'bHgpsZZf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'BPa6uksu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'EbrkvZA6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "hyG7ziqo", "rewards": [{"currency": {"currencyCode": "aT3JlSUt", "namespace": "w7sg1yeY"}, "item": {"itemId": "3xxkD1Uw", "itemSku": "Jj93RVlS", "itemType": "2pWno8LO"}, "quantity": 14, "type": "ITEM"}, {"currency": {"currencyCode": "e2DLXCxf", "namespace": "fDOEPsY9"}, "item": {"itemId": "c5YmDCBT", "itemSku": "oZOugeJ9", "itemType": "p7HnpDUH"}, "quantity": 42, "type": "CURRENCY"}, {"currency": {"currencyCode": "H0HIXHHI", "namespace": "dSlPgTBp"}, "item": {"itemId": "SYJDQjkX", "itemSku": "gZ7SQOhC", "itemType": "akBfMR27"}, "quantity": 66, "type": "CURRENCY"}]}, {"id": "TPYpwVMU", "rewards": [{"currency": {"currencyCode": "Jz2pndKD", "namespace": "78m6u85q"}, "item": {"itemId": "dTkEDdx9", "itemSku": "RMZNMOqb", "itemType": "MafKJQ1g"}, "quantity": 93, "type": "ITEM"}, {"currency": {"currencyCode": "1dEsTaph", "namespace": "B5snFwDL"}, "item": {"itemId": "Ta5YTAOS", "itemSku": "9rEDI6jj", "itemType": "2OwUdFdo"}, "quantity": 91, "type": "CURRENCY"}, {"currency": {"currencyCode": "b9G3C0Od", "namespace": "4OryvYq7"}, "item": {"itemId": "GxFkDZlZ", "itemSku": "D5VKsMoF", "itemType": "PLaazVzy"}, "quantity": 44, "type": "CURRENCY"}]}, {"id": "OtHazxe6", "rewards": [{"currency": {"currencyCode": "Fd9S3aH0", "namespace": "Kh5CI66p"}, "item": {"itemId": "rui5CSpF", "itemSku": "xCReHCnd", "itemType": "caeAsOSk"}, "quantity": 74, "type": "CURRENCY"}, {"currency": {"currencyCode": "TlFPuSai", "namespace": "o4X41GKz"}, "item": {"itemId": "D94TEG6W", "itemSku": "LT7na6mP", "itemType": "6IrENyqd"}, "quantity": 57, "type": "CURRENCY"}, {"currency": {"currencyCode": "KLT7jRg6", "namespace": "WZBBLKv6"}, "item": {"itemId": "IZtTC1Lr", "itemSku": "eXPQrnd1", "itemType": "JtT9paho"}, "quantity": 24, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"NbeppGWj": "v7AoSrbZ", "Wy2OZhhB": "SG50Mauu", "3m7Nsdjy": "woRe2yQD"}}, {"platform": "XBOX", "platformDlcIdMap": {"GHStIKlv": "GL8yf5Nq", "5nOhzf4A": "2Pg5d3YU", "yP0CimWQ": "dXaFUZk2"}}, {"platform": "XBOX", "platformDlcIdMap": {"b9CQvGE3": "OCHmawhz", "DS8kETUv": "f0ZYFFCR", "ZS4WInjz": "Cnh34qGs"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'EeNdgq9Z' \
    --itemId '["XSOwHGZP", "7DHgVjAR", "3WTmRnVi"]' \
    --limit '72' \
    --offset '47' \
    --userId 'N2DgxBqb' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'OuMF1vQr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '60' \
    --offset '25' \
    --status 'SUCCESS' \
    --userId 'bw729d6G' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "pdQM9otw", "password": "i4hau3M3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "2oDIU3P2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "0yqwFbsi", "serviceAccountId": "iC9h5iTD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "4bklxPpc", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"xgXOw88E": "JVqBuav6", "PKvy3GFT": "LrjpRYDx", "SN7uXVfR": "JSg8l9vQ"}}, {"itemIdentity": "AODotVmX", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"84JKZ4ou": "DPiv5BSh", "wm2fgpOj": "OTjUUUyF", "c1EqNBEk": "X5NA5IwK"}}, {"itemIdentity": "Pz7zeviG", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"RGpWU218": "aWOerpPj", "7Fv62uFS": "ejvy9yAd", "4JbINxiv": "a7p56xpc"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "gljqIjzs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "5mfoGakF", "publisherAuthenticationKey": "h0vkiuK8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "1c4emLC4", "clientSecret": "tuVKRuBP", "organizationId": "MP8FQiaQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "I6bPVyzc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password '4Bz3vKt6' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'Vw12W4pZ' \
    --itemId 'bRSrP8y7' \
    --itemType 'MEDIA' \
    --endTime '37N3Vis3' \
    --startTime 'p0v5iorZ' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature '0wjJ2HS3' \
    --itemId 'rujHSOKQ' \
    --itemType 'COINS' \
    --endTime 'pxojRMNR' \
    --startTime 'zc6EESv2' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "GyIiJ76m", "targetItemId": "lqPidgL1", "targetNamespace": "KHvTLUiN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '9UI0i7yU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "nlMpSYyt", "appType": "DEMO", "baseAppId": "q6aNvEnB", "boothName": "oAaO6Bys", "categoryPath": "bVuUdMX3", "clazz": "NoVMlJ1l", "displayOrder": 71, "entitlementType": "DURABLE", "ext": {"lFJodT6G": {}, "tBxounx4": {}, "JtKvqdQ8": {}}, "features": ["hELmr4pw", "tuJD81rZ", "7TCEs3k7"], "images": [{"as": "jm7uhFaQ", "caption": "qCDDdyu1", "height": 98, "imageUrl": "FoJVFV8J", "smallImageUrl": "gcrTMppt", "width": 76}, {"as": "ZbDrrcNY", "caption": "zdIgt8UO", "height": 18, "imageUrl": "sSEgvJr1", "smallImageUrl": "yBdJBWoU", "width": 72}, {"as": "NYm0CS6I", "caption": "brep6H0P", "height": 88, "imageUrl": "25sxw6kR", "smallImageUrl": "iqt8gZfA", "width": 35}], "itemIds": ["ugE5mNAs", "w5nNTmQE", "5N2tgiUC"], "itemQty": {"oYyFa4vN": 84, "FNIjM6U7": 13, "o7iXKejI": 4}, "itemType": "SEASON", "listable": true, "localizations": {"C7VSejXe": {"description": "SW4WNgIz", "localExt": {"G6xJGR7l": {}, "PggFn9ju": {}, "l83V8n34": {}}, "longDescription": "UdNNvVtg", "title": "aCmQgf1I"}, "0O68v0sn": {"description": "yd7r0zhE", "localExt": {"MBZom2Cy": {}, "q75KL8oQ": {}, "L3V3x9m9": {}}, "longDescription": "1WdXl6lh", "title": "nfKWeWRq"}, "nHIchy3q": {"description": "zkcZ75SE", "localExt": {"S2XUQsSO": {}, "1AZOXpai": {}, "4grjpZe6": {}}, "longDescription": "MIGbTKar", "title": "l8QiVV3J"}}, "maxCount": 71, "maxCountPerUser": 82, "name": "1Mp1TWyG", "optionBoxConfig": {"boxItems": [{"count": 100, "itemId": "fJcsbUk3", "itemSku": "YeFE1A96"}, {"count": 83, "itemId": "cZ6wTJl0", "itemSku": "MTmOwLcE"}, {"count": 92, "itemId": "wHtj4AFW", "itemSku": "53KL7cxQ"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 21, "fixedTrialCycles": 20, "graceDays": 12}, "regionData": {"FGXtEVKa": [{"currencyCode": "VWgQalCP", "currencyNamespace": "F0DrxdqL", "currencyType": "VIRTUAL", "discountAmount": 97, "discountExpireAt": "1977-08-12T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1994-01-06T00:00:00Z", "discountedPrice": 47, "expireAt": "1972-04-25T00:00:00Z", "price": 81, "purchaseAt": "1987-11-16T00:00:00Z", "trialPrice": 58}, {"currencyCode": "BY9w5On1", "currencyNamespace": "ut2fxKK4", "currencyType": "VIRTUAL", "discountAmount": 37, "discountExpireAt": "1978-12-23T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1993-12-01T00:00:00Z", "discountedPrice": 78, "expireAt": "1987-12-08T00:00:00Z", "price": 58, "purchaseAt": "1995-04-28T00:00:00Z", "trialPrice": 34}, {"currencyCode": "IAKkSW75", "currencyNamespace": "JeB6ntAC", "currencyType": "REAL", "discountAmount": 15, "discountExpireAt": "1990-05-30T00:00:00Z", "discountPercentage": 28, "discountPurchaseAt": "1981-03-04T00:00:00Z", "discountedPrice": 24, "expireAt": "1980-05-21T00:00:00Z", "price": 40, "purchaseAt": "1989-12-04T00:00:00Z", "trialPrice": 82}], "IykktXKr": [{"currencyCode": "VrxlkYQu", "currencyNamespace": "CQXQ4aQQ", "currencyType": "REAL", "discountAmount": 43, "discountExpireAt": "1977-10-08T00:00:00Z", "discountPercentage": 61, "discountPurchaseAt": "1998-04-16T00:00:00Z", "discountedPrice": 36, "expireAt": "1982-06-30T00:00:00Z", "price": 89, "purchaseAt": "1979-05-10T00:00:00Z", "trialPrice": 70}, {"currencyCode": "ZtX4lob3", "currencyNamespace": "49w7RFCJ", "currencyType": "REAL", "discountAmount": 41, "discountExpireAt": "1999-10-15T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1989-01-13T00:00:00Z", "discountedPrice": 66, "expireAt": "1991-07-21T00:00:00Z", "price": 26, "purchaseAt": "1988-11-09T00:00:00Z", "trialPrice": 78}, {"currencyCode": "MHG4nF8A", "currencyNamespace": "WNegl1fH", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1977-05-14T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1977-06-28T00:00:00Z", "discountedPrice": 21, "expireAt": "1973-10-30T00:00:00Z", "price": 28, "purchaseAt": "1972-10-16T00:00:00Z", "trialPrice": 19}], "MxFb0mue": [{"currencyCode": "jzZUD6Jv", "currencyNamespace": "kulN3Vd6", "currencyType": "REAL", "discountAmount": 10, "discountExpireAt": "1999-02-20T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1996-12-21T00:00:00Z", "discountedPrice": 97, "expireAt": "1972-03-22T00:00:00Z", "price": 64, "purchaseAt": "1973-05-12T00:00:00Z", "trialPrice": 52}, {"currencyCode": "m1UFtibE", "currencyNamespace": "xRokw8HP", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1987-01-04T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1974-02-04T00:00:00Z", "discountedPrice": 34, "expireAt": "1992-07-21T00:00:00Z", "price": 96, "purchaseAt": "1972-04-13T00:00:00Z", "trialPrice": 28}, {"currencyCode": "eLUUJjSY", "currencyNamespace": "JhAHv4tS", "currencyType": "REAL", "discountAmount": 33, "discountExpireAt": "1994-09-07T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1976-05-08T00:00:00Z", "discountedPrice": 64, "expireAt": "1974-12-07T00:00:00Z", "price": 39, "purchaseAt": "1998-05-05T00:00:00Z", "trialPrice": 63}]}, "seasonType": "TIER", "sku": "4Rh2xaju", "stackable": false, "status": "INACTIVE", "tags": ["YnfffOhz", "Odm57MHN", "p1Eyfcsc"], "targetCurrencyCode": "ouzfdRlT", "targetNamespace": "0hBY1EcV", "thumbnailUrl": "a6uK4haz", "useCount": 10}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'K34kqUAH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '2feGxBIZ' \
    --appId 'f6qt5WLk' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --availableDate 'UPlk2jEv' \
    --baseAppId 'Vdj5jjRm' \
    --categoryPath '8UI0ZpsZ' \
    --features 'iYd0QkEs' \
    --includeSubCategoryItem 'false' \
    --itemType 'BUNDLE' \
    --limit '99' \
    --offset '38' \
    --region 'tQ1saCTM' \
    --sortBy '["displayOrder", "displayOrder:desc", "createdAt:asc"]' \
    --storeId 'aCvh7MRQ' \
    --tags 'gkTPOobR' \
    --targetNamespace 'MXkdxXwJ' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["blhhTEyW", "5yHX5ih4", "IwyJpRwG"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'uwm3qBsQ' \
    --sku '25gVXUyL' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language '7ibbzVCK' \
    --populateBundle 'true' \
    --region 'mqpVdKlc' \
    --storeId '9E05W7mF' \
    --sku '7pTidOat' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'IuPy2fdf' \
    --sku '8tPMTh5a' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["WvxB1KBV", "l4zb7OOz", "sihIevwk"]' \
    --storeId 'en9qm80d' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'sUOGlnTh' \
    --region 'WvFvGB6F' \
    --storeId 'Usj9ZjqT' \
    --itemIds 'y3u55NYY' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["uQTQjLxD", "3CEc1Z2d", "BWn3SGs2"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'nDQkFVfo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'BUNDLE' \
    --limit '96' \
    --offset '63' \
    --sortBy 'GkESP5R6' \
    --storeId 'c74XC3IO' \
    --keyword 'VyVDMb2k' \
    --language 'CtFzkrnN' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '98' \
    --offset '89' \
    --sortBy '["updatedAt:desc", "displayOrder", "name:asc"]' \
    --storeId 'kbTh0QFb' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'B18MdeoV' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'c5NNoiaT' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "dDFbdgzU", "appType": "SOFTWARE", "baseAppId": "kNVejfPn", "boothName": "dbkdSXFb", "categoryPath": "fu62kwM1", "clazz": "3bGy51Ey", "displayOrder": 22, "entitlementType": "CONSUMABLE", "ext": {"iKub0PKQ": {}, "hD591E3d": {}, "uEX3v1f6": {}}, "features": ["loBA9liy", "HMtmfbEE", "662JYacO"], "images": [{"as": "Scp5sYPi", "caption": "ICbSF31A", "height": 35, "imageUrl": "j08pMI2A", "smallImageUrl": "RFSJxNki", "width": 0}, {"as": "c4O3objX", "caption": "UyHNeAmr", "height": 22, "imageUrl": "lMP2yx3Z", "smallImageUrl": "CbYw5hks", "width": 90}, {"as": "9YmQS7ce", "caption": "XsPNixkC", "height": 87, "imageUrl": "SmydYFUJ", "smallImageUrl": "xSRRDDc2", "width": 8}], "itemIds": ["L3S1pScW", "iRcgeEet", "Mmxw4nhx"], "itemQty": {"p2eKU1ic": 49, "KdXzgF5I": 15, "ylYug2VS": 40}, "itemType": "CODE", "listable": false, "localizations": {"5iHGbRB9": {"description": "M8LSJPAm", "localExt": {"nShk1y67": {}, "ixjbwdkc": {}, "tO7G0KwG": {}}, "longDescription": "Tw5HxV8G", "title": "bbKvSNV2"}, "TOHHarRP": {"description": "EiV740TB", "localExt": {"ap9UXRcr": {}, "dvM15FQy": {}, "dEQ22Yf8": {}}, "longDescription": "4OgHqNpz", "title": "Q0LWPWUN"}, "xzNQ6clN": {"description": "XpLGIpGt", "localExt": {"9vFeuFpd": {}, "NFNKJwYQ": {}, "ax2isCPJ": {}}, "longDescription": "eeO9GQMH", "title": "bSSGRhvf"}}, "maxCount": 28, "maxCountPerUser": 97, "name": "txjws0FP", "optionBoxConfig": {"boxItems": [{"count": 39, "itemId": "Zze7VJ8E", "itemSku": "VGZ7Wn7h"}, {"count": 35, "itemId": "xe2rTCit", "itemSku": "2vC8JPod"}, {"count": 92, "itemId": "LFE6ZgLd", "itemSku": "t5dXy4Pb"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 46, "fixedTrialCycles": 74, "graceDays": 88}, "regionData": {"Rns3h4Ng": [{"currencyCode": "UvPPLH3j", "currencyNamespace": "FwoAY15c", "currencyType": "REAL", "discountAmount": 29, "discountExpireAt": "1974-05-15T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1972-10-13T00:00:00Z", "discountedPrice": 66, "expireAt": "1990-05-06T00:00:00Z", "price": 84, "purchaseAt": "1991-09-10T00:00:00Z", "trialPrice": 62}, {"currencyCode": "ehVdkB4Y", "currencyNamespace": "kNeQ4CiC", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1988-04-25T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1991-10-01T00:00:00Z", "discountedPrice": 23, "expireAt": "1984-08-10T00:00:00Z", "price": 34, "purchaseAt": "1980-12-15T00:00:00Z", "trialPrice": 59}, {"currencyCode": "RLgA3w1n", "currencyNamespace": "tPuHxXDu", "currencyType": "VIRTUAL", "discountAmount": 14, "discountExpireAt": "1978-09-14T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1985-03-03T00:00:00Z", "discountedPrice": 31, "expireAt": "1992-09-14T00:00:00Z", "price": 49, "purchaseAt": "1999-06-14T00:00:00Z", "trialPrice": 45}], "YcfBLk7s": [{"currencyCode": "80N4kglJ", "currencyNamespace": "qQRg8yIE", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1980-10-22T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1989-06-10T00:00:00Z", "discountedPrice": 71, "expireAt": "1985-11-26T00:00:00Z", "price": 50, "purchaseAt": "1977-07-29T00:00:00Z", "trialPrice": 45}, {"currencyCode": "6ua1q66X", "currencyNamespace": "bEEpBzn1", "currencyType": "VIRTUAL", "discountAmount": 4, "discountExpireAt": "1986-06-03T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1990-02-07T00:00:00Z", "discountedPrice": 9, "expireAt": "1978-06-12T00:00:00Z", "price": 68, "purchaseAt": "1983-11-15T00:00:00Z", "trialPrice": 4}, {"currencyCode": "gBIhYaIg", "currencyNamespace": "AobWMdsP", "currencyType": "VIRTUAL", "discountAmount": 79, "discountExpireAt": "1997-08-16T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1992-02-08T00:00:00Z", "discountedPrice": 17, "expireAt": "1977-03-18T00:00:00Z", "price": 5, "purchaseAt": "1975-07-24T00:00:00Z", "trialPrice": 75}], "peGJlCeq": [{"currencyCode": "R7hx8gl0", "currencyNamespace": "OmcpMtx0", "currencyType": "VIRTUAL", "discountAmount": 62, "discountExpireAt": "1984-09-30T00:00:00Z", "discountPercentage": 2, "discountPurchaseAt": "1976-03-15T00:00:00Z", "discountedPrice": 53, "expireAt": "1995-02-25T00:00:00Z", "price": 10, "purchaseAt": "1975-09-09T00:00:00Z", "trialPrice": 65}, {"currencyCode": "I0zFpDKE", "currencyNamespace": "geJXlhE2", "currencyType": "VIRTUAL", "discountAmount": 27, "discountExpireAt": "1977-01-21T00:00:00Z", "discountPercentage": 80, "discountPurchaseAt": "1998-01-10T00:00:00Z", "discountedPrice": 16, "expireAt": "1996-06-02T00:00:00Z", "price": 70, "purchaseAt": "1992-08-05T00:00:00Z", "trialPrice": 85}, {"currencyCode": "fQ0kf0N4", "currencyNamespace": "wNW2JDqe", "currencyType": "REAL", "discountAmount": 91, "discountExpireAt": "1996-07-29T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1988-01-15T00:00:00Z", "discountedPrice": 80, "expireAt": "1980-11-20T00:00:00Z", "price": 72, "purchaseAt": "1984-11-07T00:00:00Z", "trialPrice": 14}]}, "seasonType": "PASS", "sku": "PBTbc52k", "stackable": false, "status": "ACTIVE", "tags": ["d9IIgJn8", "sFkW5FyF", "Ek5zoWdp"], "targetCurrencyCode": "3JdyDH0y", "targetNamespace": "5c8Ec6fs", "thumbnailUrl": "CkjqXMjb", "useCount": 77}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'RtTWuFDL' \
    --namespace $AB_NAMESPACE \
    --storeId 'TGcb9Pqg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'BEKLs2dL' \
    --namespace $AB_NAMESPACE \
    --force 'false' \
    --storeId '21kwjLYw' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 19, "orderNo": "GwVqg4Cg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'jSJr71Bq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'wxeQMvkI' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '8opFA1yC' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "Ebt5MEig", "previewUrl": "lDzkSFyJ", "thumbnailUrl": "faiIthhR", "type": "video", "url": "AioPy4JZ", "videoSource": "generic"}, {"alt": "32IUaXqR", "previewUrl": "tUoN2VCI", "thumbnailUrl": "04cls65k", "type": "image", "url": "y4gADqi1", "videoSource": "youtube"}, {"alt": "l9Q0VW7N", "previewUrl": "b0DXr4ti", "thumbnailUrl": "MN5epAa2", "type": "video", "url": "lOXNXnac", "videoSource": "vimeo"}], "developer": "EaxMKpqm", "forumUrl": "3vgg8EsN", "genres": ["FreeToPlay", "Racing", "Casual"], "localizations": {"RBzDXnyF": {"announcement": "qh8askqh", "slogan": "38og3Uy4"}, "FWudkvjs": {"announcement": "EBn6YDkY", "slogan": "YcHwIbyV"}, "UhA6MDBn": {"announcement": "UD6DyrPX", "slogan": "2Xsw7dM9"}}, "platformRequirements": {"xfHGb3FS": [{"additionals": "6vNhx1JP", "directXVersion": "GQ1UxVio", "diskSpace": "lI1aPYOI", "graphics": "fM427TAb", "label": "lZ8sp1AX", "osVersion": "hKHxySqu", "processor": "y1uO25ab", "ram": "DotDQ8xU", "soundCard": "VKwhGuty"}, {"additionals": "DKhB3EBQ", "directXVersion": "fa3vKU23", "diskSpace": "w7ol4pb0", "graphics": "wJ7rlfm1", "label": "H5pFyAlT", "osVersion": "iNVNpZq6", "processor": "4trUxWOD", "ram": "PnBfrCc0", "soundCard": "CjlxB5XW"}, {"additionals": "yqZ0Csq8", "directXVersion": "yDboMwug", "diskSpace": "GPlchUsj", "graphics": "rD4qgjCc", "label": "IP2UGFYd", "osVersion": "VCLFUEGf", "processor": "keOTzbbh", "ram": "9G0ibzPM", "soundCard": "mzRjvxSS"}], "WSerMxr9": [{"additionals": "F9l2ODlu", "directXVersion": "ahGgr5DZ", "diskSpace": "MCpN2voY", "graphics": "Yqm1gQxh", "label": "G2Z6cyF2", "osVersion": "OEqT06Fw", "processor": "sZd53vBN", "ram": "nITNNtzf", "soundCard": "lX4bjIdZ"}, {"additionals": "qUlKpDnw", "directXVersion": "omsZDl5k", "diskSpace": "nU93VJXX", "graphics": "7eTIOpJQ", "label": "QtzUzPHQ", "osVersion": "N7yOobLN", "processor": "kgabAMmj", "ram": "1jCnSfss", "soundCard": "UAwA3jJ2"}, {"additionals": "eHQ1Mpiv", "directXVersion": "bIJp1R8p", "diskSpace": "iiMwKTEQ", "graphics": "6zVHfzjh", "label": "JqN6XJcG", "osVersion": "buMpzB2i", "processor": "Su7gLwUe", "ram": "Tf4k6YvC", "soundCard": "65RLOwND"}], "mLswtETI": [{"additionals": "zvWjMz8C", "directXVersion": "HSMCWcVM", "diskSpace": "lPVWeysz", "graphics": "nofvmdIF", "label": "O3WnB9cT", "osVersion": "RzRVlrMX", "processor": "au9diTC3", "ram": "QpMCwSEM", "soundCard": "kFqWnbQd"}, {"additionals": "JF8Kz4Fp", "directXVersion": "JUN02HAa", "diskSpace": "sKRBqjxz", "graphics": "1Rsj88RL", "label": "hk8T1RYr", "osVersion": "Y8ZFl2xA", "processor": "mu8zJSzQ", "ram": "ket5GEC6", "soundCard": "jTOmuSGz"}, {"additionals": "q4tWMpH6", "directXVersion": "ntrZXCJI", "diskSpace": "VoWPdfua", "graphics": "QQGjMQrN", "label": "GQZERTTp", "osVersion": "Kh4C661k", "processor": "j5vw5Nuo", "ram": "xbfQwVZs", "soundCard": "mFVBfoRF"}]}, "platforms": ["Android", "MacOS", "Android"], "players": ["Coop", "Coop", "CrossPlatformMulti"], "primaryGenre": "Adventure", "publisher": "hyXu8tgP", "releaseDate": "1989-05-03T00:00:00Z", "websiteUrl": "KxcwGPta"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'Og8T0KBt' \
    --namespace $AB_NAMESPACE \
    --storeId 'mcgFn5Fg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'wWpd6Gic' \
    --namespace $AB_NAMESPACE \
    --storeId 'ZTtd3L6d' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'U6Tz65fF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'FPLkF8nZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'M8g0tuHn' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'GWcp8xfh' \
    --itemId 'EclFoAbR' \
    --namespace $AB_NAMESPACE \
    --storeId 'SknjbzSA' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'Qu6lVktq' \
    --itemId 'Dqm3ftFa' \
    --namespace $AB_NAMESPACE \
    --storeId 'boIzsY5n' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId '6sH4w033' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'nnu8UGQP' \
    --populateBundle 'false' \
    --region 'iBBIoOFP' \
    --storeId 'UDTpdMTd' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 16, "comparison": "is", "name": "weaF42rx", "predicateType": "EntitlementPredicate", "value": "PQdan8sM", "values": ["2jzWjXxt", "OtEyKKsU", "njkpOJY2"]}, {"anyOf": 13, "comparison": "is", "name": "KMhcTPQr", "predicateType": "EntitlementPredicate", "value": "pP4eF2Cs", "values": ["cyFoyL3e", "KKBiF1I8", "7jk2R9ih"]}, {"anyOf": 0, "comparison": "isLessThanOrEqual", "name": "zfhHCVwG", "predicateType": "SeasonTierPredicate", "value": "hG61u1ED", "values": ["TCweXUTa", "HRMIkcR7", "uD3yWq5j"]}]}, {"operator": "and", "predicates": [{"anyOf": 63, "comparison": "isGreaterThan", "name": "kYCT9pTe", "predicateType": "EntitlementPredicate", "value": "wwNd1HPv", "values": ["gUSef0sp", "SZL9iQsy", "TA58l0bs"]}, {"anyOf": 15, "comparison": "isLessThanOrEqual", "name": "5W70lDrN", "predicateType": "EntitlementPredicate", "value": "qvxzod4B", "values": ["DLekGPl6", "LezhOcL8", "idizktXq"]}, {"anyOf": 68, "comparison": "isGreaterThanOrEqual", "name": "sMdZN8xB", "predicateType": "SeasonPassPredicate", "value": "kgNy7HOf", "values": ["DeWfrNwx", "MJhHU8Ei", "lVChlowg"]}]}, {"operator": "and", "predicates": [{"anyOf": 75, "comparison": "isNot", "name": "jcO4ujAP", "predicateType": "SeasonTierPredicate", "value": "iyGwU18E", "values": ["I9GZBrQV", "uCmsU9C1", "ydM2d0rx"]}, {"anyOf": 43, "comparison": "isLessThan", "name": "S9jAodLV", "predicateType": "SeasonTierPredicate", "value": "sYi3bjkN", "values": ["kLFdwcSP", "GK8YWMGx", "tQ1Bypku"]}, {"anyOf": 17, "comparison": "includes", "name": "7VYuFZAy", "predicateType": "SeasonTierPredicate", "value": "igH63J7Z", "values": ["z6jWwb9g", "neUwdXlT", "UfEFePwA"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'tQEZrdhK' \
    --namespace $AB_NAMESPACE \
    --storeId 'eoerzoQg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "ychgaMVj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'XEACxjhu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '96' \
    --name 'D0K0PDe7' \
    --offset '60' \
    --tag 'ciAlTl0X' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "ZIWIcfYS", "name": "TgasfTOJ", "status": "ACTIVE", "tags": ["V9nRGlXU", "QvCjBziK", "Glt5fBak"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
eval_tap 0 112 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'jSTf6CkL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "Dtxh1waP", "name": "7P8RTZRm", "status": "ACTIVE", "tags": ["5vVfXLV8", "5LCzkRkK", "bNxwiiAG"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId '98pVIAU7' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'IITa6n94' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'RNsVYu8J' \
    --namespace $AB_NAMESPACE \
    --limit '97' \
    --offset '48' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId '1Rq2RYge' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'pnLv0MBy' \
    --limit '29' \
    --offset '69' \
    --orderNos '["hJoWz9fL", "6poxEgKJ", "SM8k3xsX"]' \
    --sortBy '9LaDOYRF' \
    --startTime 'JdXE7ktX' \
    --status 'REFUND_FAILED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'xhujkpFq' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "rnG4QOHj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '4W1Bl4XP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "Qal6MGpg", "privateKey": "CvhAz2F0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'KGUr5OOk' \
    --externalId 'RVDtniRE' \
    --limit '69' \
    --notificationSource 'XSOLLA' \
    --notificationType 'prlOKgQv' \
    --offset '60' \
    --paymentOrderNo 'xMd38M8m' \
    --startDate 'kPDGsnVR' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'LmyHm6ck' \
    --limit '22' \
    --offset '4' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "0EIxsYOP", "currencyNamespace": "Xpc6Bmim", "customParameters": {"ibsXCyLh": {}, "q90SXzbv": {}, "juUHpton": {}}, "description": "McubkHq2", "extOrderNo": "zDYGnSHi", "extUserId": "U9GuubtF", "itemType": "OPTIONBOX", "language": "HxZ_PUoQ", "metadata": {"PXjw7aNU": "ZQ4Cai9M", "AihU7Dzi": "ZxSTntvT", "i9nbHgex": "QbQdaDuC"}, "notifyUrl": "NEFvcUgE", "omitNotification": false, "platform": "qclXvlmH", "price": 11, "recurringPaymentOrderNo": "Oadv0PiF", "region": "OjNIY29I", "returnUrl": "q7rseE0s", "sandbox": true, "sku": "uRHKdAXA", "subscriptionId": "e0yyIMK5", "targetNamespace": "4z4PVv8L", "targetUserId": "IXxXCM5Q", "title": "oHusDHch"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'hODCok9D' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '22sSozur' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "7qZwfiMn", "paymentMethod": "KiN388QI", "paymentProvider": "CHECKOUT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'hzdwJuMb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "p0PRluRo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'woqCT22e' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 90, "currencyCode": "8SSCbHsI", "notifyType": "REFUND", "paymentProvider": "STRIPE", "salesTax": 49, "vat": 37}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'MjAlLK5F' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'S8eW6Sba' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Nintendo", "Playstation", "GooglePlay"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'IOS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 CreateReward
# body param: body
echo '{"description": "cLd1YxGc", "eventTopic": "Mxr8cLU1", "maxAwarded": 51, "maxAwardedPerUser": 6, "namespaceExpression": "ekxDJbzx", "rewardCode": "2N6CO7cC", "rewardConditions": [{"condition": "jf3keYnY", "conditionName": "I6y8VNxk", "eventName": "TWPDdgT3", "rewardItems": [{"duration": 42, "itemId": "ZyE7ADEq", "quantity": 19}, {"duration": 87, "itemId": "7QVxyV8c", "quantity": 32}, {"duration": 42, "itemId": "98Fydm22", "quantity": 82}]}, {"condition": "drIGeWWF", "conditionName": "5z03IzTE", "eventName": "jYTiC2mU", "rewardItems": [{"duration": 63, "itemId": "RahKVUHc", "quantity": 62}, {"duration": 46, "itemId": "2MJuAuDO", "quantity": 81}, {"duration": 46, "itemId": "xCuO9KLB", "quantity": 21}]}, {"condition": "o1P2L4wg", "conditionName": "RfZGfyRf", "eventName": "f28RUfsb", "rewardItems": [{"duration": 98, "itemId": "OV8FRpoq", "quantity": 82}, {"duration": 58, "itemId": "0U5WCkHT", "quantity": 51}, {"duration": 55, "itemId": "b4mGyVpZ", "quantity": 89}]}], "userIdExpression": "vzCwjYR5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateReward' test.out

#- 137 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'BKsQ577h' \
    --limit '69' \
    --offset '99' \
    --sortBy '["namespace:asc", "rewardCode:asc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 137 'QueryRewards' test.out

#- 138 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'ExportRewards' test.out

#- 139 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 139 'ImportRewards' test.out

#- 140 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'IJ9WE6AR' \
    > test.out 2>&1
eval_tap $? 140 'GetReward' test.out

#- 141 UpdateReward
# body param: body
echo '{"description": "kHsRVqcR", "eventTopic": "KLbxeRRj", "maxAwarded": 22, "maxAwardedPerUser": 21, "namespaceExpression": "QfF5A8Wu", "rewardCode": "CDs4BDuC", "rewardConditions": [{"condition": "ZpkAPECZ", "conditionName": "2UYulmjp", "eventName": "UmjB8z4c", "rewardItems": [{"duration": 15, "itemId": "oZtzC5Ou", "quantity": 15}, {"duration": 61, "itemId": "OBZhxCO7", "quantity": 29}, {"duration": 21, "itemId": "7xIopfB7", "quantity": 16}]}, {"condition": "n1kyqec1", "conditionName": "Ayhl84DG", "eventName": "e9l1c9KM", "rewardItems": [{"duration": 56, "itemId": "SEbq3ln9", "quantity": 92}, {"duration": 84, "itemId": "FWYQazbU", "quantity": 92}, {"duration": 49, "itemId": "sD4xung1", "quantity": 64}]}, {"condition": "jdufk9bR", "conditionName": "jnC9wg9e", "eventName": "yuYRqEqP", "rewardItems": [{"duration": 91, "itemId": "QKV9qPUl", "quantity": 22}, {"duration": 13, "itemId": "tkYAueV6", "quantity": 78}, {"duration": 75, "itemId": "UOopc6xi", "quantity": 97}]}], "userIdExpression": "XUQvjmjg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'oo3VOD3Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateReward' test.out

#- 142 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'K6hl5NtH' \
    > test.out 2>&1
eval_tap $? 142 'DeleteReward' test.out

#- 143 CheckEventCondition
# body param: body
echo '{"payload": {"QhGNuCAm": {}, "BAgbtTNf": {}, "pTRCOcIU": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'hFAdBDdX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CheckEventCondition' test.out

#- 144 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "N9y3l2Tj", "userId": "FEBlf1jU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'ZsAsZmwy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteRewardConditionRecord' test.out

#- 145 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'ListStores' test.out

#- 146 CreateStore
# body param: body
echo '{"defaultLanguage": "9sBkc71K", "defaultRegion": "CJRNR9mj", "description": "fomqhIDt", "supportedLanguages": ["4rOsOL5E", "FNxtpzkY", "nq4xRPIU"], "supportedRegions": ["7YVOvGCs", "e4xeGPla", "TV4IsbxL"], "title": "sa2OC97S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreateStore' test.out

#- 147 ImportStore
eval_tap 0 147 'ImportStore # SKIP deprecated' test.out

#- 148 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'GetPublishedStore' test.out

#- 149 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'DeletePublishedStore' test.out

#- 150 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 150 'GetPublishedStoreBackup' test.out

#- 151 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'RollbackPublishedStore' test.out

#- 152 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'Tmc4Q5hB' \
    > test.out 2>&1
eval_tap $? 152 'GetStore' test.out

#- 153 UpdateStore
# body param: body
echo '{"defaultLanguage": "nYH8Ulh0", "defaultRegion": "d5NjfIg5", "description": "LOJxiMPh", "supportedLanguages": ["imNYmuSM", "igWia2zJ", "wbsA7vqA"], "supportedRegions": ["hCFrt8GX", "QAVg74Uz", "CPv2R3gz"], "title": "DZAtmlF6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId '81UPUJa6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateStore' test.out

#- 154 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'lL2xBOtW' \
    > test.out 2>&1
eval_tap $? 154 'DeleteStore' test.out

#- 155 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'DoTkr1sT' \
    --action 'CREATE' \
    --itemSku 'DUWNBIt4' \
    --itemType 'BUNDLE' \
    --limit '32' \
    --offset '78' \
    --selected 'false' \
    --sortBy '["updatedAt:asc", "createdAt:desc"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'aU0VVNSJ' \
    --updatedAtStart '7tzGL1pu' \
    > test.out 2>&1
eval_tap $? 155 'QueryChanges' test.out

#- 156 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'NzayKeFd' \
    > test.out 2>&1
eval_tap $? 156 'PublishAll' test.out

#- 157 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'c92wqlYK' \
    > test.out 2>&1
eval_tap $? 157 'PublishSelected' test.out

#- 158 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '5ZFyDTyC' \
    > test.out 2>&1
eval_tap $? 158 'SelectAllRecords' test.out

#- 159 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'ukdYE4jG' \
    --action 'UPDATE' \
    --itemSku '6fwJLX9J' \
    --itemType 'INGAMEITEM' \
    --type 'ITEM' \
    --updatedAtEnd 'XTBmHOJW' \
    --updatedAtStart 'L8XSdJmn' \
    > test.out 2>&1
eval_tap $? 159 'GetStatistic' test.out

#- 160 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'xN4mdGbz' \
    > test.out 2>&1
eval_tap $? 160 'UnselectAllRecords' test.out

#- 161 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'p270DKOk' \
    --namespace $AB_NAMESPACE \
    --storeId 'tGGEpAdC' \
    > test.out 2>&1
eval_tap $? 161 'SelectRecord' test.out

#- 162 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'xt2CtC9N' \
    --namespace $AB_NAMESPACE \
    --storeId 'gTekGfCk' \
    > test.out 2>&1
eval_tap $? 162 'UnselectRecord' test.out

#- 163 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'OY6ubonx' \
    --targetStoreId '55pZtiaM' \
    > test.out 2>&1
eval_tap $? 163 'CloneStore' test.out

#- 164 ExportStore
eval_tap 0 164 'ExportStore # SKIP deprecated' test.out

#- 165 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'NEVER' \
    --itemId 'dBiUZ5Xy' \
    --limit '52' \
    --offset '99' \
    --sku '5ba0aUft' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    --userId 'nRf3T6aZ' \
    > test.out 2>&1
eval_tap $? 165 'QuerySubscriptions' test.out

#- 166 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BhVRrWxR' \
    > test.out 2>&1
eval_tap $? 166 'RecurringChargeSubscription' test.out

#- 167 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'fxS2BdWv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetTicketDynamic' test.out

#- 168 DecreaseTicketSale
# body param: body
echo '{"orderNo": "fhuk6tuk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'U2ll9R25' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'DecreaseTicketSale' test.out

#- 169 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'saxIc1Lv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'GetTicketBoothID' test.out

#- 170 IncreaseTicketSale
# body param: body
echo '{"count": 59, "orderNo": "k434Cd83"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'VJYsU53y' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'IncreaseTicketSale' test.out

#- 171 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "MEIdUXad", "value": 82}, {"id": "XkYS2QVE", "value": 19}, {"id": "eQdMLBEX", "value": 84}], "steamUserId": "pkPhYJzY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'CjRPjfvj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'UnlockSteamUserAchievement' test.out

#- 172 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'PZNmeusx' \
    --xboxUserId 'BVAeASdV' \
    > test.out 2>&1
eval_tap $? 172 'GetXblUserAchievements' test.out

#- 173 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "jtgvEjyz", "percentComplete": 44}, {"id": "vEpGrli8", "percentComplete": 85}, {"id": "uwDp56Yn", "percentComplete": 70}], "serviceConfigId": "NBeaH9Pr", "titleId": "oid94gr8", "xboxUserId": "HYT2GGLs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'Ft05OHSJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'UpdateXblUserAchievement' test.out

#- 174 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId '0qx2SK33' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeCampaign' test.out

#- 175 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'ksjdexDk' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeEntitlement' test.out

#- 176 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'ZrJ01L9Y' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizeFulfillment' test.out

#- 177 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'uxApPa5g' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeIntegration' test.out

#- 178 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'gmZ7GR7a' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizeOrder' test.out

#- 179 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'qM17o7r4' \
    > test.out 2>&1
eval_tap $? 179 'AnonymizePayment' test.out

#- 180 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'fBeIyJTU' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeSubscription' test.out

#- 181 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'Ha6WudML' \
    > test.out 2>&1
eval_tap $? 181 'AnonymizeWallet' test.out

#- 182 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'ES5DYydD' \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --entitlementClazz 'APP' \
    --entitlementName 'KQkMXIXM' \
    --features '["Sindvs1n", "5VW6rzd7", "bX0Y8kjY"]' \
    --itemId '["DbaZ0c3h", "jGfz01Cu", "V2IViH1D"]' \
    --limit '87' \
    --offset '86' \
    > test.out 2>&1
eval_tap $? 182 'QueryUserEntitlements' test.out

#- 183 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1990-08-05T00:00:00Z", "grantedCode": "rAj3GRM9", "itemId": "vDXvqJCe", "itemNamespace": "KB4VcEJL", "language": "Ytm", "quantity": 42, "region": "XoXdX3k1", "source": "REWARD", "startDate": "1985-08-30T00:00:00Z", "storeId": "Yr0fwqHY"}, {"endDate": "1977-03-05T00:00:00Z", "grantedCode": "VTCi7Nbb", "itemId": "9BJLqNyK", "itemNamespace": "uHUr6D02", "language": "uE", "quantity": 18, "region": "PrjTNE8Y", "source": "REWARD", "startDate": "1976-06-17T00:00:00Z", "storeId": "DZJMBcLR"}, {"endDate": "1993-08-15T00:00:00Z", "grantedCode": "MdEmaVTq", "itemId": "idlZmoWF", "itemNamespace": "mMoWDWxf", "language": "YQAa-bmNd_Gx", "quantity": 17, "region": "lf759IEl", "source": "IAP", "startDate": "1977-06-21T00:00:00Z", "storeId": "mOvv5wgb"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'w36Xe7qu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'GrantUserEntitlement' test.out

#- 184 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId '4rSCxZWO' \
    --activeOnly 'true' \
    --appId 'WYwMYtZr' \
    > test.out 2>&1
eval_tap $? 184 'GetUserAppEntitlementByAppId' test.out

#- 185 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'rBH2Bi2w' \
    --activeOnly 'false' \
    --limit '29' \
    --offset '31' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 185 'QueryUserEntitlementsByAppType' test.out

#- 186 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '7LcqCxRw' \
    --activeOnly 'true' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId '0rE25LNC' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlementByItemId' test.out

#- 187 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'N4ZCxtEA' \
    --activeOnly 'false' \
    --entitlementClazz 'APP' \
    --sku 'JUIlBULC' \
    > test.out 2>&1
eval_tap $? 187 'GetUserEntitlementBySku' test.out

#- 188 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'YbgQNFAB' \
    --appIds '["4vnZVMjO", "43arXZBU", "qcWtvnxp"]' \
    --itemIds '["ZSBfRsOA", "uPcGW9jz", "881ayVng"]' \
    --skus '["iLpAt4jI", "TDMSxf8F", "MGSQIoha"]' \
    > test.out 2>&1
eval_tap $? 188 'ExistsAnyUserActiveEntitlement' test.out

#- 189 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'n0x6eaky' \
    --itemIds '["ry1R1UsA", "m8184Xrh", "NpS8mTig"]' \
    > test.out 2>&1
eval_tap $? 189 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 190 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'whapdUYo' \
    --appId 'ijiiAkqC' \
    > test.out 2>&1
eval_tap $? 190 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 191 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '4lzvAqVP' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'NapCfyM5' \
    > test.out 2>&1
eval_tap $? 191 'GetUserEntitlementOwnershipByItemId' test.out

#- 192 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '7wSsZ4pn' \
    --ids '["vhRIM0hN", "fsEfhzMb", "maJG9Erc"]' \
    > test.out 2>&1
eval_tap $? 192 'GetUserEntitlementOwnershipByItemIds' test.out

#- 193 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'Zh2B6BS8' \
    --entitlementClazz 'CODE' \
    --sku 'bjuFlPCb' \
    > test.out 2>&1
eval_tap $? 193 'GetUserEntitlementOwnershipBySku' test.out

#- 194 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'YWfYne8e' \
    --entitlementIds 'pVz66K7k' \
    > test.out 2>&1
eval_tap $? 194 'RevokeUserEntitlements' test.out

#- 195 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'tOB12AMd' \
    --namespace $AB_NAMESPACE \
    --userId 'xLwDOcoI' \
    > test.out 2>&1
eval_tap $? 195 'GetUserEntitlement' test.out

#- 196 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1978-04-26T00:00:00Z", "nullFieldList": ["nidAvwZU", "3Fi2krNb", "XmBS3l0r"], "startDate": "1997-01-31T00:00:00Z", "status": "ACTIVE", "useCount": 97}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'CxMunMnO' \
    --namespace $AB_NAMESPACE \
    --userId 'pxMUX6ML' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'UpdateUserEntitlement' test.out

#- 197 ConsumeUserEntitlement
# body param: body
echo '{"options": ["Wwf4tDDq", "s4ykQLFr", "jXE6eFWJ"], "requestId": "BCzAWpP1", "useCount": 98}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'ycMQMXkt' \
    --namespace $AB_NAMESPACE \
    --userId 'GEyak4AY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'ConsumeUserEntitlement' test.out

#- 198 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'fuQzdgWy' \
    --namespace $AB_NAMESPACE \
    --userId 'zXY4o9hX' \
    > test.out 2>&1
eval_tap $? 198 'DisableUserEntitlement' test.out

#- 199 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'ODtTrDVC' \
    --namespace $AB_NAMESPACE \
    --userId 'z2v8PmL2' \
    > test.out 2>&1
eval_tap $? 199 'EnableUserEntitlement' test.out

#- 200 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'CEBlXDNb' \
    --namespace $AB_NAMESPACE \
    --userId '2h7IFkkw' \
    > test.out 2>&1
eval_tap $? 200 'GetUserEntitlementHistories' test.out

#- 201 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'En8yShfZ' \
    --namespace $AB_NAMESPACE \
    --userId '4VO8YGOH' \
    > test.out 2>&1
eval_tap $? 201 'RevokeUserEntitlement' test.out

#- 202 FulfillItem
# body param: body
echo '{"duration": 11, "endDate": "1990-10-08T00:00:00Z", "itemId": "pnzHnjQv", "itemSku": "iDuOpkAz", "language": "ZkWfEH98", "order": {"currency": {"currencyCode": "lUWV4NNI", "currencySymbol": "g2jwwlvW", "currencyType": "VIRTUAL", "decimals": 36, "namespace": "w77QEusH"}, "ext": {"aUYBGKnL": {}, "CXT3Slmm": {}, "TWuTPgtb": {}}, "free": true}, "orderNo": "QA9C54Xr", "origin": "Xbox", "quantity": 33, "region": "5xVwuLzX", "source": "IAP", "startDate": "1994-01-15T00:00:00Z", "storeId": "WsvsPU8u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'm1LQK8F0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'FulfillItem' test.out

#- 203 RedeemCode
# body param: body
echo '{"code": "I986sBGr", "language": "hc-QWcV", "region": "2knAd47A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'pldthYXv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'RedeemCode' test.out

#- 204 FulfillRewards
# body param: body
echo '{"origin": "Other", "rewards": [{"currency": {"currencyCode": "8grqSxiN", "namespace": "MchyNZsZ"}, "item": {"itemId": "MXZz9U1h", "itemSku": "KqNmLQm3", "itemType": "MRxElrbH"}, "quantity": 6, "type": "ITEM"}, {"currency": {"currencyCode": "QdTNu6b9", "namespace": "D7iwQrUa"}, "item": {"itemId": "iBF51alV", "itemSku": "m2bd3qSr", "itemType": "hLaALJWj"}, "quantity": 61, "type": "CURRENCY"}, {"currency": {"currencyCode": "i0gPgqIn", "namespace": "gge5XXyk"}, "item": {"itemId": "XKgwVJfg", "itemSku": "z17nzXBR", "itemType": "ZUvaKUXA"}, "quantity": 49, "type": "ITEM"}], "source": "PURCHASE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'SAXrS6jq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'FulfillRewards' test.out

#- 205 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'o9dkBtW1' \
    --endTime 'dC3JeVJc' \
    --limit '62' \
    --offset '19' \
    --productId '8skYdtU6' \
    --startTime 'TYXdIKeF' \
    --status 'FULFILLED' \
    --type 'PLAYSTATION' \
    > test.out 2>&1
eval_tap $? 205 'QueryUserIAPOrders' test.out

#- 206 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'R2Mwopke' \
    > test.out 2>&1
eval_tap $? 206 'QueryAllUserIAPOrders' test.out

#- 207 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'eMRZVs9Z' \
    --endTime 'FVaPix8X' \
    --limit '4' \
    --offset '26' \
    --startTime 'uyy2XUcy' \
    --status 'PENDING' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 207 'QueryUserIAPConsumeHistory' test.out

#- 208 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "zeIw_FWNp", "productId": "obk0GX5e", "region": "pgZQbGFh", "type": "EPICGAMES"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'oILQqOw8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'MockFulfillIAPItem' test.out

#- 209 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '0ClCQtsG' \
    --itemId 'mx1w4tr6' \
    --limit '82' \
    --offset '98' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 209 'QueryUserOrders' test.out

#- 210 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "uXWKgWye", "currencyNamespace": "uMd6huL3", "discountedPrice": 9, "ext": {"N9op1HAU": {}, "fn1nuCik": {}, "RUyz39aB": {}}, "itemId": "eWc2MG9U", "language": "bxLxaIDu", "options": {"skipPriceValidation": false}, "platform": "Other", "price": 90, "quantity": 8, "region": "yPriOojw", "returnUrl": "pWpROeLq", "sandbox": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '2wPBjJTZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'AdminCreateUserOrder' test.out

#- 211 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'dUkSiYvt' \
    --itemId 'mxYAqLbt' \
    > test.out 2>&1
eval_tap $? 211 'CountOfPurchasedItem' test.out

#- 212 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'wxTLtedo' \
    --userId 'j97CU29g' \
    > test.out 2>&1
eval_tap $? 212 'GetUserOrder' test.out

#- 213 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGEBACK", "statusReason": "E7XEVa8P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'UP7UnEDG' \
    --userId 'fTJgdh7b' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'UpdateUserOrderStatus' test.out

#- 214 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Yh4AYk2N' \
    --userId 'WaXSfUhn' \
    > test.out 2>&1
eval_tap $? 214 'FulfillUserOrder' test.out

#- 215 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'EDRHvRXv' \
    --userId '280M1ArQ' \
    > test.out 2>&1
eval_tap $? 215 'GetUserOrderGrant' test.out

#- 216 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'Gve2rD1x' \
    --userId 'Af3W0dzH' \
    > test.out 2>&1
eval_tap $? 216 'GetUserOrderHistories' test.out

#- 217 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "JRahhWDo"}, "authorisedTime": "1971-02-15T00:00:00Z", "chargebackReversedTime": "1985-01-02T00:00:00Z", "chargebackTime": "1974-01-22T00:00:00Z", "chargedTime": "1974-06-04T00:00:00Z", "createdTime": "1998-12-18T00:00:00Z", "currency": {"currencyCode": "kkc8ZBaB", "currencySymbol": "fDE4KMqJ", "currencyType": "REAL", "decimals": 37, "namespace": "WqbJN3S7"}, "customParameters": {"CF7Cys9T": {}, "fBlPz58r": {}, "emGAmDCi": {}}, "extOrderNo": "9ZVsfIBp", "extTxId": "JP6e04OL", "extUserId": "yLtNk9fB", "issuedAt": "1989-03-31T00:00:00Z", "metadata": {"RuasUWkr": "MGRBpHmm", "PGVwI5dy": "wdDYGZi6", "By2OV36h": "lE8qrP6N"}, "namespace": "O8zEGsBh", "nonceStr": "vkaNbnQH", "paymentMethod": "QpEZjcjz", "paymentMethodFee": 96, "paymentOrderNo": "p64iVLLu", "paymentProvider": "ALIPAY", "paymentProviderFee": 39, "paymentStationUrl": "zN2sKNr4", "price": 99, "refundedTime": "1990-05-19T00:00:00Z", "salesTax": 24, "sandbox": false, "sku": "nccfjJy8", "status": "CHARGEBACK_REVERSED", "statusReason": "JmnxEyCS", "subscriptionId": "dsBAamT2", "subtotalPrice": 12, "targetNamespace": "eTnMpFh6", "targetUserId": "UdFUVSC7", "tax": 3, "totalPrice": 87, "totalTax": 10, "txEndTime": "1993-09-20T00:00:00Z", "type": "s7qaVVeN", "userId": "xxnlXjuh", "vat": 11}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'gXdkqGHS' \
    --userId '4xviaftg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'ProcessUserOrderNotification' test.out

#- 218 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '3SBl6rsc' \
    --userId 'ObpTsSwj' \
    > test.out 2>&1
eval_tap $? 218 'DownloadUserOrderReceipt' test.out

#- 219 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "1oB0Pzbq", "currencyNamespace": "9AIhSdoe", "customParameters": {"JrosFGCd": {}, "s0cl3OnT": {}, "uTWKL3TE": {}}, "description": "OGY0C96O", "extOrderNo": "V3uJ8eOp", "extUserId": "d4G4295C", "itemType": "COINS", "language": "gxOl_KqVa", "metadata": {"d45XUzGW": "SDM6ETZV", "3AgTP1pP": "Dtp4DRyi", "hFpXkb3I": "XRHIqwip"}, "notifyUrl": "SeGumHGa", "omitNotification": true, "platform": "k1WacXaS", "price": 7, "recurringPaymentOrderNo": "uDU6xnxZ", "region": "FaSZt23l", "returnUrl": "i6DGN4kz", "sandbox": true, "sku": "9f3h7LM7", "subscriptionId": "7Ead5Y8O", "title": "5nyGiyhE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'irI96koS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'CreateUserPaymentOrder' test.out

#- 220 RefundUserPaymentOrder
# body param: body
echo '{"description": "TcWFw2DB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'QZ0521S0' \
    --userId 'godn46hW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'RefundUserPaymentOrder' test.out

#- 221 ApplyUserRedemption
# body param: body
echo '{"code": "vX2y4tq6", "orderNo": "V4gsUbDt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'yxKhG91t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'ApplyUserRedemption' test.out

#- 222 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'IgLIUAI0' \
    --chargeStatus 'CHARGED' \
    --itemId 'hhIufWQ6' \
    --limit '73' \
    --offset '1' \
    --sku 'sz3swv4m' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 222 'QueryUserSubscriptions' test.out

#- 223 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'Q9ZraSvB' \
    --excludeSystem 'false' \
    --limit '31' \
    --offset '22' \
    --subscriptionId 'y4EqbPCO' \
    > test.out 2>&1
eval_tap $? 223 'GetUserSubscriptionActivities' test.out

#- 224 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 12, "itemId": "iNBIu8il", "language": "P2LbqACp", "reason": "3ViC0QRW", "region": "7hHPgu7m", "source": "kACgKQiw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'F1s4l289' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'PlatformSubscribeSubscription' test.out

#- 225 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'S57GrF8l' \
    --itemId 'I3Wp2N0T' \
    > test.out 2>&1
eval_tap $? 225 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 226 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'lqgJFTna' \
    --userId '3WBZ0Eqo' \
    > test.out 2>&1
eval_tap $? 226 'GetUserSubscription' test.out

#- 227 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'xC8L2RTh' \
    --userId 'I28wv3Jk' \
    > test.out 2>&1
eval_tap $? 227 'DeleteUserSubscription' test.out

#- 228 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "nQY7kzE6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qTOMAH5c' \
    --userId 'PdS7ApiF' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'CancelSubscription' test.out

#- 229 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 75, "reason": "w0TwlAcl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'SlWbxIQn' \
    --userId 'DIXcv4CM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'GrantDaysToSubscription' test.out

#- 230 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'tVyn1FhJ' \
    --userId 'SMTVVtJz' \
    --excludeFree 'false' \
    --limit '42' \
    --offset '37' \
    > test.out 2>&1
eval_tap $? 230 'GetUserSubscriptionBillingHistories' test.out

#- 231 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "9PZrVjVK"}, "authorisedTime": "1978-02-26T00:00:00Z", "chargebackReversedTime": "1978-06-22T00:00:00Z", "chargebackTime": "1975-06-07T00:00:00Z", "chargedTime": "1986-05-27T00:00:00Z", "createdTime": "1995-10-04T00:00:00Z", "currency": {"currencyCode": "LGne7V3w", "currencySymbol": "FcAYkZhB", "currencyType": "VIRTUAL", "decimals": 85, "namespace": "7gkfGhj3"}, "customParameters": {"DUyvHmAf": {}, "ozAxppB3": {}, "gbWKlpat": {}}, "extOrderNo": "L8z6xnjK", "extTxId": "ByGbweOA", "extUserId": "3SkOC52Q", "issuedAt": "1993-10-05T00:00:00Z", "metadata": {"qrZWSSKh": "CNSj8sle", "OZU11yC8": "ddczblCe", "DoKjhNoX": "wjFiHqNj"}, "namespace": "VqQQPIXS", "nonceStr": "juKJpsdR", "paymentMethod": "wS1YSd4M", "paymentMethodFee": 80, "paymentOrderNo": "izUMmrKP", "paymentProvider": "XSOLLA", "paymentProviderFee": 2, "paymentStationUrl": "ZjgjEJhu", "price": 42, "refundedTime": "1974-05-29T00:00:00Z", "salesTax": 29, "sandbox": false, "sku": "uyvIc5zg", "status": "CHARGEBACK", "statusReason": "Nxr7ZA6j", "subscriptionId": "tYWTZe1g", "subtotalPrice": 7, "targetNamespace": "ePRpsdVN", "targetUserId": "8HBGEyUm", "tax": 21, "totalPrice": 28, "totalTax": 34, "txEndTime": "1996-11-18T00:00:00Z", "type": "bDvtzwHC", "userId": "hGBKGLX9", "vat": 52}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'JxHSMbLk' \
    --userId '3HMwYOSj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'ProcessUserSubscriptionNotification' test.out

#- 232 AcquireUserTicket
# body param: body
echo '{"count": 10, "orderNo": "EgY6Fo0X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'Qhi6BREX' \
    --namespace $AB_NAMESPACE \
    --userId 'K6iLnpSX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'AcquireUserTicket' test.out

#- 233 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'wNkDdKyh' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserCurrencyWallets' test.out

#- 234 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'JAT5KWJC' \
    --namespace $AB_NAMESPACE \
    --userId 'ZUFDjYdc' \
    --limit '71' \
    --offset '77' \
    > test.out 2>&1
eval_tap $? 234 'ListUserCurrencyTransactions' test.out

#- 235 CheckWallet
eval_tap 0 235 'CheckWallet # SKIP deprecated' test.out

#- 236 CreditUserWallet
# body param: body
echo '{"amount": 16, "expireAt": "1989-12-02T00:00:00Z", "origin": "GooglePlay", "reason": "6YlMaJlc", "source": "IAP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'qVmAVEjW' \
    --namespace $AB_NAMESPACE \
    --userId 'x5VBhrnQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'CreditUserWallet' test.out

#- 237 PayWithUserWallet
# body param: body
echo '{"amount": 97, "walletPlatform": "Steam"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'JSG3XeFA' \
    --namespace $AB_NAMESPACE \
    --userId 'wIjAKwcz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'PayWithUserWallet' test.out

#- 238 GetUserWallet
eval_tap 0 238 'GetUserWallet # SKIP deprecated' test.out

#- 239 DebitUserWallet
eval_tap 0 239 'DebitUserWallet # SKIP deprecated' test.out

#- 240 DisableUserWallet
eval_tap 0 240 'DisableUserWallet # SKIP deprecated' test.out

#- 241 EnableUserWallet
eval_tap 0 241 'EnableUserWallet # SKIP deprecated' test.out

#- 242 ListUserWalletTransactions
eval_tap 0 242 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 243 QueryWallets
eval_tap 0 243 'QueryWallets # SKIP deprecated' test.out

#- 244 GetWallet
eval_tap 0 244 'GetWallet # SKIP deprecated' test.out

#- 245 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'L5oZZEvi' \
    --end 'J5S9CgQb' \
    --start 'nnxLYToP' \
    > test.out 2>&1
eval_tap $? 245 'SyncOrders' test.out

#- 246 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["kd3QtcXS", "rsPovLcT", "motglZvj"], "apiKey": "Yz87uxZt", "authoriseAsCapture": false, "blockedPaymentMethods": ["LpbdhECM", "QBz7rbJl", "ZbVgwoKp"], "clientKey": "xRdG1mKR", "dropInSettings": "MFOfJAzF", "liveEndpointUrlPrefix": "cmzUTPl2", "merchantAccount": "wogsxmyK", "notificationHmacKey": "MkGW6Tf4", "notificationPassword": "M1rhhdU0", "notificationUsername": "gogU7IHb", "returnUrl": "K9ccPUQ5", "settings": "ZSwSh1EE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'TestAdyenConfig' test.out

#- 247 TestAliPayConfig
# body param: body
echo '{"appId": "25SpC3NH", "privateKey": "9xLK3DoG", "publicKey": "ns4JnvOh", "returnUrl": "1Dq255Dt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'TestAliPayConfig' test.out

#- 248 TestCheckoutConfig
# body param: body
echo '{"publicKey": "mAAx77kY", "secretKey": "H71feCmt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'TestCheckoutConfig' test.out

#- 249 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'TN92V7El' \
    --region 'wfji3rr1' \
    > test.out 2>&1
eval_tap $? 249 'DebugMatchedPaymentMerchantConfig' test.out

#- 250 TestPayPalConfig
# body param: body
echo '{"clientID": "e93eGc6A", "clientSecret": "zxkeJwYa", "returnUrl": "GGVkJsP5", "webHookId": "a8MMM3nh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'TestPayPalConfig' test.out

#- 251 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["fhVRn4kn", "xMB1IhX3", "ZxeTkGye"], "publishableKey": "nopk1k3w", "secretKey": "fvnxvcri", "webhookSecret": "ziqPpHCD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'TestStripeConfig' test.out

#- 252 TestWxPayConfig
# body param: body
echo '{"appId": "JpCZmP36", "key": "Maufg9r8", "mchid": "Q5eVyho0", "returnUrl": "SQXHzm5s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'TestWxPayConfig' test.out

#- 253 TestXsollaConfig
# body param: body
echo '{"apiKey": "8tizsSBe", "flowCompletionUrl": "MCgA146D", "merchantId": 59, "projectId": 54, "projectSecretKey": "SsE3o0zX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'TestXsollaConfig' test.out

#- 254 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'FUBLaugm' \
    > test.out 2>&1
eval_tap $? 254 'GetPaymentMerchantConfig' test.out

#- 255 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["OkDJiQWe", "d1OSDFir", "qDZD16vD"], "apiKey": "vk2X6ELS", "authoriseAsCapture": false, "blockedPaymentMethods": ["G7FcJIvf", "CGz5vGNg", "L1LYcGNI"], "clientKey": "fC4jzMEX", "dropInSettings": "fn6Nucs5", "liveEndpointUrlPrefix": "CiqaR8m1", "merchantAccount": "VYliYJwE", "notificationHmacKey": "hdO5kQO3", "notificationPassword": "4DTpkHid", "notificationUsername": "E7UEGdvn", "returnUrl": "RNJeZpbz", "settings": "TGa0gzBJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'F5dNFpUe' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateAdyenConfig' test.out

#- 256 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '9f3IE6Ql' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 256 'TestAdyenConfigById' test.out

#- 257 UpdateAliPayConfig
# body param: body
echo '{"appId": "hDw1eokK", "privateKey": "7xgDfqlB", "publicKey": "JUjmTGAq", "returnUrl": "ltPKbS9G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'sEojHaU3' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateAliPayConfig' test.out

#- 258 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'zkpGoSFH' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 258 'TestAliPayConfigById' test.out

#- 259 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "ru9r8ZPT", "secretKey": "jPonKdEy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id '0GZg5i03' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateCheckoutConfig' test.out

#- 260 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id '1PvnS9aU' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 260 'TestCheckoutConfigById' test.out

#- 261 UpdatePayPalConfig
# body param: body
echo '{"clientID": "EjRFaQgk", "clientSecret": "tFkUI5WZ", "returnUrl": "WmUB2lXe", "webHookId": "8XmOWbpj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'kkvSdp0S' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdatePayPalConfig' test.out

#- 262 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id '8eMhOF0u' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 262 'TestPayPalConfigById' test.out

#- 263 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["H9n4z4Bl", "kDkyebOq", "H0mKFZER"], "publishableKey": "a5mBIE3z", "secretKey": "ejSQIHV8", "webhookSecret": "5sRcb3bD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'UbVBUTsJ' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'UpdateStripeConfig' test.out

#- 264 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'Ss8rkJlO' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 264 'TestStripeConfigById' test.out

#- 265 UpdateWxPayConfig
# body param: body
echo '{"appId": "QPy0wcXa", "key": "CXN87pjX", "mchid": "MDrzCDQq", "returnUrl": "RdfWTqWh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'rNSAq4cW' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'UpdateWxPayConfig' test.out

#- 266 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'KbBKBbEt' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 266 'UpdateWxPayConfigCert' test.out

#- 267 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'qOnTpfIm' \
    > test.out 2>&1
eval_tap $? 267 'TestWxPayConfigById' test.out

#- 268 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "hT5lmPJT", "flowCompletionUrl": "CyuzOmh3", "merchantId": 78, "projectId": 45, "projectSecretKey": "hNT6mpD4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'C5FssWGn' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdateXsollaConfig' test.out

#- 269 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'AYathGHr' \
    > test.out 2>&1
eval_tap $? 269 'TestXsollaConfigById' test.out

#- 270 UpdateXsollaUIConfig
# body param: body
echo '{"device": "DESKTOP", "showCloseButton": true, "size": "LARGE", "theme": "DEFAULT_DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id '65VAcY6P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'UpdateXsollaUIConfig' test.out

#- 271 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '19' \
    --namespace_ 'B4n5B9vC' \
    --offset '20' \
    --region 'z5volQun' \
    > test.out 2>&1
eval_tap $? 271 'QueryPaymentProviderConfig' test.out

#- 272 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "XjEdO2ra", "region": "DVOPa0BF", "sandboxTaxJarApiToken": "wRwBWtUo", "specials": ["ADYEN", "WXPAY", "CHECKOUT"], "taxJarApiToken": "dPYJc6Si", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'CreatePaymentProviderConfig' test.out

#- 273 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 273 'GetAggregatePaymentProviders' test.out

#- 274 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ '7NjepMzk' \
    --region 'sEGIo29M' \
    > test.out 2>&1
eval_tap $? 274 'DebugMatchedPaymentProviderConfig' test.out

#- 275 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 275 'GetSpecialPaymentProviders' test.out

#- 276 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "hyaolNcF", "region": "Jn10wT33", "sandboxTaxJarApiToken": "DXxiNnOz", "specials": ["ADYEN", "XSOLLA", "CHECKOUT"], "taxJarApiToken": "KJ6AfP9h", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'tNxREUUO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'UpdatePaymentProviderConfig' test.out

#- 277 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'tPFndDv0' \
    > test.out 2>&1
eval_tap $? 277 'DeletePaymentProviderConfig' test.out

#- 278 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 278 'GetPaymentTaxConfig' test.out

#- 279 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "HJmxc4Nt", "taxJarApiToken": "Tkn164c7", "taxJarEnabled": true, "taxJarProductCodesMapping": {"JyVFXQvO": "ZEmh165J", "k4IIOlgv": "KpskDAKr", "idI7jL6O": "gL21Qlp2"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'UpdatePaymentTaxConfig' test.out

#- 280 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey '8IrGnA6k' \
    --end 'NtF32DPJ' \
    --start '0tPnX6YB' \
    > test.out 2>&1
eval_tap $? 280 'SyncPaymentOrders' test.out

#- 281 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'Jhat4BcN' \
    --storeId 'etpyeWYr' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetRootCategories' test.out

#- 282 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'ENkakJMi' \
    --storeId 'pKd2XkDz' \
    > test.out 2>&1
eval_tap $? 282 'DownloadCategories' test.out

#- 283 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'RUk5wyTr' \
    --namespace $AB_NAMESPACE \
    --language 'axdwKVBE' \
    --storeId 'brUCEsUR' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetCategory' test.out

#- 284 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'PWHgPKaw' \
    --namespace $AB_NAMESPACE \
    --language 'MTWyc27v' \
    --storeId 'JV3mzOCi' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetChildCategories' test.out

#- 285 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'S416rJDN' \
    --namespace $AB_NAMESPACE \
    --language 'WfmSPmF0' \
    --storeId 'ixPtJEI8' \
    > test.out 2>&1
eval_tap $? 285 'PublicGetDescendantCategories' test.out

#- 286 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 286 'PublicListCurrencies' test.out

#- 287 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'tycitZIu' \
    --region 'Cv3Vz7WM' \
    --storeId 'V5UwsP33' \
    --appId '0wEjrJF0' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetItemByAppId' test.out

#- 288 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --baseAppId 'Eee7KBkm' \
    --categoryPath 'OviDoTsp' \
    --features 'oMWZBL4D' \
    --includeSubCategoryItem 'true' \
    --itemType 'INGAMEITEM' \
    --language 'OKP4Qbi5' \
    --limit '18' \
    --offset '4' \
    --region 'OZgI0hZQ' \
    --sortBy '["updatedAt", "updatedAt:desc", "name"]' \
    --storeId 'EIqK0vO7' \
    --tags 'yYPy4ygM' \
    > test.out 2>&1
eval_tap $? 288 'PublicQueryItems' test.out

#- 289 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'XUkKORs0' \
    --region 'gneL3boE' \
    --storeId 'NY0kV4ZG' \
    --sku 'HisuQwrG' \
    > test.out 2>&1
eval_tap $? 289 'PublicGetItemBySku' test.out

#- 290 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'yfRuS4a1' \
    --region 'YUt2uH4a' \
    --storeId 'cZPZytV2' \
    --itemIds 'lNdwnuBb' \
    > test.out 2>&1
eval_tap $? 290 'PublicBulkGetItems' test.out

#- 291 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["RnVTw4od", "5eYaYqji", "dto6kqsb"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicValidateItemPurchaseCondition' test.out

#- 292 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'BUNDLE' \
    --limit '83' \
    --offset '20' \
    --region 'sxXB2Pam' \
    --storeId 'snNr06ob' \
    --keyword '2oUaXyBx' \
    --language 'vwCKdrfp' \
    > test.out 2>&1
eval_tap $? 292 'PublicSearchItems' test.out

#- 293 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'sKVPqi3E' \
    --namespace $AB_NAMESPACE \
    --language 'ad3lHYSW' \
    --region 'Viryg2J1' \
    --storeId 'cenn4Rj7' \
    > test.out 2>&1
eval_tap $? 293 'PublicGetApp' test.out

#- 294 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId '8OaX8re2' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 294 'PublicGetItemDynamicData' test.out

#- 295 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'aA813QMj' \
    --namespace $AB_NAMESPACE \
    --language 'Ebl8vHXr' \
    --populateBundle 'false' \
    --region 'tekwsAMZ' \
    --storeId '1r4rCyPW' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetItem' test.out

#- 296 GetPaymentCustomization
eval_tap 0 296 'GetPaymentCustomization # SKIP deprecated' test.out

#- 297 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "lTojNcro", "paymentProvider": "ALIPAY", "returnUrl": "igABN6K5", "ui": "bidpkaCI", "zipCode": "hMusjRZG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicGetPaymentUrl' test.out

#- 298 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'mZMAR2za' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetPaymentMethods' test.out

#- 299 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'et5lkwwn' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetUnpaidPaymentOrder' test.out

#- 300 Pay
# body param: body
echo '{"token": "2f7aefhU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'VCLgx41U' \
    --paymentProvider 'XSOLLA' \
    --zipCode 'p7nCHRCZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'Pay' test.out

#- 301 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'KPV1CIwH' \
    > test.out 2>&1
eval_tap $? 301 'PublicCheckPaymentOrderPaidStatus' test.out

#- 302 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'XSOLLA' \
    --region 'JPHBkyeb' \
    > test.out 2>&1
eval_tap $? 302 'GetPaymentPublicConfig' test.out

#- 303 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code '7WEkkmXE' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetQRCode' test.out

#- 304 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'uqI5Mgs2' \
    --foreinginvoice 'XHlUBbZh' \
    --invoiceId 'D0NC8auW' \
    --payload 'd107f9Cy' \
    --redirectResult 'QJvPQGYY' \
    --resultCode 'c7iW5JEp' \
    --sessionId '82D65YMT' \
    --status 'C3AbEUj4' \
    --token 'W1E38ijm' \
    --type 'EhuVmXrx' \
    --userId 'jCQRnL1X' \
    --orderNo 'rpeBSGDT' \
    --paymentOrderNo 'iy5D3Gjj' \
    --paymentProvider 'WALLET' \
    --returnUrl 'Axa0k8ZI' \
    > test.out 2>&1
eval_tap $? 304 'PublicNormalizePaymentReturnUrl' test.out

#- 305 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'qMjQeHEf' \
    --paymentOrderNo '9TXfj3ue' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 305 'GetPaymentTaxValue' test.out

#- 306 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'smSFYvo4' \
    > test.out 2>&1
eval_tap $? 306 'GetRewardByCode' test.out

#- 307 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'ndkHTbs7' \
    --limit '42' \
    --offset '27' \
    --sortBy '["rewardCode", "namespace", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 307 'QueryRewards1' test.out

#- 308 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId '6nWJPn1W' \
    > test.out 2>&1
eval_tap $? 308 'GetReward1' test.out

#- 309 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 309 'PublicListStores' test.out

#- 310 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["JojDhVV3", "E2hhihhB", "elaXnorO"]' \
    --itemIds '["QeEmy2gQ", "9ZOUy2ho", "NOYNxfmm"]' \
    --skus '["d6MzyPUn", "bKURWhDL", "gUp3k33n"]' \
    > test.out 2>&1
eval_tap $? 310 'PublicExistsAnyMyActiveEntitlement' test.out

#- 311 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'ygq8lb6b' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 312 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'OPTIONBOX' \
    --itemId '5J82R9Ym' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 313 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'FidQ1q5g' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 314 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["wt3afqGG", "Itia34B3", "wpNEqR6h"]' \
    --itemIds '["CMUSqBQQ", "bEDyFglJ", "Jm6gQbSc"]' \
    --skus '["eWaEaDyq", "kIOwmwHh", "dlfjJbaw"]' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetEntitlementOwnershipToken' test.out

#- 315 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'Km6iRzcC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 315 'PublicGetMyWallet' test.out

#- 316 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "9KqkYSBN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'FD9EtcYw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'SyncEpicGameDLC' test.out

#- 317 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 73}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId '0Pfuc27W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicSyncPsnDlcInventory' test.out

#- 318 SyncSteamDLC
# body param: body
echo '{"appId": "t7vnKVNb", "steamId": "YNgn2s5A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId '0hqzlMdx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'SyncSteamDLC' test.out

#- 319 SyncXboxDLC
# body param: body
echo '{"xstsToken": "PmqTUN8y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'X2h3Jk6k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'SyncXboxDLC' test.out

#- 320 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '1JwcXUKh' \
    --appType 'DLC' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'x9TgLHyr' \
    --features '["bZwa8GK6", "6JoL3SyH", "9mcGLKj0"]' \
    --itemId '["YcNxiIUP", "1bCXooOr", "xEiLItnh"]' \
    --limit '92' \
    --offset '19' \
    > test.out 2>&1
eval_tap $? 320 'PublicQueryUserEntitlements' test.out

#- 321 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'BZMP3FkI' \
    --appId 'h5SzmUZ2' \
    > test.out 2>&1
eval_tap $? 321 'PublicGetUserAppEntitlementByAppId' test.out

#- 322 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'NKuMTtBZ' \
    --limit '7' \
    --offset '53' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 322 'PublicQueryUserEntitlementsByAppType' test.out

#- 323 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '0xOtSJEW' \
    --entitlementClazz 'CODE' \
    --itemId 'NwZHa9Pj' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetUserEntitlementByItemId' test.out

#- 324 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'SrhwJA3m' \
    --entitlementClazz 'OPTIONBOX' \
    --sku '8BkFf2Nz' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetUserEntitlementBySku' test.out

#- 325 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'OCPmn57f' \
    --appIds '["2kOBmBBJ", "hEIgoeVf", "Dkbs305Z"]' \
    --itemIds '["41CUM1hb", "40VOb2gc", "vF8Ukvzs"]' \
    --skus '["H6JALird", "FtcNrm8I", "S4sBnQOY"]' \
    > test.out 2>&1
eval_tap $? 325 'PublicExistsAnyUserActiveEntitlement' test.out

#- 326 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'Pb8jQkYf' \
    --appId 'zmHsCci3' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 327 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '1sg0EkhC' \
    --entitlementClazz 'CODE' \
    --itemId 'DbyduMwK' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 328 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'WlH08jdf' \
    --ids '["kIrL4SJs", "GUr9uVOu", "UbEkoZQk"]' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 329 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'u6Q5yW5e' \
    --entitlementClazz 'OPTIONBOX' \
    --sku '3yo1NlQc' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 330 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'epgqwxbz' \
    --namespace $AB_NAMESPACE \
    --userId 'D6NMjJG8' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetUserEntitlement' test.out

#- 331 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["0zAtE5WU", "CZp985QX", "9M3huvZn"], "requestId": "XsBpzPUk", "useCount": 9}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'mJd4hiCL' \
    --namespace $AB_NAMESPACE \
    --userId 'laqrra9O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicConsumeUserEntitlement' test.out

#- 332 PublicRedeemCode
# body param: body
echo '{"code": "nL5SgpKn", "language": "eKcS_xnas-843", "region": "6bT8X1pD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'EbHTEiXK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicRedeemCode' test.out

#- 333 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "gfrb_AcJI_oc", "productId": "qdhefF0f", "receiptData": "dKmztZ3h", "region": "rekPOgeK", "transactionId": "iiVHSxXj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'wYuvjMYS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicFulfillAppleIAPItem' test.out

#- 334 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "dZa9i7yp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'sZSUZuAH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'SyncEpicGamesInventory' test.out

#- 335 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "XU_860", "orderId": "uIHVvPLK", "packageName": "qZNHPx7J", "productId": "HlA17m2Q", "purchaseTime": 29, "purchaseToken": "PQwOBQ9C", "region": "m0cT6qsz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'HZofjHVd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PublicFulfillGoogleIAPItem' test.out

#- 336 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "YsZOmDtf", "price": 0.5048781733035612, "productId": "JWIVkSdA", "serviceLabel": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'lNZcRpRe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'PublicReconcilePlayStationStore' test.out

#- 337 SyncStadiaEntitlement
# body param: body
echo '{"appId": "Ge2AOeDJ", "language": "NwGp_waDX_eU", "region": "wtPB7Yrq", "stadiaPlayerId": "WBUiD3Kx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'GHnQUBmQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'SyncStadiaEntitlement' test.out

#- 338 SyncSteamInventory
# body param: body
echo '{"appId": "Byz4xjJo", "currencyCode": "uMIdjLNl", "language": "uUNA-fioD", "price": 0.2817236271539135, "productId": "yHan9BBW", "region": "TAmD6Ycq", "steamId": "2R2MugAA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'KQ7JOLYw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'SyncSteamInventory' test.out

#- 339 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "zIFuqAH3", "language": "Ad", "region": "bgl7z9JS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'KUP362j6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'SyncTwitchDropsEntitlement' test.out

#- 340 SyncXboxInventory
# body param: body
echo '{"currencyCode": "XmmjCA2Z", "price": 0.8117643624480708, "productId": "8LoCmRd2", "xstsToken": "ltge0sOw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'v4ZkTBWL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 340 'SyncXboxInventory' test.out

#- 341 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '48W4QbGS' \
    --itemId 'TyPFep1U' \
    --limit '51' \
    --offset '13' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 341 'PublicQueryUserOrders' test.out

#- 342 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "6KYngDqR", "discountedPrice": 44, "ext": {"sz9dkWpS": {}, "MNdi5lgj": {}, "kpeAwJYJ": {}}, "itemId": "1qOvJxGa", "language": "pjV-HR", "price": 41, "quantity": 35, "region": "9y09ep76", "returnUrl": "UHwdKFv0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'x9L3hZr9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'PublicCreateUserOrder' test.out

#- 343 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Ha1KsYjO' \
    --userId 'e9lmNMPL' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetUserOrder' test.out

#- 344 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'VIysGZTn' \
    --userId 'fZ9QML1z' \
    > test.out 2>&1
eval_tap $? 344 'PublicCancelUserOrder' test.out

#- 345 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'zOZMj3Ya' \
    --userId 'FGw4b5FM' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserOrderHistories' test.out

#- 346 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'JC3Ah2Oe' \
    --userId 'PwMgeACJ' \
    > test.out 2>&1
eval_tap $? 346 'PublicDownloadUserOrderReceipt' test.out

#- 347 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId '1mSe0R13' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetPaymentAccounts' test.out

#- 348 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'fmfeY0cT' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'rwU3unhU' \
    > test.out 2>&1
eval_tap $? 348 'PublicDeletePaymentAccount' test.out

#- 349 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'neORYkH8' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'UAZch5MZ' \
    --limit '45' \
    --offset '77' \
    --sku 'SM0P4uBm' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 349 'PublicQueryUserSubscriptions' test.out

#- 350 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "aTMZeQcs", "itemId": "UQOQSwIO", "language": "vhbE_889", "region": "AIOMDs9E", "returnUrl": "elJiDxrW", "source": "Zefb6y8C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'euiEFfW3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicSubscribeSubscription' test.out

#- 351 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'GIKwWbhe' \
    --itemId 'dRJP6N6L' \
    > test.out 2>&1
eval_tap $? 351 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 352 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'jfr6n2Le' \
    --userId 'ieq2K9h7' \
    > test.out 2>&1
eval_tap $? 352 'PublicGetUserSubscription' test.out

#- 353 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'dd2qxIU9' \
    --userId '5YBT6evC' \
    > test.out 2>&1
eval_tap $? 353 'PublicChangeSubscriptionBillingAccount' test.out

#- 354 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "V9W4MCrt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'sABoiJNP' \
    --userId 'C0hsM9rt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicCancelSubscription' test.out

#- 355 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'du5NitmR' \
    --userId 'kL3eLQT6' \
    --excludeFree 'false' \
    --limit '89' \
    --offset '47' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetUserSubscriptionBillingHistories' test.out

#- 356 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'RY0NA6Oz' \
    --namespace $AB_NAMESPACE \
    --userId 'QZPgtDhB' \
    > test.out 2>&1
eval_tap $? 356 'PublicGetWallet' test.out

#- 357 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'eXC8siOX' \
    --namespace $AB_NAMESPACE \
    --userId 'TRZZNq6m' \
    --limit '78' \
    --offset '7' \
    > test.out 2>&1
eval_tap $? 357 'PublicListUserWalletTransactions' test.out

#- 358 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --availableDate 'afxrcGBe' \
    --baseAppId '8N9TJeMx' \
    --categoryPath 'lW28t6vU' \
    --features 'ozIkATCZ' \
    --includeSubCategoryItem 'true' \
    --itemStatus 'ACTIVE' \
    --itemType 'COINS' \
    --limit '59' \
    --offset '34' \
    --region 'W6oWzgZm' \
    --sortBy '["updatedAt", "name:desc", "name:asc"]' \
    --storeId 'YgpSqZU9' \
    --tags 'tEwBZbiw' \
    --targetNamespace 'WDyccDRU' \
    > test.out 2>&1
eval_tap $? 358 'QueryItems1' test.out

#- 359 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'J3zxkCkR' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 359 'ImportStore1' test.out

#- 360 ExportStore1
# body param: body
echo '{"itemIds": ["irnKuMv7", "qEcxXeRJ", "tIuLp5qi"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'LG6yZhZE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE