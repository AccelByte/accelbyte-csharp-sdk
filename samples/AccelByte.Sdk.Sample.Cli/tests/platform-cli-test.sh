#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..377"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "GjWMMsmQ", "appType": "DLC", "baseAppId": "c5db0k2f", "boothName": "ki7tEeRu", "boundItemIds": ["yuCCz4K5", "vzzdlSQq", "xTixLV9Z"], "categoryPath": "klWMrANT", "clazz": "PLkJtAYE", "createdAt": "1979-02-18T00:00:00Z", "description": "pKzQTude", "displayOrder": 56, "entitlementType": "DURABLE", "ext": {"HpOS4j3G": {}, "W3TvgM34": {}, "F6RQNplp": {}}, "features": ["8Dro66Be", "tCJ2SHWB", "WZ57rWgf"], "fresh": false, "images": [{"as": "cOvmyiX6", "caption": "b6xm22v4", "height": 53, "imageUrl": "Pq091nsi", "smallImageUrl": "h2v9fcDc", "width": 47}, {"as": "IG7IdGIe", "caption": "ATUONcMn", "height": 3, "imageUrl": "zDRWecMI", "smallImageUrl": "aCqZQv5m", "width": 25}, {"as": "TdD6srdN", "caption": "2BZtvW2E", "height": 54, "imageUrl": "iX1wOTBe", "smallImageUrl": "2vVxNf1I", "width": 43}], "itemId": "goroKW7h", "itemIds": ["jplvgyER", "suK0m7rI", "N0V76dzH"], "itemQty": {"rca6Hd5Q": 32, "pX08OTiQ": 18, "0CdXeuvN": 55}, "itemType": "INGAMEITEM", "language": "eyF9WPIT", "listable": false, "localExt": {"tDkT95gS": {}, "N4ecnRwE": {}, "5bDl3LV5": {}}, "longDescription": "JJ0TsJmN", "lootBoxConfig": {"rewardCount": 23, "rewards": [{"lootBoxItems": [{"count": 32, "itemId": "lq6vA8Z8", "itemSku": "aCUb5Ofd", "itemType": "09vpuSiw"}, {"count": 20, "itemId": "Pfl5Bawv", "itemSku": "bWWydRGL", "itemType": "Lmb3bC4A"}, {"count": 33, "itemId": "Nj45MMaM", "itemSku": "P2LUxslV", "itemType": "bpbKK0cd"}], "name": "jnlMtNml", "odds": 0.4296913472185554, "type": "PROBABILITY_GROUP", "weight": 50}, {"lootBoxItems": [{"count": 61, "itemId": "E7nswqWY", "itemSku": "LdxJJXjD", "itemType": "jm32eMyt"}, {"count": 95, "itemId": "8F46SlwL", "itemSku": "4hacif0h", "itemType": "qBvlntQW"}, {"count": 7, "itemId": "RD3opUaT", "itemSku": "sEMLMqQh", "itemType": "KrFSdWTB"}], "name": "lkzwaQeL", "odds": 0.43548629076400236, "type": "PROBABILITY_GROUP", "weight": 54}, {"lootBoxItems": [{"count": 11, "itemId": "G6r5dVIS", "itemSku": "Lg26QuLL", "itemType": "9HAul4uE"}, {"count": 2, "itemId": "YLZzrqyn", "itemSku": "QkWifl6M", "itemType": "ZIpjppv0"}, {"count": 90, "itemId": "2ZLYI03l", "itemSku": "5R4stBov", "itemType": "eFG8vVZp"}], "name": "u0ewuiQN", "odds": 0.2084234932100293, "type": "REWARD", "weight": 87}]}, "maxCount": 86, "maxCountPerUser": 3, "name": "PddAHice", "namespace": "OQMhJ4zZ", "optionBoxConfig": {"boxItems": [{"count": 64, "itemId": "vbOkHOjz", "itemSku": "bZ4V8zd1", "itemType": "H6cN2B1C"}, {"count": 100, "itemId": "gFCLkRdJ", "itemSku": "AC3AEjYk", "itemType": "sktYVTaw"}, {"count": 57, "itemId": "chUlliM5", "itemSku": "zA2SwNPX", "itemType": "lgWNOIJ5"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 23, "comparison": "isGreaterThan", "name": "qc1XCdOJ", "predicateType": "EntitlementPredicate", "value": "JRPezBWG", "values": ["D2pqBGgM", "gYy2Q7ZN", "7g4iY7nw"]}, {"anyOf": 3, "comparison": "isNot", "name": "1psD6Frk", "predicateType": "SeasonPassPredicate", "value": "8REjxmU8", "values": ["EQqNdCEo", "MzoZpYwM", "nWFavLr9"]}, {"anyOf": 50, "comparison": "isNot", "name": "kAczvqFG", "predicateType": "EntitlementPredicate", "value": "QHRxbtW7", "values": ["Z3OpRhdD", "ZLKKHz9z", "zENHuDBM"]}]}, {"operator": "and", "predicates": [{"anyOf": 96, "comparison": "isGreaterThan", "name": "J2N1ZxtM", "predicateType": "SeasonTierPredicate", "value": "NUzoc2zg", "values": ["SVC9NBQd", "phnMjojW", "seJnIxWa"]}, {"anyOf": 13, "comparison": "includes", "name": "LFZyLXSd", "predicateType": "SeasonTierPredicate", "value": "KeipCZLL", "values": ["NG621KJU", "fE4iZbIt", "uu1N1g5O"]}, {"anyOf": 14, "comparison": "isLessThanOrEqual", "name": "QCo0GqtZ", "predicateType": "SeasonTierPredicate", "value": "CU84pmvm", "values": ["70W1mx6H", "faz9tHuE", "t1hRonFE"]}]}, {"operator": "and", "predicates": [{"anyOf": 86, "comparison": "includes", "name": "pkGfiaK6", "predicateType": "SeasonPassPredicate", "value": "GPHZ3ygl", "values": ["IMZ1jb5V", "W2Oq98Ji", "FmiUKngu"]}, {"anyOf": 48, "comparison": "isGreaterThanOrEqual", "name": "Hvqrl9gB", "predicateType": "SeasonTierPredicate", "value": "dca6PnZt", "values": ["46Awj9zY", "Wkx0Qr5h", "KpPP7wH4"]}, {"anyOf": 77, "comparison": "isNot", "name": "wdoIRxrg", "predicateType": "SeasonTierPredicate", "value": "02uXj4tk", "values": ["wKWf220i", "hQOjN1u9", "7tlI2owS"]}]}]}, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 75, "fixedTrialCycles": 97, "graceDays": 95}, "region": "vYh0V6mj", "regionData": [{"currencyCode": "YP9nvrjr", "currencyNamespace": "1Ui1SQC0", "currencyType": "VIRTUAL", "discountAmount": 81, "discountExpireAt": "1998-08-25T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1971-05-07T00:00:00Z", "discountedPrice": 72, "expireAt": "1988-10-20T00:00:00Z", "price": 99, "purchaseAt": "1999-06-22T00:00:00Z", "trialPrice": 29}, {"currencyCode": "Xrg4tQRh", "currencyNamespace": "WGyDQV2g", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1980-09-06T00:00:00Z", "discountPercentage": 85, "discountPurchaseAt": "1976-09-20T00:00:00Z", "discountedPrice": 40, "expireAt": "1991-11-21T00:00:00Z", "price": 88, "purchaseAt": "1999-01-29T00:00:00Z", "trialPrice": 5}, {"currencyCode": "OzzjYxKg", "currencyNamespace": "TV2uR5VQ", "currencyType": "VIRTUAL", "discountAmount": 90, "discountExpireAt": "1982-03-22T00:00:00Z", "discountPercentage": 31, "discountPurchaseAt": "1973-06-01T00:00:00Z", "discountedPrice": 0, "expireAt": "1971-06-17T00:00:00Z", "price": 47, "purchaseAt": "1980-09-10T00:00:00Z", "trialPrice": 72}], "seasonType": "PASS", "sku": "9rK9baIi", "stackable": false, "status": "INACTIVE", "tags": ["JAsHU93i", "Rg0SxSuo", "QNDQ79g4"], "targetCurrencyCode": "VzhOaeIf", "targetItemId": "bjp8FcBY", "targetNamespace": "ytAKCs0G", "thumbnailUrl": "TR967puG", "title": "GEmckTAM", "updatedAt": "1978-06-07T00:00:00Z", "useCount": 2}, "namespace": "vEvVeXuz", "order": {"currency": {"currencyCode": "VKSugWT2", "currencySymbol": "iqto6Drx", "currencyType": "VIRTUAL", "decimals": 11, "namespace": "yQVpj3Gf"}, "ext": {"Wl3c9wsk": {}, "RjkOYbvj": {}, "kRyGERp8": {}}, "free": true}, "source": "PURCHASE"}, "script": "SXoA5k77", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'K6fdQNq2' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "bcCxex8M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'ZOp963cC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id '4OnpILYP' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "RRZGKqC2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'A8P3622C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "5881vLHa", "dryRun": false, "fulfillmentUrl": "fd8KmBXy", "itemType": "INGAMEITEM", "purchaseConditionUrl": "cC3SZfDl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'Uqe9u8Bs' \
    --itemType 'BUNDLE' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'XVPHiGXI' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "8zGv6Yxf", "dryRun": true, "fulfillmentUrl": "T1k5eGnx", "purchaseConditionUrl": "AXKXXxDV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'eloIpT34' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id '4WpnHB6A' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '21' \
    --name 'kKBMRqDO' \
    --offset '53' \
    --tag 'FrFA2mcS' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "356d4yYr", "items": [{"extraSubscriptionDays": 49, "itemId": "GWJY4rtu", "itemName": "clxTTIYL", "quantity": 72}, {"extraSubscriptionDays": 41, "itemId": "AVUmwOiC", "itemName": "nQ31fmnc", "quantity": 55}, {"extraSubscriptionDays": 41, "itemId": "vbVXHh8S", "itemName": "KUYld7tW", "quantity": 58}], "maxRedeemCountPerCampaignPerUser": 32, "maxRedeemCountPerCode": 64, "maxRedeemCountPerCodePerUser": 53, "maxSaleCount": 10, "name": "VuKQm9EZ", "redeemEnd": "1993-11-24T00:00:00Z", "redeemStart": "1983-07-23T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["2NAeFCdW", "VpFzYTc9", "kRGfEQsh"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'jxMaZfaE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "kk2i8QDq", "items": [{"extraSubscriptionDays": 81, "itemId": "rHNZ7b7j", "itemName": "lWOujLCU", "quantity": 91}, {"extraSubscriptionDays": 42, "itemId": "p2vBw0ZS", "itemName": "52TeriA7", "quantity": 68}, {"extraSubscriptionDays": 34, "itemId": "ip3iubb3", "itemName": "bXn4HvCA", "quantity": 81}], "maxRedeemCountPerCampaignPerUser": 44, "maxRedeemCountPerCode": 75, "maxRedeemCountPerCodePerUser": 25, "maxSaleCount": 91, "name": "p0GA4KHf", "redeemEnd": "1977-05-13T00:00:00Z", "redeemStart": "1991-02-03T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["E0SnqVzr", "2cPI6kSO", "ziSpZxoe"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId '00cpmLEG' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'o9mrTlaH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId '9F6eFnoq' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "8iLEr7V8", "localizationDisplayNames": {"jAHqUt98": "pwDwXDOA", "WSaGn10c": "6HH3sB7h", "QAxuLuu8": "maPCo3Jm"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'AuKz4gan' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId '8emwuJqx' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'UCAP1K62' \
    --namespace $AB_NAMESPACE \
    --storeId 'Qlr0DRzK' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"TdVKhu9U": "y26yXEDs", "iMHmUwqW": "THA23cRv", "kgYz7im7": "PSXxGjqn"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'o50909Pr' \
    --namespace $AB_NAMESPACE \
    --storeId 'KebCihiG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'S4NgVaUl' \
    --namespace $AB_NAMESPACE \
    --storeId 'GUCiFt4R' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'fBkFAvuq' \
    --namespace $AB_NAMESPACE \
    --storeId 'cEtGqRCv' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'HRFtp4Rj' \
    --namespace $AB_NAMESPACE \
    --storeId 'sGddWr8o' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'aXgHT9mn' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '16' \
    --code '2OGbXNOp' \
    --limit '28' \
    --offset '0' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 75}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'mk7BsUiv' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'xvbJ7MBa' \
    --namespace $AB_NAMESPACE \
    --batchNo '17' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId '9lAJAEUB' \
    --namespace $AB_NAMESPACE \
    --batchNo '3' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'EjA2gqgI' \
    --namespace $AB_NAMESPACE \
    --batchNo '63' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'LJEjavRm' \
    --namespace $AB_NAMESPACE \
    --code '6RarBzxP' \
    --limit '84' \
    --offset '9' \
    --userId 'aZMa3HxN' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'dFtRmss3' \
    --namespace $AB_NAMESPACE \
    --redeemable 'true' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'xQjAvZsU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'xsocNoru' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "hZXeVz78", "currencySymbol": "GENSDMhy", "currencyType": "VIRTUAL", "decimals": 62, "localizationDescriptions": {"npaCpxAP": "apAJYOQ6", "RqYMOImY": "RubD1zXY", "HhZ6sy2Z": "uCy0Q7dK"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"LR1GnOOT": "TBQaQQgn", "OoaLnQnn": "SR22Rnn3", "JRpmqCcW": "aDLwz24T"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'MoEkm01n' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'g3QHV903' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'H3gqNDh7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'OzV0U5Qi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "7Df8lVXe", "rewards": [{"currency": {"currencyCode": "p4dcAwkL", "namespace": "0IXU3WO8"}, "item": {"itemId": "LxQGQmrz", "itemSku": "rONnz67a", "itemType": "FVQudd6w"}, "quantity": 78, "type": "ITEM"}, {"currency": {"currencyCode": "mCpCBeV5", "namespace": "kweoQXTR"}, "item": {"itemId": "1bXw53V3", "itemSku": "T68QiSNa", "itemType": "hce2AiPF"}, "quantity": 37, "type": "CURRENCY"}, {"currency": {"currencyCode": "6KteWJOG", "namespace": "AitQZ6f7"}, "item": {"itemId": "Um4EZRAe", "itemSku": "9nlYQ083", "itemType": "zLGp2feu"}, "quantity": 9, "type": "ITEM"}]}, {"id": "6tx8FPVe", "rewards": [{"currency": {"currencyCode": "qE13ELUS", "namespace": "ibOH54EZ"}, "item": {"itemId": "FbQ5x7nz", "itemSku": "MGACeKYx", "itemType": "SkmSVzXJ"}, "quantity": 72, "type": "ITEM"}, {"currency": {"currencyCode": "hs0Irj44", "namespace": "iJJat5Fu"}, "item": {"itemId": "e66pIRlc", "itemSku": "QazILCSH", "itemType": "lGchYVNJ"}, "quantity": 59, "type": "CURRENCY"}, {"currency": {"currencyCode": "dMXzLxcP", "namespace": "erxA0yfZ"}, "item": {"itemId": "hLMWBEmt", "itemSku": "CyjQMahX", "itemType": "AV6vPggh"}, "quantity": 96, "type": "ITEM"}]}, {"id": "gXsHLsWR", "rewards": [{"currency": {"currencyCode": "KdKORC7Q", "namespace": "BffDWJIQ"}, "item": {"itemId": "1KdVriMN", "itemSku": "ydVm3X2V", "itemType": "CdGKLFWG"}, "quantity": 16, "type": "ITEM"}, {"currency": {"currencyCode": "CiA9SnaT", "namespace": "AquuNhqd"}, "item": {"itemId": "cDqTLN3e", "itemSku": "rZ8Rw6tI", "itemType": "uye5bSnK"}, "quantity": 21, "type": "ITEM"}, {"currency": {"currencyCode": "OcN4n3l2", "namespace": "iHteVl4B"}, "item": {"itemId": "Gk6taXAM", "itemSku": "sNamJ3ce", "itemType": "xCJI1Nl4"}, "quantity": 79, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"OjlPt9p8": "ctYw5vDO", "wnPX9y3B": "AMcBJUju", "lLA9aKhi": "hcV15Ilw"}}, {"platform": "PSN", "platformDlcIdMap": {"Nh4o0H6a": "iJgbuf3a", "x3rLGFra": "afsihjOa", "bFfa2vVU": "NoAOOfJh"}}, {"platform": "PSN", "platformDlcIdMap": {"JrLi111l": "hOE7N1zZ", "V53R5M94": "eHkCccbT", "xeTnQOCv": "iECoXIk9"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'APP' \
    --entitlementName 'p9PyMXmv' \
    --itemId '["QNJIP4ld", "83ElrkIu", "fcvLVxIP"]' \
    --limit '39' \
    --offset '82' \
    --userId 'zz2Qc8sL' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'hA6ZF7rh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '48' \
    --offset '34' \
    --status 'FAIL' \
    --userId 'SmswF4Pf' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "y0hSyEAh", "password": "XUpSmeVt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "Ezm2qn4q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "rNbU2iZE", "serviceAccountId": "1usnKFm3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "sku2HhGH", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"bye2YheO": "ZC6uqVKt", "TQwmyrZv": "hepUqajN", "I675tvbE": "z7pqIftg"}}, {"itemIdentity": "EnbBuITS", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"myaPrEna": "4McJLi8z", "Dk6vefA5": "skovefQH", "tI75kuu2": "gN8L1czi"}}, {"itemIdentity": "1iKRO9dS", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"tE7pYKy1": "rkEncp1a", "WkbDXR0l": "8PFLywAH", "6V3ENFWw": "mXvY60yT"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "AfJ98J2Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "5BOdRQzD", "publisherAuthenticationKey": "QK09luSb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "QInaHw3L", "clientSecret": "Fke2aYtd", "organizationId": "nRsPYDBH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "hr6Agcho"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'vGVmEYEi' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature '92UfJ3I5' \
    --itemId 'MGKesqkg' \
    --itemType 'LOOTBOX' \
    --endTime 'naLTFDNz' \
    --startTime 'rrEmVBHO' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature '8k8QcWu0' \
    --itemId 'bWtesCQ5' \
    --itemType 'CODE' \
    --endTime 'xgJkmQpM' \
    --startTime 'lhhJY7dC' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "QybWBAR0", "targetItemId": "xO3p03TS", "targetNamespace": "kqWWrdll"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '86ahSOpk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "0a8INvdy", "appType": "DLC", "baseAppId": "iFX4WUaP", "boothName": "qx8bJuGW", "categoryPath": "wP5HjInD", "clazz": "Q039CVmF", "displayOrder": 17, "entitlementType": "CONSUMABLE", "ext": {"Wd7UrqD3": {}, "xgWpTNxW": {}, "1SDuDc7h": {}}, "features": ["dm7rgKJo", "slSuIDoU", "QOr970ny"], "images": [{"as": "zaqllyeZ", "caption": "c3PUDstw", "height": 98, "imageUrl": "H3Z0Fe4e", "smallImageUrl": "jorv5ayp", "width": 19}, {"as": "1ups2NNc", "caption": "VIEVDiBi", "height": 83, "imageUrl": "PLFUCyqm", "smallImageUrl": "UNraM1XU", "width": 71}, {"as": "P6oC3Zs9", "caption": "zbsA75vA", "height": 61, "imageUrl": "cXCQbU0U", "smallImageUrl": "gixL3HQG", "width": 26}], "itemIds": ["jCJMyvAl", "zZh1ca1b", "vYwnconi"], "itemQty": {"w2fVwJlU": 64, "oP8QxZcn": 42, "OmSQP98m": 9}, "itemType": "BUNDLE", "listable": false, "localizations": {"O3sv4C7K": {"description": "1VtQn5eI", "localExt": {"ORr19i4J": {}, "MUlRrLtw": {}, "iILvEAxV": {}}, "longDescription": "AfUiKzI2", "title": "1wyEkHaj"}, "QWRuHW1o": {"description": "OnGlFy9O", "localExt": {"rrGrD6EQ": {}, "HzP783H4": {}, "lmDwTUsm": {}}, "longDescription": "9vchj24t", "title": "q4GYIqyS"}, "1tiMJXvq": {"description": "F0sXz95L", "localExt": {"3RGB20N4": {}, "L76l28IH": {}, "IyoE1LFX": {}}, "longDescription": "D17Jwtbd", "title": "ULHH4QUn"}}, "lootBoxConfig": {"rewardCount": 61, "rewards": [{"lootBoxItems": [{"count": 91, "itemId": "9J6fT2EL", "itemSku": "TkD7mmjL", "itemType": "8YDc6Ov1"}, {"count": 85, "itemId": "Rw1by2qZ", "itemSku": "79et6t7B", "itemType": "pjL7wCy6"}, {"count": 54, "itemId": "fTPLZo9V", "itemSku": "mjZg0nCF", "itemType": "REZOulxW"}], "name": "pQvRsiLQ", "odds": 0.43691898214497094, "type": "REWARD", "weight": 94}, {"lootBoxItems": [{"count": 61, "itemId": "46HHVGBp", "itemSku": "t50U85wh", "itemType": "73az9tSB"}, {"count": 0, "itemId": "VIgzBmqo", "itemSku": "rM6OaCFr", "itemType": "RKpsmIyT"}, {"count": 46, "itemId": "tSzXY1iv", "itemSku": "nIat3xgY", "itemType": "00C5236K"}], "name": "j9WOye75", "odds": 0.24264493345218807, "type": "REWARD_GROUP", "weight": 61}, {"lootBoxItems": [{"count": 65, "itemId": "ikCnZ1YC", "itemSku": "iPRqNXYH", "itemType": "85zoDQ5X"}, {"count": 44, "itemId": "38Jx8nTx", "itemSku": "jwAmaYvP", "itemType": "9SJFV4b7"}, {"count": 87, "itemId": "Hqbs7a3P", "itemSku": "1M139v6I", "itemType": "euVqXsOi"}], "name": "NXdwdjRi", "odds": 0.01982478565926027, "type": "PROBABILITY_GROUP", "weight": 57}]}, "maxCount": 57, "maxCountPerUser": 57, "name": "hf8iDnx2", "optionBoxConfig": {"boxItems": [{"count": 58, "itemId": "EEbCT8r0", "itemSku": "WadkMe6y", "itemType": "JIuoifRc"}, {"count": 95, "itemId": "heGKAmXS", "itemSku": "3GEYkM1W", "itemType": "tkLtTwfo"}, {"count": 15, "itemId": "w3pyqU2y", "itemSku": "6N2OpGO2", "itemType": "7Q5AG1UN"}]}, "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 90, "fixedTrialCycles": 77, "graceDays": 92}, "regionData": {"F7pC3BR8": [{"currencyCode": "YwpjnMhE", "currencyNamespace": "fCYzFmlH", "currencyType": "VIRTUAL", "discountAmount": 84, "discountExpireAt": "1973-10-02T00:00:00Z", "discountPercentage": 91, "discountPurchaseAt": "1996-09-11T00:00:00Z", "discountedPrice": 86, "expireAt": "1996-09-16T00:00:00Z", "price": 32, "purchaseAt": "1998-07-13T00:00:00Z", "trialPrice": 17}, {"currencyCode": "sDUyy46P", "currencyNamespace": "tBCoYkgE", "currencyType": "REAL", "discountAmount": 16, "discountExpireAt": "1993-11-20T00:00:00Z", "discountPercentage": 10, "discountPurchaseAt": "1978-11-02T00:00:00Z", "discountedPrice": 67, "expireAt": "1975-11-25T00:00:00Z", "price": 16, "purchaseAt": "1998-05-07T00:00:00Z", "trialPrice": 20}, {"currencyCode": "CP4UmhNy", "currencyNamespace": "aVGZdgFl", "currencyType": "VIRTUAL", "discountAmount": 34, "discountExpireAt": "1982-02-11T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1985-05-15T00:00:00Z", "discountedPrice": 31, "expireAt": "1974-01-09T00:00:00Z", "price": 47, "purchaseAt": "1976-09-14T00:00:00Z", "trialPrice": 67}], "27IjROxY": [{"currencyCode": "bScsaTCz", "currencyNamespace": "3VNpmhyu", "currencyType": "VIRTUAL", "discountAmount": 25, "discountExpireAt": "1986-05-17T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1991-03-25T00:00:00Z", "discountedPrice": 94, "expireAt": "1998-08-18T00:00:00Z", "price": 23, "purchaseAt": "1984-02-27T00:00:00Z", "trialPrice": 62}, {"currencyCode": "93eyPgTN", "currencyNamespace": "7uF8Giuv", "currencyType": "REAL", "discountAmount": 51, "discountExpireAt": "1976-09-08T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1976-10-01T00:00:00Z", "discountedPrice": 41, "expireAt": "1976-08-24T00:00:00Z", "price": 82, "purchaseAt": "1979-07-20T00:00:00Z", "trialPrice": 23}, {"currencyCode": "fe8wQC1a", "currencyNamespace": "sn4HsV6K", "currencyType": "REAL", "discountAmount": 96, "discountExpireAt": "1986-02-26T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1995-01-04T00:00:00Z", "discountedPrice": 93, "expireAt": "1989-03-18T00:00:00Z", "price": 98, "purchaseAt": "1988-05-31T00:00:00Z", "trialPrice": 41}], "qhAREm7M": [{"currencyCode": "ToGbs7C2", "currencyNamespace": "bM2hRFCK", "currencyType": "REAL", "discountAmount": 82, "discountExpireAt": "1981-11-09T00:00:00Z", "discountPercentage": 70, "discountPurchaseAt": "1983-01-10T00:00:00Z", "discountedPrice": 5, "expireAt": "1977-09-29T00:00:00Z", "price": 10, "purchaseAt": "1979-04-27T00:00:00Z", "trialPrice": 95}, {"currencyCode": "XnY15Utm", "currencyNamespace": "gkZtBB7b", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1985-10-16T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1975-05-30T00:00:00Z", "discountedPrice": 90, "expireAt": "1997-03-11T00:00:00Z", "price": 6, "purchaseAt": "1979-06-11T00:00:00Z", "trialPrice": 27}, {"currencyCode": "icnyclrf", "currencyNamespace": "Fw8N4Sfc", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1972-07-25T00:00:00Z", "discountPercentage": 2, "discountPurchaseAt": "1977-04-28T00:00:00Z", "discountedPrice": 15, "expireAt": "1972-08-20T00:00:00Z", "price": 79, "purchaseAt": "1991-03-18T00:00:00Z", "trialPrice": 66}]}, "seasonType": "TIER", "sku": "xtUfTekZ", "stackable": true, "status": "INACTIVE", "tags": ["jO32trW5", "rlyiqYpS", "QAjYtJ9F"], "targetCurrencyCode": "z7tlPjL9", "targetNamespace": "o5KDpykC", "thumbnailUrl": "n3MuxXaB", "useCount": 53}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'kTz8GqT4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'UeEF3v4F' \
    --appId 'AxmlDcnp' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DLC' \
    --availableDate 'K8KiQY8I' \
    --baseAppId 'idD2lYhL' \
    --categoryPath 'EIQ9uQMw' \
    --features '13QOOHYE' \
    --includeSubCategoryItem 'true' \
    --itemType 'APP' \
    --limit '75' \
    --offset '35' \
    --region 'I5QdgUvY' \
    --sortBy '["displayOrder", "displayOrder:desc", "updatedAt:asc"]' \
    --storeId 'ximGUNOq' \
    --tags 'KGWfMcpF' \
    --targetNamespace 'uDTJwXeE' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["zIpFdK6m", "huVGcVAa", "9EYuGeRJ"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'O4nsd8zQ' \
    --sku 'TnIl2QgL' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'hZ2KjbOG' \
    --populateBundle 'false' \
    --region 'TZYtnfBb' \
    --storeId '7gWLFfFG' \
    --sku 'Impe2gjS' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'fbAcJyQ3' \
    --sku 'meUR6WMO' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["fmCJPlMh", "g196iPxL", "TUs2suKs"]' \
    --storeId 'Gu2EJgaK' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'JZqCrsfF' \
    --region 'pcv41ADN' \
    --storeId 'uHPqVhbJ' \
    --itemIds 'VwcKUrlf' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["ewM7R9zW", "Fv9882RW", "kXfJqyN4"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'MLr6N3NK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'COINS' \
    --limit '69' \
    --offset '5' \
    --sortBy 'TQW2wNds' \
    --storeId 't2Iq95NN' \
    --keyword 'sLWOzcTB' \
    --language 'pzjK0aa3' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '81' \
    --offset '11' \
    --sortBy '["createdAt", "displayOrder:asc", "name:desc"]' \
    --storeId 'Tyhe219l' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'TU6OoIfC' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '5nKQ96Q9' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "t3OVRRo9", "appType": "DEMO", "baseAppId": "SDf8NyR1", "boothName": "rd6HBKXs", "categoryPath": "xMjjse1a", "clazz": "Su6Vq7yy", "displayOrder": 100, "entitlementType": "DURABLE", "ext": {"syX0p5aY": {}, "btPiJMlq": {}, "IVv3E5Yb": {}}, "features": ["K3e0SabF", "yWqUc7IF", "5ATMj3Fi"], "images": [{"as": "I4bE7xWT", "caption": "LnxCSetp", "height": 8, "imageUrl": "pkFdFH6c", "smallImageUrl": "0kVY3ifi", "width": 88}, {"as": "F2AcWx9H", "caption": "uTG2NMKG", "height": 6, "imageUrl": "0TKyoVCf", "smallImageUrl": "fE54uyYO", "width": 44}, {"as": "0gfypFK1", "caption": "VycnAYfa", "height": 47, "imageUrl": "uCrwVTIT", "smallImageUrl": "fR01va18", "width": 97}], "itemIds": ["SO2vc9Hn", "ttc0jPVx", "O4nDe9oh"], "itemQty": {"zUJpBtLG": 35, "VR9dECZr": 32, "uv1SGtE9": 3}, "itemType": "SUBSCRIPTION", "listable": true, "localizations": {"SBGlsCsv": {"description": "4BhvpzwE", "localExt": {"3BPdYoFO": {}, "ejMRbBEZ": {}, "FYthKBoR": {}}, "longDescription": "OR7zjGKS", "title": "IQKzNzjN"}, "6d5fksYb": {"description": "9vjP75jo", "localExt": {"43L1yhPV": {}, "DJJc0tP5": {}, "yt75nHYV": {}}, "longDescription": "KFIWAk54", "title": "Xn8OXnY8"}, "mFrWtgL0": {"description": "6OFupIDC", "localExt": {"woYqxUZt": {}, "k9dDIMcX": {}, "gG4RaG3i": {}}, "longDescription": "750GLSGC", "title": "qT3DdCbe"}}, "lootBoxConfig": {"rewardCount": 29, "rewards": [{"lootBoxItems": [{"count": 85, "itemId": "YqKM9QjP", "itemSku": "gjDkite3", "itemType": "0zrPuQl9"}, {"count": 90, "itemId": "XDeYofdI", "itemSku": "VtypXZLW", "itemType": "uAyX2FS4"}, {"count": 43, "itemId": "Koa6wrLp", "itemSku": "SpU6v6An", "itemType": "rFcppHC5"}], "name": "SgA1IGIg", "odds": 0.20842061701086367, "type": "REWARD_GROUP", "weight": 88}, {"lootBoxItems": [{"count": 91, "itemId": "535C2ErO", "itemSku": "8yeLe9NM", "itemType": "pqVCUPUP"}, {"count": 9, "itemId": "Jd5eVIpY", "itemSku": "U2whRQLS", "itemType": "GvmFpqoH"}, {"count": 8, "itemId": "OYDI9RiM", "itemSku": "7in9cZQp", "itemType": "unqKMPY5"}], "name": "aUT9AuMU", "odds": 0.22676427068391547, "type": "REWARD", "weight": 6}, {"lootBoxItems": [{"count": 64, "itemId": "vp5SzuGY", "itemSku": "GDTqN0UV", "itemType": "bPOhiJN3"}, {"count": 57, "itemId": "fZNpfudg", "itemSku": "njz53wO0", "itemType": "M3SxhTgA"}, {"count": 42, "itemId": "tdQI7hvQ", "itemSku": "qJY1LGnA", "itemType": "Dr26YLXj"}], "name": "nS6zhTxc", "odds": 0.43883191741532124, "type": "REWARD", "weight": 35}]}, "maxCount": 19, "maxCountPerUser": 17, "name": "742T61BC", "optionBoxConfig": {"boxItems": [{"count": 72, "itemId": "WdMhvkSX", "itemSku": "78zAmPHj", "itemType": "dtq9eslJ"}, {"count": 52, "itemId": "dW7hg9Ht", "itemSku": "AlGGfLaF", "itemType": "cO32yIpo"}, {"count": 91, "itemId": "pxanEufR", "itemSku": "s4TCzb1C", "itemType": "7AdS1Hzx"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 43, "fixedTrialCycles": 5, "graceDays": 97}, "regionData": {"Noa78bXN": [{"currencyCode": "O1sZXYNu", "currencyNamespace": "0YQ84xme", "currencyType": "REAL", "discountAmount": 89, "discountExpireAt": "1998-04-11T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1991-04-30T00:00:00Z", "discountedPrice": 3, "expireAt": "1979-01-22T00:00:00Z", "price": 39, "purchaseAt": "1985-06-12T00:00:00Z", "trialPrice": 14}, {"currencyCode": "YKX9NDB2", "currencyNamespace": "q3yqtfDW", "currencyType": "REAL", "discountAmount": 4, "discountExpireAt": "1985-12-31T00:00:00Z", "discountPercentage": 84, "discountPurchaseAt": "1993-09-15T00:00:00Z", "discountedPrice": 79, "expireAt": "1999-04-23T00:00:00Z", "price": 17, "purchaseAt": "1980-04-27T00:00:00Z", "trialPrice": 40}, {"currencyCode": "Rg4YzoYT", "currencyNamespace": "EVMaUxAr", "currencyType": "REAL", "discountAmount": 66, "discountExpireAt": "1987-06-05T00:00:00Z", "discountPercentage": 17, "discountPurchaseAt": "1979-08-12T00:00:00Z", "discountedPrice": 63, "expireAt": "1976-04-06T00:00:00Z", "price": 17, "purchaseAt": "1979-02-17T00:00:00Z", "trialPrice": 74}], "yckFkGuz": [{"currencyCode": "6fFdn5eD", "currencyNamespace": "utcDKDUt", "currencyType": "VIRTUAL", "discountAmount": 98, "discountExpireAt": "1988-05-13T00:00:00Z", "discountPercentage": 49, "discountPurchaseAt": "1991-07-02T00:00:00Z", "discountedPrice": 23, "expireAt": "1994-07-20T00:00:00Z", "price": 6, "purchaseAt": "1973-06-21T00:00:00Z", "trialPrice": 22}, {"currencyCode": "Debixbtz", "currencyNamespace": "YA8ohAe4", "currencyType": "VIRTUAL", "discountAmount": 89, "discountExpireAt": "1986-06-25T00:00:00Z", "discountPercentage": 82, "discountPurchaseAt": "1991-07-20T00:00:00Z", "discountedPrice": 10, "expireAt": "1993-07-23T00:00:00Z", "price": 59, "purchaseAt": "1992-08-13T00:00:00Z", "trialPrice": 66}, {"currencyCode": "IFkMBO43", "currencyNamespace": "U8bPauLa", "currencyType": "VIRTUAL", "discountAmount": 51, "discountExpireAt": "1973-02-14T00:00:00Z", "discountPercentage": 88, "discountPurchaseAt": "1987-08-25T00:00:00Z", "discountedPrice": 14, "expireAt": "1971-10-04T00:00:00Z", "price": 69, "purchaseAt": "1971-01-30T00:00:00Z", "trialPrice": 12}], "TDOPXWwA": [{"currencyCode": "cwsPvpr7", "currencyNamespace": "wA7SDFt9", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1989-02-11T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1976-03-04T00:00:00Z", "discountedPrice": 13, "expireAt": "1991-03-07T00:00:00Z", "price": 68, "purchaseAt": "1992-11-04T00:00:00Z", "trialPrice": 59}, {"currencyCode": "s8A1ktYv", "currencyNamespace": "g0uBNrYI", "currencyType": "VIRTUAL", "discountAmount": 56, "discountExpireAt": "1982-10-30T00:00:00Z", "discountPercentage": 95, "discountPurchaseAt": "1975-03-11T00:00:00Z", "discountedPrice": 77, "expireAt": "1996-03-10T00:00:00Z", "price": 47, "purchaseAt": "1992-02-07T00:00:00Z", "trialPrice": 78}, {"currencyCode": "YFkqHn2P", "currencyNamespace": "s8uXEAMQ", "currencyType": "REAL", "discountAmount": 46, "discountExpireAt": "1981-05-01T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1987-03-05T00:00:00Z", "discountedPrice": 50, "expireAt": "1988-07-28T00:00:00Z", "price": 58, "purchaseAt": "1994-11-23T00:00:00Z", "trialPrice": 96}]}, "seasonType": "PASS", "sku": "B4lL2z1U", "stackable": true, "status": "ACTIVE", "tags": ["rZMKe4gk", "RhlEzk6A", "RnTgk5tw"], "targetCurrencyCode": "hx2RGxvA", "targetNamespace": "5OgtFOhw", "thumbnailUrl": "7XcQ1uO9", "useCount": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'EaJ21I2E' \
    --namespace $AB_NAMESPACE \
    --storeId 'j4eRp8YO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'u9MIP0dc' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'TFVE4wsh' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 28, "orderNo": "oyrOUbdu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'W0AHVOxs' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'aaXbmIe1' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '1IzRRd2H' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "SvtvmsRq", "previewUrl": "gDBZcw2Y", "thumbnailUrl": "EYY8TcPY", "type": "video", "url": "9YosP1pK", "videoSource": "vimeo"}, {"alt": "4gD05OGl", "previewUrl": "wrpE2GDb", "thumbnailUrl": "vY732I9p", "type": "image", "url": "91lQlDcb", "videoSource": "youtube"}, {"alt": "7QZxrSJ4", "previewUrl": "6VFihDTY", "thumbnailUrl": "wfvXWonH", "type": "image", "url": "E6FIHioh", "videoSource": "generic"}], "developer": "eTdt8dhI", "forumUrl": "z3PjAs6u", "genres": ["Casual", "Simulation", "Indie"], "localizations": {"uB4sEFg7": {"announcement": "Bov6J1wp", "slogan": "nMRNO2e8"}, "KrVFyq0y": {"announcement": "CxVZg1ic", "slogan": "jCfA2B8T"}, "tt1eLeRS": {"announcement": "QPJxQrY4", "slogan": "mvLoud9i"}}, "platformRequirements": {"tmCm0Pov": [{"additionals": "xhfBwSmr", "directXVersion": "ry9Ri83W", "diskSpace": "1idRQNHe", "graphics": "8wuZe5h5", "label": "iYBTgYGL", "osVersion": "Gu5szqAQ", "processor": "Zq4GiaKT", "ram": "D0Mj9mcT", "soundCard": "Mpfz6SCR"}, {"additionals": "OmMzxp2c", "directXVersion": "5ihDDm98", "diskSpace": "iqgyblV9", "graphics": "wKMd5r4Q", "label": "pfVSZNAf", "osVersion": "2VUwYYub", "processor": "wiB5Ivtu", "ram": "xGizMDPm", "soundCard": "JXzaMkb2"}, {"additionals": "9PGhy2oS", "directXVersion": "Pfrv1otS", "diskSpace": "ahhc8QHo", "graphics": "v38e3kqr", "label": "w4kxXwQj", "osVersion": "WsajCtlF", "processor": "UJ6PrJDZ", "ram": "ewyMIgjK", "soundCard": "q0uPANHu"}], "1UqiIkdn": [{"additionals": "y35B8qps", "directXVersion": "DdLnqnzl", "diskSpace": "Or0e4sai", "graphics": "TfBe4b4Z", "label": "L7XgpO79", "osVersion": "IemUhwY0", "processor": "xPWZu5u2", "ram": "n34IukbA", "soundCard": "CVVmKrSC"}, {"additionals": "6vJXNDlK", "directXVersion": "AKykV57a", "diskSpace": "xiRhnc5J", "graphics": "xKEhhv7x", "label": "8hJvlu4I", "osVersion": "JDlWXmqw", "processor": "FffAmefT", "ram": "49hSIL8e", "soundCard": "blr1VAgV"}, {"additionals": "SOAfEKBw", "directXVersion": "DC8r3qEj", "diskSpace": "GiDlRNSy", "graphics": "E5g9gOJy", "label": "XQlkY60n", "osVersion": "80Jr94QG", "processor": "Fk8PBTEF", "ram": "DFx06WBt", "soundCard": "0rlh1TsX"}], "5yd0kD7n": [{"additionals": "1sJj1BDb", "directXVersion": "S9AzYgdS", "diskSpace": "23zwcSAH", "graphics": "rJZbe3dt", "label": "txiQoWTU", "osVersion": "Dsn7QfmW", "processor": "f9iAd959", "ram": "VqbtHJwc", "soundCard": "qQUsmkvx"}, {"additionals": "M0LLY17D", "directXVersion": "ul0OHLYi", "diskSpace": "5HqHoYJr", "graphics": "Ba07L1fl", "label": "jtVbxNwo", "osVersion": "51hiOK3G", "processor": "LXVzGQuv", "ram": "9iuKWHZd", "soundCard": "u8jqQI0F"}, {"additionals": "geccOjs0", "directXVersion": "ZDdaOZOz", "diskSpace": "LJqDAIJ0", "graphics": "rHQCbLsA", "label": "xZS8QP8V", "osVersion": "uO5w4qVo", "processor": "Rx9ieb87", "ram": "344Kcjls", "soundCard": "BO02zV5W"}]}, "platforms": ["Windows", "Linux", "MacOS"], "players": ["LocalCoop", "Multi", "LocalCoop"], "primaryGenre": "Adventure", "publisher": "s3lYduFC", "releaseDate": "1999-06-23T00:00:00Z", "websiteUrl": "O4P8n5TS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'RrvH8jvA' \
    --namespace $AB_NAMESPACE \
    --storeId 'VtF2HHgt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'ng2ZEhcI' \
    --namespace $AB_NAMESPACE \
    --storeId 'CF5uQa5n' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'Z5cuKAiL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'fN78th38' \
    --namespace $AB_NAMESPACE \
    --storeId 'jFHWaD0q' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'B1OSRK5I' \
    --itemId 'GFuQxAJM' \
    --namespace $AB_NAMESPACE \
    --storeId 'WGPhLUeh' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'JX4ZLX0D' \
    --itemId 'Tn4e21IJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'pAPIOvyI' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'tDJ5sFMo' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'hnMjTf7X' \
    --populateBundle 'false' \
    --region 'GHtiVbCm' \
    --storeId 'XE0sCZus' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 64, "comparison": "isLessThanOrEqual", "name": "EL2wCy2O", "predicateType": "SeasonTierPredicate", "value": "K7psb1Z8", "values": ["yEaOe6sN", "ASLzNmBK", "0HoxThKL"]}, {"anyOf": 6, "comparison": "is", "name": "MsnWqobG", "predicateType": "SeasonPassPredicate", "value": "RyHjKNwc", "values": ["g3p2vzRF", "JHLPh522", "5T3PCy0F"]}, {"anyOf": 24, "comparison": "isGreaterThanOrEqual", "name": "0bSHugog", "predicateType": "SeasonTierPredicate", "value": "HCcjN1v4", "values": ["5U4rTLFm", "NahvmHtM", "RWS4Sorp"]}]}, {"operator": "and", "predicates": [{"anyOf": 39, "comparison": "excludes", "name": "k4Lt0SOK", "predicateType": "SeasonPassPredicate", "value": "FKp4brMN", "values": ["ju4mvMq7", "cb0QLstY", "CTpSkM52"]}, {"anyOf": 30, "comparison": "is", "name": "mnRULkPH", "predicateType": "SeasonPassPredicate", "value": "oUE1TFLT", "values": ["thuJW8P5", "8Rmu81lL", "YdX5x8iq"]}, {"anyOf": 77, "comparison": "is", "name": "OVD87k1l", "predicateType": "EntitlementPredicate", "value": "0pXDJtu2", "values": ["PvQOIs0b", "rU8cuaVR", "094O2px0"]}]}, {"operator": "and", "predicates": [{"anyOf": 2, "comparison": "excludes", "name": "58GXc6N9", "predicateType": "EntitlementPredicate", "value": "xpWEqTaS", "values": ["keIXGVme", "mpEHnmRG", "aXU8LPDo"]}, {"anyOf": 3, "comparison": "isGreaterThan", "name": "DVoOwJ0n", "predicateType": "SeasonPassPredicate", "value": "971ywkSi", "values": ["K4Be8zZK", "XvzGAnUh", "w9tRDQYf"]}, {"anyOf": 23, "comparison": "includes", "name": "o0JltFiG", "predicateType": "SeasonTierPredicate", "value": "mfVxhny1", "values": ["hB5pdw4I", "UdYmYa8E", "LuLfGCwD"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'bhct5gUr' \
    --namespace $AB_NAMESPACE \
    --storeId 'zJLLIVf6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "5IHGGneA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'tS2GH1Sb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '95' \
    --name 'SoIaMs2O' \
    --offset '47' \
    --tag 'xgCJcGQn' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "Zjj4NKHH", "name": "eU51dn0L", "status": "INACTIVE", "tags": ["RTfSW1S9", "ObjdWa6Z", "HiEhrae8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
eval_tap 0 112 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'Jn5LCttR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "5Qt3EP2Y", "name": "wgw05hwx", "status": "ACTIVE", "tags": ["gqqtEVLx", "idwhaAlU", "rLyOgvsu"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'GSlx084o' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId '33sR1x6B' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'W63NhjpM' \
    --namespace $AB_NAMESPACE \
    --limit '31' \
    --offset '76' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'YyzKvNH2' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'F5oJ0w4H' \
    --limit '5' \
    --offset '55' \
    --orderNos '["oQjObOCa", "WM4nA2bi", "sVGRRPZg"]' \
    --sortBy 'd4Faenbf' \
    --startTime 'jc6IqcEX' \
    --status 'REFUNDED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'bvfwHf5B' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "rONjMmdZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'gPQ0FUpJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "TtLRAlSK", "privateKey": "MxdDc1RU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'MRPD0kq4' \
    --externalId 'DlesG6si' \
    --limit '92' \
    --notificationSource 'ADYEN' \
    --notificationType 'JULCgYRO' \
    --offset '22' \
    --paymentOrderNo 'vvM2BqHZ' \
    --startDate 'kAIkOvhp' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'N4QeHDE2' \
    --limit '23' \
    --offset '28' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "oySCXDJS", "currencyNamespace": "omO2T9TV", "customParameters": {"XdAUrHIU": {}, "Iek593RT": {}, "NezW9R7t": {}}, "description": "H0jfrmPI", "extOrderNo": "OPHJVBbF", "extUserId": "ZK1ltALP", "itemType": "COINS", "language": "QYPz_ff", "metadata": {"NeoK6oY1": "FYCxLEvK", "fWU5ycZh": "9Tc4uU4a", "1x8cUch7": "CFgEMCvY"}, "notifyUrl": "TpltdXCd", "omitNotification": false, "platform": "r1sXrqEo", "price": 89, "recurringPaymentOrderNo": "nwKfOsrl", "region": "JbOrlZB4", "returnUrl": "JEogjFrH", "sandbox": true, "sku": "JA59LFuO", "subscriptionId": "DGFDMNYy", "targetNamespace": "agjFSiiW", "targetUserId": "IjPDoceW", "title": "RRGVopnL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'fc3kLVx9' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'oEqCY1wr' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "WifoBmwO", "paymentMethod": "niStgr9s", "paymentProvider": "XSOLLA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '7nF9HZcN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "Nn8dKPjt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Sfci8Nrb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 29, "currencyCode": "xof4hpks", "notifyType": "CHARGE", "paymentProvider": "WALLET", "salesTax": 26, "vat": 55}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qXXzK13p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'y2MObaE2' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Steam", "Other", "Epic"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Nintendo' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 CreateReward
# body param: body
echo '{"description": "t2ciTj37", "eventTopic": "rP8cxWCs", "maxAwarded": 10, "maxAwardedPerUser": 44, "namespaceExpression": "3xFxHWsN", "rewardCode": "EM0ocFz3", "rewardConditions": [{"condition": "qaf3g2iG", "conditionName": "mcBlaTMk", "eventName": "YNFnLzhf", "rewardItems": [{"duration": 1, "itemId": "EFfgRXfz", "quantity": 22}, {"duration": 72, "itemId": "KvM3CReR", "quantity": 75}, {"duration": 73, "itemId": "MPBuL0Vm", "quantity": 30}]}, {"condition": "xDetuO4S", "conditionName": "Skep4pIY", "eventName": "AtPSiMeG", "rewardItems": [{"duration": 0, "itemId": "7T4sw6A4", "quantity": 59}, {"duration": 77, "itemId": "fdMFdnNB", "quantity": 79}, {"duration": 79, "itemId": "6wkNIpA0", "quantity": 22}]}, {"condition": "wZ8LVM6v", "conditionName": "ahgsqOTw", "eventName": "TMhXMtVN", "rewardItems": [{"duration": 43, "itemId": "pFEPHj3I", "quantity": 48}, {"duration": 78, "itemId": "ykVlN65q", "quantity": 56}, {"duration": 72, "itemId": "1EzF4IEu", "quantity": 4}]}], "userIdExpression": "y3jrrBxd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateReward' test.out

#- 137 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic '5yx2aOQK' \
    --limit '3' \
    --offset '41' \
    --sortBy '["rewardCode", "namespace:desc", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 137 'QueryRewards' test.out

#- 138 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'ExportRewards' test.out

#- 139 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 139 'ImportRewards' test.out

#- 140 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 't0WidOKY' \
    > test.out 2>&1
eval_tap $? 140 'GetReward' test.out

#- 141 UpdateReward
# body param: body
echo '{"description": "Fhb0he3u", "eventTopic": "YQ7xASCa", "maxAwarded": 88, "maxAwardedPerUser": 8, "namespaceExpression": "5BZRa8Pm", "rewardCode": "fhMf2Ass", "rewardConditions": [{"condition": "ohYVhsPE", "conditionName": "hFChjpSC", "eventName": "8GOeCYB1", "rewardItems": [{"duration": 78, "itemId": "2zDxm3HR", "quantity": 86}, {"duration": 89, "itemId": "FW4SopSo", "quantity": 66}, {"duration": 66, "itemId": "RVcZthba", "quantity": 14}]}, {"condition": "6HbmEK6Y", "conditionName": "aPOh4ABr", "eventName": "m1pMKPAc", "rewardItems": [{"duration": 95, "itemId": "MpEjTtSl", "quantity": 71}, {"duration": 51, "itemId": "rgZ4N9X6", "quantity": 78}, {"duration": 89, "itemId": "Qmu6T97L", "quantity": 22}]}, {"condition": "DDZuFM4y", "conditionName": "TVd5VFUq", "eventName": "ZRx1M9lV", "rewardItems": [{"duration": 69, "itemId": "olovODOL", "quantity": 6}, {"duration": 83, "itemId": "GMsevbYL", "quantity": 93}, {"duration": 40, "itemId": "HJtXoye4", "quantity": 8}]}], "userIdExpression": "7ORSxuiE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'qSSC6ndv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateReward' test.out

#- 142 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'eIcoHZmi' \
    > test.out 2>&1
eval_tap $? 142 'DeleteReward' test.out

#- 143 CheckEventCondition
# body param: body
echo '{"payload": {"WyPuZjt7": {}, "bBo4iswT": {}, "auGxEqTL": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId '4mVh4lJ3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CheckEventCondition' test.out

#- 144 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "VDjYl9Sy", "userId": "x1156wVS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId 'P1F9t29k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteRewardConditionRecord' test.out

#- 145 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end '7mmr0dZW' \
    --limit '79' \
    --offset '64' \
    --start '0HPzybd9' \
    --storeId 'M9MBOOqv' \
    --viewId '4FlRpEJk' \
    > test.out 2>&1
eval_tap $? 145 'QuerySections' test.out

#- 146 CreateSection
# body param: body
echo '{"active": true, "displayOrder": 2, "endDate": "1972-06-08T00:00:00Z", "ext": {"rmSCT6PW": {}, "OwAQc8OP": {}, "gsd8fzDg": {}}, "fixedPeriodRotationConfig": {"duration": 77, "itemCount": 93, "rule": "SEQUENCE"}, "items": [{"id": "SvL8MbEr"}, {"id": "g04Ztuxi"}, {"id": "dVYpg8ja"}], "localizations": {"fus6VmRP": {"description": "O9Iu9CaF", "localExt": {"q4wcL7Wq": {}, "j8aiBdC8": {}, "SKNeJ0P2": {}}, "longDescription": "Y50Be1r5", "title": "C7noYB4c"}, "qpoAvKWS": {"description": "ENWxjqlZ", "localExt": {"z3bwmCkE": {}, "13hbUNel": {}, "ECf9JPj1": {}}, "longDescription": "bDyUtD9N", "title": "52A7VAWZ"}, "nQQLXNsc": {"description": "h067hQQY", "localExt": {"4NHZwJe3": {}, "WGo1lJTY": {}, "NskclH7b": {}}, "longDescription": "gNAjZpG3", "title": "fzBJnKgh"}}, "name": "c2jvQIbv", "rotationType": "FIXED_PERIOD", "startDate": "1995-06-23T00:00:00Z", "viewId": "c4lZvJAa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'yxStpIDL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreateSection' test.out

#- 147 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId 'TCCzZpWq' \
    > test.out 2>&1
eval_tap $? 147 'PurgeExpiredSection' test.out

#- 148 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId '3T2xnMEe' \
    --storeId 'tZkhr94d' \
    > test.out 2>&1
eval_tap $? 148 'GetSection' test.out

#- 149 UpdateSection
# body param: body
echo '{"active": true, "displayOrder": 2, "endDate": "1986-11-08T00:00:00Z", "ext": {"ljp95LUZ": {}, "Aybajj7K": {}, "n89DPwJv": {}}, "fixedPeriodRotationConfig": {"duration": 53, "itemCount": 50, "rule": "SEQUENCE"}, "items": [{"id": "QHhBvwqD"}, {"id": "QHfQn5a3"}, {"id": "ccBSIc5i"}], "localizations": {"8T0Pqlcj": {"description": "0YLzHrAy", "localExt": {"x7ReqKTq": {}, "apxyoGM4": {}, "zL0Y3men": {}}, "longDescription": "hVwmntzV", "title": "PnjVKszs"}, "k3GGTz9k": {"description": "qMbXJNTI", "localExt": {"bT7FwAF1": {}, "BcRAbU8C": {}, "3v6Otqpj": {}}, "longDescription": "ZC02JmVO", "title": "BI2tIGMD"}, "xssy1MrZ": {"description": "rl4pT0Pd", "localExt": {"XXLp4Vf1": {}, "UNJ7WLjg": {}, "WFDTWxQM": {}}, "longDescription": "jaW7Q5k0", "title": "XFJ6zWir"}}, "name": "li7Z3HTq", "rotationType": "NONE", "startDate": "1995-11-22T00:00:00Z", "viewId": "P9tkC3EO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'qGHnTpb3' \
    --storeId 'W9wb50Pe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'UpdateSection' test.out

#- 150 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'VMVoGvDi' \
    --storeId 'Jk9CajzC' \
    > test.out 2>&1
eval_tap $? 150 'DeleteSection' test.out

#- 151 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'ListStores' test.out

#- 152 CreateStore
# body param: body
echo '{"defaultLanguage": "BcC2XGKz", "defaultRegion": "AmmX7Ssg", "description": "Njeev4a5", "supportedLanguages": ["GRecmPGb", "d8EYFSAy", "rtl9WqLP"], "supportedRegions": ["sB5cZiSd", "2DQhSO1F", "Akh49Mtj"], "title": "rRWc0KwX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'CreateStore' test.out

#- 153 ImportStore
eval_tap 0 153 'ImportStore # SKIP deprecated' test.out

#- 154 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 154 'GetPublishedStore' test.out

#- 155 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 155 'DeletePublishedStore' test.out

#- 156 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 156 'GetPublishedStoreBackup' test.out

#- 157 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 157 'RollbackPublishedStore' test.out

#- 158 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId '5Zrw8wVp' \
    > test.out 2>&1
eval_tap $? 158 'GetStore' test.out

#- 159 UpdateStore
# body param: body
echo '{"defaultLanguage": "fIZ37NHi", "defaultRegion": "ybmpxI1a", "description": "RwnUL3LS", "supportedLanguages": ["7zrwTg67", "CG3RxPHT", "JNzCCRHp"], "supportedRegions": ["T3Ra3LdC", "Fk6P9qtl", "w1rmePAz"], "title": "lZuW51kl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'xBiWhqL5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'UpdateStore' test.out

#- 160 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId '87PTQySg' \
    > test.out 2>&1
eval_tap $? 160 'DeleteStore' test.out

#- 161 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'AsRQXugT' \
    --action 'DELETE' \
    --itemSku 'Nzfg0nvO' \
    --itemType 'APP' \
    --limit '44' \
    --offset '49' \
    --selected 'true' \
    --sortBy '["updatedAt", "updatedAt:asc"]' \
    --status 'UNPUBLISHED' \
    --type 'CATEGORY' \
    --updatedAtEnd '9BkMwiFq' \
    --updatedAtStart 'oBU8nhK5' \
    > test.out 2>&1
eval_tap $? 161 'QueryChanges' test.out

#- 162 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'ZsCgwYz1' \
    > test.out 2>&1
eval_tap $? 162 'PublishAll' test.out

#- 163 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'NUuYoFhI' \
    > test.out 2>&1
eval_tap $? 163 'PublishSelected' test.out

#- 164 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'yE2qYM3w' \
    > test.out 2>&1
eval_tap $? 164 'SelectAllRecords' test.out

#- 165 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'K0bk0sty' \
    --action 'CREATE' \
    --itemSku '9gn14dUi' \
    --itemType 'EXTENSION' \
    --type 'CATEGORY' \
    --updatedAtEnd 'ODHXXMQx' \
    --updatedAtStart 'ALY45bLI' \
    > test.out 2>&1
eval_tap $? 165 'GetStatistic' test.out

#- 166 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '93ET3xi8' \
    > test.out 2>&1
eval_tap $? 166 'UnselectAllRecords' test.out

#- 167 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'XADIHIdM' \
    --namespace $AB_NAMESPACE \
    --storeId 'wf5Z2Ahf' \
    > test.out 2>&1
eval_tap $? 167 'SelectRecord' test.out

#- 168 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'eAjirSeA' \
    --namespace $AB_NAMESPACE \
    --storeId 'w1o72N5o' \
    > test.out 2>&1
eval_tap $? 168 'UnselectRecord' test.out

#- 169 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 't7s8JIYw' \
    --targetStoreId 'RjyA0eyb' \
    > test.out 2>&1
eval_tap $? 169 'CloneStore' test.out

#- 170 ExportStore
eval_tap 0 170 'ExportStore # SKIP deprecated' test.out

#- 171 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId 'lgK6gZtf' \
    --limit '27' \
    --offset '10' \
    --sku 'jyl2agQ6' \
    --status 'CANCELLED' \
    --subscribedBy 'PLATFORM' \
    --userId 'xTVQOeNo' \
    > test.out 2>&1
eval_tap $? 171 'QuerySubscriptions' test.out

#- 172 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'UPgwJHqG' \
    > test.out 2>&1
eval_tap $? 172 'RecurringChargeSubscription' test.out

#- 173 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'PvSEQyib' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 173 'GetTicketDynamic' test.out

#- 174 DecreaseTicketSale
# body param: body
echo '{"orderNo": "HUzchsX7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'uhTt0XtZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'DecreaseTicketSale' test.out

#- 175 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'WC46KSXy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 175 'GetTicketBoothID' test.out

#- 176 IncreaseTicketSale
# body param: body
echo '{"count": 100, "orderNo": "jVLpxL7Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'T6OgsQ0Y' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'IncreaseTicketSale' test.out

#- 177 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "rPFuzKPV", "value": 75}, {"id": "Y8OrwjC8", "value": 86}, {"id": "Gd6fPsvv", "value": 94}], "steamUserId": "1LZ0zk4k"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'YU7VBPj3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'UnlockSteamUserAchievement' test.out

#- 178 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'ba8JyehQ' \
    --xboxUserId 'U71Y9V2F' \
    > test.out 2>&1
eval_tap $? 178 'GetXblUserAchievements' test.out

#- 179 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "ppS9NftF", "percentComplete": 91}, {"id": "NRbC7032", "percentComplete": 78}, {"id": "tkzKNubZ", "percentComplete": 92}], "serviceConfigId": "ywFk0sdY", "titleId": "2kON0v42", "xboxUserId": "leT5m4kL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '1xXefD8S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'UpdateXblUserAchievement' test.out

#- 180 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId '6YGFu2sA' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeCampaign' test.out

#- 181 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'vsFaCLX5' \
    > test.out 2>&1
eval_tap $? 181 'AnonymizeEntitlement' test.out

#- 182 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'DfKtPp1B' \
    > test.out 2>&1
eval_tap $? 182 'AnonymizeFulfillment' test.out

#- 183 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'QKipJCKw' \
    > test.out 2>&1
eval_tap $? 183 'AnonymizeIntegration' test.out

#- 184 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'WtgLqkUR' \
    > test.out 2>&1
eval_tap $? 184 'AnonymizeOrder' test.out

#- 185 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'sLJZ3qfQ' \
    > test.out 2>&1
eval_tap $? 185 'AnonymizePayment' test.out

#- 186 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '08JgUZlQ' \
    > test.out 2>&1
eval_tap $? 186 'AnonymizeSubscription' test.out

#- 187 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'FlJFm3HT' \
    > test.out 2>&1
eval_tap $? 187 'AnonymizeWallet' test.out

#- 188 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId '4vnKJesk' \
    --type 'PSN' \
    > test.out 2>&1
eval_tap $? 188 'GetUserDLC' test.out

#- 189 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '2dH3r9X6' \
    --activeOnly 'false' \
    --appType 'DEMO' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'hHOGyAOB' \
    --features '["y8PA75rg", "bRtDTGTU", "wXuYXo4H"]' \
    --itemId '["Gk6WZ44x", "UGaL1Jdz", "Mg0VsvRE"]' \
    --limit '80' \
    --offset '89' \
    > test.out 2>&1
eval_tap $? 189 'QueryUserEntitlements' test.out

#- 190 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1972-05-23T00:00:00Z", "grantedCode": "zjGEsAgv", "itemId": "pgQ3LLjP", "itemNamespace": "ZSKC2bPq", "language": "VZzq_WXfv", "quantity": 11, "region": "BnaqXxix", "source": "REFERRAL_BONUS", "startDate": "1996-03-09T00:00:00Z", "storeId": "uC4Birak"}, {"endDate": "1991-11-14T00:00:00Z", "grantedCode": "k8O3iCPA", "itemId": "byZ31M0S", "itemNamespace": "cdEdarly", "language": "iu_CvOF", "quantity": 77, "region": "dWx8ZD79", "source": "ACHIEVEMENT", "startDate": "1985-11-23T00:00:00Z", "storeId": "ytYmWUEm"}, {"endDate": "1981-04-30T00:00:00Z", "grantedCode": "XhNrunHl", "itemId": "OoESG961", "itemNamespace": "qwfipDdK", "language": "uuMe-PgKR-OO", "quantity": 48, "region": "UydThuKe", "source": "PROMOTION", "startDate": "1981-08-01T00:00:00Z", "storeId": "Z3csCGlK"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'AzfaolNF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'GrantUserEntitlement' test.out

#- 191 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'n1pSMrXM' \
    --activeOnly 'true' \
    --appId 'GwPnzcUD' \
    > test.out 2>&1
eval_tap $? 191 'GetUserAppEntitlementByAppId' test.out

#- 192 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '2zIrMTWv' \
    --activeOnly 'true' \
    --limit '5' \
    --offset '53' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 192 'QueryUserEntitlementsByAppType' test.out

#- 193 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'B7aPO3CF' \
    --activeOnly 'true' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'I6J4F0L8' \
    > test.out 2>&1
eval_tap $? 193 'GetUserEntitlementByItemId' test.out

#- 194 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '1321vNVL' \
    --ids '["aTb8sGse", "psPiT4uL", "Iab1KHW9"]' \
    > test.out 2>&1
eval_tap $? 194 'GetUserActiveEntitlementsByItemIds' test.out

#- 195 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '0YcUSOsB' \
    --activeOnly 'false' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'kkbKDaQv' \
    > test.out 2>&1
eval_tap $? 195 'GetUserEntitlementBySku' test.out

#- 196 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'OBt8OgP0' \
    --appIds '["gi6okbku", "FEl9rW6t", "Zw9I83VL"]' \
    --itemIds '["qNUX5jWl", "1vRQ2E6v", "liv8vtvy"]' \
    --skus '["6pZDMrsL", "Qrb06yZs", "EjuUu0Kb"]' \
    > test.out 2>&1
eval_tap $? 196 'ExistsAnyUserActiveEntitlement' test.out

#- 197 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'b6gxnaYy' \
    --itemIds '["GNA0Uvhu", "HAeDLeeC", "S7Fh3fAH"]' \
    > test.out 2>&1
eval_tap $? 197 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 198 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId '0wRTBSkN' \
    --appId 'oDrbEWve' \
    > test.out 2>&1
eval_tap $? 198 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 199 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'kopcfmGc' \
    --entitlementClazz 'APP' \
    --itemId 'aHcQzMxv' \
    > test.out 2>&1
eval_tap $? 199 'GetUserEntitlementOwnershipByItemId' test.out

#- 200 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'xBw8B15P' \
    --ids '["eVzuO28T", "OkypwQGA", "PswFs2FZ"]' \
    > test.out 2>&1
eval_tap $? 200 'GetUserEntitlementOwnershipByItemIds' test.out

#- 201 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'TbADjoAz' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'TLN9mViD' \
    > test.out 2>&1
eval_tap $? 201 'GetUserEntitlementOwnershipBySku' test.out

#- 202 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'AYPtuFYU' \
    --entitlementIds '8KLYTv0Z' \
    > test.out 2>&1
eval_tap $? 202 'RevokeUserEntitlements' test.out

#- 203 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'POGU5U0f' \
    --namespace $AB_NAMESPACE \
    --userId 'JVEPIzV6' \
    > test.out 2>&1
eval_tap $? 203 'GetUserEntitlement' test.out

#- 204 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1972-09-24T00:00:00Z", "nullFieldList": ["kYt5yGiP", "uNdIethR", "D1YAchzP"], "startDate": "1992-02-18T00:00:00Z", "status": "ACTIVE", "useCount": 4}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'eLfUpI9b' \
    --namespace $AB_NAMESPACE \
    --userId 'QcZUVQJB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'UpdateUserEntitlement' test.out

#- 205 ConsumeUserEntitlement
# body param: body
echo '{"options": ["TwapyMBr", "LKX5299e", "jgAAhFIA"], "requestId": "sRmt4Adv", "useCount": 68}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'ZuJr9tu4' \
    --namespace $AB_NAMESPACE \
    --userId 'lP5hU1Nw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 205 'ConsumeUserEntitlement' test.out

#- 206 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'U78Kk4z4' \
    --namespace $AB_NAMESPACE \
    --userId 'zaMDvnDP' \
    > test.out 2>&1
eval_tap $? 206 'DisableUserEntitlement' test.out

#- 207 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'uYxs9Gk0' \
    --namespace $AB_NAMESPACE \
    --userId 'AU5WSXg4' \
    > test.out 2>&1
eval_tap $? 207 'EnableUserEntitlement' test.out

#- 208 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'dbb0I2Rj' \
    --namespace $AB_NAMESPACE \
    --userId 'oeCaB7xk' \
    > test.out 2>&1
eval_tap $? 208 'GetUserEntitlementHistories' test.out

#- 209 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'Q40tI8Hi' \
    --namespace $AB_NAMESPACE \
    --userId '97zBuO1C' \
    > test.out 2>&1
eval_tap $? 209 'RevokeUserEntitlement' test.out

#- 210 FulfillItem
# body param: body
echo '{"duration": 93, "endDate": "1982-06-13T00:00:00Z", "itemId": "YDPhiIpC", "itemSku": "UToXtQji", "language": "KLuGmN6w", "order": {"currency": {"currencyCode": "4YyVg8B2", "currencySymbol": "xyqkPKjN", "currencyType": "VIRTUAL", "decimals": 28, "namespace": "0cQl9IiC"}, "ext": {"IOIOounj": {}, "0DYrPeIH": {}, "fi8kI03N": {}}, "free": false}, "orderNo": "daKp8LWO", "origin": "Epic", "quantity": 75, "region": "aPVE1e6I", "source": "ACHIEVEMENT", "startDate": "1998-10-26T00:00:00Z", "storeId": "6ZRTIUS5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'JpvQq3Au' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'FulfillItem' test.out

#- 211 RedeemCode
# body param: body
echo '{"code": "DOGN2VOG", "language": "tUyH_mG", "region": "ZlTXmT4A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'IfSW8MkR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 211 'RedeemCode' test.out

#- 212 FulfillRewards
# body param: body
echo '{"origin": "System", "rewards": [{"currency": {"currencyCode": "LOww1kwj", "namespace": "te0iMbgv"}, "item": {"itemId": "ZEY6vOBd", "itemSku": "DgDINa0W", "itemType": "x7OZvDf5"}, "quantity": 61, "type": "ITEM"}, {"currency": {"currencyCode": "Y0gbQZnT", "namespace": "xKresMJj"}, "item": {"itemId": "fC9x9cIK", "itemSku": "B3HI8jsj", "itemType": "i0zuhUao"}, "quantity": 25, "type": "CURRENCY"}, {"currency": {"currencyCode": "W4xK1dgN", "namespace": "snm3aeX4"}, "item": {"itemId": "x71bPLhA", "itemSku": "QGqL3xsq", "itemType": "zEoemLh3"}, "quantity": 55, "type": "ITEM"}], "source": "OTHER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'MbKs4Vw1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'FulfillRewards' test.out

#- 213 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'FVOnzcR2' \
    --endTime 'iqmbrptH' \
    --limit '85' \
    --offset '26' \
    --productId 'DD3ULUB2' \
    --startTime 'VviFZyHD' \
    --status 'FAILED' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 213 'QueryUserIAPOrders' test.out

#- 214 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'ur7Zabbk' \
    > test.out 2>&1
eval_tap $? 214 'QueryAllUserIAPOrders' test.out

#- 215 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId '1kJkIEA3' \
    --endTime 'aw8dlyXf' \
    --limit '78' \
    --offset '54' \
    --startTime 'tP8Gw0nF' \
    --status 'FAIL' \
    --type 'STADIA' \
    > test.out 2>&1
eval_tap $? 215 'QueryUserIAPConsumeHistory' test.out

#- 216 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "NDPZ-vHLN", "productId": "NoTEDryH", "region": "fiTTWHMz", "type": "EPICGAMES"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'ytaw4vob' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'MockFulfillIAPItem' test.out

#- 217 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'B1v40sad' \
    --itemId 'xv2YpBAv' \
    --limit '24' \
    --offset '3' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 217 'QueryUserOrders' test.out

#- 218 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "g7oCd1Zl", "currencyNamespace": "sZyJ8ZXE", "discountedPrice": 18, "ext": {"SQ0sEfdX": {}, "LAXMgzre": {}, "eygZbCHe": {}}, "itemId": "fjMzzT1t", "language": "ZGVIrLp5", "options": {"skipPriceValidation": true}, "platform": "Playstation", "price": 59, "quantity": 55, "region": "GYZCJPbY", "returnUrl": "KQBc80Js", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'x1raWw6v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'AdminCreateUserOrder' test.out

#- 219 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'LgeStJ40' \
    --itemId 'pKNm0MDS' \
    > test.out 2>&1
eval_tap $? 219 'CountOfPurchasedItem' test.out

#- 220 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'MZoxTrd8' \
    --userId 'WLusBd5G' \
    > test.out 2>&1
eval_tap $? 220 'GetUserOrder' test.out

#- 221 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGEBACK", "statusReason": "dyQ6jkdT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'QP0sydDy' \
    --userId 'a8BEAZo1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'UpdateUserOrderStatus' test.out

#- 222 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'ENqxe4ef' \
    --userId 'QBCyPdxH' \
    > test.out 2>&1
eval_tap $? 222 'FulfillUserOrder' test.out

#- 223 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 's9tSPpjL' \
    --userId 'uJ42YiY9' \
    > test.out 2>&1
eval_tap $? 223 'GetUserOrderGrant' test.out

#- 224 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'aW6bxC4U' \
    --userId 'L0gE4ZjO' \
    > test.out 2>&1
eval_tap $? 224 'GetUserOrderHistories' test.out

#- 225 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "xef6a8sj"}, "authorisedTime": "1997-04-15T00:00:00Z", "chargebackReversedTime": "1981-11-29T00:00:00Z", "chargebackTime": "1995-12-31T00:00:00Z", "chargedTime": "1971-03-05T00:00:00Z", "createdTime": "1988-05-01T00:00:00Z", "currency": {"currencyCode": "Z6ksQP7a", "currencySymbol": "on6d0DyW", "currencyType": "REAL", "decimals": 75, "namespace": "MeJ70B5X"}, "customParameters": {"PJqlbZH5": {}, "MCObG7v6": {}, "XMYf6U1y": {}}, "extOrderNo": "3SGa1Ccl", "extTxId": "Dzc56rGL", "extUserId": "SmR18l04", "issuedAt": "1976-08-02T00:00:00Z", "metadata": {"HckLynEb": "Hky7MZwb", "gQEjhT3X": "do93OTRw", "lhHb1ryr": "lJnWZWTZ"}, "namespace": "LCibBls6", "nonceStr": "aNdsA657", "paymentMethod": "zLk6oKoi", "paymentMethodFee": 31, "paymentOrderNo": "7EWkovE6", "paymentProvider": "ADYEN", "paymentProviderFee": 91, "paymentStationUrl": "LdQoE24t", "price": 56, "refundedTime": "1979-05-16T00:00:00Z", "salesTax": 7, "sandbox": false, "sku": "VwN6H2w0", "status": "REFUNDED", "statusReason": "jh1qmr93", "subscriptionId": "tLCSamGP", "subtotalPrice": 77, "targetNamespace": "vTKBnUHK", "targetUserId": "1GIDAGC1", "tax": 100, "totalPrice": 21, "totalTax": 33, "txEndTime": "1987-12-28T00:00:00Z", "type": "vWU4igu0", "userId": "RkOIKDWZ", "vat": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo '4jzQ6oGP' \
    --userId 'NBGUCsQ8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'ProcessUserOrderNotification' test.out

#- 226 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'B4242yYZ' \
    --userId '2TJ9tqqY' \
    > test.out 2>&1
eval_tap $? 226 'DownloadUserOrderReceipt' test.out

#- 227 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "uWveVLoj", "currencyNamespace": "ax53AD0M", "customParameters": {"i4enrdv1": {}, "H52RvEGI": {}, "LooT4wlA": {}}, "description": "6y4yjTC4", "extOrderNo": "5dM12klx", "extUserId": "rgs9sRnY", "itemType": "INGAMEITEM", "language": "YFxf", "metadata": {"3fU5HWkK": "IyBVy8op", "XFm5mTjg": "APgLfRnr", "1h6HqpU0": "qaOIuoB4"}, "notifyUrl": "G4KcAzii", "omitNotification": true, "platform": "yH53rDJZ", "price": 63, "recurringPaymentOrderNo": "unl1uMSa", "region": "Ai2HGzwa", "returnUrl": "4pD1nk4T", "sandbox": true, "sku": "p3okr9WB", "subscriptionId": "pwshr4ex", "title": "kYplwQFs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'pteaAHRU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'CreateUserPaymentOrder' test.out

#- 228 RefundUserPaymentOrder
# body param: body
echo '{"description": "bXACYL5E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qgpbV9bg' \
    --userId 'GI8yFB9M' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'RefundUserPaymentOrder' test.out

#- 229 ApplyUserRedemption
# body param: body
echo '{"code": "Q4ki6OC0", "orderNo": "CL7AS1Bu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'JksfrHh4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'ApplyUserRedemption' test.out

#- 230 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'l28gIEX1' \
    --chargeStatus 'SETUP' \
    --itemId 'mYo43Zpx' \
    --limit '1' \
    --offset '95' \
    --sku 'NpaHVu2S' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 230 'QueryUserSubscriptions' test.out

#- 231 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'SxrfTCkb' \
    --excludeSystem 'true' \
    --limit '75' \
    --offset '65' \
    --subscriptionId 'w5JI2mGU' \
    > test.out 2>&1
eval_tap $? 231 'GetUserSubscriptionActivities' test.out

#- 232 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 28, "itemId": "M8bg0HIT", "language": "Vg5ntCFm", "reason": "kyNwXYak", "region": "aerVSzPB", "source": "ow4qzDhZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '4vaqgSBF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'PlatformSubscribeSubscription' test.out

#- 233 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'VzY1OOc1' \
    --itemId '7YrwrqzR' \
    > test.out 2>&1
eval_tap $? 233 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 234 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'hltiFueB' \
    --userId '0WmJoGyg' \
    > test.out 2>&1
eval_tap $? 234 'GetUserSubscription' test.out

#- 235 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'iCkRsjk0' \
    --userId 'JkKQ3eJp' \
    > test.out 2>&1
eval_tap $? 235 'DeleteUserSubscription' test.out

#- 236 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "36ljN3LO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '5qxLgqe9' \
    --userId 'WLLjvMiI' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'CancelSubscription' test.out

#- 237 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 10, "reason": "xWgIsaIs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'eHoZJPlz' \
    --userId 'Q0KAP9eW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'GrantDaysToSubscription' test.out

#- 238 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'KZO1yWjH' \
    --userId 'IVjyXPJd' \
    --excludeFree 'false' \
    --limit '92' \
    --offset '59' \
    > test.out 2>&1
eval_tap $? 238 'GetUserSubscriptionBillingHistories' test.out

#- 239 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "3irV3jed"}, "authorisedTime": "1990-05-01T00:00:00Z", "chargebackReversedTime": "1982-12-07T00:00:00Z", "chargebackTime": "1971-06-25T00:00:00Z", "chargedTime": "1991-05-11T00:00:00Z", "createdTime": "1985-02-04T00:00:00Z", "currency": {"currencyCode": "VMxGRiky", "currencySymbol": "IcsATd3t", "currencyType": "REAL", "decimals": 53, "namespace": "vAkpEifu"}, "customParameters": {"mLmjm95w": {}, "FRsPrCtk": {}, "lBjzcmto": {}}, "extOrderNo": "BesOa5kc", "extTxId": "FQcjJld3", "extUserId": "p0wEqRmh", "issuedAt": "1983-06-28T00:00:00Z", "metadata": {"CkEE2Y70": "3pmOpy8d", "1IaNPClH": "yAd33WIr", "aDUOZkp6": "kkj4M19z"}, "namespace": "xk1SPNqx", "nonceStr": "RO7pR9gw", "paymentMethod": "XYLsRxvm", "paymentMethodFee": 85, "paymentOrderNo": "7hYESUaU", "paymentProvider": "XSOLLA", "paymentProviderFee": 78, "paymentStationUrl": "j8V0oZzb", "price": 100, "refundedTime": "1997-12-16T00:00:00Z", "salesTax": 65, "sandbox": false, "sku": "3UXPIqEs", "status": "AUTHORISED", "statusReason": "wcXo3mzm", "subscriptionId": "ytMeBLW7", "subtotalPrice": 97, "targetNamespace": "eQgcKt5p", "targetUserId": "czGsP9UC", "tax": 31, "totalPrice": 40, "totalTax": 7, "txEndTime": "1992-07-04T00:00:00Z", "type": "IHxOua1c", "userId": "GCFXYmnx", "vat": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'P0TKR1UE' \
    --userId '8OCiTrJk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'ProcessUserSubscriptionNotification' test.out

#- 240 AcquireUserTicket
# body param: body
echo '{"count": 56, "orderNo": "zmiqvQcS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'JDjLj5xJ' \
    --namespace $AB_NAMESPACE \
    --userId '9JPtrs4a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'AcquireUserTicket' test.out

#- 241 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'Xoqsktcn' \
    > test.out 2>&1
eval_tap $? 241 'QueryUserCurrencyWallets' test.out

#- 242 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'xWb5gM8e' \
    --namespace $AB_NAMESPACE \
    --userId 'yVrHCVq7' \
    --limit '15' \
    --offset '100' \
    > test.out 2>&1
eval_tap $? 242 'ListUserCurrencyTransactions' test.out

#- 243 CheckWallet
eval_tap 0 243 'CheckWallet # SKIP deprecated' test.out

#- 244 CreditUserWallet
# body param: body
echo '{"amount": 27, "expireAt": "1980-06-09T00:00:00Z", "origin": "Stadia", "reason": "w5dCNTUY", "source": "DLC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'WbfTq1GY' \
    --namespace $AB_NAMESPACE \
    --userId 'YvQ5EFQe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'CreditUserWallet' test.out

#- 245 PayWithUserWallet
# body param: body
echo '{"amount": 89, "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'f07BxZem' \
    --namespace $AB_NAMESPACE \
    --userId 'K9dZpjje' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'PayWithUserWallet' test.out

#- 246 GetUserWallet
eval_tap 0 246 'GetUserWallet # SKIP deprecated' test.out

#- 247 DebitUserWallet
eval_tap 0 247 'DebitUserWallet # SKIP deprecated' test.out

#- 248 DisableUserWallet
eval_tap 0 248 'DisableUserWallet # SKIP deprecated' test.out

#- 249 EnableUserWallet
eval_tap 0 249 'EnableUserWallet # SKIP deprecated' test.out

#- 250 ListUserWalletTransactions
eval_tap 0 250 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 251 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId 'KPy2kFoA' \
    > test.out 2>&1
eval_tap $? 251 'ListViews' test.out

#- 252 CreateView
# body param: body
echo '{"displayOrder": 31, "localizations": {"MMqRyfhb": {"description": "EH4CaL4v", "localExt": {"ALglUrGQ": {}, "tmECVcvQ": {}, "rbrIGynJ": {}}, "longDescription": "KHNq6nHS", "title": "1d4HI9oZ"}, "G1s96RIN": {"description": "qscNJjk0", "localExt": {"u1Ye9fi6": {}, "zh5QpRVp": {}, "C7ZV4arx": {}}, "longDescription": "tpB7I5fH", "title": "PpvqUTpJ"}, "3GgJvnOW": {"description": "NSVnPDSx", "localExt": {"JiF8b633": {}, "u9iksYpt": {}, "0IveC1xL": {}}, "longDescription": "ZlOTfyCX", "title": "UJufD6xI"}}, "name": "Mi5xUd6q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId 'NWe3bfwr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'CreateView' test.out

#- 253 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId 'kgslpjw1' \
    --storeId 'yEGP0pWd' \
    > test.out 2>&1
eval_tap $? 253 'GetView' test.out

#- 254 UpdateView
# body param: body
echo '{"displayOrder": 85, "localizations": {"Y3gAx5U3": {"description": "zRVxys3m", "localExt": {"Z3oUpK1d": {}, "guX7KqxL": {}, "jBwU7ycl": {}}, "longDescription": "YhhecRbH", "title": "XT1iq6OT"}, "m6acCzHt": {"description": "8H6PvIId", "localExt": {"iiYRRfAf": {}, "nBDKVzeG": {}, "enkfcCuf": {}}, "longDescription": "66mm8WCn", "title": "0mljnXHK"}, "oFQrWcTx": {"description": "GRHAHplT", "localExt": {"tNtW2yOY": {}, "2KmCgo7s": {}, "hgsTZ3l7": {}}, "longDescription": "M6A8ZsOh", "title": "pzT9jHAx"}}, "name": "P6ovYh4c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'p9FBJvOI' \
    --storeId 'aIJK0fv9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'UpdateView' test.out

#- 255 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'VtlRDwDX' \
    --storeId '6YYrMKsD' \
    > test.out 2>&1
eval_tap $? 255 'DeleteView' test.out

#- 256 QueryWallets
eval_tap 0 256 'QueryWallets # SKIP deprecated' test.out

#- 257 GetWallet
eval_tap 0 257 'GetWallet # SKIP deprecated' test.out

#- 258 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'SGkNRlXo' \
    --end 'HIpGppdY' \
    --start '1Z3Qlyg3' \
    > test.out 2>&1
eval_tap $? 258 'SyncOrders' test.out

#- 259 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["tdE4AAid", "ANmEQ8Ez", "vHMf1mFW"], "apiKey": "XwnzE2rL", "authoriseAsCapture": false, "blockedPaymentMethods": ["V0wIfbDj", "vrYqwjFH", "XDa7bp4Q"], "clientKey": "hqNddueZ", "dropInSettings": "yw0hyTEo", "liveEndpointUrlPrefix": "SqHSiQ8r", "merchantAccount": "3ROte74x", "notificationHmacKey": "Nshxp5l3", "notificationPassword": "neISdqrA", "notificationUsername": "tWNjTAVz", "returnUrl": "lPK6kzUs", "settings": "wEFRlSre"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'TestAdyenConfig' test.out

#- 260 TestAliPayConfig
# body param: body
echo '{"appId": "SQa4m20l", "privateKey": "IWq2tZy7", "publicKey": "DNALfIwa", "returnUrl": "553TE2Fw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'TestAliPayConfig' test.out

#- 261 TestCheckoutConfig
# body param: body
echo '{"publicKey": "YYppKXBG", "secretKey": "g22W7rJ2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'TestCheckoutConfig' test.out

#- 262 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ '35d0irxD' \
    --region 'tFitUYCb' \
    > test.out 2>&1
eval_tap $? 262 'DebugMatchedPaymentMerchantConfig' test.out

#- 263 TestPayPalConfig
# body param: body
echo '{"clientID": "AkktaxcS", "clientSecret": "HFxAkiGC", "returnUrl": "fFP8HVr5", "webHookId": "GRBAH8o6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'TestPayPalConfig' test.out

#- 264 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["PnfITgEw", "BLPMZ3e9", "Wo2EtAI6"], "publishableKey": "Hwh9lNyg", "secretKey": "BZ5noP0Q", "webhookSecret": "bAUBKCoA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'TestStripeConfig' test.out

#- 265 TestWxPayConfig
# body param: body
echo '{"appId": "2oiA7VPD", "key": "So0oG8KQ", "mchid": "MivxzFM2", "returnUrl": "CTBfcHs0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'TestWxPayConfig' test.out

#- 266 TestXsollaConfig
# body param: body
echo '{"apiKey": "I7WGXJI0", "flowCompletionUrl": "t7oltdjb", "merchantId": 61, "projectId": 71, "projectSecretKey": "KkUXTozq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'TestXsollaConfig' test.out

#- 267 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'YHXZq9gr' \
    > test.out 2>&1
eval_tap $? 267 'GetPaymentMerchantConfig' test.out

#- 268 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["haY90Hvh", "e3spB3xh", "w4wnEyTJ"], "apiKey": "PfkRT4It", "authoriseAsCapture": true, "blockedPaymentMethods": ["5YqS4deB", "rtU527gu", "yPrvedog"], "clientKey": "QWNiBVnA", "dropInSettings": "puEbpRmB", "liveEndpointUrlPrefix": "deO4reNl", "merchantAccount": "R8NDvRKg", "notificationHmacKey": "m27my0ge", "notificationPassword": "nqh3apQy", "notificationUsername": "i8iEDEXH", "returnUrl": "cQYMZBD4", "settings": "wAhl9CtE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'xx0U7tVC' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdateAdyenConfig' test.out

#- 269 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'dmocMvCG' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 269 'TestAdyenConfigById' test.out

#- 270 UpdateAliPayConfig
# body param: body
echo '{"appId": "KaUGzJvR", "privateKey": "8VrYc21R", "publicKey": "vZEgnmJ6", "returnUrl": "sMQNNGFM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'gPfHgCtQ' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'UpdateAliPayConfig' test.out

#- 271 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'Fa7W3rUT' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 271 'TestAliPayConfigById' test.out

#- 272 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "cQvQ0obY", "secretKey": "DkaiVOSf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id '5yelViWo' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'UpdateCheckoutConfig' test.out

#- 273 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id '8ebSHQnR' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 273 'TestCheckoutConfigById' test.out

#- 274 UpdatePayPalConfig
# body param: body
echo '{"clientID": "GT5sEqWC", "clientSecret": "V5jjpWBW", "returnUrl": "AntSa2qC", "webHookId": "zKup82ZP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'c1Iub8Nt' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'UpdatePayPalConfig' test.out

#- 275 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'kT7MgHDO' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 275 'TestPayPalConfigById' test.out

#- 276 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["fjqzLMl3", "9pZ9aswk", "qzK947iB"], "publishableKey": "S2QSWn5z", "secretKey": "pySCgWpa", "webhookSecret": "OWeNGKI3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'PwUgoX6Z' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'UpdateStripeConfig' test.out

#- 277 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'xx6UOcJn' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 277 'TestStripeConfigById' test.out

#- 278 UpdateWxPayConfig
# body param: body
echo '{"appId": "mwC1LCHR", "key": "SeE2myA3", "mchid": "E91uQY5S", "returnUrl": "m1s7WSkT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'GZfFcNEN' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'UpdateWxPayConfig' test.out

#- 279 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '7G495qxf' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 279 'UpdateWxPayConfigCert' test.out

#- 280 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'iqn7pGlS' \
    > test.out 2>&1
eval_tap $? 280 'TestWxPayConfigById' test.out

#- 281 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "cwT8As9V", "flowCompletionUrl": "7Ik7RhmZ", "merchantId": 73, "projectId": 35, "projectSecretKey": "ikCjFI5J"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id '2gsoAdMS' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'UpdateXsollaConfig' test.out

#- 282 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'My7TC7jV' \
    > test.out 2>&1
eval_tap $? 282 'TestXsollaConfigById' test.out

#- 283 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "MEDIUM", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'pylvEoqY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'UpdateXsollaUIConfig' test.out

#- 284 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '79' \
    --namespace_ 'WetSGuoO' \
    --offset '99' \
    --region 'rVBuiFTf' \
    > test.out 2>&1
eval_tap $? 284 'QueryPaymentProviderConfig' test.out

#- 285 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "TrpOPGVb", "region": "RyBR54VN", "sandboxTaxJarApiToken": "cddjwh3w", "specials": ["WXPAY", "CHECKOUT", "ALIPAY"], "taxJarApiToken": "9KLKHqW6", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'CreatePaymentProviderConfig' test.out

#- 286 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 286 'GetAggregatePaymentProviders' test.out

#- 287 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'Egu6ESdK' \
    --region '4cBEnSo0' \
    > test.out 2>&1
eval_tap $? 287 'DebugMatchedPaymentProviderConfig' test.out

#- 288 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 288 'GetSpecialPaymentProviders' test.out

#- 289 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "Vs59P4Qm", "region": "NFw3mOOS", "sandboxTaxJarApiToken": "IVWkTL10", "specials": ["CHECKOUT", "STRIPE", "STRIPE"], "taxJarApiToken": "sWshIicE", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'erPYsNr0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'UpdatePaymentProviderConfig' test.out

#- 290 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'WR5v20vO' \
    > test.out 2>&1
eval_tap $? 290 'DeletePaymentProviderConfig' test.out

#- 291 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 291 'GetPaymentTaxConfig' test.out

#- 292 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "GmKx5566", "taxJarApiToken": "BU2GA0tr", "taxJarEnabled": false, "taxJarProductCodesMapping": {"OTQGMYax": "zQivdDLN", "h7botQ8J": "bQ6wrdNF", "uyx9bdUo": "2PhdBJQM"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdatePaymentTaxConfig' test.out

#- 293 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'mfl18LKn' \
    --end 'oIQvGt87' \
    --start '7TX5JgnD' \
    > test.out 2>&1
eval_tap $? 293 'SyncPaymentOrders' test.out

#- 294 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'c9Gnt31w' \
    --storeId 'VDnXpVHD' \
    > test.out 2>&1
eval_tap $? 294 'PublicGetRootCategories' test.out

#- 295 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'GGjkjpwa' \
    --storeId 'NNj27nqU' \
    > test.out 2>&1
eval_tap $? 295 'DownloadCategories' test.out

#- 296 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'zjJYSjVv' \
    --namespace $AB_NAMESPACE \
    --language 'sZ1uR3zs' \
    --storeId 'dlXYdioF' \
    > test.out 2>&1
eval_tap $? 296 'PublicGetCategory' test.out

#- 297 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath '0hV1dOqm' \
    --namespace $AB_NAMESPACE \
    --language 'EatODPb1' \
    --storeId '1zNtgply' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetChildCategories' test.out

#- 298 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'eppSSIlT' \
    --namespace $AB_NAMESPACE \
    --language 'auq9ItFk' \
    --storeId 'e6fewlPW' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetDescendantCategories' test.out

#- 299 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 299 'PublicListCurrencies' test.out

#- 300 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language '9OketgI4' \
    --region '3MrLON37' \
    --storeId 'gHjedE8y' \
    --appId 'dq1FoJ0B' \
    > test.out 2>&1
eval_tap $? 300 'PublicGetItemByAppId' test.out

#- 301 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --baseAppId '5G3ymDMN' \
    --categoryPath 'nsM2xAFY' \
    --features 'cNxvW6ly' \
    --includeSubCategoryItem 'true' \
    --itemType 'OPTIONBOX' \
    --language 'PXoIM5zH' \
    --limit '69' \
    --offset '84' \
    --region 'mVST3Hcb' \
    --sortBy '["updatedAt", "displayOrder:desc", "name:asc"]' \
    --storeId 'ifLxjSiz' \
    --tags 'cEIpJ7hv' \
    > test.out 2>&1
eval_tap $? 301 'PublicQueryItems' test.out

#- 302 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'rsE9V2Lt' \
    --region 'p1DhiWuA' \
    --storeId 'dvIx5pMP' \
    --sku 'po12qqp7' \
    > test.out 2>&1
eval_tap $? 302 'PublicGetItemBySku' test.out

#- 303 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'eTqIiMZt' \
    --region 'BxKTuX9z' \
    --storeId 'QVU3PTfl' \
    --itemIds 'U8fKngFl' \
    > test.out 2>&1
eval_tap $? 303 'PublicBulkGetItems' test.out

#- 304 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["5BI5EAdQ", "igdOhd4t", "Zw7SjVyJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'PublicValidateItemPurchaseCondition' test.out

#- 305 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'LOOTBOX' \
    --limit '40' \
    --offset '70' \
    --region 'jlj7Ml0A' \
    --storeId 'IJ1vFZaL' \
    --keyword 'KrIjgmw6' \
    --language 'hQ6eKzwr' \
    > test.out 2>&1
eval_tap $? 305 'PublicSearchItems' test.out

#- 306 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'X1abFsWW' \
    --namespace $AB_NAMESPACE \
    --language 'TA11kmNR' \
    --region 'kxUuLsnh' \
    --storeId '1uqLFss9' \
    > test.out 2>&1
eval_tap $? 306 'PublicGetApp' test.out

#- 307 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'xFhWhhis' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 307 'PublicGetItemDynamicData' test.out

#- 308 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'UBoBbpoN' \
    --namespace $AB_NAMESPACE \
    --language 'QBTKDFfA' \
    --populateBundle 'true' \
    --region 'EgxDaXRh' \
    --storeId 'KrPpby7P' \
    > test.out 2>&1
eval_tap $? 308 'PublicGetItem' test.out

#- 309 GetPaymentCustomization
eval_tap 0 309 'GetPaymentCustomization # SKIP deprecated' test.out

#- 310 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "VMX5ly8v", "paymentProvider": "STRIPE", "returnUrl": "G6L9a8ps", "ui": "RJ9o398M", "zipCode": "4hvAhykW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'PublicGetPaymentUrl' test.out

#- 311 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'KgRwUzyx' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetPaymentMethods' test.out

#- 312 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'UFlPO4CX' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUnpaidPaymentOrder' test.out

#- 313 Pay
# body param: body
echo '{"token": "hsw7e48p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'w7Boi94x' \
    --paymentProvider 'CHECKOUT' \
    --zipCode 'CO7sjCAE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'Pay' test.out

#- 314 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Ht6SXvpu' \
    > test.out 2>&1
eval_tap $? 314 'PublicCheckPaymentOrderPaidStatus' test.out

#- 315 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'ADYEN' \
    --region 'b7JG82q7' \
    > test.out 2>&1
eval_tap $? 315 'GetPaymentPublicConfig' test.out

#- 316 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'QlGwrNiy' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetQRCode' test.out

#- 317 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'AHe7FTpM' \
    --foreinginvoice 'a5Fal0av' \
    --invoiceId 'ca6ZYFY5' \
    --payload 'v5Ideyzl' \
    --redirectResult 'MMmL9ORW' \
    --resultCode 'CWPTtRNO' \
    --sessionId 'DxfK3QRR' \
    --status 'CM78ozwl' \
    --token 'Ek2CDdx6' \
    --type 'sYG6meGe' \
    --userId 'wEQ69L2P' \
    --orderNo 'oqWnVhs7' \
    --paymentOrderNo 'JdI2wXFK' \
    --paymentProvider 'ADYEN' \
    --returnUrl 'uRcoJ2gn' \
    > test.out 2>&1
eval_tap $? 317 'PublicNormalizePaymentReturnUrl' test.out

#- 318 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'Rrtv1g7q' \
    --paymentOrderNo 'JXvp8V3g' \
    --paymentProvider 'ALIPAY' \
    > test.out 2>&1
eval_tap $? 318 'GetPaymentTaxValue' test.out

#- 319 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'BnOadTZX' \
    > test.out 2>&1
eval_tap $? 319 'GetRewardByCode' test.out

#- 320 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'Fftnhgtt' \
    --limit '36' \
    --offset '58' \
    --sortBy '["rewardCode", "rewardCode:desc", "rewardCode:asc"]' \
    > test.out 2>&1
eval_tap $? 320 'QueryRewards1' test.out

#- 321 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'K865Jt1p' \
    > test.out 2>&1
eval_tap $? 321 'GetReward1' test.out

#- 322 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 322 'PublicListStores' test.out

#- 323 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["K1oRz3yZ", "649XuYAC", "riDRA7Gs"]' \
    --itemIds '["AcyrXzhp", "hjlMIZN5", "wP3I9Yas"]' \
    --skus '["7ruA4qG9", "IBx8ztQt", "qt6PpPyS"]' \
    > test.out 2>&1
eval_tap $? 323 'PublicExistsAnyMyActiveEntitlement' test.out

#- 324 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'hhhvLsPP' \
    > test.out 2>&1
eval_tap $? 324 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 325 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --itemId 'LL68zidN' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 326 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --sku 't0I3fxFd' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 327 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["kwdQ10AU", "PffH8qsE", "3jy6uGAN"]' \
    --itemIds '["TvECJIET", "WcD5jEAK", "4Ng9Ds9w"]' \
    --skus '["MMbOI7bC", "BelwcDLw", "3lub23vz"]' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetEntitlementOwnershipToken' test.out

#- 328 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'XFk2aPQ9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyWallet' test.out

#- 329 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "gZY14eHn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'xRA6V4uz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'SyncEpicGameDLC' test.out

#- 330 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 73}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'jyY0drpR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'PublicSyncPsnDlcInventory' test.out

#- 331 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [74, 45, 6]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '9MeQqLcr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 332 SyncSteamDLC
# body param: body
echo '{"appId": "wtW9Whxf", "steamId": "9sXFjv8e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Asg76riJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'SyncSteamDLC' test.out

#- 333 SyncXboxDLC
# body param: body
echo '{"xstsToken": "eLa3HZoJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'KvrM0tgD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'SyncXboxDLC' test.out

#- 334 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'tu4KaMqM' \
    --appType 'GAME' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'HXdWQdI1' \
    --features '["U1IHYzOr", "wDh2Z0An", "ALvU24rw"]' \
    --itemId '["mlSXRTY5", "q7Zq8F9h", "csJijgY4"]' \
    --limit '64' \
    --offset '23' \
    > test.out 2>&1
eval_tap $? 334 'PublicQueryUserEntitlements' test.out

#- 335 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'vzutXvZp' \
    --appId 'mXcGb7bX' \
    > test.out 2>&1
eval_tap $? 335 'PublicGetUserAppEntitlementByAppId' test.out

#- 336 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '2n7cw9VV' \
    --limit '30' \
    --offset '29' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 336 'PublicQueryUserEntitlementsByAppType' test.out

#- 337 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'U0jIyunO' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId '8AD6otV2' \
    > test.out 2>&1
eval_tap $? 337 'PublicGetUserEntitlementByItemId' test.out

#- 338 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'NsvKy7FK' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'jyrfE0Uq' \
    > test.out 2>&1
eval_tap $? 338 'PublicGetUserEntitlementBySku' test.out

#- 339 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'v97S8uzu' \
    --appIds '["ULsyIS68", "GlvL6UqQ", "EHcUWn5K"]' \
    --itemIds '["rSyvCNr8", "OWghlecO", "eg1D1nT2"]' \
    --skus '["nKByfpXC", "4aiV9Juk", "hDUFJYGr"]' \
    > test.out 2>&1
eval_tap $? 339 'PublicExistsAnyUserActiveEntitlement' test.out

#- 340 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'bfL9ftw9' \
    --appId 'PtlfKsTY' \
    > test.out 2>&1
eval_tap $? 340 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 341 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'NEi1gWhz' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'gzBQ1CYw' \
    > test.out 2>&1
eval_tap $? 341 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 342 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Jen1hhbv' \
    --ids '["rxr44lwO", "kOOje2cz", "fxAa87iu"]' \
    > test.out 2>&1
eval_tap $? 342 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 343 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'v1LFWE92' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'eFfOZbCW' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 344 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'R3PeEOZz' \
    --namespace $AB_NAMESPACE \
    --userId 'l7PXg10G' \
    > test.out 2>&1
eval_tap $? 344 'PublicGetUserEntitlement' test.out

#- 345 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["mvU7xSno", "TABjQE5D", "oOYVabKG"], "requestId": "oO7DptV1", "useCount": 83}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'jb05BrYU' \
    --namespace $AB_NAMESPACE \
    --userId '7mXiooDb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'PublicConsumeUserEntitlement' test.out

#- 346 PublicRedeemCode
# body param: body
echo '{"code": "2dHpWkMV", "language": "YdB_tQCh", "region": "bSCZB4q6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'InaQp0dV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'PublicRedeemCode' test.out

#- 347 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "soa_XY", "productId": "4PVR0Fwm", "receiptData": "BilZ4Vke", "region": "yMZMua6P", "transactionId": "2ynGqJjR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'PIyfatqs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'PublicFulfillAppleIAPItem' test.out

#- 348 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "laRTMPk2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'Vdm5V37U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'SyncEpicGamesInventory' test.out

#- 349 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "ELPU_RQ", "orderId": "1rJjNVyF", "packageName": "Rxhl1CyD", "productId": "nRk6F58Y", "purchaseTime": 98, "purchaseToken": "t9OeVA9y", "region": "bxVWcHoG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'bgCU8yxx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'PublicFulfillGoogleIAPItem' test.out

#- 350 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "d3S6lneR", "price": 0.7391590058093263, "productId": "pxiDqLJp", "serviceLabel": 0}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'sCZo9bTT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicReconcilePlayStationStore' test.out

#- 351 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "k1C271xd", "price": 0.5683147419159166, "productId": "f064HsC3", "serviceLabels": [72, 20, 29]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId '9KSPeIpV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 352 SyncStadiaEntitlement
# body param: body
echo '{"appId": "gI7Tssxz", "language": "kw-pxGV-qt", "region": "QPJYstl7", "stadiaPlayerId": "DITEvFpr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '5opgBuFf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'SyncStadiaEntitlement' test.out

#- 353 SyncSteamInventory
# body param: body
echo '{"appId": "oTSYuhon", "currencyCode": "gz5EkaEe", "language": "Uyz-Vrqs", "price": 0.606580912729021, "productId": "9VNdSQOu", "region": "nrqmmOWk", "steamId": "mGLeIWvA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'P5dZv5Bm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'SyncSteamInventory' test.out

#- 354 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "vIMNxqlA", "language": "eBrO-WH", "region": "CCDwgbSe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'kNacuXhX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'SyncTwitchDropsEntitlement' test.out

#- 355 SyncXboxInventory
# body param: body
echo '{"currencyCode": "fEtFVV86", "price": 0.9381963484416241, "productId": "5V45haiV", "xstsToken": "CWGE1l7e"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'jNJsAVLU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'SyncXboxInventory' test.out

#- 356 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'IfWGaYlP' \
    --itemId 'MfVFa2Tq' \
    --limit '54' \
    --offset '49' \
    --status 'REFUNDING' \
    > test.out 2>&1
eval_tap $? 356 'PublicQueryUserOrders' test.out

#- 357 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "TfAbwGUG", "discountedPrice": 5, "ext": {"HBbicSiD": {}, "niRJ1g8c": {}, "v40lzgDI": {}}, "itemId": "aWZi11SK", "language": "SzRS", "price": 5, "quantity": 16, "region": "h0ZiTXSC", "returnUrl": "nQkEdc0A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Ub7eJTLB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'PublicCreateUserOrder' test.out

#- 358 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '88VS9kPe' \
    --userId 'YqppOoSb' \
    > test.out 2>&1
eval_tap $? 358 'PublicGetUserOrder' test.out

#- 359 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'g5lQ84av' \
    --userId 'INTdE4WE' \
    > test.out 2>&1
eval_tap $? 359 'PublicCancelUserOrder' test.out

#- 360 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'IxrxV3lk' \
    --userId 'xU5dlBJb' \
    > test.out 2>&1
eval_tap $? 360 'PublicGetUserOrderHistories' test.out

#- 361 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'UNN6Ifjw' \
    --userId '5MDIQUGF' \
    > test.out 2>&1
eval_tap $? 361 'PublicDownloadUserOrderReceipt' test.out

#- 362 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'GWrEXZVw' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetPaymentAccounts' test.out

#- 363 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'JnghqpyU' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'QkYonE6P' \
    > test.out 2>&1
eval_tap $? 363 'PublicDeletePaymentAccount' test.out

#- 364 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'HwQ9WjF0' \
    --language 'dwpxugOQ' \
    --region 'tS3kFIbo' \
    --storeId 'OuS5ZgsY' \
    --viewId 'rPv3BAUi' \
    > test.out 2>&1
eval_tap $? 364 'PublicListActiveSections' test.out

#- 365 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'o8hsOgvG' \
    --chargeStatus 'NEVER' \
    --itemId '7n7LAIHn' \
    --limit '83' \
    --offset '22' \
    --sku 'kfq77ccn' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 365 'PublicQueryUserSubscriptions' test.out

#- 366 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "gcBxqevH", "itemId": "xOryXLWZ", "language": "Llx_bvJL", "region": "RsPKVN1S", "returnUrl": "IaUGGOAR", "source": "cNLyJb5O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'EfClbsFe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 366 'PublicSubscribeSubscription' test.out

#- 367 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'J9TItSao' \
    --itemId 'xbCi9R9r' \
    > test.out 2>&1
eval_tap $? 367 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 368 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zKgjZteP' \
    --userId '8Zdj5efU' \
    > test.out 2>&1
eval_tap $? 368 'PublicGetUserSubscription' test.out

#- 369 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'iFdPeCUv' \
    --userId 'nZWC9Lh5' \
    > test.out 2>&1
eval_tap $? 369 'PublicChangeSubscriptionBillingAccount' test.out

#- 370 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "qC5WTIkb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '0xtii4kT' \
    --userId 'p2Drny6W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 370 'PublicCancelSubscription' test.out

#- 371 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'n8BKvilE' \
    --userId 'EEvtKb74' \
    --excludeFree 'false' \
    --limit '71' \
    --offset '70' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetUserSubscriptionBillingHistories' test.out

#- 372 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'mDa7auwD' \
    --language 'sHvyM7td' \
    --storeId 'E5TJ8DTP' \
    > test.out 2>&1
eval_tap $? 372 'PublicListViews' test.out

#- 373 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'eVGYnsOL' \
    --namespace $AB_NAMESPACE \
    --userId 'h46ahj0C' \
    > test.out 2>&1
eval_tap $? 373 'PublicGetWallet' test.out

#- 374 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'i8uFbk7Z' \
    --namespace $AB_NAMESPACE \
    --userId 'enbDnqxB' \
    --limit '20' \
    --offset '17' \
    > test.out 2>&1
eval_tap $? 374 'PublicListUserWalletTransactions' test.out

#- 375 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --availableDate 'y2Uc1KgI' \
    --baseAppId 'k9Dyq7pt' \
    --categoryPath '8WmiBVaq' \
    --features '9ltkZ6SC' \
    --includeSubCategoryItem 'true' \
    --itemName 'BHhjaNeK' \
    --itemStatus 'INACTIVE' \
    --itemType 'APP' \
    --limit '96' \
    --offset '35' \
    --region 'NnBcGqJU' \
    --sortBy '["displayOrder", "displayOrder:desc"]' \
    --storeId 'uk8oyGOS' \
    --tags 'cxIql1ST' \
    --targetNamespace 'xsYVNXAb' \
    > test.out 2>&1
eval_tap $? 375 'QueryItems1' test.out

#- 376 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'a3qHZyDB' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 376 'ImportStore1' test.out

#- 377 ExportStore1
# body param: body
echo '{"itemIds": ["pjGXdULC", "MjEKLufm", "zT5J5lh3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'yptGr6pI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 377 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE