#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..340"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "b0Cjv4Ax", "appType": "SOFTWARE", "baseAppId": "Ykoppa0V", "boothName": "gFJAhHwT", "boundItemIds": ["b5q010gN"], "categoryPath": "2MQrbpeR", "clazz": "nxTlCTFS", "createdAt": "1990-09-30T00:00:00Z", "description": "bl1a2jXL", "displayOrder": 57, "entitlementType": "DURABLE", "ext": {"WmHJBi9S": {}}, "features": ["oMkSE4eJ"], "images": [{"as": "elwO4KPM", "caption": "ky2h8R2f", "height": 69, "imageUrl": "XoXP8gd7", "smallImageUrl": "JUabYc3G", "width": 77}], "itemId": "bxTlm1fs", "itemIds": ["u6J3C4s5"], "itemQty": {"ppGR9Xco": 46}, "itemType": "BUNDLE", "language": "ewrLfwvz", "listable": true, "localExt": {"4TpbNhKq": {}}, "longDescription": "2xdmgEBe", "maxCount": 30, "maxCountPerUser": 62, "name": "Htf6Zieg", "namespace": "qdEL4fsM", "purchasable": false, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 50, "fixedTrialCycles": 87, "graceDays": 95}, "region": "uC1r7UH1", "regionData": [{"currencyCode": "Liu7UQ03", "currencyNamespace": "04McK873", "currencyType": "VIRTUAL", "discountAmount": 87, "discountExpireAt": "1980-05-17T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1973-11-17T00:00:00Z", "discountedPrice": 71, "expireAt": "1988-01-18T00:00:00Z", "price": 42, "purchaseAt": "1980-11-18T00:00:00Z", "trialPrice": 26}], "seasonType": "TIER", "sku": "4jNWGc7C", "stackable": false, "status": "ACTIVE", "tags": ["4wM5Eu3V"], "targetCurrencyCode": "qymsFXpo", "targetItemId": "rMqEDR8E", "targetNamespace": "72XMKfhl", "thumbnailUrl": "6eq2FzU3", "title": "VL3LNmPL", "updatedAt": "1973-01-28T00:00:00Z", "useCount": 28}, "namespace": "CXfabFXz", "order": {"currency": {"currencyCode": "vjLmai7f", "currencySymbol": "PKvE2Z4a", "currencyType": "VIRTUAL", "decimals": 74, "namespace": "bQSWtsyz"}, "ext": {"0mGGyHHF": {}}, "free": false}, "source": "REFERRAL_BONUS"}, "script": "KsXgvSrk", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'gTYVk5iR' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "BE6zJJ1B"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'RHrfCHqq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'p2GwPcmz' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "SuY8w9VY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'wBEfRXoZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --name 'fpVFfDwj' \
    --offset '66' \
    --tag 'HCW2g5u8' \
    > test.out 2>&1
eval_tap $? 8 'QueryCampaigns' test.out

#- 9 CreateCampaign
# body param: body
echo '{"description": "z9yrpJdI", "items": [{"extraSubscriptionDays": 46, "itemId": "5vvHS3d6", "itemName": "PKPE27mI", "quantity": 82}], "maxRedeemCountPerCampaignPerUser": 46, "maxRedeemCountPerCode": 19, "maxRedeemCountPerCodePerUser": 38, "maxSaleCount": 74, "name": "q4x0F7Nc", "redeemEnd": "1978-01-21T00:00:00Z", "redeemStart": "1973-03-31T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["lKYu8iCP"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateCampaign' test.out

#- 10 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'nx0s5TzT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'GetCampaign' test.out

#- 11 UpdateCampaign
# body param: body
echo '{"description": "51oV4HTm", "items": [{"extraSubscriptionDays": 17, "itemId": "vmb6tPmC", "itemName": "irkhYvcO", "quantity": 92}], "maxRedeemCountPerCampaignPerUser": 40, "maxRedeemCountPerCode": 5, "maxRedeemCountPerCodePerUser": 19, "maxSaleCount": 83, "name": "WGwPsvjL", "redeemEnd": "1989-08-16T00:00:00Z", "redeemStart": "1975-12-01T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["tbMkpUFH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'T0fL9q9S' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateCampaign' test.out

#- 12 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'MNAUQVoi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'GetCampaignDynamic' test.out

#- 13 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'QtSQC2kN' \
    > test.out 2>&1
eval_tap $? 13 'GetRootCategories' test.out

#- 14 CreateCategory
# body param: body
echo '{"categoryPath": "SsmT0d2a", "localizationDisplayNames": {"BG4zA2zp": "1Ls0bD6d"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'GgwkYgHz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCategory' test.out

#- 15 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'KuI2RJrb' \
    > test.out 2>&1
eval_tap $? 15 'ListCategoriesBasic' test.out

#- 16 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'oP7kfpIl' \
    --namespace $AB_NAMESPACE \
    --storeId 'etXrCK1U' \
    > test.out 2>&1
eval_tap $? 16 'GetCategory' test.out

#- 17 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"VO0jcs7n": "CqsodoTF"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'TcWlaIBJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'AAknU6Ho' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCategory' test.out

#- 18 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'bZgWlaLn' \
    --namespace $AB_NAMESPACE \
    --storeId 'edDfasTc' \
    > test.out 2>&1
eval_tap $? 18 'DeleteCategory' test.out

#- 19 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath '8gr2znWq' \
    --namespace $AB_NAMESPACE \
    --storeId 'D6tIcfI5' \
    > test.out 2>&1
eval_tap $? 19 'GetChildCategories' test.out

#- 20 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'Z4tUNQ7m' \
    --namespace $AB_NAMESPACE \
    --storeId 'QPjCalZg' \
    > test.out 2>&1
eval_tap $? 20 'GetDescendantCategories' test.out

#- 21 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'FVEQyqav' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --batchNo '46' \
    --code 'CvMqVcXs' \
    --limit '81' \
    --offset '32' \
    > test.out 2>&1
eval_tap $? 21 'QueryCodes' test.out

#- 22 CreateCodes
# body param: body
echo '{"quantity": 79}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'z8ZLBsnc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'CreateCodes' test.out

#- 23 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'bRrf6uEd' \
    --namespace $AB_NAMESPACE \
    --batchNo '19' \
    > test.out 2>&1
eval_tap $? 23 'Download' test.out

#- 24 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'Unr04WZN' \
    --namespace $AB_NAMESPACE \
    --batchNo '14' \
    > test.out 2>&1
eval_tap $? 24 'BulkDisableCodes' test.out

#- 25 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'gEGvqKWQ' \
    --namespace $AB_NAMESPACE \
    --batchNo '90' \
    > test.out 2>&1
eval_tap $? 25 'BulkEnableCodes' test.out

#- 26 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'kE65j618' \
    --namespace $AB_NAMESPACE \
    --code '6p0WfsnW' \
    --limit '40' \
    --offset '92' \
    --userId 'PsaRnVdr' \
    > test.out 2>&1
eval_tap $? 26 'QueryRedeemHistory' test.out

#- 27 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'dBA2hXwY' \
    --namespace $AB_NAMESPACE \
    --redeemable 'True' \
    > test.out 2>&1
eval_tap $? 27 'GetCode' test.out

#- 28 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'zZMdlR4c' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 28 'DisableCode' test.out

#- 29 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'L76hnFDg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'EnableCode' test.out

#- 30 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 30 'ListCurrencies' test.out

#- 31 CreateCurrency
# body param: body
echo '{"currencyCode": "ofHdfoSq", "currencySymbol": "DcaFhOc1", "currencyType": "REAL", "decimals": 72, "localizationDescriptions": {"xI8f5ocf": "y4EIxwBi"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'CreateCurrency' test.out

#- 32 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"B90vdgS5": "YpKsdbpi"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'U2UfyMO4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'UpdateCurrency' test.out

#- 33 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'DhL9fBKJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 33 'DeleteCurrency' test.out

#- 34 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'vjBOUn3b' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'GetCurrencyConfig' test.out

#- 35 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'Yf5ouXqk' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'GetCurrencySummary' test.out

#- 36 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetDLCItemConfig' test.out

#- 37 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "biExqT6D", "rewards": [{"currency": {"currencyCode": "k9QFqaAj", "namespace": "hwOI1P04"}, "item": {"itemId": "dMHfTwrx", "itemSku": "BRfMxZrS", "itemType": "fx3V8OXk"}, "quantity": 76, "type": "CURRENCY"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateDLCItemConfig' test.out

#- 38 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteDLCItemConfig' test.out

#- 39 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'GetPlatformDLCConfig' test.out

#- 40 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"7p2SyFDE": "nmYQzehP"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'UpdatePlatformDLCConfig' test.out

#- 41 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'DeletePlatformDLCConfig' test.out

#- 42 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --appType 'GAME' \
    --entitlementClazz 'MEDIA' \
    --entitlementName '12DvvzNN' \
    --itemId '["ZSu5zZVg"]' \
    --limit '100' \
    --offset '28' \
    --userId 'sfd01vaO' \
    > test.out 2>&1
eval_tap $? 42 'QueryEntitlements' test.out

#- 43 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'GweHacvH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetEntitlement' test.out

#- 44 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '87' \
    --offset '94' \
    --status 'SUCCESS' \
    --userId 'B8hos4ya' \
    > test.out 2>&1
eval_tap $? 44 'QueryFulfillmentHistories' test.out

#- 45 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetAppleIAPConfig' test.out

#- 46 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "OBjMxizC", "password": "xx9qTOIK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateAppleIAPConfig' test.out

#- 47 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteAppleIAPConfig' test.out

#- 48 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetEpicGamesIAPConfig' test.out

#- 49 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "lpdrqo2s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateEpicGamesIAPConfig' test.out

#- 50 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteEpicGamesIAPConfig' test.out

#- 51 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetGoogleIAPConfig' test.out

#- 52 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "mD9RPpjO", "serviceAccountId": "WK0k76i1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateGoogleIAPConfig' test.out

#- 53 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteGoogleIAPConfig' test.out

#- 54 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 54 'UpdateGoogleP12File' test.out

#- 55 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetIAPItemConfig' test.out

#- 56 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "g7rYaEuN", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"yPoQ0oHY": "XUQdtIkA"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 56 'UpdateIAPItemConfig' test.out

#- 57 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'DeleteIAPItemConfig' test.out

#- 58 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'GetPlayStationIAPConfig' test.out

#- 59 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "kltd1zQB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 59 'UpdatePlaystationIAPConfig' test.out

#- 60 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'DeletePlaystationIAPConfig' test.out

#- 61 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetStadiaIAPConfig' test.out

#- 62 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteStadiaIAPConfig' test.out

#- 63 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 63 'UpdateStadiaJsonConfigFile' test.out

#- 64 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetSteamIAPConfig' test.out

#- 65 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "zzC6ldKr", "publisherAuthenticationKey": "iI6lTRbc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdateSteamIAPConfig' test.out

#- 66 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeleteSteamIAPConfig' test.out

#- 67 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetTwitchIAPConfig' test.out

#- 68 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "1Z1HJHzl", "clientSecret": "323Ynwf5", "organizationId": "PvGejCDg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdateTwitchIAPConfig' test.out

#- 69 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeleteTwitchIAPConfig' test.out

#- 70 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetXblIAPConfig' test.out

#- 71 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "Ar1pXDcs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateXblIAPConfig' test.out

#- 72 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteXblAPConfig' test.out

#- 73 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'HnobnaYx' \
    > test.out 2>&1
eval_tap $? 73 'UpdateXblBPCertFile' test.out

#- 74 SyncInGameItem
# body param: body
echo '{"categoryPath": "Gh3FovBn", "targetItemId": "r5VUOHGq", "targetNamespace": "EcuJYo3Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'fMDw4PaB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'SyncInGameItem' test.out

#- 75 CreateItem
# body param: body
echo '{"appId": "KsFXorxY", "appType": "DEMO", "baseAppId": "hG5AgHrE", "boothName": "98qQTSXh", "categoryPath": "1W7MnK2i", "clazz": "8Ely255a", "displayOrder": 44, "entitlementType": "DURABLE", "ext": {"ulbNGSAj": {}}, "features": ["eiiANETl"], "images": [{"as": "kncKPmri", "caption": "36MY2aVC", "height": 79, "imageUrl": "UJgcpAYb", "smallImageUrl": "j0fidlWP", "width": 88}], "itemIds": ["AIjaw5HS"], "itemQty": {"yDsQqMUP": 34}, "itemType": "SEASON", "listable": true, "localizations": {"Ud1bmVSM": {"description": "44scgNAZ", "localExt": {"f7a3R9rI": {}}, "longDescription": "VTDDXZ1f", "title": "ahMp688J"}}, "maxCount": 43, "maxCountPerUser": 45, "name": "Q3hbDlcG", "purchasable": true, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 61, "fixedTrialCycles": 47, "graceDays": 25}, "regionData": {"VbXDomWy": [{"currencyCode": "rFZZdM00", "currencyNamespace": "sSdUypOv", "currencyType": "REAL", "discountAmount": 77, "discountExpireAt": "1981-09-29T00:00:00Z", "discountPercentage": 78, "discountPurchaseAt": "1972-12-14T00:00:00Z", "discountedPrice": 54, "expireAt": "1992-07-01T00:00:00Z", "price": 62, "purchaseAt": "1980-08-14T00:00:00Z", "trialPrice": 92}]}, "seasonType": "TIER", "sku": "0koUsUcG", "stackable": false, "status": "ACTIVE", "tags": ["tfyuPNb5"], "targetCurrencyCode": "exiRtR1Q", "targetNamespace": "e0mxLnvZ", "thumbnailUrl": "EG2biyKS", "useCount": 43}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'fIsZ5EAD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'CreateItem' test.out

#- 76 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --storeId 'Jp6HXexn' \
    --appId 'HAXYShIg' \
    > test.out 2>&1
eval_tap $? 76 'GetItemByAppId' test.out

#- 77 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --appType 'DEMO' \
    --availableDate 'zx6WCUdw' \
    --baseAppId 'QnivM1tf' \
    --categoryPath 'IoSsKaP5' \
    --features 'KNn0UGr9' \
    --itemType 'SUBSCRIPTION' \
    --limit '94' \
    --offset '0' \
    --region 'tfxBoakH' \
    --sortBy '["displayOrder:desc"]' \
    --storeId 'qz2uOKJV' \
    --tags 'jX7j5MgR' \
    --targetNamespace 'Z3kPmSrN' \
    > test.out 2>&1
eval_tap $? 77 'QueryItems' test.out

#- 78 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --features '["FzJwBceJ"]' \
    > test.out 2>&1
eval_tap $? 78 'ListBasicItemsByFeatures' test.out

#- 79 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --storeId 'iEYQy4Jx' \
    --sku 'BkyXfgwz' \
    > test.out 2>&1
eval_tap $? 79 'GetItemBySku' test.out

#- 80 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --language 'lT2q2EbG' \
    --populateBundle 'False' \
    --region 'dyWe2X8c' \
    --storeId 'Les0TRTA' \
    --sku 'ekrfR30I' \
    > test.out 2>&1
eval_tap $? 80 'GetLocaleItemBySku' test.out

#- 81 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --storeId '6CzcXFcj' \
    --sku 'Rpu7wVEz' \
    > test.out 2>&1
eval_tap $? 81 'GetItemIdBySku' test.out

#- 82 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["bwHvOGqw"]' \
    --storeId 'b7FAI8lx' \
    > test.out 2>&1
eval_tap $? 82 'GetBulkItemIdBySkus' test.out

#- 83 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --language 'oRtwKNHC' \
    --region 'ncWRyVDP' \
    --storeId 'NRFIbOIi' \
    --itemIds '021vVF26' \
    > test.out 2>&1
eval_tap $? 83 'BulkGetLocaleItems' test.out

#- 84 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --limit '61' \
    --offset '73' \
    --storeId 'nKL26vTD' \
    --keyword 'vjjj8aEP' \
    --language 'jDWSwW54' \
    > test.out 2>&1
eval_tap $? 84 'SearchItems' test.out

#- 85 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --limit '67' \
    --offset '91' \
    --sortBy '["createdAt:desc"]' \
    --storeId 'J1jV4EKp' \
    > test.out 2>&1
eval_tap $? 85 'QueryUncategorizedItems' test.out

#- 86 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'pV4DfTxf' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --storeId '3AGrDhoJ' \
    > test.out 2>&1
eval_tap $? 86 'GetItem' test.out

#- 87 UpdateItem
# body param: body
echo '{"appId": "ooH5WNF4", "appType": "DEMO", "baseAppId": "6DELnHRw", "boothName": "igr039B7", "categoryPath": "fw1zHG7K", "clazz": "QTrQeIv8", "displayOrder": 86, "entitlementType": "DURABLE", "ext": {"tNkXpuQ4": {}}, "features": ["g9IiLxJp"], "images": [{"as": "TlIMuKCd", "caption": "At0XTdLL", "height": 80, "imageUrl": "1WSvdw7F", "smallImageUrl": "I8mOSB2r", "width": 43}], "itemIds": ["QkdnYlPH"], "itemQty": {"6J70BXWV": 39}, "itemType": "MEDIA", "listable": true, "localizations": {"ZzUrVRKR": {"description": "tJuZ5W7n", "localExt": {"PrKtUSfl": {}}, "longDescription": "KqC31jYv", "title": "8832yIJU"}}, "maxCount": 27, "maxCountPerUser": 12, "name": "m7GSrElr", "purchasable": false, "recurring": {"cycle": "MONTHLY", "fixedFreeDays": 51, "fixedTrialCycles": 86, "graceDays": 48}, "regionData": {"G8SZmnOv": [{"currencyCode": "u24EFzSQ", "currencyNamespace": "yIXv2yW4", "currencyType": "REAL", "discountAmount": 0, "discountExpireAt": "1999-03-08T00:00:00Z", "discountPercentage": 37, "discountPurchaseAt": "1994-03-25T00:00:00Z", "discountedPrice": 52, "expireAt": "1975-02-12T00:00:00Z", "price": 27, "purchaseAt": "1975-04-13T00:00:00Z", "trialPrice": 64}]}, "seasonType": "PASS", "sku": "0BjFUSZe", "stackable": true, "status": "ACTIVE", "tags": ["Z5SaUa0U"], "targetCurrencyCode": "xaP0Kwv6", "targetNamespace": "8OsqOUTP", "thumbnailUrl": "Xzelychm", "useCount": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'jLvnOWOk' \
    --namespace $AB_NAMESPACE \
    --storeId '5AekVVmT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 87 'UpdateItem' test.out

#- 88 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'IEG2ppf1' \
    --namespace $AB_NAMESPACE \
    --storeId 'fH3NwfEQ' \
    > test.out 2>&1
eval_tap $? 88 'DeleteItem' test.out

#- 89 AcquireItem
# body param: body
echo '{"count": 20, "orderNo": "dzI8JQzA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'p0rF8gvd' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'AcquireItem' test.out

#- 90 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'nF1yMvoX' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --storeId 'QZhvPg7V' \
    > test.out 2>&1
eval_tap $? 90 'GetApp' test.out

#- 91 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "X5rUNWJa", "previewUrl": "q1fjgDyp", "thumbnailUrl": "xO4ufKfU", "type": "video", "url": "mxSk0Ebj", "videoSource": "vimeo"}], "developer": "4dSLx4vs", "forumUrl": "b6rx9Xxs", "genres": ["MassivelyMultiplayer"], "localizations": {"8TJHpdZV": {"announcement": "C6y6b9fQ", "slogan": "pa7b36my"}}, "platformRequirements": {"8LWzMOfn": [{"additionals": "jwsIxM4s", "directXVersion": "9m2qWNvm", "diskSpace": "PPlRULr7", "graphics": "pPFCzbPX", "label": "1wwBznD7", "osVersion": "NLs7fb4s", "processor": "qWUpB4t2", "ram": "ieA8XRPh", "soundCard": "VzktsWib"}]}, "platforms": ["IOS"], "players": ["CrossPlatformMulti"], "primaryGenre": "RPG", "publisher": "KXMWuoFv", "releaseDate": "1997-05-03T00:00:00Z", "websiteUrl": "jBvBzZGO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'hAwcbpyb' \
    --namespace $AB_NAMESPACE \
    --storeId 'Zn4ZE5Om' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'UpdateApp' test.out

#- 92 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'bNkHnefZ' \
    --namespace $AB_NAMESPACE \
    --storeId 'WDwi6anY' \
    > test.out 2>&1
eval_tap $? 92 'DisableItem' test.out

#- 93 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'nQ92kVBD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 93 'GetItemDynamicData' test.out

#- 94 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'kaMy03Bu' \
    --namespace $AB_NAMESPACE \
    --storeId 'l4GW3V0W' \
    > test.out 2>&1
eval_tap $? 94 'EnableItem' test.out

#- 95 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'CbxvTGyc' \
    --itemId 'cHSkFQzg' \
    --namespace $AB_NAMESPACE \
    --storeId 'VR72Dhxb' \
    > test.out 2>&1
eval_tap $? 95 'FeatureItem' test.out

#- 96 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'r4HtKMGr' \
    --itemId '8tnOEeip' \
    --namespace $AB_NAMESPACE \
    --storeId '505iJTzZ' \
    > test.out 2>&1
eval_tap $? 96 'DefeatureItem' test.out

#- 97 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'uksb4hRE' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'False' \
    --language 'Ox3mATUs' \
    --populateBundle 'False' \
    --region '5Tmapkim' \
    --storeId 'opclvfm7' \
    > test.out 2>&1
eval_tap $? 97 'GetLocaleItem' test.out

#- 98 ReturnItem
# body param: body
echo '{"orderNo": "fdu7isKa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'WRcvkLtf' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 98 'ReturnItem' test.out

#- 99 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --name 'GySrACKa' \
    --offset '25' \
    --tag 'WWkDRcuL' \
    > test.out 2>&1
eval_tap $? 99 'QueryKeyGroups' test.out

#- 100 CreateKeyGroup
# body param: body
echo '{"description": "bIpVJnIA", "name": "FpX2SKNm", "status": "ACTIVE", "tags": ["cDRknJor"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'CreateKeyGroup' test.out

#- 101 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'twVqipgp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 101 'GetKeyGroup' test.out

#- 102 UpdateKeyGroup
# body param: body
echo '{"description": "XVyWoDjO", "name": "HrGczaXW", "status": "ACTIVE", "tags": ["pcAHtRkB"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'JXZwQ443' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'UpdateKeyGroup' test.out

#- 103 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'FfWtsTAA' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetKeyGroupDynamic' test.out

#- 104 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'gtCnvDp2' \
    --namespace $AB_NAMESPACE \
    --limit '90' \
    --offset '77' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 104 'ListKeys' test.out

#- 105 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'lTcBaljk' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 105 'UploadKeys' test.out

#- 106 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime '3sB4LS44' \
    --limit '14' \
    --offset '97' \
    --orderNos '["ONXuXihq"]' \
    --sortBy 'BVEXSyrZ' \
    --startTime 'KBvGa0Ls' \
    --status 'CHARGEBACK_REVERSED' \
    --withTotal 'False' \
    > test.out 2>&1
eval_tap $? 106 'QueryOrders' test.out

#- 107 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 107 'GetOrderStatistics' test.out

#- 108 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'P3LqrZcS' \
    > test.out 2>&1
eval_tap $? 108 'GetOrder' test.out

#- 109 RefundOrder
# body param: body
echo '{"description": "sGFDDAiS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'jXH3ypQa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'RefundOrder' test.out

#- 110 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'GetPaymentCallbackConfig' test.out

#- 111 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "FPMAjx7e", "privateKey": "dUxN5KMS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'UpdatePaymentCallbackConfig' test.out

#- 112 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'Ls21gdQU' \
    --externalId '0FhAQYQa' \
    --limit '66' \
    --notificationSource 'STRIPE' \
    --notificationType 'AApJtfB0' \
    --offset '98' \
    --paymentOrderNo 't8Zcpuz7' \
    --startDate 'BY3JPVnM' \
    --status 'PROCESSED' \
    > test.out 2>&1
eval_tap $? 112 'QueryPaymentNotifications' test.out

#- 113 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'FxkSaTdI' \
    --limit '79' \
    --offset '70' \
    --status 'REFUND_FAILED' \
    > test.out 2>&1
eval_tap $? 113 'QueryPaymentOrders' test.out

#- 114 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "dRQmMvxB", "currencyNamespace": "jpVFnEgs", "customParameters": {"ovZbx4UF": {}}, "description": "3pYMzeFc", "extOrderNo": "sBLCwhTS", "extUserId": "tBJZGkIS", "itemType": "APP", "language": "hX_QY", "metadata": {"sdpW3XyQ": "QmftmA5H"}, "notifyUrl": "UHioxzVh", "omitNotification": true, "platform": "Hc1rBqAX", "price": 40, "recurringPaymentOrderNo": "d4JQOWZB", "region": "zUvNkxTU", "returnUrl": "qI2XhbYw", "sandbox": true, "sku": "VSXpJb2J", "subscriptionId": "SuHHCRP9", "targetNamespace": "xW9VeYJC", "targetUserId": "DikIapum", "title": "YwbaGfsJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'CreatePaymentOrderByDedicated' test.out

#- 115 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'TgobWG93' \
    > test.out 2>&1
eval_tap $? 115 'ListExtOrderNoByExtTxId' test.out

#- 116 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'dH2MCGvo' \
    > test.out 2>&1
eval_tap $? 116 'GetPaymentOrder' test.out

#- 117 ChargePaymentOrder
# body param: body
echo '{"extTxId": "hrdRx6lV", "paymentMethod": "i7UcTmEw", "paymentProvider": "ALIPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '9mWH3XVf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'ChargePaymentOrder' test.out

#- 118 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "yejgTi2E"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '85VnFsoX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'RefundPaymentOrderByDedicated' test.out

#- 119 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 0, "currencyCode": "REa1WpsZ", "notifyType": "CHARGE", "paymentProvider": "WXPAY", "salesTax": 31, "vat": 61}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Pfic39c2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'SimulatePaymentOrderNotification' test.out

#- 120 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'q3a6kRuG' \
    > test.out 2>&1
eval_tap $? 120 'GetPaymentOrderChargeStatus' test.out

#- 121 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 121 'GetPlatformWalletConfig' test.out

#- 122 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["System"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'UpdatePlatformWalletConfig' test.out

#- 123 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Playstation' \
    > test.out 2>&1
eval_tap $? 123 'ResetPlatformWalletConfig' test.out

#- 124 CreateReward
# body param: body
echo '{"description": "ZVjAQCkW", "eventTopic": "jE3gJ6Aw", "maxAwarded": 96, "maxAwardedPerUser": 78, "namespaceExpression": "lFHpDCFu", "rewardCode": "t39Jhj3l", "rewardConditions": [{"condition": "mfXJxKJN", "conditionName": "RD3KumRj", "eventName": "k3wZYVb3", "rewardItems": [{"duration": 88, "itemId": "Fssnx4JY", "quantity": 49}]}], "userIdExpression": "1kXakVQo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'CreateReward' test.out

#- 125 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'G01upsR2' \
    --limit '83' \
    --offset '61' \
    --sortBy '["namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 125 'QueryRewards' test.out

#- 126 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'ExportRewards' test.out

#- 127 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'False' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 127 'ImportRewards' test.out

#- 128 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'CZcCX2iL' \
    > test.out 2>&1
eval_tap $? 128 'GetReward' test.out

#- 129 UpdateReward
# body param: body
echo '{"description": "iQGTL6OY", "eventTopic": "jLlXUV78", "maxAwarded": 16, "maxAwardedPerUser": 4, "namespaceExpression": "sQIO0DRa", "rewardCode": "gPXzsBfU", "rewardConditions": [{"condition": "hCoGFgir", "conditionName": "dMLexA5z", "eventName": "JvQd2cOV", "rewardItems": [{"duration": 98, "itemId": "FoiaYaSo", "quantity": 28}]}], "userIdExpression": "g7pSsQhv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'XbGvqRVS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'UpdateReward' test.out

#- 130 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'SwvlRzdN' \
    > test.out 2>&1
eval_tap $? 130 'DeleteReward' test.out

#- 131 CheckEventCondition
# body param: body
echo '{"payload": {"XrfoKVR4": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'HhlPEfSM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'CheckEventCondition' test.out

#- 132 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 132 'ListStores' test.out

#- 133 CreateStore
# body param: body
echo '{"defaultLanguage": "2K29oqfZ", "defaultRegion": "ssibgoTF", "description": "QAmIZiTS", "supportedLanguages": ["stC2yOum"], "supportedRegions": ["zHMhXysw"], "title": "s3Fwnu7O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'CreateStore' test.out

#- 134 ImportStore
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'X9FZvwJ8' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 134 'ImportStore' test.out

#- 135 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'GetPublishedStore' test.out

#- 136 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 136 'DeletePublishedStore' test.out

#- 137 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 137 'GetPublishedStoreBackup' test.out

#- 138 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'RollbackPublishedStore' test.out

#- 139 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'OQFuCH68' \
    > test.out 2>&1
eval_tap $? 139 'GetStore' test.out

#- 140 UpdateStore
# body param: body
echo '{"defaultLanguage": "pTmT632j", "defaultRegion": "8QfhNDTH", "description": "b8lFvBol", "supportedLanguages": ["f9Pdi5BL"], "supportedRegions": ["CsT8g72t"], "title": "hhduZnNj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId '9cRNlTBx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateStore' test.out

#- 141 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'l3nKj6B4' \
    > test.out 2>&1
eval_tap $? 141 'DeleteStore' test.out

#- 142 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'ffgtxiPL' \
    --action 'CREATE' \
    --itemSku 'V0odbfas' \
    --itemType 'INGAMEITEM' \
    --limit '78' \
    --offset '58' \
    --selected 'True' \
    --sortBy '["updatedAt:desc"]' \
    --status 'PUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'ryryOWzh' \
    --updatedAtStart 'hEmSVFhA' \
    > test.out 2>&1
eval_tap $? 142 'QueryChanges' test.out

#- 143 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'lEacAAoA' \
    > test.out 2>&1
eval_tap $? 143 'PublishAll' test.out

#- 144 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'fsuMB4W3' \
    > test.out 2>&1
eval_tap $? 144 'PublishSelected' test.out

#- 145 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'HIcvS0AL' \
    > test.out 2>&1
eval_tap $? 145 'SelectAllRecords' test.out

#- 146 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId '4tYCwCdC' \
    --action 'CREATE' \
    --itemSku 'gcxlbl30' \
    --itemType 'BUNDLE' \
    --type 'STORE' \
    --updatedAtEnd 'HEjMI4Lc' \
    --updatedAtStart 'gkyDsccF' \
    > test.out 2>&1
eval_tap $? 146 'GetStatistic' test.out

#- 147 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'dvzoafML' \
    > test.out 2>&1
eval_tap $? 147 'UnselectAllRecords' test.out

#- 148 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'oraVj5Ri' \
    --namespace $AB_NAMESPACE \
    --storeId 'DHvo7Kep' \
    > test.out 2>&1
eval_tap $? 148 'SelectRecord' test.out

#- 149 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'gBTMRiEd' \
    --namespace $AB_NAMESPACE \
    --storeId 'eeQwLUW0' \
    > test.out 2>&1
eval_tap $? 149 'UnselectRecord' test.out

#- 150 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'VLupH83A' \
    --targetStoreId 'uxFEFRDT' \
    > test.out 2>&1
eval_tap $? 150 'CloneStore' test.out

#- 151 ExportStore
$CLI_EXE \
    --sn platform \
    --op ExportStore \
    --namespace $AB_NAMESPACE \
    --storeId 't2mauywa' \
    > test.out 2>&1
eval_tap $? 151 'ExportStore' test.out

#- 152 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'SETUP' \
    --itemId 'EsPBAM1a' \
    --limit '40' \
    --offset '18' \
    --sku 'NqlmpKGh' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    --userId 'XeZepm7t' \
    > test.out 2>&1
eval_tap $? 152 'QuerySubscriptions' test.out

#- 153 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'F1wKhQ4H' \
    > test.out 2>&1
eval_tap $? 153 'RecurringChargeSubscription' test.out

#- 154 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'jEcagyjZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 154 'GetTicketDynamic' test.out

#- 155 DecreaseTicketSale
# body param: body
echo '{"orderNo": "ITRuoWjI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'CoCN3Nyz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'DecreaseTicketSale' test.out

#- 156 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'AV4niQQV' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 156 'GetTicketBoothID' test.out

#- 157 IncreaseTicketSale
# body param: body
echo '{"count": 18, "orderNo": "gDJE12W5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'eoplrOXw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'IncreaseTicketSale' test.out

#- 158 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "ASJ1PtQu", "value": 46}], "steamUserId": "OJQKgor2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'UMJt4EJ9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'UnlockSteamUserAchievement' test.out

#- 159 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'GccYTYxP' \
    --xboxUserId 'TgpBNsUv' \
    > test.out 2>&1
eval_tap $? 159 'GetXblUserAchievements' test.out

#- 160 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "UKhANjqu", "percentComplete": 54}], "serviceConfigId": "EHOJbaQp", "titleId": "z0dfiuv0", "xboxUserId": "51lkPCaZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'sjvFvhZd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'UpdateXblUserAchievement' test.out

#- 161 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'wi1Ti6V2' \
    > test.out 2>&1
eval_tap $? 161 'AnonymizeCampaign' test.out

#- 162 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'uWuCsB8F' \
    > test.out 2>&1
eval_tap $? 162 'AnonymizeEntitlement' test.out

#- 163 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'bVDwhpNC' \
    > test.out 2>&1
eval_tap $? 163 'AnonymizeFulfillment' test.out

#- 164 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'Ll2bgIc1' \
    > test.out 2>&1
eval_tap $? 164 'AnonymizeIntegration' test.out

#- 165 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'y49bqpbf' \
    > test.out 2>&1
eval_tap $? 165 'AnonymizeOrder' test.out

#- 166 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'yytwm6jQ' \
    > test.out 2>&1
eval_tap $? 166 'AnonymizePayment' test.out

#- 167 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'JpfOIKCe' \
    > test.out 2>&1
eval_tap $? 167 'AnonymizeSubscription' test.out

#- 168 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'gUjKQRjo' \
    > test.out 2>&1
eval_tap $? 168 'AnonymizeWallet' test.out

#- 169 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'yn3bGyFG' \
    --activeOnly 'True' \
    --appType 'DEMO' \
    --entitlementClazz 'MEDIA' \
    --entitlementName 'ylTi4qPF' \
    --itemId '["190sf2Zw"]' \
    --limit '83' \
    --offset '16' \
    > test.out 2>&1
eval_tap $? 169 'QueryUserEntitlements' test.out

#- 170 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1999-02-26T00:00:00Z", "grantedCode": "I4k3KwV7", "itemId": "P8R9t4dB", "itemNamespace": "RpBp4noj", "language": "ddBa_UnXi", "quantity": 95, "region": "GVz9Jxj8", "source": "PURCHASE", "startDate": "1973-02-20T00:00:00Z", "storeId": "rDo6OmeK"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'L7GPoI9u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'GrantUserEntitlement' test.out

#- 171 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'WOFTWdRr' \
    --activeOnly 'True' \
    --appId 'Nmv8k1w1' \
    > test.out 2>&1
eval_tap $? 171 'GetUserAppEntitlementByAppId' test.out

#- 172 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId '9JsHSqOB' \
    --activeOnly 'True' \
    --limit '14' \
    --offset '15' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 172 'QueryUserEntitlementsByAppType' test.out

#- 173 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'kcO6J7jS' \
    --activeOnly 'True' \
    --entitlementClazz 'APP' \
    --itemId '4J5c6ayF' \
    > test.out 2>&1
eval_tap $? 173 'GetUserEntitlementByItemId' test.out

#- 174 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'nSrfmObF' \
    --activeOnly 'True' \
    --entitlementClazz 'MEDIA' \
    --sku 'GCRQtMc3' \
    > test.out 2>&1
eval_tap $? 174 'GetUserEntitlementBySku' test.out

#- 175 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'an8ZoxLw' \
    --appIds '["XHS1oUzD"]' \
    --itemIds '["dDcZ0Rj3"]' \
    --skus '["YM1fz9Cj"]' \
    > test.out 2>&1
eval_tap $? 175 'ExistsAnyUserActiveEntitlement' test.out

#- 176 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'qtqeiyDC' \
    --itemIds '["K7C3u5Gc"]' \
    > test.out 2>&1
eval_tap $? 176 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 177 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'Pbmi5KiF' \
    --appId 'DVpfvR2W' \
    > test.out 2>&1
eval_tap $? 177 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 178 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'l0iShagp' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'FuZu45zs' \
    > test.out 2>&1
eval_tap $? 178 'GetUserEntitlementOwnershipByItemId' test.out

#- 179 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'rSpvMLvQ' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku '3sPxFu8L' \
    > test.out 2>&1
eval_tap $? 179 'GetUserEntitlementOwnershipBySku' test.out

#- 180 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'QGQCAj6O' \
    --entitlementIds '7ivhNIjV' \
    > test.out 2>&1
eval_tap $? 180 'RevokeUserEntitlements' test.out

#- 181 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'T5HSR00U' \
    --namespace $AB_NAMESPACE \
    --userId 'KSLWWzOp' \
    > test.out 2>&1
eval_tap $? 181 'GetUserEntitlement' test.out

#- 182 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1976-10-27T00:00:00Z", "nullFieldList": ["wZQZUMaA"], "startDate": "1988-08-08T00:00:00Z", "status": "CONSUMED", "useCount": 65}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'bVtzsBTC' \
    --namespace $AB_NAMESPACE \
    --userId 'OWEnaLzH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateUserEntitlement' test.out

#- 183 ConsumeUserEntitlement
# body param: body
echo '{"useCount": 40}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'YKrr89z0' \
    --namespace $AB_NAMESPACE \
    --userId 'RkL932B7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'ConsumeUserEntitlement' test.out

#- 184 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'thDQ3hfV' \
    --namespace $AB_NAMESPACE \
    --userId 'nPK8iK8c' \
    > test.out 2>&1
eval_tap $? 184 'DisableUserEntitlement' test.out

#- 185 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'dZPnXwGS' \
    --namespace $AB_NAMESPACE \
    --userId '9fAlxtje' \
    > test.out 2>&1
eval_tap $? 185 'EnableUserEntitlement' test.out

#- 186 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'ZUrqmIc7' \
    --namespace $AB_NAMESPACE \
    --userId 'El44MEAv' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlementHistories' test.out

#- 187 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'aPTwwJrG' \
    --namespace $AB_NAMESPACE \
    --userId '06MtcF7t' \
    > test.out 2>&1
eval_tap $? 187 'RevokeUserEntitlement' test.out

#- 188 FulfillItem
# body param: body
echo '{"duration": 59, "endDate": "1992-07-02T00:00:00Z", "itemId": "coQBTWMc", "itemSku": "41xDmUjk", "language": "Xi2LgkAL", "order": {"currency": {"currencyCode": "Gxw6qgvI", "currencySymbol": "JBe6rDGb", "currencyType": "VIRTUAL", "decimals": 78, "namespace": "zsyQVqvS"}, "ext": {"gtpUVddL": {}}, "free": true}, "orderNo": "1cTLmuKl", "origin": "System", "quantity": 67, "region": "Zdwwo66H", "source": "DLC", "startDate": "1996-07-14T00:00:00Z", "storeId": "tHev8RX4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'MWRFklN1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'FulfillItem' test.out

#- 189 RedeemCode
# body param: body
echo '{"code": "3WW7U0sR", "language": "cNZr_kQzL", "region": "7ChMCxb6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'xdzl2OYV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'RedeemCode' test.out

#- 190 FulfillRewards
# body param: body
echo '{"origin": "Xbox", "rewards": [{"currency": {"currencyCode": "JNC7EruV", "namespace": "ITunbxaO"}, "item": {"itemId": "WNrMkfAL", "itemSku": "UDrR6M3v", "itemType": "zu84TNQY"}, "quantity": 57, "type": "CURRENCY"}], "source": "REWARD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'FvpQOjjk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'FulfillRewards' test.out

#- 191 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'IYAQEcxG' \
    --endTime 'PTkn2NJ9' \
    --limit '12' \
    --offset '67' \
    --productId 'mB0vflV2' \
    --startTime 'VptGYAEz' \
    --status 'FAILED' \
    --type 'STADIA' \
    > test.out 2>&1
eval_tap $? 191 'QueryUserIAPOrders' test.out

#- 192 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'hhR9WLiV' \
    > test.out 2>&1
eval_tap $? 192 'QueryAllUserIAPOrders' test.out

#- 193 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "bY_wblY", "productId": "gZsJoonM", "region": "pOQ9Jmh8", "type": "STEAM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'wQ28fmxM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'MockFulfillIAPItem' test.out

#- 194 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'FN8d9fdH' \
    --itemId 'AHphhby7' \
    --limit '15' \
    --offset '65' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 194 'QueryUserOrders' test.out

#- 195 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "KeIkY4Fc", "currencyNamespace": "8atJ3J4g", "discountedPrice": 2, "ext": {"k9YdEm0o": {}}, "itemId": "9Rjjnkhw", "language": "q75VqZH8", "options": {"skipPriceValidation": true}, "platform": "Xbox", "price": 96, "quantity": 62, "region": "C8oFuU2O", "returnUrl": "FJ6w1Hbi", "sandbox": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'iiaZ8Uc2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminCreateUserOrder' test.out

#- 196 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'rWpzX2mg' \
    --itemId 'oBhruuvE' \
    > test.out 2>&1
eval_tap $? 196 'CountOfPurchasedItem' test.out

#- 197 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'zpyRiFs6' \
    --userId '3b4Pru2p' \
    > test.out 2>&1
eval_tap $? 197 'GetUserOrder' test.out

#- 198 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGED", "statusReason": "VBYjKI1Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'lcKXBXcP' \
    --userId 'AsjW7zBx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'UpdateUserOrderStatus' test.out

#- 199 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'pVc8svji' \
    --userId 'FtRe8k7a' \
    > test.out 2>&1
eval_tap $? 199 'FulfillUserOrder' test.out

#- 200 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'mplfhuHr' \
    --userId 'opVxIvBj' \
    > test.out 2>&1
eval_tap $? 200 'GetUserOrderGrant' test.out

#- 201 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'sYUEDp1t' \
    --userId 'aP9py4Fl' \
    > test.out 2>&1
eval_tap $? 201 'GetUserOrderHistories' test.out

#- 202 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "6UoVxgHJ"}, "authorisedTime": "1989-08-03T00:00:00Z", "chargebackReversedTime": "1977-01-14T00:00:00Z", "chargebackTime": "1974-12-11T00:00:00Z", "chargedTime": "1981-12-24T00:00:00Z", "createdTime": "1994-07-11T00:00:00Z", "currency": {"currencyCode": "Ogyu9dhx", "currencySymbol": "aofTjMYG", "currencyType": "VIRTUAL", "decimals": 49, "namespace": "pcIN4uUI"}, "customParameters": {"zvUI5b1w": {}}, "extOrderNo": "xS2yBTD8", "extTxId": "uNeauLeX", "extUserId": "NgQBnXZk", "issuedAt": "1992-10-26T00:00:00Z", "metadata": {"UEgyyiBe": "JARFVbUv"}, "namespace": "LNtDdAnt", "nonceStr": "KI6vd3Qd", "paymentMethod": "SHH2Avos", "paymentMethodFee": 87, "paymentOrderNo": "9Nk0JJYX", "paymentProvider": "ADYEN", "paymentProviderFee": 85, "paymentStationUrl": "g1LwgzWR", "price": 41, "refundedTime": "1999-05-05T00:00:00Z", "salesTax": 17, "sandbox": false, "sku": "tDdFSOEI", "status": "CHARGED", "statusReason": "Fse4ocrq", "subscriptionId": "jWTbUayI", "subtotalPrice": 82, "targetNamespace": "8oO0z1Vf", "targetUserId": "fDHyFM7T", "tax": 66, "totalPrice": 12, "totalTax": 19, "txEndTime": "1971-07-06T00:00:00Z", "type": "DDxngEqs", "userId": "AbWEfTc2", "vat": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'SU2SijyS' \
    --userId 'pnqX01uD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'ProcessUserOrderNotification' test.out

#- 203 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'kQ1tv3iM' \
    --userId 'MW8aqVbw' \
    > test.out 2>&1
eval_tap $? 203 'DownloadUserOrderReceipt' test.out

#- 204 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "ArhGSaFx", "currencyNamespace": "yAsPnfbH", "customParameters": {"X5TpIV6e": {}}, "description": "7dMKaAr2", "extOrderNo": "VSmtP8qx", "extUserId": "tNo76oPR", "itemType": "MEDIA", "language": "Xug-wxbZ_078", "metadata": {"nqhXgmVQ": "HoZNPy0W"}, "notifyUrl": "qu4qtxTy", "omitNotification": true, "platform": "vNhypNLp", "price": 28, "recurringPaymentOrderNo": "rjcAKSuv", "region": "gVjdXMn2", "returnUrl": "juyP3WX3", "sandbox": true, "sku": "1OLRUrZ6", "subscriptionId": "vwIqGnoq", "title": "XXAZd7bv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'O6Xg2xx5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'CreateUserPaymentOrder' test.out

#- 205 RefundUserPaymentOrder
# body param: body
echo '{"description": "vZXC9YsE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'XEe9iC3H' \
    --userId 'p95AtWE8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 205 'RefundUserPaymentOrder' test.out

#- 206 ApplyUserRedemption
# body param: body
echo '{"code": "drEipXZf", "orderNo": "ocCS9nGM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId '6fYF1o77' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'ApplyUserRedemption' test.out

#- 207 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'M1VVgHHe' \
    --chargeStatus 'SETUP' \
    --itemId '0flEPUxH' \
    --limit '83' \
    --offset '15' \
    --sku 'E4YwCRBG' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 207 'QueryUserSubscriptions' test.out

#- 208 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'ZlDIjOfY' \
    --excludeSystem 'False' \
    --limit '63' \
    --offset '19' \
    --subscriptionId 'ISj4wwqL' \
    > test.out 2>&1
eval_tap $? 208 'GetUserSubscriptionActivities' test.out

#- 209 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 31, "itemId": "FnnNydTc", "language": "POtfkEyL", "reason": "h6l74AQY", "region": "5ulxH0li", "source": "oSoooPhQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '9xlLMe7m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'PlatformSubscribeSubscription' test.out

#- 210 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'a8Qc9aGN' \
    --itemId '5UJPLchi' \
    > test.out 2>&1
eval_tap $? 210 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 211 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ivOQdByk' \
    --userId '3mWQ93Bx' \
    > test.out 2>&1
eval_tap $? 211 'GetUserSubscription' test.out

#- 212 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'bP1VP8rK' \
    --userId 'uVwTTGSX' \
    > test.out 2>&1
eval_tap $? 212 'DeleteUserSubscription' test.out

#- 213 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "G8ymO7ml"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '7SCwM6RZ' \
    --userId 'NerJQroY' \
    --force 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'CancelSubscription' test.out

#- 214 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 42, "reason": "Hx2dAjFF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '0BBGwZ7X' \
    --userId 'WhdoYx12' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'GrantDaysToSubscription' test.out

#- 215 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '7YYBoxSC' \
    --userId 'FsBbZL16' \
    --excludeFree 'False' \
    --limit '78' \
    --offset '24' \
    > test.out 2>&1
eval_tap $? 215 'GetUserSubscriptionBillingHistories' test.out

#- 216 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "Oi4OPQ8Z"}, "authorisedTime": "1986-07-23T00:00:00Z", "chargebackReversedTime": "1984-01-16T00:00:00Z", "chargebackTime": "1984-04-12T00:00:00Z", "chargedTime": "1975-06-14T00:00:00Z", "createdTime": "1978-06-25T00:00:00Z", "currency": {"currencyCode": "PQlP1zgk", "currencySymbol": "xv25ZHaR", "currencyType": "VIRTUAL", "decimals": 37, "namespace": "MhIfogRB"}, "customParameters": {"8XeZhAM4": {}}, "extOrderNo": "MAL57riU", "extTxId": "2QbQFRCX", "extUserId": "EWG8Sxt5", "issuedAt": "1981-06-07T00:00:00Z", "metadata": {"TkIWbiHT": "UDDL4yzT"}, "namespace": "nQv0e99z", "nonceStr": "YNkH6Puv", "paymentMethod": "ERGP7fmy", "paymentMethodFee": 6, "paymentOrderNo": "8aJkJYGK", "paymentProvider": "ALIPAY", "paymentProviderFee": 45, "paymentStationUrl": "BCsCLrfH", "price": 95, "refundedTime": "1998-02-10T00:00:00Z", "salesTax": 90, "sandbox": false, "sku": "r0UZS96w", "status": "INIT", "statusReason": "9rgdYvyf", "subscriptionId": "GQvBMJGa", "subtotalPrice": 86, "targetNamespace": "WFilSDbJ", "targetUserId": "xY0YR9wX", "tax": 95, "totalPrice": 86, "totalTax": 50, "txEndTime": "1999-01-02T00:00:00Z", "type": "yquoA8CG", "userId": "DmAN0yX8", "vat": 47}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'u01b0bUq' \
    --userId 'Dheu9idR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'ProcessUserSubscriptionNotification' test.out

#- 217 AcquireUserTicket
# body param: body
echo '{"count": 42, "orderNo": "Q8V1CaeT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName '74VP6Kqp' \
    --namespace $AB_NAMESPACE \
    --userId 'Z2JC53CG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'AcquireUserTicket' test.out

#- 218 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'QXzjGEvv' \
    > test.out 2>&1
eval_tap $? 218 'QueryUserCurrencyWallets' test.out

#- 219 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'r9VR6Qqa' \
    --namespace $AB_NAMESPACE \
    --userId 'oAupKSo0' \
    --limit '87' \
    --offset '67' \
    > test.out 2>&1
eval_tap $? 219 'ListUserCurrencyTransactions' test.out

#- 220 CheckWallet
eval_tap 0 220 'CheckWallet # SKIP deprecated' test.out

#- 221 CreditUserWallet
# body param: body
echo '{"amount": 87, "expireAt": "1983-11-06T00:00:00Z", "origin": "Twitch", "reason": "3VcaDWEz", "source": "REWARD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'Ci2tWPzh' \
    --namespace $AB_NAMESPACE \
    --userId 'rjLFLLuG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'CreditUserWallet' test.out

#- 222 PayWithUserWallet
# body param: body
echo '{"amount": 23, "walletPlatform": "Nintendo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'Vkn9ojnp' \
    --namespace $AB_NAMESPACE \
    --userId 'piU7rYU0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 222 'PayWithUserWallet' test.out

#- 223 GetUserWallet
eval_tap 0 223 'GetUserWallet # SKIP deprecated' test.out

#- 224 DebitUserWallet
eval_tap 0 224 'DebitUserWallet # SKIP deprecated' test.out

#- 225 DisableUserWallet
eval_tap 0 225 'DisableUserWallet # SKIP deprecated' test.out

#- 226 EnableUserWallet
eval_tap 0 226 'EnableUserWallet # SKIP deprecated' test.out

#- 227 ListUserWalletTransactions
eval_tap 0 227 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 228 QueryWallets
eval_tap 0 228 'QueryWallets # SKIP deprecated' test.out

#- 229 GetWallet
eval_tap 0 229 'GetWallet # SKIP deprecated' test.out

#- 230 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey '98E1JzPm' \
    --end 'aRkeYX8U' \
    --start '71w09mTa' \
    > test.out 2>&1
eval_tap $? 230 'SyncOrders' test.out

#- 231 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["p7y90X88"], "apiKey": "qbd2vRMU", "authoriseAsCapture": false, "blockedPaymentMethods": ["qoGBqBax"], "clientKey": "LbpDekuI", "dropInSettings": "zTODQZkN", "liveEndpointUrlPrefix": "g9XscMV2", "merchantAccount": "DnOo9Pao", "notificationHmacKey": "BSJJGgg8", "notificationPassword": "epTUehn6", "notificationUsername": "IzqXsteu", "returnUrl": "4pU694ex", "settings": "0bxtkvXI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'TestAdyenConfig' test.out

#- 232 TestAliPayConfig
# body param: body
echo '{"appId": "bCB52HlT", "privateKey": "eFVmpXnr", "publicKey": "WDCij8S7", "returnUrl": "3sQDNy12"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'TestAliPayConfig' test.out

#- 233 TestCheckoutConfig
# body param: body
echo '{"publicKey": "TJwxV0rw", "secretKey": "MM7HsMJn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'TestCheckoutConfig' test.out

#- 234 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'Z6Gyhfcr' \
    --region 'ddeIOhxQ' \
    > test.out 2>&1
eval_tap $? 234 'DebugMatchedPaymentMerchantConfig' test.out

#- 235 TestPayPalConfig
# body param: body
echo '{"clientID": "MImB13f1", "clientSecret": "obTKrwFX", "returnUrl": "C2Op2yXE", "webHookId": "IOAJh6XN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'TestPayPalConfig' test.out

#- 236 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["HWdmibqD"], "publishableKey": "eNic565h", "secretKey": "vy1VY236", "webhookSecret": "5rUHkxww"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'TestStripeConfig' test.out

#- 237 TestWxPayConfig
# body param: body
echo '{"appId": "NwFJyOBe", "key": "lglT04uR", "mchid": "mAeOhTei", "returnUrl": "bSq4H7xD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'TestWxPayConfig' test.out

#- 238 TestXsollaConfig
# body param: body
echo '{"apiKey": "e1jh7clQ", "flowCompletionUrl": "ulgjFzOE", "merchantId": 51, "projectId": 83, "projectSecretKey": "DGQYK5uG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'TestXsollaConfig' test.out

#- 239 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'sklKEj2c' \
    > test.out 2>&1
eval_tap $? 239 'GetPaymentMerchantConfig' test.out

#- 240 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["ImuLS8rr"], "apiKey": "BfOaAENF", "authoriseAsCapture": true, "blockedPaymentMethods": ["nYbIQIDk"], "clientKey": "Tf41ag7C", "dropInSettings": "X8oWPut7", "liveEndpointUrlPrefix": "xraYvaea", "merchantAccount": "iep5aTdb", "notificationHmacKey": "joDWOL2g", "notificationPassword": "mjDt1rOz", "notificationUsername": "0DT1Axwh", "returnUrl": "im0K97Zl", "settings": "RomBcUU8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id '6i9DJulX' \
    --sandbox 'False' \
    --validate 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'UpdateAdyenConfig' test.out

#- 241 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id '6Q4PkLkw' \
    --sandbox 'False' \
    > test.out 2>&1
eval_tap $? 241 'TestAdyenConfigById' test.out

#- 242 UpdateAliPayConfig
# body param: body
echo '{"appId": "g4w7voon", "privateKey": "sTuM2oBE", "publicKey": "Cnfwi61i", "returnUrl": "gqpB4WwK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'tAnQQIfN' \
    --sandbox 'True' \
    --validate 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'UpdateAliPayConfig' test.out

#- 243 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'kbUlxAfB' \
    --sandbox 'True' \
    > test.out 2>&1
eval_tap $? 243 'TestAliPayConfigById' test.out

#- 244 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "J3twKU1E", "secretKey": "8SglSHPD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'OBkao6x7' \
    --sandbox 'True' \
    --validate 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'UpdateCheckoutConfig' test.out

#- 245 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'NZdIGHiC' \
    --sandbox 'False' \
    > test.out 2>&1
eval_tap $? 245 'TestCheckoutConfigById' test.out

#- 246 UpdatePayPalConfig
# body param: body
echo '{"clientID": "3vs48k8G", "clientSecret": "mWbZOgcn", "returnUrl": "bkNsJBKf", "webHookId": "FAZF2oC4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'm8qmGI4g' \
    --sandbox 'True' \
    --validate 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'UpdatePayPalConfig' test.out

#- 247 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'gLXzEcgK' \
    --sandbox 'False' \
    > test.out 2>&1
eval_tap $? 247 'TestPayPalConfigById' test.out

#- 248 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["clUWy7ZJ"], "publishableKey": "N4AVWNaW", "secretKey": "2qMkZ2m9", "webhookSecret": "trvZisCV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'MqlZ6nzc' \
    --sandbox 'True' \
    --validate 'True' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'UpdateStripeConfig' test.out

#- 249 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '44SCrWkK' \
    --sandbox 'True' \
    > test.out 2>&1
eval_tap $? 249 'TestStripeConfigById' test.out

#- 250 UpdateWxPayConfig
# body param: body
echo '{"appId": "20CUuON0", "key": "qlw6dAFv", "mchid": "7zSESiUA", "returnUrl": "VN1CwX4Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'MRG0Gf1r' \
    --validate 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'UpdateWxPayConfig' test.out

#- 251 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'Ls27GUn4' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 251 'UpdateWxPayConfigCert' test.out

#- 252 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'LXB9YV8F' \
    > test.out 2>&1
eval_tap $? 252 'TestWxPayConfigById' test.out

#- 253 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "W73YegpN", "flowCompletionUrl": "cJMlA9wU", "merchantId": 13, "projectId": 92, "projectSecretKey": "sQ5njC8V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'O4sgoRFc' \
    --validate 'False' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'UpdateXsollaConfig' test.out

#- 254 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'G9EvgBLb' \
    > test.out 2>&1
eval_tap $? 254 'TestXsollaConfigById' test.out

#- 255 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": false, "size": "LARGE", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'ry1q7Ru0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'UpdateXsollaUIConfig' test.out

#- 256 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '60' \
    --namespace_ 'PX2t5Kl8' \
    --offset '64' \
    --region '5Sm4GZYu' \
    > test.out 2>&1
eval_tap $? 256 'QueryPaymentProviderConfig' test.out

#- 257 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "v2f6vrf7", "region": "yzKmiSoL", "sandboxTaxJarApiToken": "dcKYGij2", "specials": ["XSOLLA"], "taxJarApiToken": "ob7nz3cB", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'CreatePaymentProviderConfig' test.out

#- 258 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 258 'GetAggregatePaymentProviders' test.out

#- 259 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'OiieVeCI' \
    --region 'Jp60mv88' \
    > test.out 2>&1
eval_tap $? 259 'DebugMatchedPaymentProviderConfig' test.out

#- 260 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 260 'GetSpecialPaymentProviders' test.out

#- 261 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "FYRXnDSO", "region": "YxR9xEcI", "sandboxTaxJarApiToken": "7ktZgyQ1", "specials": ["ADYEN"], "taxJarApiToken": "qgZnaDTm", "taxJarEnabled": true, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id '1mZu6XW6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'UpdatePaymentProviderConfig' test.out

#- 262 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'by2jUjXr' \
    > test.out 2>&1
eval_tap $? 262 'DeletePaymentProviderConfig' test.out

#- 263 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 263 'GetPaymentTaxConfig' test.out

#- 264 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "2YyM5ho1", "taxJarApiToken": "nPrfkWpD", "taxJarEnabled": true, "taxJarProductCodesMapping": {"1gbwdSWE": "GD0k52Xl"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'UpdatePaymentTaxConfig' test.out

#- 265 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'do1D8HlE' \
    --end 'uQQfYbi9' \
    --start 'H9dFCgRp' \
    > test.out 2>&1
eval_tap $? 265 'SyncPaymentOrders' test.out

#- 266 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language '7uEwOPWr' \
    --storeId 'KnASgjfb' \
    > test.out 2>&1
eval_tap $? 266 'PublicGetRootCategories' test.out

#- 267 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'B7kWEU28' \
    --storeId 'xX2fI68k' \
    > test.out 2>&1
eval_tap $? 267 'DownloadCategories' test.out

#- 268 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'SyNp7CBC' \
    --namespace $AB_NAMESPACE \
    --language 'tgT4nlpO' \
    --storeId '5aE9RqY1' \
    > test.out 2>&1
eval_tap $? 268 'PublicGetCategory' test.out

#- 269 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'zhD25toA' \
    --namespace $AB_NAMESPACE \
    --language 'LOug3D6s' \
    --storeId 'ySWjGkmD' \
    > test.out 2>&1
eval_tap $? 269 'PublicGetChildCategories' test.out

#- 270 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'xeIvWSM0' \
    --namespace $AB_NAMESPACE \
    --language 'L1etOsAo' \
    --storeId 'ob5LsBHH' \
    > test.out 2>&1
eval_tap $? 270 'PublicGetDescendantCategories' test.out

#- 271 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'VIRTUAL' \
    > test.out 2>&1
eval_tap $? 271 'PublicListCurrencies' test.out

#- 272 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'Sv4Bl1JL' \
    --region 'ViUnCf9b' \
    --storeId 'r0AwrYym' \
    --appId 'vbyVtbyX' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetItemByAppId' test.out

#- 273 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DEMO' \
    --baseAppId 'lS0dtEcG' \
    --categoryPath 'J3VfsszE' \
    --features '68nyiKBC' \
    --itemType 'SEASON' \
    --language 'lIgcjAQg' \
    --limit '71' \
    --offset '89' \
    --region '7ut6fWj0' \
    --sortBy '["name"]' \
    --storeId 'jzR1qk50' \
    --tags 'WTJSWMGC' \
    > test.out 2>&1
eval_tap $? 273 'PublicQueryItems' test.out

#- 274 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'WOqgPcQE' \
    --region 'u7XP4K3h' \
    --storeId '5qA8vxWI' \
    --sku 'wznTWhLb' \
    > test.out 2>&1
eval_tap $? 274 'PublicGetItemBySku' test.out

#- 275 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'xZXBhedB' \
    --region 'iiMbLGcB' \
    --storeId 'OF8UnezJ' \
    --itemIds 'G2VBYcf3' \
    > test.out 2>&1
eval_tap $? 275 'PublicBulkGetItems' test.out

#- 276 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --limit '52' \
    --offset '72' \
    --region 'gvjNNHD8' \
    --storeId '55hjpm3s' \
    --keyword 's60uZFam' \
    --language 'FRGicFWB' \
    > test.out 2>&1
eval_tap $? 276 'PublicSearchItems' test.out

#- 277 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'zTUohtqJ' \
    --namespace $AB_NAMESPACE \
    --language 'USbFzSBV' \
    --region 'ZmKweECu' \
    --storeId 'D3sZMCE8' \
    > test.out 2>&1
eval_tap $? 277 'PublicGetApp' test.out

#- 278 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'dESgloJK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 278 'PublicGetItemDynamicData' test.out

#- 279 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId '7nM6Je8r' \
    --namespace $AB_NAMESPACE \
    --language 'VsrMiXvU' \
    --populateBundle 'True' \
    --region 'pXJUBosG' \
    --storeId 'v2E5Ud8R' \
    > test.out 2>&1
eval_tap $? 279 'PublicGetItem' test.out

#- 280 GetPaymentCustomization
eval_tap 0 280 'GetPaymentCustomization # SKIP deprecated' test.out

#- 281 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "40Via1HQ", "paymentProvider": "WXPAY", "returnUrl": "TJx6eE61", "ui": "z1d23WGf", "zipCode": "1zfjnOgb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'PublicGetPaymentUrl' test.out

#- 282 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'DHxFOx68' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetPaymentMethods' test.out

#- 283 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'rBOBVv5z' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetUnpaidPaymentOrder' test.out

#- 284 Pay
# body param: body
echo '{"token": "a3wZKkkB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'XOpjG8DM' \
    --paymentProvider 'ADYEN' \
    --zipCode 'CPVOXyHl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'Pay' test.out

#- 285 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Ma4Gckkt' \
    > test.out 2>&1
eval_tap $? 285 'PublicCheckPaymentOrderPaidStatus' test.out

#- 286 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'False' \
    --paymentProvider 'ALIPAY' \
    --region '98gTKGck' \
    > test.out 2>&1
eval_tap $? 286 'GetPaymentPublicConfig' test.out

#- 287 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'RJxWrHhn' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetQRCode' test.out

#- 288 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID '4YOK6Mnf' \
    --foreinginvoice 'eVldbEnL' \
    --invoiceId 'YWOzyOB0' \
    --payload 'kZoeJIWk' \
    --redirectResult 'u1PBeZzo' \
    --resultCode 'nuQzxLOD' \
    --sessionId 'S8nTAouP' \
    --status 'R62RXcek' \
    --token 'OPk51sYy' \
    --type '0IuLJPPN' \
    --userId 'clQgSBJr' \
    --orderNo 'jtMtdov0' \
    --paymentOrderNo 'qluMZwWF' \
    --paymentProvider 'ADYEN' \
    --returnUrl 'BAVMLvAv' \
    > test.out 2>&1
eval_tap $? 288 'PublicNormalizePaymentReturnUrl' test.out

#- 289 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'zLjQSHwP' \
    --paymentOrderNo 'O48On3gC' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 289 'GetPaymentTaxValue' test.out

#- 290 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'MHOoAwKR' \
    > test.out 2>&1
eval_tap $? 290 'GetRewardByCode' test.out

#- 291 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'yMNCSpYG' \
    --limit '87' \
    --offset '43' \
    --sortBy '["rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 291 'QueryRewards1' test.out

#- 292 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'UXcWQhh5' \
    > test.out 2>&1
eval_tap $? 292 'GetReward1' test.out

#- 293 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 293 'PublicListStores' test.out

#- 294 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["iGhyoneU"]' \
    --itemIds '["WbDyvutn"]' \
    --skus '["dgicjax7"]' \
    > test.out 2>&1
eval_tap $? 294 'PublicExistsAnyMyActiveEntitlement' test.out

#- 295 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'ONnA3dvJ' \
    > test.out 2>&1
eval_tap $? 295 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 296 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --itemId 'cdyisYR5' \
    > test.out 2>&1
eval_tap $? 296 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 297 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --sku 'hrcsZyvb' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 298 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["LMUUSwl9"]' \
    --itemIds '["luLGR0MZ"]' \
    --skus '["KdWXP7dH"]' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetEntitlementOwnershipToken' test.out

#- 299 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'vzRSx4xn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 299 'PublicGetMyWallet' test.out

#- 300 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "EwseCMo1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'qFRoqmJU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'SyncEpicGameDLC' test.out

#- 301 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 74}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'DdelYwV2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'PublicSyncPsnDlcInventory' test.out

#- 302 SyncSteamDLC
# body param: body
echo '{"appId": "DRZfSBnT", "steamId": "2Vlyq5VW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'u4pLxrqf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'SyncSteamDLC' test.out

#- 303 SyncXboxDLC
# body param: body
echo '{"xstsToken": "Jr2pN0Ci"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Q7TyPiYI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'SyncXboxDLC' test.out

#- 304 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'IigSnJZP' \
    --appType 'DLC' \
    --entitlementClazz 'APP' \
    --entitlementName 'AS6Ozt9Y' \
    --itemId '["76Cmi2xN"]' \
    --limit '32' \
    --offset '57' \
    > test.out 2>&1
eval_tap $? 304 'PublicQueryUserEntitlements' test.out

#- 305 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'LHLyxhce' \
    --appId 'LzV7iL4m' \
    > test.out 2>&1
eval_tap $? 305 'PublicGetUserAppEntitlementByAppId' test.out

#- 306 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'wueWqEFl' \
    --limit '19' \
    --offset '28' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 306 'PublicQueryUserEntitlementsByAppType' test.out

#- 307 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'jiFds9U3' \
    --entitlementClazz 'MEDIA' \
    --itemId 'L9FKhfTM' \
    > test.out 2>&1
eval_tap $? 307 'PublicGetUserEntitlementByItemId' test.out

#- 308 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '3X1GHB92' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'FCpi6PSp' \
    > test.out 2>&1
eval_tap $? 308 'PublicGetUserEntitlementBySku' test.out

#- 309 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'yvcTnMqT' \
    --appIds '["7mELucAF"]' \
    --itemIds '["TafjIfXC"]' \
    --skus '["WzatjGv4"]' \
    > test.out 2>&1
eval_tap $? 309 'PublicExistsAnyUserActiveEntitlement' test.out

#- 310 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'UVj072ER' \
    --appId 'IdIjnEdK' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 311 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'EgYrC08a' \
    --entitlementClazz 'APP' \
    --itemId 'efHyULfa' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 312 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'LdtBzfi8' \
    --entitlementClazz 'APP' \
    --sku 'WrMf1NWl' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 313 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'gliWdgww' \
    --namespace $AB_NAMESPACE \
    --userId 'epIgKh0H' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserEntitlement' test.out

#- 314 PublicConsumeUserEntitlement
# body param: body
echo '{"useCount": 73}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'AG34nOfc' \
    --namespace $AB_NAMESPACE \
    --userId 'gWxTfKeg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'PublicConsumeUserEntitlement' test.out

#- 315 PublicRedeemCode
# body param: body
echo '{"code": "xR0U2CEx", "language": "Lvzr_wlBc_fD", "region": "nSJJFXEh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'P7ZQQTrp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'PublicRedeemCode' test.out

#- 316 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "jru", "productId": "jvE58hP4", "receiptData": "ov9Lr3Ek", "region": "TSLIshqS", "transactionId": "b4fuvTw4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'H9hubYPI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicFulfillAppleIAPItem' test.out

#- 317 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "2vvuiybj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'U8tFnbsY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'SyncEpicGamesInventory' test.out

#- 318 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "CSTo-rPcD", "orderId": "lu98YQD4", "packageName": "Otx1GZEB", "productId": "w1Jkhddh", "purchaseTime": 48, "purchaseToken": "686121Qm", "region": "42I9DcRe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'FeyLtNOt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'PublicFulfillGoogleIAPItem' test.out

#- 319 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "0SmGDzo1", "price": 0.04960720585891465, "productId": "uZYxY8RW", "serviceLabel": 13}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'iwIjK2g9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'PublicReconcilePlayStationStore' test.out

#- 320 SyncStadiaEntitlement
# body param: body
echo '{"appId": "kYwlqrDf", "language": "JhC-zCyP", "region": "XaaUskhg", "stadiaPlayerId": "MZlpxmjm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '9f23Llr7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'SyncStadiaEntitlement' test.out

#- 321 SyncSteamInventory
# body param: body
echo '{"appId": "WKchQrdR", "currencyCode": "vUcqAHel", "language": "GOVO-dlEV", "price": 0.21097745835905057, "productId": "Wi0LSLOv", "region": "WcjaWpr1", "steamId": "gk6Cb5tA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'BJO3orPf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'SyncSteamInventory' test.out

#- 322 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "izPDwbyf", "language": "cO-mGuv-bC", "region": "xN6VmGGp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'zEMvcnJG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'SyncTwitchDropsEntitlement' test.out

#- 323 SyncXboxInventory
# body param: body
echo '{"currencyCode": "qj2G28XQ", "price": 0.19170695842847907, "productId": "QtTyjAiD", "xstsToken": "03bfgKDy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'Eroox1Ze' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'SyncXboxInventory' test.out

#- 324 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'pOAJRlCb' \
    --itemId '7x8BbV5f' \
    --limit '84' \
    --offset '89' \
    --status 'CLOSED' \
    > test.out 2>&1
eval_tap $? 324 'PublicQueryUserOrders' test.out

#- 325 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "VljKVLc1", "discountedPrice": 1, "ext": {"VQNlsm8f": {}}, "itemId": "2XRjKcW9", "language": "orl_xQkM", "price": 15, "quantity": 20, "region": "XoXwCzge", "returnUrl": "VyEsm1LK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'dHKmMU5z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'PublicCreateUserOrder' test.out

#- 326 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 't6FeqZnS' \
    --userId 'rj4rqOPO' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserOrder' test.out

#- 327 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'g3FZjVLW' \
    --userId 'Nbe1nKpO' \
    > test.out 2>&1
eval_tap $? 327 'PublicCancelUserOrder' test.out

#- 328 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'xBy03Ukf' \
    --userId '4msE7dgo' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetUserOrderHistories' test.out

#- 329 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'YbfALBME' \
    --userId 'dRlqlvMd' \
    > test.out 2>&1
eval_tap $? 329 'PublicDownloadUserOrderReceipt' test.out

#- 330 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'QrXgZHn9' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetPaymentAccounts' test.out

#- 331 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'ON2WyDlv' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'SSyoE1Ob' \
    > test.out 2>&1
eval_tap $? 331 'PublicDeletePaymentAccount' test.out

#- 332 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'LOfM19nc' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'IWAasGpS' \
    --limit '97' \
    --offset '70' \
    --sku '3MIW0bFS' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 332 'PublicQueryUserSubscriptions' test.out

#- 333 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "9bFwyWbe", "itemId": "QfxZb1IC", "language": "RjP-Aghu-UP", "region": "zr3thye5", "returnUrl": "k7fQqYIw", "source": "nCAY16gx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'ZM4A4T1m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicSubscribeSubscription' test.out

#- 334 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '3OTAmyJc' \
    --itemId 'cW7NOiU1' \
    > test.out 2>&1
eval_tap $? 334 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 335 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'TUzwMTb6' \
    --userId 'QsAhBNZM' \
    > test.out 2>&1
eval_tap $? 335 'PublicGetUserSubscription' test.out

#- 336 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Ev7VJxIB' \
    --userId '5XdnejUG' \
    > test.out 2>&1
eval_tap $? 336 'PublicChangeSubscriptionBillingAccount' test.out

#- 337 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "DQEsPgTb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BItEvuVa' \
    --userId '1ClNtlfh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'PublicCancelSubscription' test.out

#- 338 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'SmuXPvo3' \
    --userId 'pDijdjCB' \
    --excludeFree 'False' \
    --limit '11' \
    --offset '43' \
    > test.out 2>&1
eval_tap $? 338 'PublicGetUserSubscriptionBillingHistories' test.out

#- 339 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'nwGxysSp' \
    --namespace $AB_NAMESPACE \
    --userId 'jLqpFKRl' \
    > test.out 2>&1
eval_tap $? 339 'PublicGetWallet' test.out

#- 340 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'VTWUyGch' \
    --namespace $AB_NAMESPACE \
    --userId '4O0LNG0B' \
    --limit '37' \
    --offset '76' \
    > test.out 2>&1
eval_tap $? 340 'PublicListUserWalletTransactions' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE