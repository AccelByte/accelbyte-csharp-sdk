#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..359"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "18umKdZt", "appType": "GAME", "baseAppId": "AIhCd8mo", "boothName": "1dalL8FS", "boundItemIds": ["FQIVMXV9", "Id213sAd", "pfRhL6NL"], "categoryPath": "ToXgJlIT", "clazz": "I9uInvJP", "createdAt": "1979-05-24T00:00:00Z", "description": "gujOJoOq", "displayOrder": 46, "entitlementType": "CONSUMABLE", "ext": {"jDpy5fI1": {}, "5izQZzYb": {}, "SOqwj3Ve": {}}, "features": ["eP80ja7M", "xbOyZLy3", "UavenWBd"], "fresh": true, "images": [{"as": "OWSVdolC", "caption": "tGPN8VNV", "height": 88, "imageUrl": "cCKtv6Ig", "smallImageUrl": "DwlzkxBk", "width": 36}, {"as": "6wgdzBg4", "caption": "TDOGJtTs", "height": 60, "imageUrl": "jEGriF8p", "smallImageUrl": "ZHWRBW8d", "width": 70}, {"as": "NNUmWuaL", "caption": "teFgWoFJ", "height": 81, "imageUrl": "YMf4Dz86", "smallImageUrl": "ko1rGVDy", "width": 90}], "itemId": "dDSWCDxr", "itemIds": ["3Hrji9EU", "LtK9Wupg", "yvSKq4q1"], "itemQty": {"dkW0D261": 5, "bXpjGCFT": 36, "dIc8pP5t": 38}, "itemType": "EXTENSION", "language": "ulEFce5l", "listable": false, "localExt": {"eKQwkpPd": {}, "b6iXfuQ8": {}, "6GrqGHq0": {}}, "longDescription": "0l8R5MxR", "maxCount": 70, "maxCountPerUser": 63, "name": "qBav88Xc", "namespace": "HiUOVQIb", "optionBoxConfig": {"boxItems": [{"count": 43, "itemId": "etmaWGC9", "itemSku": "Qc3hfE40"}, {"count": 37, "itemId": "pnPAhesH", "itemSku": "kvht5esF"}, {"count": 49, "itemId": "WMzT7IaR", "itemSku": "cUeArhq2"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 9, "comparison": "isGreaterThanOrEqual", "name": "TuVHNmeh", "predicateType": "SeasonPassPredicate", "value": "VtE7QZMU", "values": ["PqHwopUp", "DTD65y39", "MACk6lAr"]}, {"anyOf": 79, "comparison": "excludes", "name": "R6MW6xNS", "predicateType": "EntitlementPredicate", "value": "ZPvmbiFC", "values": ["ziC41wEU", "hKh7QmCJ", "lOYjg28f"]}, {"anyOf": 63, "comparison": "isNot", "name": "f0qRvYQF", "predicateType": "SeasonPassPredicate", "value": "BbCni3Ql", "values": ["4wujeST8", "vExveZSh", "OcxgOkoA"]}]}, {"operator": "and", "predicates": [{"anyOf": 56, "comparison": "isLessThanOrEqual", "name": "vMWcX7JX", "predicateType": "SeasonTierPredicate", "value": "Fb2HbYGZ", "values": ["nA2ncD8u", "FcBOumLA", "Wr5WEM7f"]}, {"anyOf": 12, "comparison": "includes", "name": "FeEpQjEd", "predicateType": "EntitlementPredicate", "value": "yfGpA4Cq", "values": ["tyYZzR4k", "RuA1hg45", "OgerLZQR"]}, {"anyOf": 65, "comparison": "includes", "name": "ANSZCjW7", "predicateType": "SeasonTierPredicate", "value": "gII8BQEc", "values": ["SgNk53FX", "Pp6KdxZp", "iK76MoAX"]}]}, {"operator": "or", "predicates": [{"anyOf": 0, "comparison": "isLessThan", "name": "S6g3wdLh", "predicateType": "SeasonTierPredicate", "value": "oYbEf0Q1", "values": ["KxG79HEV", "APPTkxNd", "2fZGlabu"]}, {"anyOf": 4, "comparison": "isNot", "name": "E3z4ZuQP", "predicateType": "SeasonTierPredicate", "value": "8JU01bEg", "values": ["FjeYoYDw", "xrNEIorN", "Dm34G7yC"]}, {"anyOf": 13, "comparison": "isLessThan", "name": "lQp29EFs", "predicateType": "EntitlementPredicate", "value": "uWW1CkOT", "values": ["djTYEIVE", "kLbY5xkn", "BQiQavFg"]}]}]}, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 95, "fixedTrialCycles": 31, "graceDays": 49}, "region": "7jQY9axn", "regionData": [{"currencyCode": "zP7QKcq6", "currencyNamespace": "sQMZP3Hp", "currencyType": "VIRTUAL", "discountAmount": 24, "discountExpireAt": "1997-09-13T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1979-03-27T00:00:00Z", "discountedPrice": 28, "expireAt": "1996-05-27T00:00:00Z", "price": 8, "purchaseAt": "1987-09-23T00:00:00Z", "trialPrice": 27}, {"currencyCode": "8BbxNLsa", "currencyNamespace": "uDVRMlJy", "currencyType": "REAL", "discountAmount": 28, "discountExpireAt": "1996-12-07T00:00:00Z", "discountPercentage": 7, "discountPurchaseAt": "1988-10-09T00:00:00Z", "discountedPrice": 23, "expireAt": "1981-12-10T00:00:00Z", "price": 42, "purchaseAt": "1973-02-18T00:00:00Z", "trialPrice": 73}, {"currencyCode": "6CXU8GUX", "currencyNamespace": "LernoFs3", "currencyType": "REAL", "discountAmount": 57, "discountExpireAt": "1985-08-29T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1992-07-22T00:00:00Z", "discountedPrice": 45, "expireAt": "1978-01-20T00:00:00Z", "price": 21, "purchaseAt": "1975-06-13T00:00:00Z", "trialPrice": 39}], "seasonType": "TIER", "sku": "Lsu5B67b", "stackable": false, "status": "ACTIVE", "tags": ["0L9vOGzw", "YU184isE", "2cNAe2Gq"], "targetCurrencyCode": "FSFzWy9O", "targetItemId": "bkXtn2sG", "targetNamespace": "U6ulQ2bn", "thumbnailUrl": "pDf6z5h3", "title": "HGCZ1dJP", "updatedAt": "1989-08-28T00:00:00Z", "useCount": 38}, "namespace": "CkGib9DA", "order": {"currency": {"currencyCode": "vbeHo8ts", "currencySymbol": "UPbgE6Y3", "currencyType": "VIRTUAL", "decimals": 18, "namespace": "X196Kjs5"}, "ext": {"orB59emB": {}, "ymo9hmqH": {}, "aIl7KmBT": {}}, "free": true}, "source": "IAP"}, "script": "PHcqmAft", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'UoLHt7EU' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "vB5ZuJFz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'wqX8gSjj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'q1phdE1s' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "qGWyCL88"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'xWemHRRQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "0aLo5aA6", "dryRun": true, "fulfillmentUrl": "jeuO3Vfk", "itemType": "SUBSCRIPTION", "purchaseConditionUrl": "Fl4poCTj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'hP6RsibG' \
    --itemType 'COINS' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'f5agKiKv' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "lakB8yee", "dryRun": true, "fulfillmentUrl": "ZrhFTIwd", "purchaseConditionUrl": "4q6ozY8v"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id 'al7A0SFt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'MTcIyJiN' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '63' \
    --name 'Y8djh0k5' \
    --offset '84' \
    --tag '2HbWowf6' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "T9eYZWpG", "items": [{"extraSubscriptionDays": 26, "itemId": "JMeYwitM", "itemName": "QO5Za8Bh", "quantity": 73}, {"extraSubscriptionDays": 86, "itemId": "46UmsmYa", "itemName": "bixW6d0w", "quantity": 99}, {"extraSubscriptionDays": 6, "itemId": "1SYuz3df", "itemName": "Hq2gLoNB", "quantity": 37}], "maxRedeemCountPerCampaignPerUser": 79, "maxRedeemCountPerCode": 39, "maxRedeemCountPerCodePerUser": 4, "maxSaleCount": 55, "name": "JUAF8sPx", "redeemEnd": "1999-11-10T00:00:00Z", "redeemStart": "1992-01-31T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["GnRGMv7D", "rW0FxfEf", "m26VMj4h"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'gqMC6YPR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "U3bSTX8f", "items": [{"extraSubscriptionDays": 73, "itemId": "VollASgM", "itemName": "UqyvaLZo", "quantity": 18}, {"extraSubscriptionDays": 69, "itemId": "Hemgkvbo", "itemName": "zFq0HDlO", "quantity": 2}, {"extraSubscriptionDays": 62, "itemId": "GaNkxajJ", "itemName": "jpnNiWnS", "quantity": 0}], "maxRedeemCountPerCampaignPerUser": 61, "maxRedeemCountPerCode": 52, "maxRedeemCountPerCodePerUser": 9, "maxSaleCount": 5, "name": "BZ7FnLpC", "redeemEnd": "1979-09-20T00:00:00Z", "redeemStart": "1986-11-23T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["pALrO8ja", "KK6GFRe2", "uXsEHUHm"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId '8s8ZyHOD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'U7IeSxsz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId '4hLS8TBP' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "rSPVfZGi", "localizationDisplayNames": {"VaesmQvZ": "hg7RHNCc", "AbNkhe8x": "KSbxG6vk", "5czOUIQW": "CZPXaDXB"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'Fuw8Zfcs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'JZhzNFMI' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '1WlvpE39' \
    --namespace $AB_NAMESPACE \
    --storeId 'P3wUFFzQ' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"rtaucm2Q": "OwBgro6Y", "PYwQeVRE": "G8a9TWpW", "Uf7KoQZa": "zNSt6VRv"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath '7K0qcRT0' \
    --namespace $AB_NAMESPACE \
    --storeId '2qozMvFH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'x6e06zLz' \
    --namespace $AB_NAMESPACE \
    --storeId '8XV11VgW' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'UUfUd43x' \
    --namespace $AB_NAMESPACE \
    --storeId 'A3aO6ggw' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'KQdgXiAJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'Q2ecCe8D' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'gwFKMMTv' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '82' \
    --code '4ft60x6y' \
    --limit '55' \
    --offset '65' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 54}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId '6PzYK8aH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'teH5je3S' \
    --namespace $AB_NAMESPACE \
    --batchNo '45' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'QkjAWN0Q' \
    --namespace $AB_NAMESPACE \
    --batchNo '31' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId '0oYDcMxd' \
    --namespace $AB_NAMESPACE \
    --batchNo '25' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId 'pFLkqVLG' \
    --namespace $AB_NAMESPACE \
    --code 'tPsZ5S2A' \
    --limit '6' \
    --offset '99' \
    --userId 'Yte6L9zw' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'gUCa5wuX' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '16uoRzU4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'oqijDap3' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 36 'ListCurrencies' test.out

#- 37 CreateCurrency
# body param: body
echo '{"currencyCode": "Sydf7eWl", "currencySymbol": "fnaY7Xbs", "currencyType": "VIRTUAL", "decimals": 87, "localizationDescriptions": {"wWrreqmM": "c6VsWmYc", "6G5jD5t7": "sN3PTRar", "ZPkbMbSc": "xJ6OFhFJ"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'CreateCurrency' test.out

#- 38 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"ae0eduHT": "Lq3lgaMR", "Eby6r64E": "uxy7rOHg", "vYhZiF5T": "6hkWQZaD"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'orO4LLOe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'UpdateCurrency' test.out

#- 39 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode '078XLy8p' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'DeleteCurrency' test.out

#- 40 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'Y4RFFhcf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 40 'GetCurrencyConfig' test.out

#- 41 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'duh8QgmQ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'GetCurrencySummary' test.out

#- 42 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'GetDLCItemConfig' test.out

#- 43 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "pRjEdVb3", "rewards": [{"currency": {"currencyCode": "P0O5ueuL", "namespace": "F8czPQ3Y"}, "item": {"itemId": "Ng3VStwe", "itemSku": "YxFDFWoq", "itemType": "fwdgVPWH"}, "quantity": 13, "type": "ITEM"}, {"currency": {"currencyCode": "EU9HtYqI", "namespace": "eFEH0vpS"}, "item": {"itemId": "Z3bp542P", "itemSku": "uQXfX02U", "itemType": "7oXLodhF"}, "quantity": 20, "type": "CURRENCY"}, {"currency": {"currencyCode": "RX7SedFY", "namespace": "ZxOV0aqB"}, "item": {"itemId": "HjorFsMX", "itemSku": "2Ca0v96K", "itemType": "KOsjWLrv"}, "quantity": 51, "type": "CURRENCY"}]}, {"id": "WU7wlKOC", "rewards": [{"currency": {"currencyCode": "VX4dbRgf", "namespace": "66SB3xIr"}, "item": {"itemId": "hLf6Z55v", "itemSku": "njjkvB2o", "itemType": "8VOs9sR9"}, "quantity": 26, "type": "CURRENCY"}, {"currency": {"currencyCode": "5obo600h", "namespace": "dZjAoMdI"}, "item": {"itemId": "YhkSuQxl", "itemSku": "dUWlA1l2", "itemType": "htGUuzKA"}, "quantity": 6, "type": "ITEM"}, {"currency": {"currencyCode": "KdwkAzch", "namespace": "h7Hes2UW"}, "item": {"itemId": "NMlARGLf", "itemSku": "OOtIj4x2", "itemType": "8nwJfkEe"}, "quantity": 87, "type": "CURRENCY"}]}, {"id": "QnhVtyk1", "rewards": [{"currency": {"currencyCode": "XznTqvje", "namespace": "z91ROp6I"}, "item": {"itemId": "WPRa905X", "itemSku": "QNMMHUeW", "itemType": "pxnOpEAD"}, "quantity": 33, "type": "CURRENCY"}, {"currency": {"currencyCode": "fiEtGwfF", "namespace": "cRpUPSzF"}, "item": {"itemId": "wLOdDa8V", "itemSku": "WyfpkOyv", "itemType": "bxpRWqpd"}, "quantity": 86, "type": "ITEM"}, {"currency": {"currencyCode": "2AE9uNt4", "namespace": "XlUMgUi9"}, "item": {"itemId": "GAlqZCcG", "itemSku": "psJdRX3v", "itemType": "GJ791eJv"}, "quantity": 91, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateDLCItemConfig' test.out

#- 44 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'DeleteDLCItemConfig' test.out

#- 45 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetPlatformDLCConfig' test.out

#- 46 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "EPICGAMES", "platformDlcIdMap": {"IpuEmqG6": "TKONweQk", "noL8L8Ph": "X2EL6Y8B", "IDu6gvIz": "56rGuBh4"}}, {"platform": "PSN", "platformDlcIdMap": {"xuu5lbJr": "tKVK9pwN", "N2BJ40WS": "YLr6wxO6", "FBaOySqA": "8KXiSsLT"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"yjBzLlnW": "7BSHliQt", "bkRZDI8t": "L1GXoxKW", "i5FF0dYc": "U6jJlHy2"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdatePlatformDLCConfig' test.out

#- 47 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeletePlatformDLCConfig' test.out

#- 48 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --entitlementClazz 'CODE' \
    --entitlementName 'tXXA5HV9' \
    --itemId '["qfwX6yBB", "KPRZCSy9", "sm60HXK0"]' \
    --limit '81' \
    --offset '28' \
    --userId 'Lqia2Jfa' \
    > test.out 2>&1
eval_tap $? 48 'QueryEntitlements' test.out

#- 49 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'LLzYtuOp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 49 'GetEntitlement' test.out

#- 50 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '99' \
    --offset '89' \
    --status 'FAIL' \
    --userId 'iJwlAEgj' \
    > test.out 2>&1
eval_tap $? 50 'QueryFulfillmentHistories' test.out

#- 51 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetAppleIAPConfig' test.out

#- 52 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "0vJDbEBz", "password": "z6cIw1iJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateAppleIAPConfig' test.out

#- 53 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteAppleIAPConfig' test.out

#- 54 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetEpicGamesIAPConfig' test.out

#- 55 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "R6KpRpIQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateEpicGamesIAPConfig' test.out

#- 56 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteEpicGamesIAPConfig' test.out

#- 57 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetGoogleIAPConfig' test.out

#- 58 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "jQbNPaP2", "serviceAccountId": "l6buwO83"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateGoogleIAPConfig' test.out

#- 59 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteGoogleIAPConfig' test.out

#- 60 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 60 'UpdateGoogleP12File' test.out

#- 61 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetIAPItemConfig' test.out

#- 62 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "JAJJkL4j", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"CSvQYMcM": "jhSYA7af", "H0X9ika9": "2TsHGC05", "bYwp4Ovt": "eMtQjHSN"}}, {"itemIdentity": "UL5PQm3Y", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"Wh2TJQZB": "SM9e9bmv", "lscNtgix": "dEgZIHvn", "FwjUZmbU": "VNsVUHP7"}}, {"itemIdentity": "1sJm1hsT", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"q0GOXpEk": "CYS6B4v8", "njijZVOG": "9jiVhoxW", "g9Dk2rMQ": "1T69307p"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 62 'UpdateIAPItemConfig' test.out

#- 63 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 63 'DeleteIAPItemConfig' test.out

#- 64 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetPlayStationIAPConfig' test.out

#- 65 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "56kPDaXB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdatePlaystationIAPConfig' test.out

#- 66 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeletePlaystationIAPConfig' test.out

#- 67 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetStadiaIAPConfig' test.out

#- 68 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 68 'DeleteStadiaIAPConfig' test.out

#- 69 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 69 'UpdateStadiaJsonConfigFile' test.out

#- 70 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetSteamIAPConfig' test.out

#- 71 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "2xymlZH7", "publisherAuthenticationKey": "nX9SnVJU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateSteamIAPConfig' test.out

#- 72 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteSteamIAPConfig' test.out

#- 73 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetTwitchIAPConfig' test.out

#- 74 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "uOJJPOrb", "clientSecret": "heUd2RAo", "organizationId": "aR3Giej3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateTwitchIAPConfig' test.out

#- 75 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteTwitchIAPConfig' test.out

#- 76 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetXblIAPConfig' test.out

#- 77 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "8TRfvi1y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateXblIAPConfig' test.out

#- 78 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteXblAPConfig' test.out

#- 79 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'rhXysbC1' \
    > test.out 2>&1
eval_tap $? 79 'UpdateXblBPCertFile' test.out

#- 80 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'PuOIeiHg' \
    --itemId 'FiHQSthn' \
    --itemType 'CODE' \
    --endTime '6D5qXsYv' \
    --startTime '6L8c03os' \
    > test.out 2>&1
eval_tap $? 80 'DownloadInvoiceDetails' test.out

#- 81 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'fy471BJn' \
    --itemId 'RKOxuUO7' \
    --itemType 'BUNDLE' \
    --endTime 'NfnYM1yB' \
    --startTime '7F5bmtjf' \
    > test.out 2>&1
eval_tap $? 81 'GenerateInvoiceSummary' test.out

#- 82 SyncInGameItem
# body param: body
echo '{"categoryPath": "TABsITa7", "targetItemId": "llaGOBBc", "targetNamespace": "0etwPTRL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'pO47h6vA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 82 'SyncInGameItem' test.out

#- 83 CreateItem
# body param: body
echo '{"appId": "avhITZHW", "appType": "GAME", "baseAppId": "mcEYjygL", "boothName": "LDw2T2R3", "categoryPath": "hkb3sZKe", "clazz": "dNEeScqV", "displayOrder": 37, "entitlementType": "CONSUMABLE", "ext": {"yntDTCa0": {}, "bLjycCrM": {}, "mCLSiMjo": {}}, "features": ["WdwcwERH", "YvetVQsd", "Ks0L7sok"], "images": [{"as": "TXmUiBMZ", "caption": "PLDJPfxF", "height": 94, "imageUrl": "BEnIxmmW", "smallImageUrl": "u4s4Q8fR", "width": 20}, {"as": "qGbD8Bwg", "caption": "P3ZjJuM7", "height": 11, "imageUrl": "qZmWFTcb", "smallImageUrl": "6nFVlS3o", "width": 4}, {"as": "u3Ekb9Yw", "caption": "K8BfcEnm", "height": 1, "imageUrl": "HRA5fcIk", "smallImageUrl": "qWBttKYo", "width": 50}], "itemIds": ["0KfGkFCp", "eE97kNNW", "irU5PQPG"], "itemQty": {"rVotdHdt": 8, "4CQh9ZjW": 30, "2uE80PfJ": 36}, "itemType": "COINS", "listable": true, "localizations": {"I1FZ4RAd": {"description": "t1hg58iT", "localExt": {"6xpudHXf": {}, "z8inDpFC": {}, "rokZlTp1": {}}, "longDescription": "KQvJxn9b", "title": "PStDUxXa"}, "M64edetY": {"description": "2IYOLEip", "localExt": {"Z18OrMh9": {}, "1vZb6RSm": {}, "BFMgREf1": {}}, "longDescription": "Szp7WmOt", "title": "92j6WXFk"}, "e5aetVEf": {"description": "oZA9AEPK", "localExt": {"vVyJ0vwW": {}, "9yl52REe": {}, "KBqTPqYF": {}}, "longDescription": "WrDhWxNP", "title": "uAq0embT"}}, "maxCount": 43, "maxCountPerUser": 48, "name": "l5IBQlxA", "optionBoxConfig": {"boxItems": [{"count": 33, "itemId": "ENDFk495", "itemSku": "1QQRzAjh"}, {"count": 39, "itemId": "BnsJHDDt", "itemSku": "io2MdsOb"}, {"count": 15, "itemId": "DLABSooc", "itemSku": "P0evlMpL"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 54, "fixedTrialCycles": 23, "graceDays": 24}, "regionData": {"IBKYH8KZ": [{"currencyCode": "Imo4IUUR", "currencyNamespace": "DRGhj8Zs", "currencyType": "VIRTUAL", "discountAmount": 82, "discountExpireAt": "1976-06-21T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1973-04-24T00:00:00Z", "discountedPrice": 38, "expireAt": "1990-05-14T00:00:00Z", "price": 46, "purchaseAt": "1973-04-30T00:00:00Z", "trialPrice": 12}, {"currencyCode": "LRM6E8Tk", "currencyNamespace": "4ftvq9MD", "currencyType": "REAL", "discountAmount": 79, "discountExpireAt": "1978-12-12T00:00:00Z", "discountPercentage": 76, "discountPurchaseAt": "1979-06-07T00:00:00Z", "discountedPrice": 79, "expireAt": "1973-02-13T00:00:00Z", "price": 42, "purchaseAt": "1971-11-11T00:00:00Z", "trialPrice": 56}, {"currencyCode": "qSk5pZ7n", "currencyNamespace": "aNODtini", "currencyType": "REAL", "discountAmount": 63, "discountExpireAt": "1993-08-29T00:00:00Z", "discountPercentage": 47, "discountPurchaseAt": "1980-03-02T00:00:00Z", "discountedPrice": 98, "expireAt": "1991-02-20T00:00:00Z", "price": 61, "purchaseAt": "1994-07-09T00:00:00Z", "trialPrice": 86}], "zn7ey7qP": [{"currencyCode": "FbhmEJr4", "currencyNamespace": "lMrXaD7V", "currencyType": "VIRTUAL", "discountAmount": 12, "discountExpireAt": "1980-12-09T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1975-03-19T00:00:00Z", "discountedPrice": 90, "expireAt": "1985-06-03T00:00:00Z", "price": 69, "purchaseAt": "1985-09-02T00:00:00Z", "trialPrice": 75}, {"currencyCode": "Ffl7kFbP", "currencyNamespace": "jc25tMM2", "currencyType": "VIRTUAL", "discountAmount": 51, "discountExpireAt": "1983-06-14T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1995-03-07T00:00:00Z", "discountedPrice": 90, "expireAt": "1989-06-07T00:00:00Z", "price": 38, "purchaseAt": "1981-03-03T00:00:00Z", "trialPrice": 22}, {"currencyCode": "BDvAgvdv", "currencyNamespace": "IUJQMVR7", "currencyType": "VIRTUAL", "discountAmount": 32, "discountExpireAt": "1994-07-09T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1971-08-19T00:00:00Z", "discountedPrice": 99, "expireAt": "1971-07-09T00:00:00Z", "price": 50, "purchaseAt": "1978-01-15T00:00:00Z", "trialPrice": 65}], "rJyM4kbL": [{"currencyCode": "97zwXy9i", "currencyNamespace": "1rf6ZTVW", "currencyType": "VIRTUAL", "discountAmount": 83, "discountExpireAt": "1983-12-23T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1994-04-03T00:00:00Z", "discountedPrice": 90, "expireAt": "1974-02-03T00:00:00Z", "price": 7, "purchaseAt": "1996-10-02T00:00:00Z", "trialPrice": 75}, {"currencyCode": "RxUHavpz", "currencyNamespace": "KhoYNnD9", "currencyType": "VIRTUAL", "discountAmount": 29, "discountExpireAt": "1994-07-19T00:00:00Z", "discountPercentage": 55, "discountPurchaseAt": "1979-12-09T00:00:00Z", "discountedPrice": 44, "expireAt": "1987-02-17T00:00:00Z", "price": 60, "purchaseAt": "1992-03-13T00:00:00Z", "trialPrice": 53}, {"currencyCode": "SEvnmJjJ", "currencyNamespace": "UcsqHuo0", "currencyType": "REAL", "discountAmount": 26, "discountExpireAt": "1975-04-12T00:00:00Z", "discountPercentage": 12, "discountPurchaseAt": "1997-03-03T00:00:00Z", "discountedPrice": 13, "expireAt": "1984-12-27T00:00:00Z", "price": 1, "purchaseAt": "1997-03-29T00:00:00Z", "trialPrice": 86}]}, "seasonType": "TIER", "sku": "nfq1zTHM", "stackable": false, "status": "INACTIVE", "tags": ["Kdh6VfpE", "TdWGZtah", "S0Q7yvAy"], "targetCurrencyCode": "eTHetLWL", "targetNamespace": "yaoBvbiz", "thumbnailUrl": "r7PHrzvC", "useCount": 16}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'PepuL2kk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'CreateItem' test.out

#- 84 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'WJi9UoqN' \
    --appId 'ocBhMDi8' \
    > test.out 2>&1
eval_tap $? 84 'GetItemByAppId' test.out

#- 85 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --availableDate 'AW6KUKbl' \
    --baseAppId '1hhw6yTK' \
    --categoryPath 'w88sbvef' \
    --features 'JVUvRHSV' \
    --includeSubCategoryItem 'false' \
    --itemType 'MEDIA' \
    --limit '25' \
    --offset '6' \
    --region 'LNOoiyQX' \
    --sortBy '["displayOrder", "createdAt:asc", "name"]' \
    --storeId '15OVUmz1' \
    --tags 'xgqdtrkz' \
    --targetNamespace 'mqUxtKC5' \
    > test.out 2>&1
eval_tap $? 85 'QueryItems' test.out

#- 86 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --features '["ZSCHlEyK", "nb4ih1ap", "Kx1I1JJ6"]' \
    > test.out 2>&1
eval_tap $? 86 'ListBasicItemsByFeatures' test.out

#- 87 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '9AJoCioA' \
    --sku 'JwAcu4O7' \
    > test.out 2>&1
eval_tap $? 87 'GetItemBySku' test.out

#- 88 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'fa5x6mVp' \
    --populateBundle 'false' \
    --region 'qCB2ulSF' \
    --storeId '5lMx97ZQ' \
    --sku '54RsFkIm' \
    > test.out 2>&1
eval_tap $? 88 'GetLocaleItemBySku' test.out

#- 89 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId '4U0RLCfR' \
    --sku 'DZY4sfyq' \
    > test.out 2>&1
eval_tap $? 89 'GetItemIdBySku' test.out

#- 90 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["NClMKuBy", "MDPfuZBG", "LlHbYNIJ"]' \
    --storeId '3q8phkY5' \
    > test.out 2>&1
eval_tap $? 90 'GetBulkItemIdBySkus' test.out

#- 91 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'GDabmxp6' \
    --region 'gUyVTLXh' \
    --storeId '6hr1xJA3' \
    --itemIds 'eE43GCcQ' \
    > test.out 2>&1
eval_tap $? 91 'BulkGetLocaleItems' test.out

#- 92 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 92 'GetAvailablePredicateTypes' test.out

#- 93 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["esHnbQzg", "XlsS8ECK", "yNf0QZpc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'zFmsH1br' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'ValidateItemPurchaseCondition' test.out

#- 94 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --itemType 'SUBSCRIPTION' \
    --limit '25' \
    --offset '98' \
    --sortBy 'H1ipfSlm' \
    --storeId '7Gcq97qx' \
    --keyword 'dWefR5m7' \
    --language 'Lbk7WfMt' \
    > test.out 2>&1
eval_tap $? 94 'SearchItems' test.out

#- 95 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --limit '90' \
    --offset '31' \
    --sortBy '["name:asc", "createdAt"]' \
    --storeId '8Am0OA2O' \
    > test.out 2>&1
eval_tap $? 95 'QueryUncategorizedItems' test.out

#- 96 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId '4JhoCGas' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'd0AAm6C3' \
    > test.out 2>&1
eval_tap $? 96 'GetItem' test.out

#- 97 UpdateItem
# body param: body
echo '{"appId": "qgZsNIhg", "appType": "DEMO", "baseAppId": "N3SZF0LE", "boothName": "qj2jOQm6", "categoryPath": "qnsOd9tG", "clazz": "t6PJs9DR", "displayOrder": 51, "entitlementType": "CONSUMABLE", "ext": {"z6uxpnnX": {}, "FSv2KeaN": {}, "0KwHedeM": {}}, "features": ["Djt9mSmU", "06iUJP30", "HYGqHp5W"], "images": [{"as": "eALiF1Ua", "caption": "33GQ9YD2", "height": 71, "imageUrl": "vgWTFvZG", "smallImageUrl": "UdYP45VY", "width": 48}, {"as": "hAWLwvyo", "caption": "TwPZZnYK", "height": 6, "imageUrl": "GXZQw0JE", "smallImageUrl": "Vh8QOv5T", "width": 29}, {"as": "VJHRA3mG", "caption": "Yp4lv43M", "height": 60, "imageUrl": "WFFUJte2", "smallImageUrl": "45bbMw3S", "width": 96}], "itemIds": ["xgrmHDn8", "MyZ49eT5", "kGbQw8h2"], "itemQty": {"CfDxfTIU": 29, "83yrCYck": 82, "uOHheelG": 43}, "itemType": "SUBSCRIPTION", "listable": false, "localizations": {"7ahuHQie": {"description": "vSIim2SV", "localExt": {"w2pLE5yI": {}, "OjQJ6hFt": {}, "i95NIaQx": {}}, "longDescription": "JxMvU04B", "title": "faMk8L66"}, "1wF4fMLN": {"description": "N71rai9z", "localExt": {"GSVzISPY": {}, "vkjuMrT6": {}, "RJbm6g52": {}}, "longDescription": "MbOVlxNY", "title": "zzb5AArJ"}, "xGaFdPjd": {"description": "4ZhUgiEv", "localExt": {"nPNROwvg": {}, "GymF0Wrz": {}, "1DBVRw4k": {}}, "longDescription": "1hy3rcND", "title": "ZIdWSLq7"}}, "maxCount": 52, "maxCountPerUser": 97, "name": "ZORZAZ5X", "optionBoxConfig": {"boxItems": [{"count": 0, "itemId": "dEYwsdk4", "itemSku": "J0kueyPs"}, {"count": 95, "itemId": "qqFPGihe", "itemSku": "3LNGkSL1"}, {"count": 21, "itemId": "jtOxGJyB", "itemSku": "P84EjlB1"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 45, "fixedTrialCycles": 54, "graceDays": 72}, "regionData": {"QRW0pLbs": [{"currencyCode": "xljGVQKW", "currencyNamespace": "N7Z2Ddt6", "currencyType": "VIRTUAL", "discountAmount": 20, "discountExpireAt": "1975-07-01T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1989-11-15T00:00:00Z", "discountedPrice": 63, "expireAt": "1986-12-21T00:00:00Z", "price": 78, "purchaseAt": "1997-01-21T00:00:00Z", "trialPrice": 39}, {"currencyCode": "0ss6JzPa", "currencyNamespace": "Ye3h9KqR", "currencyType": "VIRTUAL", "discountAmount": 99, "discountExpireAt": "1989-09-07T00:00:00Z", "discountPercentage": 38, "discountPurchaseAt": "1993-03-03T00:00:00Z", "discountedPrice": 36, "expireAt": "1983-01-29T00:00:00Z", "price": 89, "purchaseAt": "1974-10-25T00:00:00Z", "trialPrice": 51}, {"currencyCode": "5X8yzp1j", "currencyNamespace": "4T4aF1KD", "currencyType": "REAL", "discountAmount": 34, "discountExpireAt": "1984-02-28T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1973-10-11T00:00:00Z", "discountedPrice": 47, "expireAt": "1986-11-23T00:00:00Z", "price": 36, "purchaseAt": "1980-06-22T00:00:00Z", "trialPrice": 18}], "Oq8aFHfO": [{"currencyCode": "HjshABmz", "currencyNamespace": "0dBVUNfA", "currencyType": "REAL", "discountAmount": 39, "discountExpireAt": "1990-12-20T00:00:00Z", "discountPercentage": 83, "discountPurchaseAt": "1998-02-25T00:00:00Z", "discountedPrice": 30, "expireAt": "1979-07-08T00:00:00Z", "price": 29, "purchaseAt": "1998-03-14T00:00:00Z", "trialPrice": 27}, {"currencyCode": "W3CsPHeF", "currencyNamespace": "ckvtGovD", "currencyType": "REAL", "discountAmount": 72, "discountExpireAt": "1987-10-31T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1996-08-22T00:00:00Z", "discountedPrice": 100, "expireAt": "1982-02-16T00:00:00Z", "price": 38, "purchaseAt": "1994-04-06T00:00:00Z", "trialPrice": 40}, {"currencyCode": "HGZdMPjU", "currencyNamespace": "AmUAsLLz", "currencyType": "VIRTUAL", "discountAmount": 14, "discountExpireAt": "1996-10-11T00:00:00Z", "discountPercentage": 35, "discountPurchaseAt": "1976-10-30T00:00:00Z", "discountedPrice": 98, "expireAt": "1981-11-26T00:00:00Z", "price": 19, "purchaseAt": "1993-04-06T00:00:00Z", "trialPrice": 68}], "R5RBOiHJ": [{"currencyCode": "KrwZMCrk", "currencyNamespace": "zeYZOBjg", "currencyType": "REAL", "discountAmount": 34, "discountExpireAt": "1983-05-27T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1990-07-30T00:00:00Z", "discountedPrice": 53, "expireAt": "1982-03-27T00:00:00Z", "price": 1, "purchaseAt": "1999-12-11T00:00:00Z", "trialPrice": 51}, {"currencyCode": "TbXbEZVI", "currencyNamespace": "GTD0tVrd", "currencyType": "REAL", "discountAmount": 24, "discountExpireAt": "1991-04-18T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1995-02-06T00:00:00Z", "discountedPrice": 91, "expireAt": "1987-09-02T00:00:00Z", "price": 14, "purchaseAt": "1990-08-02T00:00:00Z", "trialPrice": 40}, {"currencyCode": "JeG6nh6j", "currencyNamespace": "gf4FZqPn", "currencyType": "REAL", "discountAmount": 58, "discountExpireAt": "1991-09-30T00:00:00Z", "discountPercentage": 39, "discountPurchaseAt": "1986-01-29T00:00:00Z", "discountedPrice": 46, "expireAt": "1977-06-23T00:00:00Z", "price": 81, "purchaseAt": "1978-11-14T00:00:00Z", "trialPrice": 16}]}, "seasonType": "PASS", "sku": "Tvr6Vgt3", "stackable": true, "status": "ACTIVE", "tags": ["nEppIy9V", "uI7r1qjQ", "tLiadc8E"], "targetCurrencyCode": "9QWUNyAh", "targetNamespace": "X5fDBz0h", "thumbnailUrl": "g0O8orVF", "useCount": 28}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'higOEJTc' \
    --namespace $AB_NAMESPACE \
    --storeId 'wmhg2iq4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'UpdateItem' test.out

#- 98 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'exLP2WeZ' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'iGZHZAgx' \
    > test.out 2>&1
eval_tap $? 98 'DeleteItem' test.out

#- 99 AcquireItem
# body param: body
echo '{"count": 2, "orderNo": "AjbAbTWM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'Zjpmqp8J' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 99 'AcquireItem' test.out

#- 100 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'LGod0f6p' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'fkHRisHr' \
    > test.out 2>&1
eval_tap $? 100 'GetApp' test.out

#- 101 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "3Khn8OdK", "previewUrl": "AvjpCpWx", "thumbnailUrl": "wLUgLS9e", "type": "video", "url": "vttFfzjB", "videoSource": "youtube"}, {"alt": "6GikwNsy", "previewUrl": "Ooh5lmAA", "thumbnailUrl": "dJd1dRVN", "type": "video", "url": "8fvKh3EY", "videoSource": "vimeo"}, {"alt": "3r7PQCoA", "previewUrl": "vu5rPhep", "thumbnailUrl": "CT6pNfvl", "type": "image", "url": "Qpz1SSjs", "videoSource": "vimeo"}], "developer": "haXECP1v", "forumUrl": "qLv6vrbx", "genres": ["FreeToPlay", "Adventure", "Action"], "localizations": {"dQ5XHVnQ": {"announcement": "0VmMVQat", "slogan": "WKRi54Jc"}, "9Quhs60L": {"announcement": "lH13FCLi", "slogan": "0uBB9zLv"}, "7zU91jbX": {"announcement": "k5a6440I", "slogan": "UKjTIBOS"}}, "platformRequirements": {"JgJaI3AX": [{"additionals": "BdQrklSt", "directXVersion": "nyPG8bR7", "diskSpace": "W2PfmV4f", "graphics": "hguQeccG", "label": "RAvcZ10x", "osVersion": "6Jhe6bcQ", "processor": "kS0sUbmr", "ram": "9Ec7q8mu", "soundCard": "bMPbgHhp"}, {"additionals": "sXBB4Ql4", "directXVersion": "Nd1Ug4Je", "diskSpace": "ZUCpcQMY", "graphics": "hqsP3GJk", "label": "ocSnkoKU", "osVersion": "0GrC9yRB", "processor": "nP6nTYgr", "ram": "9ol6PMnO", "soundCard": "2pVWSTLa"}, {"additionals": "vWFAagaN", "directXVersion": "MYDnRnog", "diskSpace": "oJeatmnu", "graphics": "4G1JScF2", "label": "tbTBkOKb", "osVersion": "dqdbM7uB", "processor": "raounQ76", "ram": "FI2uUrrr", "soundCard": "2TgGwiYv"}], "Cmm3qlRh": [{"additionals": "2ZhrCRsF", "directXVersion": "e6BcOTaE", "diskSpace": "rEFvOeUC", "graphics": "Ve112CBj", "label": "VGcSfpjD", "osVersion": "5i48BcGy", "processor": "uAdUrIl8", "ram": "L6Cga0Sy", "soundCard": "JqSpCc8P"}, {"additionals": "R9D4xsIW", "directXVersion": "0m6ZDcEW", "diskSpace": "eo50sqV4", "graphics": "IvyqSXoJ", "label": "SX202SFD", "osVersion": "RTaZur51", "processor": "1bS0zj8v", "ram": "mxmLcw53", "soundCard": "tyIXmigq"}, {"additionals": "94OAOLV9", "directXVersion": "Z7cCfcHL", "diskSpace": "krNZ5sIM", "graphics": "SSDiADow", "label": "8ZQY54s3", "osVersion": "mRyP8oca", "processor": "4fTLYTwY", "ram": "Jl5OfPEE", "soundCard": "SZHs6OOx"}], "dZfTfUgH": [{"additionals": "p6MKTSot", "directXVersion": "hLcgaYyI", "diskSpace": "yFVRPYAY", "graphics": "WNXiiPwl", "label": "r5vdR766", "osVersion": "Vg2wbfOk", "processor": "bdPJLXvq", "ram": "u1S4T2Om", "soundCard": "SMqysyCr"}, {"additionals": "3m42UfWE", "directXVersion": "J7rttufo", "diskSpace": "yDZdn4H5", "graphics": "mEMOxzTA", "label": "PIiQ0qDL", "osVersion": "hGeESdEo", "processor": "tkUjba5Q", "ram": "HQH2ZTLJ", "soundCard": "P2k7EPFX"}, {"additionals": "5iAotzoT", "directXVersion": "qBL1vyR2", "diskSpace": "LfaIxYPn", "graphics": "QRqZV1La", "label": "dTujOhxt", "osVersion": "GHYB0eKi", "processor": "AvCsHHMf", "ram": "WNCzLeyn", "soundCard": "tPntOqtR"}]}, "platforms": ["Linux", "MacOS", "IOS"], "players": ["LocalCoop", "MMO", "MMO"], "primaryGenre": "Adventure", "publisher": "W7wjl4E5", "releaseDate": "1993-04-14T00:00:00Z", "websiteUrl": "LDdGrOnI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'wZnoRGFo' \
    --namespace $AB_NAMESPACE \
    --storeId 'GRFcN0yE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'UpdateApp' test.out

#- 102 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'eWqWwWGm' \
    --namespace $AB_NAMESPACE \
    --storeId '57b2b70o' \
    > test.out 2>&1
eval_tap $? 102 'DisableItem' test.out

#- 103 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'FmD90fju' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 103 'GetItemDynamicData' test.out

#- 104 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId '8U1qswVc' \
    --namespace $AB_NAMESPACE \
    --storeId '14s7HtuZ' \
    > test.out 2>&1
eval_tap $? 104 'EnableItem' test.out

#- 105 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'OmxxETXV' \
    --itemId 'yyDnlpBm' \
    --namespace $AB_NAMESPACE \
    --storeId 'baR6snaf' \
    > test.out 2>&1
eval_tap $? 105 'FeatureItem' test.out

#- 106 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature '2UTKWb6V' \
    --itemId 'eGTkkUJ6' \
    --namespace $AB_NAMESPACE \
    --storeId 'JrX1qSfa' \
    > test.out 2>&1
eval_tap $? 106 'DefeatureItem' test.out

#- 107 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'pJc5mFOb' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'tJwfkyfc' \
    --populateBundle 'true' \
    --region 'tw9Sx03v' \
    --storeId 'I8CjqOw6' \
    > test.out 2>&1
eval_tap $? 107 'GetLocaleItem' test.out

#- 108 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "and", "predicates": [{"anyOf": 40, "comparison": "includes", "name": "o5swt7VY", "predicateType": "SeasonPassPredicate", "value": "bCuOG5tC", "values": ["plEUdo7N", "Nkphg5Hx", "ZwRIGHTk"]}, {"anyOf": 67, "comparison": "is", "name": "1vAagEN9", "predicateType": "SeasonPassPredicate", "value": "hQUar4ln", "values": ["Ll25e8uo", "ZdJtviqm", "SMGQjU0L"]}, {"anyOf": 55, "comparison": "includes", "name": "iteKQACJ", "predicateType": "SeasonPassPredicate", "value": "rvgBY7Ih", "values": ["nMCIFCV9", "ZvxwjBBY", "Hf7FPjlY"]}]}, {"operator": "or", "predicates": [{"anyOf": 100, "comparison": "isLessThan", "name": "RvkZnNER", "predicateType": "SeasonTierPredicate", "value": "qKHPtUpw", "values": ["MRi7rmTr", "BZpajfZd", "onr029k2"]}, {"anyOf": 81, "comparison": "isGreaterThan", "name": "vmArVhjG", "predicateType": "SeasonTierPredicate", "value": "fxKQ6qNx", "values": ["y3Q23KPo", "591abyJd", "Ay8bnJAR"]}, {"anyOf": 95, "comparison": "isGreaterThan", "name": "NEfsvem2", "predicateType": "SeasonTierPredicate", "value": "XuK4zs0z", "values": ["Q6NJENO7", "QNwydKFV", "LACMxKRL"]}]}, {"operator": "and", "predicates": [{"anyOf": 44, "comparison": "excludes", "name": "iVX5dM9Y", "predicateType": "SeasonPassPredicate", "value": "ZApVTVJE", "values": ["H11fyNPo", "Vc5EQf3v", "FTqwfbXr"]}, {"anyOf": 82, "comparison": "is", "name": "WRKwHrzA", "predicateType": "SeasonPassPredicate", "value": "kUDWQaHF", "values": ["UqelWTJC", "yLrSJHav", "o7U6Qx8N"]}, {"anyOf": 27, "comparison": "isNot", "name": "7oTzzzCD", "predicateType": "SeasonTierPredicate", "value": "pQGexPxw", "values": ["KfuWcTz9", "bDp3aN7m", "MxzX87Bx"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'GxW8xWte' \
    --namespace $AB_NAMESPACE \
    --storeId 'ckStKP1Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 108 'UpdateItemPurchaseCondition' test.out

#- 109 ReturnItem
# body param: body
echo '{"orderNo": "Q3w1X0ho"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'UR9l1Dqn' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'ReturnItem' test.out

#- 110 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '33' \
    --name 'SnUzfjU9' \
    --offset '8' \
    --tag 'Hk3UkgJE' \
    > test.out 2>&1
eval_tap $? 110 'QueryKeyGroups' test.out

#- 111 CreateKeyGroup
# body param: body
echo '{"description": "kuGwDVB7", "name": "7LQIb8gm", "status": "ACTIVE", "tags": ["9N3L217w", "FXXXzbDr", "T4NbbciL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'CreateKeyGroup' test.out

#- 112 GetKeyGroupByBoothName
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupByBoothName \
    --namespace $AB_NAMESPACE \
    --boothName 'Ae4JDrK1' \
    > test.out 2>&1
eval_tap $? 112 'GetKeyGroupByBoothName' test.out

#- 113 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId '4SQowGWJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetKeyGroup' test.out

#- 114 UpdateKeyGroup
# body param: body
echo '{"description": "RmbnIKRO", "name": "vI9IaeqG", "status": "INACTIVE", "tags": ["4rF5D0dR", "xqrxtN7M", "nqfsEj58"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'cwrpQ8Iz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdateKeyGroup' test.out

#- 115 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'qyTatjKP' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 115 'GetKeyGroupDynamic' test.out

#- 116 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId '0iW8e55y' \
    --namespace $AB_NAMESPACE \
    --limit '11' \
    --offset '91' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 116 'ListKeys' test.out

#- 117 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'kWgJvRwA' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 117 'UploadKeys' test.out

#- 118 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'I6o3Myfc' \
    --limit '93' \
    --offset '78' \
    --orderNos '["LeZRIM7X", "e4f6mPZ8", "OLgfi1S5"]' \
    --sortBy 'k7cXP7ON' \
    --startTime 'vLgA9Wvy' \
    --status 'REFUNDED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 118 'QueryOrders' test.out

#- 119 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'GetOrderStatistics' test.out

#- 120 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'JNX6FBfq' \
    > test.out 2>&1
eval_tap $? 120 'GetOrder' test.out

#- 121 RefundOrder
# body param: body
echo '{"description": "YhQSFeZ9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'VJUrbpHK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundOrder' test.out

#- 122 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetPaymentCallbackConfig' test.out

#- 123 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "U4Dcjca7", "privateKey": "U2dCUKU8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'UpdatePaymentCallbackConfig' test.out

#- 124 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'gmNH7W8b' \
    --externalId 'Eg8VfuNQ' \
    --limit '97' \
    --notificationSource 'ALIPAY' \
    --notificationType 'VbZ4jmT8' \
    --offset '0' \
    --paymentOrderNo 'rHRYj50s' \
    --startDate 'WbDDCPVo' \
    --status 'WARN' \
    > test.out 2>&1
eval_tap $? 124 'QueryPaymentNotifications' test.out

#- 125 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId 'cBrl71dI' \
    --limit '65' \
    --offset '73' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 125 'QueryPaymentOrders' test.out

#- 126 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "xQnLpYyE", "currencyNamespace": "CrHLlY9D", "customParameters": {"xcR5e7Mg": {}, "p20uwpvv": {}, "ajoRAjzx": {}}, "description": "3LBmV5Y3", "extOrderNo": "T515KRZX", "extUserId": "MNs20B35", "itemType": "CODE", "language": "khW-051", "metadata": {"Xv96gUom": "6JyUXvR8", "OYiwu5Ca": "BCVvg1sE", "TfR4Ve7p": "uatIZgoF"}, "notifyUrl": "ei30Q2zq", "omitNotification": false, "platform": "GfM9qmlP", "price": 41, "recurringPaymentOrderNo": "kdDTtpn8", "region": "sJIMJp09", "returnUrl": "ARcDgKe6", "sandbox": true, "sku": "R3yRLuMO", "subscriptionId": "LvMzqIzC", "targetNamespace": "9rPqNnJe", "targetUserId": "x7uJL0MF", "title": "xJKMsZWP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'CreatePaymentOrderByDedicated' test.out

#- 127 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'eltpYLyD' \
    > test.out 2>&1
eval_tap $? 127 'ListExtOrderNoByExtTxId' test.out

#- 128 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'yFzT3GXX' \
    > test.out 2>&1
eval_tap $? 128 'GetPaymentOrder' test.out

#- 129 ChargePaymentOrder
# body param: body
echo '{"extTxId": "VSCufekX", "paymentMethod": "bgx6etmz", "paymentProvider": "WXPAY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'vNKdwhIy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'ChargePaymentOrder' test.out

#- 130 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "h6aB4NZT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'wxQiObMi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'RefundPaymentOrderByDedicated' test.out

#- 131 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 94, "currencyCode": "ivTU7UKx", "notifyType": "REFUND", "paymentProvider": "XSOLLA", "salesTax": 46, "vat": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '5RGucF6w' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 131 'SimulatePaymentOrderNotification' test.out

#- 132 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Dhx12blY' \
    > test.out 2>&1
eval_tap $? 132 'GetPaymentOrderChargeStatus' test.out

#- 133 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 133 'GetPlatformWalletConfig' test.out

#- 134 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Steam", "GooglePlay", "IOS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdatePlatformWalletConfig' test.out

#- 135 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    > test.out 2>&1
eval_tap $? 135 'ResetPlatformWalletConfig' test.out

#- 136 CreateReward
# body param: body
echo '{"description": "vBIjpCuK", "eventTopic": "TMxpW3Qn", "maxAwarded": 44, "maxAwardedPerUser": 46, "namespaceExpression": "ZN7iWGXE", "rewardCode": "M8Xj6PYG", "rewardConditions": [{"condition": "1tqzt63y", "conditionName": "Ms2Iw0R3", "eventName": "pEDIUuaS", "rewardItems": [{"duration": 38, "itemId": "gA1As1S4", "quantity": 90}, {"duration": 88, "itemId": "yNJBFfAq", "quantity": 22}, {"duration": 34, "itemId": "Xe0EU1MO", "quantity": 29}]}, {"condition": "Sw72W1lI", "conditionName": "87gv8HH1", "eventName": "P9zvwsxh", "rewardItems": [{"duration": 21, "itemId": "TAV1Cg2C", "quantity": 57}, {"duration": 5, "itemId": "5qcmx46q", "quantity": 44}, {"duration": 14, "itemId": "rjKzuMex", "quantity": 36}]}, {"condition": "AMStLasM", "conditionName": "hjJmZJCk", "eventName": "UTUo61re", "rewardItems": [{"duration": 88, "itemId": "k7PTkvcy", "quantity": 83}, {"duration": 46, "itemId": "sBQVP2zX", "quantity": 16}, {"duration": 92, "itemId": "a0lrMnQF", "quantity": 1}]}], "userIdExpression": "UvJmyMWi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateReward' test.out

#- 137 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'qeCaxPvY' \
    --limit '55' \
    --offset '91' \
    --sortBy '["namespace:desc", "rewardCode", "rewardCode:desc"]' \
    > test.out 2>&1
eval_tap $? 137 'QueryRewards' test.out

#- 138 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'ExportRewards' test.out

#- 139 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 139 'ImportRewards' test.out

#- 140 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'r7S4D3RS' \
    > test.out 2>&1
eval_tap $? 140 'GetReward' test.out

#- 141 UpdateReward
# body param: body
echo '{"description": "IK6wkoWq", "eventTopic": "xORD1Ag7", "maxAwarded": 41, "maxAwardedPerUser": 18, "namespaceExpression": "9lkOPIsh", "rewardCode": "bRjvwz7H", "rewardConditions": [{"condition": "tqvPS1Jc", "conditionName": "GqjCgIAx", "eventName": "520ZfvoP", "rewardItems": [{"duration": 13, "itemId": "EMShegdv", "quantity": 52}, {"duration": 89, "itemId": "oM0wU9YR", "quantity": 40}, {"duration": 47, "itemId": "NBs5dnyr", "quantity": 35}]}, {"condition": "ryhuZJTm", "conditionName": "8wBvwqcl", "eventName": "0FK7ijyV", "rewardItems": [{"duration": 3, "itemId": "2qj6V8HW", "quantity": 61}, {"duration": 83, "itemId": "IMj7Kuc9", "quantity": 78}, {"duration": 63, "itemId": "moGdXG2j", "quantity": 34}]}, {"condition": "6osSrYp9", "conditionName": "mc8AZlvO", "eventName": "0vIZARCn", "rewardItems": [{"duration": 82, "itemId": "WfOfu876", "quantity": 48}, {"duration": 4, "itemId": "wy2XEya9", "quantity": 86}, {"duration": 68, "itemId": "YCScgdBv", "quantity": 24}]}], "userIdExpression": "GYqCnh6A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'EUa2evT3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'UpdateReward' test.out

#- 142 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'o8AySkiD' \
    > test.out 2>&1
eval_tap $? 142 'DeleteReward' test.out

#- 143 CheckEventCondition
# body param: body
echo '{"payload": {"Y1vyWPQo": {}, "eBTSk5vw": {}, "cdfdrRzl": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'vwxchteL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'CheckEventCondition' test.out

#- 144 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "Uftq5i7E", "userId": "zFdE6i5j"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId '5L3MBY3m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'DeleteRewardConditionRecord' test.out

#- 145 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 145 'ListStores' test.out

#- 146 CreateStore
# body param: body
echo '{"defaultLanguage": "qgRRzpDC", "defaultRegion": "5oRiMul1", "description": "fhSKu8nd", "supportedLanguages": ["NT3f21bU", "tCo7RHJF", "OiMj7DDq"], "supportedRegions": ["RJB5yz8W", "4E3Fnhf5", "apABdX3y"], "title": "D3oo1faO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CreateStore' test.out

#- 147 ImportStore
eval_tap 0 147 'ImportStore # SKIP deprecated' test.out

#- 148 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 148 'GetPublishedStore' test.out

#- 149 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 149 'DeletePublishedStore' test.out

#- 150 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 150 'GetPublishedStoreBackup' test.out

#- 151 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 151 'RollbackPublishedStore' test.out

#- 152 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'wdhO0U2O' \
    > test.out 2>&1
eval_tap $? 152 'GetStore' test.out

#- 153 UpdateStore
# body param: body
echo '{"defaultLanguage": "Me7uoEAh", "defaultRegion": "G3ZRdKeR", "description": "RBXm7LdZ", "supportedLanguages": ["CVyBWi5q", "Jh9WiD1R", "yourgX2T"], "supportedRegions": ["4XQVdMtL", "j71FvjNk", "98leNuqd"], "title": "cOzY04Vx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'UDav5K4k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'UpdateStore' test.out

#- 154 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'sO0JkgUZ' \
    > test.out 2>&1
eval_tap $? 154 'DeleteStore' test.out

#- 155 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'oPqkB5gw' \
    --action 'UPDATE' \
    --itemSku 'KEc23icj' \
    --itemType 'BUNDLE' \
    --limit '67' \
    --offset '68' \
    --selected 'false' \
    --sortBy '["createdAt", "updatedAt", "createdAt:asc"]' \
    --status 'PUBLISHED' \
    --type 'STORE' \
    --updatedAtEnd 'U0Sa7CdI' \
    --updatedAtStart 'O2O7xdha' \
    > test.out 2>&1
eval_tap $? 155 'QueryChanges' test.out

#- 156 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'IcgqP59r' \
    > test.out 2>&1
eval_tap $? 156 'PublishAll' test.out

#- 157 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'boK4lP9k' \
    > test.out 2>&1
eval_tap $? 157 'PublishSelected' test.out

#- 158 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId '8j1eIGQi' \
    > test.out 2>&1
eval_tap $? 158 'SelectAllRecords' test.out

#- 159 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'uSzZMcna' \
    --action 'UPDATE' \
    --itemSku 'ihGr4G1V' \
    --itemType 'SEASON' \
    --type 'CATEGORY' \
    --updatedAtEnd 'WOnadsGi' \
    --updatedAtStart '5oolBfYD' \
    > test.out 2>&1
eval_tap $? 159 'GetStatistic' test.out

#- 160 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'XPNHXdSa' \
    > test.out 2>&1
eval_tap $? 160 'UnselectAllRecords' test.out

#- 161 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'L6KUQzk3' \
    --namespace $AB_NAMESPACE \
    --storeId 'iCOeIMdQ' \
    > test.out 2>&1
eval_tap $? 161 'SelectRecord' test.out

#- 162 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'Mhd7sn0X' \
    --namespace $AB_NAMESPACE \
    --storeId '3Yv6Z5QW' \
    > test.out 2>&1
eval_tap $? 162 'UnselectRecord' test.out

#- 163 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId '68lVrhCa' \
    --targetStoreId 'GqZlSJKm' \
    > test.out 2>&1
eval_tap $? 163 'CloneStore' test.out

#- 164 ExportStore
eval_tap 0 164 'ExportStore # SKIP deprecated' test.out

#- 165 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId '4g5MXdQC' \
    --limit '93' \
    --offset '50' \
    --sku 'h6zxQhCc' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    --userId 'J40rGIBD' \
    > test.out 2>&1
eval_tap $? 165 'QuerySubscriptions' test.out

#- 166 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'OsmieBts' \
    > test.out 2>&1
eval_tap $? 166 'RecurringChargeSubscription' test.out

#- 167 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'oZk174Ry' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 167 'GetTicketDynamic' test.out

#- 168 DecreaseTicketSale
# body param: body
echo '{"orderNo": "5fokHLaC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName '4TRLD7bS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'DecreaseTicketSale' test.out

#- 169 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'b6LPUra4' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 169 'GetTicketBoothID' test.out

#- 170 IncreaseTicketSale
# body param: body
echo '{"count": 16, "orderNo": "o3CMzoPZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '0AGfJOmK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'IncreaseTicketSale' test.out

#- 171 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "otc38jrZ", "value": 29}, {"id": "ULWhOEt6", "value": 52}, {"id": "WyV4e3e5", "value": 16}], "steamUserId": "t4HyeeYD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId '4lFt6G15' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'UnlockSteamUserAchievement' test.out

#- 172 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'vBKtbdoC' \
    --xboxUserId 'nRKlVjRB' \
    > test.out 2>&1
eval_tap $? 172 'GetXblUserAchievements' test.out

#- 173 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "jOzDfKtS", "percentComplete": 79}, {"id": "mfPOCLRI", "percentComplete": 58}, {"id": "863B5kNU", "percentComplete": 30}], "serviceConfigId": "xjDEewgy", "titleId": "FIbzhSgT", "xboxUserId": "PK701j7K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'S46YfUhE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'UpdateXblUserAchievement' test.out

#- 174 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId '0oZJ1RL7' \
    > test.out 2>&1
eval_tap $? 174 'AnonymizeCampaign' test.out

#- 175 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'EkQoMvXj' \
    > test.out 2>&1
eval_tap $? 175 'AnonymizeEntitlement' test.out

#- 176 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'rltezdDE' \
    > test.out 2>&1
eval_tap $? 176 'AnonymizeFulfillment' test.out

#- 177 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'VoTsRvfT' \
    > test.out 2>&1
eval_tap $? 177 'AnonymizeIntegration' test.out

#- 178 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'dIb11V7H' \
    > test.out 2>&1
eval_tap $? 178 'AnonymizeOrder' test.out

#- 179 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'iPokYtOI' \
    > test.out 2>&1
eval_tap $? 179 'AnonymizePayment' test.out

#- 180 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId '9gJ6aAR3' \
    > test.out 2>&1
eval_tap $? 180 'AnonymizeSubscription' test.out

#- 181 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'X1LdUPqy' \
    > test.out 2>&1
eval_tap $? 181 'AnonymizeWallet' test.out

#- 182 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'oRJurPbA' \
    --activeOnly 'false' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'NwkAlY89' \
    --features '["hHmna25e", "TwXowrM2", "8ujUdheB"]' \
    --itemId '["iq1jQe8c", "3QIHlivO", "39N7uiSJ"]' \
    --limit '76' \
    --offset '8' \
    > test.out 2>&1
eval_tap $? 182 'QueryUserEntitlements' test.out

#- 183 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1984-05-21T00:00:00Z", "grantedCode": "iMlSMo6O", "itemId": "MvtRUBTw", "itemNamespace": "3LsbnMD0", "language": "HOA_GUjP", "quantity": 49, "region": "IUhQrmnH", "source": "IAP", "startDate": "1994-08-29T00:00:00Z", "storeId": "P82JOmh6"}, {"endDate": "1995-03-11T00:00:00Z", "grantedCode": "D6zm4xjf", "itemId": "mSptidhz", "itemNamespace": "XuTY2UkD", "language": "Is_YVdQ", "quantity": 67, "region": "gfvHqz6Z", "source": "PURCHASE", "startDate": "1972-04-16T00:00:00Z", "storeId": "OePnwYZ2"}, {"endDate": "1997-11-07T00:00:00Z", "grantedCode": "Bu8UXqEz", "itemId": "ejD2EjZB", "itemNamespace": "4nT9m5fQ", "language": "Lh-sd", "quantity": 35, "region": "SEv2YEbM", "source": "REDEEM_CODE", "startDate": "1987-10-04T00:00:00Z", "storeId": "UxfeUKEl"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '0uzoGO4B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'GrantUserEntitlement' test.out

#- 184 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'L5Yg0nZ1' \
    --activeOnly 'true' \
    --appId 'pg1Hfdxz' \
    > test.out 2>&1
eval_tap $? 184 'GetUserAppEntitlementByAppId' test.out

#- 185 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'Fv27Cn9i' \
    --activeOnly 'true' \
    --limit '13' \
    --offset '99' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 185 'QueryUserEntitlementsByAppType' test.out

#- 186 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'rW7tjCD5' \
    --activeOnly 'true' \
    --entitlementClazz 'CODE' \
    --itemId 'NlERooLE' \
    > test.out 2>&1
eval_tap $? 186 'GetUserEntitlementByItemId' test.out

#- 187 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'Dm9yttNW' \
    --activeOnly 'false' \
    --entitlementClazz 'MEDIA' \
    --sku 'Q4wTGyB5' \
    > test.out 2>&1
eval_tap $? 187 'GetUserEntitlementBySku' test.out

#- 188 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'joewpMww' \
    --appIds '["bUWzWxeG", "0YLw9duy", "32XAgwG8"]' \
    --itemIds '["Q5MBymDF", "3Iop39EN", "MAM8IBru"]' \
    --skus '["4zaBsBfd", "c6zXdqRo", "hhV6pqm4"]' \
    > test.out 2>&1
eval_tap $? 188 'ExistsAnyUserActiveEntitlement' test.out

#- 189 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '2QmDN99n' \
    --itemIds '["0nhBRvUX", "NqWglnDn", "O5nqN5RH"]' \
    > test.out 2>&1
eval_tap $? 189 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 190 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'q0n02Pci' \
    --appId '0tptsccf' \
    > test.out 2>&1
eval_tap $? 190 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 191 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'jO27KOMd' \
    --entitlementClazz 'CODE' \
    --itemId 'y95DZWwt' \
    > test.out 2>&1
eval_tap $? 191 'GetUserEntitlementOwnershipByItemId' test.out

#- 192 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'oSKQ8kTb' \
    --ids '["QcraSGry", "qHjZgU5K", "svfzXhKX"]' \
    > test.out 2>&1
eval_tap $? 192 'GetUserEntitlementOwnershipByItemIds' test.out

#- 193 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '77qyyw7e' \
    --entitlementClazz 'OPTIONBOX' \
    --sku '8QxRhinv' \
    > test.out 2>&1
eval_tap $? 193 'GetUserEntitlementOwnershipBySku' test.out

#- 194 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'Kr52KbpM' \
    --entitlementIds 'JkbMrEtm' \
    > test.out 2>&1
eval_tap $? 194 'RevokeUserEntitlements' test.out

#- 195 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId '0ukKEluU' \
    --namespace $AB_NAMESPACE \
    --userId 'HaMjYNyI' \
    > test.out 2>&1
eval_tap $? 195 'GetUserEntitlement' test.out

#- 196 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1994-07-11T00:00:00Z", "nullFieldList": ["PgmUFIlB", "HKCe8RBG", "bLCnBRIa"], "startDate": "1976-11-23T00:00:00Z", "status": "REVOKED", "useCount": 44}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'kMdQkEiU' \
    --namespace $AB_NAMESPACE \
    --userId 'ddQ87TIS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'UpdateUserEntitlement' test.out

#- 197 ConsumeUserEntitlement
# body param: body
echo '{"options": ["vFtN0umv", "WwzfMAjm", "oSL1mqeg"], "requestId": "mAwayAol", "useCount": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId '0fpuTnrn' \
    --namespace $AB_NAMESPACE \
    --userId 'h9bgtJt0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'ConsumeUserEntitlement' test.out

#- 198 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'UYiiLte6' \
    --namespace $AB_NAMESPACE \
    --userId 'nIAIx6OV' \
    > test.out 2>&1
eval_tap $? 198 'DisableUserEntitlement' test.out

#- 199 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId '7NshW5be' \
    --namespace $AB_NAMESPACE \
    --userId 'MiQgxl69' \
    > test.out 2>&1
eval_tap $? 199 'EnableUserEntitlement' test.out

#- 200 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'VXEqiKn3' \
    --namespace $AB_NAMESPACE \
    --userId 'cEPVgb6J' \
    > test.out 2>&1
eval_tap $? 200 'GetUserEntitlementHistories' test.out

#- 201 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 'Wm3gilQf' \
    --namespace $AB_NAMESPACE \
    --userId 'xO6KbcqZ' \
    > test.out 2>&1
eval_tap $? 201 'RevokeUserEntitlement' test.out

#- 202 FulfillItem
# body param: body
echo '{"duration": 3, "endDate": "1996-12-03T00:00:00Z", "itemId": "Moi2LbAw", "itemSku": "e80zrTqV", "language": "M2UCz5Hq", "order": {"currency": {"currencyCode": "u6GTVR1F", "currencySymbol": "v4Vmc0hM", "currencyType": "REAL", "decimals": 10, "namespace": "nRtHMhUd"}, "ext": {"XW8cNIxE": {}, "ElK8PLED": {}, "ruMGa1WP": {}}, "free": false}, "orderNo": "iIljhc27", "origin": "GooglePlay", "quantity": 71, "region": "81URmise", "source": "ACHIEVEMENT", "startDate": "1983-02-13T00:00:00Z", "storeId": "EdB8B1CB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'aMEPVO6O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'FulfillItem' test.out

#- 203 RedeemCode
# body param: body
echo '{"code": "qNALHxkQ", "language": "Df", "region": "XD0wioWc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '5dUEhaS9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'RedeemCode' test.out

#- 204 FulfillRewards
# body param: body
echo '{"origin": "Stadia", "rewards": [{"currency": {"currencyCode": "ZrVB4uen", "namespace": "ZSPEufVK"}, "item": {"itemId": "sPjbVrFL", "itemSku": "NYiXTCw4", "itemType": "bpCDwAvM"}, "quantity": 93, "type": "CURRENCY"}, {"currency": {"currencyCode": "JYMYLm5w", "namespace": "asxpXwCw"}, "item": {"itemId": "cMGIam3B", "itemSku": "XlKyKAEF", "itemType": "4MjHQgF5"}, "quantity": 29, "type": "ITEM"}, {"currency": {"currencyCode": "Zj2Sdlx4", "namespace": "Cjsbpx6z"}, "item": {"itemId": "MfwsdNq0", "itemSku": "Gtr4TsVt", "itemType": "7DG3FIoc"}, "quantity": 18, "type": "ITEM"}], "source": "OTHER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'KHDkvACt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'FulfillRewards' test.out

#- 205 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'Lz5FoSUk' \
    --endTime 'Zu8TgftF' \
    --limit '91' \
    --offset '0' \
    --productId 'kZhn4uqa' \
    --startTime '6tDtUiXy' \
    --status 'VERIFIED' \
    --type 'GOOGLE' \
    > test.out 2>&1
eval_tap $? 205 'QueryUserIAPOrders' test.out

#- 206 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '5RSpmkae' \
    > test.out 2>&1
eval_tap $? 206 'QueryAllUserIAPOrders' test.out

#- 207 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "AtNj", "productId": "dl4ZoBvN", "region": "lFOC4PMY", "type": "EPICGAMES"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'BajzaXgt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'MockFulfillIAPItem' test.out

#- 208 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'Jti3PpTV' \
    --itemId '2IJQprJf' \
    --limit '87' \
    --offset '0' \
    --status 'CHARGED' \
    > test.out 2>&1
eval_tap $? 208 'QueryUserOrders' test.out

#- 209 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "4Js0F3Kc", "currencyNamespace": "nSxOJD1M", "discountedPrice": 29, "ext": {"SvgkuznL": {}, "cxcVbFbi": {}, "fE6JQnWC": {}}, "itemId": "wTpNatk1", "language": "2j0lBmCw", "options": {"skipPriceValidation": true}, "platform": "Nintendo", "price": 64, "quantity": 36, "region": "aleEAWLL", "returnUrl": "nJD9F5XK", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'vOqvH03V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'AdminCreateUserOrder' test.out

#- 210 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'RcpTYcID' \
    --itemId '1FFbycQ5' \
    > test.out 2>&1
eval_tap $? 210 'CountOfPurchasedItem' test.out

#- 211 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'dMeB6T1d' \
    --userId 'VTvHSLlA' \
    > test.out 2>&1
eval_tap $? 211 'GetUserOrder' test.out

#- 212 UpdateUserOrderStatus
# body param: body
echo '{"status": "DELETED", "statusReason": "K61JhilG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'krDu9kre' \
    --userId 'mpZvHh0U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 212 'UpdateUserOrderStatus' test.out

#- 213 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'sZwDYbZg' \
    --userId 'niBIOxrV' \
    > test.out 2>&1
eval_tap $? 213 'FulfillUserOrder' test.out

#- 214 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'sFdv8wHz' \
    --userId 'CpmBGC29' \
    > test.out 2>&1
eval_tap $? 214 'GetUserOrderGrant' test.out

#- 215 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'M1nCRSAo' \
    --userId 'p4iXfaxV' \
    > test.out 2>&1
eval_tap $? 215 'GetUserOrderHistories' test.out

#- 216 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "VDIivwnN"}, "authorisedTime": "1986-01-24T00:00:00Z", "chargebackReversedTime": "1977-09-27T00:00:00Z", "chargebackTime": "1990-03-07T00:00:00Z", "chargedTime": "1973-04-01T00:00:00Z", "createdTime": "1996-02-19T00:00:00Z", "currency": {"currencyCode": "czXq9gD1", "currencySymbol": "PGdPxfqb", "currencyType": "VIRTUAL", "decimals": 38, "namespace": "dDd8Vh2t"}, "customParameters": {"z3Xx7NX2": {}, "PuFnNx9D": {}, "02EzPFiM": {}}, "extOrderNo": "hHgbfK8h", "extTxId": "h9uoytmI", "extUserId": "M6xxxJaT", "issuedAt": "1983-05-22T00:00:00Z", "metadata": {"YhjHi6FW": "LYiEgXOz", "7axOfcFd": "CMnVWqS5", "rx0IyUwz": "gsxHJO6d"}, "namespace": "bmTjMWNc", "nonceStr": "nAt8EaFK", "paymentMethod": "8fwahCG7", "paymentMethodFee": 12, "paymentOrderNo": "rQtWhp3f", "paymentProvider": "PAYPAL", "paymentProviderFee": 8, "paymentStationUrl": "m9v0odr1", "price": 43, "refundedTime": "1997-01-14T00:00:00Z", "salesTax": 71, "sandbox": true, "sku": "C3tiwwCd", "status": "CHARGE_FAILED", "statusReason": "5jGFsAFn", "subscriptionId": "ifOi54lN", "subtotalPrice": 36, "targetNamespace": "IhbYUtpM", "targetUserId": "pIDqOArJ", "tax": 53, "totalPrice": 18, "totalTax": 29, "txEndTime": "1974-07-27T00:00:00Z", "type": "7KwOdcmM", "userId": "qxoNy0K3", "vat": 3}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo '3yhL7Zf9' \
    --userId 'ViLw7MXe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 216 'ProcessUserOrderNotification' test.out

#- 217 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'ggwO4iIY' \
    --userId '8NzcARh0' \
    > test.out 2>&1
eval_tap $? 217 'DownloadUserOrderReceipt' test.out

#- 218 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "2yd2qlmS", "currencyNamespace": "WJ1WPNVS", "customParameters": {"qRYOjFVj": {}, "8Ps7Bk2p": {}, "50mxmL04": {}}, "description": "7Kw8zQSn", "extOrderNo": "MLWd0LVY", "extUserId": "bjsgTwRH", "itemType": "COINS", "language": "rjH", "metadata": {"JwXvNnKI": "woovp1oK", "0m4MsI4c": "CEtug2nu", "ftfFKu1o": "KYKvQQXo"}, "notifyUrl": "ILbfzBi7", "omitNotification": true, "platform": "uXafx9ZD", "price": 81, "recurringPaymentOrderNo": "fyZROp8Z", "region": "LBDsK5ca", "returnUrl": "itdPrLPp", "sandbox": true, "sku": "QzP7NNFh", "subscriptionId": "rLGNFXS8", "title": "W4WEkW8Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'K3sJj8s0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'CreateUserPaymentOrder' test.out

#- 219 RefundUserPaymentOrder
# body param: body
echo '{"description": "bqJ7IfE4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'KRpUUUa5' \
    --userId 'Co9zU7Vz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'RefundUserPaymentOrder' test.out

#- 220 ApplyUserRedemption
# body param: body
echo '{"code": "MYWIjy2z", "orderNo": "La7uu8Ru"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId '9Myqpo68' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'ApplyUserRedemption' test.out

#- 221 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'V4bGOhNu' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'iSjzBymA' \
    --limit '32' \
    --offset '12' \
    --sku 'lI446xGt' \
    --status 'CANCELLED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 221 'QueryUserSubscriptions' test.out

#- 222 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'a4NVISc8' \
    --excludeSystem 'true' \
    --limit '67' \
    --offset '14' \
    --subscriptionId '3ZMr5EoJ' \
    > test.out 2>&1
eval_tap $? 222 'GetUserSubscriptionActivities' test.out

#- 223 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 8, "itemId": "GUW9EYKX", "language": "xRXzwlkb", "reason": "Yitw31Ka", "region": "9C4GnAs2", "source": "QeqnjPEu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'GHNGA5Z1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'PlatformSubscribeSubscription' test.out

#- 224 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'uu64ADh3' \
    --itemId 'LKdq8VPC' \
    > test.out 2>&1
eval_tap $? 224 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 225 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'BuaLHJEm' \
    --userId 'EvbKPbtx' \
    > test.out 2>&1
eval_tap $? 225 'GetUserSubscription' test.out

#- 226 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qvadoWe9' \
    --userId 'a47y4dAV' \
    > test.out 2>&1
eval_tap $? 226 'DeleteUserSubscription' test.out

#- 227 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "9BRh6vZ6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'udKGjBhS' \
    --userId '5X0ZwSa8' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'CancelSubscription' test.out

#- 228 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 99, "reason": "S89bAOjb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'qHJNSSJc' \
    --userId '04Lutm81' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'GrantDaysToSubscription' test.out

#- 229 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 't3bz0URX' \
    --userId 'DrzNcrdA' \
    --excludeFree 'false' \
    --limit '86' \
    --offset '97' \
    > test.out 2>&1
eval_tap $? 229 'GetUserSubscriptionBillingHistories' test.out

#- 230 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "WJO3BUTC"}, "authorisedTime": "1998-02-17T00:00:00Z", "chargebackReversedTime": "1985-06-27T00:00:00Z", "chargebackTime": "1999-10-28T00:00:00Z", "chargedTime": "1983-06-16T00:00:00Z", "createdTime": "1972-03-04T00:00:00Z", "currency": {"currencyCode": "yogxGlXj", "currencySymbol": "aMjrNECY", "currencyType": "VIRTUAL", "decimals": 50, "namespace": "aQVlyPBR"}, "customParameters": {"tS4R7DNV": {}, "9wIPFtlI": {}, "Rk2zjYZ5": {}}, "extOrderNo": "gMrgiTSY", "extTxId": "m0BuQ6ci", "extUserId": "jqZ4rWJQ", "issuedAt": "1982-08-02T00:00:00Z", "metadata": {"tPGVdpgn": "GgMe7kTa", "qrGDDl2U": "RDJJ4noN", "yU3sJEas": "JT2ksoaU"}, "namespace": "YSUObT9l", "nonceStr": "JptBbLqR", "paymentMethod": "2hNtGItK", "paymentMethodFee": 30, "paymentOrderNo": "D0daH8Yp", "paymentProvider": "ADYEN", "paymentProviderFee": 42, "paymentStationUrl": "Sp9nUAJq", "price": 59, "refundedTime": "1986-08-04T00:00:00Z", "salesTax": 80, "sandbox": true, "sku": "hLb7vq0O", "status": "REQUEST_FOR_INFORMATION", "statusReason": "IP13f2q9", "subscriptionId": "Y4MuzsUD", "subtotalPrice": 69, "targetNamespace": "mRCUSZ2P", "targetUserId": "QWCiuQSE", "tax": 79, "totalPrice": 74, "totalTax": 50, "txEndTime": "1981-05-13T00:00:00Z", "type": "At4Qt6go", "userId": "VPLQQhsc", "vat": 18}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'g4adE1sM' \
    --userId 'PdVlmJXp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'ProcessUserSubscriptionNotification' test.out

#- 231 AcquireUserTicket
# body param: body
echo '{"count": 7, "orderNo": "PWfPlgpd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'M51GFw6W' \
    --namespace $AB_NAMESPACE \
    --userId 'RPMxKYIh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'AcquireUserTicket' test.out

#- 232 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'Dodg6DW6' \
    > test.out 2>&1
eval_tap $? 232 'QueryUserCurrencyWallets' test.out

#- 233 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'kUK8gOus' \
    --namespace $AB_NAMESPACE \
    --userId '5pZDf86h' \
    --limit '35' \
    --offset '57' \
    > test.out 2>&1
eval_tap $? 233 'ListUserCurrencyTransactions' test.out

#- 234 CheckWallet
eval_tap 0 234 'CheckWallet # SKIP deprecated' test.out

#- 235 CreditUserWallet
# body param: body
echo '{"amount": 69, "expireAt": "1994-07-01T00:00:00Z", "origin": "Nintendo", "reason": "cEQBy6x8", "source": "REFERRAL_BONUS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'u4QcQ0SE' \
    --namespace $AB_NAMESPACE \
    --userId 'qXSWYH2C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'CreditUserWallet' test.out

#- 236 PayWithUserWallet
# body param: body
echo '{"amount": 52, "walletPlatform": "Epic"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'oKKUzKA1' \
    --namespace $AB_NAMESPACE \
    --userId 'VJyEcFxw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'PayWithUserWallet' test.out

#- 237 GetUserWallet
eval_tap 0 237 'GetUserWallet # SKIP deprecated' test.out

#- 238 DebitUserWallet
eval_tap 0 238 'DebitUserWallet # SKIP deprecated' test.out

#- 239 DisableUserWallet
eval_tap 0 239 'DisableUserWallet # SKIP deprecated' test.out

#- 240 EnableUserWallet
eval_tap 0 240 'EnableUserWallet # SKIP deprecated' test.out

#- 241 ListUserWalletTransactions
eval_tap 0 241 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 242 QueryWallets
eval_tap 0 242 'QueryWallets # SKIP deprecated' test.out

#- 243 GetWallet
eval_tap 0 243 'GetWallet # SKIP deprecated' test.out

#- 244 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'cTHalBYD' \
    --end 'Hk8VhUUw' \
    --start 'kiUKWfeH' \
    > test.out 2>&1
eval_tap $? 244 'SyncOrders' test.out

#- 245 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["2YRwb9e9", "T9PWTexk", "MU8TKWye"], "apiKey": "XpE7pnuT", "authoriseAsCapture": true, "blockedPaymentMethods": ["DwIDxVKb", "nz81J39f", "TMKG4OXO"], "clientKey": "FMmZEsLQ", "dropInSettings": "SmSorvwV", "liveEndpointUrlPrefix": "qD5M5sqb", "merchantAccount": "VDsLv5Bu", "notificationHmacKey": "W4BwY51L", "notificationPassword": "jZ5C4tGN", "notificationUsername": "0QJPnHlW", "returnUrl": "0jwNh1tO", "settings": "zf6Qd86j"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'TestAdyenConfig' test.out

#- 246 TestAliPayConfig
# body param: body
echo '{"appId": "za1TwfuR", "privateKey": "KoWxqcE9", "publicKey": "aEKwh9xJ", "returnUrl": "2d0R02Wl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'TestAliPayConfig' test.out

#- 247 TestCheckoutConfig
# body param: body
echo '{"publicKey": "UmhEk1rD", "secretKey": "ibUAdxFQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'TestCheckoutConfig' test.out

#- 248 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'Z6vJhUOV' \
    --region '2KKlhBgv' \
    > test.out 2>&1
eval_tap $? 248 'DebugMatchedPaymentMerchantConfig' test.out

#- 249 TestPayPalConfig
# body param: body
echo '{"clientID": "j3CPZedL", "clientSecret": "sZqD8tDS", "returnUrl": "0gLkkgSo", "webHookId": "W8MhkZgR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'TestPayPalConfig' test.out

#- 250 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["uj4M46FP", "4mJQKnUj", "tGuiLovp"], "publishableKey": "XUkMldxO", "secretKey": "WswGdlbT", "webhookSecret": "OhmHra7j"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'TestStripeConfig' test.out

#- 251 TestWxPayConfig
# body param: body
echo '{"appId": "nLVlzPxP", "key": "DNP90AVE", "mchid": "orC2EKTS", "returnUrl": "I3DMVDwy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'TestWxPayConfig' test.out

#- 252 TestXsollaConfig
# body param: body
echo '{"apiKey": "yKPaMRqR", "flowCompletionUrl": "L0xkw88Z", "merchantId": 66, "projectId": 70, "projectSecretKey": "ZEfJhxVg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'TestXsollaConfig' test.out

#- 253 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id 'RFPx1PyB' \
    > test.out 2>&1
eval_tap $? 253 'GetPaymentMerchantConfig' test.out

#- 254 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["U8VhjspW", "4dgWMNiL", "PTjolFe9"], "apiKey": "b3M32M0z", "authoriseAsCapture": true, "blockedPaymentMethods": ["hk2rd7CS", "lNmaRJZH", "lDSBd6B7"], "clientKey": "yHHIEMBF", "dropInSettings": "xrn3zEYZ", "liveEndpointUrlPrefix": "Je9BpLrk", "merchantAccount": "VuqjabMl", "notificationHmacKey": "DF2BJX6c", "notificationPassword": "MPMvHecr", "notificationUsername": "lPDurp6G", "returnUrl": "EpYeLSuF", "settings": "pQF1PDep"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'mGUfOKiu' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'UpdateAdyenConfig' test.out

#- 255 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'kipWYYiz' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 255 'TestAdyenConfigById' test.out

#- 256 UpdateAliPayConfig
# body param: body
echo '{"appId": "AL3gXYT3", "privateKey": "UjA0D2Ze", "publicKey": "EmauIcSL", "returnUrl": "C0d1LWpT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'LsOFRhiV' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'UpdateAliPayConfig' test.out

#- 257 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id '6ftdQR4w' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 257 'TestAliPayConfigById' test.out

#- 258 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "m7nEMmbI", "secretKey": "Dd8BYArN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'tSMd720l' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'UpdateCheckoutConfig' test.out

#- 259 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'd46MOPlz' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 259 'TestCheckoutConfigById' test.out

#- 260 UpdatePayPalConfig
# body param: body
echo '{"clientID": "OxBetH9R", "clientSecret": "KY657wVS", "returnUrl": "ihp4gKZH", "webHookId": "7q4MIpYV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'Fko6XxDC' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'UpdatePayPalConfig' test.out

#- 261 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'cl3lv87D' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 261 'TestPayPalConfigById' test.out

#- 262 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["RGlsLUyX", "PiAkRRCQ", "nk4CekCR"], "publishableKey": "Xpdndicf", "secretKey": "Cl4waQ9B", "webhookSecret": "xn6U1qrt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'qcgn6xGp' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'UpdateStripeConfig' test.out

#- 263 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '9KoPfRMa' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 263 'TestStripeConfigById' test.out

#- 264 UpdateWxPayConfig
# body param: body
echo '{"appId": "M7lmlpF1", "key": "TJpgmTXR", "mchid": "eCA0EsqP", "returnUrl": "cZ5IVkpH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'gUO5wvhy' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'UpdateWxPayConfig' test.out

#- 265 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id '1XPq60tC' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 265 'UpdateWxPayConfigCert' test.out

#- 266 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'WFipSADM' \
    > test.out 2>&1
eval_tap $? 266 'TestWxPayConfigById' test.out

#- 267 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "uPxjBs1L", "flowCompletionUrl": "6I9lbavT", "merchantId": 36, "projectId": 92, "projectSecretKey": "pKuKpjY2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'ofvf35NG' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'UpdateXsollaConfig' test.out

#- 268 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'qa9r3efX' \
    > test.out 2>&1
eval_tap $? 268 'TestXsollaConfigById' test.out

#- 269 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "SMALL", "theme": "DEFAULT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id 'ehliml1p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'UpdateXsollaUIConfig' test.out

#- 270 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '20' \
    --namespace_ '5mw335jo' \
    --offset '69' \
    --region 'PVKb8oTj' \
    > test.out 2>&1
eval_tap $? 270 'QueryPaymentProviderConfig' test.out

#- 271 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "c4TjAnQ8", "region": "py5nGZ20", "sandboxTaxJarApiToken": "w5OlKMfv", "specials": ["CHECKOUT", "WXPAY", "PAYPAL"], "taxJarApiToken": "ZOWJnk6l", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'CreatePaymentProviderConfig' test.out

#- 272 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 272 'GetAggregatePaymentProviders' test.out

#- 273 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'lZtzsSj3' \
    --region 'HDLfRJsW' \
    > test.out 2>&1
eval_tap $? 273 'DebugMatchedPaymentProviderConfig' test.out

#- 274 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 274 'GetSpecialPaymentProviders' test.out

#- 275 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "GkyWFh2g", "region": "KgXc8q6x", "sandboxTaxJarApiToken": "jTFcN0jS", "specials": ["XSOLLA", "XSOLLA", "WXPAY"], "taxJarApiToken": "93Gwj50D", "taxJarEnabled": false, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'ozgVviJQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'UpdatePaymentProviderConfig' test.out

#- 276 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'tXzCE62A' \
    > test.out 2>&1
eval_tap $? 276 'DeletePaymentProviderConfig' test.out

#- 277 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 277 'GetPaymentTaxConfig' test.out

#- 278 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "fIV7YsRZ", "taxJarApiToken": "AaIwB8dC", "taxJarEnabled": false, "taxJarProductCodesMapping": {"MBuVVsnG": "ILu9AYIJ", "GOmi0Hhj": "EiG9w00N", "uVImqxXl": "AN6HFdWv"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'UpdatePaymentTaxConfig' test.out

#- 279 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'rBpJlGxl' \
    --end '5yVp8jEa' \
    --start 'PwWYOnO5' \
    > test.out 2>&1
eval_tap $? 279 'SyncPaymentOrders' test.out

#- 280 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'sQuXl6BO' \
    --storeId 'BeGl5Ozz' \
    > test.out 2>&1
eval_tap $? 280 'PublicGetRootCategories' test.out

#- 281 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'njL3tkEd' \
    --storeId 'O3c8fivI' \
    > test.out 2>&1
eval_tap $? 281 'DownloadCategories' test.out

#- 282 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'PQc473ff' \
    --namespace $AB_NAMESPACE \
    --language 'AKe4FZR2' \
    --storeId 'aCmhaXTZ' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetCategory' test.out

#- 283 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'ic1V9yNj' \
    --namespace $AB_NAMESPACE \
    --language 'C5k2nNFM' \
    --storeId 'qzC0uaXa' \
    > test.out 2>&1
eval_tap $? 283 'PublicGetChildCategories' test.out

#- 284 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'vCsKhMng' \
    --namespace $AB_NAMESPACE \
    --language 'mlGEV1jO' \
    --storeId 'hcG3YKZR' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetDescendantCategories' test.out

#- 285 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 285 'PublicListCurrencies' test.out

#- 286 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'LkIhTbC9' \
    --region 'XpV2XCSh' \
    --storeId 'SwXSBRwX' \
    --appId 'ZhhtlC5l' \
    > test.out 2>&1
eval_tap $? 286 'PublicGetItemByAppId' test.out

#- 287 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --baseAppId 'CnNvyBgz' \
    --categoryPath '4vQTnzjN' \
    --features 'Z5waBcWK' \
    --includeSubCategoryItem 'true' \
    --itemType 'SEASON' \
    --language 'PByLvq0T' \
    --limit '97' \
    --offset '82' \
    --region 'MCDOayyJ' \
    --sortBy '["updatedAt", "updatedAt:asc"]' \
    --storeId 'fFsG6wWg' \
    --tags 'OfykCgAz' \
    > test.out 2>&1
eval_tap $? 287 'PublicQueryItems' test.out

#- 288 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'IomuLTwu' \
    --region 'nVyPKzQk' \
    --storeId '6OZwTpPn' \
    --sku 'kJzf72ce' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetItemBySku' test.out

#- 289 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'xqa0pPUA' \
    --region 'JjDyj6R7' \
    --storeId 'bUp5SW5p' \
    --itemIds 'x5I5cAsK' \
    > test.out 2>&1
eval_tap $? 289 'PublicBulkGetItems' test.out

#- 290 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["KOd8sNd3", "HMEOrrPA", "qaP4unw3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'PublicValidateItemPurchaseCondition' test.out

#- 291 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'EXTENSION' \
    --limit '47' \
    --offset '27' \
    --region 'APkKpiiB' \
    --storeId 'yODsXtr8' \
    --keyword 'Q2021SSB' \
    --language 'orOUQfE3' \
    > test.out 2>&1
eval_tap $? 291 'PublicSearchItems' test.out

#- 292 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'cYzXHDkk' \
    --namespace $AB_NAMESPACE \
    --language 'pz0WO6vT' \
    --region 'DwIAJhgf' \
    --storeId 'fiFKYxXk' \
    > test.out 2>&1
eval_tap $? 292 'PublicGetApp' test.out

#- 293 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'ee8Oz9TH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 293 'PublicGetItemDynamicData' test.out

#- 294 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'm03TAFpP' \
    --namespace $AB_NAMESPACE \
    --language 'iAJ1ngYq' \
    --populateBundle 'false' \
    --region 'Pfnn6MLu' \
    --storeId '2AHeA6M6' \
    > test.out 2>&1
eval_tap $? 294 'PublicGetItem' test.out

#- 295 GetPaymentCustomization
eval_tap 0 295 'GetPaymentCustomization # SKIP deprecated' test.out

#- 296 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "MSseVHQG", "paymentProvider": "WALLET", "returnUrl": "OXWflsIx", "ui": "gpYroLU1", "zipCode": "ZSXoNMVJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'PublicGetPaymentUrl' test.out

#- 297 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'awfywoZh' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetPaymentMethods' test.out

#- 298 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'uvGWIEZb' \
    > test.out 2>&1
eval_tap $? 298 'PublicGetUnpaidPaymentOrder' test.out

#- 299 Pay
# body param: body
echo '{"token": "bf2SymTu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'KJ1gwMVV' \
    --paymentProvider 'PAYPAL' \
    --zipCode 'G7osJMDI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'Pay' test.out

#- 300 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'lgTvMEb2' \
    > test.out 2>&1
eval_tap $? 300 'PublicCheckPaymentOrderPaidStatus' test.out

#- 301 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'CHECKOUT' \
    --region 'rk1l9fRd' \
    > test.out 2>&1
eval_tap $? 301 'GetPaymentPublicConfig' test.out

#- 302 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'fnLyfU89' \
    > test.out 2>&1
eval_tap $? 302 'PublicGetQRCode' test.out

#- 303 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'z3eEF411' \
    --foreinginvoice 'WXxfkx8X' \
    --invoiceId 'B2aYqqoc' \
    --payload 'cEbbeygr' \
    --redirectResult '2KDckDdB' \
    --resultCode 'oVy43U82' \
    --sessionId 'yrJnxcPh' \
    --status 'IU7HUJKS' \
    --token 'y907QidP' \
    --type 'RCKmUdBQ' \
    --userId 'U07z95UY' \
    --orderNo 'FnP7fkzo' \
    --paymentOrderNo '1UT1vy3t' \
    --paymentProvider 'STRIPE' \
    --returnUrl 'sz0elZhf' \
    > test.out 2>&1
eval_tap $? 303 'PublicNormalizePaymentReturnUrl' test.out

#- 304 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'SqsEUI2T' \
    --paymentOrderNo 'nb7yllie' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 304 'GetPaymentTaxValue' test.out

#- 305 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode 'aZO5UB3i' \
    > test.out 2>&1
eval_tap $? 305 'GetRewardByCode' test.out

#- 306 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'Xfe6DNbw' \
    --limit '37' \
    --offset '79' \
    --sortBy '["rewardCode:asc", "namespace:desc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 306 'QueryRewards1' test.out

#- 307 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'L1QDUWeC' \
    > test.out 2>&1
eval_tap $? 307 'GetReward1' test.out

#- 308 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 308 'PublicListStores' test.out

#- 309 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["CJVSzUfL", "timOt5ia", "6HB1Oisa"]' \
    --itemIds '["FdVHdcZy", "S7Euujrs", "Llwww7bf"]' \
    --skus '["Pkgk5gyt", "zsTV5tld", "jjNqgWmA"]' \
    > test.out 2>&1
eval_tap $? 309 'PublicExistsAnyMyActiveEntitlement' test.out

#- 310 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'qqzBVtup' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 311 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'APP' \
    --itemId 'SlR4YWpJ' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 312 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'CODE' \
    --sku 'ID69xRXt' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 313 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["pvhmUkAW", "jKMWAqg1", "6j9OuLD7"]' \
    --itemIds '["ncIXxSoR", "XlvM8ERs", "Z4omh0Fz"]' \
    --skus '["TJTvRGuV", "H5sov47y", "B79JoaG2"]' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetEntitlementOwnershipToken' test.out

#- 314 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'SWcv5Zoi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 314 'PublicGetMyWallet' test.out

#- 315 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "WvsCdFwK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'pmf5iScs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'SyncEpicGameDLC' test.out

#- 316 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 30}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'NCsuXJy7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicSyncPsnDlcInventory' test.out

#- 317 SyncSteamDLC
# body param: body
echo '{"appId": "XJgXooAp", "steamId": "y3HpVSvn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'Il5VjANW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'SyncSteamDLC' test.out

#- 318 SyncXboxDLC
# body param: body
echo '{"xstsToken": "JhgYA8ca"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId '8huS9Uxf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'SyncXboxDLC' test.out

#- 319 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'KZUN6GlY' \
    --appType 'DEMO' \
    --entitlementClazz 'ENTITLEMENT' \
    --entitlementName 'MjauhY6b' \
    --features '["4tbAuEtc", "QZ1eoUBP", "FK67sNIL"]' \
    --itemId '["yrfQn9sx", "nbjyzjzx", "2a2ExaEN"]' \
    --limit '83' \
    --offset '27' \
    > test.out 2>&1
eval_tap $? 319 'PublicQueryUserEntitlements' test.out

#- 320 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'HMR9x9sg' \
    --appId 'M7hKctHq' \
    > test.out 2>&1
eval_tap $? 320 'PublicGetUserAppEntitlementByAppId' test.out

#- 321 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'AW7Px1HG' \
    --limit '48' \
    --offset '17' \
    --appType 'GAME' \
    > test.out 2>&1
eval_tap $? 321 'PublicQueryUserEntitlementsByAppType' test.out

#- 322 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '5g4skbsm' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'MArsb0oS' \
    > test.out 2>&1
eval_tap $? 322 'PublicGetUserEntitlementByItemId' test.out

#- 323 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'AdMAIuDj' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'Zir3yRzW' \
    > test.out 2>&1
eval_tap $? 323 'PublicGetUserEntitlementBySku' test.out

#- 324 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'bBXv02bN' \
    --appIds '["IfsxvEov", "5OIvcK2U", "dmIV2gNW"]' \
    --itemIds '["dyTXPOTz", "eOHMBrl9", "08gPx4b4"]' \
    --skus '["KlV3xaEz", "K7VGDASh", "VHtZSK58"]' \
    > test.out 2>&1
eval_tap $? 324 'PublicExistsAnyUserActiveEntitlement' test.out

#- 325 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'Lj0F7Dg2' \
    --appId 'uJ0n0abj' \
    > test.out 2>&1
eval_tap $? 325 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 326 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'ngRde5RL' \
    --entitlementClazz 'CODE' \
    --itemId 'RirY1UNy' \
    > test.out 2>&1
eval_tap $? 326 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 327 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Ir1ONK9S' \
    --ids '["I1Y4mdG6", "iG4pfkLt", "Xb2A4jDw"]' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 328 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'HtfpC41a' \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'nCkFicUB' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 329 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'shz5Zanc' \
    --namespace $AB_NAMESPACE \
    --userId '7O2wC6vq' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetUserEntitlement' test.out

#- 330 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["QrJJFfeO", "TUAWNtDs", "r3SeEVZC"], "requestId": "yC4jZAel", "useCount": 38}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'ckub0d5I' \
    --namespace $AB_NAMESPACE \
    --userId 'fxkBSRNG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'PublicConsumeUserEntitlement' test.out

#- 331 PublicRedeemCode
# body param: body
echo '{"code": "eI0lP5Lc", "language": "diEN", "region": "it3HtxcT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId '51tMtnta' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicRedeemCode' test.out

#- 332 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "gq_mg", "productId": "6hV03C0z", "receiptData": "y3J6tqCH", "region": "vigUOiB5", "transactionId": "wl1RJSs2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'QS7uW8pJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicFulfillAppleIAPItem' test.out

#- 333 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "CnpyAwX6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'AxaeQdAo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'SyncEpicGamesInventory' test.out

#- 334 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "sF", "orderId": "gR3Dyj2L", "packageName": "7ORdPpXg", "productId": "vwEZIGyv", "purchaseTime": 5, "purchaseToken": "EbKrehWF", "region": "Jhrz9Txa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'bEcSGMEu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'PublicFulfillGoogleIAPItem' test.out

#- 335 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "nd8nlvE7", "price": 0.5910178516680222, "productId": "pgcRhedl", "serviceLabel": 51}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'kYb2xQmF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PublicReconcilePlayStationStore' test.out

#- 336 SyncStadiaEntitlement
# body param: body
echo '{"appId": "hFfZZozZ", "language": "GY_FdJy", "region": "6q2hdTzK", "stadiaPlayerId": "83BuEmeG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'LpTe69Tm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'SyncStadiaEntitlement' test.out

#- 337 SyncSteamInventory
# body param: body
echo '{"appId": "excSRqHE", "currencyCode": "E0nuPR84", "language": "qr", "price": 0.38508279498421016, "productId": "fyY3OAxb", "region": "dpHh5mTc", "steamId": "FaBuWKcf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'J1flWE0D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 337 'SyncSteamInventory' test.out

#- 338 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "gL7Ft8vZ", "language": "yM-wzaW-DL", "region": "ztBFHFOw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '3gS2qUn9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 338 'SyncTwitchDropsEntitlement' test.out

#- 339 SyncXboxInventory
# body param: body
echo '{"currencyCode": "TAqDrkru", "price": 0.8369417818267006, "productId": "vbxeueCm", "xstsToken": "IUrJBh8s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'yyKTBvqB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'SyncXboxInventory' test.out

#- 340 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'OQX1JQiT' \
    --itemId 'P8bPA1pZ' \
    --limit '70' \
    --offset '32' \
    --status 'REFUNDED' \
    > test.out 2>&1
eval_tap $? 340 'PublicQueryUserOrders' test.out

#- 341 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "TBXBv7RY", "discountedPrice": 63, "ext": {"vD5uIs0l": {}, "Icnj4q7v": {}, "5PKhOS0n": {}}, "itemId": "niMR8K6Y", "language": "pyp", "price": 24, "quantity": 24, "region": "DzpYWWA0", "returnUrl": "s4iJQ6cF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'Ri2MrqnM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'PublicCreateUserOrder' test.out

#- 342 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'cYD6IbmU' \
    --userId '0gWerOwK' \
    > test.out 2>&1
eval_tap $? 342 'PublicGetUserOrder' test.out

#- 343 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'boxuzJck' \
    --userId '7spy0Ne2' \
    > test.out 2>&1
eval_tap $? 343 'PublicCancelUserOrder' test.out

#- 344 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'mu5PsCsJ' \
    --userId 'bfoqHdmp' \
    > test.out 2>&1
eval_tap $? 344 'PublicGetUserOrderHistories' test.out

#- 345 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '6DfgkEHh' \
    --userId '5meBVGkZ' \
    > test.out 2>&1
eval_tap $? 345 'PublicDownloadUserOrderReceipt' test.out

#- 346 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'VA47oHKX' \
    > test.out 2>&1
eval_tap $? 346 'PublicGetPaymentAccounts' test.out

#- 347 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'wNv5V3Xa' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'mnx3zpii' \
    > test.out 2>&1
eval_tap $? 347 'PublicDeletePaymentAccount' test.out

#- 348 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '5SiyJvYI' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'W3KpTDtu' \
    --limit '94' \
    --offset '77' \
    --sku 'XnArfnpL' \
    --status 'EXPIRED' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 348 'PublicQueryUserSubscriptions' test.out

#- 349 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "Ersx54hE", "itemId": "lBA9GT6W", "language": "vhBx-EjTS_dd", "region": "FWHbFGZ7", "returnUrl": "lzgbGAUN", "source": "AUVSqReC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'y8YbevCi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'PublicSubscribeSubscription' test.out

#- 350 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '2Ms7TKY4' \
    --itemId 'ZK7Ql89i' \
    > test.out 2>&1
eval_tap $? 350 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 351 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ty5vnuZs' \
    --userId 'Kv3yNd00' \
    > test.out 2>&1
eval_tap $? 351 'PublicGetUserSubscription' test.out

#- 352 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'rKIRIBir' \
    --userId 'A5g6CUYk' \
    > test.out 2>&1
eval_tap $? 352 'PublicChangeSubscriptionBillingAccount' test.out

#- 353 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "9Eg4pbWT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '78jcblX4' \
    --userId 'PBQH3SCp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'PublicCancelSubscription' test.out

#- 354 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '49RasHVc' \
    --userId 'NVW2mzta' \
    --excludeFree 'false' \
    --limit '98' \
    --offset '40' \
    > test.out 2>&1
eval_tap $? 354 'PublicGetUserSubscriptionBillingHistories' test.out

#- 355 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'GEZFhLan' \
    --namespace $AB_NAMESPACE \
    --userId 'oMfxbbbT' \
    > test.out 2>&1
eval_tap $? 355 'PublicGetWallet' test.out

#- 356 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode '5QcRZwK3' \
    --namespace $AB_NAMESPACE \
    --userId '4oojuZ7F' \
    --limit '51' \
    --offset '96' \
    > test.out 2>&1
eval_tap $? 356 'PublicListUserWalletTransactions' test.out

#- 357 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --availableDate 'UR3DKj4F' \
    --baseAppId '2JxF8NmA' \
    --categoryPath 'DMaVLaAv' \
    --features '4ozLNH1f' \
    --includeSubCategoryItem 'false' \
    --itemStatus 'INACTIVE' \
    --itemType 'CODE' \
    --limit '93' \
    --offset '30' \
    --region 'lz1ZGEVy' \
    --sortBy '["displayOrder", "updatedAt:desc"]' \
    --storeId 'PM3PIzGC' \
    --tags 'gzg4jubX' \
    --targetNamespace 's3xcnG9n' \
    > test.out 2>&1
eval_tap $? 357 'QueryItems1' test.out

#- 358 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'rIZ419lE' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 358 'ImportStore1' test.out

#- 359 ExportStore1
# body param: body
echo '{"itemIds": ["3nqtrVb8", "rx298LCT", "jPBnlOub"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'YYRgLWw8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 359 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE