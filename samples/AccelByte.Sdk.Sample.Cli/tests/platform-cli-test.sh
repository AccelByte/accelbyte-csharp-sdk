#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..346"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "84JA6kSV", "appType": "DEMO", "baseAppId": "YinxWI8p", "boothName": "nV0rWfqF", "boundItemIds": ["qplWPDW3", "dbrASYsS", "YTi8ubNd"], "categoryPath": "t3hi8PXJ", "clazz": "xbSY9o90", "createdAt": "1984-04-10T00:00:00Z", "description": "EbDvEzrs", "displayOrder": 50, "entitlementType": "CONSUMABLE", "ext": {"wAaiPmXi": {}, "vs7m7klX": {}, "Sjepdvkb": {}}, "features": ["DGwgpS6a", "6oq1s3ec", "zxPVhaoS"], "images": [{"as": "wxcTvGXE", "caption": "ohwTIzLS", "height": 70, "imageUrl": "5TM7G7dM", "smallImageUrl": "x6hcUsDb", "width": 84}, {"as": "Yu5ymXuo", "caption": "Tw6eoNZj", "height": 28, "imageUrl": "KXsy1F2I", "smallImageUrl": "J9DwdzVI", "width": 64}, {"as": "ZuOAvrwT", "caption": "wLArinEL", "height": 73, "imageUrl": "N9sGL3Y7", "smallImageUrl": "8dE55Grg", "width": 86}], "itemId": "6OKrAsfj", "itemIds": ["fhFnUXmU", "xQXqCj4x", "jZGvJRxY"], "itemQty": {"wgfbI8H0": 69, "HPFS0RSY": 59, "nRPzu1rA": 4}, "itemType": "COINS", "language": "0Ub4gs9I", "listable": true, "localExt": {"j90xK8iU": {}, "PDUxUdwS": {}, "Ft7ojZao": {}}, "longDescription": "HpExCtd0", "maxCount": 38, "maxCountPerUser": 79, "name": "c0LjlmZM", "namespace": "GBH7K9BK", "optionBoxConfig": {"boxItems": [{"count": 80, "itemId": "0MGqnXRL", "itemSku": "SImLqkjX"}, {"count": 35, "itemId": "IU67MoNj", "itemSku": "iqCzyH8H"}, {"count": 60, "itemId": "RMWj43tA", "itemSku": "EgokPey4"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 32, "comparison": "is", "name": "JMnUN2l4", "predicateType": "SeasonTierPredicate", "value": "a1q7GH6b", "values": ["bLT9oxyo", "i41BAsWc", "78E2ZlcC"]}, {"anyOf": 76, "comparison": "is", "name": "ccFXPZIu", "predicateType": "EntitlementPredicate", "value": "FIY25421", "values": ["CfE85G7O", "dDx4RUNK", "iY5g91n2"]}, {"anyOf": 78, "comparison": "excludes", "name": "UbdL3iEg", "predicateType": "SeasonPassPredicate", "value": "w3SCeIdO", "values": ["LdE7U8hO", "IJMDcyw6", "UFMDS2si"]}]}, {"operator": "and", "predicates": [{"anyOf": 75, "comparison": "isGreaterThanOrEqual", "name": "hcmBnqk6", "predicateType": "SeasonTierPredicate", "value": "wJAw66yv", "values": ["ghjdGveR", "8xwAffDp", "imG8L0k6"]}, {"anyOf": 34, "comparison": "isGreaterThanOrEqual", "name": "wz4F2QdP", "predicateType": "SeasonTierPredicate", "value": "EkR6KRtq", "values": ["caJ1ThuH", "6OpytPdx", "FfkPKlyf"]}, {"anyOf": 42, "comparison": "excludes", "name": "bDfthAiK", "predicateType": "SeasonTierPredicate", "value": "Q2k1g34Y", "values": ["F0LGy5IU", "uwfjWSKb", "XfBGcERm"]}]}, {"operator": "and", "predicates": [{"anyOf": 85, "comparison": "includes", "name": "jvuGAn7V", "predicateType": "SeasonTierPredicate", "value": "Djhbf01s", "values": ["LKXYGkt5", "CD6G968h", "3g02Cjc7"]}, {"anyOf": 100, "comparison": "includes", "name": "CrZ8MMKa", "predicateType": "SeasonPassPredicate", "value": "SzcVIhHf", "values": ["O5toQP2v", "8bfa3ve4", "TSIiYkJ7"]}, {"anyOf": 18, "comparison": "isGreaterThanOrEqual", "name": "RBQ6YNQN", "predicateType": "EntitlementPredicate", "value": "on9Yh4yh", "values": ["VgYa8Vbi", "5PG4Lbex", "0OQJ671c"]}]}]}, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 60, "fixedTrialCycles": 9, "graceDays": 21}, "region": "hgV3I4jn", "regionData": [{"currencyCode": "J6s64ojf", "currencyNamespace": "YC2Uns0m", "currencyType": "VIRTUAL", "discountAmount": 3, "discountExpireAt": "1998-01-29T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1992-10-29T00:00:00Z", "discountedPrice": 71, "expireAt": "1975-04-16T00:00:00Z", "price": 27, "purchaseAt": "1971-12-13T00:00:00Z", "trialPrice": 34}, {"currencyCode": "SEx3BjLt", "currencyNamespace": "yhYUXFkx", "currencyType": "VIRTUAL", "discountAmount": 71, "discountExpireAt": "1974-04-25T00:00:00Z", "discountPercentage": 3, "discountPurchaseAt": "1979-02-11T00:00:00Z", "discountedPrice": 93, "expireAt": "1982-09-24T00:00:00Z", "price": 7, "purchaseAt": "1980-01-09T00:00:00Z", "trialPrice": 45}, {"currencyCode": "saTwxI1H", "currencyNamespace": "KpjYqyPq", "currencyType": "REAL", "discountAmount": 78, "discountExpireAt": "1974-04-20T00:00:00Z", "discountPercentage": 1, "discountPurchaseAt": "1971-08-11T00:00:00Z", "discountedPrice": 22, "expireAt": "1987-04-04T00:00:00Z", "price": 68, "purchaseAt": "1984-04-01T00:00:00Z", "trialPrice": 8}], "seasonType": "TIER", "sku": "H1qk5eU5", "stackable": true, "status": "ACTIVE", "tags": ["IxEikwuX", "yJV0Ffrr", "CyLKTL9V"], "targetCurrencyCode": "3LeruKIe", "targetItemId": "rXMXhgBy", "targetNamespace": "F5zZOCIW", "thumbnailUrl": "uXQX5xY5", "title": "h90dIlXD", "updatedAt": "1995-02-17T00:00:00Z", "useCount": 96}, "namespace": "tRmIw0X9", "order": {"currency": {"currencyCode": "RO7opr75", "currencySymbol": "XByHOpPV", "currencyType": "REAL", "decimals": 29, "namespace": "75Yta71L"}, "ext": {"HASqWqXa": {}, "ypPU8diw": {}, "c5WWxUza": {}}, "free": true}, "source": "REDEEM_CODE"}, "script": "NhxsKnz9", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'ttTRNubi' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "dVTv3PQo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'LiCRo4Rl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'e7fMHrVP' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "5D1nUXRh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'lGNO1TTO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '63' \
    --name 'Tof4xJmS' \
    --offset '83' \
    --tag 'HeGGxoOC' \
    > test.out 2>&1
eval_tap $? 8 'QueryCampaigns' test.out

#- 9 CreateCampaign
# body param: body
echo '{"description": "KBSzn4og", "items": [{"extraSubscriptionDays": 89, "itemId": "Famjur3s", "itemName": "cy04aaEQ", "quantity": 29}, {"extraSubscriptionDays": 71, "itemId": "iW18qTu9", "itemName": "VqMv6ma8", "quantity": 24}, {"extraSubscriptionDays": 96, "itemId": "epFoNjPR", "itemName": "m07jyJgX", "quantity": 99}], "maxRedeemCountPerCampaignPerUser": 47, "maxRedeemCountPerCode": 41, "maxRedeemCountPerCodePerUser": 47, "maxSaleCount": 66, "name": "4VYYfFsp", "redeemEnd": "1973-04-09T00:00:00Z", "redeemStart": "1977-01-11T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["9ZA6x5hU", "GPhQE3SN", "EZQZL0jG"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateCampaign' test.out

#- 10 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'YoPMOne0' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 10 'GetCampaign' test.out

#- 11 UpdateCampaign
# body param: body
echo '{"description": "aP7u6Foo", "items": [{"extraSubscriptionDays": 39, "itemId": "5tFaPxxn", "itemName": "AAWv0ilk", "quantity": 57}, {"extraSubscriptionDays": 23, "itemId": "j0ustHbb", "itemName": "qQsXgbdT", "quantity": 48}, {"extraSubscriptionDays": 33, "itemId": "d8lUZmFh", "itemName": "EDeYXxQR", "quantity": 32}], "maxRedeemCountPerCampaignPerUser": 93, "maxRedeemCountPerCode": 2, "maxRedeemCountPerCodePerUser": 56, "maxSaleCount": 34, "name": "JPEnFDO9", "redeemEnd": "1998-05-19T00:00:00Z", "redeemStart": "1974-07-26T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["Mvi8Jpp6", "w9nGSX5e", "E1NlR4sF"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId 'LnO0Up6n' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 11 'UpdateCampaign' test.out

#- 12 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'yarQdTTg' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'GetCampaignDynamic' test.out

#- 13 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'kwI48ZV2' \
    > test.out 2>&1
eval_tap $? 13 'GetRootCategories' test.out

#- 14 CreateCategory
# body param: body
echo '{"categoryPath": "zNlVeEbC", "localizationDisplayNames": {"dEyUNs3X": "rh2fGVuW", "zJ0SCtgN": "L5Yui7OV", "m7g7REsK": "UJ4Hpvbd"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'aJK4aBhm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'CreateCategory' test.out

#- 15 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'f0S0JSwq' \
    > test.out 2>&1
eval_tap $? 15 'ListCategoriesBasic' test.out

#- 16 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath 'AcWQjYuC' \
    --namespace $AB_NAMESPACE \
    --storeId 'iE6cvgUL' \
    > test.out 2>&1
eval_tap $? 16 'GetCategory' test.out

#- 17 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"ivOLuF43": "gMRnWpIl", "kRfoLo9S": "qyV5xy2t", "evVvX6yY": "vnkvo6SG"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'MMWKjQ29' \
    --namespace $AB_NAMESPACE \
    --storeId 'LvFzbNyk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCategory' test.out

#- 18 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'FC8tWLr0' \
    --namespace $AB_NAMESPACE \
    --storeId 'IlJLyJp4' \
    > test.out 2>&1
eval_tap $? 18 'DeleteCategory' test.out

#- 19 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'PDEu1jWC' \
    --namespace $AB_NAMESPACE \
    --storeId '2b4dQfrX' \
    > test.out 2>&1
eval_tap $? 19 'GetChildCategories' test.out

#- 20 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'oKr5geiJ' \
    --namespace $AB_NAMESPACE \
    --storeId 'xGNxkD99' \
    > test.out 2>&1
eval_tap $? 20 'GetDescendantCategories' test.out

#- 21 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'TYNMpqSS' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --batchNo '32' \
    --code 'Zpi02Ux1' \
    --limit '29' \
    --offset '94' \
    > test.out 2>&1
eval_tap $? 21 'QueryCodes' test.out

#- 22 CreateCodes
# body param: body
echo '{"quantity": 18}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'klB8e5Wp' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'CreateCodes' test.out

#- 23 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'LOO7Kdai' \
    --namespace $AB_NAMESPACE \
    --batchNo '29' \
    > test.out 2>&1
eval_tap $? 23 'Download' test.out

#- 24 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'ISw0uDoD' \
    --namespace $AB_NAMESPACE \
    --batchNo '19' \
    > test.out 2>&1
eval_tap $? 24 'BulkDisableCodes' test.out

#- 25 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'cldLLzD1' \
    --namespace $AB_NAMESPACE \
    --batchNo '48' \
    > test.out 2>&1
eval_tap $? 25 'BulkEnableCodes' test.out

#- 26 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId '5jQCRH0f' \
    --namespace $AB_NAMESPACE \
    --code 'fu3JeGsY' \
    --limit '38' \
    --offset '33' \
    --userId 'HoMYZSZH' \
    > test.out 2>&1
eval_tap $? 26 'QueryRedeemHistory' test.out

#- 27 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'd9bAoG2P' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 27 'GetCode' test.out

#- 28 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code '2j841hxn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 28 'DisableCode' test.out

#- 29 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'WOcWjYy5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 29 'EnableCode' test.out

#- 30 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 30 'ListCurrencies' test.out

#- 31 CreateCurrency
# body param: body
echo '{"currencyCode": "aHJirHt8", "currencySymbol": "X7wmbuaV", "currencyType": "VIRTUAL", "decimals": 8, "localizationDescriptions": {"E0Zft8iJ": "jSV226Hy", "Uva6ZSNV": "9s6WaF9x", "uzW6ABs6": "P3NDUBJ9"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'CreateCurrency' test.out

#- 32 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"c793Nef8": "t4nC5Qo8", "XssEMmDz": "ZqKRjiGz", "jRwhBf92": "dQk4R7Zz"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'tq9eRyt0' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'UpdateCurrency' test.out

#- 33 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode 'DicpYqpJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 33 'DeleteCurrency' test.out

#- 34 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode '57l8CK3i' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'GetCurrencyConfig' test.out

#- 35 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'KlOEzmce' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'GetCurrencySummary' test.out

#- 36 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetDLCItemConfig' test.out

#- 37 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "tZd0oYjV", "rewards": [{"currency": {"currencyCode": "uTMJsgfr", "namespace": "kMoCoGYU"}, "item": {"itemId": "fsXuXQP4", "itemSku": "7LuAYSMR", "itemType": "0DTXgc4K"}, "quantity": 64, "type": "ITEM"}, {"currency": {"currencyCode": "6EhJ4WPK", "namespace": "inTNUQtv"}, "item": {"itemId": "FblCkuwu", "itemSku": "ZkvzGfVd", "itemType": "9vPZA7Tl"}, "quantity": 54, "type": "CURRENCY"}, {"currency": {"currencyCode": "lMo5wd7y", "namespace": "Tl55v1rA"}, "item": {"itemId": "w4ySHksX", "itemSku": "WB3DMrLD", "itemType": "9m7Ts9ep"}, "quantity": 40, "type": "CURRENCY"}]}, {"id": "59z9f1wE", "rewards": [{"currency": {"currencyCode": "o0f6zpLv", "namespace": "wp8zsG3t"}, "item": {"itemId": "oalctsvl", "itemSku": "DJXZCCNi", "itemType": "xgVMoTH7"}, "quantity": 53, "type": "ITEM"}, {"currency": {"currencyCode": "11MUUWFL", "namespace": "TB4jgBoQ"}, "item": {"itemId": "X1XevE70", "itemSku": "VzsNHZg0", "itemType": "R1VoIWFm"}, "quantity": 74, "type": "CURRENCY"}, {"currency": {"currencyCode": "3bCpwYsC", "namespace": "E1VWUyYg"}, "item": {"itemId": "xIvIv9I7", "itemSku": "9cBeSyv9", "itemType": "DlgtB9No"}, "quantity": 75, "type": "ITEM"}]}, {"id": "iPqglm5j", "rewards": [{"currency": {"currencyCode": "mfVEIHQq", "namespace": "JLyWCMxa"}, "item": {"itemId": "bWXMAq67", "itemSku": "1iCvXmDp", "itemType": "jXnQz97S"}, "quantity": 65, "type": "ITEM"}, {"currency": {"currencyCode": "duLcoXWP", "namespace": "HE0d3wzV"}, "item": {"itemId": "ZIYzkUDc", "itemSku": "K5NUUZOi", "itemType": "tdpldAyt"}, "quantity": 57, "type": "CURRENCY"}, {"currency": {"currencyCode": "WO6tkpyD", "namespace": "JVR8cOmc"}, "item": {"itemId": "uzM4gf3N", "itemSku": "bXZemhl9", "itemType": "gc3ivGpy"}, "quantity": 56, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateDLCItemConfig' test.out

#- 38 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteDLCItemConfig' test.out

#- 39 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 39 'GetPlatformDLCConfig' test.out

#- 40 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "XBOX", "platformDlcIdMap": {"SwSnPMG8": "dEL6QRHq", "OmF44b1K": "U7jV4JBh", "ncZMLBNG": "aRXmZhec"}}, {"platform": "XBOX", "platformDlcIdMap": {"VtXh5WVu": "Tb6aSRnv", "dUuTtyb9": "lwClEM6C", "Qog80yp0": "HJxlu2Lf"}}, {"platform": "PSN", "platformDlcIdMap": {"8QhSDnNw": "NqH0ZPIi", "0FryXqFA": "fmqSKFvv", "XW4Ce3ON": "3832tnEl"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'UpdatePlatformDLCConfig' test.out

#- 41 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 41 'DeletePlatformDLCConfig' test.out

#- 42 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DEMO' \
    --entitlementClazz 'CODE' \
    --entitlementName 'YPl6nOp5' \
    --itemId '["hzWsiREf", "eKjKyou5", "ACojUEyj"]' \
    --limit '55' \
    --offset '61' \
    --userId 'EzIdf0tY' \
    > test.out 2>&1
eval_tap $? 42 'QueryEntitlements' test.out

#- 43 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'Cuff8l4q' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetEntitlement' test.out

#- 44 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '73' \
    --offset '23' \
    --status 'FAIL' \
    --userId 'kVGaY6TE' \
    > test.out 2>&1
eval_tap $? 44 'QueryFulfillmentHistories' test.out

#- 45 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetAppleIAPConfig' test.out

#- 46 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "sBYJtk2f", "password": "cH90zniG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateAppleIAPConfig' test.out

#- 47 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteAppleIAPConfig' test.out

#- 48 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetEpicGamesIAPConfig' test.out

#- 49 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "rjrG86PF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdateEpicGamesIAPConfig' test.out

#- 50 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeleteEpicGamesIAPConfig' test.out

#- 51 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 51 'GetGoogleIAPConfig' test.out

#- 52 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "drriy1A1", "serviceAccountId": "3gCwMCAf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UpdateGoogleIAPConfig' test.out

#- 53 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 53 'DeleteGoogleIAPConfig' test.out

#- 54 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 54 'UpdateGoogleP12File' test.out

#- 55 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 55 'GetIAPItemConfig' test.out

#- 56 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "IAmhcGKt", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"w7vY9LZp": "97rwSNcr", "aFDxV1e5": "azjK2PFs", "yAYD110J": "lJyiHoEB"}}, {"itemIdentity": "FyZG0m9Q", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"ixSaIsD7": "LAIXI5Pf", "dcNMdPXH": "QljJXYW3", "d8BM5c82": "5emfDUGy"}}, {"itemIdentity": "Ip3k0OJP", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"T59zIIhU": "AMMGH3as", "x6wBjMMY": "ZWLqKABH", "oOCivw10": "X41wj9a6"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 56 'UpdateIAPItemConfig' test.out

#- 57 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'DeleteIAPItemConfig' test.out

#- 58 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'GetPlayStationIAPConfig' test.out

#- 59 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "4B3tD92r"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 59 'UpdatePlaystationIAPConfig' test.out

#- 60 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'DeletePlaystationIAPConfig' test.out

#- 61 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 61 'GetStadiaIAPConfig' test.out

#- 62 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteStadiaIAPConfig' test.out

#- 63 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 63 'UpdateStadiaJsonConfigFile' test.out

#- 64 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetSteamIAPConfig' test.out

#- 65 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "Oj8QU4ap", "publisherAuthenticationKey": "Bwgc4NnA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdateSteamIAPConfig' test.out

#- 66 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeleteSteamIAPConfig' test.out

#- 67 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetTwitchIAPConfig' test.out

#- 68 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "giYJETvn", "clientSecret": "HOubTPwy", "organizationId": "AAlLHCLZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdateTwitchIAPConfig' test.out

#- 69 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeleteTwitchIAPConfig' test.out

#- 70 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetXblIAPConfig' test.out

#- 71 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "RQKvozeM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 71 'UpdateXblIAPConfig' test.out

#- 72 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 72 'DeleteXblAPConfig' test.out

#- 73 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'RA26VArY' \
    > test.out 2>&1
eval_tap $? 73 'UpdateXblBPCertFile' test.out

#- 74 SyncInGameItem
# body param: body
echo '{"categoryPath": "EN5lviZ8", "targetItemId": "m02O5k0Q", "targetNamespace": "DXIrJPIR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId '0KQbzkp3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'SyncInGameItem' test.out

#- 75 CreateItem
# body param: body
echo '{"appId": "crbDMn7l", "appType": "DLC", "baseAppId": "sxYbIC2e", "boothName": "fIB2E99u", "categoryPath": "XB1tTfal", "clazz": "LFDHuXm9", "displayOrder": 31, "entitlementType": "DURABLE", "ext": {"BXHgUtaN": {}, "v1fkjfNd": {}, "zh1WXSH6": {}}, "features": ["5ikguLxi", "DWXadZBl", "G0DhMdDs"], "images": [{"as": "dHa6qrE1", "caption": "tVZoH1En", "height": 86, "imageUrl": "mupFzfGV", "smallImageUrl": "ehjJHMwO", "width": 61}, {"as": "hpRH2HIZ", "caption": "uutpfnXc", "height": 3, "imageUrl": "aZxu1w7r", "smallImageUrl": "DVsSjqP1", "width": 70}, {"as": "ZTXNmowC", "caption": "MrsWmRPu", "height": 62, "imageUrl": "ibBDEEG6", "smallImageUrl": "2Na7EWEw", "width": 7}], "itemIds": ["I2p7MEBI", "GEcyZAId", "EgHo4cau"], "itemQty": {"NCjmy3Ho": 59, "6VaXoN2L": 28, "J7r2Atk4": 82}, "itemType": "CODE", "listable": false, "localizations": {"JOUgWfNf": {"description": "yLKQfCxj", "localExt": {"6o8MspTd": {}, "6Oz8w1rD": {}, "H6zr34JN": {}}, "longDescription": "c0b3ihRG", "title": "JodH7DcF"}, "krQtERHr": {"description": "MOSB3eHQ", "localExt": {"xlZ98qjy": {}, "jQz9hzte": {}, "YMarqOyz": {}}, "longDescription": "VMVkYjMg", "title": "9gDMqCaF"}, "1VVW6y4w": {"description": "rslSe9RZ", "localExt": {"cqDjAIM0": {}, "h79quKm8": {}, "wdAkS2OL": {}}, "longDescription": "PtCWnvga", "title": "88kFxzKs"}}, "maxCount": 0, "maxCountPerUser": 61, "name": "cfLZlaXr", "optionBoxConfig": {"boxItems": [{"count": 20, "itemId": "tbIjbget", "itemSku": "dbk8AFg4"}, {"count": 60, "itemId": "G39GHUJJ", "itemSku": "Z3ic2IPy"}, {"count": 53, "itemId": "rgv1Ulz5", "itemSku": "ZUl3Fi2X"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 23, "fixedTrialCycles": 72, "graceDays": 61}, "regionData": {"iPyRKDw2": [{"currencyCode": "rmqOHeSX", "currencyNamespace": "WVwj2HlK", "currencyType": "VIRTUAL", "discountAmount": 99, "discountExpireAt": "1972-09-10T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1979-11-20T00:00:00Z", "discountedPrice": 45, "expireAt": "1997-05-27T00:00:00Z", "price": 89, "purchaseAt": "1989-12-04T00:00:00Z", "trialPrice": 0}, {"currencyCode": "0LURE9mA", "currencyNamespace": "4cc0MMjm", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1987-08-21T00:00:00Z", "discountPercentage": 53, "discountPurchaseAt": "1998-06-05T00:00:00Z", "discountedPrice": 15, "expireAt": "1981-10-04T00:00:00Z", "price": 88, "purchaseAt": "1986-01-22T00:00:00Z", "trialPrice": 39}, {"currencyCode": "yBAR3szo", "currencyNamespace": "UGfIgkfZ", "currencyType": "VIRTUAL", "discountAmount": 49, "discountExpireAt": "1989-09-19T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1974-11-10T00:00:00Z", "discountedPrice": 96, "expireAt": "1992-12-30T00:00:00Z", "price": 37, "purchaseAt": "1994-01-05T00:00:00Z", "trialPrice": 70}], "iej9TFPJ": [{"currencyCode": "A4k8WwxS", "currencyNamespace": "6WRbBI3R", "currencyType": "VIRTUAL", "discountAmount": 61, "discountExpireAt": "1989-03-26T00:00:00Z", "discountPercentage": 62, "discountPurchaseAt": "1986-07-08T00:00:00Z", "discountedPrice": 98, "expireAt": "1983-07-19T00:00:00Z", "price": 84, "purchaseAt": "1998-09-27T00:00:00Z", "trialPrice": 24}, {"currencyCode": "cSUakrnL", "currencyNamespace": "U5B3E59i", "currencyType": "REAL", "discountAmount": 10, "discountExpireAt": "1977-12-10T00:00:00Z", "discountPercentage": 92, "discountPurchaseAt": "1983-09-20T00:00:00Z", "discountedPrice": 37, "expireAt": "1985-06-29T00:00:00Z", "price": 59, "purchaseAt": "1974-01-04T00:00:00Z", "trialPrice": 30}, {"currencyCode": "2k41omc8", "currencyNamespace": "TRMNlmgP", "currencyType": "REAL", "discountAmount": 55, "discountExpireAt": "1992-06-11T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1974-04-12T00:00:00Z", "discountedPrice": 11, "expireAt": "1997-06-21T00:00:00Z", "price": 23, "purchaseAt": "1997-08-28T00:00:00Z", "trialPrice": 66}], "cuPYdBE9": [{"currencyCode": "8KaMMUom", "currencyNamespace": "FztrPceW", "currencyType": "VIRTUAL", "discountAmount": 81, "discountExpireAt": "1985-10-25T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1992-03-22T00:00:00Z", "discountedPrice": 76, "expireAt": "1982-05-06T00:00:00Z", "price": 98, "purchaseAt": "1981-08-07T00:00:00Z", "trialPrice": 66}, {"currencyCode": "ge3ceG3J", "currencyNamespace": "H4NVzFtD", "currencyType": "VIRTUAL", "discountAmount": 30, "discountExpireAt": "1976-05-27T00:00:00Z", "discountPercentage": 51, "discountPurchaseAt": "1995-12-07T00:00:00Z", "discountedPrice": 8, "expireAt": "1975-07-24T00:00:00Z", "price": 3, "purchaseAt": "1973-05-07T00:00:00Z", "trialPrice": 56}, {"currencyCode": "MxwbZkUm", "currencyNamespace": "tF0mCijL", "currencyType": "REAL", "discountAmount": 85, "discountExpireAt": "1977-07-11T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1985-02-03T00:00:00Z", "discountedPrice": 87, "expireAt": "1977-04-01T00:00:00Z", "price": 21, "purchaseAt": "1973-12-08T00:00:00Z", "trialPrice": 39}]}, "seasonType": "TIER", "sku": "RkRd897k", "stackable": false, "status": "INACTIVE", "tags": ["meYYyW08", "y0EW8YgH", "a7I5grqO"], "targetCurrencyCode": "7CIN0ciO", "targetNamespace": "Pj0vOv1F", "thumbnailUrl": "zNcyvGLN", "useCount": 93}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId '8SsiZkNJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 75 'CreateItem' test.out

#- 76 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'ecufntwe' \
    --appId 'k2kRgGLc' \
    > test.out 2>&1
eval_tap $? 76 'GetItemByAppId' test.out

#- 77 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'DLC' \
    --availableDate 'odw2T2OM' \
    --baseAppId 'oPTsotqj' \
    --categoryPath 'slBl0kEx' \
    --features 'aqpyWMK7' \
    --itemType 'OPTIONBOX' \
    --limit '74' \
    --offset '72' \
    --region 'fNylN5eX' \
    --sortBy '["displayOrder:asc", "createdAt:asc"]' \
    --storeId 'ymCa96fK' \
    --tags 'HY5x5GJ4' \
    --targetNamespace 'Tj4TvdSi' \
    > test.out 2>&1
eval_tap $? 77 'QueryItems' test.out

#- 78 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["Y37zNz4l", "wcUTlzaR", "KJdE6UwQ"]' \
    > test.out 2>&1
eval_tap $? 78 'ListBasicItemsByFeatures' test.out

#- 79 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'B8DqmKZa' \
    --sku '7u62SMOp' \
    > test.out 2>&1
eval_tap $? 79 'GetItemBySku' test.out

#- 80 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'NYU2lEfp' \
    --populateBundle 'true' \
    --region 'uINtpfZ8' \
    --storeId 'fdUYG7kL' \
    --sku 'brrYE2sX' \
    > test.out 2>&1
eval_tap $? 80 'GetLocaleItemBySku' test.out

#- 81 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'POYOFFbt' \
    --sku 'yDEQ6ucs' \
    > test.out 2>&1
eval_tap $? 81 'GetItemIdBySku' test.out

#- 82 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["RBYYbhFR", "8xoBaWke", "GBdZ1fpN"]' \
    --storeId 'cVFHp8p6' \
    > test.out 2>&1
eval_tap $? 82 'GetBulkItemIdBySkus' test.out

#- 83 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'hgmYNP0o' \
    --region 'dI90ZfvM' \
    --storeId 'l3lLH6hd' \
    --itemIds 'BNg8Eg0M' \
    > test.out 2>&1
eval_tap $? 83 'BulkGetLocaleItems' test.out

#- 84 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 84 'GetAvailablePredicateTypes' test.out

#- 85 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["dxTQ0QdJ", "5YurT1w7", "4zUh0FVt"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'JghHY4ol' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'ValidateItemPurchaseCondition' test.out

#- 86 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'SEASON' \
    --limit '63' \
    --offset '81' \
    --storeId 'aYSfAHqd' \
    --keyword '3UReLOf3' \
    --language 'twlt6xuS' \
    > test.out 2>&1
eval_tap $? 86 'SearchItems' test.out

#- 87 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '88' \
    --offset '57' \
    --sortBy '["name:asc", "displayOrder:asc", "name"]' \
    --storeId 'zDlPBcOl' \
    > test.out 2>&1
eval_tap $? 87 'QueryUncategorizedItems' test.out

#- 88 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'lqPbFABl' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'JKC7e8ZS' \
    > test.out 2>&1
eval_tap $? 88 'GetItem' test.out

#- 89 UpdateItem
# body param: body
echo '{"appId": "ijH1wo9I", "appType": "DLC", "baseAppId": "c9nmWzby", "boothName": "O0igAiSr", "categoryPath": "n8mcPIPP", "clazz": "EtRef5t3", "displayOrder": 12, "entitlementType": "DURABLE", "ext": {"7hUEBjcw": {}, "zc9oV37Z": {}, "kAOL3Hoy": {}}, "features": ["KAH3Ndha", "FdWcJxNb", "Lm9lPFfA"], "images": [{"as": "pLe6gSAU", "caption": "WamP5EAt", "height": 98, "imageUrl": "gS1F8jE9", "smallImageUrl": "BOw8NTd2", "width": 84}, {"as": "iYI29s1J", "caption": "GKw0HC9p", "height": 30, "imageUrl": "U2K1AMzf", "smallImageUrl": "Eq02pdCZ", "width": 31}, {"as": "0KysY3ej", "caption": "cJ651y9I", "height": 50, "imageUrl": "umkXksDI", "smallImageUrl": "iHzCJ4zD", "width": 17}], "itemIds": ["xUQxeQy5", "2k2k1FGd", "Z9VoLeox"], "itemQty": {"N2vTi7nB": 0, "41YZi2bA": 82, "jcFtun5W": 16}, "itemType": "INGAMEITEM", "listable": true, "localizations": {"2xnfuZI5": {"description": "0MNosQtN", "localExt": {"l01wymEk": {}, "dZsEDzPZ": {}, "L3v1Apgf": {}}, "longDescription": "CqH2Cfll", "title": "mim00NZJ"}, "S827lPLQ": {"description": "nGUUSHRW", "localExt": {"AQVEHaSX": {}, "CLmOHYOm": {}, "0zty3DMJ": {}}, "longDescription": "aQKvetDD", "title": "A5gOgBV2"}, "urIDC871": {"description": "ZSI6kDrN", "localExt": {"tthJqdYj": {}, "1xnjXxTW": {}, "MEL5jMwB": {}}, "longDescription": "7Ntvf6oS", "title": "TULN559O"}}, "maxCount": 65, "maxCountPerUser": 10, "name": "1eIm8TeH", "optionBoxConfig": {"boxItems": [{"count": 100, "itemId": "QvactgUH", "itemSku": "z5SexjS9"}, {"count": 75, "itemId": "QYkCcWJI", "itemSku": "EgbJo04f"}, {"count": 65, "itemId": "KvQQia6p", "itemSku": "ITDcHfKA"}]}, "purchasable": true, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 66, "fixedTrialCycles": 43, "graceDays": 15}, "regionData": {"TUKXEHFW": [{"currencyCode": "rNuizECH", "currencyNamespace": "2wApkvws", "currencyType": "VIRTUAL", "discountAmount": 82, "discountExpireAt": "1987-04-23T00:00:00Z", "discountPercentage": 45, "discountPurchaseAt": "1984-06-28T00:00:00Z", "discountedPrice": 95, "expireAt": "1983-08-27T00:00:00Z", "price": 75, "purchaseAt": "1982-11-26T00:00:00Z", "trialPrice": 12}, {"currencyCode": "gXwRchWt", "currencyNamespace": "gVtn0F4n", "currencyType": "VIRTUAL", "discountAmount": 6, "discountExpireAt": "1974-08-02T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1994-01-14T00:00:00Z", "discountedPrice": 2, "expireAt": "1976-12-27T00:00:00Z", "price": 85, "purchaseAt": "1974-12-14T00:00:00Z", "trialPrice": 97}, {"currencyCode": "CJJW25Ep", "currencyNamespace": "MOzPPNrp", "currencyType": "VIRTUAL", "discountAmount": 60, "discountExpireAt": "1997-01-17T00:00:00Z", "discountPercentage": 14, "discountPurchaseAt": "1986-12-11T00:00:00Z", "discountedPrice": 10, "expireAt": "1973-03-03T00:00:00Z", "price": 98, "purchaseAt": "1987-01-22T00:00:00Z", "trialPrice": 19}], "YAKcAFD6": [{"currencyCode": "uIWSm5ey", "currencyNamespace": "Ll9xue1t", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1972-07-07T00:00:00Z", "discountPercentage": 4, "discountPurchaseAt": "1984-03-30T00:00:00Z", "discountedPrice": 50, "expireAt": "1978-10-27T00:00:00Z", "price": 10, "purchaseAt": "1996-08-19T00:00:00Z", "trialPrice": 67}, {"currencyCode": "T5lt4bTg", "currencyNamespace": "kiGo3rIC", "currencyType": "REAL", "discountAmount": 56, "discountExpireAt": "1985-12-31T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1999-01-20T00:00:00Z", "discountedPrice": 48, "expireAt": "1978-02-26T00:00:00Z", "price": 70, "purchaseAt": "1995-07-02T00:00:00Z", "trialPrice": 39}, {"currencyCode": "3BdPZa2d", "currencyNamespace": "jIKyJJSE", "currencyType": "VIRTUAL", "discountAmount": 54, "discountExpireAt": "1976-06-21T00:00:00Z", "discountPercentage": 66, "discountPurchaseAt": "1994-09-01T00:00:00Z", "discountedPrice": 99, "expireAt": "1990-01-01T00:00:00Z", "price": 34, "purchaseAt": "1975-03-07T00:00:00Z", "trialPrice": 89}], "ivz5j5QE": [{"currencyCode": "4YnD4Mue", "currencyNamespace": "3werw4DZ", "currencyType": "VIRTUAL", "discountAmount": 67, "discountExpireAt": "1994-08-22T00:00:00Z", "discountPercentage": 75, "discountPurchaseAt": "1972-05-15T00:00:00Z", "discountedPrice": 16, "expireAt": "1998-11-06T00:00:00Z", "price": 67, "purchaseAt": "1994-04-05T00:00:00Z", "trialPrice": 16}, {"currencyCode": "kxqkFEZ3", "currencyNamespace": "inBRiKlW", "currencyType": "REAL", "discountAmount": 37, "discountExpireAt": "1977-12-10T00:00:00Z", "discountPercentage": 57, "discountPurchaseAt": "1986-06-08T00:00:00Z", "discountedPrice": 63, "expireAt": "1974-04-28T00:00:00Z", "price": 26, "purchaseAt": "1998-07-30T00:00:00Z", "trialPrice": 68}, {"currencyCode": "D9FLNuVU", "currencyNamespace": "5HVaDEYy", "currencyType": "REAL", "discountAmount": 44, "discountExpireAt": "1987-10-04T00:00:00Z", "discountPercentage": 22, "discountPurchaseAt": "1990-01-01T00:00:00Z", "discountedPrice": 9, "expireAt": "1999-02-21T00:00:00Z", "price": 13, "purchaseAt": "1978-06-11T00:00:00Z", "trialPrice": 12}]}, "seasonType": "PASS", "sku": "yyiOfBB8", "stackable": true, "status": "INACTIVE", "tags": ["z7Vy9yH0", "rYrD8kRI", "FUG1wY6r"], "targetCurrencyCode": "l1HVQCKQ", "targetNamespace": "7WYNP6FP", "thumbnailUrl": "SgV7fJa3", "useCount": 63}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId 'XwKmSquu' \
    --namespace $AB_NAMESPACE \
    --storeId 'IFN7pgVC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'UpdateItem' test.out

#- 90 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'x5B4lZxF' \
    --namespace $AB_NAMESPACE \
    --storeId 'SePzWw5K' \
    > test.out 2>&1
eval_tap $? 90 'DeleteItem' test.out

#- 91 AcquireItem
# body param: body
echo '{"count": 64, "orderNo": "EyJI3Yx6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'PhGFwSju' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'AcquireItem' test.out

#- 92 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'shwDs9wH' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'uoDQYeU1' \
    > test.out 2>&1
eval_tap $? 92 'GetApp' test.out

#- 93 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "Xg2pBpz9", "previewUrl": "jeHi0HN8", "thumbnailUrl": "tDkRt83s", "type": "image", "url": "vb5i73QY", "videoSource": "vimeo"}, {"alt": "xDWlSYk1", "previewUrl": "HokrBnXx", "thumbnailUrl": "rhIRBNzT", "type": "image", "url": "RbfVcfbK", "videoSource": "vimeo"}, {"alt": "06AVuHbu", "previewUrl": "aG9DiYh6", "thumbnailUrl": "mnsT6soL", "type": "video", "url": "np1H6EXl", "videoSource": "youtube"}], "developer": "eFBtwedT", "forumUrl": "jIUSheoW", "genres": ["RPG", "Racing", "Indie"], "localizations": {"hP8WmRGT": {"announcement": "agd6PDY8", "slogan": "7HAPlp6K"}, "u76KhFIg": {"announcement": "arYwBnk3", "slogan": "aUJSCzGh"}, "kQMB5MUd": {"announcement": "CWdI5ydn", "slogan": "H2KYCoFB"}}, "platformRequirements": {"54U72ALj": [{"additionals": "XnFBnYF0", "directXVersion": "AntocIgK", "diskSpace": "Y273iecE", "graphics": "nskzRctm", "label": "5YFI1RaF", "osVersion": "tdah7YjC", "processor": "luLpE4gO", "ram": "6jpWk5XV", "soundCard": "shn7aFzq"}, {"additionals": "ORYlYANo", "directXVersion": "pAlFXIZL", "diskSpace": "KEIzggjj", "graphics": "gcyIhRUl", "label": "ZEIlAOB6", "osVersion": "xdBCBQ5k", "processor": "JIxOjKvt", "ram": "zyRqO1th", "soundCard": "vy27dpp0"}, {"additionals": "xGiYvfEc", "directXVersion": "yvtdmWVz", "diskSpace": "os763aXL", "graphics": "F0DxOlDQ", "label": "yIXhDeov", "osVersion": "HfWpSyAZ", "processor": "NA6d2VWf", "ram": "sCMPYD7n", "soundCard": "YF3V4rHa"}], "FfVLLkvv": [{"additionals": "jXhhAn7r", "directXVersion": "fbFzveqI", "diskSpace": "skDRS50z", "graphics": "QP8dzKAZ", "label": "8XcOQwwl", "osVersion": "0jPYSgzx", "processor": "nWx3bn6a", "ram": "4Feg6yvK", "soundCard": "oiBDTQda"}, {"additionals": "V1X5DHee", "directXVersion": "D9xaQiPz", "diskSpace": "IhRZeRd5", "graphics": "MQFkijWU", "label": "EVMSEvZa", "osVersion": "3Po8RRHr", "processor": "3gWCdHGW", "ram": "pr6mlxi9", "soundCard": "wMi43MbD"}, {"additionals": "Sd9KKwnN", "directXVersion": "hPsZOfjF", "diskSpace": "sjk37ibj", "graphics": "XnURNkoh", "label": "xYgP9kn7", "osVersion": "fvdxDdM1", "processor": "bC2kZvok", "ram": "eB5wqCZV", "soundCard": "x5yuCDmi"}], "8nsc6E53": [{"additionals": "oTdLPF9z", "directXVersion": "4bmAYTcx", "diskSpace": "twnPqx4J", "graphics": "Urzna7b9", "label": "8poiON0a", "osVersion": "RDEzVRiG", "processor": "QwAOqKjy", "ram": "O7BY8B9k", "soundCard": "TTFklRbb"}, {"additionals": "Ov2HGplC", "directXVersion": "Ex98UXs8", "diskSpace": "SQTte8cU", "graphics": "kOfskEyc", "label": "BrP09zwf", "osVersion": "DdCW4SLt", "processor": "09SgdX10", "ram": "LFRx1fyf", "soundCard": "MLyeuEO7"}, {"additionals": "aOFhOISp", "directXVersion": "qsAb6bpD", "diskSpace": "YFqHEfas", "graphics": "EXUlMTP0", "label": "fF8Yw7H3", "osVersion": "BkbbGJqc", "processor": "sx9eQ3E0", "ram": "04oXGxqu", "soundCard": "1ROhY8DK"}]}, "platforms": ["Windows", "MacOS", "Windows"], "players": ["Multi", "Multi", "Coop"], "primaryGenre": "Casual", "publisher": "tmGLb4Zb", "releaseDate": "1976-08-23T00:00:00Z", "websiteUrl": "Dlk5dTlF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'wK7BYS7B' \
    --namespace $AB_NAMESPACE \
    --storeId 'fttEchbz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'UpdateApp' test.out

#- 94 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'teWuwYIr' \
    --namespace $AB_NAMESPACE \
    --storeId 'KTXuzk0D' \
    > test.out 2>&1
eval_tap $? 94 'DisableItem' test.out

#- 95 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'ELOxEzxH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetItemDynamicData' test.out

#- 96 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'VfYjWeN5' \
    --namespace $AB_NAMESPACE \
    --storeId 'sCjNTXA9' \
    > test.out 2>&1
eval_tap $? 96 'EnableItem' test.out

#- 97 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature 'L0vO7eGp' \
    --itemId 'xLK494Mc' \
    --namespace $AB_NAMESPACE \
    --storeId 'MhEj2eoW' \
    > test.out 2>&1
eval_tap $? 97 'FeatureItem' test.out

#- 98 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature '7qQl6MTC' \
    --itemId 'TFa2cR0A' \
    --namespace $AB_NAMESPACE \
    --storeId 'e99t5vGJ' \
    > test.out 2>&1
eval_tap $? 98 'DefeatureItem' test.out

#- 99 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'gIKZBtxQ' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'IjQ1v7wL' \
    --populateBundle 'false' \
    --region '5mi9ileu' \
    --storeId 'MXZJzVXz' \
    > test.out 2>&1
eval_tap $? 99 'GetLocaleItem' test.out

#- 100 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 23, "comparison": "includes", "name": "48KYBgc8", "predicateType": "SeasonPassPredicate", "value": "UECcqweI", "values": ["JZ7YAwXu", "kQtjzEEZ", "sp2pfEX4"]}, {"anyOf": 59, "comparison": "isGreaterThanOrEqual", "name": "D7j28y6l", "predicateType": "SeasonPassPredicate", "value": "cTyzPT1s", "values": ["joKJ6YgN", "7dy5lhoC", "nXwaOaBe"]}, {"anyOf": 82, "comparison": "isGreaterThanOrEqual", "name": "SdV2q7dy", "predicateType": "SeasonPassPredicate", "value": "rX8suZfl", "values": ["oaFjLTXx", "kuusaGo9", "bh6rfeEK"]}]}, {"operator": "and", "predicates": [{"anyOf": 77, "comparison": "isLessThan", "name": "aEcIVo8D", "predicateType": "SeasonPassPredicate", "value": "ZIBjgc9X", "values": ["or5xIkhd", "wicdhh0a", "CsnF1PZE"]}, {"anyOf": 21, "comparison": "isNot", "name": "cP2Fe9G6", "predicateType": "SeasonTierPredicate", "value": "tSGHRoQ9", "values": ["Trlj4Dbm", "zsdhajAS", "LtWWNuA1"]}, {"anyOf": 35, "comparison": "isGreaterThanOrEqual", "name": "zG26RaOp", "predicateType": "SeasonTierPredicate", "value": "XncuFgbd", "values": ["95cMoyGJ", "tmoc6u1M", "m8q9coTm"]}]}, {"operator": "or", "predicates": [{"anyOf": 79, "comparison": "excludes", "name": "fMYwZJBg", "predicateType": "EntitlementPredicate", "value": "Zf6PiqL2", "values": ["Ae57ytHb", "Ksjiitxh", "vEY8dLUY"]}, {"anyOf": 35, "comparison": "excludes", "name": "0LTT7CIm", "predicateType": "EntitlementPredicate", "value": "NCcR2fw8", "values": ["eljpVGAX", "EKgQdhN1", "ypxcElUF"]}, {"anyOf": 39, "comparison": "excludes", "name": "IIRmNr8s", "predicateType": "EntitlementPredicate", "value": "XpZrHCSC", "values": ["TwGopVfs", "1s6qIxsi", "kYwcvfEy"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'ZZuDceyi' \
    --namespace $AB_NAMESPACE \
    --storeId 'NzwLBOjz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateItemPurchaseCondition' test.out

#- 101 ReturnItem
# body param: body
echo '{"orderNo": "7NYQ9thr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'jNLCM3dE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 101 'ReturnItem' test.out

#- 102 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '46' \
    --name 'BaUkWh8V' \
    --offset '75' \
    --tag 'OEgrT9PG' \
    > test.out 2>&1
eval_tap $? 102 'QueryKeyGroups' test.out

#- 103 CreateKeyGroup
# body param: body
echo '{"description": "ez19nlhx", "name": "IQZKULT1", "status": "INACTIVE", "tags": ["iY7fYfq5", "ClMDywEv", "HVcqNRFf"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 103 'CreateKeyGroup' test.out

#- 104 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'iBG2PGMv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 104 'GetKeyGroup' test.out

#- 105 UpdateKeyGroup
# body param: body
echo '{"description": "TEJeEney", "name": "GNhWiQ0E", "status": "ACTIVE", "tags": ["8vy5rJfQ", "lPUwotXf", "yIJ8RTx8"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'L0rRJI5U' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 105 'UpdateKeyGroup' test.out

#- 106 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'uZQtwURp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'GetKeyGroupDynamic' test.out

#- 107 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId 'vZIuo74W' \
    --namespace $AB_NAMESPACE \
    --limit '96' \
    --offset '7' \
    --status 'ACQUIRED' \
    > test.out 2>&1
eval_tap $? 107 'ListKeys' test.out

#- 108 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'RrsA8qQi' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 108 'UploadKeys' test.out

#- 109 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime '5zOTP2uT' \
    --limit '64' \
    --offset '19' \
    --orderNos '["0sLg2dwd", "8eyDsHOB", "8JEv3S5o"]' \
    --sortBy 'PXxdPgdJ' \
    --startTime 't1o8PY78' \
    --status 'REFUND_FAILED' \
    --withTotal 'true' \
    > test.out 2>&1
eval_tap $? 109 'QueryOrders' test.out

#- 110 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 110 'GetOrderStatistics' test.out

#- 111 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '11oVCxYk' \
    > test.out 2>&1
eval_tap $? 111 'GetOrder' test.out

#- 112 RefundOrder
# body param: body
echo '{"description": "N7VOpJjZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'DjZHDxZG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'RefundOrder' test.out

#- 113 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 113 'GetPaymentCallbackConfig' test.out

#- 114 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": false, "notifyUrl": "pmzqC36T", "privateKey": "e0KqCdst"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'UpdatePaymentCallbackConfig' test.out

#- 115 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'CBkyjTzs' \
    --externalId 'ndjeGqhx' \
    --limit '55' \
    --notificationSource 'WALLET' \
    --notificationType 'DEEgOIeA' \
    --offset '25' \
    --paymentOrderNo 'c5iWWUyZ' \
    --startDate 'KfQuhOyT' \
    --status 'ERROR' \
    > test.out 2>&1
eval_tap $? 115 'QueryPaymentNotifications' test.out

#- 116 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'EXTERNAL' \
    --extTxId 'ba0y7aJz' \
    --limit '38' \
    --offset '7' \
    --status 'CHARGE_FAILED' \
    > test.out 2>&1
eval_tap $? 116 'QueryPaymentOrders' test.out

#- 117 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "tE6M49yl", "currencyNamespace": "VwWNNzJS", "customParameters": {"JndPSR5W": {}, "JeqCuq3r": {}, "icEsoWi9": {}}, "description": "vDbtChP4", "extOrderNo": "gHJ9Et2X", "extUserId": "5yLdfhvM", "itemType": "APP", "language": "QceV-Zgrj_992", "metadata": {"GjrGgGb7": "lepWoTdO", "2jFmglE8": "A2ew48Se", "5Th05eDF": "j1qaP7Qu"}, "notifyUrl": "zWijcS9Q", "omitNotification": false, "platform": "3Ryubfpd", "price": 15, "recurringPaymentOrderNo": "WTaiq4Su", "region": "2hXsWjSr", "returnUrl": "SuDRpWum", "sandbox": false, "sku": "KUghUwEP", "subscriptionId": "zCZJziaW", "targetNamespace": "ute469nS", "targetUserId": "HI9dowVu", "title": "yEyi85A1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'CreatePaymentOrderByDedicated' test.out

#- 118 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'yc36N49f' \
    > test.out 2>&1
eval_tap $? 118 'ListExtOrderNoByExtTxId' test.out

#- 119 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'Q73NiAeh' \
    > test.out 2>&1
eval_tap $? 119 'GetPaymentOrder' test.out

#- 120 ChargePaymentOrder
# body param: body
echo '{"extTxId": "vv1NMGaZ", "paymentMethod": "uTFFGUXc", "paymentProvider": "CHECKOUT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'HzxDNcf3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 120 'ChargePaymentOrder' test.out

#- 121 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "lLm3Dw9Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '8pDYecJz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'RefundPaymentOrderByDedicated' test.out

#- 122 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 61, "currencyCode": "nwIYMhpT", "notifyType": "REFUND", "paymentProvider": "WALLET", "salesTax": 70, "vat": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'YYarIn4O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'SimulatePaymentOrderNotification' test.out

#- 123 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'FiHyz8th' \
    > test.out 2>&1
eval_tap $? 123 'GetPaymentOrderChargeStatus' test.out

#- 124 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    > test.out 2>&1
eval_tap $? 124 'GetPlatformWalletConfig' test.out

#- 125 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["GooglePlay", "Stadia", "Nintendo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Other' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'UpdatePlatformWalletConfig' test.out

#- 126 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 126 'ResetPlatformWalletConfig' test.out

#- 127 CreateReward
# body param: body
echo '{"description": "axwGeQls", "eventTopic": "IlIfrOhn", "maxAwarded": 99, "maxAwardedPerUser": 94, "namespaceExpression": "9R1OpiaH", "rewardCode": "IXmq9J60", "rewardConditions": [{"condition": "dVoUWaC5", "conditionName": "AXU7l4Ad", "eventName": "zuhI7b8w", "rewardItems": [{"duration": 11, "itemId": "gXHrUOg6", "quantity": 2}, {"duration": 30, "itemId": "zlxirys1", "quantity": 18}, {"duration": 6, "itemId": "eXn3mxOF", "quantity": 34}]}, {"condition": "EzjiYMKd", "conditionName": "pIpVPzN3", "eventName": "HsYyleLy", "rewardItems": [{"duration": 0, "itemId": "Ysq7pwdP", "quantity": 43}, {"duration": 55, "itemId": "alTEo3Jr", "quantity": 10}, {"duration": 96, "itemId": "DDuNC1Ul", "quantity": 10}]}, {"condition": "2MNZaSTU", "conditionName": "7TvnYs1r", "eventName": "hHZ6TWSw", "rewardItems": [{"duration": 67, "itemId": "twM59Nin", "quantity": 99}, {"duration": 3, "itemId": "CH1dm2Mx", "quantity": 92}, {"duration": 18, "itemId": "c67xegP5", "quantity": 71}]}], "userIdExpression": "iqq7EmIL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 127 'CreateReward' test.out

#- 128 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'Lx5Kwrza' \
    --limit '36' \
    --offset '37' \
    --sortBy '["namespace:desc", "rewardCode:asc"]' \
    > test.out 2>&1
eval_tap $? 128 'QueryRewards' test.out

#- 129 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'ExportRewards' test.out

#- 130 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'true' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 130 'ImportRewards' test.out

#- 131 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'Bz0qIhYH' \
    > test.out 2>&1
eval_tap $? 131 'GetReward' test.out

#- 132 UpdateReward
# body param: body
echo '{"description": "ZlbEj2ux", "eventTopic": "PozjhfZh", "maxAwarded": 29, "maxAwardedPerUser": 85, "namespaceExpression": "2IPrvdxc", "rewardCode": "MDiGRP7g", "rewardConditions": [{"condition": "OxULpYC6", "conditionName": "ud9Q0Gsm", "eventName": "5HG9egWp", "rewardItems": [{"duration": 43, "itemId": "ugz9Kmj0", "quantity": 84}, {"duration": 8, "itemId": "5AVW5b7e", "quantity": 70}, {"duration": 60, "itemId": "voqJaq4D", "quantity": 98}]}, {"condition": "nGVFIk9f", "conditionName": "y1MH85M4", "eventName": "0NLHxo2q", "rewardItems": [{"duration": 15, "itemId": "l7RHrRUw", "quantity": 58}, {"duration": 84, "itemId": "xNfuTkvf", "quantity": 77}, {"duration": 28, "itemId": "R2SEn2ma", "quantity": 60}]}, {"condition": "GE3XhPjW", "conditionName": "vAn0gd5l", "eventName": "R3FWHjbu", "rewardItems": [{"duration": 94, "itemId": "uz8AQ160", "quantity": 98}, {"duration": 42, "itemId": "Gtk53Chb", "quantity": 86}, {"duration": 43, "itemId": "JIT1djve", "quantity": 44}]}], "userIdExpression": "YQMVZQYj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'KQwt08tl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'UpdateReward' test.out

#- 133 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'ZMRdxb5B' \
    > test.out 2>&1
eval_tap $? 133 'DeleteReward' test.out

#- 134 CheckEventCondition
# body param: body
echo '{"payload": {"15qHtSbN": {}, "ALWooMdR": {}, "o1Qy6aud": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'HdqiUzvw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'CheckEventCondition' test.out

#- 135 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 135 'ListStores' test.out

#- 136 CreateStore
# body param: body
echo '{"defaultLanguage": "jNzilPJZ", "defaultRegion": "7jC0NKSF", "description": "i4EQCuDl", "supportedLanguages": ["RcVtmszK", "TSJsNYGZ", "Oe5BdmL2"], "supportedRegions": ["P71HHC6q", "68gCAcsB", "VuvnTP4A"], "title": "KLzDUy0x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'CreateStore' test.out

#- 137 ImportStore
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ifMrGDsY' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 137 'ImportStore' test.out

#- 138 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 138 'GetPublishedStore' test.out

#- 139 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 139 'DeletePublishedStore' test.out

#- 140 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 140 'GetPublishedStoreBackup' test.out

#- 141 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 141 'RollbackPublishedStore' test.out

#- 142 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'Zz0shSMs' \
    > test.out 2>&1
eval_tap $? 142 'GetStore' test.out

#- 143 UpdateStore
# body param: body
echo '{"defaultLanguage": "sPHv5IfV", "defaultRegion": "5jGzxng8", "description": "eJ80ERQi", "supportedLanguages": ["jj2RFkXT", "AFZcBH6U", "rZJUQvgi"], "supportedRegions": ["i0HzX9gS", "FMznfEph", "PdoAN55a"], "title": "QbleDExj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId '4o3jcbWz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateStore' test.out

#- 144 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ia493EoU' \
    > test.out 2>&1
eval_tap $? 144 'DeleteStore' test.out

#- 145 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'rIaL8rNu' \
    --action 'DELETE' \
    --itemSku 'bqPx62PE' \
    --itemType 'BUNDLE' \
    --limit '29' \
    --offset '20' \
    --selected 'false' \
    --sortBy '["createdAt:asc", "updatedAt:asc"]' \
    --status 'UNPUBLISHED' \
    --type 'ITEM' \
    --updatedAtEnd 'rZJmb7HX' \
    --updatedAtStart 'INlazfOi' \
    > test.out 2>&1
eval_tap $? 145 'QueryChanges' test.out

#- 146 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'JOHbcNo8' \
    > test.out 2>&1
eval_tap $? 146 'PublishAll' test.out

#- 147 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId 'FSfg3Zew' \
    > test.out 2>&1
eval_tap $? 147 'PublishSelected' test.out

#- 148 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'pRWBYRkV' \
    > test.out 2>&1
eval_tap $? 148 'SelectAllRecords' test.out

#- 149 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'e6UXfaLy' \
    --action 'UPDATE' \
    --itemSku '69rojVua' \
    --itemType 'APP' \
    --type 'CATEGORY' \
    --updatedAtEnd 'x35DwRPc' \
    --updatedAtStart 'BzhFgTNs' \
    > test.out 2>&1
eval_tap $? 149 'GetStatistic' test.out

#- 150 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'hYN29QAc' \
    > test.out 2>&1
eval_tap $? 150 'UnselectAllRecords' test.out

#- 151 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'Qy7bvXcw' \
    --namespace $AB_NAMESPACE \
    --storeId 'jgiIBiJC' \
    > test.out 2>&1
eval_tap $? 151 'SelectRecord' test.out

#- 152 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId 'ekJxvqRY' \
    --namespace $AB_NAMESPACE \
    --storeId 'm7WIDcLc' \
    > test.out 2>&1
eval_tap $? 152 'UnselectRecord' test.out

#- 153 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'FNaQ0vWx' \
    --targetStoreId 'jwM3JrDw' \
    > test.out 2>&1
eval_tap $? 153 'CloneStore' test.out

#- 154 ExportStore
$CLI_EXE \
    --sn platform \
    --op ExportStore \
    --namespace $AB_NAMESPACE \
    --storeId 'ANR4ajgo' \
    > test.out 2>&1
eval_tap $? 154 'ExportStore' test.out

#- 155 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGED' \
    --itemId 'w1Gt4w2A' \
    --limit '82' \
    --offset '51' \
    --sku 'pTcsYean' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    --userId 'j5nO8gnt' \
    > test.out 2>&1
eval_tap $? 155 'QuerySubscriptions' test.out

#- 156 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '23C4sYOv' \
    > test.out 2>&1
eval_tap $? 156 'RecurringChargeSubscription' test.out

#- 157 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'Ar3hTb86' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 157 'GetTicketDynamic' test.out

#- 158 DecreaseTicketSale
# body param: body
echo '{"orderNo": "AKNPHIm5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'LQMAtaQk' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'DecreaseTicketSale' test.out

#- 159 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'aUvEnVMT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'GetTicketBoothID' test.out

#- 160 IncreaseTicketSale
# body param: body
echo '{"count": 70, "orderNo": "KZPiVS2I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName '0Dmy154Y' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'IncreaseTicketSale' test.out

#- 161 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "vjsab4Jb", "value": 34}, {"id": "WE8ERnv5", "value": 77}, {"id": "bVEOWC2W", "value": 15}], "steamUserId": "P79o7CcL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'm0zLUCDM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'UnlockSteamUserAchievement' test.out

#- 162 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'ouSOZKFJ' \
    --xboxUserId '9nlA9BHg' \
    > test.out 2>&1
eval_tap $? 162 'GetXblUserAchievements' test.out

#- 163 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "1v8rPx5i", "percentComplete": 48}, {"id": "lE6Rrcch", "percentComplete": 55}, {"id": "HazyMD6x", "percentComplete": 54}], "serviceConfigId": "ipTkVZcZ", "titleId": "lxCRK1R3", "xboxUserId": "qEhd1Vm7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'OQpTFouV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'UpdateXblUserAchievement' test.out

#- 164 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'eaSXqrZ4' \
    > test.out 2>&1
eval_tap $? 164 'AnonymizeCampaign' test.out

#- 165 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'nM4rSeQU' \
    > test.out 2>&1
eval_tap $? 165 'AnonymizeEntitlement' test.out

#- 166 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'rnfsIRd8' \
    > test.out 2>&1
eval_tap $? 166 'AnonymizeFulfillment' test.out

#- 167 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'qeY0oKub' \
    > test.out 2>&1
eval_tap $? 167 'AnonymizeIntegration' test.out

#- 168 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId 'NUdtGYAn' \
    > test.out 2>&1
eval_tap $? 168 'AnonymizeOrder' test.out

#- 169 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'KPkHLd1D' \
    > test.out 2>&1
eval_tap $? 169 'AnonymizePayment' test.out

#- 170 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'F5efTgoQ' \
    > test.out 2>&1
eval_tap $? 170 'AnonymizeSubscription' test.out

#- 171 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'v38immRT' \
    > test.out 2>&1
eval_tap $? 171 'AnonymizeWallet' test.out

#- 172 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'DrP57esi' \
    --activeOnly 'false' \
    --appType 'GAME' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'RxLHAKb6' \
    --itemId '["ytULtBYO", "m57imNaI", "GzBnDUtI"]' \
    --limit '20' \
    --offset '90' \
    > test.out 2>&1
eval_tap $? 172 'QueryUserEntitlements' test.out

#- 173 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1978-10-17T00:00:00Z", "grantedCode": "HZ1M9tlV", "itemId": "dPZ0n2Tq", "itemNamespace": "soMRkOT5", "language": "fssx", "quantity": 13, "region": "xaqW8Ddr", "source": "REFERRAL_BONUS", "startDate": "1992-10-26T00:00:00Z", "storeId": "zjyFAEU2"}, {"endDate": "1982-11-21T00:00:00Z", "grantedCode": "CGxfsbod", "itemId": "DPftT5bA", "itemNamespace": "i1ysqsR7", "language": "vCK_Seuz_446", "quantity": 12, "region": "BaJdRZdJ", "source": "ACHIEVEMENT", "startDate": "1971-12-16T00:00:00Z", "storeId": "mXqpS776"}, {"endDate": "1975-12-08T00:00:00Z", "grantedCode": "uJwgDM0r", "itemId": "r3qdd4aS", "itemNamespace": "NR08mbsA", "language": "Zvtu_xN", "quantity": 63, "region": "LxjwFvSK", "source": "REDEEM_CODE", "startDate": "1988-02-19T00:00:00Z", "storeId": "tNUwFpI9"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '7bwAtU1f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'GrantUserEntitlement' test.out

#- 174 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'aGdpZdEG' \
    --activeOnly 'false' \
    --appId '8DJp9WoW' \
    > test.out 2>&1
eval_tap $? 174 'GetUserAppEntitlementByAppId' test.out

#- 175 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'VIPKF6KA' \
    --activeOnly 'true' \
    --limit '10' \
    --offset '27' \
    --appType 'DLC' \
    > test.out 2>&1
eval_tap $? 175 'QueryUserEntitlementsByAppType' test.out

#- 176 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'NUDV7kaw' \
    --activeOnly 'false' \
    --entitlementClazz 'MEDIA' \
    --itemId 'DFC1GSCy' \
    > test.out 2>&1
eval_tap $? 176 'GetUserEntitlementByItemId' test.out

#- 177 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId '5mvBxeof' \
    --activeOnly 'true' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'o21G3WO4' \
    > test.out 2>&1
eval_tap $? 177 'GetUserEntitlementBySku' test.out

#- 178 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'hcYo2Cwy' \
    --appIds '["UvQ8ZvAq", "KJPqI3Cx", "8gwx5ynf"]' \
    --itemIds '["YuaMyiNF", "v7m746AO", "wAyPcg4x"]' \
    --skus '["YBz8XP43", "OfU2ihLp", "SLItvA2o"]' \
    > test.out 2>&1
eval_tap $? 178 'ExistsAnyUserActiveEntitlement' test.out

#- 179 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'xJsw2vel' \
    --itemIds '["Azg5TFNd", "qbXvVddI", "WOuNGZ6L"]' \
    > test.out 2>&1
eval_tap $? 179 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 180 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'LhJXbbV5' \
    --appId 'mijADcYg' \
    > test.out 2>&1
eval_tap $? 180 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 181 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'A0AK3cmw' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'VY51QxvA' \
    > test.out 2>&1
eval_tap $? 181 'GetUserEntitlementOwnershipByItemId' test.out

#- 182 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '155pnCDD' \
    --ids '["EeDofbBc", "eAttVRcr", "1NW9Y3Vk"]' \
    > test.out 2>&1
eval_tap $? 182 'GetUserEntitlementOwnershipByItemIds' test.out

#- 183 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'rIf4gKcv' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'oaKm3dv4' \
    > test.out 2>&1
eval_tap $? 183 'GetUserEntitlementOwnershipBySku' test.out

#- 184 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '9WU2iTFo' \
    --entitlementIds 'MtgI3P3N' \
    > test.out 2>&1
eval_tap $? 184 'RevokeUserEntitlements' test.out

#- 185 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'coAnc8lt' \
    --namespace $AB_NAMESPACE \
    --userId 'ClyYnIf5' \
    > test.out 2>&1
eval_tap $? 185 'GetUserEntitlement' test.out

#- 186 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1993-06-04T00:00:00Z", "nullFieldList": ["f3N3Pjjs", "sDzkyOka", "StTlQrKZ"], "startDate": "1983-05-05T00:00:00Z", "status": "ACTIVE", "useCount": 57}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'B33fPsJ9' \
    --namespace $AB_NAMESPACE \
    --userId 'v5fSjLiv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'UpdateUserEntitlement' test.out

#- 187 ConsumeUserEntitlement
# body param: body
echo '{"options": ["PEYG0HOh", "SxTjzni5", "RqDJRHdY"], "useCount": 98}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'Wh1Aag4Q' \
    --namespace $AB_NAMESPACE \
    --userId 'C9sKHP0J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'ConsumeUserEntitlement' test.out

#- 188 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'LIXMW1m1' \
    --namespace $AB_NAMESPACE \
    --userId 'ko12tJ9R' \
    > test.out 2>&1
eval_tap $? 188 'DisableUserEntitlement' test.out

#- 189 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'VQFWhnFm' \
    --namespace $AB_NAMESPACE \
    --userId 'o0ONpAPd' \
    > test.out 2>&1
eval_tap $? 189 'EnableUserEntitlement' test.out

#- 190 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'iWXXLeaA' \
    --namespace $AB_NAMESPACE \
    --userId 'gyF9aNqv' \
    > test.out 2>&1
eval_tap $? 190 'GetUserEntitlementHistories' test.out

#- 191 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId 's5NYnFU6' \
    --namespace $AB_NAMESPACE \
    --userId 'ERQlwKIy' \
    > test.out 2>&1
eval_tap $? 191 'RevokeUserEntitlement' test.out

#- 192 FulfillItem
# body param: body
echo '{"duration": 92, "endDate": "1981-07-28T00:00:00Z", "itemId": "An92fV5A", "itemSku": "hkLArU96", "language": "UbmXo21M", "order": {"currency": {"currencyCode": "6AtxUdVM", "currencySymbol": "NRqR7lJj", "currencyType": "VIRTUAL", "decimals": 34, "namespace": "yA4Eu2BT"}, "ext": {"jnpOr592": {}, "8XfvCTNh": {}, "LHfCLtbE": {}}, "free": true}, "orderNo": "TLZPfYgz", "origin": "Nintendo", "quantity": 69, "region": "ogDQEvJI", "source": "REWARD", "startDate": "1995-05-24T00:00:00Z", "storeId": "TxYEQhii"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'X6NOKLPL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'FulfillItem' test.out

#- 193 RedeemCode
# body param: body
echo '{"code": "dg1NmPzl", "language": "fAW_HOcg", "region": "uD1WGm0R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'Jr0sFsfq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'RedeemCode' test.out

#- 194 FulfillRewards
# body param: body
echo '{"origin": "Twitch", "rewards": [{"currency": {"currencyCode": "zkA51kny", "namespace": "yIt3QBRm"}, "item": {"itemId": "1gpEuOjo", "itemSku": "OEz7hOsW", "itemType": "1CogSBgp"}, "quantity": 72, "type": "ITEM"}, {"currency": {"currencyCode": "oqrwP8Hd", "namespace": "BttbX1MU"}, "item": {"itemId": "qs70HQH4", "itemSku": "Hc21ZB4O", "itemType": "KQTFLU03"}, "quantity": 68, "type": "ITEM"}, {"currency": {"currencyCode": "SXMoA3oA", "namespace": "QUki8fXa"}, "item": {"itemId": "nuByD8Qg", "itemSku": "GQ4ovvc1", "itemType": "E7UNp7Ur"}, "quantity": 66, "type": "CURRENCY"}], "source": "PURCHASE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'z1qfYK1s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'FulfillRewards' test.out

#- 195 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'ZHeJawKG' \
    --endTime 'NO0I8ORr' \
    --limit '17' \
    --offset '82' \
    --productId 'pBMg5k6m' \
    --startTime 'IFNiwcg0' \
    --status 'VERIFIED' \
    --type 'STADIA' \
    > test.out 2>&1
eval_tap $? 195 'QueryUserIAPOrders' test.out

#- 196 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId '2a8QDPQK' \
    > test.out 2>&1
eval_tap $? 196 'QueryAllUserIAPOrders' test.out

#- 197 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_SKU", "language": "mC_819", "productId": "lsMbKZgN", "region": "e52xoMd8", "type": "TWITCH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'GxjUrSar' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'MockFulfillIAPItem' test.out

#- 198 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'O7Dhwu8e' \
    --itemId '9VF4lknf' \
    --limit '37' \
    --offset '60' \
    --status 'INIT' \
    > test.out 2>&1
eval_tap $? 198 'QueryUserOrders' test.out

#- 199 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "DRaRay6j", "currencyNamespace": "XN4IDrdk", "discountedPrice": 76, "ext": {"hoY7mPPU": {}, "V3mwDqPg": {}, "58MBHq6Y": {}}, "itemId": "idmow8dL", "language": "65c9Kjn6", "options": {"skipPriceValidation": false}, "platform": "Xbox", "price": 59, "quantity": 24, "region": "msx2iHRt", "returnUrl": "gxfXTrvb", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '8V9DhEnv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'AdminCreateUserOrder' test.out

#- 200 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'BvAhuZEn' \
    --itemId 'dIYg9gwA' \
    > test.out 2>&1
eval_tap $? 200 'CountOfPurchasedItem' test.out

#- 201 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'Y9PRMz08' \
    --userId 'wK5hvrij' \
    > test.out 2>&1
eval_tap $? 201 'GetUserOrder' test.out

#- 202 UpdateUserOrderStatus
# body param: body
echo '{"status": "FULFILLED", "statusReason": "Bf3tpjqI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'fqV43qTh' \
    --userId 're23k1kW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 202 'UpdateUserOrderStatus' test.out

#- 203 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'JV3oWJx2' \
    --userId 'YlY5Wb5b' \
    > test.out 2>&1
eval_tap $? 203 'FulfillUserOrder' test.out

#- 204 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo '6A3JBBde' \
    --userId 'bFwbDjIp' \
    > test.out 2>&1
eval_tap $? 204 'GetUserOrderGrant' test.out

#- 205 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'Cx57Hrji' \
    --userId 'FNYtVLqo' \
    > test.out 2>&1
eval_tap $? 205 'GetUserOrderHistories' test.out

#- 206 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "7xsZVL4w"}, "authorisedTime": "1981-02-01T00:00:00Z", "chargebackReversedTime": "1983-10-14T00:00:00Z", "chargebackTime": "1983-10-23T00:00:00Z", "chargedTime": "1982-08-09T00:00:00Z", "createdTime": "1977-08-03T00:00:00Z", "currency": {"currencyCode": "m5yShjO3", "currencySymbol": "qJGRf0FT", "currencyType": "REAL", "decimals": 29, "namespace": "t0UTdhoG"}, "customParameters": {"W9xvHFGN": {}, "HOsAg5kK": {}, "2anVJpb6": {}}, "extOrderNo": "4fGSQavj", "extTxId": "SD5dBN1w", "extUserId": "RQb4EcpS", "issuedAt": "1993-11-08T00:00:00Z", "metadata": {"Pgz4xbbW": "03dDeWFh", "UqYG2wsg": "ZB0cKRvp", "HANXt2cS": "Y8oUrbeG"}, "namespace": "xv5fdjjR", "nonceStr": "1RtAvGuC", "paymentMethod": "b0OKItYo", "paymentMethodFee": 44, "paymentOrderNo": "Y7tgoVcA", "paymentProvider": "ALIPAY", "paymentProviderFee": 27, "paymentStationUrl": "oIeK3HLT", "price": 87, "refundedTime": "1989-10-20T00:00:00Z", "salesTax": 99, "sandbox": false, "sku": "bMOYGRCx", "status": "REFUNDED", "statusReason": "fytXCjVs", "subscriptionId": "DfRUXSwV", "subtotalPrice": 67, "targetNamespace": "OfEUQvtg", "targetUserId": "jk6NJFHz", "tax": 37, "totalPrice": 2, "totalTax": 97, "txEndTime": "1998-08-20T00:00:00Z", "type": "iuTa0piV", "userId": "NEH54aB3", "vat": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'mHgMewCF' \
    --userId 'w59oV6FO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'ProcessUserOrderNotification' test.out

#- 207 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'DZsa43xI' \
    --userId 'geOvY8AW' \
    > test.out 2>&1
eval_tap $? 207 'DownloadUserOrderReceipt' test.out

#- 208 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "CNghFb6X", "currencyNamespace": "UmJNyfs1", "customParameters": {"iNXoyeQ2": {}, "A2wfr3P3": {}, "qyhnL72e": {}}, "description": "zjIzrahZ", "extOrderNo": "JspJD5sD", "extUserId": "jZlUC89P", "itemType": "BUNDLE", "language": "YoZ_hSsF_867", "metadata": {"9fkO4MXr": "OdI87idw", "m2JTi4Bc": "qjPYy0TR", "JNA10efj": "byF4tC9V"}, "notifyUrl": "UCuattkr", "omitNotification": false, "platform": "7X8qDfoQ", "price": 76, "recurringPaymentOrderNo": "Hpnac1it", "region": "j74O0oU9", "returnUrl": "OPZerGKZ", "sandbox": true, "sku": "tyHNG6To", "subscriptionId": "5S4goeQN", "title": "T61Dg1UB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'hRrOocxh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'CreateUserPaymentOrder' test.out

#- 209 RefundUserPaymentOrder
# body param: body
echo '{"description": "vkek8xKP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qSg0AKnR' \
    --userId 'wmDCK7Hj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 209 'RefundUserPaymentOrder' test.out

#- 210 ApplyUserRedemption
# body param: body
echo '{"code": "XopUzzz3", "orderNo": "9ALR5hDT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'yH9uCAii' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 210 'ApplyUserRedemption' test.out

#- 211 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '8Jfx6OSM' \
    --chargeStatus 'SETUP' \
    --itemId 'ZvpARwBa' \
    --limit '6' \
    --offset '48' \
    --sku 'tNVYhNaH' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 211 'QueryUserSubscriptions' test.out

#- 212 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'OjEKGsJY' \
    --excludeSystem 'true' \
    --limit '2' \
    --offset '16' \
    --subscriptionId 'WcL4YaTK' \
    > test.out 2>&1
eval_tap $? 212 'GetUserSubscriptionActivities' test.out

#- 213 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 77, "itemId": "fQYPUv5V", "language": "xu2f9smA", "reason": "rfo6l7If", "region": "hMbIfewi", "source": "dgF2lUcX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'yw4JW9oL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'PlatformSubscribeSubscription' test.out

#- 214 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'kbGfPoHK' \
    --itemId '90da7QZI' \
    > test.out 2>&1
eval_tap $? 214 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 215 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'kd6UL0Dc' \
    --userId 'XufQhOvL' \
    > test.out 2>&1
eval_tap $? 215 'GetUserSubscription' test.out

#- 216 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'CRI9hpCM' \
    --userId '80tiR504' \
    > test.out 2>&1
eval_tap $? 216 'DeleteUserSubscription' test.out

#- 217 CancelSubscription
# body param: body
echo '{"immediate": true, "reason": "GggTLH6K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'a9qsLEGh' \
    --userId '6veylKX4' \
    --force 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'CancelSubscription' test.out

#- 218 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 62, "reason": "bPOuCuSu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'mO48zPml' \
    --userId 'MPULfFyJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 218 'GrantDaysToSubscription' test.out

#- 219 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'exyQ1kXe' \
    --userId 'KhMJpBZy' \
    --excludeFree 'true' \
    --limit '24' \
    --offset '16' \
    > test.out 2>&1
eval_tap $? 219 'GetUserSubscriptionBillingHistories' test.out

#- 220 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "3Jaxx4pv"}, "authorisedTime": "1976-01-17T00:00:00Z", "chargebackReversedTime": "1987-10-12T00:00:00Z", "chargebackTime": "1976-08-11T00:00:00Z", "chargedTime": "1997-02-27T00:00:00Z", "createdTime": "1986-11-24T00:00:00Z", "currency": {"currencyCode": "upZ0WYJK", "currencySymbol": "cHt7qG0t", "currencyType": "VIRTUAL", "decimals": 33, "namespace": "A2oIuONw"}, "customParameters": {"hQ0SX6Uh": {}, "Ks2ThM2s": {}, "p5WQS6Z0": {}}, "extOrderNo": "x2qQBx2W", "extTxId": "Vc81AvHW", "extUserId": "0NUfv7ix", "issuedAt": "1974-05-21T00:00:00Z", "metadata": {"OoWSzDv2": "94FaGAg2", "JkbhhMU7": "MPU2fAmt", "jt2AJw5Q": "ai4FGVeK"}, "namespace": "b5kFD9Kd", "nonceStr": "7CcTlt6V", "paymentMethod": "aM16yKap", "paymentMethodFee": 94, "paymentOrderNo": "MZh3i7wA", "paymentProvider": "STRIPE", "paymentProviderFee": 30, "paymentStationUrl": "GB3JFNNc", "price": 42, "refundedTime": "1977-01-25T00:00:00Z", "salesTax": 58, "sandbox": false, "sku": "hJYk95JB", "status": "REFUNDED", "statusReason": "ELo3165C", "subscriptionId": "2VoR7VuO", "subtotalPrice": 35, "targetNamespace": "PjLllj5t", "targetUserId": "IfMkApxm", "tax": 26, "totalPrice": 21, "totalTax": 21, "txEndTime": "1978-10-26T00:00:00Z", "type": "dlqDnWPr", "userId": "Opuu5umS", "vat": 26}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'XKNycZbR' \
    --userId 'SRgZ86gF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'ProcessUserSubscriptionNotification' test.out

#- 221 AcquireUserTicket
# body param: body
echo '{"count": 47, "orderNo": "ywMWqaN1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName 'LYCyOXWx' \
    --namespace $AB_NAMESPACE \
    --userId 'UpDU6aZU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'AcquireUserTicket' test.out

#- 222 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'aAw5JTRo' \
    > test.out 2>&1
eval_tap $? 222 'QueryUserCurrencyWallets' test.out

#- 223 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'Tan6SofX' \
    --namespace $AB_NAMESPACE \
    --userId '2OZEVuCu' \
    --limit '87' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 223 'ListUserCurrencyTransactions' test.out

#- 224 CheckWallet
eval_tap 0 224 'CheckWallet # SKIP deprecated' test.out

#- 225 CreditUserWallet
# body param: body
echo '{"amount": 33, "expireAt": "1985-04-01T00:00:00Z", "origin": "Nintendo", "reason": "xoa7IPUj", "source": "REWARD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'w83lBypY' \
    --namespace $AB_NAMESPACE \
    --userId 'Ze9m6nNQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'CreditUserWallet' test.out

#- 226 PayWithUserWallet
# body param: body
echo '{"amount": 34, "walletPlatform": "IOS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'wxi9q24I' \
    --namespace $AB_NAMESPACE \
    --userId 'LNvlY0Mv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'PayWithUserWallet' test.out

#- 227 GetUserWallet
eval_tap 0 227 'GetUserWallet # SKIP deprecated' test.out

#- 228 DebitUserWallet
eval_tap 0 228 'DebitUserWallet # SKIP deprecated' test.out

#- 229 DisableUserWallet
eval_tap 0 229 'DisableUserWallet # SKIP deprecated' test.out

#- 230 EnableUserWallet
eval_tap 0 230 'EnableUserWallet # SKIP deprecated' test.out

#- 231 ListUserWalletTransactions
eval_tap 0 231 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 232 QueryWallets
eval_tap 0 232 'QueryWallets # SKIP deprecated' test.out

#- 233 GetWallet
eval_tap 0 233 'GetWallet # SKIP deprecated' test.out

#- 234 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'H3FbEArm' \
    --end 'oAP3Lrng' \
    --start 'Y9UXwlLG' \
    > test.out 2>&1
eval_tap $? 234 'SyncOrders' test.out

#- 235 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["cFlSUFa2", "X6siElfs", "mIOgPFfX"], "apiKey": "vhk0iFk9", "authoriseAsCapture": true, "blockedPaymentMethods": ["nr0sDl7h", "FAimKBD4", "8HA9bqzi"], "clientKey": "esWACDJR", "dropInSettings": "cB572XHl", "liveEndpointUrlPrefix": "DcCeoI6M", "merchantAccount": "hiiRHl87", "notificationHmacKey": "t9RZTNr5", "notificationPassword": "Qmh2HTGv", "notificationUsername": "JZMZQwik", "returnUrl": "IFHzuufx", "settings": "Bu8pd4Zz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'TestAdyenConfig' test.out

#- 236 TestAliPayConfig
# body param: body
echo '{"appId": "4zq01mCG", "privateKey": "aJSxvu0M", "publicKey": "GMYrwyDd", "returnUrl": "r8v9jBYb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'TestAliPayConfig' test.out

#- 237 TestCheckoutConfig
# body param: body
echo '{"publicKey": "EWY7aWnW", "secretKey": "qqlQJscx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'TestCheckoutConfig' test.out

#- 238 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ 'J1O562z3' \
    --region '3In3QxH1' \
    > test.out 2>&1
eval_tap $? 238 'DebugMatchedPaymentMerchantConfig' test.out

#- 239 TestPayPalConfig
# body param: body
echo '{"clientID": "OsZWXtWD", "clientSecret": "dbBpKSl6", "returnUrl": "YGZ9hYzs", "webHookId": "w6xPYNGn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'TestPayPalConfig' test.out

#- 240 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["4IhkdYZE", "VTzmckDH", "qJCOhmsy"], "publishableKey": "NgukYO7U", "secretKey": "srX4l8Oo", "webhookSecret": "MiMx4huY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'TestStripeConfig' test.out

#- 241 TestWxPayConfig
# body param: body
echo '{"appId": "F1Kwx0Bj", "key": "dzwosGXD", "mchid": "m8awkLOV", "returnUrl": "cmJAdjLm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'TestWxPayConfig' test.out

#- 242 TestXsollaConfig
# body param: body
echo '{"apiKey": "7JbyZhVJ", "flowCompletionUrl": "lT2319Sv", "merchantId": 29, "projectId": 61, "projectSecretKey": "xUDrSdCQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'TestXsollaConfig' test.out

#- 243 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id '3FZ3kg9n' \
    > test.out 2>&1
eval_tap $? 243 'GetPaymentMerchantConfig' test.out

#- 244 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["PfcnEuXQ", "WscunIAK", "PXEKEF85"], "apiKey": "PaZ7c46D", "authoriseAsCapture": false, "blockedPaymentMethods": ["cVaYKsGc", "h7rYPJuS", "Mf8tfuEO"], "clientKey": "3Er54nTu", "dropInSettings": "njYPxisv", "liveEndpointUrlPrefix": "E3PShnCr", "merchantAccount": "Ub4Uc2jW", "notificationHmacKey": "7DZUzh3E", "notificationPassword": "qwpi3jgD", "notificationUsername": "CdlikMI4", "returnUrl": "H1aDBzGS", "settings": "zaDNVhuw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'lQWAzNcK' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'UpdateAdyenConfig' test.out

#- 245 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'gc6iGuzk' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 245 'TestAdyenConfigById' test.out

#- 246 UpdateAliPayConfig
# body param: body
echo '{"appId": "8ckziRuu", "privateKey": "cSJMndTA", "publicKey": "y0EDPzMy", "returnUrl": "XdRT0Vy1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'gS5NuC1z' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'UpdateAliPayConfig' test.out

#- 247 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'XiY2Hu41' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 247 'TestAliPayConfigById' test.out

#- 248 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "wZB7ZZ9V", "secretKey": "c5CGiLZc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'c04Yj3pD' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'UpdateCheckoutConfig' test.out

#- 249 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'HkDPbcgp' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 249 'TestCheckoutConfigById' test.out

#- 250 UpdatePayPalConfig
# body param: body
echo '{"clientID": "xoaLmeys", "clientSecret": "EgnZ9Dar", "returnUrl": "6Q4GqGLE", "webHookId": "SMuRkHBW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'DbF09TkY' \
    --sandbox 'false' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'UpdatePayPalConfig' test.out

#- 251 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'euDM0q9A' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 251 'TestPayPalConfigById' test.out

#- 252 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["6W1BkVqM", "qCGagC0W", "adaVAiUL"], "publishableKey": "g5OOcRUF", "secretKey": "Zzv8vcxV", "webhookSecret": "7fXxDUkM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'G1k6r2Ul' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'UpdateStripeConfig' test.out

#- 253 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id 'x4qaLtUl' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 253 'TestStripeConfigById' test.out

#- 254 UpdateWxPayConfig
# body param: body
echo '{"appId": "13BrR6u3", "key": "6XYVwqyu", "mchid": "JFUBcQ1O", "returnUrl": "XoyIhvuv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'k5lfn7LL' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'UpdateWxPayConfig' test.out

#- 255 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'F4HVcupJ' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 255 'UpdateWxPayConfigCert' test.out

#- 256 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'K2y8Dm95' \
    > test.out 2>&1
eval_tap $? 256 'TestWxPayConfigById' test.out

#- 257 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "imvrFEgG", "flowCompletionUrl": "AAEk0drC", "merchantId": 29, "projectId": 64, "projectSecretKey": "nqTEpzqo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'Drj8fBSy' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateXsollaConfig' test.out

#- 258 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'H0jNxrvq' \
    > test.out 2>&1
eval_tap $? 258 'TestXsollaConfigById' test.out

#- 259 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "SMALL", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id '4oKfqCpY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'UpdateXsollaUIConfig' test.out

#- 260 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '20' \
    --namespace_ 'TFW0wRpO' \
    --offset '58' \
    --region 'eiciX67q' \
    > test.out 2>&1
eval_tap $? 260 'QueryPaymentProviderConfig' test.out

#- 261 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "yC2uzv0e", "region": "1kCEyJqz", "sandboxTaxJarApiToken": "vsywHQVU", "specials": ["WALLET", "ALIPAY", "PAYPAL"], "taxJarApiToken": "ZHf0ztAp", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'CreatePaymentProviderConfig' test.out

#- 262 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 262 'GetAggregatePaymentProviders' test.out

#- 263 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'xrNsz4DO' \
    --region 'feyLSSCU' \
    > test.out 2>&1
eval_tap $? 263 'DebugMatchedPaymentProviderConfig' test.out

#- 264 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 264 'GetSpecialPaymentProviders' test.out

#- 265 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "ADYEN", "namespace": "EWjUb8tn", "region": "YGt9bbTZ", "sandboxTaxJarApiToken": "BpsuGIHw", "specials": ["WXPAY", "STRIPE", "XSOLLA"], "taxJarApiToken": "Emcbld2P", "taxJarEnabled": false, "useGlobalTaxJarApiToken": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'DV5NsxGD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'UpdatePaymentProviderConfig' test.out

#- 266 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'rlplryM4' \
    > test.out 2>&1
eval_tap $? 266 'DeletePaymentProviderConfig' test.out

#- 267 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 267 'GetPaymentTaxConfig' test.out

#- 268 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "aBrvRGpe", "taxJarApiToken": "RPaB6QnP", "taxJarEnabled": false, "taxJarProductCodesMapping": {"lGc1KUQW": "VuqKWtbk", "mcLjJCk4": "zMzB8LuZ", "19enU9hW": "SnVrZ3Jo"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'UpdatePaymentTaxConfig' test.out

#- 269 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'kdOZHjba' \
    --end 'Dq3Pbu4w' \
    --start 'Do6LRCPj' \
    > test.out 2>&1
eval_tap $? 269 'SyncPaymentOrders' test.out

#- 270 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language '5TDpIYkB' \
    --storeId 'ywuLAqLW' \
    > test.out 2>&1
eval_tap $? 270 'PublicGetRootCategories' test.out

#- 271 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'lUTzeV0p' \
    --storeId 'ENQ6eXIn' \
    > test.out 2>&1
eval_tap $? 271 'DownloadCategories' test.out

#- 272 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'CjWFrlph' \
    --namespace $AB_NAMESPACE \
    --language 'dOziJFPk' \
    --storeId 'AlpxAIpo' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetCategory' test.out

#- 273 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath 'sOegAjdV' \
    --namespace $AB_NAMESPACE \
    --language 'cX6AhUIw' \
    --storeId 'dQlImvGz' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetChildCategories' test.out

#- 274 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'ElJ79121' \
    --namespace $AB_NAMESPACE \
    --language '2YaGBkDv' \
    --storeId 'hspd3UH7' \
    > test.out 2>&1
eval_tap $? 274 'PublicGetDescendantCategories' test.out

#- 275 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 275 'PublicListCurrencies' test.out

#- 276 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language 'V9llR7KP' \
    --region 'BOwdQOIS' \
    --storeId 'KDa5vB7g' \
    --appId 'QHPPfBQN' \
    > test.out 2>&1
eval_tap $? 276 'PublicGetItemByAppId' test.out

#- 277 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'SOFTWARE' \
    --baseAppId 'XS0zDClM' \
    --categoryPath 'ZAopa05v' \
    --features 'prFzBsmX' \
    --itemType 'MEDIA' \
    --language 'V9pO4aJN' \
    --limit '1' \
    --offset '100' \
    --region '70zt8aaD' \
    --sortBy '["updatedAt:desc", "name:asc", "name"]' \
    --storeId 'f14aY2Ao' \
    --tags 'lhr4bsMZ' \
    > test.out 2>&1
eval_tap $? 277 'PublicQueryItems' test.out

#- 278 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'Gk8rhRpv' \
    --region 'FnH3nAeM' \
    --storeId 'R6eVNGpE' \
    --sku 'E5xCvelA' \
    > test.out 2>&1
eval_tap $? 278 'PublicGetItemBySku' test.out

#- 279 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language '9TAPahJz' \
    --region 'T7xbgENt' \
    --storeId '08dLNYz0' \
    --itemIds '0O77kQ2b' \
    > test.out 2>&1
eval_tap $? 279 'PublicBulkGetItems' test.out

#- 280 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["1hxWmsuQ", "P0wwKhmf", "GzVQ7wX5"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'PublicValidateItemPurchaseCondition' test.out

#- 281 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'COINS' \
    --limit '100' \
    --offset '62' \
    --region 'xQgOPUaE' \
    --storeId 'vhkX8ub7' \
    --keyword 'bHpR7S2z' \
    --language 'N5kOtOUY' \
    > test.out 2>&1
eval_tap $? 281 'PublicSearchItems' test.out

#- 282 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'EGu3yded' \
    --namespace $AB_NAMESPACE \
    --language 'g7cdwivf' \
    --region 'N44T1nmD' \
    --storeId 'CT6gWvKB' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetApp' test.out

#- 283 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId '6qNDhIM8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 283 'PublicGetItemDynamicData' test.out

#- 284 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId '5z30I5cH' \
    --namespace $AB_NAMESPACE \
    --language 'EXCG74SD' \
    --populateBundle 'false' \
    --region 'nHwR8RnR' \
    --storeId 'GeCPNjTi' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetItem' test.out

#- 285 GetPaymentCustomization
eval_tap 0 285 'GetPaymentCustomization # SKIP deprecated' test.out

#- 286 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "qcb7cF76", "paymentProvider": "WALLET", "returnUrl": "yyMGMeRZ", "ui": "b8O48QFi", "zipCode": "IFkf3fjo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicGetPaymentUrl' test.out

#- 287 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'i5I6BTrw' \
    > test.out 2>&1
eval_tap $? 287 'PublicGetPaymentMethods' test.out

#- 288 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'dJxZSKla' \
    > test.out 2>&1
eval_tap $? 288 'PublicGetUnpaidPaymentOrder' test.out

#- 289 Pay
# body param: body
echo '{"token": "6gDQblos"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'JaQL3gCW' \
    --paymentProvider 'CHECKOUT' \
    --zipCode 'LbKNEJgz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'Pay' test.out

#- 290 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'tarBjVDp' \
    > test.out 2>&1
eval_tap $? 290 'PublicCheckPaymentOrderPaidStatus' test.out

#- 291 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'false' \
    --paymentProvider 'WXPAY' \
    --region 'Rlj2J7ZS' \
    > test.out 2>&1
eval_tap $? 291 'GetPaymentPublicConfig' test.out

#- 292 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'EQxnWNqc' \
    > test.out 2>&1
eval_tap $? 292 'PublicGetQRCode' test.out

#- 293 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'DASwZjY0' \
    --foreinginvoice 'wMGrdhWy' \
    --invoiceId 'o7WqEAiz' \
    --payload 'cUQdjm5h' \
    --redirectResult 'uoRR1c4P' \
    --resultCode 't4h6LNhM' \
    --sessionId 'ZQM32wve' \
    --status '1ZKPeSS3' \
    --token 'CZYPA6Ck' \
    --type 'keF8fPQb' \
    --userId 'EJlLKogF' \
    --orderNo 'lzmpC63k' \
    --paymentOrderNo 'WLR59aoi' \
    --paymentProvider 'CHECKOUT' \
    --returnUrl 'W0qe2U3K' \
    > test.out 2>&1
eval_tap $? 293 'PublicNormalizePaymentReturnUrl' test.out

#- 294 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'uVvktbXQ' \
    --paymentOrderNo 'RPZo8rFs' \
    --paymentProvider 'ADYEN' \
    > test.out 2>&1
eval_tap $? 294 'GetPaymentTaxValue' test.out

#- 295 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode '45ujBBuO' \
    > test.out 2>&1
eval_tap $? 295 'GetRewardByCode' test.out

#- 296 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'jPIi8ayt' \
    --limit '26' \
    --offset '27' \
    --sortBy '["namespace:asc", "namespace"]' \
    > test.out 2>&1
eval_tap $? 296 'QueryRewards1' test.out

#- 297 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'EwFS2uUD' \
    > test.out 2>&1
eval_tap $? 297 'GetReward1' test.out

#- 298 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 298 'PublicListStores' test.out

#- 299 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["cEdbxt8f", "KkIaL3y3", "RFGXjyid"]' \
    --itemIds '["WPos3S2Y", "qspCU9Qq", "8uyygInF"]' \
    --skus '["QbBuwOet", "dU84a7jN", "o7oE74Wt"]' \
    > test.out 2>&1
eval_tap $? 299 'PublicExistsAnyMyActiveEntitlement' test.out

#- 300 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'EQL9eLDc' \
    > test.out 2>&1
eval_tap $? 300 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 301 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'xgiuHtEl' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 302 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'SUBSCRIPTION' \
    --sku 'hNnkhmVR' \
    > test.out 2>&1
eval_tap $? 302 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 303 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["4cptfdnv", "6EPJ9BbE", "tl1p7eQA"]' \
    --itemIds '["DKAd0yIy", "79mQu22a", "s6d9Hqjs"]' \
    --skus '["TDq5iTj9", "Awo0caib", "nYObFQ4Q"]' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetEntitlementOwnershipToken' test.out

#- 304 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'dXbKozIm' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 304 'PublicGetMyWallet' test.out

#- 305 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "Khke6ddU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'w0pxdrzP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'SyncEpicGameDLC' test.out

#- 306 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 73}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'FOo2638U' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'PublicSyncPsnDlcInventory' test.out

#- 307 SyncSteamDLC
# body param: body
echo '{"appId": "273TYu3E", "steamId": "SB2kDBGt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'qvMsSFxF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'SyncSteamDLC' test.out

#- 308 SyncXboxDLC
# body param: body
echo '{"xstsToken": "wofNKkuy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId '5WLXh6NB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'SyncXboxDLC' test.out

#- 309 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'TXDje4aa' \
    --appType 'DEMO' \
    --entitlementClazz 'SUBSCRIPTION' \
    --entitlementName 'IpJDt3c8' \
    --itemId '["PQDEMlbr", "mxQbmVdp", "PZgnvQQY"]' \
    --limit '18' \
    --offset '80' \
    > test.out 2>&1
eval_tap $? 309 'PublicQueryUserEntitlements' test.out

#- 310 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'QJqjNWYF' \
    --appId '6l7M5G88' \
    > test.out 2>&1
eval_tap $? 310 'PublicGetUserAppEntitlementByAppId' test.out

#- 311 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'UUcuvLjX' \
    --limit '92' \
    --offset '58' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 311 'PublicQueryUserEntitlementsByAppType' test.out

#- 312 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'LBlNCLmY' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'qaVQDLXH' \
    > test.out 2>&1
eval_tap $? 312 'PublicGetUserEntitlementByItemId' test.out

#- 313 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'EtxdPllt' \
    --entitlementClazz 'MEDIA' \
    --sku 'jge9Zsbi' \
    > test.out 2>&1
eval_tap $? 313 'PublicGetUserEntitlementBySku' test.out

#- 314 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'qPZ5Xdym' \
    --appIds '["HivPYleM", "TXbfDhnK", "MNalkVFL"]' \
    --itemIds '["FqKJFDEW", "9Q06snnC", "gArhxLjb"]' \
    --skus '["MTtKnngg", "2aDArlHv", "PaWnougf"]' \
    > test.out 2>&1
eval_tap $? 314 'PublicExistsAnyUserActiveEntitlement' test.out

#- 315 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'T3UpC0kU' \
    --appId 'PrSWFtBU' \
    > test.out 2>&1
eval_tap $? 315 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 316 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId '2VIHCiYJ' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'LEH9kVpX' \
    > test.out 2>&1
eval_tap $? 316 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 317 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '6WVinFEy' \
    --ids '["YmhWPFA9", "WS47BugU", "awcgYC3b"]' \
    > test.out 2>&1
eval_tap $? 317 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 318 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '3eMB4dBg' \
    --entitlementClazz 'ENTITLEMENT' \
    --sku 'Lsr0VjXr' \
    > test.out 2>&1
eval_tap $? 318 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 319 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId '20gjnz1P' \
    --namespace $AB_NAMESPACE \
    --userId 'FVtqqnz3' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetUserEntitlement' test.out

#- 320 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["b0knYHQX", "gyptghTq", "ZAEVUiAx"], "useCount": 4}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId '8kcPfEMH' \
    --namespace $AB_NAMESPACE \
    --userId 'psTQ5H7h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'PublicConsumeUserEntitlement' test.out

#- 321 PublicRedeemCode
# body param: body
echo '{"code": "csSvvtOt", "language": "uWZ", "region": "7fQVbUVO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'hdALLowz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'PublicRedeemCode' test.out

#- 322 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": false, "language": "qd", "productId": "QLRtwcLZ", "receiptData": "Viy4lE8K", "region": "Dq5xi6T2", "transactionId": "VqbDJhEt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'AGtYPRmR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicFulfillAppleIAPItem' test.out

#- 323 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "pXQJsbLF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'klhoMLJC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'SyncEpicGamesInventory' test.out

#- 324 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": false, "language": "lA-FP", "orderId": "IPDvfG7I", "packageName": "DELkIX3D", "productId": "dccWMrsp", "purchaseTime": 82, "purchaseToken": "ixUetr1Z", "region": "lEt9G59p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'uXHsfqmu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicFulfillGoogleIAPItem' test.out

#- 325 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "27MIQkoC", "price": 0.8983636397412315, "productId": "sqkFeufG", "serviceLabel": 49}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId 'kHKuSj4m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'PublicReconcilePlayStationStore' test.out

#- 326 SyncStadiaEntitlement
# body param: body
echo '{"appId": "SqxAii3V", "language": "gVTt-tfTy-Fh", "region": "QQnPXWgK", "stadiaPlayerId": "ZUgtsdkK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'nKhzw21K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'SyncStadiaEntitlement' test.out

#- 327 SyncSteamInventory
# body param: body
echo '{"appId": "0syJCbvL", "currencyCode": "vz9Ef6bE", "language": "DIG", "price": 0.05349112039820747, "productId": "LQKZyLGl", "region": "6DqvNgML", "steamId": "C20Srs7j"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'GBvjlLJ4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'SyncSteamInventory' test.out

#- 328 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "6qxl7VF7", "language": "QzO", "region": "3k1rIHoo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'b4H6QPVU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'SyncTwitchDropsEntitlement' test.out

#- 329 SyncXboxInventory
# body param: body
echo '{"currencyCode": "4QKsZKOg", "price": 0.4932805028450705, "productId": "3FOeo5QN", "xstsToken": "5ZKmDkwm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'nh5GrvLT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'SyncXboxInventory' test.out

#- 330 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId '1HBU018R' \
    --itemId 'MuOVv120' \
    --limit '0' \
    --offset '64' \
    --status 'CHARGEBACK' \
    > test.out 2>&1
eval_tap $? 330 'PublicQueryUserOrders' test.out

#- 331 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "ksYV1ri5", "discountedPrice": 43, "ext": {"An6lKr7X": {}, "hn5ge708": {}, "SZyGG8TH": {}}, "itemId": "Q2qHDfiQ", "language": "wFfg_580", "price": 29, "quantity": 22, "region": "sGOCVoNO", "returnUrl": "bWgDrW21"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'oNDl2M8a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicCreateUserOrder' test.out

#- 332 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '4TlU7kxS' \
    --userId 'x3gw9nci' \
    > test.out 2>&1
eval_tap $? 332 'PublicGetUserOrder' test.out

#- 333 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '2GESMHWi' \
    --userId 'U97Q8Erj' \
    > test.out 2>&1
eval_tap $? 333 'PublicCancelUserOrder' test.out

#- 334 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'Ngw59UPG' \
    --userId 's4zo0Ncn' \
    > test.out 2>&1
eval_tap $? 334 'PublicGetUserOrderHistories' test.out

#- 335 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'm8gEhNST' \
    --userId 'ClQN9bcg' \
    > test.out 2>&1
eval_tap $? 335 'PublicDownloadUserOrderReceipt' test.out

#- 336 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'FHbxW7gG' \
    > test.out 2>&1
eval_tap $? 336 'PublicGetPaymentAccounts' test.out

#- 337 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'xX4NPcNu' \
    --namespace $AB_NAMESPACE \
    --type 'card' \
    --userId 'cKewLAkO' \
    > test.out 2>&1
eval_tap $? 337 'PublicDeletePaymentAccount' test.out

#- 338 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'kQw2Yke4' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'akyVlItc' \
    --limit '54' \
    --offset '53' \
    --sku 'k2XDFvZ8' \
    --status 'INIT' \
    --subscribedBy 'PLATFORM' \
    > test.out 2>&1
eval_tap $? 338 'PublicQueryUserSubscriptions' test.out

#- 339 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "P91mnGPK", "itemId": "cjAQEOQk", "language": "EKYI-sA", "region": "DJohoOLG", "returnUrl": "EnrjkSkV", "source": "qTQXDfp1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'egRkEoEX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 339 'PublicSubscribeSubscription' test.out

#- 340 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'kfJZpd2a' \
    --itemId 'K5SsgHYQ' \
    > test.out 2>&1
eval_tap $? 340 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 341 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'VgSGtCBa' \
    --userId 'ODJs0IYl' \
    > test.out 2>&1
eval_tap $? 341 'PublicGetUserSubscription' test.out

#- 342 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Am3uIQ3h' \
    --userId 'O6QtizHp' \
    > test.out 2>&1
eval_tap $? 342 'PublicChangeSubscriptionBillingAccount' test.out

#- 343 PublicCancelSubscription
# body param: body
echo '{"immediate": false, "reason": "tzpNGQ1x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'LQNqePuC' \
    --userId 'h1ql0uvk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'PublicCancelSubscription' test.out

#- 344 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'NW0U2ZHT' \
    --userId 'd6rtS9yV' \
    --excludeFree 'false' \
    --limit '52' \
    --offset '94' \
    > test.out 2>&1
eval_tap $? 344 'PublicGetUserSubscriptionBillingHistories' test.out

#- 345 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode '6I8W3yaC' \
    --namespace $AB_NAMESPACE \
    --userId 'ws63rble' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetWallet' test.out

#- 346 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'A8D2WWgs' \
    --namespace $AB_NAMESPACE \
    --userId 'XiLH3q0x' \
    --limit '44' \
    --offset '29' \
    > test.out 2>&1
eval_tap $? 346 'PublicListUserWalletTransactions' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE