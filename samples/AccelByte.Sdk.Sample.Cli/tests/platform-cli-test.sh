#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..380"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListFulfillmentScripts
$CLI_EXE \
    --sn platform \
    --op ListFulfillmentScripts \
    > test.out 2>&1
eval_tap $? 2 'ListFulfillmentScripts' test.out

#- 3 TestFulfillmentScriptEval
# body param: body
echo '{"context": {"item": {"appId": "i2i6LnrO", "appType": "DEMO", "baseAppId": "ujlqct6L", "boothName": "iSajEEWt", "boundItemIds": ["pbNuZYCS", "At0dh6DZ", "T4Z6GHNL"], "categoryPath": "SyFGrPIl", "clazz": "9OooLcxY", "createdAt": "1981-08-27T00:00:00Z", "description": "XZNvdhA8", "displayOrder": 71, "entitlementType": "DURABLE", "ext": {"ekiM8a37": {}, "2Em74IoD": {}, "c32pwyeM": {}}, "features": ["J5omdhaO", "3oXBaW1y", "FLXKHYSm"], "fresh": false, "images": [{"as": "VI6b5Jax", "caption": "Dpdlzcmp", "height": 43, "imageUrl": "BdcYCbn8", "smallImageUrl": "SH2C6RMp", "width": 90}, {"as": "9SHZeWqT", "caption": "rN7DvFqu", "height": 54, "imageUrl": "KMov0s5Z", "smallImageUrl": "qKf2nk6T", "width": 49}, {"as": "wMrPYdQP", "caption": "kkjOmqol", "height": 8, "imageUrl": "88pp2ujZ", "smallImageUrl": "r56xTjNW", "width": 35}], "itemId": "R6VmM8QB", "itemIds": ["HuY4hCGC", "yWztgecY", "r1FenpWA"], "itemQty": {"PGrhAFJg": 55, "zbphAP0C": 69, "PyVmg0Ub": 3}, "itemType": "INGAMEITEM", "language": "HvuVOZiA", "listable": true, "localExt": {"WOEa5Wj8": {}, "hFDWRdrn": {}, "o4MdGxN0": {}}, "longDescription": "aAmRJx8R", "lootBoxConfig": {"rewardCount": 74, "rewards": [{"lootBoxItems": [{"count": 3, "itemId": "QJ1sy6Ni", "itemSku": "187HcE5U", "itemType": "t5AgJ1ya"}, {"count": 91, "itemId": "agbcSAZs", "itemSku": "kPiDAwPx", "itemType": "CvIwplM5"}, {"count": 89, "itemId": "ybYPb8lh", "itemSku": "CU8JopmT", "itemType": "qk456Euo"}], "name": "y2xSCY50", "odds": 0.2794262331639986, "type": "REWARD_GROUP", "weight": 15}, {"lootBoxItems": [{"count": 35, "itemId": "lBh3ScAf", "itemSku": "KGK3fo9P", "itemType": "6aAGgOZf"}, {"count": 1, "itemId": "a9wofs6w", "itemSku": "YCQQLhyM", "itemType": "a7Q22V2Y"}, {"count": 28, "itemId": "fF6a5Dlr", "itemSku": "0wZC67In", "itemType": "nQLZzTRQ"}], "name": "yhoMT3O8", "odds": 0.9519508776875162, "type": "PROBABILITY_GROUP", "weight": 80}, {"lootBoxItems": [{"count": 75, "itemId": "csfnSsYO", "itemSku": "rTCZqxaF", "itemType": "RApCsI3e"}, {"count": 61, "itemId": "8dYgBOoh", "itemSku": "B3DUUTyS", "itemType": "Yv1k1MhP"}, {"count": 5, "itemId": "DHDq1XUF", "itemSku": "Cj4D8BgG", "itemType": "LsM106Wh"}], "name": "FL8R3d7H", "odds": 0.19513424997825146, "type": "REWARD", "weight": 56}], "rollFunction": "DEFAULT"}, "maxCount": 79, "maxCountPerUser": 56, "name": "6ZKXzLwP", "namespace": "2qTrhewi", "optionBoxConfig": {"boxItems": [{"count": 91, "itemId": "WQeNUzgu", "itemSku": "NPqn2r9K", "itemType": "roQdyMVs"}, {"count": 89, "itemId": "J84GCDhf", "itemSku": "8DS3Nzq4", "itemType": "hrV5uQLM"}, {"count": 24, "itemId": "gPon3Ikn", "itemSku": "WxnrT9Fx", "itemType": "IjkpT3tx"}]}, "purchasable": true, "purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 81, "comparison": "isGreaterThan", "name": "cJ9S9w2H", "predicateType": "EntitlementPredicate", "value": "CO69Z3ST", "values": ["kXPtNLmD", "UnXOCffC", "0JKK61wi"]}, {"anyOf": 5, "comparison": "is", "name": "v7RVn7Va", "predicateType": "EntitlementPredicate", "value": "KOBg7VKI", "values": ["eeDsnJp2", "H7LpA3U9", "XgWjlGFX"]}, {"anyOf": 86, "comparison": "isGreaterThan", "name": "6ttdep6h", "predicateType": "EntitlementPredicate", "value": "f1pyQEjL", "values": ["UUgnUWn3", "MKBsrmpu", "ue5Q9XwU"]}]}, {"operator": "and", "predicates": [{"anyOf": 11, "comparison": "isLessThanOrEqual", "name": "ISw9dGGQ", "predicateType": "SeasonTierPredicate", "value": "JZ5Ip27s", "values": ["48FPdhGZ", "YRWZ8VnG", "JegP2PoT"]}, {"anyOf": 98, "comparison": "includes", "name": "Xtc0UROb", "predicateType": "SeasonTierPredicate", "value": "JD2vbUbT", "values": ["h5j0bpGV", "iEYRiLGj", "TKSjWTaD"]}, {"anyOf": 22, "comparison": "excludes", "name": "zYlMtDC4", "predicateType": "EntitlementPredicate", "value": "hc1X2ZuI", "values": ["QFE6R2QF", "BQXUq5JN", "DRYxBu5S"]}]}, {"operator": "or", "predicates": [{"anyOf": 34, "comparison": "isNot", "name": "yvDU84jk", "predicateType": "SeasonTierPredicate", "value": "hpiggjaS", "values": ["doN8aD3g", "xfNFVsx0", "zqA9m6F0"]}, {"anyOf": 87, "comparison": "excludes", "name": "ZQ9d9eh0", "predicateType": "SeasonTierPredicate", "value": "10KGlcCd", "values": ["5fuq5esw", "5OKye1ON", "U65vQWHm"]}, {"anyOf": 43, "comparison": "isLessThanOrEqual", "name": "UhmblEmc", "predicateType": "SeasonTierPredicate", "value": "f30WlkKj", "values": ["1XP93eTO", "0IpqRNOX", "iMudA6Py"]}]}]}, "recurring": {"cycle": "WEEKLY", "fixedFreeDays": 62, "fixedTrialCycles": 67, "graceDays": 3}, "region": "lgJ0HyUj", "regionData": [{"currencyCode": "70JbhQam", "currencyNamespace": "7bFtOhAn", "currencyType": "REAL", "discountAmount": 42, "discountExpireAt": "1975-10-12T00:00:00Z", "discountPercentage": 87, "discountPurchaseAt": "1974-09-22T00:00:00Z", "discountedPrice": 13, "expireAt": "1973-08-28T00:00:00Z", "price": 97, "purchaseAt": "1971-11-16T00:00:00Z", "trialPrice": 82}, {"currencyCode": "Oob6ubQK", "currencyNamespace": "qPmJifxr", "currencyType": "REAL", "discountAmount": 99, "discountExpireAt": "1989-06-21T00:00:00Z", "discountPercentage": 40, "discountPurchaseAt": "1991-09-12T00:00:00Z", "discountedPrice": 37, "expireAt": "1997-08-28T00:00:00Z", "price": 55, "purchaseAt": "1973-07-25T00:00:00Z", "trialPrice": 43}, {"currencyCode": "pMSd7dxr", "currencyNamespace": "BFrnmqZ7", "currencyType": "VIRTUAL", "discountAmount": 6, "discountExpireAt": "1991-11-20T00:00:00Z", "discountPercentage": 72, "discountPurchaseAt": "1999-10-10T00:00:00Z", "discountedPrice": 37, "expireAt": "1975-03-04T00:00:00Z", "price": 61, "purchaseAt": "1991-04-11T00:00:00Z", "trialPrice": 51}], "seasonType": "TIER", "sku": "wdzdXU8r", "stackable": true, "status": "INACTIVE", "tags": ["l21RZoDy", "uaUyC83U", "iiQzmkUp"], "targetCurrencyCode": "daIxtQXV", "targetItemId": "BvHJqHGa", "targetNamespace": "gYVbmETo", "thumbnailUrl": "wpRgljUU", "title": "72d9yYRG", "updatedAt": "1981-01-16T00:00:00Z", "useCount": 83}, "namespace": "OesJb8UH", "order": {"currency": {"currencyCode": "h0uZNFmL", "currencySymbol": "J0EMNr5B", "currencyType": "REAL", "decimals": 0, "namespace": "IZyoN0nt"}, "ext": {"7FQvPvQp": {}, "wX9ghsFL": {}, "0VKdI2hI": {}}, "free": true}, "source": "REFERRAL_BONUS"}, "script": "gATuOlit", "type": "grantDays"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestFulfillmentScriptEval \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'TestFulfillmentScriptEval' test.out

#- 4 GetFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op GetFulfillmentScript \
    --id 'NmVWjDoe' \
    > test.out 2>&1
eval_tap $? 4 'GetFulfillmentScript' test.out

#- 5 CreateFulfillmentScript
# body param: body
echo '{"grantDays": "ZntyTon8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateFulfillmentScript \
    --id 'mbtkSYfW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'CreateFulfillmentScript' test.out

#- 6 DeleteFulfillmentScript
$CLI_EXE \
    --sn platform \
    --op DeleteFulfillmentScript \
    --id 'YZwkdV4C' \
    > test.out 2>&1
eval_tap $? 6 'DeleteFulfillmentScript' test.out

#- 7 UpdateFulfillmentScript
# body param: body
echo '{"grantDays": "rAg4Rbfa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateFulfillmentScript \
    --id 'AHhf8PPQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'UpdateFulfillmentScript' test.out

#- 8 ListItemTypeConfigs
$CLI_EXE \
    --sn platform \
    --op ListItemTypeConfigs \
    > test.out 2>&1
eval_tap $? 8 'ListItemTypeConfigs' test.out

#- 9 CreateItemTypeConfig
# body param: body
echo '{"clazz": "vYVchVfP", "dryRun": true, "fulfillmentUrl": "rl2bTHFE", "itemType": "SEASON", "purchaseConditionUrl": "ieHr4Nr1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItemTypeConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'CreateItemTypeConfig' test.out

#- 10 SearchItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op SearchItemTypeConfig \
    --clazz 'VJI5Ys6P' \
    --itemType 'EXTENSION' \
    > test.out 2>&1
eval_tap $? 10 'SearchItemTypeConfig' test.out

#- 11 GetItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op GetItemTypeConfig \
    --id 'ryPoIxwD' \
    > test.out 2>&1
eval_tap $? 11 'GetItemTypeConfig' test.out

#- 12 UpdateItemTypeConfig
# body param: body
echo '{"clazz": "StabALhm", "dryRun": true, "fulfillmentUrl": "datfxcDk", "purchaseConditionUrl": "WOyjoAkj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemTypeConfig \
    --id '96Ve2Xm7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 12 'UpdateItemTypeConfig' test.out

#- 13 DeleteItemTypeConfig
$CLI_EXE \
    --sn platform \
    --op DeleteItemTypeConfig \
    --id 'qkDf7qGp' \
    > test.out 2>&1
eval_tap $? 13 'DeleteItemTypeConfig' test.out

#- 14 QueryCampaigns
$CLI_EXE \
    --sn platform \
    --op QueryCampaigns \
    --namespace $AB_NAMESPACE \
    --limit '39' \
    --name 'w84lOAcX' \
    --offset '13' \
    --tag '8fX31JfG' \
    > test.out 2>&1
eval_tap $? 14 'QueryCampaigns' test.out

#- 15 CreateCampaign
# body param: body
echo '{"description": "CTVRkwk6", "items": [{"extraSubscriptionDays": 24, "itemId": "Mgh1MnYB", "itemName": "nytmK1pY", "quantity": 9}, {"extraSubscriptionDays": 14, "itemId": "Nqs0sdHK", "itemName": "2HJw6GbO", "quantity": 66}, {"extraSubscriptionDays": 0, "itemId": "VBwK2cDG", "itemName": "u3qCBGbI", "quantity": 60}], "maxRedeemCountPerCampaignPerUser": 60, "maxRedeemCountPerCode": 36, "maxRedeemCountPerCodePerUser": 64, "maxSaleCount": 14, "name": "akCjHzqo", "redeemEnd": "1981-05-16T00:00:00Z", "redeemStart": "1980-05-05T00:00:00Z", "redeemType": "ITEM", "status": "ACTIVE", "tags": ["J1pFm5TM", "YXUvvX9Q", "joEMTF8K"], "type": "REDEMPTION"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCampaign \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'CreateCampaign' test.out

#- 16 GetCampaign
$CLI_EXE \
    --sn platform \
    --op GetCampaign \
    --campaignId 'BF3HDioh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'GetCampaign' test.out

#- 17 UpdateCampaign
# body param: body
echo '{"description": "jR5M3KSD", "items": [{"extraSubscriptionDays": 1, "itemId": "gMQKlrP9", "itemName": "w1r8a4ZC", "quantity": 95}, {"extraSubscriptionDays": 11, "itemId": "FIDm879y", "itemName": "PFnHQMGA", "quantity": 69}, {"extraSubscriptionDays": 43, "itemId": "eybjPgCq", "itemName": "X0B8SzYY", "quantity": 16}], "maxRedeemCountPerCampaignPerUser": 37, "maxRedeemCountPerCode": 27, "maxRedeemCountPerCodePerUser": 23, "maxSaleCount": 64, "name": "M5gxskx7", "redeemEnd": "1989-05-11T00:00:00Z", "redeemStart": "1975-07-24T00:00:00Z", "redeemType": "ITEM", "status": "INACTIVE", "tags": ["uuIg9iKX", "kN0X9dt8", "zl2xnXqE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCampaign \
    --campaignId '7i3hfzjG' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'UpdateCampaign' test.out

#- 18 GetCampaignDynamic
$CLI_EXE \
    --sn platform \
    --op GetCampaignDynamic \
    --campaignId 'FNX6RAj1' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetCampaignDynamic' test.out

#- 19 GetRootCategories
$CLI_EXE \
    --sn platform \
    --op GetRootCategories \
    --namespace $AB_NAMESPACE \
    --storeId 'NYO5i5P8' \
    > test.out 2>&1
eval_tap $? 19 'GetRootCategories' test.out

#- 20 CreateCategory
# body param: body
echo '{"categoryPath": "plybg4zI", "localizationDisplayNames": {"DDz29ia0": "Q52O6UVM", "nPpE05xD": "P0pvWkHf", "JZLJWFPG": "oAfTuYXB"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCategory \
    --namespace $AB_NAMESPACE \
    --storeId 'sE9RKPZg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'CreateCategory' test.out

#- 21 ListCategoriesBasic
$CLI_EXE \
    --sn platform \
    --op ListCategoriesBasic \
    --namespace $AB_NAMESPACE \
    --storeId 'PdxwBUJU' \
    > test.out 2>&1
eval_tap $? 21 'ListCategoriesBasic' test.out

#- 22 GetCategory
$CLI_EXE \
    --sn platform \
    --op GetCategory \
    --categoryPath '7CEx3h7s' \
    --namespace $AB_NAMESPACE \
    --storeId 'Ea6JTk5T' \
    > test.out 2>&1
eval_tap $? 22 'GetCategory' test.out

#- 23 UpdateCategory
# body param: body
echo '{"localizationDisplayNames": {"31POavDI": "7O0fJSF5", "YKZfx34q": "wOUQy3MG", "pfAVDGiU": "09m9v2g0"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCategory \
    --categoryPath 'JcHfONfg' \
    --namespace $AB_NAMESPACE \
    --storeId 'K5WiUWZo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateCategory' test.out

#- 24 DeleteCategory
$CLI_EXE \
    --sn platform \
    --op DeleteCategory \
    --categoryPath 'ISGmaajU' \
    --namespace $AB_NAMESPACE \
    --storeId 'dXqUESOB' \
    > test.out 2>&1
eval_tap $? 24 'DeleteCategory' test.out

#- 25 GetChildCategories
$CLI_EXE \
    --sn platform \
    --op GetChildCategories \
    --categoryPath 'A1SoeHLB' \
    --namespace $AB_NAMESPACE \
    --storeId 'p2BHh7dB' \
    > test.out 2>&1
eval_tap $? 25 'GetChildCategories' test.out

#- 26 GetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op GetDescendantCategories \
    --categoryPath 'Sl8zFjx7' \
    --namespace $AB_NAMESPACE \
    --storeId 'w8QUsqm2' \
    > test.out 2>&1
eval_tap $? 26 'GetDescendantCategories' test.out

#- 27 QueryCodes
$CLI_EXE \
    --sn platform \
    --op QueryCodes \
    --campaignId 'ZnPsVXmZ' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --batchNo '8' \
    --code 'swl6h8qH' \
    --limit '50' \
    --offset '78' \
    > test.out 2>&1
eval_tap $? 27 'QueryCodes' test.out

#- 28 CreateCodes
# body param: body
echo '{"quantity": 36}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCodes \
    --campaignId 'YihLgmOE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateCodes' test.out

#- 29 Download
$CLI_EXE \
    --sn platform \
    --op Download \
    --campaignId 'AfMzUiYY' \
    --namespace $AB_NAMESPACE \
    --batchNo '1' \
    > test.out 2>&1
eval_tap $? 29 'Download' test.out

#- 30 BulkDisableCodes
$CLI_EXE \
    --sn platform \
    --op BulkDisableCodes \
    --campaignId 'nd3Z3vzA' \
    --namespace $AB_NAMESPACE \
    --batchNo '47' \
    > test.out 2>&1
eval_tap $? 30 'BulkDisableCodes' test.out

#- 31 BulkEnableCodes
$CLI_EXE \
    --sn platform \
    --op BulkEnableCodes \
    --campaignId 'PKxwB9Jc' \
    --namespace $AB_NAMESPACE \
    --batchNo '45' \
    > test.out 2>&1
eval_tap $? 31 'BulkEnableCodes' test.out

#- 32 QueryRedeemHistory
$CLI_EXE \
    --sn platform \
    --op QueryRedeemHistory \
    --campaignId '40LYh6eH' \
    --namespace $AB_NAMESPACE \
    --code 'Hn45FFIn' \
    --limit '45' \
    --offset '75' \
    --userId 'oBnbMAzF' \
    > test.out 2>&1
eval_tap $? 32 'QueryRedeemHistory' test.out

#- 33 GetCode
$CLI_EXE \
    --sn platform \
    --op GetCode \
    --code 'R9QEUCQy' \
    --namespace $AB_NAMESPACE \
    --redeemable 'false' \
    > test.out 2>&1
eval_tap $? 33 'GetCode' test.out

#- 34 DisableCode
$CLI_EXE \
    --sn platform \
    --op DisableCode \
    --code 'gM1aO2Yu' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 34 'DisableCode' test.out

#- 35 EnableCode
$CLI_EXE \
    --sn platform \
    --op EnableCode \
    --code 'h7Zr0Frz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 35 'EnableCode' test.out

#- 36 GetServicePluginConfig
$CLI_EXE \
    --sn platform \
    --op GetServicePluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 36 'GetServicePluginConfig' test.out

#- 37 UpdateServicePluginConfig
# body param: body
echo '{"grpcServerAddress": "DYJ18P5R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateServicePluginConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 37 'UpdateServicePluginConfig' test.out

#- 38 DeleteServicePluginConfig
$CLI_EXE \
    --sn platform \
    --op DeleteServicePluginConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 38 'DeleteServicePluginConfig' test.out

#- 39 ListCurrencies
$CLI_EXE \
    --sn platform \
    --op ListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 39 'ListCurrencies' test.out

#- 40 CreateCurrency
# body param: body
echo '{"currencyCode": "dJ47prIt", "currencySymbol": "kXYPSQOB", "currencyType": "REAL", "decimals": 30, "localizationDescriptions": {"Rohaf4iV": "SCDfyGbs", "zCzyFFxs": "3OE4Z7wL", "6CSvRb85": "uE2iovSd"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateCurrency \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 40 'CreateCurrency' test.out

#- 41 UpdateCurrency
# body param: body
echo '{"localizationDescriptions": {"xzBtOYlw": "WsmPo9ND", "ulqcjAlC": "6ChEOjk8", "JXwLFl50": "v5aLQqWP"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCurrency \
    --currencyCode 'KRVGvZ7Z' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'UpdateCurrency' test.out

#- 42 DeleteCurrency
$CLI_EXE \
    --sn platform \
    --op DeleteCurrency \
    --currencyCode '1Y7x7yT7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 42 'DeleteCurrency' test.out

#- 43 GetCurrencyConfig
$CLI_EXE \
    --sn platform \
    --op GetCurrencyConfig \
    --currencyCode 'GaU3MciX' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 43 'GetCurrencyConfig' test.out

#- 44 GetCurrencySummary
$CLI_EXE \
    --sn platform \
    --op GetCurrencySummary \
    --currencyCode 'T2cozhvD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 44 'GetCurrencySummary' test.out

#- 45 GetDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op GetDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 45 'GetDLCItemConfig' test.out

#- 46 UpdateDLCItemConfig
# body param: body
echo '{"data": [{"id": "KzhN3t0J", "rewards": [{"currency": {"currencyCode": "Eha3WpWe", "namespace": "yVdYHPCh"}, "item": {"itemId": "86lTq5OW", "itemSku": "fIwR4Oet", "itemType": "My2SHEAV"}, "quantity": 71, "type": "ITEM"}, {"currency": {"currencyCode": "YD59X4zv", "namespace": "tH0RHW4C"}, "item": {"itemId": "0c9EFr3q", "itemSku": "ilP9wcfD", "itemType": "1Nsc1Szw"}, "quantity": 49, "type": "ITEM"}, {"currency": {"currencyCode": "1fPm8emy", "namespace": "Bhhq9xl1"}, "item": {"itemId": "DekXAfV4", "itemSku": "h8FSByT0", "itemType": "jhhUEJDT"}, "quantity": 25, "type": "ITEM"}]}, {"id": "T9qIcKs2", "rewards": [{"currency": {"currencyCode": "PI5zECQa", "namespace": "1rrIabSg"}, "item": {"itemId": "9Ysa6k2A", "itemSku": "FEK9iM8Z", "itemType": "AWgie5J0"}, "quantity": 5, "type": "CURRENCY"}, {"currency": {"currencyCode": "gptNJbsw", "namespace": "hs39CtrS"}, "item": {"itemId": "yzsDT0yq", "itemSku": "rNwEruQs", "itemType": "mWTU0zEK"}, "quantity": 1, "type": "ITEM"}, {"currency": {"currencyCode": "Ar5injji", "namespace": "fJAhuvSF"}, "item": {"itemId": "3tDtF8YZ", "itemSku": "dLPo0IHl", "itemType": "SpzvWfkH"}, "quantity": 18, "type": "CURRENCY"}]}, {"id": "Z4fNUEOY", "rewards": [{"currency": {"currencyCode": "iFEp9VS0", "namespace": "X5rP5RDE"}, "item": {"itemId": "4gRSdnjh", "itemSku": "RiwL9AJH", "itemType": "CiL4qjFx"}, "quantity": 83, "type": "CURRENCY"}, {"currency": {"currencyCode": "p25czxeh", "namespace": "i61GJAZL"}, "item": {"itemId": "juUG03gm", "itemSku": "E92k24Qe", "itemType": "Tugs917Y"}, "quantity": 51, "type": "CURRENCY"}, {"currency": {"currencyCode": "iSqJ2pLx", "namespace": "yD8W56er"}, "item": {"itemId": "44A4ENJu", "itemSku": "vJIZo9dk", "itemType": "FwpbhB6i"}, "quantity": 91, "type": "ITEM"}]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateDLCItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 46 'UpdateDLCItemConfig' test.out

#- 47 DeleteDLCItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteDLCItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 47 'DeleteDLCItemConfig' test.out

#- 48 GetPlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 48 'GetPlatformDLCConfig' test.out

#- 49 UpdatePlatformDLCConfig
# body param: body
echo '{"data": [{"platform": "STEAM", "platformDlcIdMap": {"5me0fOu7": "jzqOLtvN", "32j82KJP": "YcZik4bl", "44Bc4PMh": "9THyJElj"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"OmNgytOS": "e8Hr6NQ2", "JAk8MFGb": "fO0XCuJI", "Of7WW0M5": "f6iydZcx"}}, {"platform": "EPICGAMES", "platformDlcIdMap": {"8jsAWo1C": "Dlscy3NO", "RdaP7Sbo": "5jhSaTpt", "xYH78MD2": "M88Suzib"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 49 'UpdatePlatformDLCConfig' test.out

#- 50 DeletePlatformDLCConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlatformDLCConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 50 'DeletePlatformDLCConfig' test.out

#- 51 QueryEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryEntitlements \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'WtkmKdgG' \
    --itemId '["8THHpaSl", "14IcYQkw", "LDvDTlGB"]' \
    --limit '25' \
    --offset '96' \
    --userId 'RGSlf8OY' \
    > test.out 2>&1
eval_tap $? 51 'QueryEntitlements' test.out

#- 52 GetEntitlement
$CLI_EXE \
    --sn platform \
    --op GetEntitlement \
    --entitlementId 'lQgEZcLr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 52 'GetEntitlement' test.out

#- 53 QueryFulfillmentHistories
$CLI_EXE \
    --sn platform \
    --op QueryFulfillmentHistories \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --offset '29' \
    --status 'SUCCESS' \
    --userId '64ugZUHI' \
    > test.out 2>&1
eval_tap $? 53 'QueryFulfillmentHistories' test.out

#- 54 GetAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 54 'GetAppleIAPConfig' test.out

#- 55 UpdateAppleIAPConfig
# body param: body
echo '{"bundleId": "zoeMeoI7", "password": "v51Trjzi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 55 'UpdateAppleIAPConfig' test.out

#- 56 DeleteAppleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteAppleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 56 'DeleteAppleIAPConfig' test.out

#- 57 GetEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'GetEpicGamesIAPConfig' test.out

#- 58 UpdateEpicGamesIAPConfig
# body param: body
echo '{"sandboxId": "JWJNftZy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 58 'UpdateEpicGamesIAPConfig' test.out

#- 59 DeleteEpicGamesIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteEpicGamesIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 59 'DeleteEpicGamesIAPConfig' test.out

#- 60 GetGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'GetGoogleIAPConfig' test.out

#- 61 UpdateGoogleIAPConfig
# body param: body
echo '{"applicationName": "rbBcUFRj", "serviceAccountId": "dTxgigoj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 61 'UpdateGoogleIAPConfig' test.out

#- 62 DeleteGoogleIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteGoogleIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 62 'DeleteGoogleIAPConfig' test.out

#- 63 UpdateGoogleP12File
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateGoogleP12File \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 63 'UpdateGoogleP12File' test.out

#- 64 GetIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op GetIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 64 'GetIAPItemConfig' test.out

#- 65 UpdateIAPItemConfig
# body param: body
echo '{"data": [{"itemIdentity": "HrtC8t81", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"delsEm5k": "uokWWCSA", "TqUjr1kO": "uRRY85n4", "ukOjICtO": "7BSBGBLp"}}, {"itemIdentity": "QIOgWkEW", "itemIdentityType": "ITEM_ID", "platformProductIdMap": {"5m5wVFZg": "0oksvisg", "WgO15vEM": "q9mi2bt0", "4iKHO0gM": "9AezMo9L"}}, {"itemIdentity": "e0s9Ddek", "itemIdentityType": "ITEM_SKU", "platformProductIdMap": {"JHRPoIWi": "Yf9ZJpzq", "aVEsM0TH": "euT7J7ci", "nRpjiHWs": "2cASoDqA"}}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateIAPItemConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 65 'UpdateIAPItemConfig' test.out

#- 66 DeleteIAPItemConfig
$CLI_EXE \
    --sn platform \
    --op DeleteIAPItemConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 66 'DeleteIAPItemConfig' test.out

#- 67 GetPlayStationIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetPlayStationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 67 'GetPlayStationIAPConfig' test.out

#- 68 UpdatePlaystationIAPConfig
# body param: body
echo '{"environment": "mZ1WphtL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 68 'UpdatePlaystationIAPConfig' test.out

#- 69 DeletePlaystationIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeletePlaystationIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 69 'DeletePlaystationIAPConfig' test.out

#- 70 GetStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 70 'GetStadiaIAPConfig' test.out

#- 71 DeleteStadiaIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteStadiaIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 71 'DeleteStadiaIAPConfig' test.out

#- 72 UpdateStadiaJsonConfigFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateStadiaJsonConfigFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 72 'UpdateStadiaJsonConfigFile' test.out

#- 73 GetSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 73 'GetSteamIAPConfig' test.out

#- 74 UpdateSteamIAPConfig
# body param: body
echo '{"appId": "kyjazrz5", "publisherAuthenticationKey": "ExwpHenN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 74 'UpdateSteamIAPConfig' test.out

#- 75 DeleteSteamIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteSteamIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 75 'DeleteSteamIAPConfig' test.out

#- 76 GetTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 76 'GetTwitchIAPConfig' test.out

#- 77 UpdateTwitchIAPConfig
# body param: body
echo '{"clientId": "tspYt0u1", "clientSecret": "CDdG2pHZ", "organizationId": "BaUbw94y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 77 'UpdateTwitchIAPConfig' test.out

#- 78 DeleteTwitchIAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteTwitchIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 78 'DeleteTwitchIAPConfig' test.out

#- 79 GetXblIAPConfig
$CLI_EXE \
    --sn platform \
    --op GetXblIAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 79 'GetXblIAPConfig' test.out

#- 80 UpdateXblIAPConfig
# body param: body
echo '{"relyingPartyCert": "hWsNVtSk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblIAPConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 80 'UpdateXblIAPConfig' test.out

#- 81 DeleteXblAPConfig
$CLI_EXE \
    --sn platform \
    --op DeleteXblAPConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 81 'DeleteXblAPConfig' test.out

#- 82 UpdateXblBPCertFile
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateXblBPCertFile \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --password 'QdwMSt2q' \
    > test.out 2>&1
eval_tap $? 82 'UpdateXblBPCertFile' test.out

#- 83 DownloadInvoiceDetails
$CLI_EXE \
    --sn platform \
    --op DownloadInvoiceDetails \
    --namespace $AB_NAMESPACE \
    --feature 'qJuWnQzx' \
    --itemId 'SxP96dip' \
    --itemType 'SEASON' \
    --endTime 'aWP5eXyq' \
    --startTime '8TsItLDU' \
    > test.out 2>&1
eval_tap $? 83 'DownloadInvoiceDetails' test.out

#- 84 GenerateInvoiceSummary
$CLI_EXE \
    --sn platform \
    --op GenerateInvoiceSummary \
    --namespace $AB_NAMESPACE \
    --feature 'UwDHurcV' \
    --itemId 'EYyFoQ0K' \
    --itemType 'BUNDLE' \
    --endTime 't2G7JcKX' \
    --startTime 'sNvmPODi' \
    > test.out 2>&1
eval_tap $? 84 'GenerateInvoiceSummary' test.out

#- 85 SyncInGameItem
# body param: body
echo '{"categoryPath": "gnEFHGT4", "targetItemId": "uCDJ22Db", "targetNamespace": "nGjD05lq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncInGameItem \
    --namespace $AB_NAMESPACE \
    --storeId 'zlSzUQ6o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'SyncInGameItem' test.out

#- 86 CreateItem
# body param: body
echo '{"appId": "eECIYW3L", "appType": "DLC", "baseAppId": "YlgPQfSw", "boothName": "YSY4xe8v", "categoryPath": "FRNLqwXd", "clazz": "zayXmJA0", "displayOrder": 70, "entitlementType": "CONSUMABLE", "ext": {"mCBUXYsF": {}, "PT5k30qH": {}, "FdYMrVI8": {}}, "features": ["de1xGi26", "gPmV7jig", "gt6MfJe0"], "images": [{"as": "xX5dDgk6", "caption": "8cJOuqrr", "height": 26, "imageUrl": "uHYs0jo7", "smallImageUrl": "jSMH36Pp", "width": 3}, {"as": "w3hnTYmU", "caption": "PGf9yict", "height": 58, "imageUrl": "sqXMaLE0", "smallImageUrl": "7A1jSpy7", "width": 20}, {"as": "lyFREdB5", "caption": "7rHZCFdb", "height": 58, "imageUrl": "I3kXzAMw", "smallImageUrl": "IRWmLpIY", "width": 20}], "itemIds": ["paar3GbG", "L5nX59RC", "T0fZRmml"], "itemQty": {"LsRtPYZW": 78, "doTcjdgu": 59, "qU84Wjae": 96}, "itemType": "LOOTBOX", "listable": false, "localizations": {"b9s22I9K": {"description": "4ssvrD2u", "localExt": {"5SRfIJn8": {}, "8O4YaGXU": {}, "2BOoQrmy": {}}, "longDescription": "fPVgt2ir", "title": "n0WsFzu3"}, "Cvu0BHxJ": {"description": "9KWScieD", "localExt": {"SY3CTKYV": {}, "c8RZruGN": {}, "jvjWeoAk": {}}, "longDescription": "0LulTbdL", "title": "15MnIRHd"}, "eAVP2xLm": {"description": "gyIWCqzw", "localExt": {"ixAUeAuz": {}, "MPOIq62b": {}, "47dYTgjF": {}}, "longDescription": "n1LfPERB", "title": "p6XpWNwp"}}, "lootBoxConfig": {"rewardCount": 38, "rewards": [{"lootBoxItems": [{"count": 44, "itemId": "JmTVCOkC", "itemSku": "ZyGNbKn0", "itemType": "KHzqoAOq"}, {"count": 25, "itemId": "8WZKP0EW", "itemSku": "K8OA5gGa", "itemType": "KsSoE30M"}, {"count": 54, "itemId": "XkEeQKPx", "itemSku": "OTd5fK1X", "itemType": "p5W9oVH4"}], "name": "7hecfyIH", "odds": 0.0879964838061138, "type": "REWARD", "weight": 34}, {"lootBoxItems": [{"count": 64, "itemId": "iWB0TmYF", "itemSku": "9lqir6Ym", "itemType": "Z5H7B2cb"}, {"count": 92, "itemId": "WcunJHSo", "itemSku": "Wxj7Lwb9", "itemType": "8gNktiQw"}, {"count": 55, "itemId": "VhRdcfQ9", "itemSku": "D5esCRuX", "itemType": "eOZclO2A"}], "name": "dL1W9lfL", "odds": 0.634378547703493, "type": "REWARD", "weight": 0}, {"lootBoxItems": [{"count": 2, "itemId": "kH6oWKz0", "itemSku": "KfbonVGx", "itemType": "AkasPnlo"}, {"count": 2, "itemId": "yoYXQpBh", "itemSku": "XuVt8j7r", "itemType": "E5sw1THD"}, {"count": 84, "itemId": "u2ln8YWG", "itemSku": "TtgyTPiZ", "itemType": "vHBZJ2LV"}], "name": "OrpxEGHN", "odds": 0.30097722188098786, "type": "REWARD", "weight": 85}], "rollFunction": "CUSTOM"}, "maxCount": 20, "maxCountPerUser": 41, "name": "hJ5N95Bg", "optionBoxConfig": {"boxItems": [{"count": 22, "itemId": "rHq7T57p", "itemSku": "qkagZZCf", "itemType": "G3uOMxov"}, {"count": 54, "itemId": "ay1VHAfZ", "itemSku": "yBDarNBD", "itemType": "Zzy3vFYB"}, {"count": 56, "itemId": "b7AeiVpS", "itemSku": "991DRZcF", "itemType": "JOjEDgjc"}]}, "purchasable": true, "recurring": {"cycle": "QUARTERLY", "fixedFreeDays": 31, "fixedTrialCycles": 95, "graceDays": 68}, "regionData": {"94F8Lr3W": [{"currencyCode": "lzBGs7cu", "currencyNamespace": "O9XP6xdG", "currencyType": "VIRTUAL", "discountAmount": 9, "discountExpireAt": "1997-07-15T00:00:00Z", "discountPercentage": 16, "discountPurchaseAt": "1972-11-26T00:00:00Z", "discountedPrice": 71, "expireAt": "1982-09-01T00:00:00Z", "price": 60, "purchaseAt": "1992-04-01T00:00:00Z", "trialPrice": 40}, {"currencyCode": "THRZJhvZ", "currencyNamespace": "i2ljWhKD", "currencyType": "REAL", "discountAmount": 48, "discountExpireAt": "1990-08-25T00:00:00Z", "discountPercentage": 59, "discountPurchaseAt": "1990-04-12T00:00:00Z", "discountedPrice": 78, "expireAt": "1980-09-25T00:00:00Z", "price": 78, "purchaseAt": "1998-09-30T00:00:00Z", "trialPrice": 7}, {"currencyCode": "jjL6COvq", "currencyNamespace": "3DKOJzVx", "currencyType": "VIRTUAL", "discountAmount": 9, "discountExpireAt": "1983-05-28T00:00:00Z", "discountPercentage": 0, "discountPurchaseAt": "1978-05-20T00:00:00Z", "discountedPrice": 37, "expireAt": "1992-02-16T00:00:00Z", "price": 39, "purchaseAt": "1978-05-25T00:00:00Z", "trialPrice": 2}], "PsWDimG2": [{"currencyCode": "qMyYLslV", "currencyNamespace": "5bfFezia", "currencyType": "VIRTUAL", "discountAmount": 81, "discountExpireAt": "1990-12-10T00:00:00Z", "discountPercentage": 52, "discountPurchaseAt": "1979-01-21T00:00:00Z", "discountedPrice": 69, "expireAt": "1996-04-18T00:00:00Z", "price": 64, "purchaseAt": "1972-04-09T00:00:00Z", "trialPrice": 87}, {"currencyCode": "WrnriBeN", "currencyNamespace": "eEvD5tDM", "currencyType": "VIRTUAL", "discountAmount": 94, "discountExpireAt": "1998-07-24T00:00:00Z", "discountPercentage": 21, "discountPurchaseAt": "1987-08-13T00:00:00Z", "discountedPrice": 77, "expireAt": "1986-08-17T00:00:00Z", "price": 43, "purchaseAt": "1977-05-28T00:00:00Z", "trialPrice": 82}, {"currencyCode": "x6HblEx1", "currencyNamespace": "Kfm5cOs7", "currencyType": "VIRTUAL", "discountAmount": 14, "discountExpireAt": "1978-08-05T00:00:00Z", "discountPercentage": 94, "discountPurchaseAt": "1992-05-17T00:00:00Z", "discountedPrice": 95, "expireAt": "1995-08-12T00:00:00Z", "price": 28, "purchaseAt": "1982-06-07T00:00:00Z", "trialPrice": 79}], "PWkbQre1": [{"currencyCode": "39ynUz0B", "currencyNamespace": "CMrKmaZB", "currencyType": "REAL", "discountAmount": 40, "discountExpireAt": "1990-02-22T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1977-06-07T00:00:00Z", "discountedPrice": 20, "expireAt": "1995-09-11T00:00:00Z", "price": 26, "purchaseAt": "1995-04-18T00:00:00Z", "trialPrice": 4}, {"currencyCode": "FW9aebAj", "currencyNamespace": "PZSNB4D4", "currencyType": "REAL", "discountAmount": 25, "discountExpireAt": "1971-02-21T00:00:00Z", "discountPercentage": 33, "discountPurchaseAt": "1976-04-22T00:00:00Z", "discountedPrice": 63, "expireAt": "1993-07-21T00:00:00Z", "price": 78, "purchaseAt": "1971-02-10T00:00:00Z", "trialPrice": 77}, {"currencyCode": "F14DuP0A", "currencyNamespace": "hZW5cziH", "currencyType": "REAL", "discountAmount": 6, "discountExpireAt": "1999-05-29T00:00:00Z", "discountPercentage": 96, "discountPurchaseAt": "1977-04-08T00:00:00Z", "discountedPrice": 61, "expireAt": "1997-01-16T00:00:00Z", "price": 23, "purchaseAt": "1982-04-07T00:00:00Z", "trialPrice": 97}]}, "seasonType": "PASS", "sku": "xYaLz9Jb", "stackable": true, "status": "ACTIVE", "tags": ["RASBTrpl", "7fMmivmH", "qIYPbnZI"], "targetCurrencyCode": "BHYxOunF", "targetNamespace": "Kr8JMkeS", "thumbnailUrl": "qcFTpWGv", "useCount": 81}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateItem \
    --namespace $AB_NAMESPACE \
    --storeId 'JLbCzEUn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'CreateItem' test.out

#- 87 GetItemByAppId
$CLI_EXE \
    --sn platform \
    --op GetItemByAppId \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'CklVe94I' \
    --appId 'gv22BEQM' \
    > test.out 2>&1
eval_tap $? 87 'GetItemByAppId' test.out

#- 88 QueryItems
$CLI_EXE \
    --sn platform \
    --op QueryItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --appType 'GAME' \
    --availableDate 'FuqXR0iJ' \
    --baseAppId 'S6jZ4exi' \
    --categoryPath 'ta7cBqLa' \
    --features '7M9TkffG' \
    --includeSubCategoryItem 'true' \
    --itemType 'INGAMEITEM' \
    --limit '4' \
    --offset '76' \
    --region 'tsHhRjuo' \
    --sortBy '["updatedAt:asc", "name:asc", "name:desc"]' \
    --storeId '50BAZhnz' \
    --tags 'RWGxrzzz' \
    --targetNamespace 'WxO4LLNO' \
    > test.out 2>&1
eval_tap $? 88 'QueryItems' test.out

#- 89 ListBasicItemsByFeatures
$CLI_EXE \
    --sn platform \
    --op ListBasicItemsByFeatures \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --features '["NJ21j6P1", "3ArYUuNl", "CwgYiDQj"]' \
    > test.out 2>&1
eval_tap $? 89 'ListBasicItemsByFeatures' test.out

#- 90 GetItemBySku
$CLI_EXE \
    --sn platform \
    --op GetItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId 'RATZeACe' \
    --sku 'u0ySkrBv' \
    > test.out 2>&1
eval_tap $? 90 'GetItemBySku' test.out

#- 91 GetLocaleItemBySku
$CLI_EXE \
    --sn platform \
    --op GetLocaleItemBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language 'mgG7pJg7' \
    --populateBundle 'false' \
    --region 'ueRgh7fQ' \
    --storeId 'PbdGOwBs' \
    --sku 'Ep3pNbQQ' \
    > test.out 2>&1
eval_tap $? 91 'GetLocaleItemBySku' test.out

#- 92 GetItemIdBySku
$CLI_EXE \
    --sn platform \
    --op GetItemIdBySku \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '4gLRb61P' \
    --sku 'DZ6yiM37' \
    > test.out 2>&1
eval_tap $? 92 'GetItemIdBySku' test.out

#- 93 GetBulkItemIdBySkus
$CLI_EXE \
    --sn platform \
    --op GetBulkItemIdBySkus \
    --namespace $AB_NAMESPACE \
    --sku '["D7orfSn2", "Gph7wwYi", "AfhMROas"]' \
    --storeId '2039iGsj' \
    > test.out 2>&1
eval_tap $? 93 'GetBulkItemIdBySkus' test.out

#- 94 BulkGetLocaleItems
$CLI_EXE \
    --sn platform \
    --op BulkGetLocaleItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --language 'q7ItWAMw' \
    --region 'hSChwaks' \
    --storeId 'DhLFCkGI' \
    --itemIds 'neOQbkrL' \
    > test.out 2>&1
eval_tap $? 94 'BulkGetLocaleItems' test.out

#- 95 GetAvailablePredicateTypes
$CLI_EXE \
    --sn platform \
    --op GetAvailablePredicateTypes \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'GetAvailablePredicateTypes' test.out

#- 96 ValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["F10QZpkp", "AmjtzQuo", "exeBJAXy"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --userId 'EvyqYaFh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 96 'ValidateItemPurchaseCondition' test.out

#- 97 SearchItems
$CLI_EXE \
    --sn platform \
    --op SearchItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --itemType 'SUBSCRIPTION' \
    --limit '74' \
    --offset '32' \
    --sortBy 'TEDW5Y09' \
    --storeId 'TIBTTHu1' \
    --keyword 'cjffk4UG' \
    --language 'DmMe1UbJ' \
    > test.out 2>&1
eval_tap $? 97 'SearchItems' test.out

#- 98 QueryUncategorizedItems
$CLI_EXE \
    --sn platform \
    --op QueryUncategorizedItems \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --limit '47' \
    --offset '46' \
    --sortBy '["name:asc", "displayOrder", "displayOrder:asc"]' \
    --storeId 'wZS4JqOC' \
    > test.out 2>&1
eval_tap $? 98 'QueryUncategorizedItems' test.out

#- 99 GetItem
$CLI_EXE \
    --sn platform \
    --op GetItem \
    --itemId 'aTbvMzYu' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --storeId '8mxBtUsA' \
    > test.out 2>&1
eval_tap $? 99 'GetItem' test.out

#- 100 UpdateItem
# body param: body
echo '{"appId": "oyUJ56Qp", "appType": "GAME", "baseAppId": "JTojKCt3", "boothName": "OR0irATK", "categoryPath": "QJAOdN0t", "clazz": "Eng3rU3v", "displayOrder": 43, "entitlementType": "CONSUMABLE", "ext": {"rf7hWeHz": {}, "wKADbzv8": {}, "ALnDi5ij": {}}, "features": ["nQN4S95B", "w7DYp5LV", "VfVF53Hh"], "images": [{"as": "U2USvJyq", "caption": "vJG1JP5P", "height": 57, "imageUrl": "mAdnbRCI", "smallImageUrl": "6ZM6fSmh", "width": 66}, {"as": "HXcpMvkr", "caption": "xkSMQbA0", "height": 95, "imageUrl": "Gw0JebsI", "smallImageUrl": "CrYqpvot", "width": 92}, {"as": "0BhdDfVy", "caption": "nP2nIb2J", "height": 58, "imageUrl": "2tilSxJA", "smallImageUrl": "dI1ZiWcd", "width": 94}], "itemIds": ["JjU6RtzX", "MDlHvw6o", "oNyt4ff2"], "itemQty": {"88ijf1DL": 36, "r7Ki2M73": 63, "s0L3plx6": 27}, "itemType": "OPTIONBOX", "listable": true, "localizations": {"KH6y2Y0l": {"description": "G1XdhAcm", "localExt": {"JDHnhken": {}, "7pgVn2gM": {}, "qLTsLmFj": {}}, "longDescription": "qY4uOb0V", "title": "pW5frvix"}, "HsdcCQQu": {"description": "4Rm874Mc", "localExt": {"fMigdHo9": {}, "lchV8qdV": {}, "xbvlkAXx": {}}, "longDescription": "BIE8dsiW", "title": "WWPaSfwx"}, "KVUbgb8L": {"description": "yPQE08Gq", "localExt": {"34qzyjBq": {}, "B43kU5qX": {}, "XJYriZxq": {}}, "longDescription": "2EfYCM7u", "title": "dWBWUFDc"}}, "lootBoxConfig": {"rewardCount": 55, "rewards": [{"lootBoxItems": [{"count": 70, "itemId": "TjPBdsR3", "itemSku": "1Bvuk9jS", "itemType": "RQq8onRe"}, {"count": 55, "itemId": "G3z1su8d", "itemSku": "v6gtcVj8", "itemType": "iD38DSdU"}, {"count": 25, "itemId": "yWKW14VJ", "itemSku": "AHZy4v7S", "itemType": "If63hu2F"}], "name": "75DPMiUq", "odds": 0.23361546098421926, "type": "REWARD_GROUP", "weight": 27}, {"lootBoxItems": [{"count": 19, "itemId": "PZj0dXGB", "itemSku": "Cv9VXVKt", "itemType": "9hcE35yl"}, {"count": 68, "itemId": "pLvcemhh", "itemSku": "INXjMhzh", "itemType": "3fLhNnAY"}, {"count": 20, "itemId": "d0Iqzl0F", "itemSku": "5BFvFUCA", "itemType": "SHqsqGt6"}], "name": "N1U3gGZg", "odds": 0.4312498909442719, "type": "PROBABILITY_GROUP", "weight": 97}, {"lootBoxItems": [{"count": 91, "itemId": "fnvhr1Kw", "itemSku": "4DZOfXiL", "itemType": "lxi6yYvr"}, {"count": 81, "itemId": "jDgzxJ7V", "itemSku": "t0CuhCka", "itemType": "6tNJB7J0"}, {"count": 30, "itemId": "WCYrCaDH", "itemSku": "w36g4pV1", "itemType": "PTbNbia8"}], "name": "gzoMmf9T", "odds": 0.13002580638631966, "type": "REWARD_GROUP", "weight": 11}], "rollFunction": "CUSTOM"}, "maxCount": 36, "maxCountPerUser": 22, "name": "fIDxtdIO", "optionBoxConfig": {"boxItems": [{"count": 43, "itemId": "L8RAbTxS", "itemSku": "gobKpXl4", "itemType": "FQ7aVyY8"}, {"count": 18, "itemId": "2YwrROsY", "itemSku": "ZBKKZasg", "itemType": "pTHkyRCS"}, {"count": 97, "itemId": "tB0dXERD", "itemSku": "M7HIpkSO", "itemType": "KIuuNLMX"}]}, "purchasable": true, "recurring": {"cycle": "YEARLY", "fixedFreeDays": 39, "fixedTrialCycles": 57, "graceDays": 61}, "regionData": {"TsfBJ9P6": [{"currencyCode": "tnMRERUa", "currencyNamespace": "qugEaTR7", "currencyType": "REAL", "discountAmount": 14, "discountExpireAt": "1997-07-25T00:00:00Z", "discountPercentage": 56, "discountPurchaseAt": "1987-02-07T00:00:00Z", "discountedPrice": 21, "expireAt": "1986-05-01T00:00:00Z", "price": 99, "purchaseAt": "1990-01-13T00:00:00Z", "trialPrice": 20}, {"currencyCode": "sYO11Wgn", "currencyNamespace": "ChObSXUu", "currencyType": "VIRTUAL", "discountAmount": 48, "discountExpireAt": "1971-09-05T00:00:00Z", "discountPercentage": 44, "discountPurchaseAt": "1990-12-25T00:00:00Z", "discountedPrice": 9, "expireAt": "1991-06-11T00:00:00Z", "price": 51, "purchaseAt": "1988-08-24T00:00:00Z", "trialPrice": 86}, {"currencyCode": "EIdjuU4d", "currencyNamespace": "GIlYCnZS", "currencyType": "REAL", "discountAmount": 9, "discountExpireAt": "1974-08-25T00:00:00Z", "discountPercentage": 30, "discountPurchaseAt": "1994-05-09T00:00:00Z", "discountedPrice": 82, "expireAt": "1972-04-18T00:00:00Z", "price": 60, "purchaseAt": "1973-09-12T00:00:00Z", "trialPrice": 40}], "0K36gQi4": [{"currencyCode": "FAE0L9iC", "currencyNamespace": "OwO3L8mr", "currencyType": "REAL", "discountAmount": 2, "discountExpireAt": "1991-04-02T00:00:00Z", "discountPercentage": 68, "discountPurchaseAt": "1980-09-26T00:00:00Z", "discountedPrice": 87, "expireAt": "1975-11-25T00:00:00Z", "price": 51, "purchaseAt": "1993-03-23T00:00:00Z", "trialPrice": 30}, {"currencyCode": "81cN9QS2", "currencyNamespace": "41VlukRh", "currencyType": "VIRTUAL", "discountAmount": 29, "discountExpireAt": "1978-02-22T00:00:00Z", "discountPercentage": 48, "discountPurchaseAt": "1973-12-14T00:00:00Z", "discountedPrice": 23, "expireAt": "1983-04-07T00:00:00Z", "price": 36, "purchaseAt": "1992-06-04T00:00:00Z", "trialPrice": 25}, {"currencyCode": "ZMtihp5m", "currencyNamespace": "anq9CvF4", "currencyType": "VIRTUAL", "discountAmount": 74, "discountExpireAt": "1992-05-03T00:00:00Z", "discountPercentage": 65, "discountPurchaseAt": "1987-02-19T00:00:00Z", "discountedPrice": 79, "expireAt": "1977-12-23T00:00:00Z", "price": 54, "purchaseAt": "1988-04-19T00:00:00Z", "trialPrice": 42}], "uEOpMNeq": [{"currencyCode": "GNMgsitT", "currencyNamespace": "fYONQBHh", "currencyType": "VIRTUAL", "discountAmount": 51, "discountExpireAt": "1974-07-17T00:00:00Z", "discountPercentage": 27, "discountPurchaseAt": "1989-01-08T00:00:00Z", "discountedPrice": 34, "expireAt": "1980-05-05T00:00:00Z", "price": 36, "purchaseAt": "1981-06-01T00:00:00Z", "trialPrice": 38}, {"currencyCode": "fZBfR23C", "currencyNamespace": "HwKK01Wj", "currencyType": "VIRTUAL", "discountAmount": 40, "discountExpireAt": "1982-08-23T00:00:00Z", "discountPercentage": 8, "discountPurchaseAt": "1998-10-01T00:00:00Z", "discountedPrice": 90, "expireAt": "1991-05-15T00:00:00Z", "price": 96, "purchaseAt": "1975-08-21T00:00:00Z", "trialPrice": 99}, {"currencyCode": "QDttp5Ax", "currencyNamespace": "soqupTO3", "currencyType": "VIRTUAL", "discountAmount": 4, "discountExpireAt": "1998-01-03T00:00:00Z", "discountPercentage": 63, "discountPurchaseAt": "1987-12-17T00:00:00Z", "discountedPrice": 95, "expireAt": "1992-03-16T00:00:00Z", "price": 87, "purchaseAt": "1975-07-02T00:00:00Z", "trialPrice": 43}]}, "seasonType": "PASS", "sku": "cY3g93Hh", "stackable": false, "status": "INACTIVE", "tags": ["TNFYGVsr", "J21aIynv", "ZuiPpbT4"], "targetCurrencyCode": "U3ECfwIj", "targetNamespace": "hNkAu8wH", "thumbnailUrl": "6fn1vkIJ", "useCount": 29}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItem \
    --itemId '5w44Hi0Z' \
    --namespace $AB_NAMESPACE \
    --storeId 'a6d256Aq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'UpdateItem' test.out

#- 101 DeleteItem
$CLI_EXE \
    --sn platform \
    --op DeleteItem \
    --itemId 'kQEHjKcf' \
    --namespace $AB_NAMESPACE \
    --force 'true' \
    --storeId 'GZJebxTt' \
    > test.out 2>&1
eval_tap $? 101 'DeleteItem' test.out

#- 102 AcquireItem
# body param: body
echo '{"count": 19, "orderNo": "tb8Wa6R4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireItem \
    --itemId 'lx5BQAcJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'AcquireItem' test.out

#- 103 GetApp
$CLI_EXE \
    --sn platform \
    --op GetApp \
    --itemId 'czVgndKX' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --storeId 'pVImVONQ' \
    > test.out 2>&1
eval_tap $? 103 'GetApp' test.out

#- 104 UpdateApp
# body param: body
echo '{"carousel": [{"alt": "ZM4nxzZ1", "previewUrl": "I8xgLUej", "thumbnailUrl": "RyAOIBFB", "type": "video", "url": "xT52tWmm", "videoSource": "youtube"}, {"alt": "ew26wbID", "previewUrl": "bkSfyWfq", "thumbnailUrl": "Ao1pI8jN", "type": "video", "url": "tHfbXmbC", "videoSource": "vimeo"}, {"alt": "PncyumyN", "previewUrl": "3HHqS0DY", "thumbnailUrl": "cjZ8hgoL", "type": "video", "url": "pKaaO8xo", "videoSource": "vimeo"}], "developer": "RcPg1buy", "forumUrl": "c1fFXNOP", "genres": ["Indie", "Adventure", "Adventure"], "localizations": {"7HECL2ab": {"announcement": "iOQojkin", "slogan": "Nzu1Aflf"}, "MlOdjhGM": {"announcement": "VTaX6nxh", "slogan": "i6nAJjUm"}, "ahtusxE3": {"announcement": "IVVlw6Uu", "slogan": "RgDTxQmb"}}, "platformRequirements": {"pNbGc7wI": [{"additionals": "1f8dwzrW", "directXVersion": "CanEKank", "diskSpace": "rgkMZyJl", "graphics": "tmIsrg5v", "label": "oErj0UDx", "osVersion": "lPuYQvD1", "processor": "aqAkJozR", "ram": "t2nq8P6Q", "soundCard": "ivLC60K2"}, {"additionals": "nZYDI7bz", "directXVersion": "urvN3Whh", "diskSpace": "fQ7spzKR", "graphics": "haPlQGqw", "label": "6Sk5ix6l", "osVersion": "AHdteI2q", "processor": "Novy18Rk", "ram": "rnOGh5gt", "soundCard": "oaQCNkUw"}, {"additionals": "1hGmqEpS", "directXVersion": "8LEpst1b", "diskSpace": "eog7r9Ab", "graphics": "7Xd5QSmx", "label": "3AqpqPao", "osVersion": "wfR2E9e0", "processor": "NSNxgjci", "ram": "Fz8U1tHX", "soundCard": "dAP4uYna"}], "v35NnHYC": [{"additionals": "HQ9m00xh", "directXVersion": "cFz3BRYI", "diskSpace": "UEC4DhI1", "graphics": "7FRX9Ajp", "label": "BbGuAdvt", "osVersion": "7S90oaQe", "processor": "Pe7V2BSU", "ram": "M1gf4Hyw", "soundCard": "4ThH09Xk"}, {"additionals": "yjcM9Vxm", "directXVersion": "lysbhgrk", "diskSpace": "vDdo6Wrd", "graphics": "9E9qCspG", "label": "4bDcAR4K", "osVersion": "Fl6PlbY4", "processor": "LybOTzmG", "ram": "nIBPJFvR", "soundCard": "kLWcJ8nH"}, {"additionals": "1knxp5vp", "directXVersion": "eWtPN7Rw", "diskSpace": "Oi5Vm83o", "graphics": "kONcwlYE", "label": "gVHzXLMb", "osVersion": "trlMeFWX", "processor": "dq5dfbyH", "ram": "ju27NEk7", "soundCard": "XEa7WftW"}], "90L8vs3g": [{"additionals": "J1R1t3ay", "directXVersion": "iOjVmP0y", "diskSpace": "KAIWo6cc", "graphics": "S05ha6M3", "label": "wfPHVl9L", "osVersion": "DUdHadi2", "processor": "yqYEsq44", "ram": "CuP13JQC", "soundCard": "0yS3fEIe"}, {"additionals": "NKYykw79", "directXVersion": "lYee3mln", "diskSpace": "CXQKH2Ao", "graphics": "q3l9KYvY", "label": "Z7GV5RW5", "osVersion": "bVaqobRP", "processor": "P8GaG8yo", "ram": "EkukdENd", "soundCard": "VN0iiXYb"}, {"additionals": "MlWLDMSC", "directXVersion": "hWUU5KYT", "diskSpace": "n9q7eSfE", "graphics": "HhsifkZR", "label": "4QRm2M7m", "osVersion": "8SQmcJ0L", "processor": "Y36EoksH", "ram": "gBIuyszV", "soundCard": "wIR2X4nt"}]}, "platforms": ["Linux", "Windows", "Android"], "players": ["Coop", "Single", "Multi"], "primaryGenre": "Indie", "publisher": "lAustDDl", "releaseDate": "1984-03-31T00:00:00Z", "websiteUrl": "WcAsqd7h"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateApp \
    --itemId 'kG2fhxgC' \
    --namespace $AB_NAMESPACE \
    --storeId 'JBIIbRIf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 104 'UpdateApp' test.out

#- 105 DisableItem
$CLI_EXE \
    --sn platform \
    --op DisableItem \
    --itemId 'HwSkfGTT' \
    --namespace $AB_NAMESPACE \
    --storeId 'Jgfk7N1b' \
    > test.out 2>&1
eval_tap $? 105 'DisableItem' test.out

#- 106 GetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op GetItemDynamicData \
    --itemId 'fBENKPmS' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 106 'GetItemDynamicData' test.out

#- 107 EnableItem
$CLI_EXE \
    --sn platform \
    --op EnableItem \
    --itemId 'YXOBlMBv' \
    --namespace $AB_NAMESPACE \
    --storeId 'zmG5eikE' \
    > test.out 2>&1
eval_tap $? 107 'EnableItem' test.out

#- 108 FeatureItem
$CLI_EXE \
    --sn platform \
    --op FeatureItem \
    --feature '8M1hA6j1' \
    --itemId 'j6rNQfWx' \
    --namespace $AB_NAMESPACE \
    --storeId 'X85HCvb5' \
    > test.out 2>&1
eval_tap $? 108 'FeatureItem' test.out

#- 109 DefeatureItem
$CLI_EXE \
    --sn platform \
    --op DefeatureItem \
    --feature 'MQ8S9B2C' \
    --itemId 'mGYZgzxr' \
    --namespace $AB_NAMESPACE \
    --storeId 'TNhP0h7w' \
    > test.out 2>&1
eval_tap $? 109 'DefeatureItem' test.out

#- 110 GetLocaleItem
$CLI_EXE \
    --sn platform \
    --op GetLocaleItem \
    --itemId 'roHBbtgs' \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --language '7x8lI8vF' \
    --populateBundle 'true' \
    --region 'V2QgV5a2' \
    --storeId '3H17HfLl' \
    > test.out 2>&1
eval_tap $? 110 'GetLocaleItem' test.out

#- 111 UpdateItemPurchaseCondition
# body param: body
echo '{"purchaseCondition": {"conditionGroups": [{"operator": "or", "predicates": [{"anyOf": 95, "comparison": "isGreaterThanOrEqual", "name": "R5PKUnpJ", "predicateType": "SeasonPassPredicate", "value": "SG2DtF5p", "values": ["T8KgpuTy", "bJ0WsU5q", "tBR4QAxn"]}, {"anyOf": 20, "comparison": "isLessThanOrEqual", "name": "jf5nbD44", "predicateType": "EntitlementPredicate", "value": "c9YewiLZ", "values": ["GFYwuBG1", "vqsJuSHd", "GNqQIx6q"]}, {"anyOf": 74, "comparison": "isLessThan", "name": "jzZqSObQ", "predicateType": "EntitlementPredicate", "value": "umeVaMpe", "values": ["z6zSGcQp", "wJ5jk9I0", "Slo51OQN"]}]}, {"operator": "or", "predicates": [{"anyOf": 15, "comparison": "is", "name": "wCHTn5bn", "predicateType": "SeasonTierPredicate", "value": "HbEK9zB9", "values": ["UPEj5Dh0", "xwjFoKPq", "zeKw8HYO"]}, {"anyOf": 44, "comparison": "excludes", "name": "7Gi3w1fQ", "predicateType": "SeasonTierPredicate", "value": "byNQB0W5", "values": ["okWXnBDY", "tP92pH0f", "3YbAqaEp"]}, {"anyOf": 94, "comparison": "isGreaterThanOrEqual", "name": "KBmglCGD", "predicateType": "SeasonTierPredicate", "value": "YzlU4CmX", "values": ["OmNPK7vp", "NbxuzdmN", "3xGtM7h4"]}]}, {"operator": "or", "predicates": [{"anyOf": 85, "comparison": "isGreaterThan", "name": "YXDCe7f1", "predicateType": "SeasonPassPredicate", "value": "qpFNup32", "values": ["uHBf2swM", "ObiSLNj4", "0UFjO43s"]}, {"anyOf": 16, "comparison": "excludes", "name": "SHaRmPyb", "predicateType": "EntitlementPredicate", "value": "ZEUVO5Tw", "values": ["nkv9lJ5K", "xzbztdI9", "Li0uh9vX"]}, {"anyOf": 14, "comparison": "isGreaterThan", "name": "6jPS6Ilh", "predicateType": "SeasonPassPredicate", "value": "rQR3aKDE", "values": ["FJbR86jq", "gEhpKb3N", "dmVBBj6m"]}]}]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateItemPurchaseCondition \
    --itemId 'KNfRyCn7' \
    --namespace $AB_NAMESPACE \
    --storeId '4YMUoFKo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 111 'UpdateItemPurchaseCondition' test.out

#- 112 ReturnItem
# body param: body
echo '{"orderNo": "EmTIgB1s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ReturnItem \
    --itemId 'j1FvCPY5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 112 'ReturnItem' test.out

#- 113 QueryKeyGroups
$CLI_EXE \
    --sn platform \
    --op QueryKeyGroups \
    --namespace $AB_NAMESPACE \
    --limit '65' \
    --name '1cmZCKN8' \
    --offset '65' \
    --tag 'u9Wg5U3h' \
    > test.out 2>&1
eval_tap $? 113 'QueryKeyGroups' test.out

#- 114 CreateKeyGroup
# body param: body
echo '{"description": "IP5EbeTy", "name": "pl2ZXQxl", "status": "INACTIVE", "tags": ["q97H081v", "6ye2nILz", "0sdi7XkE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateKeyGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 114 'CreateKeyGroup' test.out

#- 115 GetKeyGroupByBoothName
eval_tap 0 115 'GetKeyGroupByBoothName # SKIP deprecated' test.out

#- 116 GetKeyGroup
$CLI_EXE \
    --sn platform \
    --op GetKeyGroup \
    --keyGroupId 'N9BU3pgU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 116 'GetKeyGroup' test.out

#- 117 UpdateKeyGroup
# body param: body
echo '{"description": "rJd2x3z7", "name": "XztYmFhO", "status": "ACTIVE", "tags": ["Wn7yCuvN", "lMj9boUk", "6bJhlg8c"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateKeyGroup \
    --keyGroupId 'IwQbSH2z' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'UpdateKeyGroup' test.out

#- 118 GetKeyGroupDynamic
$CLI_EXE \
    --sn platform \
    --op GetKeyGroupDynamic \
    --keyGroupId 'vztPMLGb' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 118 'GetKeyGroupDynamic' test.out

#- 119 ListKeys
$CLI_EXE \
    --sn platform \
    --op ListKeys \
    --keyGroupId '6uxMpZ4x' \
    --namespace $AB_NAMESPACE \
    --limit '47' \
    --offset '4' \
    --status 'ACTIVE' \
    > test.out 2>&1
eval_tap $? 119 'ListKeys' test.out

#- 120 UploadKeys
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UploadKeys \
    --keyGroupId 'syRtcH5H' \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 120 'UploadKeys' test.out

#- 121 QueryOrders
$CLI_EXE \
    --sn platform \
    --op QueryOrders \
    --namespace $AB_NAMESPACE \
    --endTime 'MhYwWTlc' \
    --limit '95' \
    --offset '61' \
    --orderNos '["HZoKBlli", "KfOUo99i", "SUqgGq1B"]' \
    --sortBy 'W46WEpB4' \
    --startTime '95BuX0bH' \
    --status 'CLOSED' \
    --withTotal 'false' \
    > test.out 2>&1
eval_tap $? 121 'QueryOrders' test.out

#- 122 GetOrderStatistics
$CLI_EXE \
    --sn platform \
    --op GetOrderStatistics \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'GetOrderStatistics' test.out

#- 123 GetOrder
$CLI_EXE \
    --sn platform \
    --op GetOrder \
    --namespace $AB_NAMESPACE \
    --orderNo '5afAYGga' \
    > test.out 2>&1
eval_tap $? 123 'GetOrder' test.out

#- 124 RefundOrder
# body param: body
echo '{"description": "1cudZSfU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'nruhr55o' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'RefundOrder' test.out

#- 125 GetPaymentCallbackConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 125 'GetPaymentCallbackConfig' test.out

#- 126 UpdatePaymentCallbackConfig
# body param: body
echo '{"dryRun": true, "notifyUrl": "9e9EuljX", "privateKey": "BEqftkAM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentCallbackConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'UpdatePaymentCallbackConfig' test.out

#- 127 QueryPaymentNotifications
$CLI_EXE \
    --sn platform \
    --op QueryPaymentNotifications \
    --namespace $AB_NAMESPACE \
    --endDate 'fMLIEmgo' \
    --externalId 'EPIEIEgx' \
    --limit '64' \
    --notificationSource 'STRIPE' \
    --notificationType '3Mxxyn7c' \
    --offset '76' \
    --paymentOrderNo 'WXnaaayR' \
    --startDate '19LbLnq7' \
    --status 'IGNORED' \
    > test.out 2>&1
eval_tap $? 127 'QueryPaymentNotifications' test.out

#- 128 QueryPaymentOrders
$CLI_EXE \
    --sn platform \
    --op QueryPaymentOrders \
    --namespace $AB_NAMESPACE \
    --channel 'INTERNAL' \
    --extTxId '81sn1JTQ' \
    --limit '100' \
    --offset '95' \
    --status 'AUTHORISE_FAILED' \
    > test.out 2>&1
eval_tap $? 128 'QueryPaymentOrders' test.out

#- 129 CreatePaymentOrderByDedicated
# body param: body
echo '{"currencyCode": "84FxSI9A", "currencyNamespace": "jT0x5Rqt", "customParameters": {"VIQyvB2M": {}, "fcP2EuJU": {}, "s0uAP0AY": {}}, "description": "WRVYFpIh", "extOrderNo": "dnjDC0fS", "extUserId": "UhqcqczD", "itemType": "SUBSCRIPTION", "language": "keb", "metadata": {"WpFecsOC": "l5qGDuvd", "Jdexq7O5": "n3EGYNtO", "7N6fQW3d": "80N52uDR"}, "notifyUrl": "UQLWRyVo", "omitNotification": true, "platform": "G1KQMuNi", "price": 86, "recurringPaymentOrderNo": "pXSw8Llh", "region": "jtKFFg7Z", "returnUrl": "KRvpypps", "sandbox": true, "sku": "MaQxkooF", "subscriptionId": "TRyaGpqB", "targetNamespace": "rkjTCCqw", "targetUserId": "TIovteLn", "title": "5SzambHl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 129 'CreatePaymentOrderByDedicated' test.out

#- 130 ListExtOrderNoByExtTxId
$CLI_EXE \
    --sn platform \
    --op ListExtOrderNoByExtTxId \
    --namespace $AB_NAMESPACE \
    --extTxId 'tcTHU5dn' \
    > test.out 2>&1
eval_tap $? 130 'ListExtOrderNoByExtTxId' test.out

#- 131 GetPaymentOrder
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'fXe7f2GZ' \
    > test.out 2>&1
eval_tap $? 131 'GetPaymentOrder' test.out

#- 132 ChargePaymentOrder
# body param: body
echo '{"extTxId": "SeIFjLwA", "paymentMethod": "R3SA0oVK", "paymentProvider": "PAYPAL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ChargePaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'hgSwxR4q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'ChargePaymentOrder' test.out

#- 133 RefundPaymentOrderByDedicated
# body param: body
echo '{"description": "LxK8Ex60"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundPaymentOrderByDedicated \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'IRr29y64' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'RefundPaymentOrderByDedicated' test.out

#- 134 SimulatePaymentOrderNotification
# body param: body
echo '{"amount": 3, "currencyCode": "hov5NI2g", "notifyType": "REFUND", "paymentProvider": "ADYEN", "salesTax": 11, "vat": 53}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SimulatePaymentOrderNotification \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'FpP5oIyR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'SimulatePaymentOrderNotification' test.out

#- 135 GetPaymentOrderChargeStatus
$CLI_EXE \
    --sn platform \
    --op GetPaymentOrderChargeStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'sImgi0rF' \
    > test.out 2>&1
eval_tap $? 135 'GetPaymentOrderChargeStatus' test.out

#- 136 GetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op GetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Steam' \
    > test.out 2>&1
eval_tap $? 136 'GetPlatformWalletConfig' test.out

#- 137 UpdatePlatformWalletConfig
# body param: body
echo '{"allowedBalanceOrigins": ["Playstation", "Stadia", "GooglePlay"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Xbox' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdatePlatformWalletConfig' test.out

#- 138 ResetPlatformWalletConfig
$CLI_EXE \
    --sn platform \
    --op ResetPlatformWalletConfig \
    --namespace $AB_NAMESPACE \
    --platform 'Epic' \
    > test.out 2>&1
eval_tap $? 138 'ResetPlatformWalletConfig' test.out

#- 139 CreateReward
# body param: body
echo '{"description": "qdf8wTOq", "eventTopic": "UQtwAiA6", "maxAwarded": 23, "maxAwardedPerUser": 82, "namespaceExpression": "jkkZ7fVB", "rewardCode": "1WovCjfl", "rewardConditions": [{"condition": "LMIUqpGu", "conditionName": "w5vq15zb", "eventName": "etckmosA", "rewardItems": [{"duration": 31, "itemId": "s5ICYNt6", "quantity": 66}, {"duration": 89, "itemId": "SlHTuVU0", "quantity": 10}, {"duration": 88, "itemId": "uOZexKKQ", "quantity": 40}]}, {"condition": "AYEgDuTW", "conditionName": "eC0XOFBJ", "eventName": "LIL6595v", "rewardItems": [{"duration": 30, "itemId": "Z6X9rqwJ", "quantity": 65}, {"duration": 65, "itemId": "1PSk04Bc", "quantity": 91}, {"duration": 48, "itemId": "XJOXKbuQ", "quantity": 32}]}, {"condition": "9V7nXns9", "conditionName": "yTE3ufAB", "eventName": "NHBZb8cf", "rewardItems": [{"duration": 57, "itemId": "x165qByY", "quantity": 33}, {"duration": 50, "itemId": "psg6ml8S", "quantity": 23}, {"duration": 0, "itemId": "xuj9nH4v", "quantity": 51}]}], "userIdExpression": "MZw46OKe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateReward \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'CreateReward' test.out

#- 140 QueryRewards
$CLI_EXE \
    --sn platform \
    --op QueryRewards \
    --namespace $AB_NAMESPACE \
    --eventTopic 'NCjTvHpR' \
    --limit '63' \
    --offset '65' \
    --sortBy '["rewardCode:desc", "rewardCode", "namespace"]' \
    > test.out 2>&1
eval_tap $? 140 'QueryRewards' test.out

#- 141 ExportRewards
$CLI_EXE \
    --sn platform \
    --op ExportRewards \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 141 'ExportRewards' test.out

#- 142 ImportRewards
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportRewards \
    --namespace $AB_NAMESPACE \
    --replaceExisting 'false' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 142 'ImportRewards' test.out

#- 143 GetReward
$CLI_EXE \
    --sn platform \
    --op GetReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'tiWTcJ84' \
    > test.out 2>&1
eval_tap $? 143 'GetReward' test.out

#- 144 UpdateReward
# body param: body
echo '{"description": "JcERAoIB", "eventTopic": "fWN4DgA7", "maxAwarded": 62, "maxAwardedPerUser": 87, "namespaceExpression": "Rqz5FG0T", "rewardCode": "MPcLVda4", "rewardConditions": [{"condition": "UGFkZqkW", "conditionName": "S9mGEwIC", "eventName": "BdmfeVKE", "rewardItems": [{"duration": 68, "itemId": "9vStFFNw", "quantity": 37}, {"duration": 74, "itemId": "FSeayaWw", "quantity": 90}, {"duration": 76, "itemId": "D0WDPyKq", "quantity": 44}]}, {"condition": "9V7evi0Q", "conditionName": "wP3Tw00F", "eventName": "gNymGPGV", "rewardItems": [{"duration": 49, "itemId": "UVyL41CT", "quantity": 88}, {"duration": 28, "itemId": "zsS7gm3i", "quantity": 5}, {"duration": 27, "itemId": "PCJqsWwI", "quantity": 91}]}, {"condition": "drJiwCC9", "conditionName": "sUvXSDuf", "eventName": "1k2zGKlb", "rewardItems": [{"duration": 88, "itemId": "6i6GbgRA", "quantity": 91}, {"duration": 78, "itemId": "aR6NBYRC", "quantity": 99}, {"duration": 59, "itemId": "taj6pik9", "quantity": 38}]}], "userIdExpression": "616d9QMb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateReward \
    --namespace $AB_NAMESPACE \
    --rewardId '9fpw6ZqY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'UpdateReward' test.out

#- 145 DeleteReward
$CLI_EXE \
    --sn platform \
    --op DeleteReward \
    --namespace $AB_NAMESPACE \
    --rewardId 'gmBwyP6y' \
    > test.out 2>&1
eval_tap $? 145 'DeleteReward' test.out

#- 146 CheckEventCondition
# body param: body
echo '{"payload": {"V9JICRo9": {}, "xOvmBjQK": {}, "RLNbgKZ9": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CheckEventCondition \
    --namespace $AB_NAMESPACE \
    --rewardId 'AcBX61Xs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'CheckEventCondition' test.out

#- 147 DeleteRewardConditionRecord
# body param: body
echo '{"conditionName": "dPyufN0r", "userId": "5eqwuJiY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DeleteRewardConditionRecord \
    --namespace $AB_NAMESPACE \
    --rewardId '52Y3I19Y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 147 'DeleteRewardConditionRecord' test.out

#- 148 QuerySections
$CLI_EXE \
    --sn platform \
    --op QuerySections \
    --namespace $AB_NAMESPACE \
    --end 'JwChylEg' \
    --limit '99' \
    --offset '18' \
    --start 'tPpOHCmI' \
    --storeId '7DK28YhF' \
    --viewId 'aU5Zghsm' \
    > test.out 2>&1
eval_tap $? 148 'QuerySections' test.out

#- 149 CreateSection
# body param: body
echo '{"active": false, "displayOrder": 50, "endDate": "1997-09-25T00:00:00Z", "ext": {"OPPJjP7v": {}, "DilFBcgK": {}, "W190WSg0": {}}, "fixedPeriodRotationConfig": {"backfillType": "NONE", "duration": 50, "itemCount": 45, "rule": "SEQUENCE"}, "items": [{"id": "vYXGMRU7", "sku": "1GsiDxsu"}, {"id": "lAKjsOO8", "sku": "Ia18FJBG"}, {"id": "q5VYqlOG", "sku": "wvqA2XOA"}], "localizations": {"AVEwH5jr": {"description": "jymsvH5C", "localExt": {"UOTZXzmU": {}, "ZdTpFxE6": {}, "1l1dRQ9K": {}}, "longDescription": "llOXNi1W", "title": "zSLalE8c"}, "gfYfm7P9": {"description": "v789XovQ", "localExt": {"XlohM1lM": {}, "E7FuSB9W": {}, "AJ2pxCoO": {}}, "longDescription": "kJgo0mtM", "title": "9O5O8Gv4"}, "qdc3VdEi": {"description": "AgQsz9ra", "localExt": {"N3JR5IDC": {}, "iG8GA9NM": {}, "k27qrrR3": {}}, "longDescription": "04dhg9qM", "title": "KmknJ14J"}}, "name": "Ed2pzU5J", "rotationType": "NONE", "startDate": "1982-05-09T00:00:00Z", "viewId": "1Hdvg6ZN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateSection \
    --namespace $AB_NAMESPACE \
    --storeId 'HWlPd7bI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'CreateSection' test.out

#- 150 PurgeExpiredSection
$CLI_EXE \
    --sn platform \
    --op PurgeExpiredSection \
    --namespace $AB_NAMESPACE \
    --storeId '5wdnCl6C' \
    > test.out 2>&1
eval_tap $? 150 'PurgeExpiredSection' test.out

#- 151 GetSection
$CLI_EXE \
    --sn platform \
    --op GetSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'iNzFQwJl' \
    --storeId 'Tl77GHqK' \
    > test.out 2>&1
eval_tap $? 151 'GetSection' test.out

#- 152 UpdateSection
# body param: body
echo '{"active": false, "displayOrder": 100, "endDate": "1982-08-02T00:00:00Z", "ext": {"2opLn3vU": {}, "N3vVERPo": {}, "H70mCaCl": {}}, "fixedPeriodRotationConfig": {"backfillType": "CUSTOM", "duration": 61, "itemCount": 66, "rule": "SEQUENCE"}, "items": [{"id": "UI8y0UIC", "sku": "VX80x17r"}, {"id": "2qFCIMWX", "sku": "JPrg6cVF"}, {"id": "ookpRCRV", "sku": "y3ZtCyJb"}], "localizations": {"G0ZJ2YUY": {"description": "C8m7cg8n", "localExt": {"x2bUN5KZ": {}, "8Dsa6XZC": {}, "qeFUT1QQ": {}}, "longDescription": "jHJMR7SH", "title": "jyWIaVDZ"}, "gUBMC79M": {"description": "0kbMsFG4", "localExt": {"dVAoAJTD": {}, "3UIBMptf": {}, "iho3c58R": {}}, "longDescription": "tK8Jxaq9", "title": "kT0ucxSp"}, "jRA7AFiR": {"description": "mKVmZRpL", "localExt": {"5udPdDAr": {}, "pKWa9wNs": {}, "lQTqtAbf": {}}, "longDescription": "x7PfMagm", "title": "2kv8anbS"}}, "name": "Fb0sUYRW", "rotationType": "FIXED_PERIOD", "startDate": "1997-03-14T00:00:00Z", "viewId": "EjBmkaaR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateSection \
    --namespace $AB_NAMESPACE \
    --sectionId '7kQ30YP6' \
    --storeId 'z645NFQ6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'UpdateSection' test.out

#- 153 DeleteSection
$CLI_EXE \
    --sn platform \
    --op DeleteSection \
    --namespace $AB_NAMESPACE \
    --sectionId 'oI58bboe' \
    --storeId 'TyU73gaS' \
    > test.out 2>&1
eval_tap $? 153 'DeleteSection' test.out

#- 154 ListStores
$CLI_EXE \
    --sn platform \
    --op ListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 154 'ListStores' test.out

#- 155 CreateStore
# body param: body
echo '{"defaultLanguage": "LBwtLMzv", "defaultRegion": "FDXZScNQ", "description": "bxK4PviJ", "supportedLanguages": ["rjCp09mC", "6qebZ83M", "wrffDwxf"], "supportedRegions": ["1vNrEzpH", "LoFJYxQF", "X5CH7hb6"], "title": "LhLIiDNz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateStore \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'CreateStore' test.out

#- 156 ImportStore
eval_tap 0 156 'ImportStore # SKIP deprecated' test.out

#- 157 GetPublishedStore
$CLI_EXE \
    --sn platform \
    --op GetPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 157 'GetPublishedStore' test.out

#- 158 DeletePublishedStore
$CLI_EXE \
    --sn platform \
    --op DeletePublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 158 'DeletePublishedStore' test.out

#- 159 GetPublishedStoreBackup
$CLI_EXE \
    --sn platform \
    --op GetPublishedStoreBackup \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 159 'GetPublishedStoreBackup' test.out

#- 160 RollbackPublishedStore
$CLI_EXE \
    --sn platform \
    --op RollbackPublishedStore \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 160 'RollbackPublishedStore' test.out

#- 161 GetStore
$CLI_EXE \
    --sn platform \
    --op GetStore \
    --namespace $AB_NAMESPACE \
    --storeId 'd9SoUxdo' \
    > test.out 2>&1
eval_tap $? 161 'GetStore' test.out

#- 162 UpdateStore
# body param: body
echo '{"defaultLanguage": "BdSnUV0o", "defaultRegion": "6We4jTvq", "description": "ekiG7vwh", "supportedLanguages": ["d4xIIK39", "XJSAkFnP", "lNyvqxLW"], "supportedRegions": ["XLgWp73r", "XDsH7C45", "d7JebhF5"], "title": "QSkuTWWp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStore \
    --namespace $AB_NAMESPACE \
    --storeId 'YJmnBQ4N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'UpdateStore' test.out

#- 163 DeleteStore
$CLI_EXE \
    --sn platform \
    --op DeleteStore \
    --namespace $AB_NAMESPACE \
    --storeId 'eIgMizGc' \
    > test.out 2>&1
eval_tap $? 163 'DeleteStore' test.out

#- 164 QueryChanges
$CLI_EXE \
    --sn platform \
    --op QueryChanges \
    --namespace $AB_NAMESPACE \
    --storeId 'm7gJDeJO' \
    --action 'CREATE' \
    --itemSku 'yRuJt2Un' \
    --itemType 'SUBSCRIPTION' \
    --limit '19' \
    --offset '75' \
    --selected 'false' \
    --sortBy '["updatedAt:asc", "createdAt", "updatedAt:desc"]' \
    --status 'PUBLISHED' \
    --type 'SECTION' \
    --updatedAtEnd 'iK3WKFR9' \
    --updatedAtStart '6xLw8oZq' \
    > test.out 2>&1
eval_tap $? 164 'QueryChanges' test.out

#- 165 PublishAll
$CLI_EXE \
    --sn platform \
    --op PublishAll \
    --namespace $AB_NAMESPACE \
    --storeId 'GZUtRKUq' \
    > test.out 2>&1
eval_tap $? 165 'PublishAll' test.out

#- 166 PublishSelected
$CLI_EXE \
    --sn platform \
    --op PublishSelected \
    --namespace $AB_NAMESPACE \
    --storeId '8x1qPJf0' \
    > test.out 2>&1
eval_tap $? 166 'PublishSelected' test.out

#- 167 SelectAllRecords
$CLI_EXE \
    --sn platform \
    --op SelectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'a9y2GIfG' \
    > test.out 2>&1
eval_tap $? 167 'SelectAllRecords' test.out

#- 168 GetStatistic
$CLI_EXE \
    --sn platform \
    --op GetStatistic \
    --namespace $AB_NAMESPACE \
    --storeId 'CioceTUR' \
    --action 'UPDATE' \
    --itemSku 'aK7ujGCr' \
    --itemType 'MEDIA' \
    --type 'CATEGORY' \
    --updatedAtEnd 'yx1MG4E5' \
    --updatedAtStart 'xtgBuOfz' \
    > test.out 2>&1
eval_tap $? 168 'GetStatistic' test.out

#- 169 UnselectAllRecords
$CLI_EXE \
    --sn platform \
    --op UnselectAllRecords \
    --namespace $AB_NAMESPACE \
    --storeId 'B94HXxBJ' \
    > test.out 2>&1
eval_tap $? 169 'UnselectAllRecords' test.out

#- 170 SelectRecord
$CLI_EXE \
    --sn platform \
    --op SelectRecord \
    --changeId 'ltctaZ3T' \
    --namespace $AB_NAMESPACE \
    --storeId 'Iu4FHM0s' \
    > test.out 2>&1
eval_tap $? 170 'SelectRecord' test.out

#- 171 UnselectRecord
$CLI_EXE \
    --sn platform \
    --op UnselectRecord \
    --changeId '6vMmDkyG' \
    --namespace $AB_NAMESPACE \
    --storeId 'o9sCm3RO' \
    > test.out 2>&1
eval_tap $? 171 'UnselectRecord' test.out

#- 172 CloneStore
$CLI_EXE \
    --sn platform \
    --op CloneStore \
    --namespace $AB_NAMESPACE \
    --storeId 'CGIi1owh' \
    --targetStoreId 'O8FARxqK' \
    > test.out 2>&1
eval_tap $? 172 'CloneStore' test.out

#- 173 ExportStore
eval_tap 0 173 'ExportStore # SKIP deprecated' test.out

#- 174 QuerySubscriptions
$CLI_EXE \
    --sn platform \
    --op QuerySubscriptions \
    --namespace $AB_NAMESPACE \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId 'UJMowBy2' \
    --limit '13' \
    --offset '31' \
    --sku 'V34RaZqA' \
    --status 'ACTIVE' \
    --subscribedBy 'PLATFORM' \
    --userId 'ah5mCbNA' \
    > test.out 2>&1
eval_tap $? 174 'QuerySubscriptions' test.out

#- 175 RecurringChargeSubscription
$CLI_EXE \
    --sn platform \
    --op RecurringChargeSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'EpqKDi6L' \
    > test.out 2>&1
eval_tap $? 175 'RecurringChargeSubscription' test.out

#- 176 GetTicketDynamic
$CLI_EXE \
    --sn platform \
    --op GetTicketDynamic \
    --boothName 'mpe91TJq' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 176 'GetTicketDynamic' test.out

#- 177 DecreaseTicketSale
# body param: body
echo '{"orderNo": "A69pGUjw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op DecreaseTicketSale \
    --boothName 'tWBvSyvL' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'DecreaseTicketSale' test.out

#- 178 GetTicketBoothID
$CLI_EXE \
    --sn platform \
    --op GetTicketBoothID \
    --boothName 'dAjz2J3Z' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 178 'GetTicketBoothID' test.out

#- 179 IncreaseTicketSale
# body param: body
echo '{"count": 71, "orderNo": "8qxzXToi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op IncreaseTicketSale \
    --boothName 'KpyhHEUY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'IncreaseTicketSale' test.out

#- 180 UnlockSteamUserAchievement
# body param: body
echo '{"achievements": [{"id": "URaxU3w5", "value": 7}, {"id": "oIymVtQY", "value": 2}, {"id": "2LLsASg1", "value": 44}], "steamUserId": "fCVbMJuF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UnlockSteamUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'VAxYcD5D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'UnlockSteamUserAchievement' test.out

#- 181 GetXblUserAchievements
$CLI_EXE \
    --sn platform \
    --op GetXblUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'mGpFj7oR' \
    --xboxUserId 'MnFN4ort' \
    > test.out 2>&1
eval_tap $? 181 'GetXblUserAchievements' test.out

#- 182 UpdateXblUserAchievement
# body param: body
echo '{"achievements": [{"id": "6fPXryMJ", "percentComplete": 48}, {"id": "4wRbClmo", "percentComplete": 21}, {"id": "jdCgHQVy", "percentComplete": 51}], "serviceConfigId": "8276qnPi", "titleId": "wbbi4ZLL", "xboxUserId": "1ky9EvkN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXblUserAchievement \
    --namespace $AB_NAMESPACE \
    --userId 'UiOU7znv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'UpdateXblUserAchievement' test.out

#- 183 AnonymizeCampaign
$CLI_EXE \
    --sn platform \
    --op AnonymizeCampaign \
    --namespace $AB_NAMESPACE \
    --userId 'QNFfGtay' \
    > test.out 2>&1
eval_tap $? 183 'AnonymizeCampaign' test.out

#- 184 AnonymizeEntitlement
$CLI_EXE \
    --sn platform \
    --op AnonymizeEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'jQSwdMsl' \
    > test.out 2>&1
eval_tap $? 184 'AnonymizeEntitlement' test.out

#- 185 AnonymizeFulfillment
$CLI_EXE \
    --sn platform \
    --op AnonymizeFulfillment \
    --namespace $AB_NAMESPACE \
    --userId 'Y9F2UsDm' \
    > test.out 2>&1
eval_tap $? 185 'AnonymizeFulfillment' test.out

#- 186 AnonymizeIntegration
$CLI_EXE \
    --sn platform \
    --op AnonymizeIntegration \
    --namespace $AB_NAMESPACE \
    --userId 'YkimTFXp' \
    > test.out 2>&1
eval_tap $? 186 'AnonymizeIntegration' test.out

#- 187 AnonymizeOrder
$CLI_EXE \
    --sn platform \
    --op AnonymizeOrder \
    --namespace $AB_NAMESPACE \
    --userId '7vR0Qnrd' \
    > test.out 2>&1
eval_tap $? 187 'AnonymizeOrder' test.out

#- 188 AnonymizePayment
$CLI_EXE \
    --sn platform \
    --op AnonymizePayment \
    --namespace $AB_NAMESPACE \
    --userId 'h5iqZVHx' \
    > test.out 2>&1
eval_tap $? 188 'AnonymizePayment' test.out

#- 189 AnonymizeSubscription
$CLI_EXE \
    --sn platform \
    --op AnonymizeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'j8FtxCuD' \
    > test.out 2>&1
eval_tap $? 189 'AnonymizeSubscription' test.out

#- 190 AnonymizeWallet
$CLI_EXE \
    --sn platform \
    --op AnonymizeWallet \
    --namespace $AB_NAMESPACE \
    --userId 'kj4zzcTz' \
    > test.out 2>&1
eval_tap $? 190 'AnonymizeWallet' test.out

#- 191 GetUserDLC
$CLI_EXE \
    --sn platform \
    --op GetUserDLC \
    --namespace $AB_NAMESPACE \
    --userId '1cels2no' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 191 'GetUserDLC' test.out

#- 192 QueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'nPJIIlDw' \
    --activeOnly 'false' \
    --appType 'GAME' \
    --entitlementClazz 'APP' \
    --entitlementName 'XmqOVxSM' \
    --features '["gxJq52AM", "uKtDqkym", "JvcZle6p"]' \
    --itemId '["Cig9aUV7", "G9S01I7s", "mogXdVeb"]' \
    --limit '93' \
    --offset '74' \
    > test.out 2>&1
eval_tap $? 192 'QueryUserEntitlements' test.out

#- 193 GrantUserEntitlement
# body param: body
echo '[{"endDate": "1971-01-11T00:00:00Z", "grantedCode": "WjtASC4a", "itemId": "5Vd3DAeA", "itemNamespace": "9tc52OHr", "language": "zcAl_QkrR", "quantity": 22, "region": "emcP3aMO", "source": "PURCHASE", "startDate": "1999-10-25T00:00:00Z", "storeId": "X6RbvBar"}, {"endDate": "1993-09-11T00:00:00Z", "grantedCode": "KNWshs9E", "itemId": "pGId8Vx9", "itemNamespace": "27DhHR4h", "language": "GEW-213", "quantity": 96, "region": "t8DJXY9R", "source": "PROMOTION", "startDate": "1986-12-13T00:00:00Z", "storeId": "Vw6Kr83X"}, {"endDate": "1993-12-10T00:00:00Z", "grantedCode": "jrENvuJ1", "itemId": "oOe6qIZv", "itemNamespace": "LtkTp8qT", "language": "GPP_VweD-Bb", "quantity": 84, "region": "2LEi0KKa", "source": "PURCHASE", "startDate": "1996-12-22T00:00:00Z", "storeId": "ZBJCHe41"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantUserEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'sM1AwTqY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'GrantUserEntitlement' test.out

#- 194 GetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'ZTYzaCLu' \
    --activeOnly 'true' \
    --appId 'je46yVTe' \
    > test.out 2>&1
eval_tap $? 194 'GetUserAppEntitlementByAppId' test.out

#- 195 QueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op QueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'j6vWnjsZ' \
    --activeOnly 'false' \
    --limit '0' \
    --offset '47' \
    --appType 'DEMO' \
    > test.out 2>&1
eval_tap $? 195 'QueryUserEntitlementsByAppType' test.out

#- 196 GetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'ABBqXJqS' \
    --activeOnly 'false' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'Md6imnJM' \
    > test.out 2>&1
eval_tap $? 196 'GetUserEntitlementByItemId' test.out

#- 197 GetUserActiveEntitlementsByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserActiveEntitlementsByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'KMTRRBWD' \
    --ids '["DXwxqYWc", "Te5WwBxI", "7BE42BIr"]' \
    > test.out 2>&1
eval_tap $? 197 'GetUserActiveEntitlementsByItemIds' test.out

#- 198 GetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'cgrHyd33' \
    --activeOnly 'true' \
    --entitlementClazz 'LOOTBOX' \
    --sku '59xb5y9a' \
    > test.out 2>&1
eval_tap $? 198 'GetUserEntitlementBySku' test.out

#- 199 ExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId '7QdFfLQi' \
    --appIds '["AR1IPAH8", "FC2l1WCh", "XZglpBdj"]' \
    --itemIds '["okNktpUe", "R3p2L3tb", "qrPQ5xbx"]' \
    --skus '["QQxM9fZF", "c5lFxpqx", "PMQ4oZPT"]' \
    > test.out 2>&1
eval_tap $? 199 'ExistsAnyUserActiveEntitlement' test.out

#- 200 ExistsAnyUserActiveEntitlementByItemIds
$CLI_EXE \
    --sn platform \
    --op ExistsAnyUserActiveEntitlementByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'Z8PBlBOl' \
    --itemIds '["Du0cbMsW", "4eneNQRz", "ljsPWlmv"]' \
    > test.out 2>&1
eval_tap $? 200 'ExistsAnyUserActiveEntitlementByItemIds' test.out

#- 201 GetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op GetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'kHzdUC28' \
    --appId 'YcjzWA0F' \
    > test.out 2>&1
eval_tap $? 201 'GetUserAppEntitlementOwnershipByAppId' test.out

#- 202 GetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'vvQXxEci' \
    --entitlementClazz 'SUBSCRIPTION' \
    --itemId 'ZXqT1Wch' \
    > test.out 2>&1
eval_tap $? 202 'GetUserEntitlementOwnershipByItemId' test.out

#- 203 GetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId '6GuP9UDw' \
    --ids '["sGkgqji6", "IqSU7QZ4", "ADKPxzVv"]' \
    > test.out 2>&1
eval_tap $? 203 'GetUserEntitlementOwnershipByItemIds' test.out

#- 204 GetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId 'eeEpUPv6' \
    --entitlementClazz 'OPTIONBOX' \
    --sku 'Q7AV7nLm' \
    > test.out 2>&1
eval_tap $? 204 'GetUserEntitlementOwnershipBySku' test.out

#- 205 RevokeUserEntitlements
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId 'miYa15MQ' \
    --entitlementIds 'P9hpUP4Z' \
    > test.out 2>&1
eval_tap $? 205 'RevokeUserEntitlements' test.out

#- 206 GetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlement \
    --entitlementId 'P2nVi7HS' \
    --namespace $AB_NAMESPACE \
    --userId '1f5U0UEi' \
    > test.out 2>&1
eval_tap $? 206 'GetUserEntitlement' test.out

#- 207 UpdateUserEntitlement
# body param: body
echo '{"endDate": "1984-03-01T00:00:00Z", "nullFieldList": ["3ZfrUjAA", "Glau5Gf6", "xt6Yg4cY"], "startDate": "1971-12-15T00:00:00Z", "status": "INACTIVE", "useCount": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserEntitlement \
    --entitlementId 'TfigEcZz' \
    --namespace $AB_NAMESPACE \
    --userId 'WKm0Qa9t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'UpdateUserEntitlement' test.out

#- 208 ConsumeUserEntitlement
# body param: body
echo '{"options": ["FBB8d5lO", "fC0DwWWh", "b6MkcCvQ"], "requestId": "9tQZNnJj", "useCount": 63}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ConsumeUserEntitlement \
    --entitlementId 'iKCH9Nfw' \
    --namespace $AB_NAMESPACE \
    --userId 'pbgKt7qc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 208 'ConsumeUserEntitlement' test.out

#- 209 DisableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op DisableUserEntitlement \
    --entitlementId 'EC67gDj4' \
    --namespace $AB_NAMESPACE \
    --userId 'UUW20NwJ' \
    > test.out 2>&1
eval_tap $? 209 'DisableUserEntitlement' test.out

#- 210 EnableUserEntitlement
$CLI_EXE \
    --sn platform \
    --op EnableUserEntitlement \
    --entitlementId 'tP5fI4uS' \
    --namespace $AB_NAMESPACE \
    --userId '3Luefe3V' \
    > test.out 2>&1
eval_tap $? 210 'EnableUserEntitlement' test.out

#- 211 GetUserEntitlementHistories
$CLI_EXE \
    --sn platform \
    --op GetUserEntitlementHistories \
    --entitlementId 'jevIR3RB' \
    --namespace $AB_NAMESPACE \
    --userId 'dXa1LdhU' \
    > test.out 2>&1
eval_tap $? 211 'GetUserEntitlementHistories' test.out

#- 212 RevokeUserEntitlement
$CLI_EXE \
    --sn platform \
    --op RevokeUserEntitlement \
    --entitlementId '8ELBcD63' \
    --namespace $AB_NAMESPACE \
    --userId '1uSOXJWU' \
    > test.out 2>&1
eval_tap $? 212 'RevokeUserEntitlement' test.out

#- 213 FulfillItem
# body param: body
echo '{"duration": 25, "endDate": "1990-09-18T00:00:00Z", "itemId": "41XzRWDH", "itemSku": "9OzgShKn", "language": "VOUQYndx", "order": {"currency": {"currencyCode": "PCfnrI9l", "currencySymbol": "vtl7XiG5", "currencyType": "REAL", "decimals": 81, "namespace": "1nWAD6mY"}, "ext": {"zAPCEwM8": {}, "WKDSilw0": {}, "7hLRC9MP": {}}, "free": true}, "orderNo": "oSdgVGuk", "origin": "Twitch", "quantity": 81, "region": "5k8A1UqB", "source": "IAP", "startDate": "1976-11-07T00:00:00Z", "storeId": "dcLfFvHf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillItem \
    --namespace $AB_NAMESPACE \
    --userId 'PvDy1tFc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 213 'FulfillItem' test.out

#- 214 RedeemCode
# body param: body
echo '{"code": "mUtIEMo0", "language": "AM-913", "region": "0vs4xs27"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'tM8St76d' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 214 'RedeemCode' test.out

#- 215 FulfillRewards
# body param: body
echo '{"origin": "Epic", "rewards": [{"currency": {"currencyCode": "CPOJZwGO", "namespace": "s7u2hnVJ"}, "item": {"itemId": "nIILFAVc", "itemSku": "q3LLDjmx", "itemType": "dKfn1Cc2"}, "quantity": 100, "type": "CURRENCY"}, {"currency": {"currencyCode": "YXljc7zZ", "namespace": "PFqdRpOb"}, "item": {"itemId": "84vaOOzH", "itemSku": "nleAf8Fz", "itemType": "z7O1diob"}, "quantity": 94, "type": "CURRENCY"}, {"currency": {"currencyCode": "8NZRnsfl", "namespace": "jHkJs57t"}, "item": {"itemId": "thtYoxny", "itemSku": "F5XWEJTx", "itemType": "H5QYg18n"}, "quantity": 16, "type": "ITEM"}], "source": "IAP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op FulfillRewards \
    --namespace $AB_NAMESPACE \
    --userId 'pK6pZt2S' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 215 'FulfillRewards' test.out

#- 216 QueryUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'kicphWGy' \
    --endTime '7eHfRlf4' \
    --limit '62' \
    --offset '25' \
    --productId 'tVn67QQX' \
    --startTime 'VuT90A8n' \
    --status 'FULFILLED' \
    --type 'EPICGAMES' \
    > test.out 2>&1
eval_tap $? 216 'QueryUserIAPOrders' test.out

#- 217 QueryAllUserIAPOrders
$CLI_EXE \
    --sn platform \
    --op QueryAllUserIAPOrders \
    --namespace $AB_NAMESPACE \
    --userId 'zVZMWcgb' \
    > test.out 2>&1
eval_tap $? 217 'QueryAllUserIAPOrders' test.out

#- 218 QueryUserIAPConsumeHistory
$CLI_EXE \
    --sn platform \
    --op QueryUserIAPConsumeHistory \
    --namespace $AB_NAMESPACE \
    --userId 'uyR0CtbO' \
    --endTime 'OCwj4ZHC' \
    --limit '35' \
    --offset '18' \
    --startTime 'gSVeyAyc' \
    --status 'FAIL' \
    --type 'STEAM' \
    > test.out 2>&1
eval_tap $? 218 'QueryUserIAPConsumeHistory' test.out

#- 219 MockFulfillIAPItem
# body param: body
echo '{"itemIdentityType": "ITEM_ID", "language": "zT-Cohp-On", "productId": "nB6rEspn", "region": "9Hx5x1Vx", "type": "EPICGAMES"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op MockFulfillIAPItem \
    --namespace $AB_NAMESPACE \
    --userId '8i2pR2HL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 219 'MockFulfillIAPItem' test.out

#- 220 QueryUserOrders
$CLI_EXE \
    --sn platform \
    --op QueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'OEZvm1be' \
    --itemId 'EP3Eew2E' \
    --limit '33' \
    --offset '24' \
    --status 'FULFILL_FAILED' \
    > test.out 2>&1
eval_tap $? 220 'QueryUserOrders' test.out

#- 221 AdminCreateUserOrder
# body param: body
echo '{"currencyCode": "wLub9Ekn", "currencyNamespace": "7E56NxxM", "discountedPrice": 38, "ext": {"vh421m5U": {}, "LMucQIQM": {}, "JgDWvEQw": {}}, "itemId": "OJ9CNIF9", "language": "OXxfNYoR", "options": {"skipPriceValidation": true}, "platform": "IOS", "price": 67, "quantity": 73, "region": "rw9ZoJk6", "returnUrl": "9epwyQhj", "sandbox": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AdminCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId '0xzeHO1a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'AdminCreateUserOrder' test.out

#- 222 CountOfPurchasedItem
$CLI_EXE \
    --sn platform \
    --op CountOfPurchasedItem \
    --namespace $AB_NAMESPACE \
    --userId 'jGhFxTL1' \
    --itemId 'a60b0gBg' \
    > test.out 2>&1
eval_tap $? 222 'CountOfPurchasedItem' test.out

#- 223 GetUserOrder
$CLI_EXE \
    --sn platform \
    --op GetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'HLkaquyV' \
    --userId 'uhXKIK7t' \
    > test.out 2>&1
eval_tap $? 223 'GetUserOrder' test.out

#- 224 UpdateUserOrderStatus
# body param: body
echo '{"status": "CHARGEBACK", "statusReason": "U0gFffGB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateUserOrderStatus \
    --namespace $AB_NAMESPACE \
    --orderNo 'K39CcNim' \
    --userId 'OXhGVU4Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'UpdateUserOrderStatus' test.out

#- 225 FulfillUserOrder
$CLI_EXE \
    --sn platform \
    --op FulfillUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'zUW5EoNU' \
    --userId 'O2ZN7ao4' \
    > test.out 2>&1
eval_tap $? 225 'FulfillUserOrder' test.out

#- 226 GetUserOrderGrant
$CLI_EXE \
    --sn platform \
    --op GetUserOrderGrant \
    --namespace $AB_NAMESPACE \
    --orderNo 'UGP3DrM0' \
    --userId 'HfzGpmaA' \
    > test.out 2>&1
eval_tap $? 226 'GetUserOrderGrant' test.out

#- 227 GetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op GetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'EXdp8Alq' \
    --userId '6qgwgfFs' \
    > test.out 2>&1
eval_tap $? 227 'GetUserOrderHistories' test.out

#- 228 ProcessUserOrderNotification
# body param: body
echo '{"additionalData": {"cardSummary": "4GDu0hhW"}, "authorisedTime": "1973-04-04T00:00:00Z", "chargebackReversedTime": "1994-02-11T00:00:00Z", "chargebackTime": "1993-02-25T00:00:00Z", "chargedTime": "1993-10-04T00:00:00Z", "createdTime": "1986-02-22T00:00:00Z", "currency": {"currencyCode": "Ff1RUAhh", "currencySymbol": "vNxKhC7o", "currencyType": "REAL", "decimals": 22, "namespace": "WebPMUhe"}, "customParameters": {"5UCqSY4K": {}, "Wx9h35Kk": {}, "FcfmVIpI": {}}, "extOrderNo": "CRbtNQ00", "extTxId": "bhYrh17i", "extUserId": "ZKFDghyY", "issuedAt": "1978-03-03T00:00:00Z", "metadata": {"wHCOZEnQ": "5FLXx7YL", "aZq4I2Jv": "dhRSzZ9b", "bV9ErAfJ": "avE1FO6b"}, "namespace": "trQ5k2EW", "nonceStr": "Bg9Gkon9", "paymentMethod": "cl5CP7TV", "paymentMethodFee": 54, "paymentOrderNo": "DEImFtaS", "paymentProvider": "WALLET", "paymentProviderFee": 35, "paymentStationUrl": "Jh03JhAx", "price": 38, "refundedTime": "1991-09-19T00:00:00Z", "salesTax": 60, "sandbox": false, "sku": "WngYCMEO", "status": "REFUNDING", "statusReason": "re4BPoLk", "subscriptionId": "2jMaPMQJ", "subtotalPrice": 44, "targetNamespace": "iiybpd4d", "targetUserId": "VDDr3z65", "tax": 34, "totalPrice": 28, "totalTax": 56, "txEndTime": "1983-11-08T00:00:00Z", "type": "yYhZQmef", "userId": "22Qoqnd9", "vat": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserOrderNotification \
    --namespace $AB_NAMESPACE \
    --orderNo 'NX9axyuB' \
    --userId 'xEeLaJqr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'ProcessUserOrderNotification' test.out

#- 229 DownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op DownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo 'Qs3AM7ul' \
    --userId 'Ra6sLaWJ' \
    > test.out 2>&1
eval_tap $? 229 'DownloadUserOrderReceipt' test.out

#- 230 CreateUserPaymentOrder
# body param: body
echo '{"currencyCode": "EJvilWqv", "currencyNamespace": "B5826NXJ", "customParameters": {"MbJnvAHQ": {}, "LtF7ghWI": {}, "U4nGbF1K": {}}, "description": "yy7J8Sy6", "extOrderNo": "O62LwnRs", "extUserId": "g8LDSfoG", "itemType": "EXTENSION", "language": "KEZ_IpCv-003", "metadata": {"7nyjX7Cm": "hwrQSt3R", "cFxQTuxw": "eBoZecr2", "jm4ogcbL": "C6DemtJH"}, "notifyUrl": "J5e0lWkv", "omitNotification": false, "platform": "uQw42Cmd", "price": 95, "recurringPaymentOrderNo": "B2ajw8Rt", "region": "dG14Wgdv", "returnUrl": "yB30Mp4z", "sandbox": true, "sku": "e4t69S2Z", "subscriptionId": "SXWLaKxa", "title": "JqBcjsct"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --userId 'pNcA0mOM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'CreateUserPaymentOrder' test.out

#- 231 RefundUserPaymentOrder
# body param: body
echo '{"description": "UOIN4rvb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op RefundUserPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'u22ZkifM' \
    --userId '1r3DB7Dh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'RefundUserPaymentOrder' test.out

#- 232 ApplyUserRedemption
# body param: body
echo '{"code": "P0dATB80", "orderNo": "LE4dBV1G"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ApplyUserRedemption \
    --namespace $AB_NAMESPACE \
    --userId 'EJIil0j0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'ApplyUserRedemption' test.out

#- 233 QueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op QueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId '3JSIMcfI' \
    --chargeStatus 'RECURRING_CHARGING' \
    --itemId 'OGdkAwZ8' \
    --limit '21' \
    --offset '31' \
    --sku 'Yi6xZo3j' \
    --status 'EXPIRED' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 233 'QueryUserSubscriptions' test.out

#- 234 GetUserSubscriptionActivities
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionActivities \
    --namespace $AB_NAMESPACE \
    --userId 'ayzMRpoK' \
    --excludeSystem 'true' \
    --limit '100' \
    --offset '13' \
    --subscriptionId 'agMYxgs0' \
    > test.out 2>&1
eval_tap $? 234 'GetUserSubscriptionActivities' test.out

#- 235 PlatformSubscribeSubscription
# body param: body
echo '{"grantDays": 63, "itemId": "UFtsL49x", "language": "iXXrXntg", "reason": "PLqNIkyM", "region": "fUZkHOBz", "source": "DPySeUr9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PlatformSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'bTKjRRXg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'PlatformSubscribeSubscription' test.out

#- 236 CheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op CheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'UfwTdMZm' \
    --itemId 'ALdoXuCR' \
    > test.out 2>&1
eval_tap $? 236 'CheckUserSubscriptionSubscribableByItemId' test.out

#- 237 GetUserSubscription
$CLI_EXE \
    --sn platform \
    --op GetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '5JGKSmPI' \
    --userId 'JTPRmYRF' \
    > test.out 2>&1
eval_tap $? 237 'GetUserSubscription' test.out

#- 238 DeleteUserSubscription
$CLI_EXE \
    --sn platform \
    --op DeleteUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'ev7li7r0' \
    --userId 'j52Yyyu5' \
    > test.out 2>&1
eval_tap $? 238 'DeleteUserSubscription' test.out

#- 239 CancelSubscription
# body param: body
echo '{"immediate": false, "reason": "csuCgRfZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'wtMGf7b1' \
    --userId 'mUSyGYWD' \
    --force 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'CancelSubscription' test.out

#- 240 GrantDaysToSubscription
# body param: body
echo '{"grantDays": 78, "reason": "SQgmaCgt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op GrantDaysToSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId '3KKtvdv0' \
    --userId 'cmJ3IZYY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'GrantDaysToSubscription' test.out

#- 241 GetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op GetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId '9Qw49avd' \
    --userId 'yNLcxI7Y' \
    --excludeFree 'false' \
    --limit '43' \
    --offset '76' \
    > test.out 2>&1
eval_tap $? 241 'GetUserSubscriptionBillingHistories' test.out

#- 242 ProcessUserSubscriptionNotification
# body param: body
echo '{"additionalData": {"cardSummary": "RCoe2hpQ"}, "authorisedTime": "1976-09-16T00:00:00Z", "chargebackReversedTime": "1987-02-20T00:00:00Z", "chargebackTime": "1976-07-21T00:00:00Z", "chargedTime": "1990-12-18T00:00:00Z", "createdTime": "1985-12-12T00:00:00Z", "currency": {"currencyCode": "aHcX6LnV", "currencySymbol": "VGAYjMMe", "currencyType": "REAL", "decimals": 7, "namespace": "7D5vv8sv"}, "customParameters": {"gJND2iNo": {}, "IZykgG7A": {}, "o6SrpNAX": {}}, "extOrderNo": "zq3j0YS1", "extTxId": "poo1MnO3", "extUserId": "lM02ApHB", "issuedAt": "1998-04-12T00:00:00Z", "metadata": {"gTOAO9WA": "JXPmjMx2", "mRiXr7uf": "eyQQqG5r", "KzM4UFaC": "S3Suk8Ht"}, "namespace": "ijnNJe2h", "nonceStr": "2kW5qILB", "paymentMethod": "DX4CiSjM", "paymentMethodFee": 86, "paymentOrderNo": "ST7tdkLU", "paymentProvider": "PAYPAL", "paymentProviderFee": 56, "paymentStationUrl": "6I2kV882", "price": 10, "refundedTime": "1991-01-03T00:00:00Z", "salesTax": 17, "sandbox": false, "sku": "hDI2v1g9", "status": "DELETED", "statusReason": "4uWIO5ye", "subscriptionId": "IlHaOZ97", "subtotalPrice": 43, "targetNamespace": "ocbLQGnf", "targetUserId": "uf56glT8", "tax": 99, "totalPrice": 98, "totalTax": 32, "txEndTime": "1988-10-03T00:00:00Z", "type": "mtnw1UZB", "userId": "ryTThHQG", "vat": 94}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ProcessUserSubscriptionNotification \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'Ls2CJTlG' \
    --userId 'GoBL0pGV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'ProcessUserSubscriptionNotification' test.out

#- 243 AcquireUserTicket
# body param: body
echo '{"count": 61, "orderNo": "7g8McYv2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op AcquireUserTicket \
    --boothName '3Szaf0b7' \
    --namespace $AB_NAMESPACE \
    --userId 'o0oHJ7Kn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'AcquireUserTicket' test.out

#- 244 QueryUserCurrencyWallets
$CLI_EXE \
    --sn platform \
    --op QueryUserCurrencyWallets \
    --namespace $AB_NAMESPACE \
    --userId 'l5oaAD9A' \
    > test.out 2>&1
eval_tap $? 244 'QueryUserCurrencyWallets' test.out

#- 245 ListUserCurrencyTransactions
$CLI_EXE \
    --sn platform \
    --op ListUserCurrencyTransactions \
    --currencyCode 'vOAq6lWt' \
    --namespace $AB_NAMESPACE \
    --userId 'hJyD8YVV' \
    --limit '19' \
    --offset '16' \
    > test.out 2>&1
eval_tap $? 245 'ListUserCurrencyTransactions' test.out

#- 246 CheckWallet
eval_tap 0 246 'CheckWallet # SKIP deprecated' test.out

#- 247 CreditUserWallet
# body param: body
echo '{"amount": 52, "expireAt": "1999-11-03T00:00:00Z", "origin": "System", "reason": "yY9ylxbU", "source": "OTHER"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreditUserWallet \
    --currencyCode 'JfCVRXBP' \
    --namespace $AB_NAMESPACE \
    --userId '65hLOrTu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'CreditUserWallet' test.out

#- 248 PayWithUserWallet
# body param: body
echo '{"amount": 39, "walletPlatform": "Xbox"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PayWithUserWallet \
    --currencyCode 'lZY0CAfe' \
    --namespace $AB_NAMESPACE \
    --userId 'aru2eimh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PayWithUserWallet' test.out

#- 249 GetUserWallet
eval_tap 0 249 'GetUserWallet # SKIP deprecated' test.out

#- 250 DebitUserWallet
eval_tap 0 250 'DebitUserWallet # SKIP deprecated' test.out

#- 251 DisableUserWallet
eval_tap 0 251 'DisableUserWallet # SKIP deprecated' test.out

#- 252 EnableUserWallet
eval_tap 0 252 'EnableUserWallet # SKIP deprecated' test.out

#- 253 ListUserWalletTransactions
eval_tap 0 253 'ListUserWalletTransactions # SKIP deprecated' test.out

#- 254 ListViews
$CLI_EXE \
    --sn platform \
    --op ListViews \
    --namespace $AB_NAMESPACE \
    --storeId '1rJFp55C' \
    > test.out 2>&1
eval_tap $? 254 'ListViews' test.out

#- 255 CreateView
# body param: body
echo '{"displayOrder": 33, "localizations": {"xdFW5vvr": {"description": "MQTVYmho", "localExt": {"QDaR2ewf": {}, "FrnGtZ9p": {}, "uyvWsnku": {}}, "longDescription": "OomtnlHR", "title": "QI39tbUi"}, "swBTo41E": {"description": "9mkrY5NX", "localExt": {"0zKqMlCi": {}, "KMPuK72U": {}, "KcePqy6C": {}}, "longDescription": "E2Mc3IrU", "title": "dl3oKZBf"}, "thCT0bLB": {"description": "QfTCmcTU", "localExt": {"9YZy1ccr": {}, "0r527SVA": {}, "fzBq9j96": {}}, "longDescription": "7lcgmGoH", "title": "jNKGgYOT"}}, "name": "FYAXyNg3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreateView \
    --namespace $AB_NAMESPACE \
    --storeId '1tHAsruO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'CreateView' test.out

#- 256 GetView
$CLI_EXE \
    --sn platform \
    --op GetView \
    --namespace $AB_NAMESPACE \
    --viewId '5G5Dg7Qb' \
    --storeId 'sd2eRPdI' \
    > test.out 2>&1
eval_tap $? 256 'GetView' test.out

#- 257 UpdateView
# body param: body
echo '{"displayOrder": 8, "localizations": {"rBZZPvu7": {"description": "Ykqhsj8E", "localExt": {"8G3uUvy5": {}, "LTWc7LIP": {}, "oJONVQ8E": {}}, "longDescription": "Ec4wpNaD", "title": "cbNtTvss"}, "iJRa0fpg": {"description": "hoUy5kja", "localExt": {"AqO1pJXI": {}, "fAUUq2Ad": {}, "ZT0VC9HJ": {}}, "longDescription": "I84XB6g3", "title": "wfvE3LC4"}, "SNKBWHKE": {"description": "6UMT3CbK", "localExt": {"7gZZyHRj": {}, "e8WnZGDb": {}, "wM0ItTE6": {}}, "longDescription": "FRray63a", "title": "ZVqPAfJL"}}, "name": "XRrM2rEK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateView \
    --namespace $AB_NAMESPACE \
    --viewId 'UWk3VNJ6' \
    --storeId '06QFVIPQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'UpdateView' test.out

#- 258 DeleteView
$CLI_EXE \
    --sn platform \
    --op DeleteView \
    --namespace $AB_NAMESPACE \
    --viewId 'A7p9pzuW' \
    --storeId 'Mtq8IO34' \
    > test.out 2>&1
eval_tap $? 258 'DeleteView' test.out

#- 259 QueryWallets
eval_tap 0 259 'QueryWallets # SKIP deprecated' test.out

#- 260 GetWallet
eval_tap 0 260 'GetWallet # SKIP deprecated' test.out

#- 261 SyncOrders
$CLI_EXE \
    --sn platform \
    --op SyncOrders \
    --nextEvaluatedKey 'MJwNv6Bq' \
    --end 'trnce0L6' \
    --start 'IXWQJRIz' \
    > test.out 2>&1
eval_tap $? 261 'SyncOrders' test.out

#- 262 TestAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["FuX4OOjv", "7p0Tl3Jm", "GrM7UTEf"], "apiKey": "mPRoSRzO", "authoriseAsCapture": false, "blockedPaymentMethods": ["a4AlShdv", "4jpG6kaJ", "FWcsRI75"], "clientKey": "nKY6MLIn", "dropInSettings": "Ha8a1p3l", "liveEndpointUrlPrefix": "mQQtjqDQ", "merchantAccount": "iEhHE6xT", "notificationHmacKey": "19OVw7rJ", "notificationPassword": "o5VDv1K0", "notificationUsername": "nDrs040l", "returnUrl": "pBdVTUXU", "settings": "qjmbvtbR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'TestAdyenConfig' test.out

#- 263 TestAliPayConfig
# body param: body
echo '{"appId": "l33N0iqh", "privateKey": "t2ob3zsV", "publicKey": "aVGWyYZp", "returnUrl": "ii4rQKcx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'TestAliPayConfig' test.out

#- 264 TestCheckoutConfig
# body param: body
echo '{"publicKey": "Ae617jyy", "secretKey": "ytdvPqxa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'TestCheckoutConfig' test.out

#- 265 DebugMatchedPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentMerchantConfig \
    --namespace_ '523qIoUH' \
    --region '2Hv8XXl7' \
    > test.out 2>&1
eval_tap $? 265 'DebugMatchedPaymentMerchantConfig' test.out

#- 266 TestPayPalConfig
# body param: body
echo '{"clientID": "MWoGBUCa", "clientSecret": "WTbT9xQU", "returnUrl": "6AQyVx7M", "webHookId": "ilKVFDtA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfig \
    --sandbox 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'TestPayPalConfig' test.out

#- 267 TestStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["FyKqExMe", "TLPrQ3sy", "TRSh7t8q"], "publishableKey": "vIVM7VHF", "secretKey": "Ktrf2F3b", "webhookSecret": "YIUrmBUc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestStripeConfig \
    --sandbox 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'TestStripeConfig' test.out

#- 268 TestWxPayConfig
# body param: body
echo '{"appId": "0edNYz6J", "key": "Dfn9QXSj", "mchid": "weo0EAF4", "returnUrl": "2imJIZg3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'TestWxPayConfig' test.out

#- 269 TestXsollaConfig
# body param: body
echo '{"apiKey": "bx732RpK", "flowCompletionUrl": "UjapxdQQ", "merchantId": 37, "projectId": 32, "projectSecretKey": "RHaTMClk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'TestXsollaConfig' test.out

#- 270 GetPaymentMerchantConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentMerchantConfig \
    --id '8yoKbN7T' \
    > test.out 2>&1
eval_tap $? 270 'GetPaymentMerchantConfig' test.out

#- 271 UpdateAdyenConfig
# body param: body
echo '{"allowedPaymentMethods": ["1LE9dVRq", "8GXfUBfz", "l1jOa95L"], "apiKey": "4b9WKeFy", "authoriseAsCapture": true, "blockedPaymentMethods": ["LaglxOki", "rOtMX6PV", "gLsdJ0YK"], "clientKey": "Vh27ECfH", "dropInSettings": "BrJG1af6", "liveEndpointUrlPrefix": "JW5yQq7O", "merchantAccount": "7StYhGDi", "notificationHmacKey": "3wK1ErNB", "notificationPassword": "UuUHlgnG", "notificationUsername": "m81lsuk4", "returnUrl": "RRxwmRnQ", "settings": "BpHyQfgS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAdyenConfig \
    --id 'TetVp4Lf' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'UpdateAdyenConfig' test.out

#- 272 TestAdyenConfigById
$CLI_EXE \
    --sn platform \
    --op TestAdyenConfigById \
    --id 'JoOcgB6e' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 272 'TestAdyenConfigById' test.out

#- 273 UpdateAliPayConfig
# body param: body
echo '{"appId": "IcFuSkfL", "privateKey": "KnDuOtFW", "publicKey": "gT7tvhfj", "returnUrl": "pTXGE9Qq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateAliPayConfig \
    --id 'SfOoNvZj' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'UpdateAliPayConfig' test.out

#- 274 TestAliPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestAliPayConfigById \
    --id 'vMJbkidA' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 274 'TestAliPayConfigById' test.out

#- 275 UpdateCheckoutConfig
# body param: body
echo '{"publicKey": "YPXpA3IN", "secretKey": "jZMI9pcw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateCheckoutConfig \
    --id 'ZB6XffdC' \
    --sandbox 'true' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'UpdateCheckoutConfig' test.out

#- 276 TestCheckoutConfigById
$CLI_EXE \
    --sn platform \
    --op TestCheckoutConfigById \
    --id 'O1Wci6KG' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 276 'TestCheckoutConfigById' test.out

#- 277 UpdatePayPalConfig
# body param: body
echo '{"clientID": "GeUqPR8k", "clientSecret": "pMilXdqC", "returnUrl": "wYnhTkkV", "webHookId": "pEMl91Ij"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePayPalConfig \
    --id 'ty5Md2p0' \
    --sandbox 'true' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'UpdatePayPalConfig' test.out

#- 278 TestPayPalConfigById
$CLI_EXE \
    --sn platform \
    --op TestPayPalConfigById \
    --id 'OBIsmVyy' \
    --sandbox 'true' \
    > test.out 2>&1
eval_tap $? 278 'TestPayPalConfigById' test.out

#- 279 UpdateStripeConfig
# body param: body
echo '{"allowedPaymentMethodTypes": ["Bx859Q0O", "vXwHKXmq", "zsPbK27o"], "publishableKey": "NowFMv07", "secretKey": "7bhKjMGb", "webhookSecret": "YcqOLZxN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateStripeConfig \
    --id 'mS1ucTmK' \
    --sandbox 'false' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'UpdateStripeConfig' test.out

#- 280 TestStripeConfigById
$CLI_EXE \
    --sn platform \
    --op TestStripeConfigById \
    --id '4AeOSgDJ' \
    --sandbox 'false' \
    > test.out 2>&1
eval_tap $? 280 'TestStripeConfigById' test.out

#- 281 UpdateWxPayConfig
# body param: body
echo '{"appId": "KLGO95gs", "key": "srLDLBL4", "mchid": "Zffv2SGv", "returnUrl": "HQeTiic6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfig \
    --id 'zkiPVhgd' \
    --validate 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'UpdateWxPayConfig' test.out

#- 282 UpdateWxPayConfigCert
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op UpdateWxPayConfigCert \
    --id 'qfxzSVQn' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 282 'UpdateWxPayConfigCert' test.out

#- 283 TestWxPayConfigById
$CLI_EXE \
    --sn platform \
    --op TestWxPayConfigById \
    --id 'sNLAtqxX' \
    > test.out 2>&1
eval_tap $? 283 'TestWxPayConfigById' test.out

#- 284 UpdateXsollaConfig
# body param: body
echo '{"apiKey": "kNT3Ve55", "flowCompletionUrl": "PbVDNNcy", "merchantId": 24, "projectId": 77, "projectSecretKey": "Rz93sKxR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaConfig \
    --id 'gojbsTMf' \
    --validate 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'UpdateXsollaConfig' test.out

#- 285 TestXsollaConfigById
$CLI_EXE \
    --sn platform \
    --op TestXsollaConfigById \
    --id 'G0R0W5mC' \
    > test.out 2>&1
eval_tap $? 285 'TestXsollaConfigById' test.out

#- 286 UpdateXsollaUIConfig
# body param: body
echo '{"device": "MOBILE", "showCloseButton": true, "size": "MEDIUM", "theme": "DARK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdateXsollaUIConfig \
    --id '6A2KfhPQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'UpdateXsollaUIConfig' test.out

#- 287 QueryPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op QueryPaymentProviderConfig \
    --limit '71' \
    --namespace_ 'HyUbxV8M' \
    --offset '57' \
    --region 'SEGQmWO9' \
    > test.out 2>&1
eval_tap $? 287 'QueryPaymentProviderConfig' test.out

#- 288 CreatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "iD978oLl", "region": "61BAjiJh", "sandboxTaxJarApiToken": "10CRMtpV", "specials": ["WALLET", "WALLET", "ALIPAY"], "taxJarApiToken": "lKzLDtXU", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op CreatePaymentProviderConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'CreatePaymentProviderConfig' test.out

#- 289 GetAggregatePaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetAggregatePaymentProviders \
    > test.out 2>&1
eval_tap $? 289 'GetAggregatePaymentProviders' test.out

#- 290 DebugMatchedPaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DebugMatchedPaymentProviderConfig \
    --namespace_ 'm4HkWK2R' \
    --region 'm2FnRyPE' \
    > test.out 2>&1
eval_tap $? 290 'DebugMatchedPaymentProviderConfig' test.out

#- 291 GetSpecialPaymentProviders
$CLI_EXE \
    --sn platform \
    --op GetSpecialPaymentProviders \
    > test.out 2>&1
eval_tap $? 291 'GetSpecialPaymentProviders' test.out

#- 292 UpdatePaymentProviderConfig
# body param: body
echo '{"aggregate": "XSOLLA", "namespace": "M1D6ArkF", "region": "4ZrMQEzp", "sandboxTaxJarApiToken": "9ucGpTwD", "specials": ["WXPAY", "WXPAY", "STRIPE"], "taxJarApiToken": "XePsg5bl", "taxJarEnabled": true, "useGlobalTaxJarApiToken": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentProviderConfig \
    --id 'C5kpTx6Y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'UpdatePaymentProviderConfig' test.out

#- 293 DeletePaymentProviderConfig
$CLI_EXE \
    --sn platform \
    --op DeletePaymentProviderConfig \
    --id 'OvO373ff' \
    > test.out 2>&1
eval_tap $? 293 'DeletePaymentProviderConfig' test.out

#- 294 GetPaymentTaxConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxConfig \
    > test.out 2>&1
eval_tap $? 294 'GetPaymentTaxConfig' test.out

#- 295 UpdatePaymentTaxConfig
# body param: body
echo '{"sandboxTaxJarApiToken": "M2Yhrkh6", "taxJarApiToken": "aGSFhNoI", "taxJarEnabled": false, "taxJarProductCodesMapping": {"JrGwbIGk": "AEqSvXYd", "Lv1pLEQk": "li5ppV5q", "Sjn1iSS5": "7qDbVpUz"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op UpdatePaymentTaxConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'UpdatePaymentTaxConfig' test.out

#- 296 SyncPaymentOrders
$CLI_EXE \
    --sn platform \
    --op SyncPaymentOrders \
    --nextEvaluatedKey 'VYJPQrVW' \
    --end 'IGzkoaj1' \
    --start 'rXwFVrav' \
    > test.out 2>&1
eval_tap $? 296 'SyncPaymentOrders' test.out

#- 297 PublicGetRootCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetRootCategories \
    --namespace $AB_NAMESPACE \
    --language 'Y4AVk9hh' \
    --storeId '2xUXFY8Q' \
    > test.out 2>&1
eval_tap $? 297 'PublicGetRootCategories' test.out

#- 298 DownloadCategories
$CLI_EXE \
    --sn platform \
    --op DownloadCategories \
    --namespace $AB_NAMESPACE \
    --language 'cNDphu1B' \
    --storeId 'yLC23Lwf' \
    > test.out 2>&1
eval_tap $? 298 'DownloadCategories' test.out

#- 299 PublicGetCategory
$CLI_EXE \
    --sn platform \
    --op PublicGetCategory \
    --categoryPath 'C74NeZWa' \
    --namespace $AB_NAMESPACE \
    --language '7OwdIdiC' \
    --storeId '3otIroXN' \
    > test.out 2>&1
eval_tap $? 299 'PublicGetCategory' test.out

#- 300 PublicGetChildCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetChildCategories \
    --categoryPath '0m86ABgZ' \
    --namespace $AB_NAMESPACE \
    --language '1pffMT3w' \
    --storeId 'uMktbiHz' \
    > test.out 2>&1
eval_tap $? 300 'PublicGetChildCategories' test.out

#- 301 PublicGetDescendantCategories
$CLI_EXE \
    --sn platform \
    --op PublicGetDescendantCategories \
    --categoryPath 'ghLsujrw' \
    --namespace $AB_NAMESPACE \
    --language 'J9Ru2sgW' \
    --storeId 'dBjsY1qa' \
    > test.out 2>&1
eval_tap $? 301 'PublicGetDescendantCategories' test.out

#- 302 PublicListCurrencies
$CLI_EXE \
    --sn platform \
    --op PublicListCurrencies \
    --namespace $AB_NAMESPACE \
    --currencyType 'REAL' \
    > test.out 2>&1
eval_tap $? 302 'PublicListCurrencies' test.out

#- 303 PublicGetItemByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetItemByAppId \
    --namespace $AB_NAMESPACE \
    --language '6cy0cEZl' \
    --region '7bTLrfsn' \
    --storeId 'C98kLw1f' \
    --appId 'vA5ft44i' \
    > test.out 2>&1
eval_tap $? 303 'PublicGetItemByAppId' test.out

#- 304 PublicQueryItems
$CLI_EXE \
    --sn platform \
    --op PublicQueryItems \
    --namespace $AB_NAMESPACE \
    --appType 'DLC' \
    --baseAppId '49H1fKkc' \
    --categoryPath 'JjaPMOyj' \
    --features 'UMJDlm3R' \
    --includeSubCategoryItem 'true' \
    --itemType 'COINS' \
    --language 'bRL4snW0' \
    --limit '53' \
    --offset '66' \
    --region 'TrqEhMS9' \
    --sortBy '["displayOrder:desc", "createdAt", "displayOrder"]' \
    --storeId 'qF6Yjn1O' \
    --tags 'gNzwHqsG' \
    > test.out 2>&1
eval_tap $? 304 'PublicQueryItems' test.out

#- 305 PublicGetItemBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetItemBySku \
    --namespace $AB_NAMESPACE \
    --language 'gMYQcfh3' \
    --region 'OUCPf9Hw' \
    --storeId 'BsrzPUVe' \
    --sku 'tPpilovX' \
    > test.out 2>&1
eval_tap $? 305 'PublicGetItemBySku' test.out

#- 306 PublicBulkGetItems
$CLI_EXE \
    --sn platform \
    --op PublicBulkGetItems \
    --namespace $AB_NAMESPACE \
    --language 'ZpA8ei3z' \
    --region '62fwOZo4' \
    --storeId 'CsjFRXuZ' \
    --itemIds '2DQzxABC' \
    > test.out 2>&1
eval_tap $? 306 'PublicBulkGetItems' test.out

#- 307 PublicValidateItemPurchaseCondition
# body param: body
echo '{"itemIds": ["TCfX5E8U", "qDkv7pw3", "aZwYPbNd"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicValidateItemPurchaseCondition \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'PublicValidateItemPurchaseCondition' test.out

#- 308 PublicSearchItems
$CLI_EXE \
    --sn platform \
    --op PublicSearchItems \
    --namespace $AB_NAMESPACE \
    --itemType 'LOOTBOX' \
    --limit '28' \
    --offset '53' \
    --region '9y3kl86g' \
    --storeId 'rVfUAvUo' \
    --keyword 'x6QkbRoW' \
    --language '9DGhRoxJ' \
    > test.out 2>&1
eval_tap $? 308 'PublicSearchItems' test.out

#- 309 PublicGetApp
$CLI_EXE \
    --sn platform \
    --op PublicGetApp \
    --itemId 'LzzQPN9u' \
    --namespace $AB_NAMESPACE \
    --language 'vYfv095c' \
    --region 'WueNslzO' \
    --storeId 'GdfqHMnY' \
    > test.out 2>&1
eval_tap $? 309 'PublicGetApp' test.out

#- 310 PublicGetItemDynamicData
$CLI_EXE \
    --sn platform \
    --op PublicGetItemDynamicData \
    --itemId 'PMxll0cv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 310 'PublicGetItemDynamicData' test.out

#- 311 PublicGetItem
$CLI_EXE \
    --sn platform \
    --op PublicGetItem \
    --itemId 'W9q7uZ1u' \
    --namespace $AB_NAMESPACE \
    --language 'QmOpPULy' \
    --populateBundle 'false' \
    --region 'zuSkqnys' \
    --storeId '1LcTuqw1' \
    > test.out 2>&1
eval_tap $? 311 'PublicGetItem' test.out

#- 312 GetPaymentCustomization
eval_tap 0 312 'GetPaymentCustomization # SKIP deprecated' test.out

#- 313 PublicGetPaymentUrl
# body param: body
echo '{"paymentOrderNo": "TjQpT1b6", "paymentProvider": "PAYPAL", "returnUrl": "ejteM1TX", "ui": "6TpddFdt", "zipCode": "SUcFrOcP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentUrl \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'PublicGetPaymentUrl' test.out

#- 314 PublicGetPaymentMethods
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentMethods \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo '0AHhoQYB' \
    > test.out 2>&1
eval_tap $? 314 'PublicGetPaymentMethods' test.out

#- 315 PublicGetUnpaidPaymentOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUnpaidPaymentOrder \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'qD0JCjML' \
    > test.out 2>&1
eval_tap $? 315 'PublicGetUnpaidPaymentOrder' test.out

#- 316 Pay
# body param: body
echo '{"token": "Pn1JFDUn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op Pay \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'MzePqHFQ' \
    --paymentProvider 'CHECKOUT' \
    --zipCode 'moeLxMPN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'Pay' test.out

#- 317 PublicCheckPaymentOrderPaidStatus
$CLI_EXE \
    --sn platform \
    --op PublicCheckPaymentOrderPaidStatus \
    --namespace $AB_NAMESPACE \
    --paymentOrderNo 'VWcYzh92' \
    > test.out 2>&1
eval_tap $? 317 'PublicCheckPaymentOrderPaidStatus' test.out

#- 318 GetPaymentPublicConfig
$CLI_EXE \
    --sn platform \
    --op GetPaymentPublicConfig \
    --namespace $AB_NAMESPACE \
    --sandbox 'true' \
    --paymentProvider 'CHECKOUT' \
    --region 'LrQJU6EZ' \
    > test.out 2>&1
eval_tap $? 318 'GetPaymentPublicConfig' test.out

#- 319 PublicGetQRCode
$CLI_EXE \
    --sn platform \
    --op PublicGetQRCode \
    --namespace $AB_NAMESPACE \
    --code 'of7Haf36' \
    > test.out 2>&1
eval_tap $? 319 'PublicGetQRCode' test.out

#- 320 PublicNormalizePaymentReturnUrl
$CLI_EXE \
    --sn platform \
    --op PublicNormalizePaymentReturnUrl \
    --namespace $AB_NAMESPACE \
    --payerID 'WMVfWiWi' \
    --foreinginvoice '1GrW57dF' \
    --invoiceId 'lk42R1Qi' \
    --payload 'm0jnz68h' \
    --redirectResult 'rdpej8WX' \
    --resultCode 'vjSxe5RD' \
    --sessionId 'kxCzIyPT' \
    --status 'ZVLzHaYY' \
    --token '7zYjCAL5' \
    --type 'liAWuYJX' \
    --userId 'dVvcFXS0' \
    --orderNo '77gr1z0c' \
    --paymentOrderNo '8Ry5r4Rr' \
    --paymentProvider 'WALLET' \
    --returnUrl '7tJuDqdV' \
    > test.out 2>&1
eval_tap $? 320 'PublicNormalizePaymentReturnUrl' test.out

#- 321 GetPaymentTaxValue
$CLI_EXE \
    --sn platform \
    --op GetPaymentTaxValue \
    --namespace $AB_NAMESPACE \
    --zipCode 'AtkhdtqR' \
    --paymentOrderNo 't2oSW2go' \
    --paymentProvider 'CHECKOUT' \
    > test.out 2>&1
eval_tap $? 321 'GetPaymentTaxValue' test.out

#- 322 GetRewardByCode
$CLI_EXE \
    --sn platform \
    --op GetRewardByCode \
    --namespace $AB_NAMESPACE \
    --rewardCode '4U08hsQC' \
    > test.out 2>&1
eval_tap $? 322 'GetRewardByCode' test.out

#- 323 QueryRewards1
$CLI_EXE \
    --sn platform \
    --op QueryRewards1 \
    --namespace $AB_NAMESPACE \
    --eventTopic 'oDcodClt' \
    --limit '98' \
    --offset '17' \
    --sortBy '["namespace", "namespace:asc"]' \
    > test.out 2>&1
eval_tap $? 323 'QueryRewards1' test.out

#- 324 GetReward1
$CLI_EXE \
    --sn platform \
    --op GetReward1 \
    --namespace $AB_NAMESPACE \
    --rewardId 'vtEMTr6Y' \
    > test.out 2>&1
eval_tap $? 324 'GetReward1' test.out

#- 325 PublicListStores
$CLI_EXE \
    --sn platform \
    --op PublicListStores \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 325 'PublicListStores' test.out

#- 326 PublicExistsAnyMyActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyMyActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --appIds '["rysMfHMn", "mjJFGwOI", "GX7W02t1"]' \
    --itemIds '["tSab6jpC", "qgvusDqY", "Ddp5FnJm"]' \
    --skus '["NxhHQAz5", "eHhPH2zg", "dPEainV1"]' \
    > test.out 2>&1
eval_tap $? 326 'PublicExistsAnyMyActiveEntitlement' test.out

#- 327 PublicGetMyAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --appId 'VDzJOZBZ' \
    > test.out 2>&1
eval_tap $? 327 'PublicGetMyAppEntitlementOwnershipByAppId' test.out

#- 328 PublicGetMyEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'LOOTBOX' \
    --itemId '8xHicWE8' \
    > test.out 2>&1
eval_tap $? 328 'PublicGetMyEntitlementOwnershipByItemId' test.out

#- 329 PublicGetMyEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetMyEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --entitlementClazz 'MEDIA' \
    --sku 'UCeEcCEm' \
    > test.out 2>&1
eval_tap $? 329 'PublicGetMyEntitlementOwnershipBySku' test.out

#- 330 PublicGetEntitlementOwnershipToken
$CLI_EXE \
    --sn platform \
    --op PublicGetEntitlementOwnershipToken \
    --namespace $AB_NAMESPACE \
    --appIds '["VEBOUtxi", "CgtDeYbp", "KswJWHGh"]' \
    --itemIds '["gpZ0I02P", "jNpJzN2F", "loh8fZU8"]' \
    --skus '["95tN1iS1", "fWlNbPjm", "m4JS1mhI"]' \
    > test.out 2>&1
eval_tap $? 330 'PublicGetEntitlementOwnershipToken' test.out

#- 331 PublicGetMyWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetMyWallet \
    --currencyCode 'wQ8QE8S9' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 331 'PublicGetMyWallet' test.out

#- 332 SyncEpicGameDLC
# body param: body
echo '{"epicGamesJwtToken": "AA8YLoGV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGameDLC \
    --namespace $AB_NAMESPACE \
    --userId 'HrKJYFX3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'SyncEpicGameDLC' test.out

#- 333 PublicSyncPsnDlcInventory
# body param: body
echo '{"serviceLabel": 22}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventory \
    --namespace $AB_NAMESPACE \
    --userId 'AKBiX1zr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicSyncPsnDlcInventory' test.out

#- 334 PublicSyncPsnDlcInventoryWithMultipleServiceLabels
# body param: body
echo '{"serviceLabels": [12, 95]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSyncPsnDlcInventoryWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'QazhZM7L' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'PublicSyncPsnDlcInventoryWithMultipleServiceLabels' test.out

#- 335 SyncSteamDLC
# body param: body
echo '{"appId": "xzTkNhHQ", "steamId": "Djom8YpU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamDLC \
    --namespace $AB_NAMESPACE \
    --userId 'gZZO4RZQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'SyncSteamDLC' test.out

#- 336 SyncXboxDLC
# body param: body
echo '{"xstsToken": "11onqEHp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxDLC \
    --namespace $AB_NAMESPACE \
    --userId 'a1xEGu6X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 336 'SyncXboxDLC' test.out

#- 337 PublicQueryUserEntitlements
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlements \
    --namespace $AB_NAMESPACE \
    --userId '2UnnMHby' \
    --appType 'SOFTWARE' \
    --entitlementClazz 'OPTIONBOX' \
    --entitlementName 'MMk7T5zx' \
    --features '["fABkAAAm", "TfnJtNF4", "9QtQm9fb"]' \
    --itemId '["nRt8oAsk", "diBsFK4c", "sLgCG1fd"]' \
    --limit '37' \
    --offset '86' \
    > test.out 2>&1
eval_tap $? 337 'PublicQueryUserEntitlements' test.out

#- 338 PublicGetUserAppEntitlementByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'DY2PpiUR' \
    --appId 'R84IIt0u' \
    > test.out 2>&1
eval_tap $? 338 'PublicGetUserAppEntitlementByAppId' test.out

#- 339 PublicQueryUserEntitlementsByAppType
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserEntitlementsByAppType \
    --namespace $AB_NAMESPACE \
    --userId 'zr28tbnY' \
    --limit '6' \
    --offset '21' \
    --appType 'SOFTWARE' \
    > test.out 2>&1
eval_tap $? 339 'PublicQueryUserEntitlementsByAppType' test.out

#- 340 PublicGetUserEntitlementByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementByItemId \
    --namespace $AB_NAMESPACE \
    --userId '27YwR8O8' \
    --entitlementClazz 'OPTIONBOX' \
    --itemId 'p1UgsMRM' \
    > test.out 2>&1
eval_tap $? 340 'PublicGetUserEntitlementByItemId' test.out

#- 341 PublicGetUserEntitlementBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementBySku \
    --namespace $AB_NAMESPACE \
    --userId 'K4HiZrVt' \
    --entitlementClazz 'LOOTBOX' \
    --sku 'ZLmjyDRA' \
    > test.out 2>&1
eval_tap $? 341 'PublicGetUserEntitlementBySku' test.out

#- 342 PublicExistsAnyUserActiveEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicExistsAnyUserActiveEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'Z93p4SR7' \
    --appIds '["xtwnDxGL", "Wrqj8fNw", "DIZ8NdFG"]' \
    --itemIds '["FxbmnSF6", "0s4tPlxR", "donciePg"]' \
    --skus '["HBsSzsFn", "Cta0zild", "x6HubNb3"]' \
    > test.out 2>&1
eval_tap $? 342 'PublicExistsAnyUserActiveEntitlement' test.out

#- 343 PublicGetUserAppEntitlementOwnershipByAppId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserAppEntitlementOwnershipByAppId \
    --namespace $AB_NAMESPACE \
    --userId 'doIQnw65' \
    --appId '1X0H3hSB' \
    > test.out 2>&1
eval_tap $? 343 'PublicGetUserAppEntitlementOwnershipByAppId' test.out

#- 344 PublicGetUserEntitlementOwnershipByItemId
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemId \
    --namespace $AB_NAMESPACE \
    --userId 'MsbcuXkW' \
    --entitlementClazz 'ENTITLEMENT' \
    --itemId 'o9N62Zbj' \
    > test.out 2>&1
eval_tap $? 344 'PublicGetUserEntitlementOwnershipByItemId' test.out

#- 345 PublicGetUserEntitlementOwnershipByItemIds
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipByItemIds \
    --namespace $AB_NAMESPACE \
    --userId 'EvO670qK' \
    --ids '["IDUl3Nfi", "bSqdbJAw", "LQPj2fsS"]' \
    > test.out 2>&1
eval_tap $? 345 'PublicGetUserEntitlementOwnershipByItemIds' test.out

#- 346 PublicGetUserEntitlementOwnershipBySku
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlementOwnershipBySku \
    --namespace $AB_NAMESPACE \
    --userId '4uYMcuLk' \
    --entitlementClazz 'APP' \
    --sku 'eHWrlCx8' \
    > test.out 2>&1
eval_tap $? 346 'PublicGetUserEntitlementOwnershipBySku' test.out

#- 347 PublicGetUserEntitlement
$CLI_EXE \
    --sn platform \
    --op PublicGetUserEntitlement \
    --entitlementId 'jDJmDk3v' \
    --namespace $AB_NAMESPACE \
    --userId 'er0TKf6d' \
    > test.out 2>&1
eval_tap $? 347 'PublicGetUserEntitlement' test.out

#- 348 PublicConsumeUserEntitlement
# body param: body
echo '{"options": ["ha9vwsZz", "cAVOIYL4", "M37YUpnS"], "requestId": "Fu8dSv0s", "useCount": 52}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicConsumeUserEntitlement \
    --entitlementId 'y5tkIvzK' \
    --namespace $AB_NAMESPACE \
    --userId 'YTTEPg1W' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 348 'PublicConsumeUserEntitlement' test.out

#- 349 PublicRedeemCode
# body param: body
echo '{"code": "pglbEZwz", "language": "Xi-aafj", "region": "VkXOu4WP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicRedeemCode \
    --namespace $AB_NAMESPACE \
    --userId 'dL15T9fv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 349 'PublicRedeemCode' test.out

#- 350 PublicFulfillAppleIAPItem
# body param: body
echo '{"excludeOldTransactions": true, "language": "iMQF_mU", "productId": "QAV5hZsm", "receiptData": "G1Q7ssoW", "region": "uPavhspp", "transactionId": "U5GhJTMN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillAppleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'CHHbRhmf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicFulfillAppleIAPItem' test.out

#- 351 SyncEpicGamesInventory
# body param: body
echo '{"epicGamesJwtToken": "T57VA5SI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncEpicGamesInventory \
    --namespace $AB_NAMESPACE \
    --userId 'vN6MH5Mp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 351 'SyncEpicGamesInventory' test.out

#- 352 PublicFulfillGoogleIAPItem
# body param: body
echo '{"autoAck": true, "language": "Orq-RN", "orderId": "BtFKRIhz", "packageName": "wqNBpTIl", "productId": "RUL0aR11", "purchaseTime": 36, "purchaseToken": "o9B6gtWz", "region": "SEdSP8sb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicFulfillGoogleIAPItem \
    --namespace $AB_NAMESPACE \
    --userId 'eS5qHY1X' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 352 'PublicFulfillGoogleIAPItem' test.out

#- 353 PublicReconcilePlayStationStore
# body param: body
echo '{"currencyCode": "Q39t3QY2", "price": 0.9940028777317501, "productId": "CKzOxzgj", "serviceLabel": 30}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStore \
    --namespace $AB_NAMESPACE \
    --userId '24qx0HAX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 353 'PublicReconcilePlayStationStore' test.out

#- 354 PublicReconcilePlayStationStoreWithMultipleServiceLabels
# body param: body
echo '{"currencyCode": "CreIyeTx", "price": 0.327511741998018, "productId": "LXKVmWz5", "serviceLabels": [59, 4, 84]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicReconcilePlayStationStoreWithMultipleServiceLabels \
    --namespace $AB_NAMESPACE \
    --userId 'X0ujdgQf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 354 'PublicReconcilePlayStationStoreWithMultipleServiceLabels' test.out

#- 355 SyncStadiaEntitlement
# body param: body
echo '{"appId": "wGjWWcxx", "language": "ah-VtvN", "region": "9s8Laxpq", "stadiaPlayerId": "7mGtrzHn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncStadiaEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'vEDCqS8s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 355 'SyncStadiaEntitlement' test.out

#- 356 SyncSteamInventory
# body param: body
echo '{"appId": "r4Z9PVJU", "currencyCode": "pEKpWSby", "language": "AveP-GN", "price": 0.2545470641589309, "productId": "Nr8UrkRS", "region": "bIZUFzJ8", "steamId": "jcbCryhW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncSteamInventory \
    --namespace $AB_NAMESPACE \
    --userId 'l3y8VSSX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 356 'SyncSteamInventory' test.out

#- 357 SyncTwitchDropsEntitlement
# body param: body
echo '{"gameId": "6fMm4Ddg", "language": "dEJa-hHOi", "region": "XKbVl5fo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncTwitchDropsEntitlement \
    --namespace $AB_NAMESPACE \
    --userId 'sXyZQs1H' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 357 'SyncTwitchDropsEntitlement' test.out

#- 358 SyncXboxInventory
# body param: body
echo '{"currencyCode": "72fxEazU", "price": 0.6650971395827413, "productId": "CqkEhlHl", "xstsToken": "kybbFUVY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op SyncXboxInventory \
    --namespace $AB_NAMESPACE \
    --userId 'JvWbSXT4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 358 'SyncXboxInventory' test.out

#- 359 PublicQueryUserOrders
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserOrders \
    --namespace $AB_NAMESPACE \
    --userId 'kVhGFivU' \
    --itemId 'IXhoEiLK' \
    --limit '75' \
    --offset '71' \
    --status 'FULFILLED' \
    > test.out 2>&1
eval_tap $? 359 'PublicQueryUserOrders' test.out

#- 360 PublicCreateUserOrder
# body param: body
echo '{"currencyCode": "UYkmcQQM", "discountedPrice": 13, "ext": {"fVwQ7h40": {}, "8LhESuGX": {}, "GXkCuDCZ": {}}, "itemId": "5e47WEy1", "language": "scjx-OP", "price": 76, "quantity": 76, "region": "zbmzBdrg", "returnUrl": "isO6prOc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCreateUserOrder \
    --namespace $AB_NAMESPACE \
    --userId 'X8aUXuvb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 360 'PublicCreateUserOrder' test.out

#- 361 PublicGetUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'd6Zmvwf6' \
    --userId 'bjnnnwWJ' \
    > test.out 2>&1
eval_tap $? 361 'PublicGetUserOrder' test.out

#- 362 PublicCancelUserOrder
$CLI_EXE \
    --sn platform \
    --op PublicCancelUserOrder \
    --namespace $AB_NAMESPACE \
    --orderNo 'mNhq1r18' \
    --userId 'ty9hF73C' \
    > test.out 2>&1
eval_tap $? 362 'PublicCancelUserOrder' test.out

#- 363 PublicGetUserOrderHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserOrderHistories \
    --namespace $AB_NAMESPACE \
    --orderNo 'jN0e6NWI' \
    --userId 'wa114B29' \
    > test.out 2>&1
eval_tap $? 363 'PublicGetUserOrderHistories' test.out

#- 364 PublicDownloadUserOrderReceipt
$CLI_EXE \
    --sn platform \
    --op PublicDownloadUserOrderReceipt \
    --namespace $AB_NAMESPACE \
    --orderNo '1PjWLWHT' \
    --userId 'wgky8IcJ' \
    > test.out 2>&1
eval_tap $? 364 'PublicDownloadUserOrderReceipt' test.out

#- 365 PublicGetPaymentAccounts
$CLI_EXE \
    --sn platform \
    --op PublicGetPaymentAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'O8wKXiWX' \
    > test.out 2>&1
eval_tap $? 365 'PublicGetPaymentAccounts' test.out

#- 366 PublicDeletePaymentAccount
$CLI_EXE \
    --sn platform \
    --op PublicDeletePaymentAccount \
    --id 'wjGmItNd' \
    --namespace $AB_NAMESPACE \
    --type 'paypal' \
    --userId 'XuHFFZ5C' \
    > test.out 2>&1
eval_tap $? 366 'PublicDeletePaymentAccount' test.out

#- 367 PublicListActiveSections
$CLI_EXE \
    --sn platform \
    --op PublicListActiveSections \
    --namespace $AB_NAMESPACE \
    --userId 'wiaPRG5b' \
    --language 'WHC9JYxg' \
    --region 'lmKrSAzS' \
    --storeId 'majCVCjP' \
    --viewId 'dgy0cjrD' \
    > test.out 2>&1
eval_tap $? 367 'PublicListActiveSections' test.out

#- 368 PublicQueryUserSubscriptions
$CLI_EXE \
    --sn platform \
    --op PublicQueryUserSubscriptions \
    --namespace $AB_NAMESPACE \
    --userId 'P16BKoEh' \
    --chargeStatus 'CHARGE_FAILED' \
    --itemId '8KwdYgX5' \
    --limit '65' \
    --offset '55' \
    --sku 'n0CT7QYX' \
    --status 'INIT' \
    --subscribedBy 'USER' \
    > test.out 2>&1
eval_tap $? 368 'PublicQueryUserSubscriptions' test.out

#- 369 PublicSubscribeSubscription
# body param: body
echo '{"currencyCode": "1akpSfPB", "itemId": "9L24UFN3", "language": "IjH-975", "region": "z7wOiXoQ", "returnUrl": "mjmpUfes", "source": "NTL7aGr4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicSubscribeSubscription \
    --namespace $AB_NAMESPACE \
    --userId 'v09fGNNy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 369 'PublicSubscribeSubscription' test.out

#- 370 PublicCheckUserSubscriptionSubscribableByItemId
$CLI_EXE \
    --sn platform \
    --op PublicCheckUserSubscriptionSubscribableByItemId \
    --namespace $AB_NAMESPACE \
    --userId '3nqXZWt9' \
    --itemId 'wgJQ31IC' \
    > test.out 2>&1
eval_tap $? 370 'PublicCheckUserSubscriptionSubscribableByItemId' test.out

#- 371 PublicGetUserSubscription
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'aaWBkED3' \
    --userId 'UkhMW5oT' \
    > test.out 2>&1
eval_tap $? 371 'PublicGetUserSubscription' test.out

#- 372 PublicChangeSubscriptionBillingAccount
$CLI_EXE \
    --sn platform \
    --op PublicChangeSubscriptionBillingAccount \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'tspene5T' \
    --userId 'LRLONPr6' \
    > test.out 2>&1
eval_tap $? 372 'PublicChangeSubscriptionBillingAccount' test.out

#- 373 PublicCancelSubscription
# body param: body
echo '{"immediate": true, "reason": "BOGUtWto"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op PublicCancelSubscription \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'zmlFhnZX' \
    --userId 'adiWdH4V' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 373 'PublicCancelSubscription' test.out

#- 374 PublicGetUserSubscriptionBillingHistories
$CLI_EXE \
    --sn platform \
    --op PublicGetUserSubscriptionBillingHistories \
    --namespace $AB_NAMESPACE \
    --subscriptionId 'm4UsSB4W' \
    --userId 'SQdPgVmO' \
    --excludeFree 'true' \
    --limit '64' \
    --offset '32' \
    > test.out 2>&1
eval_tap $? 374 'PublicGetUserSubscriptionBillingHistories' test.out

#- 375 PublicListViews
$CLI_EXE \
    --sn platform \
    --op PublicListViews \
    --namespace $AB_NAMESPACE \
    --userId 'S9Xem1lW' \
    --language 'Ki1BEr6N' \
    --storeId 'h833PnOC' \
    > test.out 2>&1
eval_tap $? 375 'PublicListViews' test.out

#- 376 PublicGetWallet
$CLI_EXE \
    --sn platform \
    --op PublicGetWallet \
    --currencyCode 'flEwHVum' \
    --namespace $AB_NAMESPACE \
    --userId 'CPETdRtg' \
    > test.out 2>&1
eval_tap $? 376 'PublicGetWallet' test.out

#- 377 PublicListUserWalletTransactions
$CLI_EXE \
    --sn platform \
    --op PublicListUserWalletTransactions \
    --currencyCode 'U2ZKkHjN' \
    --namespace $AB_NAMESPACE \
    --userId 'djXolbn5' \
    --limit '42' \
    --offset '42' \
    > test.out 2>&1
eval_tap $? 377 'PublicListUserWalletTransactions' test.out

#- 378 QueryItems1
$CLI_EXE \
    --sn platform \
    --op QueryItems1 \
    --namespace $AB_NAMESPACE \
    --appType 'GAME' \
    --availableDate 't5YrW88d' \
    --baseAppId 'tvUAswyW' \
    --categoryPath 'dKhYGIR3' \
    --features 'ZL10h8BB' \
    --includeSubCategoryItem 'true' \
    --itemName 'MvxKhjJf' \
    --itemStatus 'ACTIVE' \
    --itemType 'CODE' \
    --limit '83' \
    --offset '16' \
    --region 'mz7PgGHR' \
    --sortBy '["name:asc", "updatedAt", "displayOrder"]' \
    --storeId 'M2kMaBMg' \
    --tags '6FYFmF8s' \
    --targetNamespace 'PxliIeB7' \
    > test.out 2>&1
eval_tap $? 378 'QueryItems1' test.out

#- 379 ImportStore1
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn platform \
    --op ImportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId 'ForKlL7g' \
    --upload $TEMP_FILE_UPLOAD \
    > test.out 2>&1
eval_tap $? 379 'ImportStore1' test.out

#- 380 ExportStore1
# body param: body
echo '{"itemIds": ["d9y3H2TZ", "rlSbW2Qb", "SXWd7Jzc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn platform \
    --op ExportStore1 \
    --namespace $AB_NAMESPACE \
    --storeId '36prlTso' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 380 'ExportStore1' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE