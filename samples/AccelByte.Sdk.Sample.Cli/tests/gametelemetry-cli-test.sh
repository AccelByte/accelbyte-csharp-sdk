#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..5"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet
$CLI_EXE \
    --sn gametelemetry \
    --op GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet \
    --namespace $AB_NAMESPACE \
    --endTime 'S2Bq6gdv' \
    --eventId 'NdkUBCG0' \
    --eventName 'VgK07XPw' \
    --eventPayload '3btmC5gX' \
    --limit '97' \
    --offset '29' \
    --startTime 'pJCo2ac7' \
    > test.out 2>&1
eval_tap $? 2 'GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet' test.out

#- 3 ProtectedSaveEventsGameTelemetryV1ProtectedEventsPost
# body param: body
echo '[{"EventId": "dHOFtu9T", "EventName": "LuCTQHfe", "EventNamespace": "S5fplitd", "EventTimestamp": "1988-06-08T00:00:00Z", "Payload": {"rNzukhBx": {}, "QQ9hu50n": {}, "ALuarQHM": {}}}, {"EventId": "EwbtHABd", "EventName": "67dUJK8R", "EventNamespace": "3ujJ0EUp", "EventTimestamp": "1984-11-25T00:00:00Z", "Payload": {"ayxMrXF9": {}, "XlTU2JIN": {}, "LftFlVpm": {}}}, {"EventId": "d3W4WDuP", "EventName": "m69ybFvz", "EventNamespace": "8nYTN2xX", "EventTimestamp": "1985-06-22T00:00:00Z", "Payload": {"4JtpPvsc": {}, "X257GyIC": {}, "oW8vAiyf": {}}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn gametelemetry \
    --op ProtectedSaveEventsGameTelemetryV1ProtectedEventsPost \
    --access_token '4aKPw35a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'ProtectedSaveEventsGameTelemetryV1ProtectedEventsPost' test.out

#- 4 ProtectedGetPlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimeGet
$CLI_EXE \
    --sn gametelemetry \
    --op ProtectedGetPlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimeGet \
    --steamId 'ifWajX1s' \
    --access_token 'zCrD4Qz2' \
    > test.out 2>&1
eval_tap $? 4 'ProtectedGetPlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimeGet' test.out

#- 5 ProtectedUpdatePlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimePlaytimePut
$CLI_EXE \
    --sn gametelemetry \
    --op ProtectedUpdatePlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimePlaytimePut \
    --playtime 'uAK8qLg9' \
    --steamId 'U13JKCTm' \
    --access_token 'Zw4Zg6dg' \
    > test.out 2>&1
eval_tap $? 5 'ProtectedUpdatePlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimePlaytimePut' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE