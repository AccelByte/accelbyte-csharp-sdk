#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..6"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetNamespacesGameTelemetryV1AdminNamespacesGet
$CLI_EXE \
    --sn gametelemetry \
    --op GetNamespacesGameTelemetryV1AdminNamespacesGet \
    > test.out 2>&1
eval_tap $? 2 'GetNamespacesGameTelemetryV1AdminNamespacesGet' test.out

#- 3 GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet
$CLI_EXE \
    --sn gametelemetry \
    --op GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet \
    --namespace $AB_NAMESPACE \
    --deviceType 'bBuz5zkoaUEzGS3q' \
    --endTime 'Zf0PbemSBELbZ0VB' \
    --eventId 'UGA7nkDeev2Oj060' \
    --eventName 'HnOf5S8X1LxkZs42' \
    --eventPayload '33oQWoXFeqeuI2oM' \
    --flightId 'J0cgAoGfXepE3r5A' \
    --limit '87' \
    --offset '95' \
    --startTime 'tZ5GZi5P12c61ts3' \
    --userId 'fMI04rm2jUc9iav3' \
    > test.out 2>&1
eval_tap $? 3 'GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet' test.out

#- 4 ProtectedSaveEventsGameTelemetryV1ProtectedEventsPost
# body param: body
echo '[{"ClientTimestamp": "1981-05-13T00:00:00Z", "DeviceType": "yrWorpC65VJh4q1z", "EventId": "1KJmKedBfbWvKa5O", "EventName": "u124TsbQsxYFxGGH", "EventNamespace": "rfQkgXkiA5IZPqCq", "EventTimestamp": "1978-09-19T00:00:00Z", "Payload": {"vcyt67WAfWXfUfwG": {}, "B03tz8qIH4uRdNO0": {}, "8HN6s9p8Y5c9eItJ": {}}}, {"ClientTimestamp": "1981-03-07T00:00:00Z", "DeviceType": "BywsSSZTGlubsmhj", "EventId": "XcScOUvrjJBO7tbk", "EventName": "TGYKqRMSTisP0MrS", "EventNamespace": "daFy0pJYCdfkfyt0", "EventTimestamp": "1988-05-18T00:00:00Z", "Payload": {"bOjpls9BZTYc5Bsd": {}, "SSVaAzzn4GbgkKeC": {}, "aS6qyUCscHXs8PlO": {}}}, {"ClientTimestamp": "1985-01-04T00:00:00Z", "DeviceType": "lfUOqv7WmCuqcsNM", "EventId": "7YAnbq4DjmYUMhD9", "EventName": "qU89D356pVsUtNan", "EventNamespace": "ddzgwxYdQc5hEfef", "EventTimestamp": "1972-02-12T00:00:00Z", "Payload": {"opcEM0JHfof2Hwi7": {}, "vg3osbh0fL2h7eJv": {}, "AS2W4uqkhwSC7Eaj": {}}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn gametelemetry \
    --op ProtectedSaveEventsGameTelemetryV1ProtectedEventsPost \
    --access_token 'wHO3LfvwPewrf19N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'ProtectedSaveEventsGameTelemetryV1ProtectedEventsPost' test.out

#- 5 ProtectedGetPlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimeGet
$CLI_EXE \
    --sn gametelemetry \
    --op ProtectedGetPlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimeGet \
    --steamId 'jm50xCDlPeNq0CvM' \
    --access_token 'XtyUWXrdZaFeacGT' \
    > test.out 2>&1
eval_tap $? 5 'ProtectedGetPlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimeGet' test.out

#- 6 ProtectedUpdatePlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimePlaytimePut
$CLI_EXE \
    --sn gametelemetry \
    --op ProtectedUpdatePlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimePlaytimePut \
    --playtime '2x6o28Njxyw7RHld' \
    --steamId 'q0m7NjUZ95Z5XDLB' \
    --access_token 'N9YGVPtkjt0OyBlJ' \
    > test.out 2>&1
eval_tap $? 6 'ProtectedUpdatePlaytimeGameTelemetryV1ProtectedSteamIdsSteamIdPlaytimePlaytimePut' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE