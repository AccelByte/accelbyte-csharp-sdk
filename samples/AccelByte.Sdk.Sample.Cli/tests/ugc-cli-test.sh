#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..91"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 SingleAdminGetChannel
$CLI_EXE \
    --sn ugc \
    --op SingleAdminGetChannel \
    --namespace $AB_NAMESPACE \
    --limit '68' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 2 'SingleAdminGetChannel' test.out

#- 3 AdminCreateChannel
# body param: body
echo '{"name": "ITlEAWU4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminCreateChannel \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'AdminCreateChannel' test.out

#- 4 SingleAdminUpdateChannel
# body param: body
echo '{"name": "LLxqbgjc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op SingleAdminUpdateChannel \
    --channelId '6CbbrPop' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 4 'SingleAdminUpdateChannel' test.out

#- 5 SingleAdminDeleteChannel
$CLI_EXE \
    --sn ugc \
    --op SingleAdminDeleteChannel \
    --channelId 'wSzXbiWF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 5 'SingleAdminDeleteChannel' test.out

#- 6 AdminUploadContentDirect
eval_tap 0 6 'AdminUploadContentDirect # SKIP deprecated' test.out

#- 7 AdminUploadContentS3
# body param: body
echo '{"contentType": "SWi3KUN6", "fileExtension": "o8Ztd81q", "name": "3dRbxJIW", "preview": "O7CYQDaL", "previewMetadata": {"previewContentType": "mE2znflM", "previewFileExtension": "ti3f4R9o"}, "subType": "8n3NM9Qz", "tags": ["UQmI2y6N", "0e1Ve5EV", "zbwBctjs"], "type": "3v1lADUu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminUploadContentS3 \
    --channelId 'wAFCvJdl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'AdminUploadContentS3' test.out

#- 8 SingleAdminUpdateContentS3
# body param: body
echo '{"contentType": "CI1XLRT7", "fileExtension": "SbFrDS3V", "name": "Ko7X2pGx", "preview": "kAYuEcDx", "previewMetadata": {"previewContentType": "OnMdT5Tx", "previewFileExtension": "ycroszrs"}, "subType": "cTZu7Fy1", "tags": ["C9V82Id0", "MMiBFxQy", "69AjqDg5"], "type": "o0kDRcQe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op SingleAdminUpdateContentS3 \
    --channelId 'RBsQZOl2' \
    --contentId '0cE37ZIX' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'SingleAdminUpdateContentS3' test.out

#- 9 AdminSearchChannelSpecificContent
$CLI_EXE \
    --sn ugc \
    --op AdminSearchChannelSpecificContent \
    --channelId 'NjhDCa5p' \
    --namespace $AB_NAMESPACE \
    --creator 'h7Ksk0iy' \
    --isofficial 'TfkrGYj4' \
    --limit '6' \
    --name 'IKjWVtkv' \
    --offset '84' \
    --orderby 'g6vFD6ON' \
    --sortby 'CXomDX4V' \
    --subtype 'oeuJsWVs' \
    --tags '["iJ9n2WzN", "f4gRXMiF", "SBtEoDNJ"]' \
    --type 'rJKsiMkt' \
    --userId 'hLmcEoJ0' \
    > test.out 2>&1
eval_tap $? 9 'AdminSearchChannelSpecificContent' test.out

#- 10 SingleAdminUpdateContentDirect
eval_tap 0 10 'SingleAdminUpdateContentDirect # SKIP deprecated' test.out

#- 11 SingleAdminDeleteContent
$CLI_EXE \
    --sn ugc \
    --op SingleAdminDeleteContent \
    --channelId 'rVxyotP5' \
    --contentId 'wfDdjka8' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 11 'SingleAdminDeleteContent' test.out

#- 12 SingleAdminGetContent
$CLI_EXE \
    --sn ugc \
    --op SingleAdminGetContent \
    --namespace $AB_NAMESPACE \
    --limit '42' \
    --offset '25' \
    > test.out 2>&1
eval_tap $? 12 'SingleAdminGetContent' test.out

#- 13 AdminSearchContent
$CLI_EXE \
    --sn ugc \
    --op AdminSearchContent \
    --namespace $AB_NAMESPACE \
    --creator '7MeH3jKO' \
    --isofficial 'RdyQqZdB' \
    --limit '1' \
    --name '5mtz4t1t' \
    --offset '31' \
    --orderby '8L2L93BJ' \
    --sortby 'aiRMVOGE' \
    --subtype 'FENa0IDK' \
    --tags '["Z31WfCdY", "HmGTfuRQ", "NyVHdKy6"]' \
    --type 'cTKrmCMi' \
    --userId 'iDQWEOoF' \
    > test.out 2>&1
eval_tap $? 13 'AdminSearchContent' test.out

#- 14 AdminGetUserContentByShareCode
$CLI_EXE \
    --sn ugc \
    --op AdminGetUserContentByShareCode \
    --namespace $AB_NAMESPACE \
    --shareCode 'aELIvczn' \
    > test.out 2>&1
eval_tap $? 14 'AdminGetUserContentByShareCode' test.out

#- 15 AdminGetSpecificContent
$CLI_EXE \
    --sn ugc \
    --op AdminGetSpecificContent \
    --contentId 'aQHPgxaa' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 15 'AdminGetSpecificContent' test.out

#- 16 AdminDownloadContentPreview
$CLI_EXE \
    --sn ugc \
    --op AdminDownloadContentPreview \
    --contentId 'oio0zYH1' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 16 'AdminDownloadContentPreview' test.out

#- 17 AdminUpdateScreenshots
# body param: body
echo '{"screenshots": [{"description": "XYc0cjB6", "screenshotId": "NHumTpfB"}, {"description": "iHjJ3rx9", "screenshotId": "hh5ptmvG"}, {"description": "M8O6O6HC", "screenshotId": "CuD0zK64"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminUpdateScreenshots \
    --contentId 'TGRyG9iK' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'AdminUpdateScreenshots' test.out

#- 18 AdminUploadContentScreenshot
# body param: body
echo '{"screenshots": [{"contentType": "UTo8vPzH", "description": "OBB3D3r5", "fileExtension": "jfif"}, {"contentType": "73rzK0FG", "description": "b7i9A5Di", "fileExtension": "jfif"}, {"contentType": "yE1MGIne", "description": "Oculo5y1", "fileExtension": "png"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminUploadContentScreenshot \
    --contentId 'xdPqrT1K' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 18 'AdminUploadContentScreenshot' test.out

#- 19 AdminDeleteContentScreenshot
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteContentScreenshot \
    --contentId 'WbGElSSZ' \
    --namespace $AB_NAMESPACE \
    --screenshotId 'J7nZfuo4' \
    > test.out 2>&1
eval_tap $? 19 'AdminDeleteContentScreenshot' test.out

#- 20 SingleAdminGetAllGroups
$CLI_EXE \
    --sn ugc \
    --op SingleAdminGetAllGroups \
    --namespace $AB_NAMESPACE \
    --limit '20' \
    --offset '68' \
    > test.out 2>&1
eval_tap $? 20 'SingleAdminGetAllGroups' test.out

#- 21 AdminCreateGroup
# body param: body
echo '{"contents": ["MCOBwzfj", "MfC0YnnE", "tztQUisn"], "name": "Y3Jes7j5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminCreateGroup \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'AdminCreateGroup' test.out

#- 22 SingleAdminGetGroup
$CLI_EXE \
    --sn ugc \
    --op SingleAdminGetGroup \
    --groupId 'Pn19kdEE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 22 'SingleAdminGetGroup' test.out

#- 23 SingleAdminUpdateGroup
# body param: body
echo '{"contents": ["OLQWeodJ", "gJ20srMa", "BwLSwcZL"], "name": "4jVdQjGV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op SingleAdminUpdateGroup \
    --groupId 'PMYQyj0V' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'SingleAdminUpdateGroup' test.out

#- 24 SingleAdminDeleteGroup
$CLI_EXE \
    --sn ugc \
    --op SingleAdminDeleteGroup \
    --groupId 'habP4b4U' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'SingleAdminDeleteGroup' test.out

#- 25 SingleAdminGetGroupContents
$CLI_EXE \
    --sn ugc \
    --op SingleAdminGetGroupContents \
    --groupId 'm5idjHZC' \
    --namespace $AB_NAMESPACE \
    --limit '67' \
    --offset '44' \
    > test.out 2>&1
eval_tap $? 25 'SingleAdminGetGroupContents' test.out

#- 26 AdminGetTag
$CLI_EXE \
    --sn ugc \
    --op AdminGetTag \
    --namespace $AB_NAMESPACE \
    --limit '4' \
    --offset '67' \
    > test.out 2>&1
eval_tap $? 26 'AdminGetTag' test.out

#- 27 AdminCreateTag
# body param: body
echo '{"tag": "P27giKvO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminCreateTag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'AdminCreateTag' test.out

#- 28 AdminUpdateTag
# body param: body
echo '{"tag": "kRo3medR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminUpdateTag \
    --namespace $AB_NAMESPACE \
    --tagId 'Naj0df27' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'AdminUpdateTag' test.out

#- 29 AdminDeleteTag
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteTag \
    --namespace $AB_NAMESPACE \
    --tagId 'aXoWiuKA' \
    > test.out 2>&1
eval_tap $? 29 'AdminDeleteTag' test.out

#- 30 AdminGetType
$CLI_EXE \
    --sn ugc \
    --op AdminGetType \
    --namespace $AB_NAMESPACE \
    --limit '66' \
    --offset '37' \
    > test.out 2>&1
eval_tap $? 30 'AdminGetType' test.out

#- 31 AdminCreateType
# body param: body
echo '{"subtype": ["JmwA0pSS", "imY9WjcL", "niOwi3IN"], "type": "RFBfAmrW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminCreateType \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 31 'AdminCreateType' test.out

#- 32 AdminUpdateType
# body param: body
echo '{"subtype": ["j9WihDIi", "S4Awif3P", "OpCe9alt"], "type": "z9RCjrqu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminUpdateType \
    --namespace $AB_NAMESPACE \
    --typeId 'kCNKCGC3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 32 'AdminUpdateType' test.out

#- 33 AdminDeleteType
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteType \
    --namespace $AB_NAMESPACE \
    --typeId 'eWDxpGS7' \
    > test.out 2>&1
eval_tap $? 33 'AdminDeleteType' test.out

#- 34 AdminGetChannel
$CLI_EXE \
    --sn ugc \
    --op AdminGetChannel \
    --namespace $AB_NAMESPACE \
    --userId 'dU7lsrK6' \
    --limit '6' \
    --offset '79' \
    > test.out 2>&1
eval_tap $? 34 'AdminGetChannel' test.out

#- 35 AdminDeleteAllUserChannels
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteAllUserChannels \
    --namespace $AB_NAMESPACE \
    --userId 'nY7V7L5u' \
    > test.out 2>&1
eval_tap $? 35 'AdminDeleteAllUserChannels' test.out

#- 36 AdminUpdateChannel
# body param: body
echo '{"name": "MnjofZGW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminUpdateChannel \
    --channelId 'DCGtrJbi' \
    --namespace $AB_NAMESPACE \
    --userId 'qDHsvpMN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'AdminUpdateChannel' test.out

#- 37 AdminDeleteChannel
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteChannel \
    --channelId 'oxvTHk7E' \
    --namespace $AB_NAMESPACE \
    --userId '3nqdxKNB' \
    > test.out 2>&1
eval_tap $? 37 'AdminDeleteChannel' test.out

#- 38 AdminUpdateContentS3
# body param: body
echo '{"contentType": "VBasaqWV", "fileExtension": "HuSp2AYP", "name": "CN6wYrZk", "preview": "KyUQwVas", "previewMetadata": {"previewContentType": "2bIgLPGq", "previewFileExtension": "ewr2l5eC"}, "subType": "lcNW0Ion", "tags": ["xCgNU1Do", "y3jnBspW", "L1sLgQHY"], "type": "8zN7Us60"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminUpdateContentS3 \
    --channelId 'YzPNpsNq' \
    --contentId 'vwK77nbW' \
    --namespace $AB_NAMESPACE \
    --userId 'IALGeUwg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'AdminUpdateContentS3' test.out

#- 39 AdminUpdateContentDirect
eval_tap 0 39 'AdminUpdateContentDirect # SKIP deprecated' test.out

#- 40 AdminDeleteContent
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteContent \
    --channelId 'srMWEA2D' \
    --contentId 'OkVxu3tj' \
    --namespace $AB_NAMESPACE \
    --userId 'd7FO2eEX' \
    > test.out 2>&1
eval_tap $? 40 'AdminDeleteContent' test.out

#- 41 AdminGetContent
$CLI_EXE \
    --sn ugc \
    --op AdminGetContent \
    --namespace $AB_NAMESPACE \
    --userId 'uPIVHfp7' \
    --limit '63' \
    --offset '64' \
    > test.out 2>&1
eval_tap $? 41 'AdminGetContent' test.out

#- 42 AdminDeleteAllUserContents
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteAllUserContents \
    --namespace $AB_NAMESPACE \
    --userId 'JEiCMC3s' \
    > test.out 2>&1
eval_tap $? 42 'AdminDeleteAllUserContents' test.out

#- 43 AdminHideUserContent
# body param: body
echo '{"isHidden": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminHideUserContent \
    --contentId 'LGS64UbH' \
    --namespace $AB_NAMESPACE \
    --userId 'IKWHCfL6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'AdminHideUserContent' test.out

#- 44 AdminGetAllGroups
$CLI_EXE \
    --sn ugc \
    --op AdminGetAllGroups \
    --namespace $AB_NAMESPACE \
    --userId 'lgwfUII5' \
    --limit '50' \
    --offset '0' \
    > test.out 2>&1
eval_tap $? 44 'AdminGetAllGroups' test.out

#- 45 AdminDeleteAllUserGroup
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteAllUserGroup \
    --namespace $AB_NAMESPACE \
    --userId 'cXgmFaA7' \
    > test.out 2>&1
eval_tap $? 45 'AdminDeleteAllUserGroup' test.out

#- 46 AdminGetGroup
$CLI_EXE \
    --sn ugc \
    --op AdminGetGroup \
    --groupId 'lUOpJeka' \
    --namespace $AB_NAMESPACE \
    --userId 'UySmuvmC' \
    > test.out 2>&1
eval_tap $? 46 'AdminGetGroup' test.out

#- 47 AdminUpdateGroup
# body param: body
echo '{"contents": ["BDrJ9OQu", "TxmPyLNJ", "zWf1pCwM"], "name": "ZEN2viGa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op AdminUpdateGroup \
    --groupId 'ssR3ThYs' \
    --namespace $AB_NAMESPACE \
    --userId 'GxkPef1i' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 47 'AdminUpdateGroup' test.out

#- 48 AdminDeleteGroup
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteGroup \
    --groupId '2lVFiwjW' \
    --namespace $AB_NAMESPACE \
    --userId 'fUhLT733' \
    > test.out 2>&1
eval_tap $? 48 'AdminDeleteGroup' test.out

#- 49 AdminGetGroupContents
$CLI_EXE \
    --sn ugc \
    --op AdminGetGroupContents \
    --groupId 'rG0JYB6x' \
    --namespace $AB_NAMESPACE \
    --userId 'woWKQnqH' \
    --limit '17' \
    --offset '85' \
    > test.out 2>&1
eval_tap $? 49 'AdminGetGroupContents' test.out

#- 50 AdminDeleteAllUserStates
$CLI_EXE \
    --sn ugc \
    --op AdminDeleteAllUserStates \
    --namespace $AB_NAMESPACE \
    --userId 'PO0qNpoP' \
    > test.out 2>&1
eval_tap $? 50 'AdminDeleteAllUserStates' test.out

#- 51 SearchChannelSpecificContent
$CLI_EXE \
    --sn ugc \
    --op SearchChannelSpecificContent \
    --channelId 'LoBag4Ko' \
    --namespace $AB_NAMESPACE \
    --creator 'kQhhmgrw' \
    --isofficial 'Bz9rbPM2' \
    --limit '75' \
    --name 'wEoTj5pB' \
    --offset '49' \
    --orderby 'exBjEYn8' \
    --sortby 'r0H8J5OH' \
    --subtype '3Qe1fJS0' \
    --tags '["YDWvoFSX", "buaEXyW7", "60LFZuud"]' \
    --type 'JAilxatb' \
    --userId 'UflCa7Sr' \
    > test.out 2>&1
eval_tap $? 51 'SearchChannelSpecificContent' test.out

#- 52 PublicSearchContent
$CLI_EXE \
    --sn ugc \
    --op PublicSearchContent \
    --namespace $AB_NAMESPACE \
    --creator 's3vDMI7W' \
    --isofficial '0ObAPRao' \
    --limit '2' \
    --name 'tivGXwdP' \
    --offset '66' \
    --orderby 'mpZ0BIqP' \
    --sortby 'LcbCOGeQ' \
    --subtype '4a8ys36p' \
    --tags '["ZUKU0M1P", "QRC2wlNx", "V59YJ5qT"]' \
    --type 'iQHfoCkS' \
    --userId '44h71Uuz' \
    > test.out 2>&1
eval_tap $? 52 'PublicSearchContent' test.out

#- 53 PublicGetContentBulk
# body param: body
echo '{"contentIds": ["DBUwdH9c", "wn5Nbyok", "lmE5gP7x"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op PublicGetContentBulk \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'PublicGetContentBulk' test.out

#- 54 GetFollowedContent
$CLI_EXE \
    --sn ugc \
    --op GetFollowedContent \
    --namespace $AB_NAMESPACE \
    --limit '76' \
    --offset '2' \
    > test.out 2>&1
eval_tap $? 54 'GetFollowedContent' test.out

#- 55 GetLikedContent
$CLI_EXE \
    --sn ugc \
    --op GetLikedContent \
    --namespace $AB_NAMESPACE \
    --isofficial 'true' \
    --limit '19' \
    --name 'xVRwg318' \
    --offset '13' \
    --orderby '0OJpU75N' \
    --sortby '6N83EAVA' \
    --subtype '4Btl3uJi' \
    --tags '["20WQjJNm", "ouPugqhP", "9bjtKlwf"]' \
    --type '1KB4V1iR' \
    > test.out 2>&1
eval_tap $? 55 'GetLikedContent' test.out

#- 56 PublicDownloadContentByShareCode
$CLI_EXE \
    --sn ugc \
    --op PublicDownloadContentByShareCode \
    --namespace $AB_NAMESPACE \
    --shareCode 'UQEejRdJ' \
    > test.out 2>&1
eval_tap $? 56 'PublicDownloadContentByShareCode' test.out

#- 57 PublicDownloadContentByContentID
$CLI_EXE \
    --sn ugc \
    --op PublicDownloadContentByContentID \
    --contentId 'eTjUwL5j' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 57 'PublicDownloadContentByContentID' test.out

#- 58 AddDownloadCount
$CLI_EXE \
    --sn ugc \
    --op AddDownloadCount \
    --contentId '56HsB6Vz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 58 'AddDownloadCount' test.out

#- 59 UpdateContentLikeStatus
# body param: body
echo '{"likeStatus": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op UpdateContentLikeStatus \
    --contentId 'hZqyOs0l' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 59 'UpdateContentLikeStatus' test.out

#- 60 PublicDownloadContentPreview
$CLI_EXE \
    --sn ugc \
    --op PublicDownloadContentPreview \
    --contentId 'M0czZhSB' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 60 'PublicDownloadContentPreview' test.out

#- 61 GetTag
$CLI_EXE \
    --sn ugc \
    --op GetTag \
    --namespace $AB_NAMESPACE \
    --limit '75' \
    --offset '88' \
    > test.out 2>&1
eval_tap $? 61 'GetTag' test.out

#- 62 GetType
$CLI_EXE \
    --sn ugc \
    --op GetType \
    --namespace $AB_NAMESPACE \
    --limit '33' \
    --offset '61' \
    > test.out 2>&1
eval_tap $? 62 'GetType' test.out

#- 63 PublicSearchCreator
$CLI_EXE \
    --sn ugc \
    --op PublicSearchCreator \
    --namespace $AB_NAMESPACE \
    --limit '54' \
    --offset '58' \
    --orderby 'AI9F6WSA' \
    --sortby 'P7PJNJBe' \
    > test.out 2>&1
eval_tap $? 63 'PublicSearchCreator' test.out

#- 64 GetFollowedUsers
$CLI_EXE \
    --sn ugc \
    --op GetFollowedUsers \
    --namespace $AB_NAMESPACE \
    --limit '96' \
    --offset '11' \
    > test.out 2>&1
eval_tap $? 64 'GetFollowedUsers' test.out

#- 65 PublicGetCreator
$CLI_EXE \
    --sn ugc \
    --op PublicGetCreator \
    --namespace $AB_NAMESPACE \
    --userId 'V2zK0PiF' \
    > test.out 2>&1
eval_tap $? 65 'PublicGetCreator' test.out

#- 66 GetChannels
$CLI_EXE \
    --sn ugc \
    --op GetChannels \
    --namespace $AB_NAMESPACE \
    --userId 'HWVcyaA4' \
    --limit '100' \
    --offset '28' \
    > test.out 2>&1
eval_tap $? 66 'GetChannels' test.out

#- 67 CreateChannel
# body param: body
echo '{"name": "WIrd0jqc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op CreateChannel \
    --namespace $AB_NAMESPACE \
    --userId 'fJkedqvb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 67 'CreateChannel' test.out

#- 68 DeleteAllUserChannel
$CLI_EXE \
    --sn ugc \
    --op DeleteAllUserChannel \
    --namespace $AB_NAMESPACE \
    --userId 'lWaTsbNO' \
    > test.out 2>&1
eval_tap $? 68 'DeleteAllUserChannel' test.out

#- 69 UpdateChannel
# body param: body
echo '{"name": "k25pX76i"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op UpdateChannel \
    --channelId 'x3MfH51Z' \
    --namespace $AB_NAMESPACE \
    --userId 'tGXyuph2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 69 'UpdateChannel' test.out

#- 70 DeleteChannel
$CLI_EXE \
    --sn ugc \
    --op DeleteChannel \
    --channelId 'Sz4CvdQB' \
    --namespace $AB_NAMESPACE \
    --userId 'yXvEnInQ' \
    > test.out 2>&1
eval_tap $? 70 'DeleteChannel' test.out

#- 71 CreateContentDirect
eval_tap 0 71 'CreateContentDirect # SKIP deprecated' test.out

#- 72 CreateContentS3
# body param: body
echo '{"contentType": "EYI8gewX", "fileExtension": "PkbF0VWL", "name": "NPB5zIOS", "preview": "RYkUc7XU", "previewMetadata": {"previewContentType": "uizkVPfN", "previewFileExtension": "s0621PAy"}, "subType": "S8D99vKK", "tags": ["OFMPht2Y", "LII6llvS", "2kaarn9w"], "type": "lg2GyT80"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op CreateContentS3 \
    --channelId 'XU8x3F4g' \
    --namespace $AB_NAMESPACE \
    --userId 'd2DBgdIu' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 72 'CreateContentS3' test.out

#- 73 UpdateContentS3
# body param: body
echo '{"contentType": "65AIKPzQ", "fileExtension": "ywOURFiX", "name": "f82BGaBM", "preview": "A9DgnJ7b", "previewMetadata": {"previewContentType": "N9Gzuppe", "previewFileExtension": "mF5SCvmJ"}, "subType": "lDSAl12D", "tags": ["HaAk78B9", "HDQZDvfP", "czkOel9o"], "type": "SoeFDpi6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op UpdateContentS3 \
    --channelId 'zmzDLCUe' \
    --contentId 'Yd795t9l' \
    --namespace $AB_NAMESPACE \
    --userId '8GA9LtMS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 73 'UpdateContentS3' test.out

#- 74 UpdateContentDirect
eval_tap 0 74 'UpdateContentDirect # SKIP deprecated' test.out

#- 75 DeleteContent
$CLI_EXE \
    --sn ugc \
    --op DeleteContent \
    --channelId 'aIEh7znh' \
    --contentId 'N0HhFsug' \
    --namespace $AB_NAMESPACE \
    --userId 'DBzEPi3A' \
    > test.out 2>&1
eval_tap $? 75 'DeleteContent' test.out

#- 76 PublicGetUserContent
$CLI_EXE \
    --sn ugc \
    --op PublicGetUserContent \
    --namespace $AB_NAMESPACE \
    --userId 'EgOQ4bNA' \
    --limit '47' \
    --offset '83' \
    > test.out 2>&1
eval_tap $? 76 'PublicGetUserContent' test.out

#- 77 DeleteAllUserContents
$CLI_EXE \
    --sn ugc \
    --op DeleteAllUserContents \
    --namespace $AB_NAMESPACE \
    --userId '9FM3Hz34' \
    > test.out 2>&1
eval_tap $? 77 'DeleteAllUserContents' test.out

#- 78 UpdateScreenshots
# body param: body
echo '{"screenshots": [{"description": "EhRdeQ3o", "screenshotId": "f8fDteHC"}, {"description": "jeKYCMLZ", "screenshotId": "HQ8TEXUp"}, {"description": "jdzPPMvD", "screenshotId": "ag1dO77z"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op UpdateScreenshots \
    --contentId 'zWTbxonj' \
    --namespace $AB_NAMESPACE \
    --userId 'nnXKw1Nm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 78 'UpdateScreenshots' test.out

#- 79 UploadContentScreenshot
# body param: body
echo '{"screenshots": [{"contentType": "NlQo8I8h", "description": "ay70htVz", "fileExtension": "png"}, {"contentType": "TWeTs4Dk", "description": "Q0mAzEFX", "fileExtension": "jpg"}, {"contentType": "0cmY3KRW", "description": "GUIa5a8v", "fileExtension": "bmp"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op UploadContentScreenshot \
    --contentId 'ItLnqyxf' \
    --namespace $AB_NAMESPACE \
    --userId '6xERBM9u' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 79 'UploadContentScreenshot' test.out

#- 80 DeleteContentScreenshot
$CLI_EXE \
    --sn ugc \
    --op DeleteContentScreenshot \
    --contentId 'yXhRDSB0' \
    --namespace $AB_NAMESPACE \
    --screenshotId 'QrdxD5bP' \
    --userId 'cZAXxME8' \
    > test.out 2>&1
eval_tap $? 80 'DeleteContentScreenshot' test.out

#- 81 UpdateUserFollowStatus
# body param: body
echo '{"followStatus": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op UpdateUserFollowStatus \
    --namespace $AB_NAMESPACE \
    --userId 'sEMUs1ua' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 81 'UpdateUserFollowStatus' test.out

#- 82 GetPublicFollowers
$CLI_EXE \
    --sn ugc \
    --op GetPublicFollowers \
    --namespace $AB_NAMESPACE \
    --userId 'DSTQUkhF' \
    --limit '13' \
    --offset '29' \
    > test.out 2>&1
eval_tap $? 82 'GetPublicFollowers' test.out

#- 83 GetPublicFollowing
$CLI_EXE \
    --sn ugc \
    --op GetPublicFollowing \
    --namespace $AB_NAMESPACE \
    --userId 'BwYTFfYS' \
    --limit '69' \
    --offset '58' \
    > test.out 2>&1
eval_tap $? 83 'GetPublicFollowing' test.out

#- 84 GetGroups
$CLI_EXE \
    --sn ugc \
    --op GetGroups \
    --namespace $AB_NAMESPACE \
    --userId 'XE7KvwH3' \
    --limit '93' \
    --offset '77' \
    > test.out 2>&1
eval_tap $? 84 'GetGroups' test.out

#- 85 CreateGroup
# body param: body
echo '{"contents": ["oQKI4JUi", "v9l7Vc75", "0elaaizu"], "name": "wqBBi9X7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op CreateGroup \
    --namespace $AB_NAMESPACE \
    --userId 'LDHJXRwr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 85 'CreateGroup' test.out

#- 86 DeleteAllUserGroup
$CLI_EXE \
    --sn ugc \
    --op DeleteAllUserGroup \
    --namespace $AB_NAMESPACE \
    --userId 'a9bzcYHo' \
    > test.out 2>&1
eval_tap $? 86 'DeleteAllUserGroup' test.out

#- 87 GetGroup
$CLI_EXE \
    --sn ugc \
    --op GetGroup \
    --groupId 'rLmVRE0z' \
    --namespace $AB_NAMESPACE \
    --userId 'mHMqYR2T' \
    > test.out 2>&1
eval_tap $? 87 'GetGroup' test.out

#- 88 UpdateGroup
# body param: body
echo '{"contents": ["KVcpKNLy", "5hNOhfbX", "N9FA56mz"], "name": "DXNIOfD8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn ugc \
    --op UpdateGroup \
    --groupId 'lH6lQLeP' \
    --namespace $AB_NAMESPACE \
    --userId '2bsvTjBO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 88 'UpdateGroup' test.out

#- 89 DeleteGroup
$CLI_EXE \
    --sn ugc \
    --op DeleteGroup \
    --groupId 'lFOGLH48' \
    --namespace $AB_NAMESPACE \
    --userId 'ziXRY8rF' \
    > test.out 2>&1
eval_tap $? 89 'DeleteGroup' test.out

#- 90 GetGroupContent
$CLI_EXE \
    --sn ugc \
    --op GetGroupContent \
    --groupId '8apk4lMT' \
    --namespace $AB_NAMESPACE \
    --userId 'IXwa7svF' \
    --limit '77' \
    --offset '61' \
    > test.out 2>&1
eval_tap $? 90 'GetGroupContent' test.out

#- 91 DeleteAllUserStates
$CLI_EXE \
    --sn ugc \
    --op DeleteAllUserStates \
    --namespace $AB_NAMESPACE \
    --userId 'B2IxbpyS' \
    > test.out 2>&1
eval_tap $? 91 'DeleteAllUserStates' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE