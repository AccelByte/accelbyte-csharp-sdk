#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..15"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminListAchievements
$CLI_EXE \
    --sn achievement \
    --op AdminListAchievements \
    --namespace $AB_NAMESPACE \
    --limit '96' \
    --offset '78' \
    --sortBy 'updatedAt:desc' \
    > test.out 2>&1
eval_tap $? 2 'AdminListAchievements' test.out

#- 3 AdminCreateNewAchievement
# body param: body
echo '{"achievementCode": "i7atkex3", "defaultLanguage": "nOzU8RAQ", "description": {"eRWTv6Xw": "lD3lYub3", "zgShqovW": "t1EF3tTO", "gIrFOHVT": "CoUM7ons"}, "goalValue": 0.8988631793845413, "hidden": true, "incremental": true, "lockedIcons": [{"slug": "LnMP2uB4", "url": "cyOu5q4v"}, {"slug": "IDJ2zPXn", "url": "O3HiUXBh"}, {"slug": "cL993ujK", "url": "k7ohKaYx"}], "name": {"xxMbBTtN": "VxYgnKih", "lA334Sqv": "pWUrwa2p", "KWAgJ8hn": "px3eH98R"}, "statCode": "Aoy5GLz4", "tags": ["N3zy3c3v", "Tiadq09l", "IEG91uP0"], "unlockedIcons": [{"slug": "4Cjfr4qw", "url": "B3XohvPn"}, {"slug": "JQwbGZhD", "url": "MKT8mm4s"}, {"slug": "IHcQXBa9", "url": "ZBUdeKDy"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn achievement \
    --op AdminCreateNewAchievement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'AdminCreateNewAchievement' test.out

#- 4 ExportAchievements
$CLI_EXE \
    --sn achievement \
    --op ExportAchievements \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 4 'ExportAchievements' test.out

#- 5 ImportAchievements
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn achievement \
    --op ImportAchievements \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --strategy 'Yt0sG8ZK' \
    > test.out 2>&1
eval_tap $? 5 'ImportAchievements' test.out

#- 6 AdminGetAchievement
$CLI_EXE \
    --sn achievement \
    --op AdminGetAchievement \
    --achievementCode '47s0xqKi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 6 'AdminGetAchievement' test.out

#- 7 AdminUpdateAchievement
# body param: body
echo '{"defaultLanguage": "vRVnoynA", "description": {"Ga1x7j9Q": "Vo6aZaUw", "t8RHYPlL": "ZYftxH0y", "MDAxbeW2": "0Qg2XZic"}, "goalValue": 0.8572829139954129, "hidden": true, "incremental": false, "lockedIcons": [{"slug": "Kxhhm17M", "url": "JRgEdCPH"}, {"slug": "8MuPRToL", "url": "vNP9oaVH"}, {"slug": "akKOEPRe", "url": "EizsUkur"}], "name": {"YnWEhLM8": "pPyRWReD", "tcgGR58C": "SNydfJyS", "ytO4eoJu": "FPFpmhf7"}, "statCode": "xJoMCPXU", "tags": ["l5DrP1Tr", "VlZWdcBA", "UIbEcT14"], "unlockedIcons": [{"slug": "QpZcuONY", "url": "cfQtd10I"}, {"slug": "KfoaEg7I", "url": "RWYC2dYS"}, {"slug": "Sj9vJAcv", "url": "D89vVFwK"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn achievement \
    --op AdminUpdateAchievement \
    --achievementCode 'shpZD8Qk' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'AdminUpdateAchievement' test.out

#- 8 AdminDeleteAchievement
$CLI_EXE \
    --sn achievement \
    --op AdminDeleteAchievement \
    --achievementCode 'jZxPqkJK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 8 'AdminDeleteAchievement' test.out

#- 9 AdminUpdateAchievementListOrder
# body param: body
echo '{"targetOrder": 44}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn achievement \
    --op AdminUpdateAchievementListOrder \
    --achievementCode 'a6ad9Msw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'AdminUpdateAchievementListOrder' test.out

#- 10 AdminListUserAchievements
$CLI_EXE \
    --sn achievement \
    --op AdminListUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'aP10q3Zx' \
    --limit '77' \
    --offset '38' \
    --preferUnlocked 'true' \
    > test.out 2>&1
eval_tap $? 10 'AdminListUserAchievements' test.out

#- 11 AdminUnlockAchievement
$CLI_EXE \
    --sn achievement \
    --op AdminUnlockAchievement \
    --achievementCode 'dJmHhXa7' \
    --namespace $AB_NAMESPACE \
    --userId 'aaQ9zpXX' \
    > test.out 2>&1
eval_tap $? 11 'AdminUnlockAchievement' test.out

#- 12 PublicListAchievements
$CLI_EXE \
    --sn achievement \
    --op PublicListAchievements \
    --namespace $AB_NAMESPACE \
    --limit '4' \
    --offset '74' \
    --sortBy 'listOrder:asc' \
    --language 'Upx89WWS' \
    > test.out 2>&1
eval_tap $? 12 'PublicListAchievements' test.out

#- 13 PublicGetAchievement
$CLI_EXE \
    --sn achievement \
    --op PublicGetAchievement \
    --achievementCode 'fOaKfyQb' \
    --namespace $AB_NAMESPACE \
    --language 'B7D8j7mq' \
    > test.out 2>&1
eval_tap $? 13 'PublicGetAchievement' test.out

#- 14 PublicListUserAchievements
$CLI_EXE \
    --sn achievement \
    --op PublicListUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'WrGt0ZKf' \
    --limit '70' \
    --offset '58' \
    --preferUnlocked 'true' \
    > test.out 2>&1
eval_tap $? 14 'PublicListUserAchievements' test.out

#- 15 PublicUnlockAchievement
$CLI_EXE \
    --sn achievement \
    --op PublicUnlockAchievement \
    --achievementCode 'A0HUh2Qq' \
    --namespace $AB_NAMESPACE \
    --userId 'brUqIqC2' \
    > test.out 2>&1
eval_tap $? 15 'PublicUnlockAchievement' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE