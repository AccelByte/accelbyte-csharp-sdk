#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..15"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 AdminListAchievements
$CLI_EXE \
    --sn achievement \
    --op AdminListAchievements \
    --namespace $AB_NAMESPACE \
    --limit '72' \
    --offset '63' \
    --sortBy 'createdAt' \
    > test.out 2>&1
eval_tap $? 2 'AdminListAchievements' test.out

#- 3 AdminCreateNewAchievement
# body param: body
echo '{"achievementCode": "gwekXK8V", "defaultLanguage": "xvIFAuQe", "description": {"Z3qnSh0r": "agr7LS4x", "RZLffSCM": "LIfrJrY0", "5NqWCHH1": "gsj0mmh5"}, "goalValue": 0.9543558825754688, "hidden": false, "incremental": true, "lockedIcons": [{"slug": "kH5nn9An", "url": "XANoHw5S"}, {"slug": "pWuXwcoz", "url": "44DHCMGI"}, {"slug": "7ZNDPYJa", "url": "qQ6SLWNj"}], "name": {"m7t5SU5w": "p0TPywa1", "EvtL9Dbo": "P8yL9ght", "GOelfzp7": "soaVG74q"}, "statCode": "jz8P4ioM", "tags": ["2HM3RYNJ", "0G3XmSUS", "7Fp90u2s"], "unlockedIcons": [{"slug": "1DpxIyRY", "url": "afLv29sV"}, {"slug": "zu2HfHq5", "url": "szrIdjqk"}, {"slug": "BXx0eTZe", "url": "xRubhlqa"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn achievement \
    --op AdminCreateNewAchievement \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 3 'AdminCreateNewAchievement' test.out

#- 4 ExportAchievements
$CLI_EXE \
    --sn achievement \
    --op ExportAchievements \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 4 'ExportAchievements' test.out

#- 5 ImportAchievements
# form data upload: file
echo 'tmp.dat' > $TEMP_FILE_UPLOAD
$CLI_EXE \
    --sn achievement \
    --op ImportAchievements \
    --namespace $AB_NAMESPACE \
    --upload $TEMP_FILE_UPLOAD \
    --strategy 'dnz9eDLc' \
    > test.out 2>&1
eval_tap $? 5 'ImportAchievements' test.out

#- 6 AdminGetAchievement
$CLI_EXE \
    --sn achievement \
    --op AdminGetAchievement \
    --achievementCode 'lIi552kl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 6 'AdminGetAchievement' test.out

#- 7 AdminUpdateAchievement
# body param: body
echo '{"defaultLanguage": "nsb5T9MU", "description": {"cHmHhhhy": "FI1R3Mn2", "XyqrnWxV": "jAXO69UU", "p9ofrQWi": "t4vjYhLs"}, "goalValue": 0.008614948163545133, "hidden": true, "incremental": false, "lockedIcons": [{"slug": "0szbS3ON", "url": "vdWfMFRy"}, {"slug": "CfAVrUJ6", "url": "PghwvGuX"}, {"slug": "SVbZTS2s", "url": "ZQxmJLvn"}], "name": {"pfnQjDOf": "wHZ9CTWB", "FLU7Xb14": "PObnzub4", "wgG42Lq5": "r9zGbaiy"}, "statCode": "v0E7bU01", "tags": ["QPm7T4MN", "kTK4fqnv", "WE0Z8iFI"], "unlockedIcons": [{"slug": "KquHlt7z", "url": "7p30Ar47"}, {"slug": "k1F1Dga7", "url": "tv90jCbQ"}, {"slug": "dK6pq2G2", "url": "qSuVag37"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn achievement \
    --op AdminUpdateAchievement \
    --achievementCode 'karmIWJV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'AdminUpdateAchievement' test.out

#- 8 AdminDeleteAchievement
$CLI_EXE \
    --sn achievement \
    --op AdminDeleteAchievement \
    --achievementCode 'jLCBVxJH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 8 'AdminDeleteAchievement' test.out

#- 9 AdminUpdateAchievementListOrder
# body param: body
echo '{"targetOrder": 97}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn achievement \
    --op AdminUpdateAchievementListOrder \
    --achievementCode 'n0yJocX8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 9 'AdminUpdateAchievementListOrder' test.out

#- 10 AdminListUserAchievements
$CLI_EXE \
    --sn achievement \
    --op AdminListUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'cnPWNeIr' \
    --limit '97' \
    --offset '14' \
    --preferUnlocked 'true' \
    > test.out 2>&1
eval_tap $? 10 'AdminListUserAchievements' test.out

#- 11 AdminUnlockAchievement
$CLI_EXE \
    --sn achievement \
    --op AdminUnlockAchievement \
    --achievementCode 'N74gShqc' \
    --namespace $AB_NAMESPACE \
    --userId 'cgB3GLMB' \
    > test.out 2>&1
eval_tap $? 11 'AdminUnlockAchievement' test.out

#- 12 PublicListAchievements
$CLI_EXE \
    --sn achievement \
    --op PublicListAchievements \
    --namespace $AB_NAMESPACE \
    --limit '25' \
    --offset '24' \
    --sortBy 'listOrder:desc' \
    --language 'nVAv0tWz' \
    > test.out 2>&1
eval_tap $? 12 'PublicListAchievements' test.out

#- 13 PublicGetAchievement
$CLI_EXE \
    --sn achievement \
    --op PublicGetAchievement \
    --achievementCode 'bgolu1Fs' \
    --namespace $AB_NAMESPACE \
    --language 'F5cftGxY' \
    > test.out 2>&1
eval_tap $? 13 'PublicGetAchievement' test.out

#- 14 PublicListUserAchievements
$CLI_EXE \
    --sn achievement \
    --op PublicListUserAchievements \
    --namespace $AB_NAMESPACE \
    --userId 'Gr0Kmh1U' \
    --limit '59' \
    --offset '87' \
    --preferUnlocked 'true' \
    > test.out 2>&1
eval_tap $? 14 'PublicListUserAchievements' test.out

#- 15 PublicUnlockAchievement
$CLI_EXE \
    --sn achievement \
    --op PublicUnlockAchievement \
    --achievementCode 'MGSFOyMV' \
    --namespace $AB_NAMESPACE \
    --userId 'TUKq0Imq' \
    > test.out 2>&1
eval_tap $? 15 'PublicUnlockAchievement' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE