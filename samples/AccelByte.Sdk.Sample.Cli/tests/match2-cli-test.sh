#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..39"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetHealthcheckInfo
$CLI_EXE \
    --sn match2 \
    --op GetHealthcheckInfo \
    > test.out 2>&1
eval_tap $? 2 'GetHealthcheckInfo' test.out

#- 3 GetHealthcheckInfoV1
$CLI_EXE \
    --sn match2 \
    --op GetHealthcheckInfoV1 \
    > test.out 2>&1
eval_tap $? 3 'GetHealthcheckInfoV1' test.out

#- 4 AdminGetLogConfig
$CLI_EXE \
    --sn match2 \
    --op AdminGetLogConfig \
    > test.out 2>&1
eval_tap $? 4 'AdminGetLogConfig' test.out

#- 5 AdminPatchUpdateLogConfig
# body param: body
echo '{"logLevel": "debug"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op AdminPatchUpdateLogConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminPatchUpdateLogConfig' test.out

#- 6 AdminGetAllConfigV1
$CLI_EXE \
    --sn match2 \
    --op AdminGetAllConfigV1 \
    > test.out 2>&1
eval_tap $? 6 'AdminGetAllConfigV1' test.out

#- 7 AdminGetConfigV1
$CLI_EXE \
    --sn match2 \
    --op AdminGetConfigV1 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 7 'AdminGetConfigV1' test.out

#- 8 AdminPatchConfigV1
# body param: body
echo '{"crossPlatformNoCurrentPlatform": true, "extraPlatforms": ["i3wMWnoZgIhwb8YY", "MLqpQwkRRHkaiKsm", "IiRLR3IlNJKxhPfW"], "matchAnyCommon": false, "platformGroup": {"dIabcFbSmeuIBroF": ["7bwRgwKvzESbhpxl", "DdEs4igdKeLmy8tZ", "5GZi5P12c61ts3fM"], "I04rm2jUc9iav3tT": ["qlE9oLDPD0Lfle8E", "SU1MO8XnVaEyjmif", "JDYa1TJPUszmFGEk"], "JVvqDSU3PDyIAGfG": ["q1FNmRWvUvDPnKoE", "CjGUg867xodwuG14", "ID5l5wj6K2wEMnck"]}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op AdminPatchConfigV1 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 8 'AdminPatchConfigV1' test.out

#- 9 EnvironmentVariableList
$CLI_EXE \
    --sn match2 \
    --op EnvironmentVariableList \
    > test.out 2>&1
eval_tap $? 9 'EnvironmentVariableList' test.out

#- 10 CreateBackfill
# body param: body
echo '{"matchPool": "jlW6BywsSSZTGlub", "sessionId": "smhjXcScOUvrjJBO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateBackfill \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'CreateBackfill' test.out

#- 11 GetBackfillProposal
$CLI_EXE \
    --sn match2 \
    --op GetBackfillProposal \
    --namespace $AB_NAMESPACE \
    --sessionID '7tbkTGYKqRMSTisP' \
    > test.out 2>&1
eval_tap $? 11 'GetBackfillProposal' test.out

#- 12 GetBackfill
$CLI_EXE \
    --sn match2 \
    --op GetBackfill \
    --backfillID '0MrSdaFy0pJYCdfk' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'GetBackfill' test.out

#- 13 DeleteBackfill
$CLI_EXE \
    --sn match2 \
    --op DeleteBackfill \
    --backfillID 'fyt09ro5fHdWqJTN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 13 'DeleteBackfill' test.out

#- 14 AcceptBackfill
# body param: body
echo '{"acceptedTicketIds": ["jrmpnnEckHH8kT9o", "XVandercf1nq4Hf3", "2SL5PjaYEDxaYN8w"], "proposalId": "9KUW0py8KrcQfucS", "stop": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op AcceptBackfill \
    --backfillID 'YUMhD9qU89D356pV' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 14 'AcceptBackfill' test.out

#- 15 RejectBackfill
# body param: body
echo '{"proposalId": "sUtNanddzgwxYdQc", "stop": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op RejectBackfill \
    --backfillID 'mCSoGeQCahcox63c' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 15 'RejectBackfill' test.out

#- 16 MatchFunctionList
$CLI_EXE \
    --sn match2 \
    --op MatchFunctionList \
    --namespace $AB_NAMESPACE \
    --limit '49' \
    --offset '61' \
    > test.out 2>&1
eval_tap $? 16 'MatchFunctionList' test.out

#- 17 CreateMatchFunction
# body param: body
echo '{"match_function": "Hwi7vg3osbh0fL2h", "serviceAppName": "7eJvAS2W4uqkhwSC", "url": "7EajwHO3LfvwPewr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateMatchFunction \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 17 'CreateMatchFunction' test.out

#- 18 UpdateMatchFunction
# body param: body
echo '{"match_function": "f19Njm50xCDlPeNq", "serviceAppName": "0CvMXtyUWXrdZaFe", "url": "acGT2x6o28Njxyw7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op UpdateMatchFunction \
    --name 'RHldq0m7NjUZ95Z5' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 18 'UpdateMatchFunction' test.out

#- 19 DeleteMatchFunction
$CLI_EXE \
    --sn match2 \
    --op DeleteMatchFunction \
    --name 'XDLBN9YGVPtkjt0O' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'DeleteMatchFunction' test.out

#- 20 MatchPoolList
$CLI_EXE \
    --sn match2 \
    --op MatchPoolList \
    --namespace $AB_NAMESPACE \
    --limit '50' \
    --name 'y4drHlPcXGGl0Xw3' \
    --offset '43' \
    > test.out 2>&1
eval_tap $? 20 'MatchPoolList' test.out

#- 21 CreateMatchPool
# body param: body
echo '{"auto_accept_backfill_proposal": false, "backfill_proposal_expiration_seconds": 18, "backfill_ticket_expiration_seconds": 56, "best_latency_calculation_method": "CzZVcGomWF1oAqUN", "crossplay_disabled": true, "match_function": "DtXnXLvOAsW8wYh4", "match_function_override": {"backfill_matches": "gq7pRVZVLJiDx3au", "enrichment": ["9b9QjhzDlnJmi4Xa", "BTgoXjfdUQHa3Rxs", "pSqwdbTR2sgzfaQr"], "make_matches": "UCW9fgo69uv1bkFx", "stat_codes": ["8DmbC9UqYdYrdxNn", "uMcAwrSzYnrcetxO", "beisZelKuD0iJ6fs"], "validation": ["3zL9H4WxGWRH7fz4", "BdPhLtHRJOImSq37", "aeAaGq0NIj53gXkm"]}, "name": "rayvcIYiWxIAxfvL", "platform_group_enabled": true, "rule_set": "k10b27RdU8VceYQ9", "session_template": "erPYQ5yVcQuvDbGM", "ticket_expiration_seconds": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateMatchPool \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'CreateMatchPool' test.out

#- 22 MatchPoolDetails
$CLI_EXE \
    --sn match2 \
    --op MatchPoolDetails \
    --namespace $AB_NAMESPACE \
    --pool 'v5z6wosJGnUyCMEb' \
    > test.out 2>&1
eval_tap $? 22 'MatchPoolDetails' test.out

#- 23 UpdateMatchPool
# body param: body
echo '{"auto_accept_backfill_proposal": false, "backfill_proposal_expiration_seconds": 42, "backfill_ticket_expiration_seconds": 94, "best_latency_calculation_method": "E4DmJ4Suj6DjUw36", "crossplay_disabled": true, "match_function": "IiTEoTCSxjAqg9oG", "match_function_override": {"backfill_matches": "VEdC8mQir1Af0G6O", "enrichment": ["rPH6ZsjpPgHKISHt", "B8tWdJM9Qc5HmR0v", "knXO45AUtNXSTItt"], "make_matches": "35OJTfJBZX62yI9g", "stat_codes": ["5RDrlzPFQmNu3ERx", "V0UTaiSzfi0FnBER", "e8qNYRTYSaZw4NqS"], "validation": ["NylcljuNM3eUUSD1", "pZGMfPdGIOAZ86un", "0L98WUoXvfU4qMIp"]}, "platform_group_enabled": false, "rule_set": "jCpNtJSMm8kDi3Rw", "session_template": "ubq7wtRGdT447Oa5", "ticket_expiration_seconds": 24}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op UpdateMatchPool \
    --namespace $AB_NAMESPACE \
    --pool 'xJyNnvHKrm8UuNlT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'UpdateMatchPool' test.out

#- 24 DeleteMatchPool
$CLI_EXE \
    --sn match2 \
    --op DeleteMatchPool \
    --namespace $AB_NAMESPACE \
    --pool '86N9yO0vyD6J5brV' \
    > test.out 2>&1
eval_tap $? 24 'DeleteMatchPool' test.out

#- 25 MatchPoolMetric
$CLI_EXE \
    --sn match2 \
    --op MatchPoolMetric \
    --namespace $AB_NAMESPACE \
    --pool 'o20e6POTjrinAVVo' \
    > test.out 2>&1
eval_tap $? 25 'MatchPoolMetric' test.out

#- 26 PostMatchErrorMetric
# body param: body
echo '{"type": "getExternalDS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op PostMatchErrorMetric \
    --namespace $AB_NAMESPACE \
    --pool 'ZjuyFhvbxX2DNbkn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 26 'PostMatchErrorMetric' test.out

#- 27 GetPlayerMetric
$CLI_EXE \
    --sn match2 \
    --op GetPlayerMetric \
    --namespace $AB_NAMESPACE \
    --pool 'fVv4nm70TCayYAkF' \
    > test.out 2>&1
eval_tap $? 27 'GetPlayerMetric' test.out

#- 28 AdminGetMatchPoolTickets
$CLI_EXE \
    --sn match2 \
    --op AdminGetMatchPoolTickets \
    --namespace $AB_NAMESPACE \
    --pool '18YBwRxcREyU5Cwq' \
    --limit '67' \
    --offset '39' \
    > test.out 2>&1
eval_tap $? 28 'AdminGetMatchPoolTickets' test.out

#- 29 CreateMatchTicket
# body param: body
echo '{"attributes": {"JF6nDi33Iztr2Qcw": {}, "lRrReRajlpk8lfui": {}, "JVcktlx9zJZVVCc9": {}}, "excludedSessions": ["bpIHEWQMmCkIqwqp", "oTVCNrcaVozsjIXO", "2EUsAfBvo6Llcalk"], "latencies": {"s2R3VMtipTVxXAF8": 75, "rf2qXQFCzRV1paEL": 18, "xeTLJQsZcTEzXaXU": 52}, "matchPool": "AIfYtYozA2OntGCw", "sessionID": "QSHHdPLwjTngrvb2", "storage": {"E1X9ecBBhRAYjR7c": {}, "4x5bIk8pVpxdUWOP": {}, "el3TiwTycqpVdINX": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateMatchTicket \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 29 'CreateMatchTicket' test.out

#- 30 GetMyMatchTickets
$CLI_EXE \
    --sn match2 \
    --op GetMyMatchTickets \
    --namespace $AB_NAMESPACE \
    --limit '51' \
    --matchPool 'TLwSH8hWRU9pbItG' \
    --offset '86' \
    > test.out 2>&1
eval_tap $? 30 'GetMyMatchTickets' test.out

#- 31 MatchTicketDetails
$CLI_EXE \
    --sn match2 \
    --op MatchTicketDetails \
    --namespace $AB_NAMESPACE \
    --ticketid 'Ox7eICkauWbFrSnU' \
    > test.out 2>&1
eval_tap $? 31 'MatchTicketDetails' test.out

#- 32 DeleteMatchTicket
$CLI_EXE \
    --sn match2 \
    --op DeleteMatchTicket \
    --namespace $AB_NAMESPACE \
    --ticketid '7d1BuhdwliTSDdmG' \
    > test.out 2>&1
eval_tap $? 32 'DeleteMatchTicket' test.out

#- 33 RuleSetList
$CLI_EXE \
    --sn match2 \
    --op RuleSetList \
    --namespace $AB_NAMESPACE \
    --limit '98' \
    --name 'TxiS06UEoaDZpXOW' \
    --offset '53' \
    > test.out 2>&1
eval_tap $? 33 'RuleSetList' test.out

#- 34 CreateRuleSet
# body param: body
echo '{"data": {"88Dfc7114QFGwTzB": {}, "VDg5v71kGCEt7h1m": {}, "VwIQCJmQkvWbQrn2": {}}, "enable_custom_match_function": true, "name": "0VkOF0pQOY0UCcVi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateRuleSet \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 34 'CreateRuleSet' test.out

#- 35 RuleSetDetails
$CLI_EXE \
    --sn match2 \
    --op RuleSetDetails \
    --namespace $AB_NAMESPACE \
    --ruleset 'iFKNjkT5hcONCaOy' \
    > test.out 2>&1
eval_tap $? 35 'RuleSetDetails' test.out

#- 36 UpdateRuleSet
# body param: body
echo '{"data": {"ATBFgqLeAzvdcUEh": {}, "WRo6ROvbuPQwl9dV": {}, "fJQGkDR00ofXsbnE": {}}, "enable_custom_match_function": true, "name": "mYSsBxtyKWssEn5V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op UpdateRuleSet \
    --namespace $AB_NAMESPACE \
    --ruleset 'EvIMEB4pl506fLCG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'UpdateRuleSet' test.out

#- 37 DeleteRuleSet
$CLI_EXE \
    --sn match2 \
    --op DeleteRuleSet \
    --namespace $AB_NAMESPACE \
    --ruleset '6EAl7d3Ks65thtnj' \
    > test.out 2>&1
eval_tap $? 37 'DeleteRuleSet' test.out

#- 38 PublicGetPlayerMetric
$CLI_EXE \
    --sn match2 \
    --op PublicGetPlayerMetric \
    --namespace $AB_NAMESPACE \
    --pool 'cMSw1J42fthKUoba' \
    > test.out 2>&1
eval_tap $? 38 'PublicGetPlayerMetric' test.out

#- 39 VersionCheckHandler
$CLI_EXE \
    --sn match2 \
    --op VersionCheckHandler \
    > test.out 2>&1
eval_tap $? 39 'VersionCheckHandler' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE