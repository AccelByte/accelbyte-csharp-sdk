#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..46"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetHealthcheckInfo
$CLI_EXE \
    --sn match2 \
    --op GetHealthcheckInfo \
    > test.out 2>&1
eval_tap $? 2 'GetHealthcheckInfo' test.out

#- 3 GetHealthcheckInfoV1
$CLI_EXE \
    --sn match2 \
    --op GetHealthcheckInfoV1 \
    > test.out 2>&1
eval_tap $? 3 'GetHealthcheckInfoV1' test.out

#- 4 AdminGetLogConfig
$CLI_EXE \
    --sn match2 \
    --op AdminGetLogConfig \
    > test.out 2>&1
eval_tap $? 4 'AdminGetLogConfig' test.out

#- 5 AdminPatchUpdateLogConfig
# body param: body
echo '{"logLevel": "debug"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op AdminPatchUpdateLogConfig \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'AdminPatchUpdateLogConfig' test.out

#- 6 AdminGetPlayFeatureFlag
$CLI_EXE \
    --sn match2 \
    --op AdminGetPlayFeatureFlag \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 6 'AdminGetPlayFeatureFlag' test.out

#- 7 AdminUpsertPlayFeatureFlag
# body param: body
echo '{"ENABLE_AUTO_CANCEL_MATCH_USER_DISCONNECT": true, "ENABLE_AUTO_CANCEL_MATCH_USER_LEAVE": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op AdminUpsertPlayFeatureFlag \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 7 'AdminUpsertPlayFeatureFlag' test.out

#- 8 AdminDeletePlayFeatureFlag
$CLI_EXE \
    --sn match2 \
    --op AdminDeletePlayFeatureFlag \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 8 'AdminDeletePlayFeatureFlag' test.out

#- 9 AdminGetXRayConfig
$CLI_EXE \
    --sn match2 \
    --op AdminGetXRayConfig \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 9 'AdminGetXRayConfig' test.out

#- 10 AdminUpdateXRayConfig
# body param: body
echo '{"whitelistedUsers": ["uz5zkoaUEzGS3qZf", "0PbemSBELbZ0VBUG", "A7nkDeev2Oj060Hn"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op AdminUpdateXRayConfig \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 10 'AdminUpdateXRayConfig' test.out

#- 11 AdminGetAllConfigV1
$CLI_EXE \
    --sn match2 \
    --op AdminGetAllConfigV1 \
    > test.out 2>&1
eval_tap $? 11 'AdminGetAllConfigV1' test.out

#- 12 AdminGetConfigV1
$CLI_EXE \
    --sn match2 \
    --op AdminGetConfigV1 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 12 'AdminGetConfigV1' test.out

#- 13 AdminPatchConfigV1
# body param: body
echo '{"crossPlatformNoCurrentPlatform": false, "extraPlatforms": ["dIabcFbSmeuIBroF", "7bwRgwKvzESbhpxl", "DdEs4igdKeLmy8tZ"], "matchAnyCommon": false, "platformGroup": {"tTYZLJ58QqcV3Icu": ["Ns9MF5BT2KD18yrW", "orpC65VJh4q1z1KJ", "mKedBfbWvKa5Ou12"], "4TsbQsxYFxGGHrfQ": ["kgXkiA5IZPqCqp9v", "cyt67WAfWXfUfwGB", "03tz8qIH4uRdNO08"], "HN6s9p8Y5c9eItJt": ["iNmY3y3n2Rim4NBq", "huNtj8FOvKZjs1tL", "pERf77LzPoORBkRm"]}, "xrayMaxWhitelistedUserCount": 6}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op AdminPatchConfigV1 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 13 'AdminPatchConfigV1' test.out

#- 14 EnvironmentVariableList
$CLI_EXE \
    --sn match2 \
    --op EnvironmentVariableList \
    > test.out 2>&1
eval_tap $? 14 'EnvironmentVariableList' test.out

#- 15 AdminQueryBackfill
$CLI_EXE \
    --sn match2 \
    --op AdminQueryBackfill \
    --namespace $AB_NAMESPACE \
    --fromTime '1997-12-26T00:00:00Z' \
    --isActive 'true' \
    --limit '64' \
    --matchPool '2zyZsb4FvWFIHPIb' \
    --offset '82' \
    --playerID '5fHdWqJTNjrmpnnE' \
    --region 'ckHH8kT9oXVander' \
    --sessionID 'cf1nq4Hf32SL5Pja' \
    --toTime '1996-02-13T00:00:00Z' \
    > test.out 2>&1
eval_tap $? 15 'AdminQueryBackfill' test.out

#- 16 CreateBackfill
# body param: body
echo '{"matchPool": "EDxaYN8w9KUW0py8", "sessionId": "KrcQfucSq2X8gFuJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateBackfill \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'CreateBackfill' test.out

#- 17 GetBackfillProposal
$CLI_EXE \
    --sn match2 \
    --op GetBackfillProposal \
    --namespace $AB_NAMESPACE \
    --sessionID 'ORk4j04YfnXTsQUr' \
    > test.out 2>&1
eval_tap $? 17 'GetBackfillProposal' test.out

#- 18 GetBackfill
$CLI_EXE \
    --sn match2 \
    --op GetBackfill \
    --backfillID 'A0WWyKl2K5mCSoGe' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 18 'GetBackfill' test.out

#- 19 DeleteBackfill
$CLI_EXE \
    --sn match2 \
    --op DeleteBackfill \
    --backfillID 'QCahcox63cyDxAAY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 19 'DeleteBackfill' test.out

#- 20 AcceptBackfill
# body param: body
echo '{"acceptedTicketIds": ["cRXJdoSTxNCK9AIj", "NmbfoW8bDq5jPqzh", "N0YdGSrA9LXRwU6W"], "proposalId": "LgpQE9nXzhBC0uyM", "stop": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op AcceptBackfill \
    --backfillID '4Xf2nfYvNvG8uQ14' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'AcceptBackfill' test.out

#- 21 RejectBackfill
# body param: body
echo '{"proposalId": "AhsxaALiBwpNJorn", "stop": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op RejectBackfill \
    --backfillID 'm7NjUZ95Z5XDLBN9' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 21 'RejectBackfill' test.out

#- 22 MatchFunctionList
$CLI_EXE \
    --sn match2 \
    --op MatchFunctionList \
    --namespace $AB_NAMESPACE \
    --limit '29' \
    --offset '66' \
    > test.out 2>&1
eval_tap $? 22 'MatchFunctionList' test.out

#- 23 CreateMatchFunction
# body param: body
echo '{"match_function": "WTdHAkcyAy4drHlP", "serviceAppName": "cXGGl0Xw3veBfrpC", "url": "rnbaxhEvn3SGqcH9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateMatchFunction \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 23 'CreateMatchFunction' test.out

#- 24 MatchFunctionGet
$CLI_EXE \
    --sn match2 \
    --op MatchFunctionGet \
    --name '1fC3aJEoqWaFAGD6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 24 'MatchFunctionGet' test.out

#- 25 UpdateMatchFunction
# body param: body
echo '{"match_function": "PRg95m07l03vtlMF", "serviceAppName": "zeiMRkcOr1L0TMIc", "url": "zbYilOziwG8CPLOz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op UpdateMatchFunction \
    --name 'SZm9K3cMY617HSCY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'UpdateMatchFunction' test.out

#- 26 DeleteMatchFunction
$CLI_EXE \
    --sn match2 \
    --op DeleteMatchFunction \
    --name 'ZaL46I3PgCcQ0axT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 26 'DeleteMatchFunction' test.out

#- 27 MatchPoolList
$CLI_EXE \
    --sn match2 \
    --op MatchPoolList \
    --namespace $AB_NAMESPACE \
    --limit '99' \
    --name 'C9UqYdYrdxNnuMcA' \
    --offset '46' \
    > test.out 2>&1
eval_tap $? 27 'MatchPoolList' test.out

#- 28 CreateMatchPool
# body param: body
echo '{"auto_accept_backfill_proposal": true, "backfill_proposal_expiration_seconds": 36, "backfill_ticket_expiration_seconds": 56, "best_latency_calculation_method": "SzYnrcetxObeisZe", "crossplay_disabled": false, "match_function": "wmYFbxRvHYDCYwoG", "match_function_override": {"backfill_matches": "dmzXgf1ewUTvnu0e", "enrichment": ["nsa3MZF7DTswnkSy", "uJTVjKQ1ORLEIAeP", "vDO2xkVgyRk10b27"], "make_matches": "RdU8VceYQ9erPYQ5", "stat_codes": ["yVcQuvDbGMqbEHkC", "QwMBcQUNPHN8YZT0", "yJJ0uCjjaNCRV3hS"], "validation": ["IiTEoTCSxjAqg9oG", "VEdC8mQir1Af0G6O", "rPH6ZsjpPgHKISHt"]}, "name": "B8tWdJM9Qc5HmR0v", "platform_group_enabled": false, "rule_set": "c8lGIYWTwxyqQQIX", "session_template": "VmrtRlq1jv60HTnm", "ticket_expiration_seconds": 64}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateMatchPool \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 28 'CreateMatchPool' test.out

#- 29 MatchPoolDetails
$CLI_EXE \
    --sn match2 \
    --op MatchPoolDetails \
    --namespace $AB_NAMESPACE \
    --pool 'RDrlzPFQmNu3ERxV' \
    > test.out 2>&1
eval_tap $? 29 'MatchPoolDetails' test.out

#- 30 UpdateMatchPool
# body param: body
echo '{"auto_accept_backfill_proposal": true, "backfill_proposal_expiration_seconds": 96, "backfill_ticket_expiration_seconds": 93, "best_latency_calculation_method": "k3skhn3mWZjTYM95", "crossplay_disabled": false, "match_function": "YRTYSaZw4NqSNylc", "match_function_override": {"backfill_matches": "ljuNM3eUUSD1pZGM", "enrichment": ["fPdGIOAZ86un0L98", "WUoXvfU4qMIpfgxw", "2ff5twRYbtdK2r4w"], "make_matches": "Ws6IpYBxafo9b4xJ", "stat_codes": ["yNnvHKrm8UuNlT86", "N9yO0vyD6J5brVo2", "0e6POTjrinAVVovp"], "validation": ["AAXNzcpbmX3lLFeX", "CiaXP8jBjK81t2V9", "TVauFcGkPgQ0hb2t"]}, "platform_group_enabled": true, "rule_set": "6nDi33Iztr2QcwlR", "session_template": "rReRajlpk8lfuiJV", "ticket_expiration_seconds": 5}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op UpdateMatchPool \
    --namespace $AB_NAMESPACE \
    --pool 'vKfFRqBam8jPtKHT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 30 'UpdateMatchPool' test.out

#- 31 DeleteMatchPool
$CLI_EXE \
    --sn match2 \
    --op DeleteMatchPool \
    --namespace $AB_NAMESPACE \
    --pool 'mzo0JmcQmnsUigVy' \
    > test.out 2>&1
eval_tap $? 31 'DeleteMatchPool' test.out

#- 32 MatchPoolMetric
$CLI_EXE \
    --sn match2 \
    --op MatchPoolMetric \
    --namespace $AB_NAMESPACE \
    --pool 'njGFyVicGQAVv32f' \
    > test.out 2>&1
eval_tap $? 32 'MatchPoolMetric' test.out

#- 33 PostMatchErrorMetric
# body param: body
echo '{"type": "getExternalDS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op PostMatchErrorMetric \
    --namespace $AB_NAMESPACE \
    --pool 'sAfBvo6Llcalks2R' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 33 'PostMatchErrorMetric' test.out

#- 34 GetPlayerMetric
$CLI_EXE \
    --sn match2 \
    --op GetPlayerMetric \
    --namespace $AB_NAMESPACE \
    --pool '3VMtipTVxXAF8KhO' \
    > test.out 2>&1
eval_tap $? 34 'GetPlayerMetric' test.out

#- 35 AdminGetMatchPoolTickets
$CLI_EXE \
    --sn match2 \
    --op AdminGetMatchPoolTickets \
    --namespace $AB_NAMESPACE \
    --pool 'KqbrECijFxOpOzxe' \
    --limit '93' \
    --offset '46' \
    > test.out 2>&1
eval_tap $? 35 'AdminGetMatchPoolTickets' test.out

#- 36 CreateMatchTicket
# body param: body
echo '{"attributes": {"LJQsZcTEzXaXUzps": {}, "AV6ct6XITL0QEkad": {}, "MSQluAoED9oYwS8o": {}}, "excludedSessions": ["LyErKvRtHFGJRoGW", "7VBG1VB2sp2x9msz", "GGoyhGZAzt2OVBTL"], "latencies": {"wSH8hWRU9pbItGQ7": 97, "7eICkauWbFrSnU7d": 77, "BuhdwliTSDdmGVfe": 12}, "matchPool": "S06UEoaDZpXOWzpX", "sessionID": "Oi2cpajtqcXjPkj2", "storage": {"IzU3MEpCt1IjlfHJ": {}, "M92t9j1XT2ErwIxk": {}, "aTnYtr1YDnaXB0JO": {}}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateMatchTicket \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 36 'CreateMatchTicket' test.out

#- 37 GetMyMatchTickets
$CLI_EXE \
    --sn match2 \
    --op GetMyMatchTickets \
    --namespace $AB_NAMESPACE \
    --limit '91' \
    --matchPool 'KNjkT5hcONCaOyAT' \
    --offset '56' \
    > test.out 2>&1
eval_tap $? 37 'GetMyMatchTickets' test.out

#- 38 MatchTicketDetails
$CLI_EXE \
    --sn match2 \
    --op MatchTicketDetails \
    --namespace $AB_NAMESPACE \
    --ticketid 'oEidKw4IP0NVnaan' \
    > test.out 2>&1
eval_tap $? 38 'MatchTicketDetails' test.out

#- 39 DeleteMatchTicket
$CLI_EXE \
    --sn match2 \
    --op DeleteMatchTicket \
    --namespace $AB_NAMESPACE \
    --ticketid 'gorhVFpTRuQyMroT' \
    > test.out 2>&1
eval_tap $? 39 'DeleteMatchTicket' test.out

#- 40 RuleSetList
$CLI_EXE \
    --sn match2 \
    --op RuleSetList \
    --namespace $AB_NAMESPACE \
    --limit '66' \
    --name 'hNfKJ7q8sifSPmYS' \
    --offset '37' \
    > test.out 2>&1
eval_tap $? 40 'RuleSetList' test.out

#- 41 CreateRuleSet
# body param: body
echo '{"data": {"s0NmGhxv1vuN7Xv6": {}, "OuG6RR1jPh8Rblvn": {}, "fNiABRf1gdXM7QlA": {}}, "enable_custom_match_function": false, "name": "1J42fthKUobas2CA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op CreateRuleSet \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 41 'CreateRuleSet' test.out

#- 42 RuleSetDetails
$CLI_EXE \
    --sn match2 \
    --op RuleSetDetails \
    --namespace $AB_NAMESPACE \
    --ruleset 'lSxxVhDR9hlaznet' \
    > test.out 2>&1
eval_tap $? 42 'RuleSetDetails' test.out

#- 43 UpdateRuleSet
# body param: body
echo '{"data": {"BUGcQz2WvdiclkYG": {}, "DL2ckC9cdzaLnajQ": {}, "8GnJpALiddv9UUtG": {}}, "enable_custom_match_function": true, "name": "tEECsm8xaDOz0tMl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn match2 \
    --op UpdateRuleSet \
    --namespace $AB_NAMESPACE \
    --ruleset 'pFuJVXo9s0JPG8cg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 43 'UpdateRuleSet' test.out

#- 44 DeleteRuleSet
$CLI_EXE \
    --sn match2 \
    --op DeleteRuleSet \
    --namespace $AB_NAMESPACE \
    --ruleset 'jHQo9HoLLyUnPTiC' \
    > test.out 2>&1
eval_tap $? 44 'DeleteRuleSet' test.out

#- 45 PublicGetPlayerMetric
$CLI_EXE \
    --sn match2 \
    --op PublicGetPlayerMetric \
    --namespace $AB_NAMESPACE \
    --pool 'D0038or8wR0tuwIJ' \
    > test.out 2>&1
eval_tap $? 45 'PublicGetPlayerMetric' test.out

#- 46 VersionCheckHandler
$CLI_EXE \
    --sn match2 \
    --op VersionCheckHandler \
    > test.out 2>&1
eval_tap $? 46 'VersionCheckHandler' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE