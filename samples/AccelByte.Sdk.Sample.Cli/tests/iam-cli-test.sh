#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..350"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "bBuz5zkoaUEzGS3q", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["QwkRRHkaiKsmIiRL", "R3IlNJKxhPfWV6dI", "abcFbSmeuIBroF7b"], "preferRegex": true, "regex": "XFeqeuI2oMJ0cgAo"}, "blockedWord": ["GfXepE3r5AQUBqS8", "KtTYZLJ58QqcV3Ic", "uNs9MF5BT2KD18yr"], "description": [{"language": "WorpC65VJh4q1z1K", "message": ["JmKedBfbWvKa5Ou1", "24TsbQsxYFxGGHrf", "QkgXkiA5IZPqCqp9"]}, {"language": "vcyt67WAfWXfUfwG", "message": ["B03tz8qIH4uRdNO0", "8HN6s9p8Y5c9eItJ", "tiNmY3y3n2Rim4NB"]}, {"language": "qhuNtj8FOvKZjs1t", "message": ["LpERf77LzPoORBkR", "mZ0A2zyZsb4FvWFI", "HPIbOjpls9BZTYc5"]}], "isCustomRegex": true, "letterCase": "pnnEckHH8kT9oXVa", "maxLength": 27, "maxRepeatingAlphaNum": 9, "maxRepeatingSpecialCharacter": 7, "minCharType": 58, "minLength": 10, "regex": "aS6qyUCscHXs8PlO", "specialCharacterLocation": "BlfUOqv7WmCuqcsN", "specialCharacters": ["M7YAnbq4DjmYUMhD", "9qU89D356pVsUtNa", "nddzgwxYdQc5hEfe"]}}, {"field": "fdopcEM0JHfof2Hw", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["RXJdoSTxNCK9AIjN", "mbfoW8bDq5jPqzhN", "0YdGSrA9LXRwU6WL"], "preferRegex": false, "regex": "50xCDlPeNq0CvMXt"}, "blockedWord": ["yUWXrdZaFeacGT2x", "6o28Njxyw7RHldq0", "m7NjUZ95Z5XDLBN9"], "description": [{"language": "YGVPtkjt0OyBlJi4", "message": ["RbZ0Iy11mfOFjCzZ", "VcGomWF1oAqUNFDt", "XnXLvOAsW8wYh4gq"]}, {"language": "7pRVZVLJiDx3au9b", "message": ["9QjhzDlnJmi4XaBT", "goXjfdUQHa3RxspS", "qwdbTR2sgzfaQrUC"]}, {"language": "W9fgo69uv1bkFx8D", "message": ["mbC9UqYdYrdxNnuM", "cAwrSzYnrcetxObe", "isZelKuD0iJ6fs3z"]}], "isCustomRegex": true, "letterCase": "H4WxGWRH7fz4BdPh", "maxLength": 77, "maxRepeatingAlphaNum": 39, "maxRepeatingSpecialCharacter": 10, "minCharType": 69, "minLength": 28, "regex": "RJOImSq37aeAaGq0", "specialCharacterLocation": "NIj53gXkmrayvcIY", "specialCharacters": ["iWxIAxfvLzSpDFY3", "lxe16KsSRzkf2HzB", "cEio5UyvuFv5z6wo"]}}, {"field": "sJGnUyCMEbHh1uE4", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["jjaNCRV3hSIiTEoT", "CSxjAqg9oGVEdC8m", "Qir1Af0G6OrPH6Zs"], "preferRegex": false, "regex": "Vu27iwplLJdzYS9K"}, "blockedWord": ["0VvwE6MAqPc8lGIY", "WTwxyqQQIXVmrtRl", "q1jv60HTnmFrl3gY"], "description": [{"language": "x6Xmv1DzPHux3k3s", "message": ["khn3mWZjTYM95e4a", "a8xOJu7rNRVdygfK", "mUkzj9mHFpff2vDk"]}, {"language": "z68zorEgcExv9nKM", "message": ["OgO5W8SUaZjCpNtJ", "SMm8kDi3Rwubq7wt", "RGdT447Oa51m6VLf"]}, {"language": "jsw270pMmOQJrpEB", "message": ["bVvBn8Lsf2qSAtiz", "V9hzsVbpJLtEZjuy", "FhvbxX2DNbknfVv4"]}], "isCustomRegex": false, "letterCase": "XP8jBjK81t2V9TVa", "maxLength": 42, "maxRepeatingAlphaNum": 90, "maxRepeatingSpecialCharacter": 65, "minCharType": 48, "minLength": 5, "regex": "cREyU5CwqGJF6nDi", "specialCharacterLocation": "33Iztr2QcwlRrReR", "specialCharacters": ["ajlpk8lfuiJVcktl", "x9zJZVVCc9bpIHEW", "QMmCkIqwqpoTVCNr"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'caVozsjIXO2EUsAf' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'Bvo6Llcalks2R3VM' \
    --before 'tipTVxXAF8KhOKqb' \
    --limit '36' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 64, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'CijFxOpOzxeTLJQs' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'cTEzXaXUzpsAV6ct' \
    --limit '55' \
    --offset '71' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "OntGCwQSHHdPLwjT", "comment": "ngrvb2E1X9ecBBhR", "endDate": "AYjR7c4x5bIk8pVp", "reason": "xdUWOPel3TiwTycq", "skipNotif": true, "userIds": ["zt2OVBTLwSH8hWRU", "9pbItGQ7VUWBhGol", "wafIfbF1GLFnrQ4T"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "5cmw7U1TxiS06UEo", "userId": "aDZpXOWzpXOi2cpa"}, {"banId": "jtqcXjPkj2IzU3ME", "userId": "pCt1IjlfHJM92t9j"}, {"banId": "1XT2ErwIxkaTnYtr", "userId": "1YDnaXB0JOS4XKVT"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId '66sHYPgVsfhoEidK' \
    --clientName 'w4IP0NVnaangorhV' \
    --clientType 'FpTRuQyMroT2hNfK' \
    --limit '72' \
    --offset '29' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["q8sifSPmYSsBxtyK", "WssEn5VEvIMEB4pl", "506fLCG6EAl7d3Ks"], "baseUri": "65thtnjcMSw1J42f", "clientId": "thKUobas2CAlSxxV", "clientName": "hDR9hlaznetBUGcQ", "clientPermissions": [{"action": 53, "resource": "KsCBBgwb1hGjHJgx", "schedAction": 36, "schedCron": "9cdzaLnajQ8GnJpA", "schedRange": ["Liddv9UUtG1tEECs", "m8xaDOz0tMlpFuJV", "Xo9s0JPG8cgjHQo9"]}, {"action": 68, "resource": "BB1yz3iP8gH88Uen", "schedAction": 23, "schedCron": "r8wR0tuwIJnrSI2I", "schedRange": ["FcRwSoMTuJziuDNb", "Oydiu3lOaruuYw0i", "Uuts6bChMK1gcx8p"]}, {"action": 2, "resource": "fyv5PoMJeTIQix1F", "schedAction": 62, "schedCron": "FcxS2OZZfXO3HkJT", "schedRange": ["OPscPA2n25C1zEnA", "MGmFy7w6eqnMeKFo", "7U8Scr9xm68w7s9R"]}], "clientPlatform": "Mx2hc45QX234xnql", "deletable": false, "description": "ETQCBPK1mYwKVQoy", "namespace": "dbYjXZyBpqhCJBtF", "oauthAccessTokenExpiration": 83, "oauthAccessTokenExpirationTimeUnit": "biJEUePVZQaoEY2z", "oauthClientType": "rpLuvrx96OOz45vM", "oauthRefreshTokenExpiration": 18, "oauthRefreshTokenExpirationTimeUnit": "U8GP8TRVypSvYXKz", "parentNamespace": "4BGjbsrRBV8aztJ8", "redirectUri": "6yQK1AsC18UO6JcX", "scopes": ["mwQfkseTpH6l2Dv8", "SvqYKc56PcPSL2xm", "jViKkKw4gHA4CaLs"], "secret": "PqRsTdKzcKtkGcvn", "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'Wse6VLPkM1VTrQBy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'whJ7lbBLw9xy1WQM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["5qUS8baUqkzSr41y", "6RPBHJuPjj8zDwOk", "0IgmYfUTpFzyQhPV"], "baseUri": "hRGX9xlUKhXI8mL8", "clientName": "OIhvP68xE68dzohx", "clientPermissions": [{"action": 15, "resource": "FJHWE6s13b7dmnPi", "schedAction": 20, "schedCron": "hp3qY6T7TUEBotSN", "schedRange": ["IwGhia6cqoWmnhtu", "zxir12r0VUWI0kJA", "czj5ApcsiEQ65llg"]}, {"action": 67, "resource": "qoxujXDosOo2kSUf", "schedAction": 70, "schedCron": "KlbPRxfucxoRKFLx", "schedRange": ["xcL9SyuHbvRxR6La", "KWgAVjZKDxiezEbu", "MCz9J4dPRGzoQLYI"]}, {"action": 99, "resource": "LcgKgU9406tdRDqr", "schedAction": 28, "schedCron": "cpVbaH69NyTfGE59", "schedRange": ["942bCwgpzUfcmTQj", "RmV0CPt1LUaTvrFa", "xzOfG3pTddIA0Rt6"]}], "clientPlatform": "wM5oQvTMICtWyUtV", "deletable": true, "description": "IqWmOoMyYp2tSrLx", "namespace": "pJnj9JtgjWmjx1Wu", "oauthAccessTokenExpiration": 81, "oauthAccessTokenExpirationTimeUnit": "JTYuHpnpVX5u4gw4", "oauthRefreshTokenExpiration": 98, "oauthRefreshTokenExpirationTimeUnit": "BXDD7BG73sDdDoXn", "redirectUri": "B8F5X05KUgGKfDSG", "scopes": ["h3vQFPSYCi8WEjR3", "wqpnMdSNskxhl3O3", "kGloooh7kL598P7F"], "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'hiNdx1V7199NT7JT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 90, "resource": "SR9q6l5k9BLQMrPo"}, {"action": 93, "resource": "kG09iEAFYWhow1WA"}, {"action": 47, "resource": "QEAbK416LN2N6D6y"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'czitn4OkZfx0Xa6s' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 14, "resource": "HoQ6ehLLK5h1bE9W"}, {"action": 96, "resource": "FQsvRHbGTC2ynue7"}, {"action": 79, "resource": "k4uDF5mdakWJ2AsK"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'f8UfQqTQ8v7gXyFu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '76' \
    --clientId 'IaPEkCIXX7WQ3ytA' \
    --namespace $AB_NAMESPACE \
    --resource 'BCzYWxYbbphuiQPU' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 129 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 130 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '57' \
    --offset '0' \
    > test.out 2>&1
eval_tap $? 130 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 131 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'e6T4pYH3BPyFurT4' \
    > test.out 2>&1
eval_tap $? 131 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 132 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "p8zoRYG8WKTaUyB0", "AWSCognitoRegion": "UyrKKulHUnompTrS", "AWSCognitoUserPool": "7DIOakX65w7RpxY6", "AllowedClients": ["pd1QTpFpaxbCjHSC", "XM7sL1nnOoRIg7oS", "h4yVttp53wasuHbA"], "AppId": "0keUomVCh681OMZF", "AuthorizationEndpoint": "NRw8YvLGLnB4xfqd", "ClientId": "HhPHA2ZbIvW1oxEN", "Environment": "H4MsVlbCMc5hx0W1", "FederationMetadataURL": "4SkvovINegS29leg", "GenericOauthFlow": false, "IsActive": false, "Issuer": "bqGwej59Ok8EM0OF", "JWKSEndpoint": "W93FkJicmK6qeaDE", "KeyID": "m9bPCS2a5WoOtwav", "NetflixCertificates": {"encryptedPrivateKey": "dioadjCN0lC0MZRZ", "encryptedPrivateKeyName": "AvhZ7XQmcT57Hl2P", "publicCertificate": "vPOKvc25nnSLnEnv", "publicCertificateName": "4ipAVJzPHM6kTwfu", "rootCertificate": "1vSD9gROMknwVRJf", "rootCertificateName": "XHGB1r66lbNcbMIJ"}, "OrganizationId": "EY0BmpF215jJycJc", "PlatformName": "SyXLzU9Uqk079uhB", "RedirectUri": "Ll4yz32RqkNzYSNY", "RegisteredDomains": [{"affectedClientIDs": ["l4zvyD8SUZv2LFFZ", "er6T3W7TE5WdocKz", "vgr3jBU2g8Eo7uAb"], "domain": "4HndxqQYO14lFR2Y", "namespaces": ["tIb1fufxJiodJFjE", "bn1ASMAiedHoYv6W", "mW9mRXQwc5sfOZbg"], "roleId": "nCmULqltV5xjjrXK"}, {"affectedClientIDs": ["hZOekpygvRDCk0ko", "CGDPfbiGdBQ5DNVJ", "AgfAkD0w0H6QM5As"], "domain": "Rnp9a7p0g0szNgC8", "namespaces": ["yVFlwGULKeMzn4sG", "6P5R2lHU9mf9rzrx", "uxtxg98cDF1fsD5m"], "roleId": "iAxHczgRu4VYjQq4"}, {"affectedClientIDs": ["VIVFUqNPuW223zuU", "v8ShbYBe9hLKcN6m", "yFUWf7IuLG63jl9r"], "domain": "YXaEFcUySnsIREQU", "namespaces": ["lwDt2XB6DgoJm4dq", "rLVSBWToF03dQYi0", "OxI4DZZd2V80fjN9"], "roleId": "CwM4qNT3awIjWoFC"}], "Secret": "W5BTW9laFjsd7gSF", "TeamID": "kIVGnXJLeUdD8XNx", "TokenAuthenticationType": "AkoeHk0BXouyKC6R", "TokenClaimsMapping": {"nO4PckO3syHJOMlg": "AqtsnZlLvEczKKAy", "iQv93N1fbGovPLBp": "XX8vScPhhhoeTbxu", "ngca58m1uNcxsQxr": "sxbLSv7uFZXdW5Gy"}, "TokenEndpoint": "Q2mveLZEnmSCeWTC", "UserInfoEndpoint": "XfARUx3U3KrfqoZi", "UserInfoHTTPMethod": "5xiHiQI9ieQ8y75B", "scopes": ["iw4pKJ8hey5JmuUD", "lojEc712JEhS1VFA", "1Eo4Rxcnq5DtzSai"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'fByaju2TY0QdHndD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 133 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'WB60eGxKadAf6UL9' \
    > test.out 2>&1
eval_tap $? 133 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 134 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "MkkVf8dHJYJF19Nc", "AWSCognitoRegion": "USJgQSBwkX1FU71K", "AWSCognitoUserPool": "0CzXzdQIWh5PSp02", "AllowedClients": ["4SIhnu3h3uK1jRHh", "Q2uS27tXHvtxi6Eb", "WHrMrbpZd2bt6P3s"], "AppId": "ZXAZkdh450P2HCQE", "AuthorizationEndpoint": "ysNYmCndtXXQgiHJ", "ClientId": "gjwpCxGEBsc3HVar", "Environment": "hLlwlmf1l5JhrQSp", "FederationMetadataURL": "GlguvTECefhiKKuc", "GenericOauthFlow": false, "IsActive": false, "Issuer": "rg4atANoOfyCbfBo", "JWKSEndpoint": "H6zLgTsYmAw4mFyL", "KeyID": "cIq00Vl8sxzC1fJx", "NetflixCertificates": {"encryptedPrivateKey": "roZeNIlbxAUeRUjU", "encryptedPrivateKeyName": "baPklfVic7zYJTjp", "publicCertificate": "mhWVBgTDm8IGJL3s", "publicCertificateName": "Epnq2qNgEjKMemox", "rootCertificate": "x1k2s5gW8zADPqu8", "rootCertificateName": "PVXnN0xl48RoZbNL"}, "OrganizationId": "7cXCVaF9U1H9bQv7", "PlatformName": "EybPwbHEHxSPaGCQ", "RedirectUri": "l5y1gekeqHnzZfY2", "RegisteredDomains": [{"affectedClientIDs": ["2Z1SmIc5NTRyLbOz", "AYD5IH4deTFCDORA", "suT0lseQtOoohdBY"], "domain": "hvvwspKpEPUUxc2N", "namespaces": ["KFB2qxCiWMNdvN9S", "DRKye6n1t8RXF5qa", "yS4UAMJrRrnNfXdT"], "roleId": "nJz7e3tD8KVlMU17"}, {"affectedClientIDs": ["V03QDQjU64lc3oek", "3RWXWJhPXvS9Ommt", "Z14XROPpbgqS9a9e"], "domain": "P72cbSH4TvY6sMCk", "namespaces": ["itXsNfi8EF3mgABw", "Fe1N0QNeryssScV8", "w2rN40y7aLOJoeZq"], "roleId": "RwJzTdMg00KvHLdM"}, {"affectedClientIDs": ["iaje6w7YN9MWtYzu", "rSMcK8c5xZukais9", "TopwzyVFe9lNT7v5"], "domain": "QycBCxJG7DehSEc6", "namespaces": ["kg2UWX8dfboaqkOS", "5P8ijeU7ceEjsJO7", "xZUK7lMGDnKhxDxW"], "roleId": "qk0FyDBDBxAznXS1"}], "Secret": "mfs6uZ9OaZwm6pPA", "TeamID": "dF5lHMHzBycY7bXy", "TokenAuthenticationType": "RpFUts9CpuTZNXAv", "TokenClaimsMapping": {"R5mEjDGi8Z9KuTHu": "T6IlImbAYCRvUBIH", "oIhUnq8EtmzVPJFq": "DDsFmDKPixcJtgNH", "rTEQpFB5aeIMGxoy": "LMqSLDNxuBA95CXk"}, "TokenEndpoint": "3K2oLMyvJ6M0zKUQ", "UserInfoEndpoint": "CLksfhWE1OiCOozF", "UserInfoHTTPMethod": "mZ3hzpayQ1ySXmHg", "scopes": ["ROq1X5e82zDrJtNc", "l4ztsaFwrylG42gH", "af4XEHX7QBUYvSup"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'GJqpwAp0WMu7ZUAb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 135 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["KsKi0fuipdvULHrq", "NhX3eWB4hfA53Ibt", "klb9jB4Gcb0L2EPZ"], "assignedNamespaces": ["QmxEO4oKOcsZUbeZ", "JJJydenJ93Kb1pQl", "eHG1UoswJzp9GPpG"], "domain": "ykMepZ0J4UuZWR40", "roleId": "7SE9ddXzA6F73IwV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '8d2jvk2NFEPFcj0B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 136 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "4pnGV0EaGDNAoaYe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ee5iUyPElT7mmAuO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 137 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'T58yIe9AzmsPC0C5' \
    > test.out 2>&1
eval_tap $? 137 'RetrieveSSOLoginPlatformCredential' test.out

#- 138 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "hWQuueyPPcbPVe3x", "apiKey": "xdxVhu4rkZZo8fTr", "appId": "6agunz2XzHsONpOR", "federationMetadataUrl": "aUZ573WSpmtV8p2s", "isActive": false, "redirectUri": "6Bi4udSrXnIItdui", "secret": "Uuy8tq9HCTgLSuFi", "ssoUrl": "v2W3x38AyIWIiWAk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'Zb55PmNf9MzOCP7H' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AddSSOLoginPlatformCredential' test.out

#- 139 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'O3NR5EmbWMmuHbWU' \
    > test.out 2>&1
eval_tap $? 139 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 140 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "eXEPRF6TjBh6iQOG", "apiKey": "SqSf29O4OCHr6PHD", "appId": "U3g8gwrRCGr34cRX", "federationMetadataUrl": "z9JsazgdXDoGshLr", "isActive": true, "redirectUri": "rO6SjBOH0izSSpVo", "secret": "q4E6CtycfHMbZoBg", "ssoUrl": "zDSnBtqToPbBDwdv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'FVFTK8mQqqA2VoUK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateSSOPlatformCredential' test.out

#- 141 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'BlsPXL4ibYVB9w0E' \
    --platformUserId 'TfSauutS9JWgSB39' \
    > test.out 2>&1
eval_tap $? 141 'AdminGetUserByPlatformUserIDV3' test.out

#- 142 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'nWJ0AdErhRmHmtCl' \
    --after '98' \
    --before '78' \
    --limit '25' \
    > test.out 2>&1
eval_tap $? 142 'GetAdminUsersByRoleIdV3' test.out

#- 143 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '85ELRv5NEe9bR9ck' \
    > test.out 2>&1
eval_tap $? 143 'AdminGetUserByEmailAddressV3' test.out

#- 144 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["NLMJjsgaXBRR415W", "Jviuc5vA36xYMMPe", "p0zplFiRg22RpUVt"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AdminListUserIDByUserIDsV3' test.out

#- 145 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["QXjItygvyTYykvnB", "2kvfxE0sqbjAHF9Q", "LlS2lC0QB41qRS25"], "isAdmin": true, "namespace": "Uz3vp9jpSUMWJyDV", "roles": ["ldaDNtR0AXW63sbP", "YTKP8EQupMajWTKw", "5FeR8ri3yXrzd1ie"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'AdminInviteUserV3' test.out

#- 146 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '94' \
    --offset '7' \
    --platformUserId 'RurPzBSUlLhIUZaq' \
    --platformId 'DR1n6aKcCVL5Fd1b' \
    > test.out 2>&1
eval_tap $? 146 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 147 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '87' \
    --offset '46' \
    > test.out 2>&1
eval_tap $? 147 'AdminListUsersV3' test.out

#- 148 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'UM30waRuDKnw63w8' \
    --endDate 'ZD7GzTZ0WS0ZfkVq' \
    --limit '75' \
    --offset '91' \
    --platformBy 'owfa2xO5BhQtMYVH' \
    --platformId 'Johu8Sfs3a0odaQ1' \
    --query 'HgT2WnpHkT1LxGYz' \
    --startDate 'olfxvDyx6IAAOUeU' \
    > test.out 2>&1
eval_tap $? 148 'AdminSearchUserV3' test.out

#- 149 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["RiiiEgBQnBdCORXu", "3yYfZ5p6HsVODk8y", "YxP6eRLWH719H0S9"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'AdminGetBulkUserByEmailAddressV3' test.out

#- 150 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId '6d6o92O9JTphnwOf' \
    > test.out 2>&1
eval_tap $? 150 'AdminGetUserByUserIdV3' test.out

#- 151 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "Fzh20ovT23TbEK3b", "country": "M30lxx1rT6fsKa4I", "dateOfBirth": "gtUwYePFCH42h6Lu", "displayName": "cfBcrN83Rs41H9Ay", "languageTag": "a2Ugl7sPCMcCq8KO", "userName": "F1FPASWEGLvHi2yA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '6ZsXJoVWUuZ6fQXM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'AdminUpdateUserV3' test.out

#- 152 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hnC8iRACppkc2Gjn' \
    --activeOnly 'false' \
    --after '6MqokeFNTOal7C9Q' \
    --before 'hMyKSxoXxGxkYjDc' \
    --limit '31' \
    > test.out 2>&1
eval_tap $? 152 'AdminGetUserBanV3' test.out

#- 153 AdminBanUserV3
# body param: body
echo '{"ban": "YEiOxHZltYdZOiBa", "comment": "fLm9cc3OUVUdC6vE", "endDate": "Q0Fb0fOzSwVrTe2P", "reason": "ix8IgOyJOxbfiuUD", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'r2rcfzqMDXs2AMIq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminBanUserV3' test.out

#- 154 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'XxAtcjA062eWYCE2' \
    --namespace $AB_NAMESPACE \
    --userId 'BZKl6Ks6ND0evlW0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminUpdateUserBanV3' test.out

#- 155 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "5Ize0EKI1ogofwrt", "emailAddress": "jPjSrjvrgKMZ79d1", "languageTag": "xh7UR0UxrnZ5OMXg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'RDRM3gg9nVFQuxak' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminSendVerificationCodeV3' test.out

#- 156 AdminVerifyAccountV3
# body param: body
echo '{"Code": "sqHEV6l9c1J0YV5S", "ContactType": "AUWFWpU4iAd1zlFB", "LanguageTag": "NJu2WkeGDSzlCaFt", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lMfYcKvIDQryhqRP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminVerifyAccountV3' test.out

#- 157 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'waSbAakeTI3GtLp3' \
    > test.out 2>&1
eval_tap $? 157 'GetUserVerificationCode' test.out

#- 158 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '3o0hY1hJyjnnZKdS' \
    > test.out 2>&1
eval_tap $? 158 'AdminGetUserDeletionStatusV3' test.out

#- 159 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 16, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'aVEfxNwD82TygHqJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminUpdateUserDeletionStatusV3' test.out

#- 160 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "CY44tteOU73MUia8", "country": "6OHeEezPfPVoLzua", "dateOfBirth": "ilZgh0VftM4duhPO", "displayName": "P3T7IILgTKDtEBny", "emailAddress": "ydnlmrax9HkcVJkc", "password": "KNqoctZZip2UOwEp", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'OojiniOJfBmQBpvp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminUpgradeHeadlessAccountV3' test.out

#- 161 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Dw5KbvwvhRu00Z9k' \
    > test.out 2>&1
eval_tap $? 161 'AdminDeleteUserInformationV3' test.out

#- 162 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Q6CfVEKuBGQj6IM6' \
    --after '0.40245406067455647' \
    --before '0.46723488455729145' \
    --limit '72' \
    > test.out 2>&1
eval_tap $? 162 'AdminGetUserLoginHistoriesV3' test.out

#- 163 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "yo6eKkz3So92LmNH", "newPassword": "qeozPTvTyjHzkSDJ", "oldPassword": "wI3p6udT5ywNYrZ3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'noFX2D35kjfYLmyJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'AdminResetPasswordV3' test.out

#- 164 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 69, "Resource": "nvbwCSAfTUy9Iqsv", "SchedAction": 79, "SchedCron": "3W67ojKlGpC6ngrW", "SchedRange": ["r5beUGEW4t5eLuFO", "uGciip6lhOAT5962", "9Ly5GJfaRlZeRpPn"]}, {"Action": 72, "Resource": "gDFyRpEbkRLet6qH", "SchedAction": 64, "SchedCron": "rCKgoc8qlZTdK2Tx", "SchedRange": ["yWH1R8xeeueyWn4Y", "odSIhZNsnN86SsqD", "74VrPBlaPDrv6Eb7"]}, {"Action": 59, "Resource": "4TDsTGVcn6u2Y8kR", "SchedAction": 92, "SchedCron": "IP5dOI5JEsCwYwxu", "SchedRange": ["LPzTV7F70crSgCYg", "V6hpjYneP7VkRsz0", "E1TgaU2K2n1JMpCm"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LAckoGMrfqXh9Yi9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminUpdateUserPermissionV3' test.out

#- 165 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 37, "Resource": "Q728o1qclvhlm929", "SchedAction": 53, "SchedCron": "qeScWxFqCo2THUCS", "SchedRange": ["fVY7SEGOwWwVPMXi", "6TiqSRiBbSv5Mu9p", "sphB22GwYtWzihoA"]}, {"Action": 55, "Resource": "UZno0upxwRKEKNIl", "SchedAction": 0, "SchedCron": "1Ulth6WUsfyOIdVf", "SchedRange": ["GOJIPb5iLNRM7JFa", "uJ3tVsetZATTbB1Z", "GFmU24Z5anp1Fr9P"]}, {"Action": 15, "Resource": "8c1Kpu4lqYfwmcvv", "SchedAction": 55, "SchedCron": "jCvt8SZQVAQVTEjL", "SchedRange": ["xRXXw1Ba3BCLDK9E", "HH019QefK1Zmj8Wf", "Gj2nDHeEHT96WiKF"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qOEuv5vimn63Casx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminAddUserPermissionsV3' test.out

#- 166 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 33, "Resource": "7J1NW0IoTP97wPaR"}, {"Action": 11, "Resource": "i9jXsmtxDfayxSlb"}, {"Action": 11, "Resource": "9FR48VT5BKwgRAIQ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'HZN92VP4rbnVQ2wD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteUserPermissionBulkV3' test.out

#- 167 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '98' \
    --namespace $AB_NAMESPACE \
    --resource 'xAqxaBvYkRH723c5' \
    --userId '7BNNjQJ7TXsOwwby' \
    > test.out 2>&1
eval_tap $? 167 'AdminDeleteUserPermissionV3' test.out

#- 168 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '9OOnuphq96OvBp28' \
    --after 'vxdZ0sUS14l56FKf' \
    --before 'jkcB2SiFscU2TIpt' \
    --limit '58' \
    > test.out 2>&1
eval_tap $? 168 'AdminGetUserPlatformAccountsV3' test.out

#- 169 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'kMi3Y9S70xe8Wk0M' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetListJusticePlatformAccounts' test.out

#- 170 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'BFmL9yc68k3c9GJs' \
    --userId 'ynFlhTJoB9DVDzdK' \
    > test.out 2>&1
eval_tap $? 170 'AdminGetUserMapping' test.out

#- 171 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'c96qCUqhMuZYAzHX' \
    --userId 'sCOpjW3CTUUFdOJR' \
    > test.out 2>&1
eval_tap $? 171 'AdminCreateJusticeUser' test.out

#- 172 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "Hv7are1QWJddDrho", "platformUserId": "AaGO0c6aXoFM9Jtz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'YynQYA8i8PGEVFtD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminLinkPlatformAccount' test.out

#- 173 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "MMDML1ySKpmO86kO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '0hsIwynIAbBloI0Y' \
    --userId 'JYXW2uzKWNGYBQtq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminPlatformUnlinkV3' test.out

#- 174 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'kaX58cIGPaIh2fIg' \
    --userId 'gFFHPcxOtLAhTn1p' \
    --ticket 'hglYoAkb9a7zwipv' \
    > test.out 2>&1
eval_tap $? 174 'AdminPlatformLinkV3' test.out

#- 175 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'dA2x113f0Bp2vdsC' \
    --userId 'ew5mf0wUYRGs6ndQ' \
    --platformToken 'OUixZzcm2OM0B7CO' \
    > test.out 2>&1
eval_tap $? 175 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 176 AdminDeleteUserRolesV3
# body param: body
echo '["BhqguJYsAONDGwAO", "mzWmrbHeYwhgN0On", "EE5a4pDdwi6k56Et"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zesGM5rBXwL4B1Vj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'AdminDeleteUserRolesV3' test.out

#- 177 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "Vn6f8aba9YXwFYQF", "roleId": "r3UBeKJ4xecZaf7o"}, {"namespace": "wlXFBz6IbxIl5dUF", "roleId": "T7bJ07WKDAyNRUJs"}, {"namespace": "M9g7YDVCdVk7pAhl", "roleId": "HOFFTGckEVLOktrE"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Tc91ydu5RGfuFAmP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminSaveUserRoleV3' test.out

#- 178 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId '1wOzzLGRwbOmouZ2' \
    --userId 'YIPoumSJ3SzT8lUp' \
    > test.out 2>&1
eval_tap $? 178 'AdminAddUserRoleV3' test.out

#- 179 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'XxkPntiTrWD69zuV' \
    --userId 'XfklxnwCn4oN7ReD' \
    > test.out 2>&1
eval_tap $? 179 'AdminDeleteUserRoleV3' test.out

#- 180 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "vLV2SAA8KoDH2te6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'X3S3HwJUMVxEYAqo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminUpdateUserStatusV3' test.out

#- 181 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GebWDx1rIY7YgqLa' \
    > test.out 2>&1
eval_tap $? 181 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 182 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "zmwaTdH4Cz8G7R8H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId '7IL8v5O1r7P5inUT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'AdminUpdateClientSecretV3' test.out

#- 183 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'EQGSKH2wQE3rMpBR' \
    --before '96V4wCGhThbt8E3j' \
    --isWildcard 'false' \
    --limit '54' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetRolesV3' test.out

#- 184 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "managers": [{"displayName": "qFZQoL3OUkQDJft6", "namespace": "r5a3gptbNLX0aELO", "userId": "a6N75cogVkZy2V8u"}, {"displayName": "OMXE5zaiqfUuDbog", "namespace": "ZiwydwzfWPCVvLLF", "userId": "NSKl79V2ucJ4eDQy"}, {"displayName": "H46uQbTHK5X3o94h", "namespace": "UU3uq7jQcfShtEtV", "userId": "r2SVT1NiSinLANUL"}], "members": [{"displayName": "fgmYSJIzEBkXmc2F", "namespace": "hrwrUKt0S1mnKCBD", "userId": "LO5p7AU8haiJAyCe"}, {"displayName": "jYVpU1pdEtrpKrbV", "namespace": "k9u7GLgME7wGiU2b", "userId": "iCXBTngfX2J8Yqvf"}, {"displayName": "wThZ7F6KgWP0pCW1", "namespace": "LZjascU9sDwKvowv", "userId": "GWWtzd8NYVjEQMiQ"}], "permissions": [{"action": 81, "resource": "aS5wuVNYIq4a0PNy", "schedAction": 16, "schedCron": "bd03QSrNZ2SbLcxo", "schedRange": ["Eq2iYdEtbYSFJ0Dh", "VUMO4DrPdmXHPzNf", "JH1o81DNVWftg4eX"]}, {"action": 3, "resource": "OdIXAHBSS6r5wDG7", "schedAction": 78, "schedCron": "qXHaJMuVALb1k6C0", "schedRange": ["bGXPhuWzOj8rGsEO", "gAyIS0fMWqAlHrdU", "BriyIrHLfx3OGuC3"]}, {"action": 17, "resource": "QYhCxg6MO5yZpDV5", "schedAction": 78, "schedCron": "dFF4nsya3UXahzCQ", "schedRange": ["J1WdbN8PkJy1ez6r", "Jd8RYLZhBzMFVvnb", "GszjKvFIRVDVtPCh"]}], "roleName": "4eQZdo9XVntzEIwB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminCreateRoleV3' test.out

#- 185 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'XzY9HlZPJGKTkhgW' \
    > test.out 2>&1
eval_tap $? 185 'AdminGetRoleV3' test.out

#- 186 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'zwSgrTgRRncQ82CY' \
    > test.out 2>&1
eval_tap $? 186 'AdminDeleteRoleV3' test.out

#- 187 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": true, "roleName": "YsuRmy56HZgI5RRT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'sXQnMWiRJCR1RHyZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminUpdateRoleV3' test.out

#- 188 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'bcfk8YG7nYGowF23' \
    > test.out 2>&1
eval_tap $? 188 'AdminGetRoleAdminStatusV3' test.out

#- 189 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'P0WHgh0pChv4BAqs' \
    > test.out 2>&1
eval_tap $? 189 'AdminUpdateAdminRoleStatusV3' test.out

#- 190 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'dhbbnkYPp9i7jjBI' \
    > test.out 2>&1
eval_tap $? 190 'AdminRemoveRoleAdminV3' test.out

#- 191 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'xJ14Hmr0ApsK8SHy' \
    --after 'hula1Q38F5Rpl7tr' \
    --before 'Qdm2EdQlGL0OD4Nu' \
    --limit '65' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetRoleManagersV3' test.out

#- 192 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "arAtbxd4giyeWZqd", "namespace": "uHExf0lauUCN8Ftw", "userId": "hxFveks81gp3NgWA"}, {"displayName": "gmMksXmJeTMaoq3a", "namespace": "BBDUtPeNku4PHFIB", "userId": "iTkVcH6FKyrUfHIA"}, {"displayName": "3iZu1gWbFNxnUwTz", "namespace": "tyVNPlxuUEbxhsIy", "userId": "ovNQs0ie37grdsHo"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'rFkeFdLNVafKTIxk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminAddRoleManagersV3' test.out

#- 193 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "LIpYhXRzVlyArWQR", "namespace": "eW1cdHvZQC69YqT5", "userId": "NwjGP4DNFyMdqC34"}, {"displayName": "ZHUbJ82Q45DSj87A", "namespace": "NeK7NbfOXVQ2wC19", "userId": "AZiRD7PHirjSPaaK"}, {"displayName": "c56kf8Lr8MI9ZHjU", "namespace": "Xr7TOOAJbppCaQg5", "userId": "KYRrxXWyNNcY6Hln"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'IyFofDjPvpwkx70Y' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminRemoveRoleManagersV3' test.out

#- 194 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'mLkIlie6LNkPhJOc' \
    --after 'GM8ql7o3t2fwK0ML' \
    --before '6wzefQ12cAfgS8Kl' \
    --limit '11' \
    > test.out 2>&1
eval_tap $? 194 'AdminGetRoleMembersV3' test.out

#- 195 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "e8YOUCLYTf0LOYn0", "namespace": "UkvnUqIojwgPbmzR", "userId": "VxqDG9JCw2G6n1ne"}, {"displayName": "rWgr6k4wDG0ymKeZ", "namespace": "SC9rPk3RoNahPKSO", "userId": "yURWcNMiTmYevMnR"}, {"displayName": "3d0jp7dxw3ul0DhP", "namespace": "Hnz11yujNFWriruj", "userId": "g1PBRhTBkvjjG2l3"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'XgO9Ri6d3yxvMGu7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddRoleMembersV3' test.out

#- 196 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "pCBTA7DyBPUzwcpf", "namespace": "ddW4DuDmd2nJ0ILG", "userId": "xDZvgfJDYWfI87U2"}, {"displayName": "bW4UB39lDsCSylYE", "namespace": "QzRYvmAk081nCL8o", "userId": "bhoKeoCwe6IhlEb8"}, {"displayName": "GDfPed4WXyEv9d7n", "namespace": "KCHoZoRhxaZfS3FT", "userId": "Kod2Rtew3h16g7FB"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'pyA8YrOW3VmchYDO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminRemoveRoleMembersV3' test.out

#- 197 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 57, "resource": "S8bfcCW62qIhoGhn", "schedAction": 87, "schedCron": "bAqk5LxBIGBHkXDI", "schedRange": ["vHwPBu7NrTNiVqOO", "a2ZRBfbd2E9vQfgj", "i9PoImDVDc39XbP5"]}, {"action": 50, "resource": "Z7JOBiF3LOGIwfn6", "schedAction": 18, "schedCron": "nZdLIV7BPQuCkqQw", "schedRange": ["TmoynrjtqBYCChCS", "fIAULNBIbqC1ggQC", "35AbqteFftxAcOPP"]}, {"action": 97, "resource": "Z4sGQrcq4l41bQTz", "schedAction": 29, "schedCron": "IDXaLiQ0t7EgSFw6", "schedRange": ["YWTZpca78D31y7uu", "uW6freYvPWWHWYec", "wcjhWemhBW3qqYq3"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'kuKpr8jEXhHZs4Bk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminUpdateRolePermissionsV3' test.out

#- 198 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 70, "resource": "t8V00PL7gjUB8TF6", "schedAction": 70, "schedCron": "FJ7cUw0ADHKp1Jeo", "schedRange": ["NcCMEncNbUbiWqyr", "5j636DZ4NEiTROGv", "hwwXkhT3ifmSxqfR"]}, {"action": 57, "resource": "cKQADcbZw9CWDxGL", "schedAction": 84, "schedCron": "42RAadk8pSFufz4e", "schedRange": ["Hb1QgbsPax3ToNEE", "cOmbPIllsWtlGQQR", "4aiBfhlNlfoCYXmx"]}, {"action": 4, "resource": "xS3aW0uIOk5ICxK8", "schedAction": 87, "schedCron": "EDQIgDa753Hc61jn", "schedRange": ["OiTAgsViarCWg8ro", "RCRlf26FgILY9AQC", "TADiRC9UzQSeQaGU"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'WhW9XAJFXvfV0Eqj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminAddRolePermissionsV3' test.out

#- 199 AdminDeleteRolePermissionsV3
# body param: body
echo '["XBf1QTuKXeMAqOhW", "2SxjARrVunPYAMlP", "S1l1agviE0ViBpie"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'oqmZUnQezhr8Y6yq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'AdminDeleteRolePermissionsV3' test.out

#- 200 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '1' \
    --resource 'kixGedxA4DZJ8YBO' \
    --roleId 'VA5CN8JbXzvLl0Qv' \
    > test.out 2>&1
eval_tap $? 200 'AdminDeleteRolePermissionV3' test.out

#- 201 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 201 'AdminGetMyUserV3' test.out

#- 202 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'L5vyVkSOD9ySZCRM' \
    --extend_exp 'false' \
    --redirect_uri 'hrN2lXYb7iiBcWcL' \
    --password 'uk71f96tGD7MUwPT' \
    --request_id 'mgmk4Spx3x705SZy' \
    --user_name 'I1AJfaR8ILlmh0sl' \
    > test.out 2>&1
eval_tap $? 202 'UserAuthenticationV3' test.out

#- 203 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id '4SRTmBQB5VrOj1jP' \
    --linkingToken 'hbaXjD3OADLTmD2B' \
    --password 'bxTOyZ4mBzc3glev' \
    --username 'H68u3emrFEDUOZXa' \
    > test.out 2>&1
eval_tap $? 203 'AuthenticationWithPlatformLinkV3' test.out

#- 204 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData 'aWzfo42JGnZc01Kc' \
    --extend_exp 'true' \
    --linkingToken 'xIv2XLzgxR2NsX4L' \
    > test.out 2>&1
eval_tap $? 204 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 205 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId '6vLNUrcVkKuYm7Zu' \
    > test.out 2>&1
eval_tap $? 205 'RequestOneTimeLinkingCodeV3' test.out

#- 206 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'fvKLsudrJOK8ewZ9' \
    > test.out 2>&1
eval_tap $? 206 'ValidateOneTimeLinkingCodeV3' test.out

#- 207 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'XUE09s8UFMwCQ9Us' \
    --isTransient 'true' \
    --client_id 'zsi4UH9iCt4bjrbq' \
    --oneTimeLinkCode 'vJUWI3EQ06TDnlZR' \
    > test.out 2>&1
eval_tap $? 207 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 208 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 208 'GetCountryLocationV3' test.out

#- 209 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 209 'Logout' test.out

#- 210 RequestGameTokenCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenCodeResponseV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'U5bcBAdlPEEoNXcK' \
    > test.out 2>&1
eval_tap $? 210 'RequestGameTokenCodeResponseV3' test.out

#- 211 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'UUm0phVHBtST2bSs' \
    --userId '1Ad6NGdDQQuoByKI' \
    > test.out 2>&1
eval_tap $? 211 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 212 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Y2uny7wrBNcJFM5o' \
    > test.out 2>&1
eval_tap $? 212 'RevokeUserV3' test.out

#- 213 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'ZXy70kDwNb92RKHr' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'true' \
    --oneTimeLinkCode 'ABl51ieHewHyntwd' \
    --redirectUri 'omC7EW9HCoXYbYag' \
    --scope '8TRPC81Cf4kP3oTf' \
    --state 'jZTpFCTcXoHR4cpW' \
    --targetAuthPage 'x3ZdgJt2ZQoVuSEa' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'YNJJF0oGpmR9TSRI' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 213 'AuthorizeV3' test.out

#- 214 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'dP4fTydTrkdla6Lr' \
    > test.out 2>&1
eval_tap $? 214 'TokenIntrospectionV3' test.out

#- 215 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 215 'GetJWKSV3' test.out

#- 216 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'FuKQ3RtclhoWjj2Y' \
    --factor 'mqDSPWPpFauCRiRz' \
    --mfaToken 'crIhTZVEl13giNln' \
    > test.out 2>&1
eval_tap $? 216 'SendMFAAuthenticationCode' test.out

#- 217 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'nOof9tQ3FFkiQ4Wm' \
    --mfaToken 'ZZZotLiUKp8OSgjF' \
    > test.out 2>&1
eval_tap $? 217 'Change2faMethod' test.out

#- 218 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'JIZ2XxEWeeo3avj6' \
    --factor '5c1CIW0Vwh6hxHnX' \
    --mfaToken '05KDdo9NyquqieQV' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 218 'Verify2faCode' test.out

#- 219 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'GPIB4PAc9cmkwqPy' \
    --userId '0fDraYgNAmz0ZAyW' \
    > test.out 2>&1
eval_tap $? 219 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 220 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'BrpW2iXwnefAQdj8' \
    --clientId 'v0AcLCKZzIHBcbRr' \
    --redirectUri '1LBxPTK2xRt5CjVs' \
    --requestId 'Hx73e7JuWfB47acs' \
    > test.out 2>&1
eval_tap $? 220 'AuthCodeRequestV3' test.out

#- 221 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'qQjDVBkepBbkDQoS' \
    --additionalData 'B8hXjmiKB4WqqayZ' \
    --client_id '0xZJ78Vfdu5YFHoD' \
    --createHeadless 'false' \
    --device_id 'yMW1UamXAnRUC4F3' \
    --macAddress '6wQH2ATx5ACpqWKr' \
    --platform_token 'hzIE5lvPBApiMq6F' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 221 'PlatformTokenGrantV3' test.out

#- 222 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 222 'GetRevocationListV3' test.out

#- 223 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'NEInGGk32HEHfcu1' \
    > test.out 2>&1
eval_tap $? 223 'TokenRevocationV3' test.out

#- 224 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'Fy4cXh7OVQysRitH' \
    --client_id 'LbViGiai4sK9iLeg' \
    --code 'HJR4pTGeJy30Xn9I' \
    --code_verifier 'Fac5X0XQyaOCpKxd' \
    --extend_exp 'true' \
    --password 'neLKmWOZk0wBAtcQ' \
    --redirect_uri 'LyhAYX2avS5TMAH8' \
    --refresh_token 'Md96Fu0XAm4jlgzY' \
    --username 'taWyBPNRqeD8NkIN' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 224 'TokenGrantV3' test.out

#- 225 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'ZaouMQ0crisEGypH' \
    > test.out 2>&1
eval_tap $? 225 'VerifyTokenV3' test.out

#- 226 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'NP7Q1TAGX7aq5b7O' \
    --code '2MtxknK4nfPz37K7' \
    --error 'mCEbk12x8b5u3JEv' \
    --openidAssocHandle 'V6iPRljjiap9VxA9' \
    --openidClaimedId '85stoGyAUE0uW9A4' \
    --openidIdentity 'wHdBcfvronc7zjUW' \
    --openidMode 'L9rixNbrypQAFosM' \
    --openidNs 'iz7UleCh2Ui7uy36' \
    --openidOpEndpoint '0VpYzz2I0bc5mKsG' \
    --openidResponseNonce 'JuLLjLEdlNUgqi3F' \
    --openidReturnTo 'AFsiHboJdQAhWGk0' \
    --openidSig 'WIWQtnuoenJ7sRGr' \
    --openidSigned 'dfKlLP7mi79HF3qT' \
    --state 'CLFW0BJBXGssAhdW' \
    > test.out 2>&1
eval_tap $? 226 'PlatformAuthenticationV3' test.out

#- 227 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'IhjOuLsrxtL5zdrX' \
    > test.out 2>&1
eval_tap $? 227 'PublicGetInputValidations' test.out

#- 228 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field 'bdajrxUmydxSyWnw' \
    > test.out 2>&1
eval_tap $? 228 'PublicGetInputValidationByField' test.out

#- 229 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'KJXPc9kW7pSiNiYZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 229 'PublicGetCountryAgeRestrictionV3' test.out

#- 230 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 230 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 231 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId '62ERD0ri6VhDmnVW' \
    > test.out 2>&1
eval_tap $? 231 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 232 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["rhChp6lORKXTzAOe", "IUdtRXZqrFlLa2zl", "67NP20g0VSCjQKCu"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'EBFGibb38gXunwDm' \
    --rawPUID 'false' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 233 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'aSSFIrtrNJmgMjby' \
    --platformUserId 'zTKBmBw9niyOD83I' \
    > test.out 2>&1
eval_tap $? 233 'PublicGetUserByPlatformUserIDV3' test.out

#- 234 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId '1upbHQCiDNsHHUV1' \
    > test.out 2>&1
eval_tap $? 234 'PublicGetAsyncStatus' test.out

#- 235 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '017nN6CmSz87aflJ' \
    --limit '60' \
    --offset '53' \
    --query '3aWpfNFMPW8ebGzU' \
    > test.out 2>&1
eval_tap $? 235 'PublicSearchUserV3' test.out

#- 236 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "TT0Vhr6Y5aIwftrN", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "NiGXq49XniD5qhEq", "policyId": "FIcPPuCjqv4tqGEp", "policyVersionId": "O3HkWR36Vi1UXGYQ"}, {"isAccepted": false, "localizedPolicyVersionId": "MeSHvz1uVmlBHr9b", "policyId": "0kOA0ATHspAa2061", "policyVersionId": "d5ISbmJA1btrC5jn"}, {"isAccepted": true, "localizedPolicyVersionId": "p1b6uDiRlMYhChf4", "policyId": "Iv7HrxhfkjSfOWpI", "policyVersionId": "oqppdSpjWKpkGvAg"}], "authType": "Sl6tOtVw20Hq9jOd", "code": "symQsQkCgYZeeQUt", "country": "egde6CoZTmYdUzDk", "dateOfBirth": "lfFrIMgHB2WFwqWH", "displayName": "hwmdcVMdjrwDdE1B", "emailAddress": "iCzT9eOI4RyMkmfK", "password": "toyW6LGOeY499CiR", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'PublicCreateUserV3' test.out

#- 237 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field '98mBe8uxLPrjvxtl' \
    --query 'rt6Ajclh7lBDHgfP' \
    > test.out 2>&1
eval_tap $? 237 'CheckUserAvailability' test.out

#- 238 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["l0n95dUUiDdy9Bam", "Lf6vLMX6TKUeVcmx", "P9RuvWUd1aJEqciD"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'PublicBulkGetUsers' test.out

#- 239 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "Aih6rFn4pJB54ogd", "languageTag": "9tmEFEDHLArBBSce"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'PublicSendRegistrationCode' test.out

#- 240 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "nriXZcF2vaEzEGjU", "emailAddress": "zVrVjsRq3saazudD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'PublicVerifyRegistrationCode' test.out

#- 241 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "xxc2ZBIcV0VTrJ4p", "languageTag": "X7z0ljawHpJUftNp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'PublicForgotPasswordV3' test.out

#- 242 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'MXmFXKRcPOxfeRMU' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 242 'GetAdminInvitationV3' test.out

#- 243 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "dY40T7p4s8LFtBK2", "policyId": "4wgxX85snd2azKpF", "policyVersionId": "dnRmV5OwcSHYFcWb"}, {"isAccepted": false, "localizedPolicyVersionId": "tP1DvUI5Zk3glWcD", "policyId": "nUAF3R7gZNqJlJed", "policyVersionId": "E02i0faNrlNCm4et"}, {"isAccepted": true, "localizedPolicyVersionId": "a15Sqiw1k9hYcfZe", "policyId": "jAM2ltgidMt8A7tr", "policyVersionId": "VgOgbryFAkCkxCOF"}], "authType": "EMAILPASSWD", "country": "azdYo59WIBKN3oJP", "dateOfBirth": "d3YeTDuluCekVwiX", "displayName": "eotIb9j6Sna2gQTa", "password": "rwfVgJ1n4Z9Z1EEd", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'cfe94VlDQNGf0iym' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'CreateUserFromInvitationV3' test.out

#- 244 UpdateUserV3
# body param: body
echo '{"avatarUrl": "U4ow3rN3ER1zVy8v", "country": "CVwayvkk2NyMgExp", "dateOfBirth": "dGHimwTXTexyZORe", "displayName": "UyKoHeCeGJQHW5sI", "languageTag": "uK7cju2yaTmbFJjf", "userName": "Oka8bY6Lciqo5egv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'UpdateUserV3' test.out

#- 245 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "OaDWZxm7mnwW61zf", "country": "lwqrxE6c37Lj1ujN", "dateOfBirth": "0huXqk7fqCpltWqU", "displayName": "RpDylx4uQBFgJ7e2", "languageTag": "umBpQI8ouSUg97kQ", "userName": "7imT23t4d02sJAnn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'PublicPartialUpdateUserV3' test.out

#- 246 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "5eNEqf8LgBRlCEgK", "emailAddress": "TxrB0Wsn8MdM3BM1", "languageTag": "o71e8UF9GJYYsUat"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'PublicSendVerificationCodeV3' test.out

#- 247 PublicUserVerificationV3
# body param: body
echo '{"code": "AlAKKicwPsJERKfj", "contactType": "5SKYRQxQ0UD6HIeE", "languageTag": "iIy4Zn7cj3FCshef", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'PublicUserVerificationV3' test.out

#- 248 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "5L3MoZhgBZpxJow2", "country": "xVGRV5nBbYt7pAqG", "dateOfBirth": "Mydcc8ZFzkVJOLJ3", "displayName": "lit5zvoNR3kdbkt4", "emailAddress": "huxjZUnjIaYNlrmj", "password": "0JmjcQPFKkAFsgRg", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PublicUpgradeHeadlessAccountV3' test.out

#- 249 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "KLZ4jsBFJv9nZZOb", "password": "dAVbtMtc4XmNOibM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'PublicVerifyHeadlessAccountV3' test.out

#- 250 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "79odlj9l6yw2tJwi", "newPassword": "6BYdfnxfRsE24qJS", "oldPassword": "sySMzn360pG3mKRo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'PublicUpdatePasswordV3' test.out

#- 251 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'D53UurTLKflEt43d' \
    > test.out 2>&1
eval_tap $? 251 'PublicCreateJusticeUser' test.out

#- 252 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'MWFzY0v0JbkF6Ffw' \
    --redirectUri 'WiezA8jDzHsJXyoG' \
    --ticket 'ovfSPaTAtAurCRbo' \
    > test.out 2>&1
eval_tap $? 252 'PublicPlatformLinkV3' test.out

#- 253 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "84FcGoQ1Hgfiov3Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'F97FNVPz3eTJEVf9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'PublicPlatformUnlinkV3' test.out

#- 254 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gfcX52rO5eFEXw6S' \
    > test.out 2>&1
eval_tap $? 254 'PublicPlatformUnlinkAllV3' test.out

#- 255 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'oeso51I2kUXcQyhD' \
    --ticket 'VC2jTeGIownn9Tby' \
    > test.out 2>&1
eval_tap $? 255 'PublicForcePlatformLinkV3' test.out

#- 256 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'b51cgZ9qPqTEO34d' \
    --clientId 'YlCka3tFsrluWQ8T' \
    --redirectUri '1r9xRpcLK3S1k6rZ' \
    > test.out 2>&1
eval_tap $? 256 'PublicWebLinkPlatform' test.out

#- 257 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'EqIn8VEPcoTBbxgW' \
    --code 'zSAGRWKhp6wlJNSl' \
    --state '5JxMr033V4BTYMT3' \
    > test.out 2>&1
eval_tap $? 257 'PublicWebLinkPlatformEstablish' test.out

#- 258 ResetPasswordV3
# body param: body
echo '{"code": "X8lGA6XRDLO2Eota", "emailAddress": "Re0lhOSEThhhtVNv", "newPassword": "rOXKAxhaQSeilLqd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'ResetPasswordV3' test.out

#- 259 PublicGetUserByUserIdV3
eval_tap 0 259 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 260 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'QyVTov6xbmGz6JMP' \
    --activeOnly 'true' \
    --after 'CNCPvJEYmSqo70TN' \
    --before '3Pt15NqlspG4Z5EN' \
    --limit '85' \
    > test.out 2>&1
eval_tap $? 260 'PublicGetUserBanHistoryV3' test.out

#- 261 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Co6PTrghzHUc4oBu' \
    > test.out 2>&1
eval_tap $? 261 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 262 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tfdE4yGsXkv8Iis5' \
    > test.out 2>&1
eval_tap $? 262 'PublicGetUserInformationV3' test.out

#- 263 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'VsIgUwOZezMLHGHI' \
    --after '0.8680328942079296' \
    --before '0.12332015595624723' \
    --limit '90' \
    > test.out 2>&1
eval_tap $? 263 'PublicGetUserLoginHistoriesV3' test.out

#- 264 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zHXmU9yrFIyNa4q6' \
    --after 'J1j7A67J7TdNKZVH' \
    --before 'hBOuX48REyH13S41' \
    --limit '89' \
    > test.out 2>&1
eval_tap $? 264 'PublicGetUserPlatformAccountsV3' test.out

#- 265 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ap7g2OuoR91UoLUi' \
    > test.out 2>&1
eval_tap $? 265 'PublicListJusticePlatformAccountsV3' test.out

#- 266 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "PjXWpK1H6be3IlBq", "platformUserId": "MAaCTSRrHDj2awMg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'smjHipOFkigjeCWC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'PublicLinkPlatformAccount' test.out

#- 267 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["EhoAQA0XuZ60MzQK", "WwCJzGbrzvhxBpG2", "Uzh4L0kBd7hZ83Eu"], "requestId": "GDQsj2OdxoDZJuHS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 't6EykK4qUBmFSDjt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'PublicForceLinkPlatformWithProgression' test.out

#- 268 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '20X3MvJaQdJCSnMl' \
    > test.out 2>&1
eval_tap $? 268 'PublicGetPublisherUserV3' test.out

#- 269 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qD6g0bqXXJyGYhHP' \
    --password 'kZvWusaXY6XOqY5z' \
    > test.out 2>&1
eval_tap $? 269 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 270 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'Hq0nSflEn3pVcLw3' \
    --before 'kFtCl6hqJobodMFH' \
    --isWildcard 'false' \
    --limit '16' \
    > test.out 2>&1
eval_tap $? 270 'PublicGetRolesV3' test.out

#- 271 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'YzbgDBZT6vZ2uhiN' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetRoleV3' test.out

#- 272 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 272 'PublicGetMyUserV3' test.out

#- 273 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'Tu5XT7z7qeXu5cmL' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 274 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["XqeOsuDFPNpkxNEG", "w1tag3U7AXzXAICJ", "GDo69bkGFvn9DLDg"], "oneTimeLinkCode": "d21yXbMwzDaT1GkD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'LinkHeadlessAccountToMyAccountV3' test.out

#- 275 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "QoazFv6dJzSZkHof"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'PublicSendVerificationLinkV3' test.out

#- 276 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'QDS1by9r6TcwvqcY' \
    > test.out 2>&1
eval_tap $? 276 'PublicVerifyUserByLinkV3' test.out

#- 277 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId '1H1FmEgq14nNGlPa' \
    --code 'mjTcLYG08Cyl12Sa' \
    --error 'YfUzLvowij0brTOo' \
    --state 'pWMvu6v0ryDqNC1l' \
    > test.out 2>&1
eval_tap $? 277 'PlatformAuthenticateSAMLV3Handler' test.out

#- 278 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'Vv7rSGrBCgR9pN6m' \
    --payload 'J3yZzXQBPMvYSc98' \
    > test.out 2>&1
eval_tap $? 278 'LoginSSOClient' test.out

#- 279 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'hDqhirI7VPD4HvqA' \
    > test.out 2>&1
eval_tap $? 279 'LogoutSSOClient' test.out

#- 280 RequestGameTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenResponseV3 \
    --additionalData 'wc0RHxIhFrwQPlLy' \
    --code 'SmqwcZiOCtVUI0nH' \
    > test.out 2>&1
eval_tap $? 280 'RequestGameTokenResponseV3' test.out

#- 281 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'si8WWl9cXOyyUyX2' \
    > test.out 2>&1
eval_tap $? 281 'AdminGetDevicesByUserV4' test.out

#- 282 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'XwmIa4R4oiMtaLQP' \
    --endDate 'wkt68Lub5sHW7ghx' \
    --limit '64' \
    --offset '62' \
    --startDate 'TNmv4ljaS6aXt0KH' \
    > test.out 2>&1
eval_tap $? 282 'AdminGetBannedDevicesV4' test.out

#- 283 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'phzwDPGyP0KInwlw' \
    > test.out 2>&1
eval_tap $? 283 'AdminGetUserDeviceBansV4' test.out

#- 284 AdminBanDeviceV4
# body param: body
echo '{"comment": "GHZonLAjclZvJ6R5", "deviceId": "2mPsMgtpMfwoeZDM", "deviceType": "R6UroThWF1rpxjGb", "enabled": true, "endDate": "4jh1KMVnEm4Xd1UW", "ext": {"pttZo5kU2hQhgVUV": {}, "reGQumplZV5y6VQV": {}, "1dDU5FsCWXRCwUNM": {}}, "reason": "j0gmNiv02zamBsk1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'AdminBanDeviceV4' test.out

#- 285 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'ceWcshKUqR2V5aTE' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 285 'AdminGetDeviceBanV4' test.out

#- 286 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'L0ALRw8yzp2WWxpG' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'AdminUpdateDeviceBanV4' test.out

#- 287 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'czImZhNXnEF30Gt7' \
    --startDate 'BGOnQU0G3W3UEpsk' \
    --deviceType 'WKpVNQ9cCkhtHCzC' \
    > test.out 2>&1
eval_tap $? 287 'AdminGenerateReportV4' test.out

#- 288 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 288 'AdminGetDeviceTypesV4' test.out

#- 289 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'eunEfNCBzmoVrPid' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 289 'AdminGetDeviceBansV4' test.out

#- 290 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'RXP0SHC7wwCcq722' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'AdminDecryptDeviceV4' test.out

#- 291 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'ozNfZcLNyZdKR2DD' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 291 'AdminUnbanDeviceV4' test.out

#- 292 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'uXSeYalmguh9nUOv' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 292 'AdminGetUsersByDeviceV4' test.out

#- 293 AdminCreateTestUsersV4
# body param: body
echo '{"count": 38}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'AdminCreateTestUsersV4' test.out

#- 294 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["mtKV8pWIjDKAvfzF", "x3oSatokUtRyold7", "TeRH3qU9HQob50wM"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'AdminBulkCheckValidUserIDV4' test.out

#- 295 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "ZDQSOqNumwQ67G4W", "country": "7SUvQtDpUaEvvtFk", "dateOfBirth": "xDGNkI3Zby82iPiz", "displayName": "dDZmeDlsuJqajORC", "languageTag": "IcL077biXIfQ6ldF", "userName": "18zgxalYccjvzbjA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'ropHMv5aKF8OK8sy' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'AdminUpdateUserV4' test.out

#- 296 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "GT7P3sY2hA1F4Lj1", "emailAddress": "9I18JDjAxbEGxhq5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId '9p8WJcwrHgc90WS1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'AdminUpdateUserEmailAddressV4' test.out

#- 297 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'EQ8JGLr7XPU8QtZO' \
    > test.out 2>&1
eval_tap $? 297 'AdminDisableUserMFAV4' test.out

#- 298 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId '4axQWjT0Y6BWPbBm' \
    > test.out 2>&1
eval_tap $? 298 'AdminListUserRolesV4' test.out

#- 299 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["rECY3ny1S18YTCvz", "lDs2ogXBLdEg61NL", "jaIBPmVH6poAkTFk"], "roleId": "AJNbT5k0sNM3pVaH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'x1q3CB2NHrijQ0Gi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'AdminUpdateUserRoleV4' test.out

#- 300 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["RyyB1RIqJKjGFLtT", "bezxilbgYctI00gK", "SJfcWkikZL5NUGJ5"], "roleId": "Ke08TkDJCRD42j5b"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Lx8WpK551fPsLu4C' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminAddUserRoleV4' test.out

#- 301 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["cf5xDpsDEaQ0te91", "CoYEo0hun7A3Yoj8", "6O1YPwVUSpuCU57D"], "roleId": "kSFElOwraUoGUQCL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'N7M1coPS9FIGU4If' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'AdminRemoveUserRoleV4' test.out

#- 302 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'false' \
    --limit '18' \
    --offset '79' \
    > test.out 2>&1
eval_tap $? 302 'AdminGetRolesV4' test.out

#- 303 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "PI3Fb6bzOQE2zuty"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'AdminCreateRoleV4' test.out

#- 304 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId '383eXLMf1S2y6Jhg' \
    > test.out 2>&1
eval_tap $? 304 'AdminGetRoleV4' test.out

#- 305 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'R3x0WVrPjUkAvzGZ' \
    > test.out 2>&1
eval_tap $? 305 'AdminDeleteRoleV4' test.out

#- 306 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "zrLbWLACYoIYseWr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'ULOV6T5Gv62CjxOb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'AdminUpdateRoleV4' test.out

#- 307 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 2, "resource": "Hk4kWAU5MB0G6CH8", "schedAction": 16, "schedCron": "TzVYcGdLddRZGuOn", "schedRange": ["FNTSeV1IiyTQg45V", "ewYTOjbT9m97uSsW", "aM7jSwg0BVA0gxqc"]}, {"action": 38, "resource": "dEaJNn20nEX4mFlW", "schedAction": 58, "schedCron": "s9pwPpKdxuWW2qWN", "schedRange": ["ku7iIxfvaeze6Ajx", "CA76VtvoIRmPIYpK", "uqdPp14i7z8pgO7y"]}, {"action": 63, "resource": "budIuZmrqHXSUdp1", "schedAction": 0, "schedCron": "Wu59xlVnumHXxy38", "schedRange": ["J5CMiTrV3cfsf78P", "meTw02h7q42cklkb", "6WYJTpYU5VItBNkN"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'dWpJ5hppmnal3o2f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'AdminUpdateRolePermissionsV4' test.out

#- 308 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 45, "resource": "tdfawL0Tq6RYnbvu", "schedAction": 64, "schedCron": "defnVXYHyHV2how0", "schedRange": ["9baUtR2vsQ6kwwxZ", "ypcty7nEsBcy8wCL", "js90r5uiwZK5Oeot"]}, {"action": 33, "resource": "nRVSgohlFYfIexbh", "schedAction": 46, "schedCron": "tJx4pe9ET2Ci8ctE", "schedRange": ["IJwDbPVSDRyktmfr", "DG0TMTZd7NICbqWl", "gab71axJqJoaRZHi"]}, {"action": 63, "resource": "LAFoI8X2Ds9JkQFh", "schedAction": 10, "schedCron": "xQEFtKfc15sFHIBs", "schedRange": ["SKfpWhsDGKniGKeZ", "wMAoGZ6en0iPViMj", "3E0HZ6QDqEjfbUdg"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'uYP7xmeqhaBXyRAb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'AdminAddRolePermissionsV4' test.out

#- 309 AdminDeleteRolePermissionsV4
# body param: body
echo '["SH82KJt4FPL6JtFb", "CKCjSAJ6DK34s3AA", "GYz036hxduOoX45i"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'WsUO3BxLThuU6QvM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 309 'AdminDeleteRolePermissionsV4' test.out

#- 310 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId '7ZqRDJljUDzI8XhV' \
    --after '9c5mf0Qjs3wwNpfh' \
    --before '2qTqbjWnzkGkrgHa' \
    --limit '2' \
    > test.out 2>&1
eval_tap $? 310 'AdminListAssignedUsersV4' test.out

#- 311 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["SCwKHiSNeV4MYWag", "e2hr4yxjoJDQCe5y", "gmoW6gnotlWUFhPQ"], "namespace": "YrnyHl6CIvSirnRX", "userId": "bnCUUTRHTLb0eqOc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'teeCdOhAs9EKwYzD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'AdminAssignUserToRoleV4' test.out

#- 312 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "u1tK50KmhSYoEAiY", "userId": "0zxSycTYYnFSDX31"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'e0PqbWqxQ1Rt34Xl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminRevokeUserFromRoleV4' test.out

#- 313 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["c6Zi46dUvqtktUzZ", "evkFkEtWRdeHcdGc", "XWPGk9g9o4ZWr20T"], "emailAddresses": ["tVASVUB72Roprjhe", "1BQ3WyL3WXZ71yOU", "wZT9AOydyI4Ippp7"], "isAdmin": false, "namespace": "JvBQfZCPcvrJUMHT", "roleId": "lWcnJTRndaShKpGM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'AdminInviteUserNewV4' test.out

#- 314 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "bwIUb1vUfgTSblo1", "country": "4YTsBoStpmbLXx8f", "dateOfBirth": "9Gk1ihxx6Q4D6Swe", "displayName": "EUyWX2oiyxXSN3D5", "languageTag": "t0H7uGHolFYqyxw8", "userName": "MKwmiHQNZNPucoJJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 314 'AdminUpdateMyUserV4' test.out

#- 315 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 315 'AdminDisableMyAuthenticatorV4' test.out

#- 316 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'tNClZ28GvRW3Bep4' \
    > test.out 2>&1
eval_tap $? 316 'AdminEnableMyAuthenticatorV4' test.out

#- 317 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 317 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 318 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 318 'AdminGetMyBackupCodesV4' test.out

#- 319 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 319 'AdminGenerateMyBackupCodesV4' test.out

#- 320 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 320 'AdminDisableMyBackupCodesV4' test.out

#- 321 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 321 'AdminDownloadMyBackupCodesV4' test.out

#- 322 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 322 'AdminEnableMyBackupCodesV4' test.out

#- 323 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 323 'AdminSendMyMFAEmailCodeV4' test.out

#- 324 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 324 'AdminDisableMyEmailV4' test.out

#- 325 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'V2ZEFH62dVDcGl9w' \
    > test.out 2>&1
eval_tap $? 325 'AdminEnableMyEmailV4' test.out

#- 326 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 326 'AdminGetMyEnabledFactorsV4' test.out

#- 327 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'eB8cyJMVGaTYPwEB' \
    > test.out 2>&1
eval_tap $? 327 'AdminMakeFactorMyDefaultV4' test.out

#- 328 AdminInviteUserV4
eval_tap 0 328 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 329 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "IQaIAoGdnGlHHx3q", "policyId": "MwPDtr7ejnj0OTnX", "policyVersionId": "c2tpCjKIRzcYeJbB"}, {"isAccepted": false, "localizedPolicyVersionId": "vKO9h5xbZKPG24wS", "policyId": "Hdx7rVzc4EjIgU6E", "policyVersionId": "3ydSulEOJJFZXE5w"}, {"isAccepted": false, "localizedPolicyVersionId": "Ty5jAiWjbo6dy4EI", "policyId": "VorNWRytAEjZD8dY", "policyVersionId": "UemoyeURgkp5TvHl"}], "authType": "EMAILPASSWD", "country": "ufI1Ck4ZWBXatLAA", "dateOfBirth": "nvL7SJvw8GH8tY7f", "displayName": "h3j8l0nlovI9vg44", "emailAddress": "W1dOrITa7b5exdez", "password": "narHIIQ3BZqgqVn4", "passwordMD5Sum": "7lxWpSiaPlUHqgPu", "username": "SOxmu77arxcGmTyP", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'PublicCreateTestUserV4' test.out

#- 330 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "U3Gd8Q1bK9hSZnwv", "policyId": "IAZ72zbPgGppj5Vn", "policyVersionId": "hNcG6xxssTWUnvVt"}, {"isAccepted": true, "localizedPolicyVersionId": "X7BC39YIRfYNYRzr", "policyId": "bVAC1mvzTKIccwon", "policyVersionId": "XnqKZdG9HUg7xWKL"}, {"isAccepted": false, "localizedPolicyVersionId": "1anoumIdfOy8B8ua", "policyId": "5YzPLvBsYt9hHSQO", "policyVersionId": "7N3pSdcHfXR8nRDK"}], "authType": "EMAILPASSWD", "code": "8xTI34pVeUrRceq2", "country": "DyZzVBEyr5vh3jdM", "dateOfBirth": "frzxGbqqAJMO8EgR", "displayName": "InJO3xlVl5j0MJbs", "emailAddress": "vnRrUUtskIZntYE6", "password": "0wuqEfUq8ktvXr0y", "passwordMD5Sum": "F8bS5RiC7PumuAXg", "reachMinimumAge": true, "username": "aKjetq4BXq1Y3cmL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'PublicCreateUserV4' test.out

#- 331 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "lnk79pMiBy7Hkk6n", "policyId": "kuXMCMZwR2qAuKrk", "policyVersionId": "xzUJ2Gsi7lTvmFff"}, {"isAccepted": true, "localizedPolicyVersionId": "GjXujqSVCyxlaDHc", "policyId": "lfvES3BDPf9Pj8DA", "policyVersionId": "Z4kYwPdoxMMTaAvV"}, {"isAccepted": false, "localizedPolicyVersionId": "Q1BKeS4SOpiSvjOf", "policyId": "i8bFGNqzfi1d8mVg", "policyVersionId": "hHy4nqk767Rsti6p"}], "authType": "EMAILPASSWD", "country": "ghF3RXnBD00Va37s", "dateOfBirth": "GlyVpq9ehPandYLx", "displayName": "9SVK8ixYjp7QZxf7", "password": "3YGXA2tiVtyeFt96", "reachMinimumAge": true, "username": "NWMtnkgQL6lAlJol"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'L3iDOTJ0WycrQ56P' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'CreateUserFromInvitationV4' test.out

#- 332 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "v4Mqu5tWr8nxtiW6", "country": "Lm69ZWFLlAnEJruK", "dateOfBirth": "bRj2SEjTbgdBxgn6", "displayName": "7BAXvbfSGj99YrSt", "languageTag": "fLNWj1wb7Gokapho", "userName": "H8MFtvFmyaV3eUyd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicUpdateUserV4' test.out

#- 333 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "SaJlN3WJCRLqbmS7", "emailAddress": "qxl3A1675nRsd8CX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicUpdateUserEmailAddressV4' test.out

#- 334 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "6fx703XQFprgAn8A", "country": "ZibWadSASoZBx9MH", "dateOfBirth": "x6Q7GNDotRARhe1l", "displayName": "SxVMm64my8NJg0xj", "emailAddress": "d7zZP1ei1VYenauo", "password": "ZqAAhRvFME2jFw5Q", "reachMinimumAge": true, "username": "FA454bbgcn62xTI3", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 334 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 335 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "mAEWlFpMp4e0pyjU", "password": "k5aLKVPtjrrr41v2", "username": "PLVH85tRfNnSFhPf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 335 'PublicUpgradeHeadlessAccountV4' test.out

#- 336 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 336 'PublicDisableMyAuthenticatorV4' test.out

#- 337 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'nG4yqcnl2lXuPz8u' \
    > test.out 2>&1
eval_tap $? 337 'PublicEnableMyAuthenticatorV4' test.out

#- 338 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 338 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 339 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 339 'PublicGetMyBackupCodesV4' test.out

#- 340 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 340 'PublicGenerateMyBackupCodesV4' test.out

#- 341 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 341 'PublicDisableMyBackupCodesV4' test.out

#- 342 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 342 'PublicDownloadMyBackupCodesV4' test.out

#- 343 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 343 'PublicEnableMyBackupCodesV4' test.out

#- 344 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'PSF0m6rlv9kARU6K' \
    > test.out 2>&1
eval_tap $? 344 'PublicRemoveTrustedDeviceV4' test.out

#- 345 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 345 'PublicSendMyMFAEmailCodeV4' test.out

#- 346 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'PublicDisableMyEmailV4' test.out

#- 347 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'q4IZiqv4QzdiOjaQ' \
    > test.out 2>&1
eval_tap $? 347 'PublicEnableMyEmailV4' test.out

#- 348 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'PublicGetMyEnabledFactorsV4' test.out

#- 349 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'di9lUpXiU9fHSKdE' \
    > test.out 2>&1
eval_tap $? 349 'PublicMakeFactorMyDefaultV4' test.out

#- 350 PublicInviteUserV4
# body param: body
echo '{"emailAddress": "vYvg4xCfZVYplLc9", "namespace": "kBMqghZzLI2emJOc", "namespaceDisplayName": "25uPGFL1Z2n2DF9l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 350 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE