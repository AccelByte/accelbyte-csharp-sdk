#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..305"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
# body param: body
echo '{"AuthType": "b0Cjv4Ax", "Country": "7NzYkopp", "DisplayName": "a0VgFJAh", "LoginId": "HwTb5q01", "Password": "0gN2MQrb", "PasswordMD5Sum": "peRnxTlC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUser \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 16 'CreateUser' test.out

#- 17 GetAdminUsersByRoleID
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleID \
    --namespace $AB_NAMESPACE \
    --after '90' \
    --before '63' \
    --limit '89' \
    --roleId 'MIbl1a2j' \
    > test.out 2>&1
eval_tap $? 17 'GetAdminUsersByRoleID' test.out

#- 18 GetUserByLoginID
$CLI_EXE \
    --sn iam \
    --op GetUserByLoginID \
    --namespace $AB_NAMESPACE \
    --loginId 'XLCtWmHJ' \
    > test.out 2>&1
eval_tap $? 18 'GetUserByLoginID' test.out

#- 19 GetUserByPlatformUserID
$CLI_EXE \
    --sn iam \
    --op GetUserByPlatformUserID \
    --namespace $AB_NAMESPACE \
    --platformID 'Bi9SoMkS' \
    --platformUserID 'E4eJelwO' \
    > test.out 2>&1
eval_tap $? 19 'GetUserByPlatformUserID' test.out

#- 20 ForgotPassword
# body param: body
echo '{"Context": "4KPMky2h", "LanguageTag": "8R2fIXoX", "LoginID": "P8gd7JUa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ForgotPassword \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 20 'ForgotPassword' test.out

#- 21 GetUsersByLoginIds
$CLI_EXE \
    --sn iam \
    --op GetUsersByLoginIds \
    --namespace $AB_NAMESPACE \
    --loginIds 'bYc3GMbx' \
    > test.out 2>&1
eval_tap $? 21 'GetUsersByLoginIds' test.out

#- 22 ResetPassword
# body param: body
echo '{"Code": "Tlm1fsu6", "LoginID": "J3C4s5pp", "NewPassword": "GR9XcoxY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPassword \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 22 'ResetPassword' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
$CLI_EXE \
    --sn iam \
    --op GetUserByUserID \
    --namespace $AB_NAMESPACE \
    --userId 'TGgewrLf' \
    > test.out 2>&1
eval_tap $? 24 'GetUserByUserID' test.out

#- 25 UpdateUser
# body param: body
echo '{"Country": "wvzJF4Tp", "DateOfBirth": "bNhKq2xd", "DisplayName": "mgEBepFH", "LanguageTag": "tf6Ziegq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUser \
    --namespace $AB_NAMESPACE \
    --userId 'dEL4fsM6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 25 'UpdateUser' test.out

#- 26 DeleteUser
$CLI_EXE \
    --sn iam \
    --op DeleteUser \
    --namespace $AB_NAMESPACE \
    --userId 'nBzRVuC1' \
    > test.out 2>&1
eval_tap $? 26 'DeleteUser' test.out

#- 27 BanUser
# body param: body
echo '{"ban": "r7UH1Liu", "comment": "7UQ0304M", "endDate": "cK873tRt", "reason": "r5cfWO5J", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op BanUser \
    --namespace $AB_NAMESPACE \
    --userId '6vsOns4j' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 27 'BanUser' test.out

#- 28 GetUserBanHistory
$CLI_EXE \
    --sn iam \
    --op GetUserBanHistory \
    --namespace $AB_NAMESPACE \
    --userId 'NWGc7CiU' \
    > test.out 2>&1
eval_tap $? 28 'GetUserBanHistory' test.out

#- 29 DisableUserBan
$CLI_EXE \
    --sn iam \
    --op DisableUserBan \
    --banId 'a4wM5Eu3' \
    --namespace $AB_NAMESPACE \
    --userId 'VqymsFXp' \
    > test.out 2>&1
eval_tap $? 29 'DisableUserBan' test.out

#- 30 EnableUserBan
$CLI_EXE \
    --sn iam \
    --op EnableUserBan \
    --banId 'orMqEDR8' \
    --namespace $AB_NAMESPACE \
    --userId 'E72XMKfh' \
    > test.out 2>&1
eval_tap $? 30 'EnableUserBan' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
$CLI_EXE \
    --sn iam \
    --op GetUserInformation \
    --namespace $AB_NAMESPACE \
    --userId 'l6eq2FzU' \
    > test.out 2>&1
eval_tap $? 34 'GetUserInformation' test.out

#- 35 DeleteUserInformation
$CLI_EXE \
    --sn iam \
    --op DeleteUserInformation \
    --namespace $AB_NAMESPACE \
    --userId '3VL3LNmP' \
    > test.out 2>&1
eval_tap $? 35 'DeleteUserInformation' test.out

#- 36 GetUserLoginHistories
$CLI_EXE \
    --sn iam \
    --op GetUserLoginHistories \
    --namespace $AB_NAMESPACE \
    --userId 'LeZdoCXf' \
    --after '0.009293317933971257' \
    --before '0.4887168540101531' \
    --limit '50' \
    > test.out 2>&1
eval_tap $? 36 'GetUserLoginHistories' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
# body param: body
echo '{"Permissions": [{"Action": 43, "Resource": "jLmai7fP", "SchedAction": 72, "SchedCron": "vE2Z4a63", "SchedRange": ["UVtLbQSW"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op SaveUserPermission \
    --namespace $AB_NAMESPACE \
    --userId 'tsyz0mGG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 38 'SaveUserPermission' test.out

#- 39 AddUserPermission
# body param: body
echo '{"SchedAction": 48, "SchedCron": "HHFIlIKs", "SchedRange": ["XgvSrkEg"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddUserPermission \
    --action '91' \
    --namespace $AB_NAMESPACE \
    --resource 'YVk5iRBE' \
    --userId '6zJJ1BRH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 39 'AddUserPermission' test.out

#- 40 DeleteUserPermission
$CLI_EXE \
    --sn iam \
    --op DeleteUserPermission \
    --action '34' \
    --namespace $AB_NAMESPACE \
    --resource 'fCHqqp2G' \
    --userId 'wPcmzSuY' \
    > test.out 2>&1
eval_tap $? 40 'DeleteUserPermission' test.out

#- 41 GetUserPlatformAccounts
$CLI_EXE \
    --sn iam \
    --op GetUserPlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId '8w9VYwBE' \
    > test.out 2>&1
eval_tap $? 41 'GetUserPlatformAccounts' test.out

#- 42 GetUserMapping
$CLI_EXE \
    --sn iam \
    --op GetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'fRXoZLfp' \
    --userId 'VFfDwjHH' \
    > test.out 2>&1
eval_tap $? 42 'GetUserMapping' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
$CLI_EXE \
    --sn iam \
    --op PlatformLink \
    --namespace $AB_NAMESPACE \
    --platformId 'CW2g5u8z' \
    --userId '9yrpJdIx' \
    --ticket '5vvHS3d6' \
    > test.out 2>&1
eval_tap $? 44 'PlatformLink' test.out

#- 45 PlatformUnlink
$CLI_EXE \
    --sn iam \
    --op PlatformUnlink \
    --namespace $AB_NAMESPACE \
    --platformId 'PKPE27mI' \
    --userId '6Px8jt8L' \
    --platform_namespace 'q4x0F7Nc' \
    > test.out 2>&1
eval_tap $? 45 'PlatformUnlink' test.out

#- 46 GetPublisherUser
$CLI_EXE \
    --sn iam \
    --op GetPublisherUser \
    --namespace $AB_NAMESPACE \
    --userId 'ocelJjtl' \
    > test.out 2>&1
eval_tap $? 46 'GetPublisherUser' test.out

#- 47 SaveUserRoles
# body param: body
echo '["KYu8iCPz"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op SaveUserRoles \
    --namespace $AB_NAMESPACE \
    --userId 'nx0s5TzT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 47 'SaveUserRoles' test.out

#- 48 AddUserRole
$CLI_EXE \
    --sn iam \
    --op AddUserRole \
    --namespace $AB_NAMESPACE \
    --roleId '51oV4HTm' \
    --userId 'ivmb6tPm' \
    > test.out 2>&1
eval_tap $? 48 'AddUserRole' test.out

#- 49 DeleteUserRole
$CLI_EXE \
    --sn iam \
    --op DeleteUserRole \
    --namespace $AB_NAMESPACE \
    --roleId 'CirkhYvc' \
    --userId 'OUucjPWG' \
    > test.out 2>&1
eval_tap $? 49 'DeleteUserRole' test.out

#- 50 UpgradeHeadlessAccount
# body param: body
echo '{"LoginID": "wPsvjLK1", "Password": "CjPt93ut"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpgradeHeadlessAccount \
    --namespace $AB_NAMESPACE \
    --userId 'bMkpUFHT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 50 'UpgradeHeadlessAccount' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
# body param: body
echo '{"Code": "0fL9q9SM", "Password": "NAUQVoiQ", "loginId": "tSQC2kNS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpgradeHeadlessAccountWithVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'smT0d2aB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 51 'UpgradeHeadlessAccountWithVerificationCode' test.out

#- 52 UserVerification
# body param: body
echo '{"Code": "G4zA2zp1", "ContactType": "Ls0bD6dG", "LanguageTag": "gwkYgHzK", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UserVerification \
    --namespace $AB_NAMESPACE \
    --userId 'I2RJrboP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 52 'UserVerification' test.out

#- 53 SendVerificationCode
# body param: body
echo '{"Context": "7kfpIlet", "LanguageTag": "XrCK1UVO", "LoginID": "0jcs7nCq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op SendVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'sodoTFTc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 53 'SendVerificationCode' test.out

#- 54 Authorization
$CLI_EXE \
    --sn iam \
    --op Authorization \
    --login 'WlaIBJAA' \
    --password 'knU6HobZ' \
    --scope 'gWlaLned' \
    --state 'DfasTc8g' \
    --client_id 'r2znWqD6' \
    --redirect_uri 'tIcfI5Z4' \
    --response_type 'token' \
    > test.out 2>&1
eval_tap $? 54 'Authorization' test.out

#- 55 GetJWKS
$CLI_EXE \
    --sn iam \
    --op GetJWKS \
    > test.out 2>&1
eval_tap $? 55 'GetJWKS' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
$CLI_EXE \
    --sn iam \
    --op RevokeUser \
    --namespace $AB_NAMESPACE \
    --userId 'UNQ7mQPj' \
    > test.out 2>&1
eval_tap $? 57 'RevokeUser' test.out

#- 58 GetRevocationList
$CLI_EXE \
    --sn iam \
    --op GetRevocationList \
    > test.out 2>&1
eval_tap $? 58 'GetRevocationList' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
$CLI_EXE \
    --sn iam \
    --op TokenGrant \
    --code 'CalZgFVE' \
    --extend_exp 'True' \
    --namespace 'qav09OYm' \
    --password 'xCvMqVcX' \
    --redirect_uri 's2OqNz8Z' \
    --refresh_token 'LBsncbRr' \
    --username 'f6uEdjUn' \
    --grant_type 'password' \
    > test.out 2>&1
eval_tap $? 61 'TokenGrant' test.out

#- 62 VerifyToken
$CLI_EXE \
    --sn iam \
    --op VerifyToken \
    --token '04WZNhgE' \
    > test.out 2>&1
eval_tap $? 62 'VerifyToken' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV2 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'AdminGetAgeRestrictionStatusV2' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
# body param: body
echo '{"AgeRestriction": 65, "Enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV2 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 81 'AdminUpdateAgeRestrictionConfigV2' test.out

#- 82 GetListCountryAgeRestriction
$CLI_EXE \
    --sn iam \
    --op GetListCountryAgeRestriction \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetListCountryAgeRestriction' test.out

#- 83 UpdateCountryAgeRestriction
# body param: body
echo '{"AgeRestriction": 33}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateCountryAgeRestriction \
    --countryCode 'KWQTkE65' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateCountryAgeRestriction' test.out

#- 84 AdminSearchUsersV2
$CLI_EXE \
    --sn iam \
    --op AdminSearchUsersV2 \
    --namespace $AB_NAMESPACE \
    --after 'j6186p0W' \
    --before 'fsnWZuUP' \
    --displayName 'saRnVdrd' \
    --limit '54' \
    --loginId 'A2hXwYyz' \
    --platformUserId 'ZMdlR4cL' \
    --roleId '76hnFDgT' \
    --userId 'fofHdfoS' \
    --platformId 'qDcaFhOc' \
    > test.out 2>&1
eval_tap $? 84 'AdminSearchUsersV2' test.out

#- 85 AdminGetUserByUserIdV2
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV2 \
    --namespace $AB_NAMESPACE \
    --userId '1oKxI8f5' \
    > test.out 2>&1
eval_tap $? 85 'AdminGetUserByUserIdV2' test.out

#- 86 AdminUpdateUserV2
# body param: body
echo '{"Country": "ocfy4EIx", "DateOfBirth": "wBiB90vd", "DisplayName": "gS5YpKsd", "LanguageTag": "bpiU2Ufy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 'MO4DhL9f' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'AdminUpdateUserV2' test.out

#- 87 AdminBanUserV2
# body param: body
echo '{"ban": "BKJvjBOU", "comment": "n3bYf5ou", "endDate": "XqkbiExq", "reason": "T6Dk9QFq", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 'AjhwOI1P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 87 'AdminBanUserV2' test.out

#- 88 AdminGetUserBanV2
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV2 \
    --namespace $AB_NAMESPACE \
    --userId '04dMHfTw' \
    --activeOnly 'True' \
    > test.out 2>&1
eval_tap $? 88 'AdminGetUserBanV2' test.out

#- 89 AdminDisableUserV2
# body param: body
echo '{"Reason": "xBRfMxZr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 'Sfx3V8OX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'AdminDisableUserV2' test.out

#- 90 AdminEnableUserV2
$CLI_EXE \
    --sn iam \
    --op AdminEnableUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 'kMng7p2S' \
    > test.out 2>&1
eval_tap $? 90 'AdminEnableUserV2' test.out

#- 91 AdminResetPasswordV2
# body param: body
echo '{"LanguageTag": "yFDEnmYQ", "NewPassword": "zehPBqD1", "OldPassword": "2DvvzNNZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV2 \
    --namespace $AB_NAMESPACE \
    --userId 'Su5zZVgY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'AdminResetPasswordV2' test.out

#- 92 AdminDeletePlatformLinkV2
$CLI_EXE \
    --sn iam \
    --op AdminDeletePlatformLinkV2 \
    --namespace $AB_NAMESPACE \
    --platformId '3Zosfd01' \
    --userId 'vaOGweHa' \
    --platform_namespace 'cvHRV345' \
    > test.out 2>&1
eval_tap $? 92 'AdminDeletePlatformLinkV2' test.out

#- 93 AdminPutUserRolesV2
# body param: body
echo '["xB8hos4y"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPutUserRolesV2 \
    --namespace $AB_NAMESPACE \
    --userId 'aOBjMxiz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'AdminPutUserRolesV2' test.out

#- 94 AdminCreateUserRolesV2
# body param: body
echo '["Cxx9qTOI"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserRolesV2 \
    --namespace $AB_NAMESPACE \
    --userId 'Klpdrqo2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'AdminCreateUserRolesV2' test.out

#- 95 PublicGetCountryAgeRestriction
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestriction \
    --countryCode 'smD9RPpj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'PublicGetCountryAgeRestriction' test.out

#- 96 PublicCreateUserV2
# body param: body
echo '{"AuthType": "OWK0k76i", "Country": "1g7rYaEu", "DisplayName": "NCyPoQ0o", "LoginId": "HYXUQdtI", "Password": "kAkltd1z", "PasswordMD5Sum": "QBzzC6ld"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV2 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 96 'PublicCreateUserV2' test.out

#- 97 PublicForgotPasswordV2
# body param: body
echo '{"Context": "KriI6lTR", "LanguageTag": "bc1Z1HJH", "LoginID": "zl323Ynw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV2 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'PublicForgotPasswordV2' test.out

#- 98 PublicResetPasswordV2
# body param: body
echo '{"Code": "f5PvGejC", "LoginID": "DgAr1pXD", "NewPassword": "csHnobna"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicResetPasswordV2 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 98 'PublicResetPasswordV2' test.out

#- 99 PublicGetUserByUserIDV2
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByUserIDV2 \
    --namespace $AB_NAMESPACE \
    --userId 'YxGh3Fov' \
    > test.out 2>&1
eval_tap $? 99 'PublicGetUserByUserIDV2' test.out

#- 100 PublicUpdateUserV2
# body param: body
echo '{"Country": "Bnr5VUOH", "DateOfBirth": "GqEcuJYo", "DisplayName": "3YfMDw4P", "LanguageTag": "aBKsFXor"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 'xY0ahG5A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'PublicUpdateUserV2' test.out

#- 101 PublicGetUserBan
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBan \
    --namespace $AB_NAMESPACE \
    --userId 'gHrE98qQ' \
    --activeOnly 'False' \
    > test.out 2>&1
eval_tap $? 101 'PublicGetUserBan' test.out

#- 102 PublicUpdatePasswordV2
# body param: body
echo '{"LanguageTag": "1W7MnK2i", "NewPassword": "8Ely255a", "OldPassword": "wvulbNGS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV2 \
    --namespace $AB_NAMESPACE \
    --userId 'AjeiiANE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'PublicUpdatePasswordV2' test.out

#- 103 GetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op GetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'TlkncKPm' \
    > test.out 2>&1
eval_tap $? 103 'GetListJusticePlatformAccounts' test.out

#- 104 PublicPlatformLinkV2
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV2 \
    --namespace $AB_NAMESPACE \
    --platformId 'ri36MY2a' \
    --userId 'VCNUJgcp' \
    --ticket 'AYbj0fid' \
    > test.out 2>&1
eval_tap $? 104 'PublicPlatformLinkV2' test.out

#- 105 PublicDeletePlatformLinkV2
$CLI_EXE \
    --sn iam \
    --op PublicDeletePlatformLinkV2 \
    --namespace $AB_NAMESPACE \
    --platformId 'lWPSAIja' \
    --userId 'w5HSyDsQ' \
    --platform_namespace 'qMUPrAxU' \
    > test.out 2>&1
eval_tap $? 105 'PublicDeletePlatformLinkV2' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "d1bmVSM4", "validation": {"allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "description": [{"language": "Zf7a3R9r", "message": ["IVTDDXZ1"]}], "isCustomRegex": false, "letterCase": "ahMp688J", "maxLength": 43, "maxRepeatingAlphaNum": 45, "maxRepeatingSpecialCharacter": 85, "minCharType": 14, "minLength": 3, "regex": "DlcGRx2a", "specialCharacterLocation": "ExmVbXDo", "specialCharacters": ["mWyrFZZd"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'M00sSdUy' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'pOvoMvIN' \
    --before '7cRBRxFs' \
    --limit '56' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 92, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 21}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'oUsUcGfj' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'True' \
    --banType 'fyuPNb5e' \
    --limit '47' \
    --offset '17' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 117 'AdminGetBansTypeWithNamespaceV3' test.out

#- 118 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --limit '87' \
    --offset '38' \
    > test.out 2>&1
eval_tap $? 118 'AdminGetClientsByNamespaceV3' test.out

#- 119 AdminCreateClientV3
# body param: body
echo '{"audiences": ["R1Qe0mxL"], "baseUri": "nvZEG2bi", "clientId": "yKS8vfIs", "clientName": "Z5EADM0x", "clientPermissions": [{"action": 70, "resource": "p6HXexnH", "schedAction": 52, "schedCron": "XYShIg82", "schedRange": ["ffzx6WCU"]}], "clientPlatform": "dwQnivM1", "deletable": true, "namespace": "fIoSsKaP", "oauthClientType": "5KNn0UGr", "redirectUri": "95D9Vatf", "secret": "xBoakHUq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminCreateClientV3' test.out

#- 120 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'z2uOKJVj' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 121 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'X7j5MgRZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 121 'AdminDeleteClientV3' test.out

#- 122 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["3kPmSrNa"], "baseUri": "FzJwBceJ", "clientName": "Q0viEYQy", "clientPermissions": [{"action": 71, "resource": "xBkyXfgw", "schedAction": 50, "schedCron": "MTAlT2q2", "schedRange": ["EbG4Z95S"]}], "clientPlatform": "ldyWe2X8", "deletable": false, "namespace": "Les0TRTA", "redirectUri": "ekrfR30I"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'RA6CzcXF' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUpdateClientV3' test.out

#- 123 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 5, "resource": "jRpu7wVE"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'zbwHvOGq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'AdminUpdateClientPermissionV3' test.out

#- 124 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 44, "resource": "b7FAI8lx"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'DoRtwKNH' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminAddClientPermissionsV3' test.out

#- 125 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '56' \
    --clientId 'ncWRyVDP' \
    --namespace $AB_NAMESPACE \
    --resource 'NRFIbOIi' \
    > test.out 2>&1
eval_tap $? 125 'AdminDeleteClientPermissionV3' test.out

#- 126 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 127 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 128 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '42' \
    --offset '94' \
    > test.out 2>&1
eval_tap $? 128 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 129 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'F26yEKnK' \
    > test.out 2>&1
eval_tap $? 129 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 130 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "L26vTDvj", "AWSCognitoRegion": "jj8aEPjD", "AWSCognitoUserPool": "WSwW548h", "AppId": "HTuJ1jV4", "ClientId": "EKppV4Df", "Environment": "Txfj3AGr", "FederationMetadataURL": "DhoJooH5", "GenericOauthFlow": true, "IsActive": false, "Issuer": "6DELnHRw", "JWKSEndpoint": "igr039B7", "KeyID": "fw1zHG7K", "NetflixCertificates": {"encryptedPrivateKey": "QTrQeIv8", "encryptedPrivateKeyName": "R1CtNkXp", "publicCertificate": "uQ4g9IiL", "publicCertificateName": "xJpTlIMu", "rootCertificate": "KCdAt0XT", "rootCertificateName": "dLLO1WSv"}, "OrganizationId": "dw7FI8mO", "PlatformName": "SB2rvQkd", "RedirectUri": "nYlPH6J7", "Secret": "0BXWVtxO", "TeamID": "yZzUrVRK", "TokenAuthenticationType": "RtJuZ5W7", "TokenClaimsMapping": {"nPrKtUSf": "lKqC31jY"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'v8832yIJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 131 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Ungm7GSr' \
    > test.out 2>&1
eval_tap $? 131 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 132 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "Elr5mgz0", "AWSCognitoRegion": "RyG8SZmn", "AWSCognitoUserPool": "Ovu24EFz", "AppId": "SQyIXv2y", "ClientId": "W4Uka5js", "Environment": "UlAifni5", "FederationMetadataURL": "2mGYo0Bj", "GenericOauthFlow": true, "IsActive": false, "Issuer": "Nr7PeZ5S", "JWKSEndpoint": "aUa0UxaP", "KeyID": "0Kwv68Os", "NetflixCertificates": {"encryptedPrivateKey": "qOUTPXze", "encryptedPrivateKeyName": "lychmgjL", "publicCertificate": "vnOWOk5A", "publicCertificateName": "ekVVmTIE", "rootCertificate": "G2ppf1fH", "rootCertificateName": "3NwfEQkd"}, "OrganizationId": "zI8JQzAp", "PlatformName": "0rF8gvdn", "RedirectUri": "F1yMvoXL", "Secret": "WNoQZhvP", "TeamID": "g7VX5rUN", "TokenAuthenticationType": "WJaq1fjg", "TokenClaimsMapping": {"DypxO4uf": "KfU7Oumx"}}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Sk0Ebju4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 133 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["dSLx4vsb"], "assignedNamespaces": ["6rx9Xxsu"], "domain": "8TJHpdZV", "roleId": "C6y6b9fQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'pa7b36my' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 134 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "8LWzMOfn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jwsIxM4s' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 135 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '9m2qWNvm' \
    > test.out 2>&1
eval_tap $? 135 'RetrieveSSOLoginPlatformCredential' test.out

#- 136 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "PPlRULr7", "apiKey": "pPFCzbPX", "appId": "1wwBznD7", "federationMetadataUrl": "NLs7fb4s", "isActive": true, "redirectUri": "WUpB4t2i", "secret": "eA8XRPhV", "ssoUrl": "zktsWibn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'pBKXMWuo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AddSSOLoginPlatformCredential' test.out

#- 137 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Fv0qjBvB' \
    > test.out 2>&1
eval_tap $? 137 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 138 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "zZGOhAwc", "apiKey": "bpybZn4Z", "appId": "E5OmbNkH", "federationMetadataUrl": "nefZWDwi", "isActive": false, "redirectUri": "nYnQ92kV", "secret": "BDkaMy03", "ssoUrl": "Bul4GW3V"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '0WCbxvTG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdateSSOPlatformCredential' test.out

#- 139 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yccHSkFQ' \
    --platformUserId 'zgVR72Dh' \
    > test.out 2>&1
eval_tap $? 139 'AdminGetUserByPlatformUserIDV3' test.out

#- 140 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'xbr4HtKM' \
    --after '64' \
    --before '35' \
    --limit '38' \
    > test.out 2>&1
eval_tap $? 140 'GetAdminUsersByRoleIdV3' test.out

#- 141 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'nOEeip50' \
    > test.out 2>&1
eval_tap $? 141 'AdminGetUserByEmailAddressV3' test.out

#- 142 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["5iJTzZuk"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 142 'AdminListUserIDByUserIDsV3' test.out

#- 143 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["sb4hREcO"], "isAdmin": true, "roles": ["3mATUsOS"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AdminInviteUserV3' test.out

#- 144 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '9' \
    --offset '90' \
    > test.out 2>&1
eval_tap $? 144 'AdminListUsersV3' test.out

#- 145 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'mapkimop' \
    --endDate 'clvfm7fd' \
    --limit '41' \
    --offset '16' \
    --platformBy 'sKaWRcvk' \
    --platformId 'LtfmGySr' \
    --query 'ACKa0mWW' \
    --startDate 'kDRcuLbI' \
    > test.out 2>&1
eval_tap $? 145 'AdminSearchUserV3' test.out

#- 146 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["pVJnIAFp"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'AdminGetBulkUserByEmailAddressV3' test.out

#- 147 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'X2SKNmnc' \
    > test.out 2>&1
eval_tap $? 147 'AdminGetUserByUserIdV3' test.out

#- 148 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "DRknJort", "country": "wVqipgpX", "dateOfBirth": "VyWoDjOH", "displayName": "rGczaXWi", "languageTag": "pcAHtRkB", "userName": "JXZwQ443"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'FfWtsTAA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'AdminUpdateUserV3' test.out

#- 149 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'gtCnvDp2' \
    --activeOnly 'True' \
    --after 'lTcBaljk' \
    --before '3sB4LS44' \
    --limit '14' \
    > test.out 2>&1
eval_tap $? 149 'AdminGetUserBanV3' test.out

#- 150 AdminBanUserV3
# body param: body
echo '{"ban": "WONXuXih", "comment": "qBVEXSyr", "endDate": "ZKBvGa0L", "reason": "shfP3Lqr", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'SsGFDDAi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminBanUserV3' test.out

#- 151 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'pQaqFPMA' \
    --namespace $AB_NAMESPACE \
    --userId 'jx7edUxN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'AdminUpdateUserBanV3' test.out

#- 152 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "5KMSLs21", "emailAddress": "gdQU0FhA", "languageTag": "QYQaHZ7W"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tAApJtfB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'AdminSendVerificationCodeV3' test.out

#- 153 AdminVerifyAccountV3
# body param: body
echo '{"Code": "0Xt8Zcpu", "ContactType": "z7BY3JPV", "LanguageTag": "nMt1HRDF", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'kSaTdINJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminVerifyAccountV3' test.out

#- 154 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'TdRQmMvx' \
    > test.out 2>&1
eval_tap $? 154 'GetUserVerificationCode' test.out

#- 155 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BjpVFnEg' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetUserDeletionStatusV3' test.out

#- 156 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ovZbx4UF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateUserDeletionStatusV3' test.out

#- 157 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "3pYMzeFc", "country": "sBLCwhTS", "dateOfBirth": "tBJZGkIS", "displayName": "L9Sco6Hx", "emailAddress": "X79bWJCl", "password": "H3pXWCq3", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'sdpW3XyQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminUpgradeHeadlessAccountV3' test.out

#- 158 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'QmftmA5H' \
    > test.out 2>&1
eval_tap $? 158 'AdminDeleteUserInformationV3' test.out

#- 159 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UHioxzVh' \
    --after '0.3989435101030888' \
    --before '0.04166476301583599' \
    --limit '35' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetUserLoginHistoriesV3' test.out

#- 160 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 55, "Resource": "qAXud4JQ", "SchedAction": 81, "SchedCron": "WZBzUvNk", "SchedRange": ["xTUqI2Xh"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bYwTxVSX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminUpdateUserPermissionV3' test.out

#- 161 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 31, "Resource": "Jb2JSuHH", "SchedAction": 57, "SchedCron": "RP9xW9Ve", "SchedRange": ["YJCDikIa"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pumYwbaG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'AdminAddUserPermissionsV3' test.out

#- 162 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 11, "Resource": "sJTgobWG"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId '93dH2MCG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminDeleteUserPermissionBulkV3' test.out

#- 163 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '42' \
    --namespace $AB_NAMESPACE \
    --resource 'ohrdRx6l' \
    --userId 'Vi7UcTmE' \
    > test.out 2>&1
eval_tap $? 163 'AdminDeleteUserPermissionV3' test.out

#- 164 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'we9mWH3X' \
    --after 'VfyejgTi' \
    --before '2E85VnFs' \
    --limit '29' \
    > test.out 2>&1
eval_tap $? 164 'AdminGetUserPlatformAccountsV3' test.out

#- 165 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'XaREa1Wp' \
    > test.out 2>&1
eval_tap $? 165 'AdminGetListJusticePlatformAccounts' test.out

#- 166 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'sZ5PoXUA' \
    --userId 'pZEPfic3' \
    > test.out 2>&1
eval_tap $? 166 'AdminCreateJusticeUser' test.out

#- 167 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "9c2q3a6k", "platformUserId": "RuGqHcwZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'VjAQCkWj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 167 'AdminLinkPlatformAccount' test.out

#- 168 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "E3gJ6AwW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '953NlFHp' \
    --userId 'DCFut39J' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminPlatformUnlinkV3' test.out

#- 169 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'hj3lmfXJ' \
    --userId 'xKJNRD3K' \
    --ticket 'umRjk3wZ' \
    > test.out 2>&1
eval_tap $? 169 'AdminPlatformLinkV3' test.out

#- 170 AdminDeleteUserRolesV3
# body param: body
echo '["YVb3SFss"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nx4JYy1k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminDeleteUserRolesV3' test.out

#- 171 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "XakVQoG0", "roleId": "1upsR2PZ"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId '0E2oWaCZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminSaveUserRoleV3' test.out

#- 172 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'cCX2iLiQ' \
    --userId 'GTL6OYjL' \
    > test.out 2>&1
eval_tap $? 172 'AdminAddUserRoleV3' test.out

#- 173 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'lXUV78i8' \
    --userId 'csQIO0DR' \
    > test.out 2>&1
eval_tap $? 173 'AdminDeleteUserRoleV3' test.out

#- 174 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "gPXzsBfU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'hCoGFgir' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminUpdateUserStatusV3' test.out

#- 175 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dMLexA5z' \
    > test.out 2>&1
eval_tap $? 175 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 176 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "JvQd2cOV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'XFoiaYaS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'AdminUpdateClientSecretV3' test.out

#- 177 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'oog7pSsQ' \
    --before 'hvXbGvqR' \
    --isWildcard 'True' \
    --limit '43' \
    > test.out 2>&1
eval_tap $? 177 'AdminGetRolesV3' test.out

#- 178 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "managers": [{"displayName": "NXrfoKVR", "namespace": "4HhlPEfS", "userId": "M2K29oqf"}], "members": [{"displayName": "ZssibgoT", "namespace": "FQAmIZiT", "userId": "SstC2yOu"}], "permissions": [{"action": 25, "resource": "zHMhXysw", "schedAction": 37, "schedCron": "3Fwnu7OX", "schedRange": ["9FZvwJ8O"]}], "roleName": "QFuCH68p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminCreateRoleV3' test.out

#- 179 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'TmT632j8' \
    > test.out 2>&1
eval_tap $? 179 'AdminGetRoleV3' test.out

#- 180 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'QfhNDTHb' \
    > test.out 2>&1
eval_tap $? 180 'AdminDeleteRoleV3' test.out

#- 181 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": true, "roleName": "vBolf9Pd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'i5BLCsT8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminUpdateRoleV3' test.out

#- 182 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'g72thhdu' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetRoleAdminStatusV3' test.out

#- 183 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'ZnNj9cRN' \
    > test.out 2>&1
eval_tap $? 183 'AdminUpdateAdminRoleStatusV3' test.out

#- 184 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'lTBxl3nK' \
    > test.out 2>&1
eval_tap $? 184 'AdminRemoveRoleAdminV3' test.out

#- 185 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'j6B4ffgt' \
    --after 'xiPLdV0o' \
    --before 'dbfast4N' \
    --limit '58' \
    > test.out 2>&1
eval_tap $? 185 'AdminGetRoleManagersV3' test.out

#- 186 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "IBQl3Ury", "namespace": "ryOWzhhE", "userId": "mSVFhAlE"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'acAAoAfs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'AdminAddRoleManagersV3' test.out

#- 187 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "uMB4W3HI", "namespace": "cvS0AL4t", "userId": "YCwCdCig"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'cxlbl30h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminRemoveRoleManagersV3' test.out

#- 188 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'HHEjMI4L' \
    --after 'cgkyDscc' \
    --before 'FdvzoafM' \
    --limit '74' \
    > test.out 2>&1
eval_tap $? 188 'AdminGetRoleMembersV3' test.out

#- 189 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "oraVj5Ri", "namespace": "DHvo7Kep", "userId": "gBTMRiEd"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'eeQwLUW0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 189 'AdminAddRoleMembersV3' test.out

#- 190 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "VLupH83A", "namespace": "uxFEFRDT", "userId": "t2mauywa"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'KEsPBAM1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminRemoveRoleMembersV3' test.out

#- 191 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 0, "resource": "ujNqlmpK", "schedAction": 64, "schedCron": "hvTKiXeZ", "schedRange": ["epm7tF1w"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'KhQ4HjEc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 191 'AdminUpdateRolePermissionsV3' test.out

#- 192 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 1, "resource": "gyjZITRu", "schedAction": 29, "schedCron": "WjICoCN3", "schedRange": ["NyzAV4ni"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'QQVjgDJE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminAddRolePermissionsV3' test.out

#- 193 AdminDeleteRolePermissionsV3
# body param: body
echo '["12W5eopl"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'rOXwASJ1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminDeleteRolePermissionsV3' test.out

#- 194 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '83' \
    --resource 'tQuxOJQK' \
    --roleId 'gor2UMJt' \
    > test.out 2>&1
eval_tap $? 194 'AdminDeleteRolePermissionV3' test.out

#- 195 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 195 'AdminGetMyUserV3' test.out

#- 196 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id '4EJ9GccY' \
    --extend_exp 'True' \
    --redirect_uri 'PTgpBNsU' \
    --password 'vUKhANjq' \
    --request_id 'uBEHOJba' \
    --user_name 'Qpz0dfiu' \
    > test.out 2>&1
eval_tap $? 196 'UserAuthenticationV3' test.out

#- 197 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'True' \
    --client_id '051lkPCa' \
    --linkingToken 'ZsjvFvhZ' \
    --password 'dwi1Ti6V' \
    --username '2uWuCsB8' \
    > test.out 2>&1
eval_tap $? 197 'AuthenticationWithPlatformLinkV3' test.out

#- 198 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --extend_exp 'True' \
    --linkingToken 'bVDwhpNC' \
    > test.out 2>&1
eval_tap $? 198 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 199 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 199 'GetCountryLocationV3' test.out

#- 200 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 200 'Logout' test.out

#- 201 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Ll2bgIc1' \
    --userId 'y49bqpbf' \
    > test.out 2>&1
eval_tap $? 201 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 202 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'yytwm6jQ' \
    > test.out 2>&1
eval_tap $? 202 'RevokeUserV3' test.out

#- 203 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'JpfOIKCe' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'False' \
    --redirectUri 'KQRjoyn3' \
    --scope 'bGyFGwcA' \
    --state 'ylTi4qPF' \
    --targetAuthPage '190sf2Zw' \
    --clientId 'Pi5hI4k3' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 203 'AuthorizeV3' test.out

#- 204 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'V7P8R9t4' \
    > test.out 2>&1
eval_tap $? 204 'TokenIntrospectionV3' test.out

#- 205 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 205 'GetJWKSV3' test.out

#- 206 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'dBRpBp4n' \
    --mfaToken 'oj3J79DD' \
    > test.out 2>&1
eval_tap $? 206 'Change2faMethod' test.out

#- 207 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code '3bAZF4nY' \
    --factor 'BuNxISmV' \
    --mfaToken 'GVz9Jxj8' \
    --rememberDevice 'True' \
    > test.out 2>&1
eval_tap $? 207 'Verify2faCode' test.out

#- 208 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'egrDo6Om' \
    --userId 'eKL7GPoI' \
    > test.out 2>&1
eval_tap $? 208 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 209 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId '9uWOFTWd' \
    --clientId 'RrL6yNmv' \
    --redirectUri '8k1w19Js' \
    --requestId 'HSqOByh4' \
    > test.out 2>&1
eval_tap $? 209 'AuthCodeRequestV3' test.out

#- 210 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'hhkcO6J7' \
    --client_id 'jSvYd4J5' \
    --createHeadless 'False' \
    --device_id '6ayFnSrf' \
    --platform_token 'mObFTUBR' \
    > test.out 2>&1
eval_tap $? 210 'PlatformTokenGrantV3' test.out

#- 211 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 211 'GetRevocationListV3' test.out

#- 212 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'RDGCRQtM' \
    > test.out 2>&1
eval_tap $? 212 'TokenRevocationV3' test.out

#- 213 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --client_id 'c3an8Zox' \
    --code 'LwXHS1oU' \
    --code_verifier 'zDdDcZ0R' \
    --extend_exp 'False' \
    --password '3YM1fz9C' \
    --redirect_uri 'jqtqeiyD' \
    --refresh_token 'CK7C3u5G' \
    --username 'cPbmi5Ki' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 213 'TokenGrantV3' test.out

#- 214 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'DVpfvR2W' \
    --code 'l0iShagp' \
    --error 'vFuZu45z' \
    --openidAssocHandle 'srSpvMLv' \
    --openidClaimedId 'Qw3sPxFu' \
    --openidIdentity '8LQGQCAj' \
    --openidMode '6O7ivhNI' \
    --openidNs 'jVT5HSR0' \
    --openidOpEndpoint '0UKSLWWz' \
    --openidResponseNonce 'OplTLwZQ' \
    --openidReturnTo 'ZUMaAJ6Z' \
    --openidSig 'BTHYjGbV' \
    --openidSigned 'tzsBTCOW' \
    --state 'EnaLzHuY' \
    > test.out 2>&1
eval_tap $? 214 'PlatformAuthenticationV3' test.out

#- 215 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'True' \
    --languageCode 'r89z0RkL' \
    > test.out 2>&1
eval_tap $? 215 'PublicGetInputValidations' test.out

#- 216 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 216 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 217 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["932B7thD"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Q3hfVnPK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 217 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 218 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '8iK8cdZP' \
    --platformUserId 'nXwGS9fA' \
    > test.out 2>&1
eval_tap $? 218 'PublicGetUserByPlatformUserIDV3' test.out

#- 219 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'lxtjeZUr' \
    > test.out 2>&1
eval_tap $? 219 'PublicGetAsyncStatus' test.out

#- 220 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'qmIc7El4' \
    --limit '77' \
    --offset '60' \
    --query 'AvaPTwwJ' \
    > test.out 2>&1
eval_tap $? 220 'PublicSearchUserV3' test.out

#- 221 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "rG06MtcF", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "8DQxcoQB", "policyId": "TWMc41xD", "policyVersionId": "mUjkXi2L"}], "authType": "gkALGxw6", "code": "qgvIJBe6", "country": "rDGbFNzs", "dateOfBirth": "yQVqvSgt", "displayName": "pUVddL6A", "emailAddress": "1cTLmuKl", "password": "GHZdwwo6", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 221 'PublicCreateUserV3' test.out

#- 222 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'YztHev8R' \
    --query 'X4MWRFkl' \
    > test.out 2>&1
eval_tap $? 222 'CheckUserAvailability' test.out

#- 223 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["N13WW7U0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 223 'PublicBulkGetUsers' test.out

#- 224 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "sRVCnzRx", "languageTag": "ni0Kq9Zl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'PublicSendRegistrationCode' test.out

#- 225 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "2b7ChMCx", "emailAddress": "b6xdzl2O"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'PublicVerifyRegistrationCode' test.out

#- 226 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "YVRJNC7E", "languageTag": "ruVITunb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'PublicForgotPasswordV3' test.out

#- 227 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'xaOWNrMk' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 227 'GetAdminInvitationV3' test.out

#- 228 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "ALUDrR6M", "policyId": "3vzu84TN", "policyVersionId": "QYCZIpKF"}], "authType": "EMAILPASSWD", "country": "pQOjjkIY", "dateOfBirth": "AQEcxGPT", "displayName": "kn2NJ9gH", "password": "mB0vflV2", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'tGYAEziS' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'CreateUserFromInvitationV3' test.out

#- 229 UpdateUserV3
# body param: body
echo '{"avatarUrl": "thhR9WLi", "country": "VTXHhZmB", "dateOfBirth": "yxlmWBLy", "displayName": "hgZsJoon", "languageTag": "MpOQ9Jmh", "userName": "8wwQ28fm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'UpdateUserV3' test.out

#- 230 PublicUpdateUserV3
# body param: body
echo '{"avatarUrl": "xMFN8d9f", "country": "dHAHphhb", "dateOfBirth": "y7hGbKeI", "displayName": "kY4Fc8at", "languageTag": "J3J4gbk9", "userName": "YdEm0o9R"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'PublicUpdateUserV3' test.out

#- 231 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "jjnkhwq7", "emailAddress": "5VqZH8HU", "languageTag": "q92UFWFC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'PublicSendVerificationCodeV3' test.out

#- 232 PublicUserVerificationV3
# body param: body
echo '{"code": "8oFuU2OF", "contactType": "J6w1Hbio", "languageTag": "iiaZ8Uc2", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'PublicUserVerificationV3' test.out

#- 233 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "WpzX2mgo", "country": "BhruuvEz", "dateOfBirth": "pyRiFs63", "displayName": "b4Pru2pW", "emailAddress": "iVBYjKI1", "password": "ZlcKXBXc", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'PublicUpgradeHeadlessAccountV3' test.out

#- 234 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "sjW7zBxp", "password": "Vc8svjiF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'PublicVerifyHeadlessAccountV3' test.out

#- 235 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "tRe8k7am", "newPassword": "plfhuHro", "oldPassword": "pVxIvBjs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'PublicUpdatePasswordV3' test.out

#- 236 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'YUEDp1ta' \
    > test.out 2>&1
eval_tap $? 236 'PublicCreateJusticeUser' test.out

#- 237 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'P9py4Fl6' \
    --redirectUri 'UoVxgHJL' \
    --ticket 'Bm3bgRvS' \
    > test.out 2>&1
eval_tap $? 237 'PublicPlatformLinkV3' test.out

#- 238 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "UyOgyu9d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'hxaofTjM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'PublicPlatformUnlinkV3' test.out

#- 239 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'YGTMXy4y' \
    > test.out 2>&1
eval_tap $? 239 'PublicPlatformUnlinkAllV3' test.out

#- 240 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'pcIN4uUI' \
    --clientId 'zvUI5b1w' \
    --redirectUri 'xS2yBTD8' \
    > test.out 2>&1
eval_tap $? 240 'PublicWebLinkPlatform' test.out

#- 241 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'uNeauLeX' \
    --state 'NgQBnXZk' \
    > test.out 2>&1
eval_tap $? 241 'PublicWebLinkPlatformEstablish' test.out

#- 242 ResetPasswordV3
# body param: body
echo '{"code": "Q06LUEgy", "emailAddress": "yiBeJARF", "newPassword": "VbUvLNtD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'ResetPasswordV3' test.out

#- 243 PublicGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dAntKI6v' \
    > test.out 2>&1
eval_tap $? 243 'PublicGetUserByUserIdV3' test.out

#- 244 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'd3QdSHH2' \
    --activeOnly 'True' \
    --after 'vosR9Nk0' \
    --before 'JJYXMRcQ' \
    --limit '13' \
    > test.out 2>&1
eval_tap $? 244 'PublicGetUserBanHistoryV3' test.out

#- 245 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '1LwgzWRu' \
    > test.out 2>&1
eval_tap $? 245 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 246 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId '5q2i8ntD' \
    --after '0.06044632566838415' \
    --before '0.6950203972543272' \
    --limit '60' \
    > test.out 2>&1
eval_tap $? 246 'PublicGetUserLoginHistoriesV3' test.out

#- 247 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IqFse4oc' \
    --after 'rqjWTbUa' \
    --before 'yIP8oO0z' \
    --limit '94' \
    > test.out 2>&1
eval_tap $? 247 'PublicGetUserPlatformAccountsV3' test.out

#- 248 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "ffDHyFM7", "platformUserId": "T2H6g4jb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'xDDxngEq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PublicLinkPlatformAccount' test.out

#- 249 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["sAbWEfTc"], "requestId": "2nSU2Sij"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'ySpnqX01' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'PublicForceLinkPlatformWithProgression' test.out

#- 250 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uDkQ1tv3' \
    --password 'iMMW8aqV' \
    > test.out 2>&1
eval_tap $? 250 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 251 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'bwArhGSa' \
    --before 'FxyAsPnf' \
    --isWildcard 'False' \
    --limit '67' \
    > test.out 2>&1
eval_tap $? 251 'PublicGetRolesV3' test.out

#- 252 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'X5TpIV6e' \
    > test.out 2>&1
eval_tap $? 252 'PublicGetRoleV3' test.out

#- 253 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 253 'PublicGetMyUserV3' test.out

#- 254 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId '7dMKaAr2' \
    --code 'VSmtP8qx' \
    --error 'tNo76oPR' \
    --state 'uvxUGNJv' \
    > test.out 2>&1
eval_tap $? 254 'PlatformAuthenticateSAMLV3Handler' test.out

#- 255 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'DRuWXBzy' \
    --payload 'WeusWdEJ' \
    > test.out 2>&1
eval_tap $? 255 'LoginSSOClient' test.out

#- 256 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'nqhXgmVQ' \
    > test.out 2>&1
eval_tap $? 256 'LogoutSSOClient' test.out

#- 257 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["HoZNPy0W"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'AdminBulkCheckValidUserIDV4' test.out

#- 258 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "qu4qtxTy", "country": "rvNhypNL", "dateOfBirth": "porjcAKS", "displayName": "uvgVjdXM", "languageTag": "n2juyP3W", "userName": "X3u1OLRU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'rZ6vwIqG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'AdminUpdateUserV4' test.out

#- 259 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "noqXXAZd", "emailAddress": "7bvO6Xg2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'xx5vZXC9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'AdminUpdateUserEmailAddressV4' test.out

#- 260 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'YsEXEe9i' \
    > test.out 2>&1
eval_tap $? 260 'AdminDisableUserMFAV4' test.out

#- 261 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'C3Hp95At' \
    > test.out 2>&1
eval_tap $? 261 'AdminListUserRolesV4' test.out

#- 262 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["WE8drEip"], "roleId": "XZfocCS9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'nGM6fYF1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'AdminUpdateUserRoleV4' test.out

#- 263 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["o77M1VVg"], "roleId": "HHeL0flE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'PUxHPhE4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'AdminAddUserRoleV4' test.out

#- 264 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["YwCRBGAR"], "roleId": "8TtZlDIj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'OfYlF5jI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 264 'AdminRemoveUserRoleV4' test.out

#- 265 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'False' \
    --isWildcard 'True' \
    --limit '45' \
    --offset '33' \
    > test.out 2>&1
eval_tap $? 265 'AdminGetRolesV4' test.out

#- 266 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "nNydTcPO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'AdminCreateRoleV4' test.out

#- 267 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'tfkEyLh6' \
    > test.out 2>&1
eval_tap $? 267 'AdminGetRoleV4' test.out

#- 268 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'l74AQY5u' \
    > test.out 2>&1
eval_tap $? 268 'AdminDeleteRoleV4' test.out

#- 269 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "ioSoooPh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'Q9xlLMe7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'AdminUpdateRoleV4' test.out

#- 270 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 25, "resource": "a8Qc9aGN", "schedAction": 93, "schedCron": "JPLchiiv", "schedRange": ["OQdByk3m"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'WQ93BxbP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 270 'AdminUpdateRolePermissionsV4' test.out

#- 271 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 94, "resource": "P8rKuVwT", "schedAction": 91, "schedCron": "GSX5rG8y", "schedRange": ["mO7ml7SC"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'wM6RZNer' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'AdminAddRolePermissionsV4' test.out

#- 272 AdminDeleteRolePermissionsV4
# body param: body
echo '["JQroYUkv"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'Hx2dAjFF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'AdminDeleteRolePermissionsV4' test.out

#- 273 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId '0BBGwZ7X' \
    --after 'WhdoYx12' \
    --before '7YYBoxSC' \
    --limit '63' \
    > test.out 2>&1
eval_tap $? 273 'AdminListAssignedUsersV4' test.out

#- 274 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["sBbZL16L"], "namespace": "2P8eNmOi", "userId": "4OPQ8ZEV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId '8XzBcAni' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'AdminAssignUserToRoleV4' test.out

#- 275 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "VuoW6wPQ", "userId": "lP1zgkxv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId '25ZHaR8v' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'AdminRevokeUserFromRoleV4' test.out

#- 276 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "sMhIfogR", "country": "B8XeZhAM", "dateOfBirth": "4MAL57ri", "displayName": "U2QbQFRC", "languageTag": "XEWG8Sxt", "userName": "5vtTkIWb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'AdminUpdateMyUserV4' test.out

#- 277 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 277 'AdminDisableMyAuthenticatorV4' test.out

#- 278 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'iHTUDDL4' \
    > test.out 2>&1
eval_tap $? 278 'AdminEnableMyAuthenticatorV4' test.out

#- 279 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 279 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 280 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 280 'AdminGetMyBackupCodesV4' test.out

#- 281 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 281 'AdminGenerateMyBackupCodesV4' test.out

#- 282 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 282 'AdminDisableMyBackupCodesV4' test.out

#- 283 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 283 'AdminDownloadMyBackupCodesV4' test.out

#- 284 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 284 'AdminEnableMyBackupCodesV4' test.out

#- 285 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 285 'AdminGetMyEnabledFactorsV4' test.out

#- 286 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'yzTnQv0e' \
    > test.out 2>&1
eval_tap $? 286 'AdminMakeFactorMyDefaultV4' test.out

#- 287 AdminInviteUserV4
# body param: body
echo '{"assignedNamespaces": ["99zYNkH6"], "emailAddresses": ["PuvERGP7"], "isAdmin": false, "roleId": "myd8aJkJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'AdminInviteUserV4' test.out

#- 288 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "4wBCsCLr", "policyId": "fH6V3fTR", "policyVersionId": "ar0UZS96"}], "authType": "EMAILPASSWD", "country": "D9rgdYvy", "dateOfBirth": "fGQvBMJG", "displayName": "a0RWFilS", "emailAddress": "DbJxY0YR", "password": "9wXVRz5a", "passwordMD5Sum": "yquoA8CG", "username": "DmAN0yX8", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'PublicCreateTestUserV4' test.out

#- 289 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "01b0bUqD", "policyId": "heu9idRv", "policyVersionId": "Q8V1CaeT"}], "authType": "EMAILPASSWD", "code": "pZ2JC53C", "country": "GQXzjGEv", "dateOfBirth": "vr9VR6Qq", "displayName": "aoAupKSo", "emailAddress": "0RHRzXML", "password": "3VcaDWEz", "passwordMD5Sum": "PCi2tWPz", "reachMinimumAge": false, "username": "rjLFLLuG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'PublicCreateUserV4' test.out

#- 290 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "XInVkn9o", "policyId": "jnppiU7r", "policyVersionId": "YU098E1J"}], "authType": "EMAILPASSWD", "country": "PmaRkeYX", "dateOfBirth": "8U71w09m", "displayName": "Tap7y90X", "password": "88qbd2vR", "reachMinimumAge": false, "username": "qoGBqBax"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'LbpDekuI' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'CreateUserFromInvitationV4' test.out

#- 291 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "zTODQZkN", "country": "g9XscMV2", "dateOfBirth": "DnOo9Pao", "displayName": "BSJJGgg8", "languageTag": "epTUehn6", "userName": "IzqXsteu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'PublicUpdateUserV4' test.out

#- 292 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "4pU694ex", "emailAddress": "0bxtkvXI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'PublicUpdateUserEmailAddressV4' test.out

#- 293 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "rbCB52Hl", "country": "TeFVmpXn", "dateOfBirth": "rWDCij8S", "displayName": "73sQDNy1", "emailAddress": "2G1PiTJw", "password": "xV0rwMM7", "reachMinimumAge": true, "username": "MJnUBZ6G", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 294 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "hfcrddeI", "password": "OhxQMImB", "username": "13f1obTK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'PublicUpgradeHeadlessAccountV4' test.out

#- 295 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 295 'PublicDisableMyAuthenticatorV4' test.out

#- 296 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'rwFXC2Op' \
    > test.out 2>&1
eval_tap $? 296 'PublicEnableMyAuthenticatorV4' test.out

#- 297 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 297 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 298 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 298 'PublicGetMyBackupCodesV4' test.out

#- 299 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 299 'PublicGenerateMyBackupCodesV4' test.out

#- 300 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 300 'PublicDisableMyBackupCodesV4' test.out

#- 301 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 301 'PublicDownloadMyBackupCodesV4' test.out

#- 302 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 302 'PublicEnableMyBackupCodesV4' test.out

#- 303 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token '2yXEIOAJ' \
    > test.out 2>&1
eval_tap $? 303 'PublicRemoveTrustedDeviceV4' test.out

#- 304 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 304 'PublicGetMyEnabledFactorsV4' test.out

#- 305 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'h6XNWtHW' \
    > test.out 2>&1
eval_tap $? 305 'PublicMakeFactorMyDefaultV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE