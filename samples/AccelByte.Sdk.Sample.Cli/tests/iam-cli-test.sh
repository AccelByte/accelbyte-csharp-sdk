#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..333"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "bpk9pDkU", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": false, "blockedWord": ["RSgN6v6b", "3b9KK0a6", "T2A8wGjt"], "description": [{"language": "Sfdd5Def", "message": ["v4yAGxbW", "WYjzg165", "DmiODiUp"]}, {"language": "OO3gBQFA", "message": ["X1cJfjjN", "7G52wqSi", "PUd98JAb"]}, {"language": "gTNeJXUz", "message": ["hftiWn15", "YGs7Ywzr", "kOyHchOc"]}], "isCustomRegex": false, "letterCase": "Ga3fJP30", "maxLength": 30, "maxRepeatingAlphaNum": 93, "maxRepeatingSpecialCharacter": 8, "minCharType": 57, "minLength": 41, "regex": "7NwCZEgT", "specialCharacterLocation": "6A604s5D", "specialCharacters": ["aTO3XLBz", "8kBo2BCX", "MAFcdB5n"]}}, {"field": "2ogFHrcz", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "blockedWord": ["XPcqa3oi", "v9WXYFet", "Z3IK0eAX"], "description": [{"language": "ltwt2SUU", "message": ["6sjwy4dL", "TNjNcTTY", "CJFP4Oot"]}, {"language": "TtCGkKJ3", "message": ["g1Vc7Ewy", "uVwV3q42", "XHBwW61w"]}, {"language": "UsOazY19", "message": ["A0zebxoY", "zsaxuBIU", "oNg2HOqh"]}], "isCustomRegex": false, "letterCase": "0O5vCIbP", "maxLength": 72, "maxRepeatingAlphaNum": 39, "maxRepeatingSpecialCharacter": 50, "minCharType": 62, "minLength": 7, "regex": "QrEdXEzq", "specialCharacterLocation": "y0joJl9N", "specialCharacters": ["9CesQS3u", "DUNs2ghP", "xnNYhvtl"]}}, {"field": "56co9PI5", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "blockedWord": ["Odv7GExz", "zPXJ6XkY", "rRGK4f2k"], "description": [{"language": "jYboH5Mu", "message": ["jBQH94G7", "YoBNnh6h", "68khtUwU"]}, {"language": "FSg2SIBI", "message": ["zJAV3TdJ", "G7lO1Wcp", "Tjayx9kQ"]}, {"language": "FJg2HGXT", "message": ["3cHK52ri", "reYrzdjh", "tA2b0JmZ"]}], "isCustomRegex": false, "letterCase": "nJqfjFzQ", "maxLength": 99, "maxRepeatingAlphaNum": 58, "maxRepeatingSpecialCharacter": 78, "minCharType": 53, "minLength": 5, "regex": "JJfya9Nh", "specialCharacterLocation": "OpXVt3At", "specialCharacters": ["Cgb0YY1P", "jRYjKeHh", "HBgtKrEm"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'I4F0zbdj' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'aM3ozWf7' \
    --before '1duAoswB' \
    --limit '50' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 8, "enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 73}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode '4p0j1a9c' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'zpewjYmv' \
    --limit '56' \
    --offset '59' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "xiCdUVQG", "comment": "m7dbZv8Q", "endDate": "yu5YOhiZ", "reason": "34RrWENx", "skipNotif": false, "userIds": ["Q9cjsvmE", "5ka8mSpD", "3hHZcJlc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "GZf2Sa1D", "userId": "EFnTm71T"}, {"banId": "4RSdPOzC", "userId": "hlaOOaDP"}, {"banId": "Xwt5NalX", "userId": "h5Uaqfn3"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --limit '30' \
    --offset '91' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["V9iweGif", "iUM88LC7", "APTftUO3"], "baseUri": "0tSXkKbs", "clientId": "z64lMjjw", "clientName": "xqDxzixH", "clientPermissions": [{"action": 27, "resource": "4Z2I4FAb", "schedAction": 32, "schedCron": "cxl6kBHJ", "schedRange": ["q3dOsCpz", "RO9HVFp5", "j6rN3NgB"]}, {"action": 24, "resource": "RH2AxdFU", "schedAction": 46, "schedCron": "YRWrdjGV", "schedRange": ["IlTvjYPm", "05kceeyS", "57C7B35O"]}, {"action": 77, "resource": "WxBLw7Pz", "schedAction": 29, "schedCron": "uPvxRImd", "schedRange": ["wPGnK5n0", "O9yh24HT", "IGrJFSmg"]}], "clientPlatform": "q0VV89UM", "deletable": true, "namespace": "6hl88zyk", "oauthAccessTokenExpiration": 0, "oauthClientType": "Rfqgg4e4", "oauthRefreshTokenExpiration": 98, "redirectUri": "Knq7eD2E", "secret": "BxxXf3bP", "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'AJITFlm5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'AOMm7tYO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["hrKKSuOk", "aybSV7RU", "8IYfr4zY"], "baseUri": "POZDGsSQ", "clientName": "R9Kkq4lq", "clientPermissions": [{"action": 45, "resource": "uauzjhzM", "schedAction": 55, "schedCron": "LXU4lcXr", "schedRange": ["Sp7BwVlC", "oSr1A0iW", "us68uluP"]}, {"action": 70, "resource": "Yw790k8D", "schedAction": 16, "schedCron": "CSaoR83e", "schedRange": ["DbKD84zF", "Q8AThdro", "wl5wy5aZ"]}, {"action": 2, "resource": "XCrKagFm", "schedAction": 72, "schedCron": "hcSsRMyI", "schedRange": ["kL14rUnu", "jQqal5tV", "9hU7JECw"]}], "clientPlatform": "BOGr1VZW", "deletable": true, "namespace": "tpr7GJGd", "oauthAccessTokenExpiration": 0, "oauthRefreshTokenExpiration": 4, "redirectUri": "ItScAYcU", "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'QoG3SLO4' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 84, "resource": "wltt4mm9"}, {"action": 34, "resource": "vyeaw2Rh"}, {"action": 39, "resource": "q4QOHL18"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId '6HO9hkgD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 19, "resource": "CaASQ5dG"}, {"action": 88, "resource": "pTWeKoIm"}, {"action": 10, "resource": "yYkyU3AF"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId '4WA1ljnq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '10' \
    --clientId 'fUIHs0ri' \
    --namespace $AB_NAMESPACE \
    --resource 'T47BWCqS' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 129 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 130 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '16' \
    --offset '17' \
    > test.out 2>&1
eval_tap $? 130 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 131 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ECYUAltK' \
    > test.out 2>&1
eval_tap $? 131 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 132 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "nCO2IWbX", "AWSCognitoRegion": "mWFokZv3", "AWSCognitoUserPool": "p6iwhlrd", "AllowedClients": ["dydnKikP", "vvW68Zt0", "zEnJ9rK6"], "AppId": "SckSLBEd", "AuthorizationEndpoint": "vRiIR1Rz", "ClientId": "qsUe2IFt", "Environment": "QgGPpcr5", "FederationMetadataURL": "aH4eAZCq", "GenericOauthFlow": true, "IsActive": true, "Issuer": "HjSNnjBF", "JWKSEndpoint": "nqlRKXTN", "KeyID": "XM8QVC68", "NetflixCertificates": {"encryptedPrivateKey": "9TRcswGG", "encryptedPrivateKeyName": "qRJHvTJp", "publicCertificate": "0NHhbdia", "publicCertificateName": "gtvdmukk", "rootCertificate": "nDqKtCTY", "rootCertificateName": "QacaQjjw"}, "OrganizationId": "lsIhqRlX", "PlatformName": "orpfS54K", "RedirectUri": "Jd6TddeV", "RegisteredDomains": [{"affectedClientIDs": ["0CCFRGSh", "3NAhZS0X", "yvOgxp5U"], "domain": "DDYCXhE0", "namespaces": ["m68rSfYG", "7nw9cpHJ", "aPcvp4kt"], "roleId": "M4CcgjoN"}, {"affectedClientIDs": ["tp2l8Wm8", "v2XcfMxk", "XUrieTN6"], "domain": "2r9molNy", "namespaces": ["wwCBOTxG", "f6lmncqs", "D6BLHOkb"], "roleId": "7vPSSAj4"}, {"affectedClientIDs": ["QwJa9oAJ", "RNgwymvn", "a6hEbRj9"], "domain": "TrANJhkE", "namespaces": ["CKNaT1AC", "cUZZqhmP", "IVUr4807"], "roleId": "0EaDWNph"}], "Secret": "qzfZQzIS", "TeamID": "s5yfhGPU", "TokenAuthenticationType": "QYlV1U1Z", "TokenClaimsMapping": {"HlQobQf6": "ABttta4H", "CIIpwsi6": "EtTAJKxM", "FHfPH5Zd": "w7VAaLIE"}, "TokenEndpoint": "tGD3ts61"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'dT3EOuDm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 133 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'R2O4rHUc' \
    > test.out 2>&1
eval_tap $? 133 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 134 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "K7Kuiz8n", "AWSCognitoRegion": "zKYPmFLB", "AWSCognitoUserPool": "1y8W584E", "AllowedClients": ["I2rQixkE", "maWx5bJq", "rbjsxfXH"], "AppId": "v526SiNH", "AuthorizationEndpoint": "Ir4uqV4j", "ClientId": "wx3UEgpA", "Environment": "ORVeAnnZ", "FederationMetadataURL": "ydcf2j1I", "GenericOauthFlow": true, "IsActive": false, "Issuer": "XuARkmQq", "JWKSEndpoint": "nTtzhJ6A", "KeyID": "FIHgVvvC", "NetflixCertificates": {"encryptedPrivateKey": "x0BFSbUV", "encryptedPrivateKeyName": "KVj1s1P9", "publicCertificate": "NWXHfU0U", "publicCertificateName": "Cpao8da9", "rootCertificate": "gkH1SrcZ", "rootCertificateName": "4o4PpX8Y"}, "OrganizationId": "s3sLWZQB", "PlatformName": "L7z1aQrU", "RedirectUri": "tM8rCrfd", "RegisteredDomains": [{"affectedClientIDs": ["PMmFYtya", "St90swXk", "m7kt2HgM"], "domain": "LOCML88B", "namespaces": ["fLPbhUBe", "rzwZWZtH", "KxAqjBhA"], "roleId": "FOG6pxil"}, {"affectedClientIDs": ["Gvif4J1u", "9mNGMIvq", "U8wnB8GC"], "domain": "dc573MG3", "namespaces": ["vRwiui99", "TAWtO0rt", "adgjrmZh"], "roleId": "fwAU94Cl"}, {"affectedClientIDs": ["o3rrw9jx", "s2FwwPtj", "RbhZ4RWL"], "domain": "W896GYz5", "namespaces": ["1xgSzpOd", "PXhffA4k", "70SCjZLS"], "roleId": "ydrgRevJ"}], "Secret": "6mQH9aTN", "TeamID": "1Cd4sszW", "TokenAuthenticationType": "hiR1dQy5", "TokenClaimsMapping": {"jxYd2mS9": "1WLRP17j", "PZhmNDQk": "25m9CWBb", "trcnOBIQ": "wP5EBKx5"}, "TokenEndpoint": "qRLM5fwo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '5eTvS3WN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 135 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["0HssMZn1", "JDSAtEjD", "PirTisrg"], "assignedNamespaces": ["SDUi54XH", "ukxAcLVu", "ODUddiRH"], "domain": "1tGXgXL4", "roleId": "DmD2EfKt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NatkAooT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 136 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "hTmezwIU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'SuYlxhmw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 137 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'YHcoPoEz' \
    > test.out 2>&1
eval_tap $? 137 'RetrieveSSOLoginPlatformCredential' test.out

#- 138 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "2CnIPG21", "apiKey": "7ZfYyCl9", "appId": "sEuhqOD2", "federationMetadataUrl": "aCk4aAq0", "isActive": false, "redirectUri": "9J3q7IkX", "secret": "AU7QtAgC", "ssoUrl": "LVLY23KE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'cwblgsAD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AddSSOLoginPlatformCredential' test.out

#- 139 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NodIzQu9' \
    > test.out 2>&1
eval_tap $? 139 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 140 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "jIcUwOCT", "apiKey": "npDgrThi", "appId": "BHQ2kHMq", "federationMetadataUrl": "lSrltV2H", "isActive": false, "redirectUri": "24CriheC", "secret": "jEfXkQWo", "ssoUrl": "SYIEZMYU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'JI5canYe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateSSOPlatformCredential' test.out

#- 141 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'khyCIvC1' \
    --platformUserId 'TYKBEY5T' \
    > test.out 2>&1
eval_tap $? 141 'AdminGetUserByPlatformUserIDV3' test.out

#- 142 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'VfCW3hze' \
    --after '73' \
    --before '18' \
    --limit '62' \
    > test.out 2>&1
eval_tap $? 142 'GetAdminUsersByRoleIdV3' test.out

#- 143 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '0oA86rwL' \
    > test.out 2>&1
eval_tap $? 143 'AdminGetUserByEmailAddressV3' test.out

#- 144 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["O2dZtoTv", "YhkA5MAh", "FU7XS4Gt"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AdminListUserIDByUserIDsV3' test.out

#- 145 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["176LM7dG", "Vp1a79zh", "0lAZyOu1"], "isAdmin": false, "roles": ["DCNW2812", "P38tvhIj", "dl9Bi6El"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'AdminInviteUserV3' test.out

#- 146 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '23' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 146 'AdminListUsersV3' test.out

#- 147 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'J204N9jx' \
    --endDate 'W4Ku0vun' \
    --limit '12' \
    --offset '23' \
    --platformBy 'jYZlqYEj' \
    --platformId 'GjsLBhno' \
    --query 'PjlArVlL' \
    --startDate 'O1tc2TcE' \
    > test.out 2>&1
eval_tap $? 147 'AdminSearchUserV3' test.out

#- 148 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["nR4n6gNF", "5UgjnzwD", "RxnzapiO"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'AdminGetBulkUserByEmailAddressV3' test.out

#- 149 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'T8w8XhV4' \
    > test.out 2>&1
eval_tap $? 149 'AdminGetUserByUserIdV3' test.out

#- 150 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "JHuDeL8v", "country": "RYbIB4CR", "dateOfBirth": "Ao1I9AQE", "displayName": "kh8TEdWe", "languageTag": "8lMd60r1", "userName": "shA9Y0Nb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zSQow9Ve' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminUpdateUserV3' test.out

#- 151 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AbLHgbVr' \
    --activeOnly 'true' \
    --after 'qcuL9xdb' \
    --before '7T0IgyVs' \
    --limit '68' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserBanV3' test.out

#- 152 AdminBanUserV3
# body param: body
echo '{"ban": "XyAwCIXr", "comment": "fD2PmHcI", "endDate": "F1dG59Si", "reason": "HcKJ4T4w", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nUR53xQb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'AdminBanUserV3' test.out

#- 153 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'h2CPMOcH' \
    --namespace $AB_NAMESPACE \
    --userId 'QUKvitW5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminUpdateUserBanV3' test.out

#- 154 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "chNa2aeC", "emailAddress": "wQ6psJWP", "languageTag": "2tYZ22M7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'G1u3ZwVz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminSendVerificationCodeV3' test.out

#- 155 AdminVerifyAccountV3
# body param: body
echo '{"Code": "rdCBVwHN", "ContactType": "1nyN6w5B", "LanguageTag": "dnW7F1WB", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qX9BviI7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminVerifyAccountV3' test.out

#- 156 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'tOFLHDgI' \
    > test.out 2>&1
eval_tap $? 156 'GetUserVerificationCode' test.out

#- 157 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TEkPoDW4' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetUserDeletionStatusV3' test.out

#- 158 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zkSGpBPZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateUserDeletionStatusV3' test.out

#- 159 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "sZ2Pb719", "country": "tIgsJ4dM", "dateOfBirth": "POVmu6Tw", "displayName": "0ijnFVKI", "emailAddress": "IN69eCGH", "password": "4xzkD0fj", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tjTO6Lsn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminUpgradeHeadlessAccountV3' test.out

#- 160 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YH8cJXYz' \
    > test.out 2>&1
eval_tap $? 160 'AdminDeleteUserInformationV3' test.out

#- 161 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'RQorOxfl' \
    --after '0.3297549009132258' \
    --before '0.21775520718571817' \
    --limit '37' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetUserLoginHistoriesV3' test.out

#- 162 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "WMVmIEOF", "newPassword": "8OnyNLwA", "oldPassword": "3gOxEC0P"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YNDGG2fC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminResetPasswordV3' test.out

#- 163 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 79, "Resource": "Supc68im", "SchedAction": 53, "SchedCron": "h1mQ2G5I", "SchedRange": ["rQFRC8ds", "gh93odiS", "0lfK6Q59"]}, {"Action": 31, "Resource": "1E6J3sOl", "SchedAction": 74, "SchedCron": "GGgKrwLm", "SchedRange": ["J9GH1BD6", "Pg3JpitR", "dibJIkuH"]}, {"Action": 99, "Resource": "ffo7uNri", "SchedAction": 9, "SchedCron": "am1SMAzz", "SchedRange": ["vhL6z4CZ", "0tcqLmzU", "S4xALCo4"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bA4pQYjA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'AdminUpdateUserPermissionV3' test.out

#- 164 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 7, "Resource": "xmPVhm6f", "SchedAction": 22, "SchedCron": "QdPvFY1b", "SchedRange": ["aVQdogD8", "dIFLpphV", "nFo2LaVM"]}, {"Action": 6, "Resource": "XqpgTLBF", "SchedAction": 32, "SchedCron": "97cNos2J", "SchedRange": ["gBe9S5Bm", "OhysJZlq", "0fn4IouM"]}, {"Action": 60, "Resource": "SYOvAr10", "SchedAction": 84, "SchedCron": "z1oebm9q", "SchedRange": ["GZl8uzV6", "lnE2jDkU", "6jFCgDSz"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'INxZVvht' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminAddUserPermissionsV3' test.out

#- 165 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 96, "Resource": "pG1LKyCW"}, {"Action": 17, "Resource": "Y2glXJgS"}, {"Action": 63, "Resource": "OWirfp3U"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ksGJ7Yxt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminDeleteUserPermissionBulkV3' test.out

#- 166 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '6' \
    --namespace $AB_NAMESPACE \
    --resource 'lp1OtV9a' \
    --userId 'nnDtbh01' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteUserPermissionV3' test.out

#- 167 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '8w2eHlLn' \
    --after 'eTxSJ8rt' \
    --before 'VUK867MB' \
    --limit '43' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserPlatformAccountsV3' test.out

#- 168 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId '3Y3Ss3ht' \
    > test.out 2>&1
eval_tap $? 168 'AdminGetListJusticePlatformAccounts' test.out

#- 169 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'ZZd0VWE0' \
    --userId 'HxP7itE8' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetUserMapping' test.out

#- 170 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'yFLir7fU' \
    --userId 't68KOBn9' \
    > test.out 2>&1
eval_tap $? 170 'AdminCreateJusticeUser' test.out

#- 171 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "JlUB6eiT", "platformUserId": "n1DvxeMZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '9s9idmeV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminLinkPlatformAccount' test.out

#- 172 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "FSgdaqNf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'iHKkwxb1' \
    --userId 'OrOfH8yq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminPlatformUnlinkV3' test.out

#- 173 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '61Ibp5vr' \
    --userId 'RCnPwISO' \
    --ticket '4cpC8Ew4' \
    > test.out 2>&1
eval_tap $? 173 'AdminPlatformLinkV3' test.out

#- 174 AdminDeleteUserRolesV3
# body param: body
echo '["dJj8vo0n", "LuL5cw8x", "Mg93Df5o"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wrGrgaFS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminDeleteUserRolesV3' test.out

#- 175 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "TfWKL1Qq", "roleId": "ZYTsij4U"}, {"namespace": "duJDiimk", "roleId": "HOVtwI8V"}, {"namespace": "Mxl181a0", "roleId": "CMHWT0Zx"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MqqhFNMQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminSaveUserRoleV3' test.out

#- 176 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'qgsSoaCO' \
    --userId 'Hz6JdtPk' \
    > test.out 2>&1
eval_tap $? 176 'AdminAddUserRoleV3' test.out

#- 177 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'D59W7vQV' \
    --userId 'FSznTXQ8' \
    > test.out 2>&1
eval_tap $? 177 'AdminDeleteUserRoleV3' test.out

#- 178 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "ck0MX4qx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '8uPmGNwK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminUpdateUserStatusV3' test.out

#- 179 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nrPUGs1Z' \
    > test.out 2>&1
eval_tap $? 179 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 180 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "hexQASdQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'PCga8UQO' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminUpdateClientSecretV3' test.out

#- 181 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'tQQUdXbl' \
    --before 'rhHhEx8p' \
    --isWildcard 'true' \
    --limit '74' \
    > test.out 2>&1
eval_tap $? 181 'AdminGetRolesV3' test.out

#- 182 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "managers": [{"displayName": "KbB3Lqxh", "namespace": "YMoqs876", "userId": "vboASpjT"}, {"displayName": "iUpDykBI", "namespace": "gwtkDfpc", "userId": "D7SVVoF5"}, {"displayName": "8vrEZROy", "namespace": "ka9Kgfns", "userId": "TxERlN1b"}], "members": [{"displayName": "5CMw6LjW", "namespace": "3F9jCAZW", "userId": "Qna4iVed"}, {"displayName": "gcQHzMrP", "namespace": "VFGuuqth", "userId": "LSJ0md84"}, {"displayName": "QCzYcu6N", "namespace": "LGowU9SE", "userId": "4A9sZoEt"}], "permissions": [{"action": 29, "resource": "JgmzZ2hI", "schedAction": 8, "schedCron": "RB8mg5jc", "schedRange": ["hhR06LH8", "ykzlriFz", "sz6ypxiG"]}, {"action": 83, "resource": "xiH7iMCF", "schedAction": 35, "schedCron": "3yLBk4Zn", "schedRange": ["j3KFRc3o", "EWJDjMZm", "XBbgSWWP"]}, {"action": 2, "resource": "wqVupDSv", "schedAction": 38, "schedCron": "EP1Vqxrq", "schedRange": ["sS7yzbEw", "exnGIohl", "pUdUr8Sq"]}], "roleName": "s8WnZGq0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'AdminCreateRoleV3' test.out

#- 183 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'f3AWAM9I' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetRoleV3' test.out

#- 184 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'fYxSSXgM' \
    > test.out 2>&1
eval_tap $? 184 'AdminDeleteRoleV3' test.out

#- 185 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "K17HYN57"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'dMpqHBFv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminUpdateRoleV3' test.out

#- 186 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'BK6sRfA4' \
    > test.out 2>&1
eval_tap $? 186 'AdminGetRoleAdminStatusV3' test.out

#- 187 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'ZFVhE7ZD' \
    > test.out 2>&1
eval_tap $? 187 'AdminUpdateAdminRoleStatusV3' test.out

#- 188 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'NrJzveWC' \
    > test.out 2>&1
eval_tap $? 188 'AdminRemoveRoleAdminV3' test.out

#- 189 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'aUvLJVVi' \
    --after 'f8oHE5v1' \
    --before '604LLcHZ' \
    --limit '39' \
    > test.out 2>&1
eval_tap $? 189 'AdminGetRoleManagersV3' test.out

#- 190 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "4aiQ4Ih3", "namespace": "C96TNZ3N", "userId": "tVMiNbQp"}, {"displayName": "J1V3vGBf", "namespace": "vBSnRzux", "userId": "DxC8fStk"}, {"displayName": "H9U6dTOl", "namespace": "hVvjl7qa", "userId": "jwkbrLX3"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'q4jDRFKo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminAddRoleManagersV3' test.out

#- 191 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "XtHjPLoe", "namespace": "o7wyVkNA", "userId": "jav6qkXG"}, {"displayName": "CYUhqYh0", "namespace": "4zFH1lOn", "userId": "ZrhcCCos"}, {"displayName": "Pxmg5ZD5", "namespace": "h5piX9s3", "userId": "gb4emHWA"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'SkBXqbSB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 191 'AdminRemoveRoleManagersV3' test.out

#- 192 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'LSUkeUuA' \
    --after 'aKqETAo6' \
    --before 'cztwGqrp' \
    --limit '64' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetRoleMembersV3' test.out

#- 193 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "0OPi2i17", "namespace": "DadV4ufv", "userId": "khB3ruug"}, {"displayName": "XjxIdskD", "namespace": "vU0BMerM", "userId": "7HsqUAPE"}, {"displayName": "lp9JWegw", "namespace": "oWNRIMof", "userId": "rPAzQ6ja"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'Jk3NL7Bj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminAddRoleMembersV3' test.out

#- 194 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "jDT3iXVX", "namespace": "twTMjDLK", "userId": "6fsRiWdx"}, {"displayName": "k1lHlhFK", "namespace": "MtFMBPqC", "userId": "BlAMLvm5"}, {"displayName": "RR8Rtl7j", "namespace": "DyKumdFK", "userId": "gbO4lK2O"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'bH0BFiVZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminRemoveRoleMembersV3' test.out

#- 195 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 15, "resource": "aCsVgCHO", "schedAction": 65, "schedCron": "9DB6MRSs", "schedRange": ["D3u8n4bp", "b7ntJJDq", "CE5b4CMq"]}, {"action": 64, "resource": "jb6CWELl", "schedAction": 62, "schedCron": "bUbU8NlH", "schedRange": ["Qw4krANa", "pO2HCluA", "jiQrUupR"]}, {"action": 70, "resource": "hpzm0hwh", "schedAction": 53, "schedCron": "03tw6dVI", "schedRange": ["VkqqKQPe", "k6UY9zct", "vSioMjQB"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'sqBtig3F' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminUpdateRolePermissionsV3' test.out

#- 196 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 41, "resource": "ZlEhTJ0X", "schedAction": 72, "schedCron": "liHU8ClO", "schedRange": ["HKqaqjNe", "BYXXQuKg", "2ykGuQkJ"]}, {"action": 63, "resource": "T4uXKfZ4", "schedAction": 38, "schedCron": "53mq5637", "schedRange": ["vva8jyq1", "sJR77MUt", "ezwhxtKN"]}, {"action": 72, "resource": "kZL57aPD", "schedAction": 46, "schedCron": "varObVcz", "schedRange": ["tJDewQXR", "2N2q3h3n", "Z1uyH5MO"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'z35DsQtb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminAddRolePermissionsV3' test.out

#- 197 AdminDeleteRolePermissionsV3
# body param: body
echo '["QuFIupnR", "JVDS15jN", "Q7DE7dg6"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'CgQluMPV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteRolePermissionsV3' test.out

#- 198 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '82' \
    --resource 'h70qhgYF' \
    --roleId 'CEXC9wDC' \
    > test.out 2>&1
eval_tap $? 198 'AdminDeleteRolePermissionV3' test.out

#- 199 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 199 'AdminGetMyUserV3' test.out

#- 200 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'KTBD8WQk' \
    --extend_exp 'false' \
    --redirect_uri 'gMs2U0eL' \
    --password 'OCSmT8VG' \
    --request_id 'dUsvawsf' \
    --user_name 'BWPaokuF' \
    > test.out 2>&1
eval_tap $? 200 'UserAuthenticationV3' test.out

#- 201 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'tfHoxZv2' \
    --linkingToken '790eslvy' \
    --password 'aBLyCHfu' \
    --username '0rcpGtA8' \
    > test.out 2>&1
eval_tap $? 201 'AuthenticationWithPlatformLinkV3' test.out

#- 202 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --extend_exp 'false' \
    --linkingToken 'XVFBWXbN' \
    > test.out 2>&1
eval_tap $? 202 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 203 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 203 'GetCountryLocationV3' test.out

#- 204 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 204 'Logout' test.out

#- 205 RequestGameTokenCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenCodeResponseV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'PhQ90EhK' \
    > test.out 2>&1
eval_tap $? 205 'RequestGameTokenCodeResponseV3' test.out

#- 206 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'x4uG7ay4' \
    --userId '1GZ7W2ZD' \
    > test.out 2>&1
eval_tap $? 206 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 207 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IhrCXGFy' \
    > test.out 2>&1
eval_tap $? 207 'RevokeUserV3' test.out

#- 208 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'aST6AOmi' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'false' \
    --redirectUri 'IYzXR98s' \
    --scope 'hTatb8g4' \
    --state '5ACdcaNw' \
    --targetAuthPage 'IUiHGbfA' \
    --clientId 'f90VDpnR' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 208 'AuthorizeV3' test.out

#- 209 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'JEb5bpJK' \
    > test.out 2>&1
eval_tap $? 209 'TokenIntrospectionV3' test.out

#- 210 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 210 'GetJWKSV3' test.out

#- 211 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'IrsGxJcP' \
    --mfaToken 'Vg9tlsEG' \
    > test.out 2>&1
eval_tap $? 211 'Change2faMethod' test.out

#- 212 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code '3hqSjR5h' \
    --factor 'hVZ55gt6' \
    --mfaToken 'nTFJzl1O' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 212 'Verify2faCode' test.out

#- 213 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'EH039pIN' \
    --userId 'T3SlfDHa' \
    > test.out 2>&1
eval_tap $? 213 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 214 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'ItglF3BD' \
    --clientId 'tcaEzCi5' \
    --redirectUri 'MNWAT9km' \
    --requestId 'iWKlc5Rb' \
    > test.out 2>&1
eval_tap $? 214 'AuthCodeRequestV3' test.out

#- 215 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'Dc1hAACW' \
    --client_id 'rPOr2I41' \
    --createHeadless 'false' \
    --device_id 'EzJMZhy2' \
    --macAddress 'xEr1Zkin' \
    --platform_token 'yRwLRx4b' \
    > test.out 2>&1
eval_tap $? 215 'PlatformTokenGrantV3' test.out

#- 216 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 216 'GetRevocationListV3' test.out

#- 217 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'vMdNb5SP' \
    > test.out 2>&1
eval_tap $? 217 'TokenRevocationV3' test.out

#- 218 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --client_id 'M5mfpPaP' \
    --code 'E7fkBIj2' \
    --code_verifier 'HSaZjfgi' \
    --extend_exp 'true' \
    --password 'q8TCKypC' \
    --redirect_uri 'QHvb9e0a' \
    --refresh_token 'rd65BTK0' \
    --username 'knFI3Fp4' \
    --grant_type 'client_credentials' \
    > test.out 2>&1
eval_tap $? 218 'TokenGrantV3' test.out

#- 219 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'muEsHLcI' \
    > test.out 2>&1
eval_tap $? 219 'VerifyTokenV3' test.out

#- 220 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'Zh6dDFXD' \
    --code 'xH4npvhp' \
    --error 'FuycBXo6' \
    --openidAssocHandle 'AJs8yBCN' \
    --openidClaimedId '97gTmbsd' \
    --openidIdentity 'gnQRjemN' \
    --openidMode 'G3kuMqv9' \
    --openidNs 'PFwEcUS1' \
    --openidOpEndpoint 'QCuh4w7f' \
    --openidResponseNonce 'PIMqm3VT' \
    --openidReturnTo 'D1g2AIg7' \
    --openidSig 'v1vlbU0x' \
    --openidSigned 'RSjxt4A3' \
    --state 'GngXWCIP' \
    > test.out 2>&1
eval_tap $? 220 'PlatformAuthenticationV3' test.out

#- 221 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode 'HsqZcoBd' \
    > test.out 2>&1
eval_tap $? 221 'PublicGetInputValidations' test.out

#- 222 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'UdERkLVn' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 222 'PublicGetCountryAgeRestrictionV3' test.out

#- 223 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 223 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 224 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'OUTWpmqV' \
    > test.out 2>&1
eval_tap $? 224 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 225 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["GD3jscWI", "JOJTqVdu", "xxbEkyPE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId '93QkmLYx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 225 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 226 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'kRjJf4xU' \
    --platformUserId 'Tb3vhjAb' \
    > test.out 2>&1
eval_tap $? 226 'PublicGetUserByPlatformUserIDV3' test.out

#- 227 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId '0HDdWbDi' \
    > test.out 2>&1
eval_tap $? 227 'PublicGetAsyncStatus' test.out

#- 228 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'IOw2xFvX' \
    --limit '37' \
    --offset '70' \
    --query 'W7Zh8D4L' \
    > test.out 2>&1
eval_tap $? 228 'PublicSearchUserV3' test.out

#- 229 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "p99LZoNm", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "3bUterOS", "policyId": "URPousDG", "policyVersionId": "Wewl0MUv"}, {"isAccepted": true, "localizedPolicyVersionId": "9EjDkLd7", "policyId": "LT3Ae8jV", "policyVersionId": "4q60d7fe"}, {"isAccepted": false, "localizedPolicyVersionId": "oBekOCER", "policyId": "az2c7ZKJ", "policyVersionId": "dGYwaiq0"}], "authType": "i5IwVZyg", "code": "JQTcaZ8o", "country": "5nwh6j7Q", "dateOfBirth": "yOmGoFxh", "displayName": "ayp2XuGj", "emailAddress": "nJ9Y97Sj", "password": "spMQZUSw", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'PublicCreateUserV3' test.out

#- 230 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'rngi7T2V' \
    --query 'DDagl1d8' \
    > test.out 2>&1
eval_tap $? 230 'CheckUserAvailability' test.out

#- 231 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["b8eOaKEu", "MhK03sg9", "u48bltDC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'PublicBulkGetUsers' test.out

#- 232 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "xHNx1KDy", "languageTag": "kOLNqUNS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'PublicSendRegistrationCode' test.out

#- 233 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "GsKnvdsO", "emailAddress": "6HyJG4WO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'PublicVerifyRegistrationCode' test.out

#- 234 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "bVFIyK6o", "languageTag": "gz5ylBjx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'PublicForgotPasswordV3' test.out

#- 235 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'gnXETURR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 235 'GetAdminInvitationV3' test.out

#- 236 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "tonyPrVB", "policyId": "hDDwCYf5", "policyVersionId": "Qw1fk94Z"}, {"isAccepted": true, "localizedPolicyVersionId": "vkfIvCAX", "policyId": "eq0K6pUl", "policyVersionId": "FQXuueSs"}, {"isAccepted": false, "localizedPolicyVersionId": "DVWpocQd", "policyId": "XqOoOws7", "policyVersionId": "Ebiw2fDM"}], "authType": "EMAILPASSWD", "country": "I9dCaVll", "dateOfBirth": "z8TkSZkZ", "displayName": "QiZDQdFY", "password": "k4BK2qy5", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'VBmSAzWe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'CreateUserFromInvitationV3' test.out

#- 237 UpdateUserV3
# body param: body
echo '{"avatarUrl": "Mnm6Txmx", "country": "8dK4ZUcZ", "dateOfBirth": "ceD18GiO", "displayName": "IEYKq5xv", "languageTag": "s8jl8dol", "userName": "cRykDN8x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'UpdateUserV3' test.out

#- 238 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "b68BZBjo", "country": "EFNISegt", "dateOfBirth": "FpyKHK2x", "displayName": "0GmgI7B6", "languageTag": "Vsbk3PfH", "userName": "Gmnoo3Bl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'PublicPartialUpdateUserV3' test.out

#- 239 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "0OFkJS7C", "emailAddress": "XiMrk0h4", "languageTag": "bUqTmTfz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'PublicSendVerificationCodeV3' test.out

#- 240 PublicUserVerificationV3
# body param: body
echo '{"code": "WemvAz6l", "contactType": "R4kdEJl1", "languageTag": "FEqioK4P", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'PublicUserVerificationV3' test.out

#- 241 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "7NHO8DUd", "country": "aXBE4n9p", "dateOfBirth": "E1VGgMCq", "displayName": "f1CUw9Fu", "emailAddress": "tQDcC28z", "password": "W9dY6gIr", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'PublicUpgradeHeadlessAccountV3' test.out

#- 242 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "6dbMfwnp", "password": "zaEtlbZX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'PublicVerifyHeadlessAccountV3' test.out

#- 243 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "13Rjik2e", "newPassword": "GQXYV5DU", "oldPassword": "4ZFiDNWw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'PublicUpdatePasswordV3' test.out

#- 244 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'ix1cFIE8' \
    > test.out 2>&1
eval_tap $? 244 'PublicCreateJusticeUser' test.out

#- 245 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '03MW2HKX' \
    --redirectUri '6hLSOYvT' \
    --ticket 'VsBEnTHd' \
    > test.out 2>&1
eval_tap $? 245 'PublicPlatformLinkV3' test.out

#- 246 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "k6q3kzsz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'A4WsonB1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'PublicPlatformUnlinkV3' test.out

#- 247 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'oj8xCfWY' \
    > test.out 2>&1
eval_tap $? 247 'PublicPlatformUnlinkAllV3' test.out

#- 248 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'b9elDhyb' \
    --ticket 'CV7E0JJX' \
    > test.out 2>&1
eval_tap $? 248 'PublicForcePlatformLinkV3' test.out

#- 249 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'iQ5XBKS6' \
    --clientId 'jXAzXYi5' \
    --redirectUri 'HOUNEze6' \
    > test.out 2>&1
eval_tap $? 249 'PublicWebLinkPlatform' test.out

#- 250 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'd001kRpY' \
    --state 'RxDKv7jc' \
    > test.out 2>&1
eval_tap $? 250 'PublicWebLinkPlatformEstablish' test.out

#- 251 ResetPasswordV3
# body param: body
echo '{"code": "i43MrCru", "emailAddress": "fKcxuhb3", "newPassword": "LcDLCAEg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'ResetPasswordV3' test.out

#- 252 PublicGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'FgNaa6r7' \
    > test.out 2>&1
eval_tap $? 252 'PublicGetUserByUserIdV3' test.out

#- 253 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId '9zuDgh9K' \
    --activeOnly 'true' \
    --after 'RmEGsCtG' \
    --before 'lmLd2Bye' \
    --limit '60' \
    > test.out 2>&1
eval_tap $? 253 'PublicGetUserBanHistoryV3' test.out

#- 254 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '2vqs5Mi4' \
    > test.out 2>&1
eval_tap $? 254 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 255 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'CFrxhkYZ' \
    > test.out 2>&1
eval_tap $? 255 'PublicGetUserInformationV3' test.out

#- 256 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'leIRJl9y' \
    --after '0.6466511261661452' \
    --before '0.7265378808089625' \
    --limit '63' \
    > test.out 2>&1
eval_tap $? 256 'PublicGetUserLoginHistoriesV3' test.out

#- 257 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pYtlPT0a' \
    --after '5ZV0Jr1J' \
    --before 'bDrhr7kc' \
    --limit '13' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetUserPlatformAccountsV3' test.out

#- 258 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'osW05vnm' \
    > test.out 2>&1
eval_tap $? 258 'PublicListJusticePlatformAccountsV3' test.out

#- 259 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "daGz8dSC", "platformUserId": "ielKkuhn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'AYNzqTvY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'PublicLinkPlatformAccount' test.out

#- 260 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["jtqP6KMT", "D4KtKBZ2", "aeTYhyRg"], "requestId": "bGKdDEY4"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'rWuueajp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'PublicForceLinkPlatformWithProgression' test.out

#- 261 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'in9eM3Lu' \
    > test.out 2>&1
eval_tap $? 261 'PublicGetPublisherUserV3' test.out

#- 262 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '9GIOCH8w' \
    --password 'KZxZq5z3' \
    > test.out 2>&1
eval_tap $? 262 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 263 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'F5qifhrk' \
    --before 'QIlwK1pK' \
    --isWildcard 'true' \
    --limit '35' \
    > test.out 2>&1
eval_tap $? 263 'PublicGetRolesV3' test.out

#- 264 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId '9E9le0em' \
    > test.out 2>&1
eval_tap $? 264 'PublicGetRoleV3' test.out

#- 265 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 265 'PublicGetMyUserV3' test.out

#- 266 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "ghryYrfQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'PublicSendVerificationLinkV3' test.out

#- 267 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'A99WAzCw' \
    > test.out 2>&1
eval_tap $? 267 'PublicVerifyUserByLinkV3' test.out

#- 268 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'y58V9evm' \
    --code 'zm1EqAEr' \
    --error 'LkzJLjWk' \
    --state 'vj5lsN1m' \
    > test.out 2>&1
eval_tap $? 268 'PlatformAuthenticateSAMLV3Handler' test.out

#- 269 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'og6lPp9c' \
    --payload 'XqCdPUHp' \
    > test.out 2>&1
eval_tap $? 269 'LoginSSOClient' test.out

#- 270 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'nc7tpwdk' \
    > test.out 2>&1
eval_tap $? 270 'LogoutSSOClient' test.out

#- 271 RequestGameTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenResponseV3 \
    --code 'OqCcEpGE' \
    > test.out 2>&1
eval_tap $? 271 'RequestGameTokenResponseV3' test.out

#- 272 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'fEb5kW0x' \
    > test.out 2>&1
eval_tap $? 272 'AdminGetDevicesByUserV4' test.out

#- 273 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType '3liMciz6' \
    --endDate 'DDLp4Gd5' \
    --limit '99' \
    --offset '95' \
    --startDate 'Z8ZTaVxl' \
    > test.out 2>&1
eval_tap $? 273 'AdminGetBannedDevicesV4' test.out

#- 274 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'mj7KjR0e' \
    > test.out 2>&1
eval_tap $? 274 'AdminGetUserDeviceBansV4' test.out

#- 275 AdminBanDeviceV4
# body param: body
echo '{"comment": "80rJkMxd", "deviceId": "O7F93L9a", "deviceType": "Ggzuy46L", "enabled": false, "endDate": "klXqZVAY", "ext": {"taPvWwkX": {}, "E8vlqWmD": {}, "90E7990o": {}}, "reason": "S5t8l1HT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'AdminBanDeviceV4' test.out

#- 276 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'U7pg0EOi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 276 'AdminGetDeviceBanV4' test.out

#- 277 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'jRZZzEnQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'AdminUpdateDeviceBanV4' test.out

#- 278 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'WH9zl80F' \
    --startDate 'lpPXO4cx' \
    --deviceType 'awSMP91u' \
    > test.out 2>&1
eval_tap $? 278 'AdminGenerateReportV4' test.out

#- 279 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 279 'AdminGetDeviceTypesV4' test.out

#- 280 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'DKkBAv9r' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 280 'AdminGetDeviceBansV4' test.out

#- 281 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'ffIAcsvi' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 281 'AdminDecryptDeviceV4' test.out

#- 282 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'LXkc58tF' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 282 'AdminUnbanDeviceV4' test.out

#- 283 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'mqhnjGMR' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 283 'AdminGetUsersByDeviceV4' test.out

#- 284 AdminCreateTestUsersV4
# body param: body
echo '{"count": 56}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'AdminCreateTestUsersV4' test.out

#- 285 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["uNGHOKrS", "xxW8G3J0", "3QR8COCu"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'AdminBulkCheckValidUserIDV4' test.out

#- 286 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "noqkIfVm", "country": "SNSFSwcg", "dateOfBirth": "aP3kO3rd", "displayName": "Okh8nOwl", "languageTag": "RKDuN3tl", "userName": "EWJQ7a2y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'aoLNSDKB' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'AdminUpdateUserV4' test.out

#- 287 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "bR5UhnPc", "emailAddress": "bWgBZorO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'f7mf2byZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'AdminUpdateUserEmailAddressV4' test.out

#- 288 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'ADieBmm5' \
    > test.out 2>&1
eval_tap $? 288 'AdminDisableUserMFAV4' test.out

#- 289 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Ul8BV3gz' \
    > test.out 2>&1
eval_tap $? 289 'AdminListUserRolesV4' test.out

#- 290 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["Whj47Wo7", "4j53nN4Y", "bAKPZTxX"], "roleId": "TE7EyT2D"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'bsxrnYnI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 290 'AdminUpdateUserRoleV4' test.out

#- 291 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["OGE1rmlb", "SsDWqML9", "XwMb3sGs"], "roleId": "7WSQ0EOc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'EoM37PvG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'AdminAddUserRoleV4' test.out

#- 292 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["DO2g25QG", "oP20pd90", "FhIKIezn"], "roleId": "Fd2tZAY5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'swU9SRds' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AdminRemoveUserRoleV4' test.out

#- 293 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'false' \
    --limit '34' \
    --offset '51' \
    > test.out 2>&1
eval_tap $? 293 'AdminGetRolesV4' test.out

#- 294 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "CfkGM0ez"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'AdminCreateRoleV4' test.out

#- 295 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'NC3iVnEI' \
    > test.out 2>&1
eval_tap $? 295 'AdminGetRoleV4' test.out

#- 296 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId '7IEYMXkT' \
    > test.out 2>&1
eval_tap $? 296 'AdminDeleteRoleV4' test.out

#- 297 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": true, "roleName": "Tzx4nCAf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'eAvDBZ6A' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'AdminUpdateRoleV4' test.out

#- 298 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 88, "resource": "QQ1zZEkc", "schedAction": 66, "schedCron": "TqlByRgW", "schedRange": ["mzRNFe96", "w2ygBvaY", "LRcnns3n"]}, {"action": 70, "resource": "aK8XbFnu", "schedAction": 4, "schedCron": "i5VKijPX", "schedRange": ["EhXXjpND", "mXSwKHnO", "zkbcEKjt"]}, {"action": 9, "resource": "nW4KBYVS", "schedAction": 52, "schedCron": "dbuuG02C", "schedRange": ["ngixbWsw", "F5Bkvizd", "2pQ3mstV"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'XINj8nEP' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'AdminUpdateRolePermissionsV4' test.out

#- 299 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 34, "resource": "jO2hnwXA", "schedAction": 30, "schedCron": "h0sUoDbQ", "schedRange": ["hV0JiuAt", "Y7yV5gDH", "8k9z1y6b"]}, {"action": 0, "resource": "dgEah7bn", "schedAction": 56, "schedCron": "HqiUKJrv", "schedRange": ["XGOSStj7", "VNujUGBJ", "5UNJ8SVB"]}, {"action": 95, "resource": "NhHadDIk", "schedAction": 75, "schedCron": "3XfRHkdg", "schedRange": ["E27hoG6F", "cdd9VLPM", "zf7LJBzn"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'woecL0nI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'AdminAddRolePermissionsV4' test.out

#- 300 AdminDeleteRolePermissionsV4
# body param: body
echo '["3VSj1kwj", "FOnFWZbM", "IozGb2D2"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'cNPNwzli' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminDeleteRolePermissionsV4' test.out

#- 301 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'sClbjvzB' \
    --after 'vasDRgAl' \
    --before '4Gf23YOv' \
    --limit '58' \
    > test.out 2>&1
eval_tap $? 301 'AdminListAssignedUsersV4' test.out

#- 302 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["H2z3cbf3", "WqstMpkY", "wcRPWf8B"], "namespace": "WpsQeXZ8", "userId": "1MtQa7AT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'RybLoLlt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'AdminAssignUserToRoleV4' test.out

#- 303 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "y0QRTJJE", "userId": "IdqDXQxx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'jv8XRwzN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'AdminRevokeUserFromRoleV4' test.out

#- 304 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "2FVwXZk3", "country": "pIKoFcpn", "dateOfBirth": "KFYPqpDn", "displayName": "WbeV3tH7", "languageTag": "qnr8dePv", "userName": "PqTWk6Lc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'AdminUpdateMyUserV4' test.out

#- 305 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 305 'AdminDisableMyAuthenticatorV4' test.out

#- 306 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'azPqmIbM' \
    > test.out 2>&1
eval_tap $? 306 'AdminEnableMyAuthenticatorV4' test.out

#- 307 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 307 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 308 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 308 'AdminGetMyBackupCodesV4' test.out

#- 309 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 309 'AdminGenerateMyBackupCodesV4' test.out

#- 310 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 310 'AdminDisableMyBackupCodesV4' test.out

#- 311 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 311 'AdminDownloadMyBackupCodesV4' test.out

#- 312 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 312 'AdminEnableMyBackupCodesV4' test.out

#- 313 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 313 'AdminGetMyEnabledFactorsV4' test.out

#- 314 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'uuV3rGdF' \
    > test.out 2>&1
eval_tap $? 314 'AdminMakeFactorMyDefaultV4' test.out

#- 315 AdminInviteUserV4
# body param: body
echo '{"assignedNamespaces": ["p9NpTlKS", "YYyrUUJs", "IKUyS82H"], "emailAddresses": ["CL3sc9EO", "lizoUYYl", "VCsoXKKO"], "isAdmin": true, "roleId": "pDtzSn4S"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'AdminInviteUserV4' test.out

#- 316 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "bsDOCjGc", "policyId": "vOhRwfjO", "policyVersionId": "OL43rrKV"}, {"isAccepted": true, "localizedPolicyVersionId": "rH283Tk2", "policyId": "UlrG896d", "policyVersionId": "6xSj41z5"}, {"isAccepted": false, "localizedPolicyVersionId": "XvppYOWu", "policyId": "imR2pePB", "policyVersionId": "ZYjWuslB"}], "authType": "EMAILPASSWD", "country": "PO6bq2q5", "dateOfBirth": "h3emlemZ", "displayName": "tvaKVCwc", "emailAddress": "akCP4Y0i", "password": "cdld8anw", "passwordMD5Sum": "zczBnXia", "username": "IbPqQGFt", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 316 'PublicCreateTestUserV4' test.out

#- 317 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "8OoiGJEh", "policyId": "0KUf4hDJ", "policyVersionId": "Oq2hFSpp"}, {"isAccepted": true, "localizedPolicyVersionId": "9nt8Vn8w", "policyId": "ZwVS5XVP", "policyVersionId": "mxHK19BD"}, {"isAccepted": true, "localizedPolicyVersionId": "XESfQOHY", "policyId": "ZOxyy67n", "policyVersionId": "mx8R6ZLr"}], "authType": "EMAILPASSWD", "code": "oyueDZkK", "country": "DG7JBfb6", "dateOfBirth": "a8ptYmY1", "displayName": "UyVO2cxh", "emailAddress": "NROKMPj6", "password": "UVDR9GAL", "passwordMD5Sum": "DwgsMIi6", "reachMinimumAge": false, "username": "CYjOb4dl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 317 'PublicCreateUserV4' test.out

#- 318 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "wTB8OmDL", "policyId": "lF7olteb", "policyVersionId": "3fSCvlMl"}, {"isAccepted": false, "localizedPolicyVersionId": "XNlZwlg3", "policyId": "mc5aItgi", "policyVersionId": "09Nornug"}, {"isAccepted": false, "localizedPolicyVersionId": "UneH7C1l", "policyId": "j97a6ujV", "policyVersionId": "LXCBl1WR"}], "authType": "EMAILPASSWD", "country": "PjoeLI8k", "dateOfBirth": "71f0UwtG", "displayName": "p1McFqHU", "password": "Lo6pidzo", "reachMinimumAge": false, "username": "ble2Wkql"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'Svl2UyvQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'CreateUserFromInvitationV4' test.out

#- 319 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "ummmDPS3", "country": "JgiaU1vD", "dateOfBirth": "7aCdkCGw", "displayName": "GYXMQZvn", "languageTag": "tIT3acLb", "userName": "CIxNuq6C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'PublicUpdateUserV4' test.out

#- 320 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "d0aetkpT", "emailAddress": "3DczebWX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'PublicUpdateUserEmailAddressV4' test.out

#- 321 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "2NrU8PFg", "country": "VqJSl831", "dateOfBirth": "lBnOfsqI", "displayName": "3cfxcsNf", "emailAddress": "61cjQpn3", "password": "i7T2gbyG", "reachMinimumAge": true, "username": "QQovw4sc", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 322 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "APtEstBE", "password": "ij02fhIv", "username": "BUvpyNAX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicUpgradeHeadlessAccountV4' test.out

#- 323 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 323 'PublicDisableMyAuthenticatorV4' test.out

#- 324 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'lKHxOJjf' \
    > test.out 2>&1
eval_tap $? 324 'PublicEnableMyAuthenticatorV4' test.out

#- 325 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 325 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 326 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 326 'PublicGetMyBackupCodesV4' test.out

#- 327 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 327 'PublicGenerateMyBackupCodesV4' test.out

#- 328 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 328 'PublicDisableMyBackupCodesV4' test.out

#- 329 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 329 'PublicDownloadMyBackupCodesV4' test.out

#- 330 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 330 'PublicEnableMyBackupCodesV4' test.out

#- 331 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'RBhfHO9o' \
    > test.out 2>&1
eval_tap $? 331 'PublicRemoveTrustedDeviceV4' test.out

#- 332 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 332 'PublicGetMyEnabledFactorsV4' test.out

#- 333 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'sBSoJ3Kh' \
    > test.out 2>&1
eval_tap $? 333 'PublicMakeFactorMyDefaultV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE