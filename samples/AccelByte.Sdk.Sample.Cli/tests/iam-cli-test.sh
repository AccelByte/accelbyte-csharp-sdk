#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..347"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "AxPiza7q", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "blockedWord": ["vUXSUOcl", "xg7grLMa", "U9pZinuM"], "description": [{"language": "tfd8bHyh", "message": ["X8OBEaPs", "xswxsFVE", "GVXMfXNj"]}, {"language": "xC0BN4im", "message": ["OTDIHlNp", "4KXcDSd1", "66nIq58j"]}, {"language": "hoIOULQm", "message": ["pBkLApw3", "em1koAe6", "aqdtgAwl"]}], "isCustomRegex": true, "letterCase": "wMG7NOsC", "maxLength": 27, "maxRepeatingAlphaNum": 0, "maxRepeatingSpecialCharacter": 84, "minCharType": 48, "minLength": 24, "regex": "pbTv5qzA", "specialCharacterLocation": "6yDR3a8x", "specialCharacters": ["NRfKJqVH", "QhMwFuDW", "7282Bull"]}}, {"field": "ycXYK4se", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "blockedWord": ["aCNACWYD", "okiuLOqy", "AmHGoTHP"], "description": [{"language": "fZIG4atF", "message": ["7wVZzdCf", "jnlQFOV1", "tntRSigU"]}, {"language": "3dcormtu", "message": ["SbJkXJMa", "kvqljTy1", "i3HBT7nz"]}, {"language": "bOtmvQAz", "message": ["CeVLIcXZ", "D8I7rwqc", "6cflY1Uj"]}], "isCustomRegex": false, "letterCase": "FygmJ512", "maxLength": 16, "maxRepeatingAlphaNum": 39, "maxRepeatingSpecialCharacter": 25, "minCharType": 92, "minLength": 3, "regex": "BIULjiUF", "specialCharacterLocation": "rhaH5xPp", "specialCharacters": ["p2VkQTsJ", "sqOjsuxo", "OtddMkDr"]}}, {"field": "gzPnTDIL", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "blockedWord": ["elz9253M", "DiY6C3nX", "GxJ827AH"], "description": [{"language": "pa0m5Zb2", "message": ["OLZASS5q", "kIVY7n4U", "nq5NFfEB"]}, {"language": "LeYwmNLZ", "message": ["kXprRTqe", "FyXFGeBG", "qQ5w29kV"]}, {"language": "mc33kB5A", "message": ["YZ3cHS4P", "0jCGKksc", "FlQhOWan"]}], "isCustomRegex": false, "letterCase": "YzAcWtLI", "maxLength": 63, "maxRepeatingAlphaNum": 54, "maxRepeatingSpecialCharacter": 52, "minCharType": 59, "minLength": 49, "regex": "d8Nu8NTA", "specialCharacterLocation": "0UsyMh8K", "specialCharacters": ["B6Pc8Ntg", "4N5E7Xq0", "dYjzpDZk"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field '9rAqMZtD' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'Mompvrgn' \
    --before '1DcGivzl' \
    --limit '94' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 32, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 72}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'ZwC85Wg3' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'xKa9C4Ly' \
    --limit '88' \
    --offset '62' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "4l12DZGU", "comment": "3cXPJJDa", "endDate": "7UEmCHJd", "reason": "Uk3ALNtE", "skipNotif": true, "userIds": ["IfWqmkzY", "L2FGj4oA", "jh5KoxQU"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "tgJ0CsNO", "userId": "KSnAERiT"}, {"banId": "TtBjCmhm", "userId": "W9uP6frd"}, {"banId": "09PgxwgV", "userId": "0xeGCthJ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'KP9tWHEF' \
    --clientName '1JlXiQZA' \
    --clientType 'Ah5DNxSA' \
    --limit '45' \
    --offset '73' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["9iEgUpEM", "k8E2gTr6", "in5FOAzu"], "baseUri": "6qpOJOGh", "clientId": "jO3MIVYK", "clientName": "9zdr9G5o", "clientPermissions": [{"action": 20, "resource": "2ymKld6U", "schedAction": 51, "schedCron": "IVQ6gaMp", "schedRange": ["qFot7jfv", "w5aFH3PQ", "o1xob3LN"]}, {"action": 88, "resource": "sv8G4yjx", "schedAction": 56, "schedCron": "yrUP79Tr", "schedRange": ["2goXk5pV", "c1h3mRI9", "iuHSJpmL"]}, {"action": 44, "resource": "3BbTY4QP", "schedAction": 68, "schedCron": "Z7DPD15B", "schedRange": ["cHYV7Glp", "KajGvSXm", "LQg0elD9"]}], "clientPlatform": "JyArJdOx", "deletable": true, "description": "Rp8hK3Dq", "namespace": "JFb1hpNa", "oauthAccessTokenExpiration": 98, "oauthAccessTokenExpirationTimeUnit": "WLIvBVgR", "oauthClientType": "kbvhhX4T", "oauthRefreshTokenExpiration": 35, "oauthRefreshTokenExpirationTimeUnit": "9hxbR9Wk", "parentNamespace": "gxW6wA5z", "redirectUri": "6TNWkgTu", "scopes": ["yk0FSODH", "VT9VZnxL", "CyTLNAmo"], "secret": "emFBEtN6", "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'uPBORNAM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'r5vfDkOe' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["UGciNjfh", "ZTEOCEIw", "mnU4FBVZ"], "baseUri": "YbLkR3Sy", "clientName": "eVYUA1z1", "clientPermissions": [{"action": 38, "resource": "eQWj7SXC", "schedAction": 6, "schedCron": "xvW29J0u", "schedRange": ["BeyV6y8Q", "TUGqk6nd", "vXeOeBaN"]}, {"action": 97, "resource": "6XF5PJkV", "schedAction": 9, "schedCron": "uNuX7xmz", "schedRange": ["e6pIq3Iw", "jzBlIPt1", "tZfki0v0"]}, {"action": 46, "resource": "x9c2IHrM", "schedAction": 64, "schedCron": "FG2afLYD", "schedRange": ["ZnOT0WMx", "n85ZijXf", "ZkG1WIzW"]}], "clientPlatform": "L9pCsMZR", "deletable": false, "description": "FklaMEei", "namespace": "B9vX7ZJN", "oauthAccessTokenExpiration": 31, "oauthAccessTokenExpirationTimeUnit": "aXW0nyf6", "oauthRefreshTokenExpiration": 48, "oauthRefreshTokenExpirationTimeUnit": "1mDpA5i6", "redirectUri": "CdYdvIZr", "scopes": ["ggP9RpfX", "fsxDTE8Z", "T2v7AcZJ"], "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'DMzwtpo8' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 82, "resource": "a2w7MTts"}, {"action": 89, "resource": "SGNrflme"}, {"action": 7, "resource": "smyQkBy8"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId '84NO2g0E' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 93, "resource": "fExmLepW"}, {"action": 23, "resource": "QohSCIaQ"}, {"action": 95, "resource": "blyM89zR"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'n5o5oR6I' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '54' \
    --clientId 'aM8YjE0a' \
    --namespace $AB_NAMESPACE \
    --resource 'nahZxJ7S' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 129 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 130 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '28' \
    --offset '43' \
    > test.out 2>&1
eval_tap $? 130 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 131 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Yv5yEJho' \
    > test.out 2>&1
eval_tap $? 131 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 132 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "CRTF7x8n", "AWSCognitoRegion": "14hhSJDa", "AWSCognitoUserPool": "8Dbxxunp", "AllowedClients": ["oFlBXpwV", "QGSYwWUp", "oC2vaMyn"], "AppId": "oKy9dP7X", "AuthorizationEndpoint": "JyUPp4Y5", "ClientId": "qtZJkjWP", "Environment": "kYXI3Pdc", "FederationMetadataURL": "VWl5DOwM", "GenericOauthFlow": true, "IsActive": true, "Issuer": "To914J71", "JWKSEndpoint": "6kLydLkg", "KeyID": "pRn7D2ob", "NetflixCertificates": {"encryptedPrivateKey": "aiKQJhes", "encryptedPrivateKeyName": "ULkvs9g3", "publicCertificate": "s9E839Sr", "publicCertificateName": "RtrPFefQ", "rootCertificate": "AUXToGov", "rootCertificateName": "R53nZpjG"}, "OrganizationId": "uQ0F7VBZ", "PlatformName": "J1rPsjCM", "RedirectUri": "vnLPbOpb", "RegisteredDomains": [{"affectedClientIDs": ["3KbDcnU0", "qrxxEXaJ", "6Z68KmT6"], "domain": "nRf3XcfY", "namespaces": ["pYuBzn7Y", "nxzfq4jh", "WkvVsH49"], "roleId": "Z92uY0bj"}, {"affectedClientIDs": ["NpWDgG59", "ORxmPOAG", "LWUGKFQe"], "domain": "dmglKhwU", "namespaces": ["EvACvgnA", "BihnqTLz", "1jGrZGi5"], "roleId": "gJZkMMVR"}, {"affectedClientIDs": ["JETlMnoL", "GnFQZrfD", "sVzzXtJM"], "domain": "oPxVy19h", "namespaces": ["wPAMoKBr", "oTJldHtl", "DyOXcQMw"], "roleId": "mP63XT1N"}], "Secret": "gSBruSE3", "TeamID": "6ins6Puz", "TokenAuthenticationType": "N9cw1ckx", "TokenClaimsMapping": {"OHrzGSR4": "uF4uE92m", "RVyhGYZv": "23gTMymA", "6vUKGzgc": "HHcAucS0"}, "TokenEndpoint": "8nLTk5GD", "scopes": ["5UQmWYRb", "AN2R9jIY", "dc4Lcqvc"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'JK1MbXic' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 133 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '97B3WSx0' \
    > test.out 2>&1
eval_tap $? 133 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 134 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "P0KZHERY", "AWSCognitoRegion": "6RPCKkt2", "AWSCognitoUserPool": "thfjwoxF", "AllowedClients": ["SxsIcjxy", "qA1T7MTF", "BcAB8qig"], "AppId": "9ODUuSvY", "AuthorizationEndpoint": "2MYQ5uNf", "ClientId": "RZHcuSOi", "Environment": "8rxMv408", "FederationMetadataURL": "weHd0M3P", "GenericOauthFlow": true, "IsActive": false, "Issuer": "KN2TdCuP", "JWKSEndpoint": "MF9MYLTA", "KeyID": "ltlnLhTm", "NetflixCertificates": {"encryptedPrivateKey": "JQ5LxNGa", "encryptedPrivateKeyName": "52k0MYPR", "publicCertificate": "VoOyM5Ik", "publicCertificateName": "sSo2HPb7", "rootCertificate": "xEcJg0bS", "rootCertificateName": "Iwu8Kd35"}, "OrganizationId": "ZkApmhyC", "PlatformName": "xv9Ip7aB", "RedirectUri": "CclkEqTA", "RegisteredDomains": [{"affectedClientIDs": ["jCRcpmB1", "kSK3lq62", "YiR6WDJ0"], "domain": "tE9DZjRL", "namespaces": ["d8nhraaS", "EJBXGrGI", "QCq4noKX"], "roleId": "18GIpzGu"}, {"affectedClientIDs": ["gWwcB3AN", "7niliSsw", "6Iu85lzH"], "domain": "JigVm5t2", "namespaces": ["bTL5xYUa", "QUe0nWif", "IKVBYy6s"], "roleId": "ZLdz5fNy"}, {"affectedClientIDs": ["O1fyeXOw", "XzILy7TV", "a2JCr7Ms"], "domain": "vI8T2rR9", "namespaces": ["XxZKOVsJ", "tRfTYXsZ", "e0Q29SYA"], "roleId": "JGFesKYA"}], "Secret": "91yLwmDq", "TeamID": "TKtTMRvf", "TokenAuthenticationType": "b907kyZL", "TokenClaimsMapping": {"O0wkji9L": "9v7WPIrb", "dLMPe4F1": "72gDrYC4", "A7YxWXGt": "QpZ7DMSi"}, "TokenEndpoint": "DMxSRioQ", "scopes": ["xQ69l61z", "zUetbqOx", "DSbaC9Fo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'nwgLGkpl' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 135 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["kj1yf2ve", "T8nr5Mc3", "q3OOOhio"], "assignedNamespaces": ["dZQQUtXb", "jsFVMP3c", "c5c0kzxA"], "domain": "ZwBe2s3S", "roleId": "PilwexmA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yeQUKiXw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 136 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "xjUcSdTl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'hORsCYH9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 137 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'DkGVqzgl' \
    > test.out 2>&1
eval_tap $? 137 'RetrieveSSOLoginPlatformCredential' test.out

#- 138 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "dsHnCdQp", "apiKey": "jAwKRE7O", "appId": "cILRlN4Z", "federationMetadataUrl": "GqVtyUjR", "isActive": false, "redirectUri": "1VrFRgTg", "secret": "XBNZJ2uh", "ssoUrl": "ViKcv1fI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'bXNv0Nu0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AddSSOLoginPlatformCredential' test.out

#- 139 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'wbZ30B4U' \
    > test.out 2>&1
eval_tap $? 139 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 140 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "QMs8Q0OI", "apiKey": "RmnCQxsP", "appId": "Q78abBlG", "federationMetadataUrl": "8JmPRJOw", "isActive": false, "redirectUri": "Pk9KjhW1", "secret": "edEYH5af", "ssoUrl": "C63Hr4El"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'tqC0znKX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateSSOPlatformCredential' test.out

#- 141 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '9Nj64JUX' \
    --platformUserId 'mMg7tPNP' \
    > test.out 2>&1
eval_tap $? 141 'AdminGetUserByPlatformUserIDV3' test.out

#- 142 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'LG0rvcCW' \
    --after '66' \
    --before '0' \
    --limit '21' \
    > test.out 2>&1
eval_tap $? 142 'GetAdminUsersByRoleIdV3' test.out

#- 143 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'cCmgYCH4' \
    > test.out 2>&1
eval_tap $? 143 'AdminGetUserByEmailAddressV3' test.out

#- 144 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["HlEpRF2w", "s9A9xLNQ", "dTTSLdFP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AdminListUserIDByUserIDsV3' test.out

#- 145 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["NEHpijyo", "434JUebK", "umwsfNrK"], "isAdmin": false, "namespace": "WEMB7Vo6", "roles": ["uekrkggU", "xdZlRBTI", "PTKEhPjd"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'AdminInviteUserV3' test.out

#- 146 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '24' \
    --offset '68' \
    --platformUserId 'rE6X4Kj6' \
    --platformId 'K6LzJGQy' \
    > test.out 2>&1
eval_tap $? 146 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 147 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '11' \
    --offset '36' \
    > test.out 2>&1
eval_tap $? 147 'AdminListUsersV3' test.out

#- 148 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'hJKA0Fvc' \
    --endDate 'LHaCZOEx' \
    --limit '40' \
    --offset '80' \
    --platformBy 'LoOIv6fi' \
    --platformId 'eO5W9z2W' \
    --query 'qD08Faa1' \
    --startDate 'AXxTfxye' \
    > test.out 2>&1
eval_tap $? 148 'AdminSearchUserV3' test.out

#- 149 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["Irkjcir6", "XF4DqOK2", "PEptZ6KE"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'AdminGetBulkUserByEmailAddressV3' test.out

#- 150 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'RbIu376h' \
    > test.out 2>&1
eval_tap $? 150 'AdminGetUserByUserIdV3' test.out

#- 151 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "SHSzSbta", "country": "Nt26TdkK", "dateOfBirth": "VByMd100", "displayName": "gQ60C2kB", "languageTag": "taPt6xjO", "userName": "xy3SkSDL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '9p4NAsyp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'AdminUpdateUserV3' test.out

#- 152 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'A6uABZR2' \
    --activeOnly 'false' \
    --after 'HJ1V9dfO' \
    --before 'VllHfvGT' \
    --limit '68' \
    > test.out 2>&1
eval_tap $? 152 'AdminGetUserBanV3' test.out

#- 153 AdminBanUserV3
# body param: body
echo '{"ban": "f8JxVGGY", "comment": "6fGQWJDp", "endDate": "yq04gniz", "reason": "ydbDVif7", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xNfnfOAo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminBanUserV3' test.out

#- 154 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId '4UGjsqqz' \
    --namespace $AB_NAMESPACE \
    --userId 'hVJZJsJV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminUpdateUserBanV3' test.out

#- 155 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "Ct78Oyvr", "emailAddress": "vP3Rl6lW", "languageTag": "sQ87QZCb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mWvLDRKM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminSendVerificationCodeV3' test.out

#- 156 AdminVerifyAccountV3
# body param: body
echo '{"Code": "srjzoamp", "ContactType": "O2yZsmQa", "LanguageTag": "WPBRNd7E", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'y4H3VNWq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminVerifyAccountV3' test.out

#- 157 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'mIk3VtEF' \
    > test.out 2>&1
eval_tap $? 157 'GetUserVerificationCode' test.out

#- 158 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'F4kKBmpk' \
    > test.out 2>&1
eval_tap $? 158 'AdminGetUserDeletionStatusV3' test.out

#- 159 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ne26wlZ3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminUpdateUserDeletionStatusV3' test.out

#- 160 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "RoHt6c8P", "country": "KrxUTV15", "dateOfBirth": "q0cTMNJK", "displayName": "pTqWocSB", "emailAddress": "BXy8VjDl", "password": "ulLPalcj", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Y9C9vyp5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminUpgradeHeadlessAccountV3' test.out

#- 161 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 't2aXjI1h' \
    > test.out 2>&1
eval_tap $? 161 'AdminDeleteUserInformationV3' test.out

#- 162 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Ps0dHorB' \
    --after '0.26812786193649474' \
    --before '0.9845409209922128' \
    --limit '22' \
    > test.out 2>&1
eval_tap $? 162 'AdminGetUserLoginHistoriesV3' test.out

#- 163 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "zgxvg6uZ", "newPassword": "f95gC7GH", "oldPassword": "JVZQnj8C"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'i7iOIvhV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'AdminResetPasswordV3' test.out

#- 164 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 94, "Resource": "aBegj6An", "SchedAction": 71, "SchedCron": "nia3T6gH", "SchedRange": ["dXd9bYez", "EKaAGs38", "a98uCiJd"]}, {"Action": 60, "Resource": "8wav3owe", "SchedAction": 59, "SchedCron": "0Hf7HOXL", "SchedRange": ["DGiH7Mh1", "5D3pfKUv", "1SZqmC4a"]}, {"Action": 2, "Resource": "VbSwvpax", "SchedAction": 63, "SchedCron": "UAZLCBCB", "SchedRange": ["WjFJCcJc", "N4o4Kyxs", "ksFW0FoV"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'd3gmXMdA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminUpdateUserPermissionV3' test.out

#- 165 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 25, "Resource": "LEerLUx5", "SchedAction": 1, "SchedCron": "bXchlfS7", "SchedRange": ["l1J6zkPF", "fD3ENmLG", "WF9BKKdo"]}, {"Action": 29, "Resource": "nATLWuaO", "SchedAction": 44, "SchedCron": "OY4KmGXs", "SchedRange": ["0hMx647t", "WXIYJaBJ", "CMfVUL2k"]}, {"Action": 19, "Resource": "4xeskpiw", "SchedAction": 30, "SchedCron": "Qq2RwauX", "SchedRange": ["zzijcRWo", "6pmJwNCI", "mZkvUogD"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'XBRUhWm6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminAddUserPermissionsV3' test.out

#- 166 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 93, "Resource": "ufolvvQW"}, {"Action": 3, "Resource": "mZHqWHtO"}, {"Action": 49, "Resource": "owdMi5MM"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'w5DkAH4P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteUserPermissionBulkV3' test.out

#- 167 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '68' \
    --namespace $AB_NAMESPACE \
    --resource '5quSliOq' \
    --userId 'e517yHuh' \
    > test.out 2>&1
eval_tap $? 167 'AdminDeleteUserPermissionV3' test.out

#- 168 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BQeB1ScT' \
    --after 'ADPIGuCj' \
    --before 'd2alGXXQ' \
    --limit '65' \
    > test.out 2>&1
eval_tap $? 168 'AdminGetUserPlatformAccountsV3' test.out

#- 169 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'TDu9M8ap' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetListJusticePlatformAccounts' test.out

#- 170 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'bAsVffK7' \
    --userId 'n40AuFTk' \
    > test.out 2>&1
eval_tap $? 170 'AdminGetUserMapping' test.out

#- 171 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'MgyrIesr' \
    --userId 'HnRVlxqE' \
    > test.out 2>&1
eval_tap $? 171 'AdminCreateJusticeUser' test.out

#- 172 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "mXonqBUo", "platformUserId": "xQwUs6MS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'WQSwJpQ9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminLinkPlatformAccount' test.out

#- 173 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "8w3sq5OH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'FFfV4G6a' \
    --userId 'j7IcuE7t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminPlatformUnlinkV3' test.out

#- 174 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '0Q1911h9' \
    --userId 'ADzLC5ku' \
    --ticket 'IpJ0jor9' \
    > test.out 2>&1
eval_tap $? 174 'AdminPlatformLinkV3' test.out

#- 175 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Fld2S7Zg' \
    --userId 'QFEOrMjU' \
    --platformToken 'rAnuxEe6' \
    > test.out 2>&1
eval_tap $? 175 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 176 AdminDeleteUserRolesV3
# body param: body
echo '["MpsoP3yX", "gosHJpsb", "cDDqaDhS"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId '4T9sl3Ww' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'AdminDeleteUserRolesV3' test.out

#- 177 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "NuvfnEmS", "roleId": "l7tQuFHh"}, {"namespace": "nyzaEAHP", "roleId": "Fnca48Bs"}, {"namespace": "Zm7prNur", "roleId": "U5YMYfU6"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'faX3iFhd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminSaveUserRoleV3' test.out

#- 178 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'z2UJGXLQ' \
    --userId 'XAzr5WPj' \
    > test.out 2>&1
eval_tap $? 178 'AdminAddUserRoleV3' test.out

#- 179 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'SZnbfRaB' \
    --userId 'HDg3yD5x' \
    > test.out 2>&1
eval_tap $? 179 'AdminDeleteUserRoleV3' test.out

#- 180 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "dAkncZhF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BB7LPQTS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminUpdateUserStatusV3' test.out

#- 181 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qiAZhjEY' \
    > test.out 2>&1
eval_tap $? 181 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 182 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "HTAAg7x3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'kuQ1RU1o' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'AdminUpdateClientSecretV3' test.out

#- 183 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'ONZTEXht' \
    --before 'LuJME9vh' \
    --isWildcard 'false' \
    --limit '32' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetRolesV3' test.out

#- 184 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "managers": [{"displayName": "JCjPBVQO", "namespace": "Qh14KCVr", "userId": "y7IcpgzX"}, {"displayName": "2vh7c7QH", "namespace": "Du6XQOqz", "userId": "Bgo5guD2"}, {"displayName": "8b5nWdLK", "namespace": "8gEHystX", "userId": "vDkri0Cv"}], "members": [{"displayName": "Qy4N19ch", "namespace": "WNTrHLPN", "userId": "d5AOa1lS"}, {"displayName": "Xek0n4HW", "namespace": "sjzf3Hms", "userId": "Re2weneU"}, {"displayName": "QTPENKSH", "namespace": "sn79grSw", "userId": "Bcu9r3al"}], "permissions": [{"action": 97, "resource": "mPaWkuOo", "schedAction": 92, "schedCron": "Qji9Q4ie", "schedRange": ["acUrtI02", "2zWenyMu", "CVDurwtE"]}, {"action": 95, "resource": "APM3yXxZ", "schedAction": 73, "schedCron": "kI5WtQse", "schedRange": ["SK133Fqt", "Uiw6tobU", "HWPhpH8R"]}, {"action": 79, "resource": "xWkRYdw1", "schedAction": 49, "schedCron": "RswFbGts", "schedRange": ["Rc1L22rx", "qUyyrllN", "LnnNBTcU"]}], "roleName": "6x3ezmfB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminCreateRoleV3' test.out

#- 185 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'UkhqQ5qf' \
    > test.out 2>&1
eval_tap $? 185 'AdminGetRoleV3' test.out

#- 186 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'SLsgr6RP' \
    > test.out 2>&1
eval_tap $? 186 'AdminDeleteRoleV3' test.out

#- 187 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": true, "roleName": "827cgnsh"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'QyBHCUR9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminUpdateRoleV3' test.out

#- 188 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'hpXQfRyF' \
    > test.out 2>&1
eval_tap $? 188 'AdminGetRoleAdminStatusV3' test.out

#- 189 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'SpA9eDI7' \
    > test.out 2>&1
eval_tap $? 189 'AdminUpdateAdminRoleStatusV3' test.out

#- 190 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'vpZM4IOF' \
    > test.out 2>&1
eval_tap $? 190 'AdminRemoveRoleAdminV3' test.out

#- 191 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'xHIIoirD' \
    --after 'XfYt5lkU' \
    --before 'xE0GSTsk' \
    --limit '47' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetRoleManagersV3' test.out

#- 192 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "Ir0lcLCf", "namespace": "3Qo1kyJp", "userId": "3DQd7CfZ"}, {"displayName": "t5xRUfbN", "namespace": "KoTmHB4J", "userId": "AFyLg6fd"}, {"displayName": "xVRDqrL9", "namespace": "faojRkHY", "userId": "Mf2zUtvp"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId '8CrMkEuI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminAddRoleManagersV3' test.out

#- 193 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "XOjvQGxT", "namespace": "QPJJazjq", "userId": "AVafff8n"}, {"displayName": "94JVsEKX", "namespace": "5oIBIv4f", "userId": "dt4WaQBi"}, {"displayName": "noDvDDG1", "namespace": "QEjv2Rz3", "userId": "p1k3ErZ2"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'hkeZG0pN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminRemoveRoleManagersV3' test.out

#- 194 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'Hakumciq' \
    --after 'kQhIOQEq' \
    --before 'PMeAnMz2' \
    --limit '57' \
    > test.out 2>&1
eval_tap $? 194 'AdminGetRoleMembersV3' test.out

#- 195 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "WlIFAQ01", "namespace": "6zQB7fbF", "userId": "Os4Uqe5b"}, {"displayName": "OlYS7nhZ", "namespace": "vxYj8K81", "userId": "GNuS09vZ"}, {"displayName": "NXcS3lys", "namespace": "OzOVCAD2", "userId": "r0NZHcOS"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'Avl9gAXF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddRoleMembersV3' test.out

#- 196 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "f2frC8eE", "namespace": "jaL2KYFl", "userId": "zAaqxUB6"}, {"displayName": "DKqYdH72", "namespace": "TMIqCX6N", "userId": "7prtaMmV"}, {"displayName": "1V9eMiDE", "namespace": "GfwgkfaW", "userId": "EPyoXmsG"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'nowksWW3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminRemoveRoleMembersV3' test.out

#- 197 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 67, "resource": "hMohHUWw", "schedAction": 51, "schedCron": "kKddmmaL", "schedRange": ["YwECVOoB", "AhNnjvhx", "tS0zgoGV"]}, {"action": 22, "resource": "tVFvEHgm", "schedAction": 58, "schedCron": "eOVaH1bz", "schedRange": ["z4ncmX9I", "10oZW0cx", "MtKGd5vb"]}, {"action": 16, "resource": "63szLv0F", "schedAction": 71, "schedCron": "VHPpnWpG", "schedRange": ["z9Xg8n8o", "Rj8yoU98", "XbqjcUAj"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 't4TMRVSh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminUpdateRolePermissionsV3' test.out

#- 198 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 55, "resource": "feGAGqYh", "schedAction": 1, "schedCron": "zhHzs9E4", "schedRange": ["EtRvv6va", "QvoblaJc", "sY8BCNim"]}, {"action": 71, "resource": "BUqopg4a", "schedAction": 24, "schedCron": "xJYOirpS", "schedRange": ["0oDyOTIU", "RSwnJOHE", "ISmCd1Es"]}, {"action": 27, "resource": "9CoY1prS", "schedAction": 4, "schedCron": "LJlfmPlY", "schedRange": ["sDFD144V", "10wBk01p", "SwAcSoCk"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'UXMnIc09' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminAddRolePermissionsV3' test.out

#- 199 AdminDeleteRolePermissionsV3
# body param: body
echo '["9VXMmEji", "3p3XGf6l", "QZlYCJ6I"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'DdE4kgwi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'AdminDeleteRolePermissionsV3' test.out

#- 200 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '15' \
    --resource 'a5p1eaAf' \
    --roleId '4c7lSRAi' \
    > test.out 2>&1
eval_tap $? 200 'AdminDeleteRolePermissionV3' test.out

#- 201 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 201 'AdminGetMyUserV3' test.out

#- 202 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'CRkv5IRs' \
    --extend_exp 'false' \
    --redirect_uri 'QoOyUTXZ' \
    --password '28fIZmy1' \
    --request_id 'v5OUeiDh' \
    --user_name 'zbuxl7qO' \
    > test.out 2>&1
eval_tap $? 202 'UserAuthenticationV3' test.out

#- 203 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'OFyp0rvU' \
    --linkingToken 'ynm0ddA0' \
    --password 'FNNiAQ44' \
    --username '2DaTJaQO' \
    > test.out 2>&1
eval_tap $? 203 'AuthenticationWithPlatformLinkV3' test.out

#- 204 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --extend_exp 'true' \
    --linkingToken 'lUogjHii' \
    > test.out 2>&1
eval_tap $? 204 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 205 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'dPRMypPz' \
    > test.out 2>&1
eval_tap $? 205 'RequestOneTimeLinkingCodeV3' test.out

#- 206 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'jqITAQpn' \
    > test.out 2>&1
eval_tap $? 206 'ValidateOneTimeLinkingCodeV3' test.out

#- 207 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --client_id 'EQ9JTSCV' \
    --oneTimeLinkCode 'OPR8ANvj' \
    > test.out 2>&1
eval_tap $? 207 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 208 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 208 'GetCountryLocationV3' test.out

#- 209 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 209 'Logout' test.out

#- 210 RequestGameTokenCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenCodeResponseV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'ljENscoI' \
    > test.out 2>&1
eval_tap $? 210 'RequestGameTokenCodeResponseV3' test.out

#- 211 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ul6oVa6T' \
    --userId 'ioB9ZzIU' \
    > test.out 2>&1
eval_tap $? 211 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 212 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'khKCLefV' \
    > test.out 2>&1
eval_tap $? 212 'RevokeUserV3' test.out

#- 213 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge '5bFNygKP' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --oneTimeLinkCode '8hI01JAh' \
    --redirectUri 'TQhWLqv5' \
    --scope 'xUgkfOqC' \
    --state 'VFPUeuNa' \
    --targetAuthPage 'Ad27SVTO' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'n2tfqXGU' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 213 'AuthorizeV3' test.out

#- 214 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'MSdEiW7Y' \
    > test.out 2>&1
eval_tap $? 214 'TokenIntrospectionV3' test.out

#- 215 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 215 'GetJWKSV3' test.out

#- 216 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId '9j1VXnAa' \
    --factor 'MM91pv9c' \
    --mfaToken '1UUpoJYJ' \
    > test.out 2>&1
eval_tap $? 216 'SendMFAAuthenticationCode' test.out

#- 217 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'QrYKSDMT' \
    --mfaToken '2CpKz5dA' \
    > test.out 2>&1
eval_tap $? 217 'Change2faMethod' test.out

#- 218 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'v8Hb7isA' \
    --factor 'oeDkRK7k' \
    --mfaToken 'DQN9BtED' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 218 'Verify2faCode' test.out

#- 219 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'aB34E5Gc' \
    --userId 'quRdYELc' \
    > test.out 2>&1
eval_tap $? 219 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 220 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'PCswWavs' \
    --clientId 'EXWheVlz' \
    --redirectUri 'vtROwSdW' \
    --requestId 'EfCqvqFw' \
    > test.out 2>&1
eval_tap $? 220 'AuthCodeRequestV3' test.out

#- 221 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'ZCWRVYDR' \
    --client_id 'tOryxlGX' \
    --createHeadless 'true' \
    --device_id 'YfKoSW1w' \
    --macAddress 'aBmarSUi' \
    --platform_token 'mj4orbfS' \
    > test.out 2>&1
eval_tap $? 221 'PlatformTokenGrantV3' test.out

#- 222 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 222 'GetRevocationListV3' test.out

#- 223 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'w5fdWNjj' \
    > test.out 2>&1
eval_tap $? 223 'TokenRevocationV3' test.out

#- 224 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --client_id 'oGZQ5PHO' \
    --code 'm3BfNDdK' \
    --code_verifier 'uMCV6b6H' \
    --extend_exp 'true' \
    --password 'B99VgyUp' \
    --redirect_uri 'vibrfMxD' \
    --refresh_token 'tBbBAXLV' \
    --username '8d3Ys5bi' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 224 'TokenGrantV3' test.out

#- 225 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'l9WF5ORa' \
    > test.out 2>&1
eval_tap $? 225 'VerifyTokenV3' test.out

#- 226 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'qbQvurTb' \
    --code 'RIWzXo54' \
    --error 'sgoxczpg' \
    --openidAssocHandle 'n3tL97Lg' \
    --openidClaimedId 'IS7VLuDY' \
    --openidIdentity '8lTyufZP' \
    --openidMode 'yy6WNvkJ' \
    --openidNs 'KP4zH984' \
    --openidOpEndpoint 'DP8bfJCM' \
    --openidResponseNonce '4VVRqwfX' \
    --openidReturnTo 'oQWYK0uT' \
    --openidSig 'glnRDL9P' \
    --openidSigned 'gQneRaE6' \
    --state 'Xf0S53z4' \
    > test.out 2>&1
eval_tap $? 226 'PlatformAuthenticationV3' test.out

#- 227 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'NwzPxswJ' \
    > test.out 2>&1
eval_tap $? 227 'PublicGetInputValidations' test.out

#- 228 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'HqwzCHuo' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 228 'PublicGetCountryAgeRestrictionV3' test.out

#- 229 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 229 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 230 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId '7cNjY7o0' \
    > test.out 2>&1
eval_tap $? 230 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 231 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["mCSABawN", "N9npn7IG", "jfyfXA1R"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'oN1InIh4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 232 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gQeFFs55' \
    --platformUserId 's5w8z4Q5' \
    > test.out 2>&1
eval_tap $? 232 'PublicGetUserByPlatformUserIDV3' test.out

#- 233 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'TFa4n7OR' \
    > test.out 2>&1
eval_tap $? 233 'PublicGetAsyncStatus' test.out

#- 234 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '4iuh5AVl' \
    --limit '73' \
    --offset '97' \
    --query 'ZxWZxq30' \
    > test.out 2>&1
eval_tap $? 234 'PublicSearchUserV3' test.out

#- 235 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "t9PwQlcC", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "4DqYz1zV", "policyId": "V0e4Ivfd", "policyVersionId": "PuogNnb9"}, {"isAccepted": true, "localizedPolicyVersionId": "TMkMIyrs", "policyId": "JOPMMGFG", "policyVersionId": "hwmeWkQ4"}, {"isAccepted": false, "localizedPolicyVersionId": "DwQYhWNT", "policyId": "1rApZj5n", "policyVersionId": "C9rDY9Ac"}], "authType": "I0i1HK2I", "code": "zWgYoUYX", "country": "IsPiOUgE", "dateOfBirth": "oRHERemd", "displayName": "jslzO2hv", "emailAddress": "u7BqBUJL", "password": "POKkPX7U", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'PublicCreateUserV3' test.out

#- 236 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field '9PhOUWP4' \
    --query '30FiEp6p' \
    > test.out 2>&1
eval_tap $? 236 'CheckUserAvailability' test.out

#- 237 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["ppE0U95s", "Lg3HoT9C", "7Qm7MoF9"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'PublicBulkGetUsers' test.out

#- 238 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "6RkKAKX0", "languageTag": "FQalbKsL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'PublicSendRegistrationCode' test.out

#- 239 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "ZFxql6Qg", "emailAddress": "2D0VeVtj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'PublicVerifyRegistrationCode' test.out

#- 240 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "ZrnMI06w", "languageTag": "DDwYLvFB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'PublicForgotPasswordV3' test.out

#- 241 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'z8QEb3oC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 241 'GetAdminInvitationV3' test.out

#- 242 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "6eJuY2n2", "policyId": "mXkglr8D", "policyVersionId": "Bxk2xCVi"}, {"isAccepted": false, "localizedPolicyVersionId": "SUYswazC", "policyId": "ZW3Ez8rS", "policyVersionId": "gWaWAi0Z"}, {"isAccepted": false, "localizedPolicyVersionId": "RjQLch8w", "policyId": "0bXDu7om", "policyVersionId": "T7bTkNmV"}], "authType": "EMAILPASSWD", "country": "O1TC09mG", "dateOfBirth": "RxhsPJ0U", "displayName": "UEidtTkz", "password": "GX2ORNJt", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'DPjBJsGh' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'CreateUserFromInvitationV3' test.out

#- 243 UpdateUserV3
# body param: body
echo '{"avatarUrl": "kyrhxRxy", "country": "3xi0WWQi", "dateOfBirth": "AyoHY5rv", "displayName": "we3iXMZ9", "languageTag": "meiZyFCC", "userName": "k98S4tXG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'UpdateUserV3' test.out

#- 244 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "9BKQZ1fx", "country": "HwPku1cl", "dateOfBirth": "90ssrgfi", "displayName": "RC8IAFxI", "languageTag": "scGzAWyX", "userName": "I2SvwrE3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'PublicPartialUpdateUserV3' test.out

#- 245 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "DqpbzLRK", "emailAddress": "0zl5K4gI", "languageTag": "GwNb7Ypf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'PublicSendVerificationCodeV3' test.out

#- 246 PublicUserVerificationV3
# body param: body
echo '{"code": "2VyA338L", "contactType": "oJA166xo", "languageTag": "xih6Pl5S", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'PublicUserVerificationV3' test.out

#- 247 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "0AzOuRg1", "country": "1TphW51Z", "dateOfBirth": "jS3tu1bR", "displayName": "dCho7EB7", "emailAddress": "cCbRPtq0", "password": "qhhs4tcz", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'PublicUpgradeHeadlessAccountV3' test.out

#- 248 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "XalZu6Jo", "password": "el5hLwMQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PublicVerifyHeadlessAccountV3' test.out

#- 249 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "EqR6Fiz6", "newPassword": "jsOYF5bK", "oldPassword": "391LC6L8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'PublicUpdatePasswordV3' test.out

#- 250 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace '5IXk84l1' \
    > test.out 2>&1
eval_tap $? 250 'PublicCreateJusticeUser' test.out

#- 251 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jOedRv9H' \
    --redirectUri 'y3rjyKBy' \
    --ticket 'of6rWMQB' \
    > test.out 2>&1
eval_tap $? 251 'PublicPlatformLinkV3' test.out

#- 252 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "oGBPw82U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NSkJMMn4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'PublicPlatformUnlinkV3' test.out

#- 253 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'IAVBezl8' \
    > test.out 2>&1
eval_tap $? 253 'PublicPlatformUnlinkAllV3' test.out

#- 254 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NID9dxb5' \
    --ticket 'Tm5vC6gK' \
    > test.out 2>&1
eval_tap $? 254 'PublicForcePlatformLinkV3' test.out

#- 255 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'UCk29iBZ' \
    --clientId 'rQ4jQLhA' \
    --redirectUri 'nWWshvby' \
    > test.out 2>&1
eval_tap $? 255 'PublicWebLinkPlatform' test.out

#- 256 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'cJ2cKhAb' \
    --state '8gkLozFC' \
    > test.out 2>&1
eval_tap $? 256 'PublicWebLinkPlatformEstablish' test.out

#- 257 ResetPasswordV3
# body param: body
echo '{"code": "hvvo0Zei", "emailAddress": "fuwpX8jb", "newPassword": "NMjJBtTa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'ResetPasswordV3' test.out

#- 258 PublicGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AD2FjAxQ' \
    > test.out 2>&1
eval_tap $? 258 'PublicGetUserByUserIdV3' test.out

#- 259 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'er2gjyZc' \
    --activeOnly 'true' \
    --after 'vRsRTHsO' \
    --before 'T2Cc4brX' \
    --limit '50' \
    > test.out 2>&1
eval_tap $? 259 'PublicGetUserBanHistoryV3' test.out

#- 260 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId '7EVwmjrt' \
    > test.out 2>&1
eval_tap $? 260 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 261 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KGjILGcL' \
    > test.out 2>&1
eval_tap $? 261 'PublicGetUserInformationV3' test.out

#- 262 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Tdu6TBNy' \
    --after '0.8770231379820798' \
    --before '0.73201746915629' \
    --limit '43' \
    > test.out 2>&1
eval_tap $? 262 'PublicGetUserLoginHistoriesV3' test.out

#- 263 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '4mbfB4Fu' \
    --after 'HzIMyAIl' \
    --before 'SvUOZJ87' \
    --limit '93' \
    > test.out 2>&1
eval_tap $? 263 'PublicGetUserPlatformAccountsV3' test.out

#- 264 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'QRLS64Xn' \
    > test.out 2>&1
eval_tap $? 264 'PublicListJusticePlatformAccountsV3' test.out

#- 265 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "2A6Bzyf4", "platformUserId": "8BQG5qjQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'lfeEgsHT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'PublicLinkPlatformAccount' test.out

#- 266 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["kLgJyxRT", "He1C6zVC", "8x4WNEVq"], "requestId": "blRC6qVB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId '5idZytlp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'PublicForceLinkPlatformWithProgression' test.out

#- 267 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PWQGv48B' \
    > test.out 2>&1
eval_tap $? 267 'PublicGetPublisherUserV3' test.out

#- 268 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'P14wNnIX' \
    --password 'ZoEm4YFN' \
    > test.out 2>&1
eval_tap $? 268 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 269 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'AMb3AfGV' \
    --before 'TkLkikUV' \
    --isWildcard 'true' \
    --limit '14' \
    > test.out 2>&1
eval_tap $? 269 'PublicGetRolesV3' test.out

#- 270 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'MPu8Jr9h' \
    > test.out 2>&1
eval_tap $? 270 'PublicGetRoleV3' test.out

#- 271 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 271 'PublicGetMyUserV3' test.out

#- 272 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'ebGb3P7X' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 273 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["EbssE6gC", "zcPc94Lx", "UX1JM8B7"], "oneTimeLinkCode": "vs5BKW5U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'LinkHeadlessAccountToMyAccountV3' test.out

#- 274 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "IzJ8xYPG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'PublicSendVerificationLinkV3' test.out

#- 275 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'jqzHEp25' \
    > test.out 2>&1
eval_tap $? 275 'PublicVerifyUserByLinkV3' test.out

#- 276 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId '6ioXIIuH' \
    --code 'SjQmSnbU' \
    --error '3v6uutCJ' \
    --state 'BumVe35i' \
    > test.out 2>&1
eval_tap $? 276 'PlatformAuthenticateSAMLV3Handler' test.out

#- 277 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'Wl3TxKiw' \
    --payload 'dewOoXEB' \
    > test.out 2>&1
eval_tap $? 277 'LoginSSOClient' test.out

#- 278 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'eYuobdAO' \
    > test.out 2>&1
eval_tap $? 278 'LogoutSSOClient' test.out

#- 279 RequestGameTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenResponseV3 \
    --code '354nwBfk' \
    > test.out 2>&1
eval_tap $? 279 'RequestGameTokenResponseV3' test.out

#- 280 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'yv2kn6zt' \
    > test.out 2>&1
eval_tap $? 280 'AdminGetDevicesByUserV4' test.out

#- 281 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'RStXtA00' \
    --endDate 'aad0VlB2' \
    --limit '45' \
    --offset '73' \
    --startDate 'XXHasMtT' \
    > test.out 2>&1
eval_tap $? 281 'AdminGetBannedDevicesV4' test.out

#- 282 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'cK6KUnDe' \
    > test.out 2>&1
eval_tap $? 282 'AdminGetUserDeviceBansV4' test.out

#- 283 AdminBanDeviceV4
# body param: body
echo '{"comment": "NjUKTG6h", "deviceId": "xV1P62BC", "deviceType": "wcLdLvHF", "enabled": false, "endDate": "AXEO9cfI", "ext": {"De1WQW3A": {}, "QyiTfLGZ": {}, "MTfK6Aib": {}}, "reason": "xyKGxlfW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'AdminBanDeviceV4' test.out

#- 284 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'CzdvLnef' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 284 'AdminGetDeviceBanV4' test.out

#- 285 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'crMzNSuD' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'AdminUpdateDeviceBanV4' test.out

#- 286 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'fNxwa5jR' \
    --startDate 'LOYmJBJR' \
    --deviceType 'ldtlhUO2' \
    > test.out 2>&1
eval_tap $? 286 'AdminGenerateReportV4' test.out

#- 287 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 287 'AdminGetDeviceTypesV4' test.out

#- 288 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId '3k3jYNd6' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 288 'AdminGetDeviceBansV4' test.out

#- 289 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId '4LmehyXC' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 289 'AdminDecryptDeviceV4' test.out

#- 290 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'GaJqxrRZ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'AdminUnbanDeviceV4' test.out

#- 291 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'sWugnwJL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 291 'AdminGetUsersByDeviceV4' test.out

#- 292 AdminCreateTestUsersV4
# body param: body
echo '{"count": 76}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AdminCreateTestUsersV4' test.out

#- 293 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["tPNLxv5P", "HylTz3Lx", "ymHnwCN7"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'AdminBulkCheckValidUserIDV4' test.out

#- 294 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "Orr1mUdg", "country": "kMvlrIfA", "dateOfBirth": "3iUBq3QQ", "displayName": "p3oCF9VJ", "languageTag": "aWVArp5J", "userName": "YeblCkII"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'VR4E8nLd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'AdminUpdateUserV4' test.out

#- 295 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "yjIqhZZn", "emailAddress": "J0LworWb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'lrN5dSYo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'AdminUpdateUserEmailAddressV4' test.out

#- 296 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId '9GG24ryw' \
    > test.out 2>&1
eval_tap $? 296 'AdminDisableUserMFAV4' test.out

#- 297 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'YChV3iX0' \
    > test.out 2>&1
eval_tap $? 297 'AdminListUserRolesV4' test.out

#- 298 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["uyZOZ1nT", "TgeZxJyY", "9F29Ugaq"], "roleId": "NL6eieCQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'bWCeVlqc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'AdminUpdateUserRoleV4' test.out

#- 299 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["Ls5d8kry", "JaqzjMqY", "foExgGMe"], "roleId": "NoKaU3Xu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Pf9oKYYX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'AdminAddUserRoleV4' test.out

#- 300 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["7M0kgXJ1", "X24kDINp", "UGdBBVNt"], "roleId": "LjnQVWuw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'u2RaoNLo' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminRemoveUserRoleV4' test.out

#- 301 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'false' \
    --limit '93' \
    --offset '33' \
    > test.out 2>&1
eval_tap $? 301 'AdminGetRolesV4' test.out

#- 302 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": true, "roleName": "VTZqeOKc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'AdminCreateRoleV4' test.out

#- 303 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'vDjR5kn6' \
    > test.out 2>&1
eval_tap $? 303 'AdminGetRoleV4' test.out

#- 304 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'PtKv8nL6' \
    > test.out 2>&1
eval_tap $? 304 'AdminDeleteRoleV4' test.out

#- 305 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "TdHZVOjI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'cKPkiYot' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'AdminUpdateRoleV4' test.out

#- 306 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 82, "resource": "UrGpeviX", "schedAction": 33, "schedCron": "FVE8fALq", "schedRange": ["meOe3qgk", "bAV7TT81", "dziHXPeB"]}, {"action": 81, "resource": "CYiwK6UR", "schedAction": 85, "schedCron": "tVuct8Ik", "schedRange": ["qSnVoB97", "pEKo4w9J", "rnmC82Iw"]}, {"action": 29, "resource": "2q02pCBB", "schedAction": 4, "schedCron": "BYtgMVxm", "schedRange": ["1oi46wcR", "36ebP0Ei", "yJl47dZK"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId '7Mj7099D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'AdminUpdateRolePermissionsV4' test.out

#- 307 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 27, "resource": "64Aer3Q5", "schedAction": 42, "schedCron": "9YifHwSn", "schedRange": ["A39bbL93", "lWFVjDnt", "oDlQaRD6"]}, {"action": 11, "resource": "rHD8uGNf", "schedAction": 30, "schedCron": "gMAE7Bo1", "schedRange": ["sFIDCHDm", "IKVc31WR", "C9LEaoFF"]}, {"action": 69, "resource": "LkWT8gxO", "schedAction": 84, "schedCron": "4uRrA5re", "schedRange": ["Vw0wwDO3", "z44u3bbs", "APmg6bXD"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'zOJr9r9t' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'AdminAddRolePermissionsV4' test.out

#- 308 AdminDeleteRolePermissionsV4
# body param: body
echo '["WBGW9ILv", "jeeFl8rK", "Xa3S85x9"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'Dq9qdG5D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'AdminDeleteRolePermissionsV4' test.out

#- 309 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'TFsQWVwJ' \
    --after 'BQC3RMkz' \
    --before 'l1y0vpBD' \
    --limit '28' \
    > test.out 2>&1
eval_tap $? 309 'AdminListAssignedUsersV4' test.out

#- 310 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["yuGvZ7FO", "pgT8WmQh", "QobSAoLU"], "namespace": "S2NtKG35", "userId": "yr5am3QI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'ZbwOIuBf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'AdminAssignUserToRoleV4' test.out

#- 311 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "VhlEJhRH", "userId": "wGV1sC4z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId '5GCERZsb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'AdminRevokeUserFromRoleV4' test.out

#- 312 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "6gkF7UKp", "country": "OtRa8CH7", "dateOfBirth": "OFHGwWhs", "displayName": "goFJ7Ajy", "languageTag": "ITe1Floy", "userName": "ch812bq7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminUpdateMyUserV4' test.out

#- 313 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 313 'AdminDisableMyAuthenticatorV4' test.out

#- 314 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'kxATFMiv' \
    > test.out 2>&1
eval_tap $? 314 'AdminEnableMyAuthenticatorV4' test.out

#- 315 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 315 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 316 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 316 'AdminGetMyBackupCodesV4' test.out

#- 317 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 317 'AdminGenerateMyBackupCodesV4' test.out

#- 318 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 318 'AdminDisableMyBackupCodesV4' test.out

#- 319 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 319 'AdminDownloadMyBackupCodesV4' test.out

#- 320 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 320 'AdminEnableMyBackupCodesV4' test.out

#- 321 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 321 'AdminSendMyMFAEmailCodeV4' test.out

#- 322 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 322 'AdminDisableMyEmailV4' test.out

#- 323 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'Cbcpjhxo' \
    > test.out 2>&1
eval_tap $? 323 'AdminEnableMyEmailV4' test.out

#- 324 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 324 'AdminGetMyEnabledFactorsV4' test.out

#- 325 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'kVmOwlgE' \
    > test.out 2>&1
eval_tap $? 325 'AdminMakeFactorMyDefaultV4' test.out

#- 326 AdminInviteUserV4
# body param: body
echo '{"assignedNamespaces": ["gaslOCZl", "gLFwAI2K", "pqejKDf8"], "emailAddresses": ["ApQvuUGl", "YM4RLgxj", "JGnZZndh"], "isAdmin": true, "namespace": "WUqA6wSk", "roleId": "h9XA2OPU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminInviteUserV4' test.out

#- 327 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "nj5xkhIp", "policyId": "JF4ZzQtR", "policyVersionId": "phXFLglJ"}, {"isAccepted": false, "localizedPolicyVersionId": "PKlmfCxQ", "policyId": "PEJllluR", "policyVersionId": "u8BesrHs"}, {"isAccepted": false, "localizedPolicyVersionId": "FGG6N41X", "policyId": "JtDjwMz9", "policyVersionId": "Mmna95jf"}], "authType": "EMAILPASSWD", "country": "UebcNcyZ", "dateOfBirth": "yV4EjYrZ", "displayName": "yFHvwW2a", "emailAddress": "Z1sNnk9S", "password": "OoHe3oPk", "passwordMD5Sum": "DFC3xtZZ", "username": "Ssudbak4", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'PublicCreateTestUserV4' test.out

#- 328 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "u9r9zMEz", "policyId": "K2bKG5ec", "policyVersionId": "TAvW8jfB"}, {"isAccepted": true, "localizedPolicyVersionId": "SRZbWASJ", "policyId": "4Hsrxwfy", "policyVersionId": "8Q6gOKNx"}, {"isAccepted": false, "localizedPolicyVersionId": "TghsYQBh", "policyId": "XcvK7w1R", "policyVersionId": "TLhCYoHm"}], "authType": "EMAILPASSWD", "code": "1t81itep", "country": "0XNhtBF2", "dateOfBirth": "8XwY9yhg", "displayName": "mPRS0yaI", "emailAddress": "lWgQSHGQ", "password": "JiC3w1Dm", "passwordMD5Sum": "Wyi6JYIH", "reachMinimumAge": true, "username": "jZYzsvE3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'PublicCreateUserV4' test.out

#- 329 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "zMgwBBXr", "policyId": "ZUinvvAy", "policyVersionId": "tI4Mvckr"}, {"isAccepted": true, "localizedPolicyVersionId": "8IkivAHn", "policyId": "YrCzpzX1", "policyVersionId": "aiMlTUXN"}, {"isAccepted": false, "localizedPolicyVersionId": "WJylcjzv", "policyId": "vkaMdMbv", "policyVersionId": "OVHpDuj0"}], "authType": "EMAILPASSWD", "country": "eICO118A", "dateOfBirth": "Bdc679VN", "displayName": "3vq3fhbd", "password": "2ef19kxM", "reachMinimumAge": false, "username": "4483Yu7u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId '0B1LjjFA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'CreateUserFromInvitationV4' test.out

#- 330 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "qmrqTAUS", "country": "gJC3AlgK", "dateOfBirth": "c2zmSYVp", "displayName": "e7g2yHvi", "languageTag": "fABianL3", "userName": "TT9GnT5m"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'PublicUpdateUserV4' test.out

#- 331 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "PJCJhHkI", "emailAddress": "ZEt1tfvj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicUpdateUserEmailAddressV4' test.out

#- 332 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "c8anGDGf", "country": "QjctW3qY", "dateOfBirth": "IAZ6l7JR", "displayName": "68dQ3uCa", "emailAddress": "z8Y5wLit", "password": "x6V5jHas", "reachMinimumAge": false, "username": "wHgOsQLy", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 333 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "ecau5Fpv", "password": "WkPMSVH1", "username": "Rc8LmjWM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicUpgradeHeadlessAccountV4' test.out

#- 334 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 334 'PublicDisableMyAuthenticatorV4' test.out

#- 335 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code '8kR95s4r' \
    > test.out 2>&1
eval_tap $? 335 'PublicEnableMyAuthenticatorV4' test.out

#- 336 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 336 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 337 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 337 'PublicGetMyBackupCodesV4' test.out

#- 338 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 338 'PublicGenerateMyBackupCodesV4' test.out

#- 339 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 339 'PublicDisableMyBackupCodesV4' test.out

#- 340 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 340 'PublicDownloadMyBackupCodesV4' test.out

#- 341 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 341 'PublicEnableMyBackupCodesV4' test.out

#- 342 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'mhPvJeoS' \
    > test.out 2>&1
eval_tap $? 342 'PublicRemoveTrustedDeviceV4' test.out

#- 343 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 343 'PublicSendMyMFAEmailCodeV4' test.out

#- 344 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 344 'PublicDisableMyEmailV4' test.out

#- 345 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'PKuuQeJN' \
    > test.out 2>&1
eval_tap $? 345 'PublicEnableMyEmailV4' test.out

#- 346 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'PublicGetMyEnabledFactorsV4' test.out

#- 347 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor '8uD00S2o' \
    > test.out 2>&1
eval_tap $? 347 'PublicMakeFactorMyDefaultV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE