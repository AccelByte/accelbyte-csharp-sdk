#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..363"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "bBuz5zkoaUEzGS3q", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["QwkRRHkaiKsmIiRL", "R3IlNJKxhPfWV6dI", "abcFbSmeuIBroF7b"], "preferRegex": true, "regex": "XFeqeuI2oMJ0cgAo"}, "blockedWord": ["GfXepE3r5AQUBqS8", "KtTYZLJ58QqcV3Ic", "uNs9MF5BT2KD18yr"], "description": [{"language": "WorpC65VJh4q1z1K", "message": ["JmKedBfbWvKa5Ou1", "24TsbQsxYFxGGHrf", "QkgXkiA5IZPqCqp9"]}, {"language": "vcyt67WAfWXfUfwG", "message": ["B03tz8qIH4uRdNO0", "8HN6s9p8Y5c9eItJ", "tiNmY3y3n2Rim4NB"]}, {"language": "qhuNtj8FOvKZjs1t", "message": ["LpERf77LzPoORBkR", "mZ0A2zyZsb4FvWFI", "HPIbOjpls9BZTYc5"]}], "isCustomRegex": true, "letterCase": "pnnEckHH8kT9oXVa", "maxLength": 27, "maxRepeatingAlphaNum": 9, "maxRepeatingSpecialCharacter": 7, "minCharType": 58, "minLength": 10, "regex": "aS6qyUCscHXs8PlO", "specialCharacterLocation": "BlfUOqv7WmCuqcsN", "specialCharacters": ["M7YAnbq4DjmYUMhD", "9qU89D356pVsUtNa", "nddzgwxYdQc5hEfe"]}}, {"field": "fdopcEM0JHfof2Hw", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "avatarConfig": {"allowedPrefixes": ["RXJdoSTxNCK9AIjN", "mbfoW8bDq5jPqzhN", "0YdGSrA9LXRwU6WL"], "preferRegex": false, "regex": "50xCDlPeNq0CvMXt"}, "blockedWord": ["yUWXrdZaFeacGT2x", "6o28Njxyw7RHldq0", "m7NjUZ95Z5XDLBN9"], "description": [{"language": "YGVPtkjt0OyBlJi4", "message": ["RbZ0Iy11mfOFjCzZ", "VcGomWF1oAqUNFDt", "XnXLvOAsW8wYh4gq"]}, {"language": "7pRVZVLJiDx3au9b", "message": ["9QjhzDlnJmi4XaBT", "goXjfdUQHa3RxspS", "qwdbTR2sgzfaQrUC"]}, {"language": "W9fgo69uv1bkFx8D", "message": ["mbC9UqYdYrdxNnuM", "cAwrSzYnrcetxObe", "isZelKuD0iJ6fs3z"]}], "isCustomRegex": true, "letterCase": "H4WxGWRH7fz4BdPh", "maxLength": 77, "maxRepeatingAlphaNum": 39, "maxRepeatingSpecialCharacter": 10, "minCharType": 69, "minLength": 28, "regex": "RJOImSq37aeAaGq0", "specialCharacterLocation": "NIj53gXkmrayvcIY", "specialCharacters": ["iWxIAxfvLzSpDFY3", "lxe16KsSRzkf2HzB", "cEio5UyvuFv5z6wo"]}}, {"field": "sJGnUyCMEbHh1uE4", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "avatarConfig": {"allowedPrefixes": ["jjaNCRV3hSIiTEoT", "CSxjAqg9oGVEdC8m", "Qir1Af0G6OrPH6Zs"], "preferRegex": false, "regex": "Vu27iwplLJdzYS9K"}, "blockedWord": ["0VvwE6MAqPc8lGIY", "WTwxyqQQIXVmrtRl", "q1jv60HTnmFrl3gY"], "description": [{"language": "x6Xmv1DzPHux3k3s", "message": ["khn3mWZjTYM95e4a", "a8xOJu7rNRVdygfK", "mUkzj9mHFpff2vDk"]}, {"language": "z68zorEgcExv9nKM", "message": ["OgO5W8SUaZjCpNtJ", "SMm8kDi3Rwubq7wt", "RGdT447Oa51m6VLf"]}, {"language": "jsw270pMmOQJrpEB", "message": ["bVvBn8Lsf2qSAtiz", "V9hzsVbpJLtEZjuy", "FhvbxX2DNbknfVv4"]}], "isCustomRegex": false, "letterCase": "XP8jBjK81t2V9TVa", "maxLength": 42, "maxRepeatingAlphaNum": 90, "maxRepeatingSpecialCharacter": 65, "minCharType": 48, "minLength": 5, "regex": "cREyU5CwqGJF6nDi", "specialCharacterLocation": "33Iztr2QcwlRrReR", "specialCharacters": ["ajlpk8lfuiJVcktl", "x9zJZVVCc9bpIHEW", "QMmCkIqwqpoTVCNr"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'caVozsjIXO2EUsAf' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'Bvo6Llcalks2R3VM' \
    --before 'tipTVxXAF8KhOKqb' \
    --limit '36' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 64, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'CijFxOpOzxeTLJQs' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'cTEzXaXUzpsAV6ct' \
    --limit '55' \
    --offset '71' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "OntGCwQSHHdPLwjT", "comment": "ngrvb2E1X9ecBBhR", "endDate": "AYjR7c4x5bIk8pVp", "reason": "xdUWOPel3TiwTycq", "skipNotif": true, "userIds": ["zt2OVBTLwSH8hWRU", "9pbItGQ7VUWBhGol", "wafIfbF1GLFnrQ4T"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "5cmw7U1TxiS06UEo", "userId": "aDZpXOWzpXOi2cpa"}, {"banId": "jtqcXjPkj2IzU3ME", "userId": "pCt1IjlfHJM92t9j"}, {"banId": "1XT2ErwIxkaTnYtr", "userId": "1YDnaXB0JOS4XKVT"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId '66sHYPgVsfhoEidK' \
    --clientName 'w4IP0NVnaangorhV' \
    --clientType 'FpTRuQyMroT2hNfK' \
    --limit '72' \
    --offset '29' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["q8sifSPmYSsBxtyK", "WssEn5VEvIMEB4pl", "506fLCG6EAl7d3Ks"], "baseUri": "65thtnjcMSw1J42f", "clientId": "thKUobas2CAlSxxV", "clientName": "hDR9hlaznetBUGcQ", "clientPermissions": [{"action": 53, "resource": "KsCBBgwb1hGjHJgx", "schedAction": 36, "schedCron": "9cdzaLnajQ8GnJpA", "schedRange": ["Liddv9UUtG1tEECs", "m8xaDOz0tMlpFuJV", "Xo9s0JPG8cgjHQo9"]}, {"action": 68, "resource": "BB1yz3iP8gH88Uen", "schedAction": 23, "schedCron": "r8wR0tuwIJnrSI2I", "schedRange": ["FcRwSoMTuJziuDNb", "Oydiu3lOaruuYw0i", "Uuts6bChMK1gcx8p"]}, {"action": 2, "resource": "fyv5PoMJeTIQix1F", "schedAction": 62, "schedCron": "FcxS2OZZfXO3HkJT", "schedRange": ["OPscPA2n25C1zEnA", "MGmFy7w6eqnMeKFo", "7U8Scr9xm68w7s9R"]}], "clientPlatform": "Mx2hc45QX234xnql", "deletable": false, "description": "ETQCBPK1mYwKVQoy", "namespace": "dbYjXZyBpqhCJBtF", "oauthAccessTokenExpiration": 83, "oauthAccessTokenExpirationTimeUnit": "biJEUePVZQaoEY2z", "oauthClientType": "rpLuvrx96OOz45vM", "oauthRefreshTokenExpiration": 18, "oauthRefreshTokenExpirationTimeUnit": "U8GP8TRVypSvYXKz", "parentNamespace": "4BGjbsrRBV8aztJ8", "redirectUri": "6yQK1AsC18UO6JcX", "scopes": ["mwQfkseTpH6l2Dv8", "SvqYKc56PcPSL2xm", "jViKkKw4gHA4CaLs"], "secret": "PqRsTdKzcKtkGcvn", "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'Wse6VLPkM1VTrQBy' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'whJ7lbBLw9xy1WQM' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["5qUS8baUqkzSr41y", "6RPBHJuPjj8zDwOk", "0IgmYfUTpFzyQhPV"], "baseUri": "hRGX9xlUKhXI8mL8", "clientName": "OIhvP68xE68dzohx", "clientPermissions": [{"action": 15, "resource": "FJHWE6s13b7dmnPi", "schedAction": 20, "schedCron": "hp3qY6T7TUEBotSN", "schedRange": ["IwGhia6cqoWmnhtu", "zxir12r0VUWI0kJA", "czj5ApcsiEQ65llg"]}, {"action": 67, "resource": "qoxujXDosOo2kSUf", "schedAction": 70, "schedCron": "KlbPRxfucxoRKFLx", "schedRange": ["xcL9SyuHbvRxR6La", "KWgAVjZKDxiezEbu", "MCz9J4dPRGzoQLYI"]}, {"action": 99, "resource": "LcgKgU9406tdRDqr", "schedAction": 28, "schedCron": "cpVbaH69NyTfGE59", "schedRange": ["942bCwgpzUfcmTQj", "RmV0CPt1LUaTvrFa", "xzOfG3pTddIA0Rt6"]}], "clientPlatform": "wM5oQvTMICtWyUtV", "deletable": true, "description": "IqWmOoMyYp2tSrLx", "namespace": "pJnj9JtgjWmjx1Wu", "oauthAccessTokenExpiration": 81, "oauthAccessTokenExpirationTimeUnit": "JTYuHpnpVX5u4gw4", "oauthRefreshTokenExpiration": 98, "oauthRefreshTokenExpirationTimeUnit": "BXDD7BG73sDdDoXn", "redirectUri": "B8F5X05KUgGKfDSG", "scopes": ["h3vQFPSYCi8WEjR3", "wqpnMdSNskxhl3O3", "kGloooh7kL598P7F"], "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'hiNdx1V7199NT7JT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 90, "resource": "SR9q6l5k9BLQMrPo"}, {"action": 93, "resource": "kG09iEAFYWhow1WA"}, {"action": 47, "resource": "QEAbK416LN2N6D6y"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'czitn4OkZfx0Xa6s' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 14, "resource": "HoQ6ehLLK5h1bE9W"}, {"action": 96, "resource": "FQsvRHbGTC2ynue7"}, {"action": 79, "resource": "k4uDF5mdakWJ2AsK"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'f8UfQqTQ8v7gXyFu' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '76' \
    --clientId 'IaPEkCIXX7WQ3ytA' \
    --namespace $AB_NAMESPACE \
    --resource 'BCzYWxYbbphuiQPU' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 AdminGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    --filterBlacklist 'true' \
    > test.out 2>&1
eval_tap $? 128 'AdminGetCountryListV3' test.out

#- 129 AdminGetCountryBlacklistV3
$CLI_EXE \
    --sn iam \
    --op AdminGetCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'AdminGetCountryBlacklistV3' test.out

#- 130 AdminAddCountryBlacklistV3
# body param: body
echo '{"blacklist": ["aS2OIp0B2FWiDu7P", "OaotJoQQyL1bCDNi", "sOhjEKFWmj7ioi5W"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddCountryBlacklistV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AdminAddCountryBlacklistV3' test.out

#- 131 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 131 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 132 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 132 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 133 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '61' \
    --offset '71' \
    > test.out 2>&1
eval_tap $? 133 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 134 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ymQeVSZZma57V6b9' \
    > test.out 2>&1
eval_tap $? 134 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 135 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "uLloAA9KoetyNPkg", "AWSCognitoRegion": "WcTCN7aBIFfeRdnH", "AWSCognitoUserPool": "pse2T7eZwkVrB3GS", "AllowedClients": ["EmVq8CjR5rCx0ZiH", "wUqL5rITYFhcdeNw", "LmZenRqEBM0VGzhV"], "AppId": "VGdipdi33u9U14rG", "AuthorizationEndpoint": "wvMExAllZtPzNRiR", "ClientId": "35CZhclugjyDzCPI", "Environment": "8tslD0HuRrAMzMB9", "FederationMetadataURL": "XHHkfZgB6Vt5qWaa", "GenericOauthFlow": false, "IsActive": false, "Issuer": "3SboVKgjsryC98wh", "JWKSEndpoint": "mI5koBT6iCuVa643", "KeyID": "kk8gvvnsu0ABei0g", "NetflixCertificates": {"encryptedPrivateKey": "o2wsmPfpsbkzAIsJ", "encryptedPrivateKeyName": "06QlFCAa55r89MdF", "publicCertificate": "idv2kFVXgnjrAfzE", "publicCertificateName": "n26mHgxUgVDgnlU5", "rootCertificate": "H2ULa1LYlsqYrUpX", "rootCertificateName": "ncYv2BVIS1BtMqvd"}, "OrganizationId": "E5QQizMBWYPYerJ1", "PlatformName": "FmKBX6U18gMIl7TS", "RedirectUri": "Pm96MsoQcFDfKSJy", "RegisteredDomains": [{"affectedClientIDs": ["mqZ5tDVsJ63mFWW0", "u95r5ylQKcWi0o5z", "cWp7NiTBI4m6PVEQ"], "domain": "WCNw7DHkXx8NqXaR", "namespaces": ["2w60X5Vb0TV0x3nm", "q9UCZbdVFY3WdZ6l", "uOW977EgotvOrnRj"], "roleId": "b5UT6Vf5jxoBBg2l"}, {"affectedClientIDs": ["M3DQXyC3oKu14sRj", "kCeuRY0tsnbKAGRT", "CvAZKiSB7bYvWmbU"], "domain": "bWlRZtcIUry87yJB", "namespaces": ["lfjPI5tfjbyZkYSR", "LBMgcD5OJgp6wHyn", "VKwWgdAibFBESdI0"], "roleId": "Ab1zgjMC3hp1s4tE"}, {"affectedClientIDs": ["lQhEA9ThpSbyAYJe", "BCrKDcRkI5LI6Uqi", "vHoIArvDT62TaGFS"], "domain": "xd4y808Fey8nfaGE", "namespaces": ["w6BAuz1YkANj6LHa", "NMxGL2cjWg68JcPw", "qh2N4nelbmKVyNZY"], "roleId": "8IVtOeznPwNRnztP"}], "Secret": "1VeNj0XYtINcOQIi", "TeamID": "LdvpuYVOAU9uuKPG", "TokenAuthenticationType": "NN6m8BLNzJxMR9F8", "TokenClaimsMapping": {"QPVUh3Fxn8VCvtdi": "iwNMAdIodiW3hcYu", "KSRkkKQKIVOduQww": "DrBnpQpIKdlw0Q8Q", "m0lpTupwpI0MCORO": "WHgnYO9A4NtX4m0L"}, "TokenEndpoint": "4BGxxcKUh2wepEjv", "UserInfoEndpoint": "h8sTPE7JfL8ZG7IB", "UserInfoHTTPMethod": "iOpvSKRmJcE8fHWU", "scopes": ["8tF9Tj5DH9jDJgqZ", "agf9TfKsyiaqf0Vf", "idvwpghGz92mfgwf"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ewY0DMU8QuojVb8Q' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 136 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gdEnIEDOXPqBEIQJ' \
    > test.out 2>&1
eval_tap $? 136 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 137 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "92jD6Oo7qDSKsqbe", "AWSCognitoRegion": "uvGhaO0uibTsnryc", "AWSCognitoUserPool": "su5Q9BFGk7WCNwFD", "AllowedClients": ["vIhdx6Z0l07ceeKM", "sQFyZCXx6V8vj07W", "kqficTXXWpfaSkgX"], "AppId": "o8j70KrUcPducAeJ", "AuthorizationEndpoint": "onNs4KunUYQNVjao", "ClientId": "ZkB3AI1r9iOvxo4s", "Environment": "O2v2SBoI1cMTFoDv", "FederationMetadataURL": "nFjF7PyPSihYagCD", "GenericOauthFlow": false, "IsActive": false, "Issuer": "wXpzPB56b3OlkJK0", "JWKSEndpoint": "TMs61QJU3NQDgVJl", "KeyID": "jnvyeys0Kd9lSy4d", "NetflixCertificates": {"encryptedPrivateKey": "XRirNN1XTVbZINAY", "encryptedPrivateKeyName": "TfmDdnbfKLdllLcr", "publicCertificate": "gG7MUCvBQxDMKfZn", "publicCertificateName": "QUHzroRILUYE0mbv", "rootCertificate": "UdfY0BqpFwpFSBit", "rootCertificateName": "prtx35PWwBW4wLAS"}, "OrganizationId": "mNzxcUMh0SvR4rhL", "PlatformName": "LvUwAWnj9yPsgbHD", "RedirectUri": "uaBMlhmWv2CjjBQf", "RegisteredDomains": [{"affectedClientIDs": ["nFyRj8oJlSSFh8ZL", "YsKNsz83B3uSAH6Q", "CBczexoUjGKIDYp3"], "domain": "uk6SY3LbL8Ij6Hou", "namespaces": ["1skD80rM9MH0bGRe", "YemseR492ILQLV79", "lT8sZwaopSrf16qA"], "roleId": "bt38yZTqfCi5CJgL"}, {"affectedClientIDs": ["U0r1txp0vdRA0J8e", "LCZrcT7EO7zBX353", "qlmBOmzDZoLl4yLZ"], "domain": "gHlatL7nbsrfkzQM", "namespaces": ["5RtMqCRiYe7QxHte", "M0QsfB4cKcpv0nqs", "AzwhiinZMK2PQePn"], "roleId": "MgPL2upEuzGkAuUg"}, {"affectedClientIDs": ["Ss7KjVR3KElIaqQc", "qk3EvPPboGcBp08H", "0whjTC8Q254CIig9"], "domain": "3OcDTSDDbtG4kbF7", "namespaces": ["EcYPAe3TKjWJizZ7", "3YhEdqt8LYH7I8lY", "D68ZI9yJ2FmHnprt"], "roleId": "y5BQCd5sVLr7TlnK"}], "Secret": "nQhYH2PkwSPXdYk0", "TeamID": "YxFNno9WQq9ZHHjr", "TokenAuthenticationType": "wqKsa8ZqhezPIlBt", "TokenClaimsMapping": {"GhWc8fY9HfUsEaPx": "VM4cVRtjpUequcPW", "ZP6mJ5k9QPUVO9el": "CnXCnhXRiCBS6wON", "O7EzD1HwKEgGh6Mc": "tPOqg2vfaFiXbkyx"}, "TokenEndpoint": "YVJYoECX5Zk7zrqR", "UserInfoEndpoint": "FfKg2QLfgPky92H0", "UserInfoHTTPMethod": "SjmRKLX0YyNLgOIb", "scopes": ["DguxdqP6c448AniK", "Djnb5cFYyJtzDcKD", "3CR18eggGJVXROWQ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'LNP4J0I2wDjuMHSk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 137 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 138 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["nrvHsarToh01sSae", "PBAWrnMRr0i4i3zn", "plxZVkkzCuWXN0pi"], "assignedNamespaces": ["9oHwFFSWlYJSaX14", "Onxc82WUAqFNlxPL", "5ZjWvAiWvl12Eydd"], "domain": "bFelmB60OEQrMIsK", "roleId": "Cf8GsPEl1i9RQ9tN"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'v9ZoFgoU8geQqTHs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 139 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "gesxUdeb2FJbsqzk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'OO5TgVxhorx7Olr6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 139 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 140 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'yZsG5AHeXjxQCmc8' \
    > test.out 2>&1
eval_tap $? 140 'RetrieveSSOLoginPlatformCredential' test.out

#- 141 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "jD3q7UouREPLDNt6", "apiKey": "Bi4udSrXnIItduiU", "appId": "uy8tq9HCTgLSuFiv", "federationMetadataUrl": "2W3x38AyIWIiWAkZ", "isActive": false, "redirectUri": "02LciOGbTW0UOPod", "secret": "tVEAHUTPJcWSRPDF", "ssoUrl": "dkQZDrW0M7eIDrif"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'b9ovouuoyV36gCeh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 141 'AddSSOLoginPlatformCredential' test.out

#- 142 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'JP43Xpu5gyQ14gMP' \
    > test.out 2>&1
eval_tap $? 142 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 143 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "9Z4mEvMNjtERuv6N", "apiKey": "rO6SjBOH0izSSpVo", "appId": "q4E6CtycfHMbZoBg", "federationMetadataUrl": "zDSnBtqToPbBDwdv", "isActive": true, "redirectUri": "VFTK8mQqqA2VoUKB", "secret": "lsPXL4ibYVB9w0ET", "ssoUrl": "fSauutS9JWgSB39n"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'WJ0AdErhRmHmtCl6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'UpdateSSOPlatformCredential' test.out

#- 144 AdminListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["M85ELRv5NEe9bR9c", "kNLMJjsgaXBRR415", "WJviuc5vA36xYMMP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ep0zplFiRg22RpUV' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AdminListUserIDByPlatformUserIDsV3' test.out

#- 145 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'mZNfIZBEmg9ppW9k' \
    --platformUserId 'qHg6qWRr5OGM3cUF' \
    > test.out 2>&1
eval_tap $? 145 'AdminGetUserByPlatformUserIDV3' test.out

#- 146 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'nnf4mVneUyBHCEsH' \
    --after '30' \
    --before '50' \
    --limit '95' \
    > test.out 2>&1
eval_tap $? 146 'GetAdminUsersByRoleIdV3' test.out

#- 147 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'Yg5fkChtyUjcBHSh' \
    > test.out 2>&1
eval_tap $? 147 'AdminGetUserByEmailAddressV3' test.out

#- 148 AdminGetBulkUserBanV3
# body param: body
echo '{"bulkUserId": ["oy4rAmtQkeCoVHY8", "9b92PWEF9gisonsV", "tIIBDDZzSa012J2V"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserBanV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'RurPzBSUlLhIUZaq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'AdminGetBulkUserBanV3' test.out

#- 149 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["DR1n6aKcCVL5Fd1b", "8wgnlhP7Pg5lC7Ea", "270WU05apXkWulzf"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'AdminListUserIDByUserIDsV3' test.out

#- 150 AdminBulkGetUsersPlatform
# body param: body
echo '{"userIds": ["NESEwZkxwcIoptsi", "G0JEo50u4dtDARQg", "hCkujmLLnrNNSLh3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkGetUsersPlatform \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminBulkGetUsersPlatform' test.out

#- 151 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["6UQbPSJQQhceSla9", "ERYYip5g4u0MAPcV", "PH3gZ7BL95xBXZ4Q"], "isAdmin": false, "namespace": "yYxP6eRLWH719H0S", "roles": ["96d6o92O9JTphnwO", "fFzh20ovT23TbEK3", "bM30lxx1rT6fsKa4"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'AdminInviteUserV3' test.out

#- 152 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '71' \
    --offset '73' \
    --platformUserId 'gtUwYePFCH42h6Lu' \
    --platformId 'cfBcrN83Rs41H9Ay' \
    > test.out 2>&1
eval_tap $? 152 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 153 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '1' \
    --offset '54' \
    > test.out 2>&1
eval_tap $? 153 'AdminListUsersV3' test.out

#- 154 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '2Ugl7sPCMcCq8KOF' \
    --endDate '1FPASWEGLvHi2yA6' \
    --includeTotal 'true' \
    --limit '72' \
    --offset '0' \
    --platformBy 'JoVWUuZ6fQXMhnC8' \
    --platformId 'iRACppkc2GjnJ6Mq' \
    --query 'okeFNTOal7C9QhMy' \
    --startDate 'KSxoXxGxkYjDcp3p' \
    > test.out 2>&1
eval_tap $? 154 'AdminSearchUserV3' test.out

#- 155 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["GTMJShikvBpSOkSV", "huAqkZqR3gW3GfD7", "JtchRl8UCypNxxUb"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminGetBulkUserByEmailAddressV3' test.out

#- 156 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'XgFF9TJrlNNryir2' \
    > test.out 2>&1
eval_tap $? 156 'AdminGetUserByUserIdV3' test.out

#- 157 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "rcfzqMDXs2AMIqwX", "country": "xAtcjA062eWYCE2B", "dateOfBirth": "ZKl6Ks6ND0evlW05", "displayName": "Ize0EKI1ogofwrtj", "languageTag": "PjSrjvrgKMZ79d1x", "userName": "h7UR0UxrnZ5OMXgR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DRM3gg9nVFQuxaks' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminUpdateUserV3' test.out

#- 158 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qHEV6l9c1J0YV5SA' \
    --activeOnly 'true' \
    --after 'WFWpU4iAd1zlFBNJ' \
    --before 'u2WkeGDSzlCaFt7C' \
    --limit '42' \
    > test.out 2>&1
eval_tap $? 158 'AdminGetUserBanV3' test.out

#- 159 AdminBanUserV3
# body param: body
echo '{"ban": "MfYcKvIDQryhqRPw", "comment": "aSbAakeTI3GtLp33", "endDate": "o0hY1hJyjnnZKdSi", "reason": "FaVEfxNwD82TygHq", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'CY44tteOU73MUia8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminBanUserV3' test.out

#- 160 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'bcNco2qPofshHt88' \
    --namespace $AB_NAMESPACE \
    --userId 'ZrOopYOMqbJVfyl0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminUpdateUserBanV3' test.out

#- 161 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "ssL0Nn5BZz9qxx7l", "emailAddress": "z9uMrrT54dKxRwFR", "languageTag": "slFsKiWo4atNdaNI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'XOzCVa9CaE9mVJJq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'AdminSendVerificationCodeV3' test.out

#- 162 AdminVerifyAccountV3
# body param: body
echo '{"Code": "gitULlhI9rKPyF7y", "ContactType": "tpQiDiCAh2lkPXOO", "LanguageTag": "Jp91w7ACgmrezLCJ", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LPrwjeYeJi9q4KUg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminVerifyAccountV3' test.out

#- 163 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'zZZ6zaaAvvKi9jeE' \
    > test.out 2>&1
eval_tap $? 163 'GetUserVerificationCode' test.out

#- 164 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'rSpDVNGzTIFbOjIM' \
    > test.out 2>&1
eval_tap $? 164 'AdminGetUserDeletionStatusV3' test.out

#- 165 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"deletionDate": 27, "enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'VmJhvzYUD7tt15VY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminUpdateUserDeletionStatusV3' test.out

#- 166 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "MNdywySdXRVEBpth", "country": "oAfzvXP7hfNyBM3W", "dateOfBirth": "7FEjbI46oLZUugcy", "displayName": "Zei70cPKSdQKPk36", "emailAddress": "TgDFyRpEbkRLet6q", "password": "HFzUAAIA1yZDTGyG", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xyWH1R8xeeueyWn4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminUpgradeHeadlessAccountV3' test.out

#- 167 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YodSIhZNsnN86Ssq' \
    > test.out 2>&1
eval_tap $? 167 'AdminDeleteUserInformationV3' test.out

#- 168 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'D74VrPBlaPDrv6Eb' \
    --after '0.9631100326282026' \
    --before '0.4669007652678464' \
    --limit '2' \
    > test.out 2>&1
eval_tap $? 168 'AdminGetUserLoginHistoriesV3' test.out

#- 169 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "TDsTGVcn6u2Y8kRS", "newPassword": "lfFVNtTCFUDbhXFU", "oldPassword": "MPgIsF2FaJmavnpw"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vlN5bxb3zVGiVgmT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminResetPasswordV3' test.out

#- 170 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 17, "Resource": "1TgaU2K2n1JMpCmL", "SchedAction": 54, "SchedCron": "9mqTkN4IEuQISWdQ", "SchedRange": ["728o1qclvhlm929z", "MAdlyXyqtmIwkhB1", "niuOHHkEMM2LdYul"]}, {"Action": 83, "Resource": "TiqSRiBbSv5Mu9ps", "SchedAction": 31, "SchedCron": "uB1wMD51VeGbfpAA", "SchedRange": ["YyBbEy0fEmRKPynE", "1Ulth6WUsfyOIdVf", "GOJIPb5iLNRM7JFa"]}, {"Action": 41, "Resource": "RPzKX3k2xmrmuw7X", "SchedAction": 30, "SchedCron": "FmU24Z5anp1Fr9Ph", "SchedRange": ["X008zkRCTEr3CbX1", "jCvt8SZQVAQVTEjL", "xRXXw1Ba3BCLDK9E"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'HH019QefK1Zmj8Wf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 170 'AdminUpdateUserPermissionV3' test.out

#- 171 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 67, "Resource": "XMirtY3mMswJSdKi", "SchedAction": 0, "SchedCron": "OEuv5vimn63Casxq", "SchedRange": ["y2jZLzE1twcaIT8f", "i9jXsmtxDfayxSlb", "89FR48VT5BKwgRAI"]}, {"Action": 87, "Resource": "kK0AIGdEbxsUwJLz", "SchedAction": 45, "SchedCron": "VZFHDmlKMyosJXwZ", "SchedRange": ["bP6pG2cmQhEgLUgz", "cFvsZ7ws7IsSADlM", "888Xt8E5iE51ruSZ"]}, {"Action": 19, "Resource": "53e9fDb7M4vfe4Fy", "SchedAction": 22, "SchedCron": "l7Mr5hH9GexcdbT8", "SchedRange": ["v3UhVtgg8kRaAVvE", "6mqqeoTT0uNoVVn7", "ItFFSEoUy7DgmV5m"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'D3u0JWhmI5cbJHxH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminAddUserPermissionsV3' test.out

#- 172 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 44, "Resource": "7DGHTswv6V7PYLXB"}, {"Action": 48, "Resource": "GO0c6aXoFM9JtzYy"}, {"Action": 28, "Resource": "6oSQsOH1Xbs430fG"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mUXScgZStYmu7rsm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminDeleteUserPermissionBulkV3' test.out

#- 173 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '72' \
    --namespace $AB_NAMESPACE \
    --resource 'IwynIAbBloI0YJYX' \
    --userId 'W2uzKWNGYBQtqkaX' \
    > test.out 2>&1
eval_tap $? 173 'AdminDeleteUserPermissionV3' test.out

#- 174 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '58cIGPaIh2fIggFF' \
    --after 'HPcxOtLAhTn1phgl' \
    --before 'YoAkb9a7zwipvdA2' \
    --limit '49' \
    --platformId 'Xi3eLkvnj2FHRRu0' \
    > test.out 2>&1
eval_tap $? 174 'AdminGetUserPlatformAccountsV3' test.out

#- 175 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'umwsxpdZ1WWgZKlu' \
    > test.out 2>&1
eval_tap $? 175 'AdminGetListJusticePlatformAccounts' test.out

#- 176 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'L2AcsKLs4xA7pgTn' \
    --userId 'AOS7ZVDYbaZdRyWB' \
    > test.out 2>&1
eval_tap $? 176 'AdminGetUserMapping' test.out

#- 177 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'XrjEfLoBc63d2CjP' \
    --userId 'St7u9HWKXy95GCrx' \
    > test.out 2>&1
eval_tap $? 177 'AdminCreateJusticeUser' test.out

#- 178 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "rJkGMw7ZL0l1KamH", "platformUserId": "kjtv5cJwGEcC7aGI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '9Staa4kc8IEXb91i' \
    --skipConflict 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminLinkPlatformAccount' test.out

#- 179 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "Iok1kMM49oWBLBOt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yL1dHNmowMhMKGNE' \
    --userId 'D5ygPVLMM3usQQXn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminPlatformUnlinkV3' test.out

#- 180 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'eBGj9AjnpSvpMEa0' \
    --userId 'Lvq2wnqyklrvhee7' \
    --ticket 'EeSqy9kO3ZjWNov1' \
    > test.out 2>&1
eval_tap $? 180 'AdminPlatformLinkV3' test.out

#- 181 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'zjWKMDhaV2fsQ3Dl' \
    --userId 'rWTmYVuz6shya81W' \
    --platformToken 'nWLIEMQX6yIuvLV2' \
    > test.out 2>&1
eval_tap $? 181 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 182 AdminGetUserSinglePlatformAccount
$CLI_EXE \
    --sn iam \
    --op AdminGetUserSinglePlatformAccount \
    --namespace $AB_NAMESPACE \
    --platformId 'SAA8KoDH2te6X3S3' \
    --userId 'HwJUMVxEYAqoGebW' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetUserSinglePlatformAccount' test.out

#- 183 AdminDeleteUserRolesV3
# body param: body
echo '["Dx1rIY7YgqLazmwa", "TdH4Cz8G7R8H7IL8", "v5O1r7P5inUTEQGS"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KH2wQE3rMpBR96V4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminDeleteUserRolesV3' test.out

#- 184 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "wCGhThbt8E3jI5Uo", "roleId": "WvqFZQoL3OUkQDJf"}, {"namespace": "t6r5a3gptbNLX0aE", "roleId": "LOa6N75cogVkZy2V"}, {"namespace": "8uOMXE5zaiqfUuDb", "roleId": "ogZiwydwzfWPCVvL"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LFNSKl79V2ucJ4eD' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminSaveUserRoleV3' test.out

#- 185 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'QyH46uQbTHK5X3o9' \
    --userId '4hUU3uq7jQcfShtE' \
    > test.out 2>&1
eval_tap $? 185 'AdminAddUserRoleV3' test.out

#- 186 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'tVr2SVT1NiSinLAN' \
    --userId 'ULfgmYSJIzEBkXmc' \
    > test.out 2>&1
eval_tap $? 186 'AdminDeleteUserRoleV3' test.out

#- 187 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "FhrwrUKt0S1mnKCB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DLO5p7AU8haiJAyC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminUpdateUserStatusV3' test.out

#- 188 AdminTrustlyUpdateUserIdentity
# body param: body
echo '{"emailAddress": "ejYVpU1pdEtrpKrb", "password": "Vk9u7GLgME7wGiU2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminTrustlyUpdateUserIdentity \
    --namespace $AB_NAMESPACE \
    --userId 'biCXBTngfX2J8Yqv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminTrustlyUpdateUserIdentity' test.out

#- 189 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fwThZ7F6KgWP0pCW' \
    > test.out 2>&1
eval_tap $? 189 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 190 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "1LZjascU9sDwKvow"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'vGWWtzd8NYVjEQMi' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminUpdateClientSecretV3' test.out

#- 191 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'QNEKqmY3Qc7Gush1' \
    --before 'JYbd03QSrNZ2SbLc' \
    --isWildcard 'true' \
    --limit '30' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetRolesV3' test.out

#- 192 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "managers": [{"displayName": "q2iYdEtbYSFJ0DhV", "namespace": "UMO4DrPdmXHPzNfJ", "userId": "H1o81DNVWftg4eXb"}, {"displayName": "I1TK5tf2OW6O9zv4", "namespace": "LwcYHUKZcfngNWZw", "userId": "jfs9dyJGDob1c5CO"}, {"displayName": "gUPHziOjddY12BhB", "namespace": "K4v8j8mNkaLCRNg4", "userId": "dQYhCxg6MO5yZpDV"}], "members": [{"displayName": "5MsRNMVQEyyQU7JY", "namespace": "XJt8RD2u7w8ONAaO", "userId": "8ej985DejuzY3p3E"}, {"displayName": "ElTLLLbt1V32zLaj", "namespace": "qSkaSCdxoJQJ6MzJ", "userId": "yO3qDmtY3fCWcnjv"}, {"displayName": "SFQknkXxhNoW5mCs", "namespace": "WgJYsuRmy56HZgI5", "userId": "RRTsXQnMWiRJCR1R"}], "permissions": [{"action": 68, "resource": "u8KCGAzw9U3MYdrT", "schedAction": 1, "schedCron": "23P0WHgh0pChv4BA", "schedRange": ["qsdhbbnkYPp9i7jj", "BIxJ14Hmr0ApsK8S", "Hyhula1Q38F5Rpl7"]}, {"action": 39, "resource": "BrzqZRrmma5mt7ZR", "schedAction": 60, "schedCron": "uF1ALr0GCUjtdTgD", "schedRange": ["8swTLL8aCMo5By5G", "EOeZEFaSvKATkfxr", "qTKloycgLrjGXXeG"]}, {"action": 91, "resource": "aBBDUtPeNku4PHFI", "schedAction": 57, "schedCron": "u7ITMZYSib8tq3AY", "schedRange": ["6FuZYEssL3bB0tBK", "6SBoElIIIpwn6hgB", "TwxKcx0X8Lcx6NhM"]}], "roleName": "ffZlEJvDSyHWn9St"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminCreateRoleV3' test.out

#- 193 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'f2pkUQ1nUubDHgNR' \
    > test.out 2>&1
eval_tap $? 193 'AdminGetRoleV3' test.out

#- 194 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'iTeWO4xhfJRgna2c' \
    > test.out 2>&1
eval_tap $? 194 'AdminDeleteRoleV3' test.out

#- 195 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": false, "roleName": "jGP4DNFyMdqC34ZH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'UbJ82Q45DSj87ANe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminUpdateRoleV3' test.out

#- 196 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'K7NbfOXVQ2wC19AZ' \
    > test.out 2>&1
eval_tap $? 196 'AdminGetRoleAdminStatusV3' test.out

#- 197 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'iRD7PHirjSPaaKc5' \
    > test.out 2>&1
eval_tap $? 197 'AdminUpdateAdminRoleStatusV3' test.out

#- 198 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId '6kf8Lr8MI9ZHjUXr' \
    > test.out 2>&1
eval_tap $? 198 'AdminRemoveRoleAdminV3' test.out

#- 199 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId '7TOOAJbppCaQg5KY' \
    --after 'RrxXWyNNcY6HlnIy' \
    --before 'FofDjPvpwkx70YmL' \
    --limit '20' \
    > test.out 2>&1
eval_tap $? 199 'AdminGetRoleManagersV3' test.out

#- 200 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "kOl45sMektKP6oiC", "namespace": "gSzIx7SbauCZefNM", "userId": "yuAhwDOsKkI3E8e8"}, {"displayName": "YOUCLYTf0LOYn0Uk", "namespace": "vnUqIojwgPbmzRVx", "userId": "qDG9JCw2G6n1nerW"}, {"displayName": "gr6k4wDG0ymKeZSC", "namespace": "9rPk3RoNahPKSOyU", "userId": "RWcNMiTmYevMnR3d"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId '0jp7dxw3ul0DhPHn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 200 'AdminAddRoleManagersV3' test.out

#- 201 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "z11yujNFWrirujg1", "namespace": "PBRhTBkvjjG2l3Xg", "userId": "O9Ri6d3yxvMGu7pC"}, {"displayName": "BTA7DyBPUzwcpfdd", "namespace": "W4DuDmd2nJ0ILGxD", "userId": "ZvgfJDYWfI87U2bW"}, {"displayName": "4UB39lDsCSylYEQz", "namespace": "RYvmAk081nCL8obh", "userId": "oKeoCwe6IhlEb8GD"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'fPed4WXyEv9d7nKC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 201 'AdminRemoveRoleManagersV3' test.out

#- 202 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'HoZoRhxaZfS3FTKo' \
    --after 'd2Rtew3h16g7FBpy' \
    --before 'A8YrOW3VmchYDOCA' \
    --limit '94' \
    > test.out 2>&1
eval_tap $? 202 'AdminGetRoleMembersV3' test.out

#- 203 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "bfcCW62qIhoGhn50", "namespace": "bAqk5LxBIGBHkXDI", "userId": "vHwPBu7NrTNiVqOO"}, {"displayName": "a2ZRBfbd2E9vQfgj", "namespace": "i9PoImDVDc39XbP5", "userId": "ySSO0KvLAXVKQips"}, {"displayName": "G2iIpCwuvQ0uspxK", "namespace": "HWOccE4HOaTFU34y", "userId": "yeOCSVxO3N0UkJan"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'RenRei9LuvC1l1wG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 203 'AdminAddRoleMembersV3' test.out

#- 204 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "BSlZ4sGQrcq4l41b", "namespace": "QTzoLlY5uT2tgEeE", "userId": "5HfZjxEwX2ks2x1C"}, {"displayName": "njAXdLVzER6fMHuQ", "namespace": "02mYN57gHfbSnc1s", "userId": "1DKhAomiCEQJG7Md"}, {"displayName": "trt3t8V00PL7gjUB", "namespace": "8TF6IEDjLLEPXwsu", "userId": "qKtHq72wGQM4nhrJ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'WvhMeXHev6dyGLVp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 204 'AdminRemoveRoleMembersV3' test.out

#- 205 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 8, "resource": "ROGvhwwXkhT3ifmS", "schedAction": 48, "schedCron": "KuaOcKQADcbZw9CW", "schedRange": ["DxGLOggdV2Ia84Nf", "y3pHQCG6W4m7LJuF", "Tyrt93n0doSq6P5f"]}, {"action": 70, "resource": "GQQR4aiBfhlNlfoC", "schedAction": 21, "schedCron": "XmxcovGdLchA21pn", "schedRange": ["Sv6IEDQIgDa753Hc", "61jnOiTAgsViarCW", "g8roRCRlf26FgILY"]}, {"action": 26, "resource": "AQCTADiRC9UzQSeQ", "schedAction": 1, "schedCron": "FjL5nmcK9La2ll1z", "schedRange": ["xwY7k8qq8Owqil0H", "KxHQOaQkISDzbs6w", "vuJQ2L5WZ5XEv6G4"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'nuD6kAXo5CYHqpio' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 205 'AdminUpdateRolePermissionsV3' test.out

#- 206 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 50, "resource": "gMa3m49POekyXjwK", "schedAction": 95, "schedCron": "BOVA5CN8JbXzvLl0", "schedRange": ["QvL5vyVkSOD9ySZC", "RMGjEAIE7KjPFdtA", "e7Sg874fcdPiYjNR"]}, {"action": 46, "resource": "J9wrIzjOqBn7EEL6", "schedAction": 8, "schedCron": "ZyI1AJfaR8ILlmh0", "schedRange": ["sl74SRTmBQB5VrOj", "1jPhbaXjD3OADLTm", "D2BbxTOyZ4mBzc3g"]}, {"action": 24, "resource": "3tFjbqKS5hHrXcWw", "schedAction": 62, "schedCron": "XaaWzfo42JGnZc01", "schedRange": ["KcqFIzTPRY43KoNV", "nBdo06HqJPkDnUmh", "R93WC797ieouD04K"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'NoB6GZPeuofNtHT9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 206 'AdminAddRolePermissionsV3' test.out

#- 207 AdminDeleteRolePermissionsV3
# body param: body
echo '["ynQ6xbzAAcptHncR", "NhZgiLtMTotDe8u5", "R8wj3t9RBlUZIr2x"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'hMN43pUeXpZUkwma' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 207 'AdminDeleteRolePermissionsV3' test.out

#- 208 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '9' \
    --resource '2bSs1Ad6NGdDQQuo' \
    --roleId 'ByKIY2uny7wrBNcJ' \
    > test.out 2>&1
eval_tap $? 208 'AdminDeleteRolePermissionV3' test.out

#- 209 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 209 'AdminGetMyUserV3' test.out

#- 210 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'FM5oZXy70kDwNb92' \
    --extend_exp 'true' \
    --redirect_uri '2DtbCe6QWxnxZtTu' \
    --password 'psQfU6ftlIydCJXO' \
    --request_id 'KVTAiPU6Z5yK6Imd' \
    --user_name '8xONUKTaALIcjHJN' \
    > test.out 2>&1
eval_tap $? 210 'UserAuthenticationV3' test.out

#- 211 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'Wx3ZdgJt2ZQoVuSE' \
    --linkingToken 'aLYNJJF0oGpmR9TS' \
    --password 'RI3VikDuPgBrtuHz' \
    --username 'oMsnOYBQ8vD8vjkv' \
    > test.out 2>&1
eval_tap $? 211 'AuthenticationWithPlatformLinkV3' test.out

#- 212 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --additionalData '9Ei7y22D9w95QKuC' \
    --extend_exp 'false' \
    --linkingToken 'RiRzcrIhTZVEl13g' \
    > test.out 2>&1
eval_tap $? 212 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 213 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'iNlnnOof9tQ3FFki' \
    > test.out 2>&1
eval_tap $? 213 'RequestOneTimeLinkingCodeV3' test.out

#- 214 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'Q4WmZZZotLiUKp8O' \
    > test.out 2>&1
eval_tap $? 214 'ValidateOneTimeLinkingCodeV3' test.out

#- 215 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --additionalData 'SgjFJIZ2XxEWeeo3' \
    --isTransient 'false' \
    --client_id 't9WsIkoFUTz0n3Lj' \
    --oneTimeLinkCode 'qN5GALCE4XFKs0gg' \
    > test.out 2>&1
eval_tap $? 215 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 216 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 216 'GetCountryLocationV3' test.out

#- 217 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 217 'Logout' test.out

#- 218 RequestTokenExchangeCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenExchangeCodeV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'Gi7nGPIB4PAc9cmk' \
    > test.out 2>&1
eval_tap $? 218 'RequestTokenExchangeCodeV3' test.out

#- 219 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'wqPy0fDraYgNAmz0' \
    --userId 'ZAyWBrpW2iXwnefA' \
    > test.out 2>&1
eval_tap $? 219 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 220 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Qdj8v0AcLCKZzIHB' \
    --includeGameNamespace 'false' \
    > test.out 2>&1
eval_tap $? 220 'RevokeUserV3' test.out

#- 221 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'oCIMEGvY7mLrRO6k' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'false' \
    --oneTimeLinkCode 'nnRU4r4er8CpVseJ' \
    --redirectUri '0OOYlyEvZI7W3nsA' \
    --scope '9DovCHs03S5Xf0AX' \
    --state '94THJpa9VQaCPmeV' \
    --targetAuthPage 'orRlckf8TkfzJ2qc' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'tB0wGSlEscbJYK1O' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 221 'AuthorizeV3' test.out

#- 222 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'sGG99IvNMB3SANEI' \
    > test.out 2>&1
eval_tap $? 222 'TokenIntrospectionV3' test.out

#- 223 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 223 'GetJWKSV3' test.out

#- 224 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'nGGk32HEHfcu1Fy4' \
    --factor 'cXh7OVQysRitHLbV' \
    --mfaToken 'iGiai4sK9iLegHJR' \
    > test.out 2>&1
eval_tap $? 224 'SendMFAAuthenticationCode' test.out

#- 225 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor '4pTGeJy30Xn9IFac' \
    --mfaToken '5X0XQyaOCpKxdKne' \
    > test.out 2>&1
eval_tap $? 225 'Change2faMethod' test.out

#- 226 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'LKmWOZk0wBAtcQLy' \
    --factor 'hAYX2avS5TMAH8Md' \
    --mfaToken '96Fu0XAm4jlgzYta' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 226 'Verify2faCode' test.out

#- 227 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '0HU8FPzCplXGzHZa' \
    --userId 'ouMQ0crisEGypHNP' \
    > test.out 2>&1
eval_tap $? 227 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 228 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId '7Q1TAGX7aq5b7O2M' \
    --clientId 'txknK4nfPz37K7mC' \
    --redirectUri 'Ebk12x8b5u3JEvV6' \
    --requestId 'iPRljjiap9VxA985' \
    > test.out 2>&1
eval_tap $? 228 'AuthCodeRequestV3' test.out

#- 229 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'stoGyAUE0uW9A4wH' \
    --additionalData 'dBcfvronc7zjUWL9' \
    --client_id 'rixNbrypQAFosMiz' \
    --createHeadless 'false' \
    --device_id 'UleCh2Ui7uy360Vp' \
    --macAddress 'Yzz2I0bc5mKsGJuL' \
    --platform_token 'LjLEdlNUgqi3FAFs' \
    --skipSetCookie 'false' \
    > test.out 2>&1
eval_tap $? 229 'PlatformTokenGrantV3' test.out

#- 230 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 230 'GetRevocationListV3' test.out

#- 231 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'EaZhjH43fBfD6Qpe' \
    > test.out 2>&1
eval_tap $? 231 'TokenRevocationV3' test.out

#- 232 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --additionalData 'W9xZolYpyAud59a9' \
    --client_id 'TFS26P3VAfAKxtUC' \
    --code '4aQx0WualCieNIhj' \
    --code_verifier 'OuLsrxtL5zdrXbda' \
    --extendNamespace 'jrxUmydxSyWnwKJX' \
    --extend_exp 'true' \
    --password 'c9kW7pSiNiYZ62ER' \
    --redirect_uri 'D0ri6VhDmnVWrhCh' \
    --refresh_token 'p6lORKXTzAOeIUdt' \
    --username 'RXZqrFlLa2zl67NP' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 232 'TokenGrantV3' test.out

#- 233 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token '0g0VSCjQKCuEBFGi' \
    > test.out 2>&1
eval_tap $? 233 'VerifyTokenV3' test.out

#- 234 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'bb38gXunwDm7aSSF' \
    --code 'IrtrNJmgMjbyzTKB' \
    --error 'mBw9niyOD83I1upb' \
    --openidAssocHandle 'HQCiDNsHHUV1017n' \
    --openidClaimedId 'N6CmSz87aflJD3aW' \
    --openidIdentity 'pfNFMPW8ebGzUTT0' \
    --openidMode 'Vhr6Y5aIwftrNjjF' \
    --openidNs 't4H48YsFj6ZcZ7iF' \
    --openidOpEndpoint 'u2IBHiG396bxaT2H' \
    --openidResponseNonce 'uM0ba7Ki9rzy7iln' \
    --openidReturnTo '0Y3PQGasFswsQAcT' \
    --openidSig '93kP8LHzSkGttE8L' \
    --openidSigned 'hIRPk7OIoihy4DEX' \
    --state 'Pp1b6uDiRlMYhChf' \
    > test.out 2>&1
eval_tap $? 234 'PlatformAuthenticationV3' test.out

#- 235 PlatformTokenRefreshV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenRefreshV3 \
    --platformId '4Iv7HrxhfkjSfOWp' \
    --platform_token 'IoqppdSpjWKpkGvA' \
    > test.out 2>&1
eval_tap $? 235 'PlatformTokenRefreshV3' test.out

#- 236 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'X2SxIVMmsRynIVZv' \
    > test.out 2>&1
eval_tap $? 236 'PublicGetInputValidations' test.out

#- 237 PublicGetInputValidationByField
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidationByField \
    --field '9SIkEbj625fFE8SN' \
    > test.out 2>&1
eval_tap $? 237 'PublicGetInputValidationByField' test.out

#- 238 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode '2TknMJeHWc6to96d' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 238 'PublicGetCountryAgeRestrictionV3' test.out

#- 239 PublicGetCountryListV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryListV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 239 'PublicGetCountryListV3' test.out

#- 240 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 240 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 241 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'D33ffbOPuFrL009b' \
    > test.out 2>&1
eval_tap $? 241 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 242 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["Fh22hoq6zHF53jyj", "ABT98nuS7eTOQCUZ", "d9TuIg8iM9tzIgAL"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'H9G998mBe8uxLPrj' \
    --rawPID 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 243 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'BE0OPXG9vrMGoadU' \
    --platformUserId 'YbJ8Z6KkqB7htHSI' \
    > test.out 2>&1
eval_tap $? 243 'PublicGetUserByPlatformUserIDV3' test.out

#- 244 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'nhIb9bQP9g2kljds' \
    > test.out 2>&1
eval_tap $? 244 'PublicGetAsyncStatus' test.out

#- 245 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'bdasMq57vwpvdaS9' \
    --limit '5' \
    --offset '1' \
    --query 'iDAih6rFn4pJB54o' \
    > test.out 2>&1
eval_tap $? 245 'PublicSearchUserV3' test.out

#- 246 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "gd9tmEFEDHLArBBS", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "ClYVkwCEh6mv0teR", "policyId": "Jo4fh4f8hSZRIccU", "policyVersionId": "S09DdkYFK2UjYLEt"}, {"isAccepted": true, "localizedPolicyVersionId": "MhpHyjTEgUuLoODZ", "policyId": "kMLXYOD1Tq7Q7THH", "policyVersionId": "Jvp4zA1CAaA8rK1s"}, {"isAccepted": false, "localizedPolicyVersionId": "24wgxX85snd2azKp", "policyId": "FdnRmV5OwcSHYFcW", "policyVersionId": "bdMNO0AbayqAom8T"}], "authType": "zKF6R6FelPj2PJer", "code": "DLRSzyQ0eFmcYwet", "country": "hXBQPzzSwjvbmlsW", "dateOfBirth": "2GQjTtoMNptmDC2X", "displayName": "4jtKF1VwZjFlOoFJ", "emailAddress": "eOdazdYo59WIBKN3", "password": "oJPd3YeTDuluCekV", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'PublicCreateUserV3' test.out

#- 247 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'IIQuVi4Xid2JIJqe' \
    --query 'UZtcJQU5cbfQ07zB' \
    > test.out 2>&1
eval_tap $? 247 'CheckUserAvailability' test.out

#- 248 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["bU3BM4l9ojCRtHLg", "g3L2iNMV0mnQYmsE", "Uczil8DJfVNMQJ3l"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PublicBulkGetUsers' test.out

#- 249 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "5pMtIbgBFP5buu10", "languageTag": "umiO8Xt8TpdOGsFI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'PublicSendRegistrationCode' test.out

#- 250 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "NvHda3b6gUMsmp3K", "emailAddress": "cOASxqHM14ksdANl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 250 'PublicVerifyRegistrationCode' test.out

#- 251 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "w7maIO97jzK9VC1I", "languageTag": "CqyZU3RTINdmAC7s"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 251 'PublicForgotPasswordV3' test.out

#- 252 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'UwjU70o9sm2HR0hp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 252 'GetAdminInvitationV3' test.out

#- 253 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "WqURpDylx4uQBFgJ", "policyId": "7e2umBpQI8ouSUg9", "policyVersionId": "7kQ7imT23t4d02sJ"}, {"isAccepted": true, "localizedPolicyVersionId": "lVwRxj2wHvmUlCmz", "policyId": "sADzeDJUijjoEI7T", "policyVersionId": "yyVonb00Rt6WT8ik"}, {"isAccepted": false, "localizedPolicyVersionId": "25YzUQEFhNV5Hkiw", "policyId": "A4ec3ho1BDh134VC", "policyVersionId": "IS8m7S3i8eNQ7d6F"}], "authType": "EMAILPASSWD", "country": "wH5aDwyTyEhzkQXb", "dateOfBirth": "Hd19aPJkOMu0zJgN", "displayName": "mam6bGiQGM1AvGkD", "password": "naAqFvSNBRL9Jtka", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'kt4huxjZUnjIaYNl' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'CreateUserFromInvitationV3' test.out

#- 254 UpdateUserV3
# body param: body
echo '{"avatarUrl": "rmj0JmjcQPFKkAFs", "country": "gRgAwYmoR3JLPL0A", "dateOfBirth": "6ZH05CGKlC60RplG", "displayName": "9rUh79odlj9l6yw2", "languageTag": "tJwi6BYdfnxfRsE2", "userName": "4qJSsySMzn360pG3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'UpdateUserV3' test.out

#- 255 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "mKRoD53UurTLKflE", "country": "t43dMWFzY0v0JbkF", "dateOfBirth": "6FfwWiezA8jDzHsJ", "displayName": "XyoGovfSPaTAtAur", "languageTag": "CRbo84FcGoQ1Hgfi", "userName": "ov3QF97FNVPz3eTJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 255 'PublicPartialUpdateUserV3' test.out

#- 256 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "EVf9gfcX52rO5eFE", "emailAddress": "Xw6Soeso51I2kUXc", "languageTag": "QyhDVC2jTeGIownn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 256 'PublicSendVerificationCodeV3' test.out

#- 257 PublicUserVerificationV3
# body param: body
echo '{"code": "9Tbyb51cgZ9qPqTE", "contactType": "O34dYlCka3tFsrlu", "languageTag": "WQ8T1r9xRpcLK3S1", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'PublicUserVerificationV3' test.out

#- 258 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "YnxI5FnDmTGAyeNa", "country": "ETQxbCsXK0LxZhus", "dateOfBirth": "8nYdQ3awCH3ieAA8", "displayName": "SMBHE9rZzvUGk79m", "emailAddress": "sR8RIEmMdTDp6u6c", "password": "pLMvOMW8sLBKJiqC", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 258 'PublicUpgradeHeadlessAccountV3' test.out

#- 259 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "hhXYXvrPZ0qkJ7qK", "password": "y5CNCPvJEYmSqo70"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --needVerificationCode 'true' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 259 'PublicVerifyHeadlessAccountV3' test.out

#- 260 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "Pt15NqlspG4Z5ENP", "newPassword": "CUeInj6oqoqbgh3c", "oldPassword": "m1mjrF7HUeAu754u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'PublicUpdatePasswordV3' test.out

#- 261 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'An1Jsmgr7JnOPDoE' \
    > test.out 2>&1
eval_tap $? 261 'PublicCreateJusticeUser' test.out

#- 262 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3jzHXmU9yrFIyNa4' \
    --redirectUri 'q6J1j7A67J7TdNKZ' \
    --ticket 'VHhBOuX48REyH13S' \
    > test.out 2>&1
eval_tap $? 262 'PublicPlatformLinkV3' test.out

#- 263 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "41RCqenqero5Ib2H"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'MljCmKs4vmW163rs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 263 'PublicPlatformUnlinkV3' test.out

#- 264 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'DXCkkHfeyL83Ky5S' \
    > test.out 2>&1
eval_tap $? 264 'PublicPlatformUnlinkAllV3' test.out

#- 265 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'CfeMexfgxYOl0Psx' \
    --ticket 'H2NQWDv9ytC4WLvY' \
    > test.out 2>&1
eval_tap $? 265 'PublicForcePlatformLinkV3' test.out

#- 266 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'jyEbD8ZAmsnmbrhs' \
    --clientId 'uUv2x1Rvlm4e47FC' \
    --redirectUri '0Kfb5L2SUbkXkIQl' \
    > test.out 2>&1
eval_tap $? 266 'PublicWebLinkPlatform' test.out

#- 267 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'XtYDtrhGO8vdIMOw' \
    --code 'w3i9EMRsxiw25VzX' \
    --state 'q9sqz1VO2OBrTXq0' \
    > test.out 2>&1
eval_tap $? 267 'PublicWebLinkPlatformEstablish' test.out

#- 268 PublicProcessWebLinkPlatformV3
$CLI_EXE \
    --sn iam \
    --op PublicProcessWebLinkPlatformV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'K8iEeHf8Xl2euBwx' \
    --code 'tEgNHv4VJJqgEw0u' \
    --state 'AeCT0yBbnNKVIVzi' \
    > test.out 2>&1
eval_tap $? 268 'PublicProcessWebLinkPlatformV3' test.out

#- 269 ResetPasswordV3
# body param: body
echo '{"code": "oKih0sQR1PRNzYug", "emailAddress": "c3g75W8k0MewbUyz", "newPassword": "XDKSeBx9KkYfTwpA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 269 'ResetPasswordV3' test.out

#- 270 PublicGetUserByUserIdV3
eval_tap 0 270 'PublicGetUserByUserIdV3 # SKIP deprecated' test.out

#- 271 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BURYXLi4Xn902ZFl' \
    --activeOnly 'false' \
    --after 'ICJGDo69bkGFvn9D' \
    --before 'LDgd21yXbMwzDaT1' \
    --limit '66' \
    > test.out 2>&1
eval_tap $? 271 'PublicGetUserBanHistoryV3' test.out

#- 272 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vGNgSmBEJmFcLCGm' \
    > test.out 2>&1
eval_tap $? 272 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 273 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'oIShTYBNnmFPNjSv' \
    > test.out 2>&1
eval_tap $? 273 'PublicGetUserInformationV3' test.out

#- 274 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zuiwn89SwexRFj34' \
    --after '0.9167740544148546' \
    --before '0.3820596635768434' \
    --limit '16' \
    > test.out 2>&1
eval_tap $? 274 'PublicGetUserLoginHistoriesV3' test.out

#- 275 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'mjTcLYG08Cyl12Sa' \
    --after 'YfUzLvowij0brTOo' \
    --before 'pWMvu6v0ryDqNC1l' \
    --limit '97' \
    --platformId 'DtdrpnWgdxxvmWeW' \
    > test.out 2>&1
eval_tap $? 275 'PublicGetUserPlatformAccountsV3' test.out

#- 276 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'quBuD9bPIpdz0OKQ' \
    > test.out 2>&1
eval_tap $? 276 'PublicListJusticePlatformAccountsV3' test.out

#- 277 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "QQUZzQ5oiSFnqV38", "platformUserId": "6IV3GITH5YU7KPnA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'r3O7CWzjx7geZ6e1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'PublicLinkPlatformAccount' test.out

#- 278 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["APuoYM6p8L1DmyOX", "oMKiHkajBvSEhpJD", "tewKpbKblTYyGHXa"], "requestId": "EY5KNeUe2BnbKhBr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'rskkUXhysh35DnAY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'PublicForceLinkPlatformWithProgression' test.out

#- 279 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '22rebaWHAL7DM0S8' \
    > test.out 2>&1
eval_tap $? 279 'PublicGetPublisherUserV3' test.out

#- 280 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'RFUZxgsAba5ICidh' \
    --password 'FPjHAAQfOkU10lCU' \
    > test.out 2>&1
eval_tap $? 280 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 281 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'lO4jh1KMVnEm4Xd1' \
    --before 'UWpttZo5kU2hQhgV' \
    --isWildcard 'true' \
    --limit '98' \
    > test.out 2>&1
eval_tap $? 281 'PublicGetRolesV3' test.out

#- 282 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'Dh5nUr4VjhIWdEA0' \
    > test.out 2>&1
eval_tap $? 282 'PublicGetRoleV3' test.out

#- 283 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 283 'PublicGetMyUserV3' test.out

#- 284 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode 'nkK8kMmDqcV7bASW' \
    > test.out 2>&1
eval_tap $? 284 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 285 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["MgY2lM0NGbIfuabi", "TtN6vBiRyBHfb5xa", "5L0ALRw8yzp2WWxp"], "oneTimeLinkCode": "GczImZhNXnEF30Gt"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'LinkHeadlessAccountToMyAccountV3' test.out

#- 286 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "7BGOnQU0G3W3UEps"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'PublicSendVerificationLinkV3' test.out

#- 287 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'kWKpVNQ9cCkhtHCz' \
    > test.out 2>&1
eval_tap $? 287 'PublicVerifyUserByLinkV3' test.out

#- 288 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'CeunEfNCBzmoVrPi' \
    --code 'dRXP0SHC7wwCcq72' \
    --error '2ozNfZcLNyZdKR2D' \
    --state 'DuXSeYalmguh9nUO' \
    > test.out 2>&1
eval_tap $? 288 'PlatformAuthenticateSAMLV3Handler' test.out

#- 289 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'vsx688lqJPZrgQ5h' \
    --payload 'jTbTfU34PBVULKBG' \
    > test.out 2>&1
eval_tap $? 289 'LoginSSOClient' test.out

#- 290 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'SozBwBdMskNhhBJ1' \
    > test.out 2>&1
eval_tap $? 290 'LogoutSSOClient' test.out

#- 291 RequestTargetTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTargetTokenResponseV3 \
    --additionalData 'seNS2SySjp8opMQG' \
    --code 'UYdd1803zFsKj45S' \
    > test.out 2>&1
eval_tap $? 291 'RequestTargetTokenResponseV3' test.out

#- 292 PlatformTokenRefreshV3Deprecate
eval_tap 0 292 'PlatformTokenRefreshV3Deprecate # SKIP deprecated' test.out

#- 293 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'fdtKhutnnSzg7kOB' \
    > test.out 2>&1
eval_tap $? 293 'AdminGetDevicesByUserV4' test.out

#- 294 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'NDh77rNbLaBFu0Sv' \
    --endDate 'i1r1LSGvPrdqUhTG' \
    --limit '72' \
    --offset '64' \
    --startDate '6eiDQXCmJZDxmil2' \
    > test.out 2>&1
eval_tap $? 294 'AdminGetBannedDevicesV4' test.out

#- 295 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'kfkl570vCSmmN7nC' \
    > test.out 2>&1
eval_tap $? 295 'AdminGetUserDeviceBansV4' test.out

#- 296 AdminBanDeviceV4
# body param: body
echo '{"comment": "kAZgxds3c4CxM7I1", "deviceId": "GdESTrhsjWkQy5Q0", "deviceType": "Uf6UI3tm6GmtlBgM", "enabled": false, "endDate": "EQ8JGLr7XPU8QtZO", "ext": {"4axQWjT0Y6BWPbBm": {}, "rECY3ny1S18YTCvz": {}, "lDs2ogXBLdEg61NL": {}}, "reason": "jaIBPmVH6poAkTFk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'AdminBanDeviceV4' test.out

#- 297 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'AJNbT5k0sNM3pVaH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 297 'AdminGetDeviceBanV4' test.out

#- 298 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId '579eRjx4zZI2p58T' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'AdminUpdateDeviceBanV4' test.out

#- 299 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'jHTPJdfadFRPTTXH' \
    --startDate '9AelToHoXOjT0Ond' \
    --deviceType '0V4wCoTs4encKKwe' \
    > test.out 2>&1
eval_tap $? 299 'AdminGenerateReportV4' test.out

#- 300 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 300 'AdminGetDeviceTypesV4' test.out

#- 301 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'exDslwRnIc8ObOb5' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 301 'AdminGetDeviceBansV4' test.out

#- 302 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId '2KbQeL5jSbNxwdPl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 302 'AdminDecryptDeviceV4' test.out

#- 303 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'vT7DDBjvAxUbqmJN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 303 'AdminUnbanDeviceV4' test.out

#- 304 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'OB7MQOd3kIYzHcEc' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 304 'AdminGetUsersByDeviceV4' test.out

#- 305 AdminCreateTestUsersV4
# body param: body
echo '{"count": 58}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'AdminCreateTestUsersV4' test.out

#- 306 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["O1YPwVUSpuCU57Dk", "SFElOwraUoGUQCLN", "7M1coPS9FIGU4If3"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'AdminBulkCheckValidUserIDV4' test.out

#- 307 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "4BjWssPI3Fb6bzOQ", "country": "E2zuty383eXLMf1S", "dateOfBirth": "2y6JhgR3x0WVrPjU", "displayName": "kAvzGZSZzzrLbWLA", "languageTag": "CYoIYseWrULOV6T5", "userName": "Gv62CjxObXHk4kWA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'U5MB0G6CH85TzVYc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'AdminUpdateUserV4' test.out

#- 308 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "GdLddRZGuOnFNTSe", "emailAddress": "V1IiyTQg45VewYTO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'jbT9m97uSsWaM7jS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'AdminUpdateUserEmailAddressV4' test.out

#- 309 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'wg0BVA0gxqcsQgNw' \
    > test.out 2>&1
eval_tap $? 309 'AdminDisableUserMFAV4' test.out

#- 310 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'r5On1ZvRKexAs9pw' \
    > test.out 2>&1
eval_tap $? 310 'AdminListUserRolesV4' test.out

#- 311 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["PpKdxuWW2qWNku7i", "Ixfvaeze6AjxCA76", "VtvoIRmPIYpKuqdP"], "roleId": "p14i7z8pgO7yEx8K"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'ei0YLXQPldIBwWu5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'AdminUpdateUserRoleV4' test.out

#- 312 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["9xlVnumHXxy38J5C", "MiTrV3cfsf78PmeT", "w02h7q42cklkb6WY"], "roleId": "JTpYU5VItBNkNdWp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'J5hppmnal3o2fvTs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminAddUserRoleV4' test.out

#- 313 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["OxOM4uPf2FbyKjde", "fnVXYHyHV2how09b", "aUtR2vsQ6kwwxZyp"], "roleId": "cty7nEsBcy8wCLjs"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '90r5uiwZK5OeotXn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 313 'AdminRemoveUserRoleV4' test.out

#- 314 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'false' \
    --limit '91' \
    --offset '14' \
    > test.out 2>&1
eval_tap $? 314 'AdminGetRolesV4' test.out

#- 315 AdminCreateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": false, "roleName": "9vUQQCnQ4NtJx4pe"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 315 'AdminCreateRoleV4' test.out

#- 316 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId '9ET2Ci8ctEIJwDbP' \
    > test.out 2>&1
eval_tap $? 316 'AdminGetRoleV4' test.out

#- 317 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'VSDRyktmfrDG0TMT' \
    > test.out 2>&1
eval_tap $? 317 'AdminDeleteRoleV4' test.out

#- 318 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": false, "deletable": true, "isWildcard": false, "roleName": "ICbqWlgab71axJqJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'oaRZHiELMCb8ilhJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 318 'AdminUpdateRoleV4' test.out

#- 319 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 32, "resource": "9JkQFhfRCQ0OeQGT", "schedAction": 65, "schedCron": "sFHIBsSKfpWhsDGK", "schedRange": ["niGKeZwMAoGZ6en0", "iPViMj3E0HZ6QDqE", "jfbUdguYP7xmeqha"]}, {"action": 57, "resource": "tvs3jgiELcpHNGYN", "schedAction": 74, "schedCron": "ntS5f9BgmoV3N90r", "schedRange": ["7sMlJ1cf2l2Mr2Vw", "g8MxxOylSVLKd5F4", "ddfzOqCITWU5jiZb"]}, {"action": 0, "resource": "XhV9c5mf0Qjs3wwN", "schedAction": 32, "schedCron": "0zYRGaYn2wvqEeHg", "schedRange": ["hhJSCwKHiSNeV4MY", "Wage2hr4yxjoJDQC", "e5ygmoW6gnotlWUF"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'hPQYrnyHl6CIvSir' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'AdminUpdateRolePermissionsV4' test.out

#- 320 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 26, "resource": "1GH165NfdIYflvJw", "schedAction": 44, "schedCron": "OcteeCdOhAs9EKwY", "schedRange": ["zDu1tK50KmhSYoEA", "iY0zxSycTYYnFSDX", "31e0PqbWqxQ1Rt34"]}, {"action": 23, "resource": "elq1AQS5T2irgcG5", "schedAction": 9, "schedCron": "QuPIwtH47gzj2c8H", "schedRange": ["cBKDVPxLMn9YfBbV", "TSJs3kFG7LtOqO3Y", "ik6Joq70RPRUULBn"]}, {"action": 53, "resource": "T9AOydyI4Ippp7a7", "schedAction": 8, "schedCron": "BQfZCPcvrJUMHTlW", "schedRange": ["cnJTRndaShKpGMbw", "IUb1vUfgTSblo14Y", "TsBoStpmbLXx8f9G"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'k1ihxx6Q4D6SweEU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'AdminAddRolePermissionsV4' test.out

#- 321 AdminDeleteRolePermissionsV4
# body param: body
echo '["yWX2oiyxXSN3D5t0", "H7uGHolFYqyxw8MK", "wmiHQNZNPucoJJtN"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'ClZ28GvRW3Bep4V2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'AdminDeleteRolePermissionsV4' test.out

#- 322 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'ZEFH62dVDcGl9weB' \
    --after '8cyJMVGaTYPwEB9I' \
    --before 'QaIAoGdnGlHHx3qM' \
    --limit '45' \
    > test.out 2>&1
eval_tap $? 322 'AdminListAssignedUsersV4' test.out

#- 323 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["8aT5Va1Li1Pq4xSQ", "jFIFYTSUwxy4Pp5g", "4e4q2YLPh9mFiaJo"], "namespace": "YoUe3vHUQpc5384Q", "userId": "e5UaTM2MVk1AoBX7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'leIWLUGGbNPkX6fc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'AdminAssignUserToRoleV4' test.out

#- 324 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "srLeSNGRzRMIn7im", "userId": "zk0UBG2m0hHixeKR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'MufI1Ck4ZWBXatLA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'AdminRevokeUserFromRoleV4' test.out

#- 325 AdminInviteUserNewV4
# body param: body
echo '{"assignedNamespaces": ["AnvL7SJvw8GH8tY7", "fh3j8l0nlovI9vg4", "4W1dOrITa7b5exde"], "emailAddresses": ["znarHIIQ3BZqgqVn", "47lxWpSiaPlUHqgP", "uSOxmu77arxcGmTy"], "isAdmin": true, "namespace": "TBU3Gd8Q1bK9hSZn", "roleId": "wvIAZ72zbPgGppj5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserNewV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'AdminInviteUserNewV4' test.out

#- 326 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "VnhNcG6xxssTWUnv", "country": "VtslMpjkceVeD1oB", "dateOfBirth": "poPd1npG4svXPvqS", "displayName": "HzQP4r11zNzbKseT", "languageTag": "oolMT1anoumIdfOy", "userName": "8B8ua5YzPLvBsYt9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminUpdateMyUserV4' test.out

#- 327 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 327 'AdminDisableMyAuthenticatorV4' test.out

#- 328 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'hHSQO7N3pSdcHfXR' \
    > test.out 2>&1
eval_tap $? 328 'AdminEnableMyAuthenticatorV4' test.out

#- 329 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 329 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 330 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 330 'AdminGetMyBackupCodesV4' test.out

#- 331 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 331 'AdminGenerateMyBackupCodesV4' test.out

#- 332 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 332 'AdminDisableMyBackupCodesV4' test.out

#- 333 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 333 'AdminDownloadMyBackupCodesV4' test.out

#- 334 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 334 'AdminEnableMyBackupCodesV4' test.out

#- 335 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 335 'AdminSendMyMFAEmailCodeV4' test.out

#- 336 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 336 'AdminDisableMyEmailV4' test.out

#- 337 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code '8nRDKnrN0NqxBK8G' \
    > test.out 2>&1
eval_tap $? 337 'AdminEnableMyEmailV4' test.out

#- 338 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 338 'AdminGetMyEnabledFactorsV4' test.out

#- 339 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor '9ctXWpDs3mwyLTqC' \
    > test.out 2>&1
eval_tap $? 339 'AdminMakeFactorMyDefaultV4' test.out

#- 340 AdminInviteUserV4
eval_tap 0 340 'AdminInviteUserV4 # SKIP deprecated' test.out

#- 341 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "h3jdMfrzxGbqqAJM", "policyId": "O8EgRInJO3xlVl5j", "policyVersionId": "0MJbsvnRrUUtskIZ"}, {"isAccepted": false, "localizedPolicyVersionId": "zsWn2VP1fLSzYwfu", "policyId": "c7VGLXl6fm04DA2a", "policyVersionId": "pK8T0reoLbuyVjOV"}, {"isAccepted": true, "localizedPolicyVersionId": "3cmL3UQPHtsKqcoD", "policyId": "QVt1b7vNJiUjEdWw", "policyVersionId": "TI0Bz1YAtkdYRHXM"}], "authType": "EMAILPASSWD", "country": "9mx7uz01VGjXujqS", "dateOfBirth": "VCyxlaDHclfvES3B", "displayName": "DPf9Pj8DAZ4kYwPd", "emailAddress": "oxMMTaAvVe4btbxd", "password": "yh8Fji5zwju1W3X5", "passwordMD5Sum": "DvKAF5qm7KB30pwA", "username": "CsqLX2zd3DghF3RX", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 341 'PublicCreateTestUserV4' test.out

#- 342 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "BjbOMf0RTVK5Cic0", "policyId": "udPj4Q1835AphZZl", "policyVersionId": "5Trx0FYUPbImbC0n"}, {"isAccepted": true, "localizedPolicyVersionId": "VtyeFt96ED7WgsgG", "policyId": "i5mtBBIGQvoT0krl", "policyVersionId": "VfdRr1rM2K2e4ZDe"}, {"isAccepted": true, "localizedPolicyVersionId": "KibQuerWpGGCzESr", "policyId": "Y0joL5WcP0L6QeQY", "policyVersionId": "snOxGNEiQQyj4Y41"}], "authType": "EMAILPASSWD", "code": "j99YrStfLNWj1wb7", "country": "GokaphoH8MFtvFmy", "dateOfBirth": "aV3eUydSaJlN3WJC", "displayName": "RLqbmS7qxl3A1675", "emailAddress": "nRsd8CX6fx703XQF", "password": "prgAn8AZibWadSAS", "passwordMD5Sum": "oZBx9MHx6Q7GNDot", "reachMinimumAge": true, "username": "hQn9kR082uMxHdTJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 342 'PublicCreateUserV4' test.out

#- 343 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "g0xjd7zZP1ei1VYe", "policyId": "nauoZqAAhRvFME2j", "policyVersionId": "Fw5QEDqVw6RsHBxa"}, {"isAccepted": true, "localizedPolicyVersionId": "xTI3bQLDyuHDG5Jq", "policyId": "ppzi8JrBvIvlFm59", "policyVersionId": "iDCIz1LkqKFGwCkd"}, {"isAccepted": false, "localizedPolicyVersionId": "FhPfnG4yqcnl2lXu", "policyId": "Pz8uPSF0m6rlv9kA", "policyVersionId": "RU6Kq4IZiqv4Qzdi"}], "authType": "EMAILPASSWD", "country": "jaQdi9lUpXiU9fHS", "dateOfBirth": "KdEvYvg4xCfZVYpl", "displayName": "Lc9kBMqghZzLI2em", "password": "JOc25uPGFL1Z2n2D", "reachMinimumAge": true, "username": "lcoWide3ErFpWkGk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId '9eM9tncBZy1tmt9I' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 343 'CreateUserFromInvitationV4' test.out

#- 344 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "btBjgrvONKfxXxpb", "country": "0sLK0kVnz62UtJlz", "dateOfBirth": "2o6IOMMjYX53FXXw", "displayName": "54ouq2MEJDqEBSnO", "languageTag": "ND9NvqjhOySePLqp", "userName": "nuv1X1GSRAWYuXAu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 344 'PublicUpdateUserV4' test.out

#- 345 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "HtF8xMU66OlK3cQi", "emailAddress": "Ugd51CZjmy5EBmpF"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 345 'PublicUpdateUserEmailAddressV4' test.out

#- 346 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "xKMZ05tf26FaU6cD", "country": "ORmSP8Bab08P4PZu", "dateOfBirth": "T4bZvq90QUOkyJZj", "displayName": "TE75wWxkeJQ8Bxl4", "emailAddress": "IOELSriLqHewlMmJ", "password": "SVKEFyWDHH9ml45h", "reachMinimumAge": false, "username": "bS063TQB7WhJhpKT", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 346 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 347 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "qkGzh4p9s2D7EZOY", "password": "gfEN7E47p0IoqaVP", "username": "0kAMD5TdTragS5bI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 347 'PublicUpgradeHeadlessAccountV4' test.out

#- 348 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 348 'PublicDisableMyAuthenticatorV4' test.out

#- 349 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'pcRYRqosyjQOyaH0' \
    > test.out 2>&1
eval_tap $? 349 'PublicEnableMyAuthenticatorV4' test.out

#- 350 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 350 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 351 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 351 'PublicGetMyBackupCodesV4' test.out

#- 352 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 352 'PublicGenerateMyBackupCodesV4' test.out

#- 353 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 353 'PublicDisableMyBackupCodesV4' test.out

#- 354 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 354 'PublicDownloadMyBackupCodesV4' test.out

#- 355 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 355 'PublicEnableMyBackupCodesV4' test.out

#- 356 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'FhRgEC9cLpuL04fM' \
    > test.out 2>&1
eval_tap $? 356 'PublicRemoveTrustedDeviceV4' test.out

#- 357 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 357 'PublicSendMyMFAEmailCodeV4' test.out

#- 358 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 358 'PublicDisableMyEmailV4' test.out

#- 359 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'ZRU83V7YmCxroldX' \
    > test.out 2>&1
eval_tap $? 359 'PublicEnableMyEmailV4' test.out

#- 360 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 360 'PublicGetMyEnabledFactorsV4' test.out

#- 361 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor '3UHie2jgkOkOKSN9' \
    > test.out 2>&1
eval_tap $? 361 'PublicMakeFactorMyDefaultV4' test.out

#- 362 PublicGetUserPublicInfoByUserIdV4
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPublicInfoByUserIdV4 \
    --namespace $AB_NAMESPACE \
    --userId 'sknA6AKlMrIB2Rfd' \
    > test.out 2>&1
eval_tap $? 362 'PublicGetUserPublicInfoByUserIdV4' test.out

#- 363 PublicInviteUserV4
# body param: body
echo '{"additionalData": "bfCeSRn1LKFtcxP5", "emailAddress": "XZwXhWCG2kkWQJsD", "namespace": "s3RKP1Urpj4x8PnX", "namespaceDisplayName": "6KfY2p9PKAhdHieJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 363 'PublicInviteUserV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE