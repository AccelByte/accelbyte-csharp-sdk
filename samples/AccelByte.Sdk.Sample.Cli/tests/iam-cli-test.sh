#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..314"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV2 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 80 'AdminGetAgeRestrictionStatusV2' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
# body param: body
echo '{"AgeRestriction": 64, "Enable": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV2 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 81 'AdminUpdateAgeRestrictionConfigV2' test.out

#- 82 GetListCountryAgeRestriction
$CLI_EXE \
    --sn iam \
    --op GetListCountryAgeRestriction \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 82 'GetListCountryAgeRestriction' test.out

#- 83 UpdateCountryAgeRestriction
# body param: body
echo '{"AgeRestriction": 50}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateCountryAgeRestriction \
    --countryCode 'vF7iKqzT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 83 'UpdateCountryAgeRestriction' test.out

#- 84 AdminSearchUsersV2
$CLI_EXE \
    --sn iam \
    --op AdminSearchUsersV2 \
    --namespace $AB_NAMESPACE \
    --after 'U9eDQjx1' \
    --before 'elLqAcO9' \
    --displayName 'hWLyb5E5' \
    --limit '16' \
    --loginId 'PhsCTIo4' \
    --platformUserId 'T2Oq4EI3' \
    --roleId 'eBf3VCeq' \
    --userId 'lK1JruTe' \
    --platformId 'VpEsfMVv' \
    > test.out 2>&1
eval_tap $? 84 'AdminSearchUsersV2' test.out

#- 85 AdminGetUserByUserIdV2
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV2 \
    --namespace $AB_NAMESPACE \
    --userId 'O2Bqq0gS' \
    > test.out 2>&1
eval_tap $? 85 'AdminGetUserByUserIdV2' test.out

#- 86 AdminUpdateUserV2
# body param: body
echo '{"Country": "cmV0SAz9", "DateOfBirth": "n2Hsii0x", "DisplayName": "KhpUcV4A", "LanguageTag": "rnoHXbQl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 'Z4YNpBEL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 86 'AdminUpdateUserV2' test.out

#- 87 AdminBanUserV2
# body param: body
echo '{"ban": "K8Am9RKj", "comment": "YV8P3w9F", "endDate": "pI2LUYaN", "reason": "ThbKhstC", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 's9dZXkyK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 87 'AdminBanUserV2' test.out

#- 88 AdminGetUserBanV2
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV2 \
    --namespace $AB_NAMESPACE \
    --userId 'ymNeRHZD' \
    --activeOnly 'false' \
    > test.out 2>&1
eval_tap $? 88 'AdminGetUserBanV2' test.out

#- 89 AdminDisableUserV2
# body param: body
echo '{"Reason": "4f49D8PT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 'gkkyWqRU' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 89 'AdminDisableUserV2' test.out

#- 90 AdminEnableUserV2
$CLI_EXE \
    --sn iam \
    --op AdminEnableUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 'FDajEe5I' \
    > test.out 2>&1
eval_tap $? 90 'AdminEnableUserV2' test.out

#- 91 AdminResetPasswordV2
# body param: body
echo '{"LanguageTag": "BHqnVaZc", "NewPassword": "jKuWiplV", "OldPassword": "8UiA3bgp"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV2 \
    --namespace $AB_NAMESPACE \
    --userId 'blMrqVoR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 91 'AdminResetPasswordV2' test.out

#- 92 AdminDeletePlatformLinkV2
$CLI_EXE \
    --sn iam \
    --op AdminDeletePlatformLinkV2 \
    --namespace $AB_NAMESPACE \
    --platformId '2ZDCZ4xL' \
    --userId 'zHjvgedI' \
    --platform_namespace 'qhVWSY45' \
    > test.out 2>&1
eval_tap $? 92 'AdminDeletePlatformLinkV2' test.out

#- 93 AdminPutUserRolesV2
# body param: body
echo '["SbFY8bzS", "MuH9aZwX", "uqsjQmZt"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPutUserRolesV2 \
    --namespace $AB_NAMESPACE \
    --userId 'xDjAe814' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 93 'AdminPutUserRolesV2' test.out

#- 94 AdminCreateUserRolesV2
# body param: body
echo '["pwXQr35u", "n7vyJfg5", "sQnH0Hgw"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateUserRolesV2 \
    --namespace $AB_NAMESPACE \
    --userId 'ppRLlQV7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 94 'AdminCreateUserRolesV2' test.out

#- 95 PublicGetCountryAgeRestriction
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestriction \
    --countryCode 'P1Fr69BY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 95 'PublicGetCountryAgeRestriction' test.out

#- 96 PublicCreateUserV2
# body param: body
echo '{"AuthType": "hiNLxeyx", "Country": "5DbfoP3J", "DisplayName": "dtZW0qoF", "LoginId": "6z2FTiJX", "Password": "1aMYaQh7", "PasswordMD5Sum": "xWKp1lff"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV2 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 96 'PublicCreateUserV2' test.out

#- 97 PublicForgotPasswordV2
# body param: body
echo '{"Context": "ba67gtkm", "LanguageTag": "y7Znb8aN", "LoginID": "YG8uYa9Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV2 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 97 'PublicForgotPasswordV2' test.out

#- 98 PublicResetPasswordV2
# body param: body
echo '{"Code": "V3WygULS", "LoginID": "3nCiLcUV", "NewPassword": "nHbJnbhE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicResetPasswordV2 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 98 'PublicResetPasswordV2' test.out

#- 99 PublicGetUserByUserIDV2
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByUserIDV2 \
    --namespace $AB_NAMESPACE \
    --userId 'x5Qfvejh' \
    > test.out 2>&1
eval_tap $? 99 'PublicGetUserByUserIDV2' test.out

#- 100 PublicUpdateUserV2
# body param: body
echo '{"Country": "vtTUfplw", "DateOfBirth": "iVx8mCea", "DisplayName": "g3lbQfkw", "LanguageTag": "qQJ2BhXv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV2 \
    --namespace $AB_NAMESPACE \
    --userId 'hkO94NvO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 100 'PublicUpdateUserV2' test.out

#- 101 PublicGetUserBan
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBan \
    --namespace $AB_NAMESPACE \
    --userId 'elR8PgIj' \
    --activeOnly 'false' \
    > test.out 2>&1
eval_tap $? 101 'PublicGetUserBan' test.out

#- 102 PublicUpdatePasswordV2
# body param: body
echo '{"LanguageTag": "WH2HhaK6", "NewPassword": "GValQuA6", "OldPassword": "Tl7eick8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV2 \
    --namespace $AB_NAMESPACE \
    --userId 'xYXdghln' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 102 'PublicUpdatePasswordV2' test.out

#- 103 GetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op GetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'DPxvbuEd' \
    > test.out 2>&1
eval_tap $? 103 'GetListJusticePlatformAccounts' test.out

#- 104 PublicPlatformLinkV2
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV2 \
    --namespace $AB_NAMESPACE \
    --platformId 'Zj1E2nwk' \
    --userId 'HvHzYEeK' \
    --ticket 'bdXHsiC6' \
    > test.out 2>&1
eval_tap $? 104 'PublicPlatformLinkV2' test.out

#- 105 PublicDeletePlatformLinkV2
$CLI_EXE \
    --sn iam \
    --op PublicDeletePlatformLinkV2 \
    --namespace $AB_NAMESPACE \
    --platformId 'O8HSdXP6' \
    --userId 'WDPcGq9q' \
    --platform_namespace 'bvtCmJD4' \
    > test.out 2>&1
eval_tap $? 105 'PublicDeletePlatformLinkV2' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "WuX5gk0l", "validation": {"allowDigit": false, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "description": [{"language": "yIZQTD96", "message": ["OCuGPpc2", "4lNPnWos", "T4cfseL4"]}, {"language": "3sm4VVrt", "message": ["ZrKcauxP", "YJkjLt4C", "zSaxdRGm"]}, {"language": "moBiVBGC", "message": ["cjFcT7Fj", "FQmL5W5y", "zKe4h1QM"]}], "isCustomRegex": true, "letterCase": "4Mbil4Xi", "maxLength": 17, "maxRepeatingAlphaNum": 2, "maxRepeatingSpecialCharacter": 39, "minCharType": 20, "minLength": 15, "regex": "SJLiRotP", "specialCharacterLocation": "asRAKmma", "specialCharacters": ["HSkY9enQ", "4peMXGBS", "aERxQtTJ"]}}, {"field": "87N9xJxE", "validation": {"allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "description": [{"language": "swQkVlm8", "message": ["JOQrIhYL", "zqj3ej7G", "LwgOvs0k"]}, {"language": "UK3v145G", "message": ["IbhTvKh4", "yDXgvBVG", "TTMdtuJJ"]}, {"language": "AGUG4py3", "message": ["MfZgWNZ6", "1xTlZlmL", "I4cmXSD0"]}], "isCustomRegex": true, "letterCase": "umbG4Kck", "maxLength": 72, "maxRepeatingAlphaNum": 53, "maxRepeatingSpecialCharacter": 80, "minCharType": 6, "minLength": 36, "regex": "9tE0XKSD", "specialCharacterLocation": "8OMIjoKg", "specialCharacters": ["4BNPumUg", "rjOrrw3i", "pAvGxAsc"]}}, {"field": "cWAkT5gr", "validation": {"allowDigit": true, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "description": [{"language": "T42WhZkW", "message": ["GTPakR9K", "QV26h5dd", "A2e2dEET"]}, {"language": "xpILLuya", "message": ["DUeCmiAk", "TlTp05KO", "XlmNBGSx"]}, {"language": "JPYSSLkd", "message": ["N3oTTI4P", "bEqMfIHT", "q3D5beDh"]}], "isCustomRegex": true, "letterCase": "254z3nRa", "maxLength": 97, "maxRepeatingAlphaNum": 89, "maxRepeatingSpecialCharacter": 79, "minCharType": 94, "minLength": 50, "regex": "dgW20hh8", "specialCharacterLocation": "zHpLkrGL", "specialCharacters": ["M3YE8ZUZ", "U75ZFX55", "0LnKsTdk"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'VwblKFRC' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'fhobHIha' \
    --before 'u8OoRJjD' \
    --limit '18' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 39, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 95}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'pwzBdDmA' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'nsX5KX4T' \
    --limit '60' \
    --offset '38' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 117 'AdminGetBansTypeWithNamespaceV3' test.out

#- 118 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --limit '50' \
    --offset '54' \
    > test.out 2>&1
eval_tap $? 118 'AdminGetClientsByNamespaceV3' test.out

#- 119 AdminCreateClientV3
# body param: body
echo '{"audiences": ["Asdzya4t", "rHocA7wM", "Yaq8nvrA"], "baseUri": "4M1nv042", "clientId": "ALldjdKR", "clientName": "VZeY1L2Q", "clientPermissions": [{"action": 42, "resource": "2ku72cHW", "schedAction": 38, "schedCron": "HCKEEaOO", "schedRange": ["HsKCARJj", "XYCTnFs6", "8Fy3UZpL"]}, {"action": 96, "resource": "IQS0AYGI", "schedAction": 44, "schedCron": "wAuRu1g2", "schedRange": ["EgpYx3HY", "zkeTsTN8", "Zpihwfb2"]}, {"action": 37, "resource": "zz4W7Cfk", "schedAction": 34, "schedCron": "bSxqPQkq", "schedRange": ["pQtV1xrh", "ygYFJvmZ", "vkE3jspm"]}], "clientPlatform": "jOfPwUXZ", "deletable": false, "namespace": "3LDbH04l", "oauthClientType": "KHFabRQ4", "redirectUri": "7eVcddDm", "secret": "rrVHprtx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 119 'AdminCreateClientV3' test.out

#- 120 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'o1156mRL' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 121 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'elH3oq1P' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 121 'AdminDeleteClientV3' test.out

#- 122 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["4SDZ3Kv5", "Eye8SGOS", "bgal6Gzt"], "baseUri": "PLvfO0GQ", "clientName": "otUdoERq", "clientPermissions": [{"action": 82, "resource": "r7QYt5C8", "schedAction": 17, "schedCron": "ZUqptJBY", "schedRange": ["97Jq1svc", "vFuviZjK", "OO4EM02U"]}, {"action": 73, "resource": "fj4G1dI7", "schedAction": 42, "schedCron": "UZt6A4qi", "schedRange": ["pBIgbvmv", "Forjitxd", "By3vxFoa"]}, {"action": 83, "resource": "0epROqid", "schedAction": 19, "schedCron": "VjKHTpKN", "schedRange": ["pV25Z4FB", "fBlo4ZW6", "5UFQG5Yj"]}], "clientPlatform": "DSWZJUZy", "deletable": true, "namespace": "XwduA1uc", "redirectUri": "do5zyVdy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'PX5VDOkE' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 122 'AdminUpdateClientV3' test.out

#- 123 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 82, "resource": "5jY4cQLe"}, {"action": 6, "resource": "7Ek0jMSU"}, {"action": 59, "resource": "HUgMc3m6"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'vYwxZv2n' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 123 'AdminUpdateClientPermissionV3' test.out

#- 124 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 100, "resource": "JFSw2jOg"}, {"action": 47, "resource": "Nnc9dyhu"}, {"action": 73, "resource": "dKodgMg9"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId '6II71jsC' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminAddClientPermissionsV3' test.out

#- 125 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '87' \
    --clientId '1OTLyJCl' \
    --namespace $AB_NAMESPACE \
    --resource 'AsMtSlLe' \
    > test.out 2>&1
eval_tap $? 125 'AdminDeleteClientPermissionV3' test.out

#- 126 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 126 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 127 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 127 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 128 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '7' \
    --offset '70' \
    > test.out 2>&1
eval_tap $? 128 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 129 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'oj4D7gsC' \
    > test.out 2>&1
eval_tap $? 129 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 130 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "ZMsSFnj8", "AWSCognitoRegion": "t40oUpXg", "AWSCognitoUserPool": "OkNC6ZiH", "AllowedClients": ["gH9hntwv", "jfd2yRw3", "OvTEXs5O"], "AppId": "YbSuIWe0", "AuthorizationEndpoint": "yaF8O9qB", "ClientId": "zBT4ib1l", "Environment": "Rro1Rtg6", "FederationMetadataURL": "hgj9zsfU", "GenericOauthFlow": false, "IsActive": true, "Issuer": "As7z0x7e", "JWKSEndpoint": "DxZefkeH", "KeyID": "tQOLWsCV", "NetflixCertificates": {"encryptedPrivateKey": "tmjEjLrN", "encryptedPrivateKeyName": "k3ZZYytG", "publicCertificate": "xQ1eRBMB", "publicCertificateName": "9FRSkScc", "rootCertificate": "XzSAqfdq", "rootCertificateName": "iOpNDdAg"}, "OrganizationId": "rW2PB6fX", "PlatformName": "n5Jn07Ge", "RedirectUri": "MuZgyLhm", "RegisteredDomains": [{"affectedClientIDs": ["fCjIa9HG", "5HOfxMoB", "rc9NjdkG"], "domain": "pE1vHdwB", "namespaces": ["K97zWB2x", "Oi4T0chL", "dCcSiWA9"], "roleId": "o8ykjXJ8"}, {"affectedClientIDs": ["s58OMBaF", "d2uYdzyW", "ccatd8SB"], "domain": "r5lG9SPu", "namespaces": ["VgpNxcyY", "Mq0U8i42", "CeaGDRwE"], "roleId": "8zeBdBUn"}, {"affectedClientIDs": ["q14Mlp5r", "GFWqrh1S", "2ffpjSbn"], "domain": "KYNiW9H8", "namespaces": ["Lv5OW5EJ", "dllJ43Ni", "N7a8Jrjx"], "roleId": "Z5oOFl27"}], "Secret": "J2m4vvjz", "TeamID": "CQBkwhDK", "TokenAuthenticationType": "XWjkhNdW", "TokenClaimsMapping": {"xPzZIpge": "8zxHN22e", "0VsKpKv9": "kT7N5ilI", "uQPUM1ZS": "Y4dYoKV3"}, "TokenEndpoint": "L6I56tqj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1CjOosJf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 130 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 131 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'SmOlMbQg' \
    > test.out 2>&1
eval_tap $? 131 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 132 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "VwxLnCqT", "AWSCognitoRegion": "AzzxCbzS", "AWSCognitoUserPool": "TfRZgrRb", "AllowedClients": ["Mg17ABWC", "Rw2E9z6A", "4bb80Xys"], "AppId": "Ru2JnbQz", "AuthorizationEndpoint": "CTs4gb1e", "ClientId": "efBuDgPp", "Environment": "WQThU3Nx", "FederationMetadataURL": "EgPEN781", "GenericOauthFlow": false, "IsActive": false, "Issuer": "GKXCjxWD", "JWKSEndpoint": "knq1LVwK", "KeyID": "oOmou269", "NetflixCertificates": {"encryptedPrivateKey": "zlovbLgn", "encryptedPrivateKeyName": "7AT7Sdr3", "publicCertificate": "rAkg0kFg", "publicCertificateName": "F4jfxb5g", "rootCertificate": "8b4j81MG", "rootCertificateName": "dXTbxng5"}, "OrganizationId": "7MRBHPAa", "PlatformName": "fJ2rstke", "RedirectUri": "POUecxk0", "RegisteredDomains": [{"affectedClientIDs": ["ZuPrMpyn", "PbMVbLyL", "xEkeBayp"], "domain": "4VL3PvJ9", "namespaces": ["5olzHbkC", "fUnZK0SO", "hccv6XHe"], "roleId": "icbu7Bwt"}, {"affectedClientIDs": ["rkLZJ7n5", "V3wrD0av", "Lv08UEEN"], "domain": "7QysCZAE", "namespaces": ["zLzPGvlY", "WlFyVi0X", "FJPSNVL2"], "roleId": "tUYPsvDe"}, {"affectedClientIDs": ["w54bBbqo", "Fb4OpmK8", "8tA1M6Oa"], "domain": "wNFeIPmp", "namespaces": ["4qDWBP3L", "RaZHouFf", "7D4Jw10e"], "roleId": "OA9WSalP"}], "Secret": "Q3zhzmPc", "TeamID": "9oeYn2i4", "TokenAuthenticationType": "KLUdqWwi", "TokenClaimsMapping": {"4Up8xVPJ": "wiW1VJk7", "Pg3FD70m": "oO9mJwON", "6GEzuAH8": "Zcj4wfnv"}, "TokenEndpoint": "ur5AWfaj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '7p7Hwps0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 133 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["Tdq31Cri", "1XQGIys7", "SKnueDSm"], "assignedNamespaces": ["fLOcXJsm", "0x8S1CU2", "VN1XCMSZ"], "domain": "DCWSW49H", "roleId": "avqoaopy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '65nPIKRM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 133 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 134 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "mTmwl1e7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'wiZBkOG6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 135 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'xQtIonWU' \
    > test.out 2>&1
eval_tap $? 135 'RetrieveSSOLoginPlatformCredential' test.out

#- 136 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "WGteynIv", "apiKey": "ncEFmhTR", "appId": "k1YqSbUe", "federationMetadataUrl": "KBqAnf7Z", "isActive": true, "redirectUri": "8Vj0nUG3", "secret": "ZOgnGjSi", "ssoUrl": "IUHQSHcf"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'COxEIe4N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'AddSSOLoginPlatformCredential' test.out

#- 137 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'nzFhuOg9' \
    > test.out 2>&1
eval_tap $? 137 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 138 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "HjHUmvG3", "apiKey": "EApaj0VH", "appId": "CN4TshZK", "federationMetadataUrl": "i7EbxdRL", "isActive": true, "redirectUri": "FApWN1XA", "secret": "H30X7XwU", "ssoUrl": "Cn5qhNwY"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'WTZkzs9F' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'UpdateSSOPlatformCredential' test.out

#- 139 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'AfKod3xd' \
    --platformUserId 'rQPlcXHz' \
    > test.out 2>&1
eval_tap $? 139 'AdminGetUserByPlatformUserIDV3' test.out

#- 140 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'GMhhF8YM' \
    --after '29' \
    --before '95' \
    --limit '89' \
    > test.out 2>&1
eval_tap $? 140 'GetAdminUsersByRoleIdV3' test.out

#- 141 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '3LYCz5t9' \
    > test.out 2>&1
eval_tap $? 141 'AdminGetUserByEmailAddressV3' test.out

#- 142 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["yXUmEFoo", "eTbEcHC3", "RXebW8hY"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 142 'AdminListUserIDByUserIDsV3' test.out

#- 143 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["kx40pNA4", "ViezP2bG", "Q0l6CuPp"], "isAdmin": true, "roles": ["6RpHFVIP", "JJYRdNbG", "sgCNB8Fa"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 143 'AdminInviteUserV3' test.out

#- 144 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '37' \
    --offset '36' \
    > test.out 2>&1
eval_tap $? 144 'AdminListUsersV3' test.out

#- 145 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '2RoJ2tGi' \
    --endDate 'lGydDNkD' \
    --limit '20' \
    --offset '87' \
    --platformBy 'lwNthax3' \
    --platformId 'glaT6vmq' \
    --query 'LtLHmPOI' \
    --startDate 'GIdqFiD3' \
    > test.out 2>&1
eval_tap $? 145 'AdminSearchUserV3' test.out

#- 146 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["qJCqhQF2", "mocNQa5R", "iDePEyI7"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 146 'AdminGetBulkUserByEmailAddressV3' test.out

#- 147 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'FHdSwrTV' \
    > test.out 2>&1
eval_tap $? 147 'AdminGetUserByUserIdV3' test.out

#- 148 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "D4DVHggO", "country": "K1bL2Q2y", "dateOfBirth": "WZfYog04", "displayName": "7qApukDq", "languageTag": "YD54CuBQ", "userName": "0qeezDxU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '3qlaby5M' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'AdminUpdateUserV3' test.out

#- 149 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IoYjfKNR' \
    --activeOnly 'false' \
    --after 'G3v0GYgC' \
    --before 'Gbso5AHw' \
    --limit '25' \
    > test.out 2>&1
eval_tap $? 149 'AdminGetUserBanV3' test.out

#- 150 AdminBanUserV3
# body param: body
echo '{"ban": "TrMdcBCf", "comment": "1UAv3Urf", "endDate": "1HrYpMFN", "reason": "VAZOrRYl", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AeIWBgA4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminBanUserV3' test.out

#- 151 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'OArk5vGu' \
    --namespace $AB_NAMESPACE \
    --userId 'Msifqmnc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'AdminUpdateUserBanV3' test.out

#- 152 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "iWYlNdO1", "emailAddress": "68Ih2trf", "languageTag": "zY1B976d"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fqjPSG6k' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'AdminSendVerificationCodeV3' test.out

#- 153 AdminVerifyAccountV3
# body param: body
echo '{"Code": "kePGHNIH", "ContactType": "ybAdvaKQ", "LanguageTag": "DBRHqgzt", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'NnDzeNC4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminVerifyAccountV3' test.out

#- 154 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'kC5vzHCj' \
    > test.out 2>&1
eval_tap $? 154 'GetUserVerificationCode' test.out

#- 155 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '2gR1CFkV' \
    > test.out 2>&1
eval_tap $? 155 'AdminGetUserDeletionStatusV3' test.out

#- 156 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ZIemR2Uz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminUpdateUserDeletionStatusV3' test.out

#- 157 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "UaLJUSN3", "country": "LukBrx4D", "dateOfBirth": "yvFGfmoD", "displayName": "REaM1zKf", "emailAddress": "y10Qws3j", "password": "jC1uEGs7", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Qj2zkgIw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 157 'AdminUpgradeHeadlessAccountV3' test.out

#- 158 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId '5ILgOcxQ' \
    > test.out 2>&1
eval_tap $? 158 'AdminDeleteUserInformationV3' test.out

#- 159 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId '1X1fObFC' \
    --after '0.591558685496552' \
    --before '0.5795300561313702' \
    --limit '31' \
    > test.out 2>&1
eval_tap $? 159 'AdminGetUserLoginHistoriesV3' test.out

#- 160 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 55, "Resource": "ZFG0EHeS", "SchedAction": 35, "SchedCron": "J9IRxvfN", "SchedRange": ["caFm8uMA", "JNDQZmc8", "U3ZVpKjY"]}, {"Action": 12, "Resource": "IuEQe9kY", "SchedAction": 99, "SchedCron": "UZhoYNGj", "SchedRange": ["KXxIkJNe", "oAsjok2h", "hTuT8Joe"]}, {"Action": 93, "Resource": "BDZ0pG74", "SchedAction": 91, "SchedCron": "Ur9enttE", "SchedRange": ["KssCRwne", "Zd4QS9KJ", "DyAf6lVq"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId '1vqHGAVZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminUpdateUserPermissionV3' test.out

#- 161 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 54, "Resource": "GG1ZppDx", "SchedAction": 18, "SchedCron": "2yke65fr", "SchedRange": ["PnmUnxcc", "W8Ni3kRV", "nlFwOFmi"]}, {"Action": 54, "Resource": "N6mvEC5r", "SchedAction": 78, "SchedCron": "TxIPAVL4", "SchedRange": ["NNge9PRJ", "cgagdSiU", "iBUdfJ0x"]}, {"Action": 99, "Resource": "v15jbgLZ", "SchedAction": 36, "SchedCron": "lYKjW8cJ", "SchedRange": ["OqW6jGae", "Q0bhO4Tt", "WrOninXZ"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'gjq7UvIj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 161 'AdminAddUserPermissionsV3' test.out

#- 162 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 91, "Resource": "mbpjAWwV"}, {"Action": 91, "Resource": "AYFPcQyp"}, {"Action": 56, "Resource": "JxbnBPa0"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'b6fJ5tNe' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminDeleteUserPermissionBulkV3' test.out

#- 163 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '1' \
    --namespace $AB_NAMESPACE \
    --resource 'GW03Cx34' \
    --userId 'iVD3IPRP' \
    > test.out 2>&1
eval_tap $? 163 'AdminDeleteUserPermissionV3' test.out

#- 164 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pYvRz9q5' \
    --after '1m1B5FUH' \
    --before 'EGSF1s4F' \
    --limit '23' \
    > test.out 2>&1
eval_tap $? 164 'AdminGetUserPlatformAccountsV3' test.out

#- 165 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'pkuKFU7c' \
    > test.out 2>&1
eval_tap $? 165 'AdminGetListJusticePlatformAccounts' test.out

#- 166 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'KvbR9xKX' \
    --userId 'QTE5ruit' \
    > test.out 2>&1
eval_tap $? 166 'AdminGetUserMapping' test.out

#- 167 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'nMZ6Orl8' \
    --userId 'qV4UBotQ' \
    > test.out 2>&1
eval_tap $? 167 'AdminCreateJusticeUser' test.out

#- 168 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "D3CmPwuS", "platformUserId": "rQPBgsh0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'B65cTAUF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 168 'AdminLinkPlatformAccount' test.out

#- 169 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "Df0gasDd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'fBwyMmV4' \
    --userId 'Od6ojk8p' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 169 'AdminPlatformUnlinkV3' test.out

#- 170 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'LnBM8G8E' \
    --userId 'xVqGVc2H' \
    --ticket 'wQ5KUaeP' \
    > test.out 2>&1
eval_tap $? 170 'AdminPlatformLinkV3' test.out

#- 171 AdminDeleteUserRolesV3
# body param: body
echo '["u1i0opfv", "rMwvOgV0", "PKXLuOpH"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vTCKfDg6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminDeleteUserRolesV3' test.out

#- 172 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "qxiprSRX", "roleId": "M4Pw1WzB"}, {"namespace": "8icfUWHi", "roleId": "xdtwyiI7"}, {"namespace": "6pBaG16z", "roleId": "v5jcoyEd"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BQPtQJGd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminSaveUserRoleV3' test.out

#- 173 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'kkeRYAXz' \
    --userId 'Eog8KsZB' \
    > test.out 2>&1
eval_tap $? 173 'AdminAddUserRoleV3' test.out

#- 174 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'gZ6jrz3E' \
    --userId 'Hk5DPt5R' \
    > test.out 2>&1
eval_tap $? 174 'AdminDeleteUserRoleV3' test.out

#- 175 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "13dFYTa5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '7mkn5Rf9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminUpdateUserStatusV3' test.out

#- 176 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'aIvMSvXf' \
    > test.out 2>&1
eval_tap $? 176 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 177 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "Brssg5nz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'BnekFG2Q' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminUpdateClientSecretV3' test.out

#- 178 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'QbWMPJjK' \
    --before 'obu7Snq3' \
    --isWildcard 'true' \
    --limit '51' \
    > test.out 2>&1
eval_tap $? 178 'AdminGetRolesV3' test.out

#- 179 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "managers": [{"displayName": "P8EFT52U", "namespace": "K50qYV18", "userId": "K6cZ5f88"}, {"displayName": "MLlRsq2d", "namespace": "L9bnTiqK", "userId": "5dfj3JYv"}, {"displayName": "YVNJrfHy", "namespace": "GQQE2jBi", "userId": "jMeNejmO"}], "members": [{"displayName": "pT8FbWNZ", "namespace": "l4RZhUmR", "userId": "iQaEiky9"}, {"displayName": "HzmmBLLG", "namespace": "D8KOzHOb", "userId": "Dxf9AGWx"}, {"displayName": "6Yq9fWhW", "namespace": "oP1Xs05c", "userId": "LVOUbwqc"}], "permissions": [{"action": 0, "resource": "FpXxwe65", "schedAction": 24, "schedCron": "bdzkWfzy", "schedRange": ["JtgvINa1", "RgZryJqE", "SpZ9mp1X"]}, {"action": 1, "resource": "nHjvdfsH", "schedAction": 22, "schedCron": "ihlaCSKD", "schedRange": ["Mq33ByLg", "AvIA0MEy", "M72Qgsil"]}, {"action": 20, "resource": "hEuyyejG", "schedAction": 85, "schedCron": "G0npeJBJ", "schedRange": ["W4YDdrVn", "KpQGIs5E", "RxpTTkCC"]}], "roleName": "RU06KyYb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminCreateRoleV3' test.out

#- 180 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'X8O9dK01' \
    > test.out 2>&1
eval_tap $? 180 'AdminGetRoleV3' test.out

#- 181 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'zkSWb15p' \
    > test.out 2>&1
eval_tap $? 181 'AdminDeleteRoleV3' test.out

#- 182 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": true, "roleName": "aK2Ds3is"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'gpS9EsM5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'AdminUpdateRoleV3' test.out

#- 183 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'b2SYeO04' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetRoleAdminStatusV3' test.out

#- 184 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'TlrpW6in' \
    > test.out 2>&1
eval_tap $? 184 'AdminUpdateAdminRoleStatusV3' test.out

#- 185 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'hIj7iumi' \
    > test.out 2>&1
eval_tap $? 185 'AdminRemoveRoleAdminV3' test.out

#- 186 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'JrI6YdZW' \
    --after 'AAv3LLQT' \
    --before 'pXuAlf2E' \
    --limit '47' \
    > test.out 2>&1
eval_tap $? 186 'AdminGetRoleManagersV3' test.out

#- 187 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "SNiTq1Gs", "namespace": "GDMfPu00", "userId": "IuoB25Bm"}, {"displayName": "smo59y9T", "namespace": "UT5XpuWm", "userId": "7XIrtWm8"}, {"displayName": "HZxuU9ak", "namespace": "EtCK7fMq", "userId": "ZP0P4brx"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'Y3Iwwf66' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminAddRoleManagersV3' test.out

#- 188 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "lgGs9N73", "namespace": "lN5gbDm2", "userId": "mKlrswz1"}, {"displayName": "rwveu3ti", "namespace": "TfggHzkg", "userId": "zC0lUISG"}, {"displayName": "ijubSpRV", "namespace": "ZyaGARlx", "userId": "HH0MijTi"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'LwL42U7h' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 188 'AdminRemoveRoleManagersV3' test.out

#- 189 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'wOh5yU6H' \
    --after 'yn5BCNPV' \
    --before 'LO1iA1Pg' \
    --limit '19' \
    > test.out 2>&1
eval_tap $? 189 'AdminGetRoleMembersV3' test.out

#- 190 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "7Ohi6Wn5", "namespace": "FMKAHvBA", "userId": "VsiucPgC"}, {"displayName": "MbbDBqGG", "namespace": "1Kjknxz0", "userId": "MQ5TN1CN"}, {"displayName": "73hvXYRZ", "namespace": "JmZo8c3S", "userId": "iLgEappb"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'uxZKEY3N' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminAddRoleMembersV3' test.out

#- 191 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "2xhveSq9", "namespace": "73LHuXPl", "userId": "1ti1Cxfr"}, {"displayName": "ehAFgKzC", "namespace": "qf9BrdV9", "userId": "SzAGM0Hy"}, {"displayName": "l2cxznrL", "namespace": "IdMFOD3v", "userId": "LgsgObwk"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'QkbZgqbV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 191 'AdminRemoveRoleMembersV3' test.out

#- 192 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 28, "resource": "OJWMSRzM", "schedAction": 59, "schedCron": "xDxNyUL6", "schedRange": ["zkIUZvni", "wgVLnWR4", "5LOIO7sR"]}, {"action": 2, "resource": "b3VvN7UR", "schedAction": 25, "schedCron": "CwdMKbjy", "schedRange": ["5xxA8yxI", "eXivdgjb", "bYn9wz5v"]}, {"action": 85, "resource": "TYU0l0NY", "schedAction": 30, "schedCron": "WkPlLWBo", "schedRange": ["7MyPliop", "jK5v9cKz", "TmCacMgP"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'j6l6bcIX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminUpdateRolePermissionsV3' test.out

#- 193 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 92, "resource": "a4ZocU0j", "schedAction": 2, "schedCron": "35JWnZsd", "schedRange": ["5JxdXsH3", "7NGWj8v5", "R2zGfgmE"]}, {"action": 84, "resource": "bUfjsqyQ", "schedAction": 45, "schedCron": "L3zXYfT3", "schedRange": ["gMhQ1z3i", "4CR5z2Fl", "1SFu0EdW"]}, {"action": 75, "resource": "NFrMbjEt", "schedAction": 41, "schedCron": "y2HDSwKo", "schedRange": ["EQxAWcw6", "avuecj2h", "o1aSFIFa"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'k3aREzpR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminAddRolePermissionsV3' test.out

#- 194 AdminDeleteRolePermissionsV3
# body param: body
echo '["Bmz544zA", "ImWAUKX6", "wESeSKlQ"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'fJziethA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminDeleteRolePermissionsV3' test.out

#- 195 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '45' \
    --resource 'F2PoJC1D' \
    --roleId '1PTJI4t2' \
    > test.out 2>&1
eval_tap $? 195 'AdminDeleteRolePermissionV3' test.out

#- 196 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 196 'AdminGetMyUserV3' test.out

#- 197 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'HDRphP4Y' \
    --extend_exp 'true' \
    --redirect_uri 'vOmZ6GVw' \
    --password 'cD8zQsRG' \
    --request_id 'Q5AjV7CJ' \
    --user_name 'OOvJHguQ' \
    > test.out 2>&1
eval_tap $? 197 'UserAuthenticationV3' test.out

#- 198 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'nvUYsgGw' \
    --linkingToken 'WsIXlNIc' \
    --password 'X2eGkupQ' \
    --username 'DJQo4VDz' \
    > test.out 2>&1
eval_tap $? 198 'AuthenticationWithPlatformLinkV3' test.out

#- 199 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --extend_exp 'false' \
    --linkingToken 'WxwM7UHG' \
    > test.out 2>&1
eval_tap $? 199 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 200 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 200 'GetCountryLocationV3' test.out

#- 201 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 201 'Logout' test.out

#- 202 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '25JySUXv' \
    --userId 'EzKkbmal' \
    > test.out 2>&1
eval_tap $? 202 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 203 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lmKR4SRm' \
    > test.out 2>&1
eval_tap $? 203 'RevokeUserV3' test.out

#- 204 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'd5vf9quC' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'false' \
    --redirectUri 'TQ26lKlY' \
    --scope 'ivGQHzZK' \
    --state 'wgmtixcE' \
    --targetAuthPage '3MPoEJTp' \
    --clientId 'xkybS0jj' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 204 'AuthorizeV3' test.out

#- 205 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'ZbwjyV8v' \
    > test.out 2>&1
eval_tap $? 205 'TokenIntrospectionV3' test.out

#- 206 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 206 'GetJWKSV3' test.out

#- 207 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'xft9OIy5' \
    --mfaToken 'MlZApCEb' \
    > test.out 2>&1
eval_tap $? 207 'Change2faMethod' test.out

#- 208 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'fGxrrro7' \
    --factor 'gclE3qgq' \
    --mfaToken 'VIpHKBG9' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 208 'Verify2faCode' test.out

#- 209 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId '2Yx9tiIT' \
    --userId '0AWyAi41' \
    > test.out 2>&1
eval_tap $? 209 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 210 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'pLZSajtY' \
    --clientId 'mGs7V97I' \
    --redirectUri 'gJYlGZ2Y' \
    --requestId 'KrTFMMt0' \
    > test.out 2>&1
eval_tap $? 210 'AuthCodeRequestV3' test.out

#- 211 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId '9VnAbwU0' \
    --client_id 'Az9avCiU' \
    --createHeadless 'false' \
    --device_id 'PSSR0mzD' \
    --platform_token '9SVea1p3' \
    > test.out 2>&1
eval_tap $? 211 'PlatformTokenGrantV3' test.out

#- 212 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 212 'GetRevocationListV3' test.out

#- 213 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token '355Cvt3o' \
    > test.out 2>&1
eval_tap $? 213 'TokenRevocationV3' test.out

#- 214 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --client_id 'e4nChg4X' \
    --code 'GLJw8iqO' \
    --code_verifier 'xg7GG1DJ' \
    --extend_exp 'false' \
    --password 'ZpDHGx2Y' \
    --redirect_uri 'Xk0jQmyM' \
    --refresh_token 'lsYwrDtv' \
    --username 'coxjJUsH' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 214 'TokenGrantV3' test.out

#- 215 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token '3lALflwq' \
    > test.out 2>&1
eval_tap $? 215 'VerifyTokenV3' test.out

#- 216 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'McP8kYWx' \
    --code '69wEprJ1' \
    --error 'auY8SH2T' \
    --openidAssocHandle 'JxOKGcQ4' \
    --openidClaimedId '2AlugPr0' \
    --openidIdentity 'veoVjvw6' \
    --openidMode 'ena0SLKu' \
    --openidNs '3Yr9w1LW' \
    --openidOpEndpoint 'F2YIDCqS' \
    --openidResponseNonce 'nlK6rT7e' \
    --openidReturnTo 'GaBJlzcw' \
    --openidSig 'kXKPmrDn' \
    --openidSigned 'ErcrzDpR' \
    --state 'RWUv450H' \
    > test.out 2>&1
eval_tap $? 216 'PlatformAuthenticationV3' test.out

#- 217 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'false' \
    --languageCode 'wAPxNWwa' \
    > test.out 2>&1
eval_tap $? 217 'PublicGetInputValidations' test.out

#- 218 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 218 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 219 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'nDyTu7Gc' \
    > test.out 2>&1
eval_tap $? 219 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 220 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["AViGISWx", "iJrEA6dt", "Uyc5AANW"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gE43KtJb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 220 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 221 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'rtNRI0JI' \
    --platformUserId 'CwvgTPRS' \
    > test.out 2>&1
eval_tap $? 221 'PublicGetUserByPlatformUserIDV3' test.out

#- 222 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'e6yERlgM' \
    > test.out 2>&1
eval_tap $? 222 'PublicGetAsyncStatus' test.out

#- 223 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'EoV6j5gp' \
    --limit '54' \
    --offset '56' \
    --query '9jGGW7EG' \
    > test.out 2>&1
eval_tap $? 223 'PublicSearchUserV3' test.out

#- 224 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "7BA1Y1DM", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "NjaRCeOK", "policyId": "mmEAAVFD", "policyVersionId": "0bHMPAod"}, {"isAccepted": true, "localizedPolicyVersionId": "yYzasGFC", "policyId": "4tNrVoFb", "policyVersionId": "Nlaf6jcs"}, {"isAccepted": true, "localizedPolicyVersionId": "SZIL8lAt", "policyId": "dNAEnEtm", "policyVersionId": "tEVLnpAf"}], "authType": "IQsRzCXF", "code": "mtEyJGkd", "country": "AARupDC3", "dateOfBirth": "scgvhIIY", "displayName": "KwdjRYv6", "emailAddress": "2amRhEDI", "password": "uFG7XkAY", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 224 'PublicCreateUserV3' test.out

#- 225 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'gD8vsMPP' \
    --query '4FT6vFkQ' \
    > test.out 2>&1
eval_tap $? 225 'CheckUserAvailability' test.out

#- 226 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["GOdbTkW6", "i8y4EkIM", "vMWbZrYy"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'PublicBulkGetUsers' test.out

#- 227 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "mZdaiXBv", "languageTag": "wsNbosQL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'PublicSendRegistrationCode' test.out

#- 228 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "ydOq0yxZ", "emailAddress": "K797rlia"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 228 'PublicVerifyRegistrationCode' test.out

#- 229 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "LIOHztxl", "languageTag": "gvY8Y7h5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 229 'PublicForgotPasswordV3' test.out

#- 230 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'VWZLzTYH' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 230 'GetAdminInvitationV3' test.out

#- 231 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "DfmnlIVN", "policyId": "2mE91FLV", "policyVersionId": "E8R714pz"}, {"isAccepted": true, "localizedPolicyVersionId": "7DuQrYOS", "policyId": "yiSp3T7W", "policyVersionId": "2HBVb0cI"}, {"isAccepted": true, "localizedPolicyVersionId": "R2EiupUu", "policyId": "j84SJtaf", "policyVersionId": "hzofIu4V"}], "authType": "EMAILPASSWD", "country": "YWFhoLdh", "dateOfBirth": "fC1X02jt", "displayName": "xeBPxeiq", "password": "fJJlMpRw", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'AaehPDtC' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'CreateUserFromInvitationV3' test.out

#- 232 UpdateUserV3
# body param: body
echo '{"avatarUrl": "uhWL4Mi8", "country": "3ERmN6ff", "dateOfBirth": "O1dlvg33", "displayName": "PwS8jWcH", "languageTag": "kZhjYIBJ", "userName": "dytpAALu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'UpdateUserV3' test.out

#- 233 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "J6gdJ8Bt", "country": "pifBKPT9", "dateOfBirth": "HyiTn1SL", "displayName": "o50sIcKY", "languageTag": "4xB7vpLD", "userName": "s8ILsb6t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'PublicPartialUpdateUserV3' test.out

#- 234 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "zaME8pgH", "emailAddress": "VgvWyz7C", "languageTag": "5wfn9GfV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'PublicSendVerificationCodeV3' test.out

#- 235 PublicUserVerificationV3
# body param: body
echo '{"code": "dqQQntZf", "contactType": "Cs4lg8RS", "languageTag": "E633T58d", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'PublicUserVerificationV3' test.out

#- 236 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "m6Jnhg5H", "country": "QdPtOG9U", "dateOfBirth": "RZlZ0rIa", "displayName": "UJ5fy14N", "emailAddress": "gwIYBkWw", "password": "9PRCdWAL", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'PublicUpgradeHeadlessAccountV3' test.out

#- 237 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "a5hwWTXw", "password": "Fpv0uVUC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'PublicVerifyHeadlessAccountV3' test.out

#- 238 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "Zl3EXLba", "newPassword": "MQ6GGl7g", "oldPassword": "VR0GlGk2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'PublicUpdatePasswordV3' test.out

#- 239 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'fj79lA6t' \
    > test.out 2>&1
eval_tap $? 239 'PublicCreateJusticeUser' test.out

#- 240 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'aUaV2r5G' \
    --redirectUri 'MSVnukTc' \
    --ticket '5fOTHjQg' \
    > test.out 2>&1
eval_tap $? 240 'PublicPlatformLinkV3' test.out

#- 241 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "Dy2H5P8p"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ziw8KRC4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'PublicPlatformUnlinkV3' test.out

#- 242 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'aWDRwY2d' \
    > test.out 2>&1
eval_tap $? 242 'PublicPlatformUnlinkAllV3' test.out

#- 243 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'RwZ2O6AK' \
    --ticket 'gZxkQeqG' \
    > test.out 2>&1
eval_tap $? 243 'PublicForcePlatformLinkV3' test.out

#- 244 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId '12Xvh90D' \
    --clientId 'nvAjMt7I' \
    --redirectUri 'eiVnxgzO' \
    > test.out 2>&1
eval_tap $? 244 'PublicWebLinkPlatform' test.out

#- 245 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId '35K2mL5e' \
    --state 'ylRZ22aE' \
    > test.out 2>&1
eval_tap $? 245 'PublicWebLinkPlatformEstablish' test.out

#- 246 ResetPasswordV3
# body param: body
echo '{"code": "6POuWzmT", "emailAddress": "WCEIOiXL", "newPassword": "Qfxcn1Nv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'ResetPasswordV3' test.out

#- 247 PublicGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'KG8am5yZ' \
    > test.out 2>&1
eval_tap $? 247 'PublicGetUserByUserIdV3' test.out

#- 248 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Dsz1QDWz' \
    --activeOnly 'true' \
    --after 'wYbIjUVe' \
    --before 'KxUnM0g3' \
    --limit '4' \
    > test.out 2>&1
eval_tap $? 248 'PublicGetUserBanHistoryV3' test.out

#- 249 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'K3DO3ecZ' \
    > test.out 2>&1
eval_tap $? 249 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 250 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'XXbO4hRa' \
    > test.out 2>&1
eval_tap $? 250 'PublicGetUserInformationV3' test.out

#- 251 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'j8xSXUFu' \
    --after '0.881946502170119' \
    --before '0.9700391758564073' \
    --limit '21' \
    > test.out 2>&1
eval_tap $? 251 'PublicGetUserLoginHistoriesV3' test.out

#- 252 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'kfc2bR9v' \
    --after '5ZuVTAME' \
    --before 'xyCZioUd' \
    --limit '84' \
    > test.out 2>&1
eval_tap $? 252 'PublicGetUserPlatformAccountsV3' test.out

#- 253 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "MRH7z4JL", "platformUserId": "sUSMRNry"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'fKSMgNEY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'PublicLinkPlatformAccount' test.out

#- 254 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["ZFVG8pE5", "j5tbnLYN", "BNvxGtBm"], "requestId": "zvVqjWOr"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'Plklpn1Z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 254 'PublicForceLinkPlatformWithProgression' test.out

#- 255 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'z96mEFyX' \
    > test.out 2>&1
eval_tap $? 255 'PublicGetPublisherUserV3' test.out

#- 256 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '1CAbVe9F' \
    --password 'XXBtCBqP' \
    > test.out 2>&1
eval_tap $? 256 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 257 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'CYNXrDXb' \
    --before 'GhWWAhi5' \
    --isWildcard 'false' \
    --limit '96' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetRolesV3' test.out

#- 258 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'YbNvSw92' \
    > test.out 2>&1
eval_tap $? 258 'PublicGetRoleV3' test.out

#- 259 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 259 'PublicGetMyUserV3' test.out

#- 260 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "asPhG9t8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'PublicSendVerificationLinkV3' test.out

#- 261 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code '1jY8G3f1' \
    > test.out 2>&1
eval_tap $? 261 'PublicVerifyUserByLinkV3' test.out

#- 262 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'apT5qx7U' \
    --code '8PHrnmDQ' \
    --error 'hPxwNoK6' \
    --state 'dp62lGn1' \
    > test.out 2>&1
eval_tap $? 262 'PlatformAuthenticateSAMLV3Handler' test.out

#- 263 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'Gkut3uoS' \
    --payload 'yXDRMFFo' \
    > test.out 2>&1
eval_tap $? 263 'LoginSSOClient' test.out

#- 264 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'sZjK6AIg' \
    > test.out 2>&1
eval_tap $? 264 'LogoutSSOClient' test.out

#- 265 AdminCreateTestUsersV4
# body param: body
echo '{"count": 39}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'AdminCreateTestUsersV4' test.out

#- 266 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["YcwCvIcG", "lUgdzHSW", "8NUAxU7Y"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'AdminBulkCheckValidUserIDV4' test.out

#- 267 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "Cczw8JSh", "country": "AwP2dh2Z", "dateOfBirth": "U9XtKUAb", "displayName": "W3UM6TsH", "languageTag": "PtMC2g86", "userName": "ylpFP7OR"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '2OW71L4a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'AdminUpdateUserV4' test.out

#- 268 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "RwkIL62d", "emailAddress": "vki4O1RZ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'UFGOBQIY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'AdminUpdateUserEmailAddressV4' test.out

#- 269 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'kWvlwz9i' \
    > test.out 2>&1
eval_tap $? 269 'AdminDisableUserMFAV4' test.out

#- 270 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Rzcq2Jh7' \
    > test.out 2>&1
eval_tap $? 270 'AdminListUserRolesV4' test.out

#- 271 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["INejgQmx", "iQcw5n8e", "an27rTR0"], "roleId": "4OaMKJak"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId '8gOoVSxG' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 271 'AdminUpdateUserRoleV4' test.out

#- 272 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["898YJ7uZ", "go639pA1", "wOdY3BRN"], "roleId": "D2KUUSF2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'r6ZuvCcj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 272 'AdminAddUserRoleV4' test.out

#- 273 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["7WFjnx0z", "UzkRhb0l", "1jyidlMZ"], "roleId": "pciGsxLO"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'we4hhttd' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'AdminRemoveUserRoleV4' test.out

#- 274 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'true' \
    --limit '32' \
    --offset '8' \
    > test.out 2>&1
eval_tap $? 274 'AdminGetRolesV4' test.out

#- 275 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "roleName": "8dlWTYJ1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 275 'AdminCreateRoleV4' test.out

#- 276 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'Sggsj1BY' \
    > test.out 2>&1
eval_tap $? 276 'AdminGetRoleV4' test.out

#- 277 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'fP7yzal5' \
    > test.out 2>&1
eval_tap $? 277 'AdminDeleteRoleV4' test.out

#- 278 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "roleName": "EQCxZsan"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'URHMRa8K' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'AdminUpdateRoleV4' test.out

#- 279 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 36, "resource": "oW4m5KGs", "schedAction": 19, "schedCron": "DwXwKBdX", "schedRange": ["EnbjNVRw", "qXNpqDRO", "vJGrSGFU"]}, {"action": 22, "resource": "k0uxVG0v", "schedAction": 75, "schedCron": "DAe58KEH", "schedRange": ["xIpCof4s", "lCQzYF7B", "4rNtwqoP"]}, {"action": 65, "resource": "GoY6qMa3", "schedAction": 90, "schedCron": "i7rWdY4r", "schedRange": ["o3yqAb9x", "6cmEmrRt", "BLYeOvTS"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'sdpmPA2P' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'AdminUpdateRolePermissionsV4' test.out

#- 280 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 0, "resource": "1o9piDGZ", "schedAction": 51, "schedCron": "DufUU8Ae", "schedRange": ["DEQ0hvTS", "2BbcBjrD", "NupvVKcJ"]}, {"action": 31, "resource": "Bpo2k8vw", "schedAction": 11, "schedCron": "V9TcxRrS", "schedRange": ["yNlKLvKU", "qKZnBH0B", "wl7ComsS"]}, {"action": 43, "resource": "1bX2XoT9", "schedAction": 28, "schedCron": "oF19dvQm", "schedRange": ["hMY28dHO", "Pp2vPbVC", "VpzCmV1o"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId '7YoCgcNE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 280 'AdminAddRolePermissionsV4' test.out

#- 281 AdminDeleteRolePermissionsV4
# body param: body
echo '["ZCim6ran", "xVoRNy4a", "i7bMDXVr"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'rmDWVg82' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 281 'AdminDeleteRolePermissionsV4' test.out

#- 282 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'Ykrwl9jZ' \
    --after 'nu3WnJWj' \
    --before '9vYnMUyd' \
    --limit '52' \
    > test.out 2>&1
eval_tap $? 282 'AdminListAssignedUsersV4' test.out

#- 283 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["RwcGjhrJ", "DLPexAMy", "LUeWfUK6"], "namespace": "lyBYCGCw", "userId": "NU9AI95Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'SN5H3mPt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'AdminAssignUserToRoleV4' test.out

#- 284 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "MigVKgxD", "userId": "SqpkXmUm"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'Foju5kPN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 284 'AdminRevokeUserFromRoleV4' test.out

#- 285 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "c9jC3PcX", "country": "beWmY9uq", "dateOfBirth": "rNilNqVi", "displayName": "b9Zi79cQ", "languageTag": "xHZU3KHu", "userName": "jUgLeCpk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'AdminUpdateMyUserV4' test.out

#- 286 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 286 'AdminDisableMyAuthenticatorV4' test.out

#- 287 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'SmYarzpD' \
    > test.out 2>&1
eval_tap $? 287 'AdminEnableMyAuthenticatorV4' test.out

#- 288 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 288 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 289 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 289 'AdminGetMyBackupCodesV4' test.out

#- 290 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 290 'AdminGenerateMyBackupCodesV4' test.out

#- 291 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 291 'AdminDisableMyBackupCodesV4' test.out

#- 292 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 292 'AdminDownloadMyBackupCodesV4' test.out

#- 293 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 293 'AdminEnableMyBackupCodesV4' test.out

#- 294 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 294 'AdminGetMyEnabledFactorsV4' test.out

#- 295 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'YVwHsCvq' \
    > test.out 2>&1
eval_tap $? 295 'AdminMakeFactorMyDefaultV4' test.out

#- 296 AdminInviteUserV4
# body param: body
echo '{"assignedNamespaces": ["BNoN4tlu", "nXqOYhXl", "lCxZ64MY"], "emailAddresses": ["F3V87CFk", "y2AxUuo4", "JyF7vN3d"], "isAdmin": false, "roleId": "hhFknTuB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'AdminInviteUserV4' test.out

#- 297 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "BERU1dnl", "policyId": "E7xwGeob", "policyVersionId": "QXCbPd9X"}, {"isAccepted": false, "localizedPolicyVersionId": "4Zxgw0J1", "policyId": "6btobD2X", "policyVersionId": "74zQCbdj"}, {"isAccepted": true, "localizedPolicyVersionId": "qEgIlHI0", "policyId": "7GsOLpdl", "policyVersionId": "MPcz0b2C"}], "authType": "EMAILPASSWD", "country": "mohTGk9J", "dateOfBirth": "oM6VjIJ2", "displayName": "4sQL0MT8", "emailAddress": "xlofjALl", "password": "45rR14HW", "passwordMD5Sum": "QsdWA6t9", "username": "Jyly3VWi", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 297 'PublicCreateTestUserV4' test.out

#- 298 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "qfQfMVg5", "policyId": "flVf8jRO", "policyVersionId": "Ib341tgF"}, {"isAccepted": true, "localizedPolicyVersionId": "XtJ4wYTm", "policyId": "tMuyXlCl", "policyVersionId": "1KNpipOo"}, {"isAccepted": true, "localizedPolicyVersionId": "tV54XA1S", "policyId": "7lfmLSaV", "policyVersionId": "g19pS00s"}], "authType": "EMAILPASSWD", "code": "4VVxSTTT", "country": "JcuWIvYJ", "dateOfBirth": "PUpjpc0f", "displayName": "bzIbmOBw", "emailAddress": "vIGkQvDc", "password": "6glQnBtl", "passwordMD5Sum": "sVumETSy", "reachMinimumAge": false, "username": "C54yBis9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'PublicCreateUserV4' test.out

#- 299 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "cPBAohOY", "policyId": "8NI9E0Vs", "policyVersionId": "xG0o5JMJ"}, {"isAccepted": false, "localizedPolicyVersionId": "iRJ1SLMa", "policyId": "cohhnyl1", "policyVersionId": "Q2VR9CVB"}, {"isAccepted": false, "localizedPolicyVersionId": "3iTkm47q", "policyId": "ar9laLnd", "policyVersionId": "Iy3dY6Zh"}], "authType": "EMAILPASSWD", "country": "HsqES9FX", "dateOfBirth": "s7sgpAAb", "displayName": "Ik7na1rR", "password": "2yZTbF5u", "reachMinimumAge": false, "username": "Su32PvZv"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId '4aUKmntc' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'CreateUserFromInvitationV4' test.out

#- 300 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "AVUW7CoQ", "country": "EuTb44x4", "dateOfBirth": "dczCsr1v", "displayName": "idDilz8N", "languageTag": "mjCuPtST", "userName": "3cHach3u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'PublicUpdateUserV4' test.out

#- 301 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "vAs4Sq9o", "emailAddress": "46c0hrGu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'PublicUpdateUserEmailAddressV4' test.out

#- 302 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "YrYQQ2p6", "country": "HlB3gWUH", "dateOfBirth": "Y7yOnqim", "displayName": "qVio6f59", "emailAddress": "m4HfYJGd", "password": "X976jboP", "reachMinimumAge": false, "username": "rfzg4I6K", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 303 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "wF0r1QhE", "password": "QO0YD50W", "username": "jhXYhLNA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'PublicUpgradeHeadlessAccountV4' test.out

#- 304 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 304 'PublicDisableMyAuthenticatorV4' test.out

#- 305 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'OKYLo7Q7' \
    > test.out 2>&1
eval_tap $? 305 'PublicEnableMyAuthenticatorV4' test.out

#- 306 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 306 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 307 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 307 'PublicGetMyBackupCodesV4' test.out

#- 308 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 308 'PublicGenerateMyBackupCodesV4' test.out

#- 309 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 309 'PublicDisableMyBackupCodesV4' test.out

#- 310 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 310 'PublicDownloadMyBackupCodesV4' test.out

#- 311 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 311 'PublicEnableMyBackupCodesV4' test.out

#- 312 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token '97uJasqN' \
    > test.out 2>&1
eval_tap $? 312 'PublicRemoveTrustedDeviceV4' test.out

#- 313 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 313 'PublicGetMyEnabledFactorsV4' test.out

#- 314 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'jCY3aUAZ' \
    > test.out 2>&1
eval_tap $? 314 'PublicMakeFactorMyDefaultV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE