#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..341"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "bkl72cJM", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "blockedWord": ["KQ5UCciU", "KyD34f95", "nwGuWEjF"], "description": [{"language": "m1WcCFYD", "message": ["M48AwRTq", "A8MzoZJt", "AqcqAp8a"]}, {"language": "fXXfJfrN", "message": ["6qf7sPCH", "ZuyOpH44", "qXRdCTm3"]}, {"language": "3u59xVko", "message": ["HDOOJyTw", "gpyoJJ1D", "1dRR6eag"]}], "isCustomRegex": false, "letterCase": "ImwcNMVi", "maxLength": 62, "maxRepeatingAlphaNum": 29, "maxRepeatingSpecialCharacter": 13, "minCharType": 27, "minLength": 93, "regex": "gkI8GNov", "specialCharacterLocation": "UNCsC40Q", "specialCharacters": ["noRkitd4", "wjH5BlyB", "rq5cLzWE"]}}, {"field": "DNE2VaG7", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "blockedWord": ["OgcuYZj2", "TbxrQIZi", "Wr6CmWln"], "description": [{"language": "cSGNI0ga", "message": ["DTb6GuVr", "l7tVT8Dc", "cZ9w6svQ"]}, {"language": "ZvKht4Sv", "message": ["ducLjySN", "ke7beG3V", "DyRSzOHL"]}, {"language": "aIEe7kip", "message": ["dCguhXaF", "gBEey3D7", "vYSu4lKV"]}], "isCustomRegex": false, "letterCase": "KC2UB1Jm", "maxLength": 69, "maxRepeatingAlphaNum": 10, "maxRepeatingSpecialCharacter": 12, "minCharType": 36, "minLength": 85, "regex": "C37htWC5", "specialCharacterLocation": "XYKhwsbM", "specialCharacters": ["vYfC5GLO", "8dugVaNO", "FbOAm9AD"]}}, {"field": "wsM9NsDA", "validation": {"allowAllSpecialCharacters": true, "allowDigit": true, "allowLetter": false, "allowSpace": false, "allowUnicode": true, "blockedWord": ["xgQWijJN", "DIIh4vL7", "wGAhJ3RR"], "description": [{"language": "KMh4g94N", "message": ["jBvkZIFg", "mfIu580B", "YNlUygoC"]}, {"language": "XvUtxOGR", "message": ["AyBxMTYi", "qcPsM4bV", "P09r519g"]}, {"language": "wVgSo0ga", "message": ["R3aQkXiB", "bT4nLeCF", "3gvSQuc5"]}], "isCustomRegex": false, "letterCase": "ebIh3sng", "maxLength": 59, "maxRepeatingAlphaNum": 33, "maxRepeatingSpecialCharacter": 28, "minCharType": 57, "minLength": 23, "regex": "L5D8NQhw", "specialCharacterLocation": "LTsywPue", "specialCharacters": ["YFi6wQp8", "HU9ajMZD", "vzEFwWSa"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'fNNOdVtd' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'JwSJP5dV' \
    --before '57IZZO49' \
    --limit '56' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 30, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 72}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'wCoPHh32' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType '4ocoY4KT' \
    --limit '18' \
    --offset '17' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "lykfoiRs", "comment": "FKBQd469", "endDate": "JOioD0Xa", "reason": "HYR06Sf5", "skipNotif": true, "userIds": ["CMBtT5Oz", "UoDVB6OK", "jQHLRx7e"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "63vHx8zD", "userId": "IjgRr0G3"}, {"banId": "Av5chxPj", "userId": "K5iAzoaX"}, {"banId": "tDAconDB", "userId": "zSagKtdK"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'lUdwR9tD' \
    --clientName 'kjAv00l2' \
    --clientType 'p0oX9Tom' \
    --limit '14' \
    --offset '68' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["YaPgRC6c", "vNLMEeGi", "CNYUrJk8"], "baseUri": "IZCbLU0C", "clientId": "Yh0fatIs", "clientName": "5i7MsDWI", "clientPermissions": [{"action": 20, "resource": "YtI8chu0", "schedAction": 16, "schedCron": "D4MLuEMD", "schedRange": ["YFHMoSU3", "784IflGD", "609PUyrd"]}, {"action": 69, "resource": "l5pqN7MI", "schedAction": 30, "schedCron": "FPWBLbqo", "schedRange": ["PhKjJnby", "6V1rpkqg", "rJF3CrXm"]}, {"action": 34, "resource": "lE6ElHGj", "schedAction": 51, "schedCron": "RKmEUXL0", "schedRange": ["glPucoZR", "i5wsEV6t", "VfNE61Yz"]}], "clientPlatform": "IR8sw5qz", "deletable": true, "description": "q77kS1LQ", "namespace": "b0ZNOAcX", "oauthAccessTokenExpiration": 61, "oauthAccessTokenExpirationTimeUnit": "Y8Cr9HmI", "oauthClientType": "6rntr6pS", "oauthRefreshTokenExpiration": 4, "oauthRefreshTokenExpirationTimeUnit": "7i8f2ll3", "redirectUri": "YihRU6R7", "scopes": ["khFn8tNA", "3FV3Px6V", "gwayo3Wl"], "secret": "Y9GtLNJj", "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'NOMoOUqN' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId '7LAyTCpl' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["ApO7kts7", "poaLjE2E", "ksnPNlay"], "baseUri": "2j77g1hB", "clientName": "bqe2SFCN", "clientPermissions": [{"action": 5, "resource": "Ilpw787P", "schedAction": 97, "schedCron": "MOJ0f3lL", "schedRange": ["PH8g6wOt", "1FRnl9gh", "dFQJiSMZ"]}, {"action": 71, "resource": "OeMsybjc", "schedAction": 35, "schedCron": "AOzlv9H8", "schedRange": ["MKNs1JlF", "IFTjq47e", "LDjhToj0"]}, {"action": 23, "resource": "6wjRDVwM", "schedAction": 94, "schedCron": "T6xfaVGN", "schedRange": ["LrJfPkwd", "UjWzkdIO", "JokIqaak"]}], "clientPlatform": "1PW77r1U", "deletable": false, "description": "8RbZl7Ta", "namespace": "7OfsMHGn", "oauthAccessTokenExpiration": 54, "oauthAccessTokenExpirationTimeUnit": "vd9GzUpm", "oauthRefreshTokenExpiration": 41, "oauthRefreshTokenExpirationTimeUnit": "GmWQiiHT", "redirectUri": "pJcnxCpq", "scopes": ["u9LaWKU7", "WapWylWR", "tNv4fFRL"], "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId '3y8vNMOF' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 10, "resource": "TeEE7CcI"}, {"action": 64, "resource": "onCCB9eA"}, {"action": 9, "resource": "cC4hrmQZ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'h9UWPUZQ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 54, "resource": "bejrfa0J"}, {"action": 37, "resource": "QpdbGBP3"}, {"action": 31, "resource": "2EnMsX4m"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId '9BmTF8jz' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '86' \
    --clientId 'WhtISoNt' \
    --namespace $AB_NAMESPACE \
    --resource 'tMCGNJgL' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 129 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 130 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '73' \
    --offset '72' \
    > test.out 2>&1
eval_tap $? 130 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 131 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'FW6iOIVb' \
    > test.out 2>&1
eval_tap $? 131 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 132 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "ee0oADpb", "AWSCognitoRegion": "o9NvvIAe", "AWSCognitoUserPool": "hzfUqzsC", "AllowedClients": ["EzRKBlMt", "jc6yMhz0", "wVEAP8BF"], "AppId": "KqNTHCJN", "AuthorizationEndpoint": "rwWuZqrF", "ClientId": "XkjhTPv1", "Environment": "QZT2s6ZL", "FederationMetadataURL": "LO1ZDaok", "GenericOauthFlow": true, "IsActive": true, "Issuer": "XhtS7FyX", "JWKSEndpoint": "qMzTm3WP", "KeyID": "bV5AoSDt", "NetflixCertificates": {"encryptedPrivateKey": "7HlrPJDQ", "encryptedPrivateKeyName": "OtilMjNL", "publicCertificate": "I8clWrGZ", "publicCertificateName": "uUJ00HAN", "rootCertificate": "Nqp4rQhr", "rootCertificateName": "v6WxbWdW"}, "OrganizationId": "qszjBZPF", "PlatformName": "xrXHpuwx", "RedirectUri": "2Xtyakoh", "RegisteredDomains": [{"affectedClientIDs": ["gxfyyDU2", "JXhlUnSb", "SuViA7tI"], "domain": "xD650kuJ", "namespaces": ["Dfw56Ob6", "kUWPVkdS", "3a5n449f"], "roleId": "CfJEoUzd"}, {"affectedClientIDs": ["IdHF4z7C", "qBt4iuLs", "9adN7uEq"], "domain": "QZNjWBMA", "namespaces": ["e8yBLVSn", "nfXnzFVC", "7zqNKGJx"], "roleId": "r1vIdm9r"}, {"affectedClientIDs": ["PWkeM808", "wqd5aJgl", "0FxXDct9"], "domain": "z9k1aJse", "namespaces": ["azRcy2ih", "I2xwiKPj", "6SXsKlb0"], "roleId": "GSVGUyuL"}], "Secret": "CzurNpyl", "TeamID": "You8H6vK", "TokenAuthenticationType": "80QzpYzE", "TokenClaimsMapping": {"RWZ8FpGt": "vUClcF2H", "fMZIBNgQ": "0GZL9fyp", "ISI4oiil": "VyJ57d4c"}, "TokenEndpoint": "kNcKXUbt", "scopes": ["Cm96aMRf", "Ji5PuBPF", "WmWcbIMt"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'VYIWdWPm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 133 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'FCY8ZKw7' \
    > test.out 2>&1
eval_tap $? 133 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 134 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "25m0pS5P", "AWSCognitoRegion": "GwZ9H2Nj", "AWSCognitoUserPool": "0NMfwpTN", "AllowedClients": ["n3jDmJJK", "tKySWFYy", "U9e8h7NJ"], "AppId": "kXqPuKEs", "AuthorizationEndpoint": "kJvgBNAn", "ClientId": "aYpDqDcI", "Environment": "qDKHpxrF", "FederationMetadataURL": "IpPCz7Tp", "GenericOauthFlow": false, "IsActive": false, "Issuer": "9qcQ9SaS", "JWKSEndpoint": "D2bBI1Cq", "KeyID": "dBphS8PZ", "NetflixCertificates": {"encryptedPrivateKey": "JkQG8JLz", "encryptedPrivateKeyName": "W1gXKWEg", "publicCertificate": "FZc86FfO", "publicCertificateName": "TfqtDsfS", "rootCertificate": "OrXrsDBQ", "rootCertificateName": "Q8zvtwfT"}, "OrganizationId": "RtRRSltg", "PlatformName": "6GVGQOWH", "RedirectUri": "MHfX9lIz", "RegisteredDomains": [{"affectedClientIDs": ["v333UMNF", "K5iGoLZN", "mIXRlt7h"], "domain": "59owDwtF", "namespaces": ["vrczG5kv", "dXD6SkGZ", "q6ULu0nz"], "roleId": "v9vAnadv"}, {"affectedClientIDs": ["pS7stw5j", "PzEQAOOS", "ZRosGP97"], "domain": "8k6AEbye", "namespaces": ["7lReuOe9", "uCoZffDY", "j3Xg2KKu"], "roleId": "f0xSGZrE"}, {"affectedClientIDs": ["QpfobXW6", "MffUoyzr", "bxAWxLts"], "domain": "ET7aUaFW", "namespaces": ["3AoyByCl", "wiJLEwur", "wWsjz2Xm"], "roleId": "LSV8Hbfb"}], "Secret": "ndstoJim", "TeamID": "4if8Txc3", "TokenAuthenticationType": "M5undTWV", "TokenClaimsMapping": {"YPuslSZq": "aZfgI13X", "vNvLLYcv": "6AiiWt5d", "w6XNMYtl": "zyE5JmmH"}, "TokenEndpoint": "c4tRO7Kt", "scopes": ["MzJCfsrY", "0Z5iTyMG", "TUfQcJ2o"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'hkU8lGdF' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 135 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["ra0npMRI", "DT5B26Oy", "VA077WTz"], "assignedNamespaces": ["n4hqUrKy", "RKl7mbW4", "N0RqPAUZ"], "domain": "1wnVM97w", "roleId": "rAEfVuQH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'cNa0x4YE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 136 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "ayaW27cq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Hdgcd2VS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 137 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'SB00pdwz' \
    > test.out 2>&1
eval_tap $? 137 'RetrieveSSOLoginPlatformCredential' test.out

#- 138 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "DSeriE63", "apiKey": "CEQYRW7M", "appId": "7u5h0k0u", "federationMetadataUrl": "Bn07uepX", "isActive": false, "redirectUri": "SmlpOgeh", "secret": "F6BZgb0s", "ssoUrl": "kW0h0uHE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'dojzsltX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AddSSOLoginPlatformCredential' test.out

#- 139 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'jKcrwKyw' \
    > test.out 2>&1
eval_tap $? 139 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 140 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "oB2d5lgj", "apiKey": "UBmoUDCg", "appId": "ZpRnmx2B", "federationMetadataUrl": "52pA2GAt", "isActive": false, "redirectUri": "ida8AHvi", "secret": "kOLufOvV", "ssoUrl": "s03eKTbc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'ep4omUJJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateSSOPlatformCredential' test.out

#- 141 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'JamauMHe' \
    --platformUserId '84LX0Jxq' \
    > test.out 2>&1
eval_tap $? 141 'AdminGetUserByPlatformUserIDV3' test.out

#- 142 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'JqknV2SG' \
    --after '31' \
    --before '82' \
    --limit '32' \
    > test.out 2>&1
eval_tap $? 142 'GetAdminUsersByRoleIdV3' test.out

#- 143 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress '2aZzs2pZ' \
    > test.out 2>&1
eval_tap $? 143 'AdminGetUserByEmailAddressV3' test.out

#- 144 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["6Kz98i4Z", "d4tJ2mE3", "2pdk8PKo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AdminListUserIDByUserIDsV3' test.out

#- 145 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["xRKNMVob", "tEOpD8QL", "XQqH8OfL"], "isAdmin": true, "roles": ["yTtHh44A", "LbTpD7J5", "BMNHtKeJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'AdminInviteUserV3' test.out

#- 146 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '1' \
    --offset '33' \
    > test.out 2>&1
eval_tap $? 146 'AdminListUsersV3' test.out

#- 147 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'DXC8BT2w' \
    --endDate 'kkQpj9B8' \
    --limit '72' \
    --offset '0' \
    --platformBy 'FQRDCAic' \
    --platformId 'ewjiGyIb' \
    --query '7mbxBu0i' \
    --startDate 'jLh29uhI' \
    > test.out 2>&1
eval_tap $? 147 'AdminSearchUserV3' test.out

#- 148 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["VMLGk4vp", "kUywowVg", "6NSga2Q0"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'AdminGetBulkUserByEmailAddressV3' test.out

#- 149 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'uJDrTL6t' \
    > test.out 2>&1
eval_tap $? 149 'AdminGetUserByUserIdV3' test.out

#- 150 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "6nEsjHh7", "country": "g1yVkqNL", "dateOfBirth": "82Rsuesm", "displayName": "bsU8aJQS", "languageTag": "vXMuEj5O", "userName": "cIzHlc6q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'zPUqKMci' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminUpdateUserV3' test.out

#- 151 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TxUCd7kd' \
    --activeOnly 'false' \
    --after 'mWtoKdfD' \
    --before 'z6iUh66P' \
    --limit '98' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserBanV3' test.out

#- 152 AdminBanUserV3
# body param: body
echo '{"ban": "m984th9O", "comment": "d2Ha2TIz", "endDate": "YTtjPc80", "reason": "l5mKkkDu", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UsEcS8wj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'AdminBanUserV3' test.out

#- 153 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'AXqNMfJz' \
    --namespace $AB_NAMESPACE \
    --userId 'nGhOckxp' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminUpdateUserBanV3' test.out

#- 154 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "lSunlq7M", "emailAddress": "12U2bnjv", "languageTag": "4CP9bHGL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'tjnJE5u4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminSendVerificationCodeV3' test.out

#- 155 AdminVerifyAccountV3
# body param: body
echo '{"Code": "UMiAEaqW", "ContactType": "cqMORlcP", "LanguageTag": "p99JXRNR", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MN5zhxKC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminVerifyAccountV3' test.out

#- 156 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'iFT20SP5' \
    > test.out 2>&1
eval_tap $? 156 'GetUserVerificationCode' test.out

#- 157 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YOVbKbWj' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetUserDeletionStatusV3' test.out

#- 158 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'b3CTmOGa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateUserDeletionStatusV3' test.out

#- 159 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "fJch4HhT", "country": "Ic6YfxqU", "dateOfBirth": "MGGQO0nS", "displayName": "hF2KA4bS", "emailAddress": "nD8MI6i6", "password": "scimZ9qC", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ND4XZPSb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminUpgradeHeadlessAccountV3' test.out

#- 160 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Wwir8UbA' \
    > test.out 2>&1
eval_tap $? 160 'AdminDeleteUserInformationV3' test.out

#- 161 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'q1JXFjnC' \
    --after '0.24562141380435143' \
    --before '0.0347683232804783' \
    --limit '41' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetUserLoginHistoriesV3' test.out

#- 162 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "NrN1KKak", "newPassword": "lGGmHzpp", "oldPassword": "tSGGf9r0"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'JLVXK5Xm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminResetPasswordV3' test.out

#- 163 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 50, "Resource": "IklTQzdi", "SchedAction": 94, "SchedCron": "nJ1xm0ga", "SchedRange": ["jTZSOabF", "DbfNFwqt", "qAOCgpbK"]}, {"Action": 27, "Resource": "XWdJo7iG", "SchedAction": 50, "SchedCron": "XbbiuRxk", "SchedRange": ["nLIng9vZ", "8WuLzbwy", "YWyfskrq"]}, {"Action": 94, "Resource": "2vt4xl5t", "SchedAction": 76, "SchedCron": "jMl7a1rN", "SchedRange": ["rZ11Gju4", "qNyj4sp5", "3wmc8xRV"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId '3BqCEik6' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'AdminUpdateUserPermissionV3' test.out

#- 164 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 67, "Resource": "BGjKusLC", "SchedAction": 40, "SchedCron": "AfQt9xAl", "SchedRange": ["u9dEiTEo", "wONWRRBY", "9ov65yZU"]}, {"Action": 20, "Resource": "VtUAn4Oe", "SchedAction": 13, "SchedCron": "GZYnbUqQ", "SchedRange": ["9BhX7Hal", "syJ4plJP", "5Abs5g8p"]}, {"Action": 41, "Resource": "bThuvD15", "SchedAction": 59, "SchedCron": "N0ptmw2P", "SchedRange": ["3FB4dDTp", "ckOQIcoL", "H6qRP68I"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TC6ppEwQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminAddUserPermissionsV3' test.out

#- 165 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 69, "Resource": "tR7ffaCz"}, {"Action": 57, "Resource": "F9M3gyBZ"}, {"Action": 93, "Resource": "yMwstthI"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Lb8CtPP5' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminDeleteUserPermissionBulkV3' test.out

#- 166 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '84' \
    --namespace $AB_NAMESPACE \
    --resource 'QCCP3P2R' \
    --userId 'AYwpH3zt' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteUserPermissionV3' test.out

#- 167 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId '9ZkFbA2L' \
    --after 'W2fARkf3' \
    --before 'JRfeiB4q' \
    --limit '79' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserPlatformAccountsV3' test.out

#- 168 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'sBtpBowc' \
    > test.out 2>&1
eval_tap $? 168 'AdminGetListJusticePlatformAccounts' test.out

#- 169 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'TDHnzEle' \
    --userId 'DPnn2b7m' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetUserMapping' test.out

#- 170 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'USCH4twu' \
    --userId 'ORMKGlLG' \
    > test.out 2>&1
eval_tap $? 170 'AdminCreateJusticeUser' test.out

#- 171 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "RtocoSgL", "platformUserId": "00ooaSNV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'bkGGvfOZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminLinkPlatformAccount' test.out

#- 172 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "C0U9XQ2t"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '2RCp9Yjv' \
    --userId 'Rau6bwBS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminPlatformUnlinkV3' test.out

#- 173 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '7Z5NAkAb' \
    --userId 'LYmjrwFa' \
    --ticket 'C0SHdEOk' \
    > test.out 2>&1
eval_tap $? 173 'AdminPlatformLinkV3' test.out

#- 174 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'QolWopc5' \
    --userId '7XSF6Hwk' \
    --platformToken 'pmf7DPgv' \
    > test.out 2>&1
eval_tap $? 174 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 175 AdminDeleteUserRolesV3
# body param: body
echo '["nHvXAvi2", "l1Zlpwm8", "p1VgrL8L"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'PqvI6xrI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminDeleteUserRolesV3' test.out

#- 176 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "agw0TGPv", "roleId": "dgBuBQBP"}, {"namespace": "ROGt3ovb", "roleId": "1J1hz2YX"}, {"namespace": "3kQ0FkvC", "roleId": "YyWIFPqO"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Kl6V7VQm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'AdminSaveUserRoleV3' test.out

#- 177 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId '5V90nKNV' \
    --userId 'adjm92gc' \
    > test.out 2>&1
eval_tap $? 177 'AdminAddUserRoleV3' test.out

#- 178 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'RR53Sewl' \
    --userId 'wWD7Rngy' \
    > test.out 2>&1
eval_tap $? 178 'AdminDeleteUserRoleV3' test.out

#- 179 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": false, "reason": "dJIkoewJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'H7jdIUwj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 179 'AdminUpdateUserStatusV3' test.out

#- 180 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'E4Py9umu' \
    > test.out 2>&1
eval_tap $? 180 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 181 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "Vr6s7ZDn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'Fhz7lChY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 181 'AdminUpdateClientSecretV3' test.out

#- 182 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'gtQw3gAz' \
    --before 'DjzBwFWc' \
    --isWildcard 'false' \
    --limit '67' \
    > test.out 2>&1
eval_tap $? 182 'AdminGetRolesV3' test.out

#- 183 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "managers": [{"displayName": "vB6wiqKx", "namespace": "hOYTA7Y9", "userId": "EE8Y7GuJ"}, {"displayName": "XOrGmgCc", "namespace": "Sp8jCNnS", "userId": "xKO4HvJA"}, {"displayName": "0h79wKpt", "namespace": "nyRgDk6o", "userId": "06HrgrQE"}], "members": [{"displayName": "Pa7Nos1A", "namespace": "FjZueueS", "userId": "BVJyVUk3"}, {"displayName": "Ig0wZijE", "namespace": "aDq8Ucsm", "userId": "G06jO1AA"}, {"displayName": "3tJ8kNoS", "namespace": "LJU1SJir", "userId": "ZYrxKXTq"}], "permissions": [{"action": 49, "resource": "Ou9pa10K", "schedAction": 12, "schedCron": "DJdWtvuy", "schedRange": ["nK8Yp7qF", "ne9FRyaH", "IShqmME3"]}, {"action": 46, "resource": "ez2ORhFR", "schedAction": 5, "schedCron": "Ovc0PIuM", "schedRange": ["RKzil7h0", "3deOpvft", "Yh04NZna"]}, {"action": 31, "resource": "WdoyZWhB", "schedAction": 23, "schedCron": "TW9pw0YT", "schedRange": ["iZxBVawA", "D6AmHLgE", "vrPRNll5"]}], "roleName": "vt2zO76U"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 183 'AdminCreateRoleV3' test.out

#- 184 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId '1lRYOvbc' \
    > test.out 2>&1
eval_tap $? 184 'AdminGetRoleV3' test.out

#- 185 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'ce3JPBxt' \
    > test.out 2>&1
eval_tap $? 185 'AdminDeleteRoleV3' test.out

#- 186 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "BMuzDQxl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId 'Tvjke4hW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 186 'AdminUpdateRoleV3' test.out

#- 187 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'e2AvJ9xi' \
    > test.out 2>&1
eval_tap $? 187 'AdminGetRoleAdminStatusV3' test.out

#- 188 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId '7kMrhfvv' \
    > test.out 2>&1
eval_tap $? 188 'AdminUpdateAdminRoleStatusV3' test.out

#- 189 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'fNjWToDt' \
    > test.out 2>&1
eval_tap $? 189 'AdminRemoveRoleAdminV3' test.out

#- 190 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'rHEp7RSm' \
    --after 'KuigGOhz' \
    --before 'sO9t8k1G' \
    --limit '14' \
    > test.out 2>&1
eval_tap $? 190 'AdminGetRoleManagersV3' test.out

#- 191 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "ckGu2lG3", "namespace": "5rtHbHqP", "userId": "ioijsTbE"}, {"displayName": "YZEXnhOs", "namespace": "qk6fUai4", "userId": "yxZsI2XN"}, {"displayName": "GrSzonbC", "namespace": "rbCNzLvp", "userId": "XqqAQbsv"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'JWrrDqE7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 191 'AdminAddRoleManagersV3' test.out

#- 192 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "MdqXawsV", "namespace": "KAtsPu39", "userId": "QTevwKRO"}, {"displayName": "rbbxI6hC", "namespace": "konpMj6q", "userId": "TWgq5W8i"}, {"displayName": "dY01GFSP", "namespace": "inM7bSJX", "userId": "GdPX0eRD"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'v83QUjoO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminRemoveRoleManagersV3' test.out

#- 193 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'cbUR40Kh' \
    --after '9QAgADYz' \
    --before 'WfcYN4Ii' \
    --limit '7' \
    > test.out 2>&1
eval_tap $? 193 'AdminGetRoleMembersV3' test.out

#- 194 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "IffV3KqG", "namespace": "AsFWqhad", "userId": "GeSLIm4k"}, {"displayName": "Z9e2lBgY", "namespace": "chp425DM", "userId": "DZiTenvJ"}, {"displayName": "9gVhpcQY", "namespace": "pHOiUFrr", "userId": "i9yjZVU5"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'ho7i2hrM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminAddRoleMembersV3' test.out

#- 195 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "CpTkMdVk", "namespace": "FkkGV9fH", "userId": "P4CxAjQ4"}, {"displayName": "FuewTJ5s", "namespace": "ClqiKCeq", "userId": "aHreXfOS"}, {"displayName": "V0J6INik", "namespace": "TCFJ5exX", "userId": "6jBY1j5u"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'I6WpHRE1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminRemoveRoleMembersV3' test.out

#- 196 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 49, "resource": "Lf0cY7qw", "schedAction": 1, "schedCron": "7g35IM6v", "schedRange": ["M8ghOVYC", "jLXyTOz2", "hG8OOyHA"]}, {"action": 44, "resource": "fYxQboU7", "schedAction": 87, "schedCron": "sodhltN0", "schedRange": ["gTWkTh4E", "mcxXddYi", "XkiAoULF"]}, {"action": 85, "resource": "yP2BFHSf", "schedAction": 40, "schedCron": "u1Do1h7F", "schedRange": ["Tw1Jw7lC", "J4kboJ9E", "tIRztbpx"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'McisLDr9' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminUpdateRolePermissionsV3' test.out

#- 197 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 79, "resource": "stxQfK4P", "schedAction": 17, "schedCron": "cCjIjjEk", "schedRange": ["34nwgyyt", "hTma983x", "Htoct3YS"]}, {"action": 58, "resource": "sWPbWGrg", "schedAction": 88, "schedCron": "PJpawDgI", "schedRange": ["O76IL6fP", "nQWrvw7S", "g5iCph7u"]}, {"action": 16, "resource": "wP7dNA8N", "schedAction": 45, "schedCron": "uWsVaHf8", "schedRange": ["VwKdR4sv", "bE87Xcbc", "PwIYa6zz"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'iWbWWtXv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminAddRolePermissionsV3' test.out

#- 198 AdminDeleteRolePermissionsV3
# body param: body
echo '["Ze2agI4T", "JuyvHV4K", "zmnhkyEj"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'DjXlvgSr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminDeleteRolePermissionsV3' test.out

#- 199 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '20' \
    --resource 'ZsoAzerX' \
    --roleId 'nmpfbWRi' \
    > test.out 2>&1
eval_tap $? 199 'AdminDeleteRolePermissionV3' test.out

#- 200 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 200 'AdminGetMyUserV3' test.out

#- 201 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'z47Qcad6' \
    --extend_exp 'false' \
    --redirect_uri 'fKy81mDP' \
    --password 'aCDDJKk3' \
    --request_id 'E0I4BDhG' \
    --user_name 'ilvOOWb4' \
    > test.out 2>&1
eval_tap $? 201 'UserAuthenticationV3' test.out

#- 202 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'dVAL8Ajo' \
    --linkingToken 'o8OFG9mt' \
    --password 'qbrq2PRs' \
    --username '2B7vwcrf' \
    > test.out 2>&1
eval_tap $? 202 'AuthenticationWithPlatformLinkV3' test.out

#- 203 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --extend_exp 'false' \
    --linkingToken 'FgyVj4p1' \
    > test.out 2>&1
eval_tap $? 203 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 204 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 204 'GetCountryLocationV3' test.out

#- 205 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 205 'Logout' test.out

#- 206 RequestGameTokenCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenCodeResponseV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'hmKZlW2f' \
    > test.out 2>&1
eval_tap $? 206 'RequestGameTokenCodeResponseV3' test.out

#- 207 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'UUFWpxl5' \
    --userId 'qUkOXhKm' \
    > test.out 2>&1
eval_tap $? 207 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 208 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '9gi6uYHA' \
    > test.out 2>&1
eval_tap $? 208 'RevokeUserV3' test.out

#- 209 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge '7AtF4uG4' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --redirectUri '9jCvDBXd' \
    --scope 'fkTuRASZ' \
    --state 'YzJrDGfR' \
    --targetAuthPage '37ITghuG' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId '6CNcYLQi' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 209 'AuthorizeV3' test.out

#- 210 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'm4tNFbE7' \
    > test.out 2>&1
eval_tap $? 210 'TokenIntrospectionV3' test.out

#- 211 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 211 'GetJWKSV3' test.out

#- 212 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'lahsm9J8' \
    --factor 'cRn7bkmG' \
    --mfaToken 'K4eYzvQ5' \
    > test.out 2>&1
eval_tap $? 212 'SendMFAAuthenticationCode' test.out

#- 213 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'SABdo9WF' \
    --mfaToken '0EluiX7Y' \
    > test.out 2>&1
eval_tap $? 213 'Change2faMethod' test.out

#- 214 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'r9MqufrK' \
    --factor 'VbNZqAt9' \
    --mfaToken 'kkq24tB8' \
    --rememberDevice 'false' \
    > test.out 2>&1
eval_tap $? 214 'Verify2faCode' test.out

#- 215 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'CXsUX38p' \
    --userId 'qRo7hs87' \
    > test.out 2>&1
eval_tap $? 215 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 216 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId '2arWmPE2' \
    --clientId '74N59zaL' \
    --redirectUri '0paAyds7' \
    --requestId 'ETuA5J7D' \
    > test.out 2>&1
eval_tap $? 216 'AuthCodeRequestV3' test.out

#- 217 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'JAIwO6po' \
    --client_id 'r7XJCVqG' \
    --createHeadless 'false' \
    --device_id 'LUBkDnBt' \
    --macAddress 'GN7qYGbW' \
    --platform_token 'ehhfSCRD' \
    > test.out 2>&1
eval_tap $? 217 'PlatformTokenGrantV3' test.out

#- 218 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 218 'GetRevocationListV3' test.out

#- 219 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'INQDjTIP' \
    > test.out 2>&1
eval_tap $? 219 'TokenRevocationV3' test.out

#- 220 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --client_id 'oZXY1eRQ' \
    --code 'XPNm2MRR' \
    --code_verifier 'EXebCpHS' \
    --extend_exp 'false' \
    --password 'cltx262y' \
    --redirect_uri '1TRalteB' \
    --refresh_token 'oHMkSfbr' \
    --username 'AFhBTBDl' \
    --grant_type 'refresh_token' \
    > test.out 2>&1
eval_tap $? 220 'TokenGrantV3' test.out

#- 221 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'oxGWAlTA' \
    > test.out 2>&1
eval_tap $? 221 'VerifyTokenV3' test.out

#- 222 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId '8z4RXXPg' \
    --code 'yNK3GB8B' \
    --error '4It2vKDa' \
    --openidAssocHandle 'kxny2u3U' \
    --openidClaimedId 'yhEvPOkC' \
    --openidIdentity 'kURXb7sR' \
    --openidMode 'OFyFhmB5' \
    --openidNs 'yprfyKKg' \
    --openidOpEndpoint 'UrSQ5Pf5' \
    --openidResponseNonce 'ijlhAzw6' \
    --openidReturnTo '6jc1zwRy' \
    --openidSig 'Kr6547ww' \
    --openidSigned 'mnoRMOFF' \
    --state 'qRk5JMb8' \
    > test.out 2>&1
eval_tap $? 222 'PlatformAuthenticationV3' test.out

#- 223 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode 'nfHZcG6p' \
    > test.out 2>&1
eval_tap $? 223 'PublicGetInputValidations' test.out

#- 224 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode 'VhiNp3O7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 224 'PublicGetCountryAgeRestrictionV3' test.out

#- 225 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 225 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 226 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'yYtz8wmm' \
    > test.out 2>&1
eval_tap $? 226 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 227 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["Al2Y3Jb6", "srgmxspy", "0WUcYWky"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId '7mrr4WUR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 227 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 228 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId '5QRQqbXJ' \
    --platformUserId 'A94jid4Q' \
    > test.out 2>&1
eval_tap $? 228 'PublicGetUserByPlatformUserIDV3' test.out

#- 229 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'NHLHR1ow' \
    > test.out 2>&1
eval_tap $? 229 'PublicGetAsyncStatus' test.out

#- 230 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'x6CYy55n' \
    --limit '96' \
    --offset '7' \
    --query 'kBZ8VhX5' \
    > test.out 2>&1
eval_tap $? 230 'PublicSearchUserV3' test.out

#- 231 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "WdZScTDl", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "FzbUcAkq", "policyId": "KmnRygJh", "policyVersionId": "V4OC2CBB"}, {"isAccepted": false, "localizedPolicyVersionId": "tbTY4Wcd", "policyId": "gcycAJZN", "policyVersionId": "UhUScLUQ"}, {"isAccepted": false, "localizedPolicyVersionId": "Ddzia662", "policyId": "CsMDEIQC", "policyVersionId": "4CgdvxfZ"}], "authType": "RbghxkaY", "code": "AHUlC3JX", "country": "he7PevqM", "dateOfBirth": "AJSULJA3", "displayName": "pkWTj2YT", "emailAddress": "a6GDUriR", "password": "8UM5VMed", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'PublicCreateUserV3' test.out

#- 232 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'wh5jkHUN' \
    --query 'HxyQ2GIP' \
    > test.out 2>&1
eval_tap $? 232 'CheckUserAvailability' test.out

#- 233 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["j6ocEEWk", "mbmGGOdr", "4ckLw8So"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'PublicBulkGetUsers' test.out

#- 234 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "f8uYsAGI", "languageTag": "1A0JP3Or"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'PublicSendRegistrationCode' test.out

#- 235 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "Jrycifge", "emailAddress": "2PvdRiHn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'PublicVerifyRegistrationCode' test.out

#- 236 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "2zo5TLpK", "languageTag": "7s6XBHAW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 236 'PublicForgotPasswordV3' test.out

#- 237 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'j63xsp5j' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 237 'GetAdminInvitationV3' test.out

#- 238 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "i6VUepBt", "policyId": "vDfwTqtM", "policyVersionId": "P3mGXgov"}, {"isAccepted": false, "localizedPolicyVersionId": "dpTvis7G", "policyId": "YQTPGgLs", "policyVersionId": "ZSxGtOqB"}, {"isAccepted": false, "localizedPolicyVersionId": "VRBHNwzP", "policyId": "ZD078Wog", "policyVersionId": "YeSrhWnm"}], "authType": "EMAILPASSWD", "country": "s21GUenH", "dateOfBirth": "iXHNvpD7", "displayName": "iu6PhiWg", "password": "ZzLkE7Zu", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'E4PddTkJ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'CreateUserFromInvitationV3' test.out

#- 239 UpdateUserV3
# body param: body
echo '{"avatarUrl": "2zJRuvIP", "country": "yMPlQjGq", "dateOfBirth": "pRvDRZ7R", "displayName": "RY2xUsFw", "languageTag": "VO1sJYZ3", "userName": "FOSPEBD8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'UpdateUserV3' test.out

#- 240 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "xJ7rmfhD", "country": "M2URWoek", "dateOfBirth": "A9fHWobJ", "displayName": "jK7pYGoQ", "languageTag": "5UNie887", "userName": "jtBjwsDM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'PublicPartialUpdateUserV3' test.out

#- 241 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "sEBbTL13", "emailAddress": "1MMzr76V", "languageTag": "CPNnC2GX"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'PublicSendVerificationCodeV3' test.out

#- 242 PublicUserVerificationV3
# body param: body
echo '{"code": "SkntUqpF", "contactType": "su4CYAtj", "languageTag": "WX8cFu0X", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'PublicUserVerificationV3' test.out

#- 243 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "vUN3OsmV", "country": "8mQ5KITw", "dateOfBirth": "VDn1OI7Y", "displayName": "eUYsjTq6", "emailAddress": "gcWw5YGa", "password": "B71w7A9B", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'PublicUpgradeHeadlessAccountV3' test.out

#- 244 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "5huxvYIi", "password": "MLg54lQW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'PublicVerifyHeadlessAccountV3' test.out

#- 245 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "8quXY093", "newPassword": "NuuKmGAp", "oldPassword": "7F57JGtP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'PublicUpdatePasswordV3' test.out

#- 246 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'xv25aCsa' \
    > test.out 2>&1
eval_tap $? 246 'PublicCreateJusticeUser' test.out

#- 247 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'eNYcJQp5' \
    --redirectUri '82gmKqm0' \
    --ticket '1Ak9614p' \
    > test.out 2>&1
eval_tap $? 247 'PublicPlatformLinkV3' test.out

#- 248 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "8NI3zfrn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'gWo8j0Co' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PublicPlatformUnlinkV3' test.out

#- 249 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Nv1FcEBF' \
    > test.out 2>&1
eval_tap $? 249 'PublicPlatformUnlinkAllV3' test.out

#- 250 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'RiFlmB61' \
    --ticket '1QgnAN4q' \
    > test.out 2>&1
eval_tap $? 250 'PublicForcePlatformLinkV3' test.out

#- 251 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'kbqMK2UD' \
    --clientId '9gaGkcBt' \
    --redirectUri 'atnb37WI' \
    > test.out 2>&1
eval_tap $? 251 'PublicWebLinkPlatform' test.out

#- 252 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'gTTXWUeu' \
    --state 'm4F9Sqia' \
    > test.out 2>&1
eval_tap $? 252 'PublicWebLinkPlatformEstablish' test.out

#- 253 ResetPasswordV3
# body param: body
echo '{"code": "cyu4wutl", "emailAddress": "IjX340nq", "newPassword": "Vbf4QETP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 253 'ResetPasswordV3' test.out

#- 254 PublicGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GoYecCrS' \
    > test.out 2>&1
eval_tap $? 254 'PublicGetUserByUserIdV3' test.out

#- 255 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'YcT2u2US' \
    --activeOnly 'true' \
    --after 'DwMZPB4V' \
    --before 'abX7qiyS' \
    --limit '20' \
    > test.out 2>&1
eval_tap $? 255 'PublicGetUserBanHistoryV3' test.out

#- 256 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'QqCtz3tH' \
    > test.out 2>&1
eval_tap $? 256 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 257 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'rfLBMWsI' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetUserInformationV3' test.out

#- 258 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'K9SlCnua' \
    --after '0.47324591440915753' \
    --before '0.07849179495557335' \
    --limit '1' \
    > test.out 2>&1
eval_tap $? 258 'PublicGetUserLoginHistoriesV3' test.out

#- 259 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'A1Abidii' \
    --after 'MpD0e7GJ' \
    --before 'YzMiIYBW' \
    --limit '37' \
    > test.out 2>&1
eval_tap $? 259 'PublicGetUserPlatformAccountsV3' test.out

#- 260 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MhKOb550' \
    > test.out 2>&1
eval_tap $? 260 'PublicListJusticePlatformAccountsV3' test.out

#- 261 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "PCq6PpE1", "platformUserId": "2OCq3J00"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'yrL4LDY2' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PublicLinkPlatformAccount' test.out

#- 262 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["N8srLV11", "yvwTbzTi", "JNGxGxRQ"], "requestId": "pqlHkVGa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'ulgrBzEk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 262 'PublicForceLinkPlatformWithProgression' test.out

#- 263 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 's3LP5KID' \
    > test.out 2>&1
eval_tap $? 263 'PublicGetPublisherUserV3' test.out

#- 264 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'kLxz1U52' \
    --password '6iJBtiQ4' \
    > test.out 2>&1
eval_tap $? 264 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 265 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'aKpWaBGF' \
    --before 'jhzu8i8M' \
    --isWildcard 'true' \
    --limit '65' \
    > test.out 2>&1
eval_tap $? 265 'PublicGetRolesV3' test.out

#- 266 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'WOXHjZ2i' \
    > test.out 2>&1
eval_tap $? 266 'PublicGetRoleV3' test.out

#- 267 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 267 'PublicGetMyUserV3' test.out

#- 268 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "3SvkM7GG"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 268 'PublicSendVerificationLinkV3' test.out

#- 269 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code '51EBAfnu' \
    > test.out 2>&1
eval_tap $? 269 'PublicVerifyUserByLinkV3' test.out

#- 270 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'u2RM8o9F' \
    --code 'I5rb8XYD' \
    --error 'zZpPcCGG' \
    --state 'Caw8lw0b' \
    > test.out 2>&1
eval_tap $? 270 'PlatformAuthenticateSAMLV3Handler' test.out

#- 271 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'yffECe3a' \
    --payload 'ljQVXHBc' \
    > test.out 2>&1
eval_tap $? 271 'LoginSSOClient' test.out

#- 272 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'yiQVQhW4' \
    > test.out 2>&1
eval_tap $? 272 'LogoutSSOClient' test.out

#- 273 RequestGameTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenResponseV3 \
    --code '6rCky664' \
    > test.out 2>&1
eval_tap $? 273 'RequestGameTokenResponseV3' test.out

#- 274 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'WJRKny5T' \
    > test.out 2>&1
eval_tap $? 274 'AdminGetDevicesByUserV4' test.out

#- 275 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType '0LR1ecoV' \
    --endDate 'W8HPCJ1f' \
    --limit '94' \
    --offset '17' \
    --startDate 'JLJqaot0' \
    > test.out 2>&1
eval_tap $? 275 'AdminGetBannedDevicesV4' test.out

#- 276 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId '62uru8CD' \
    > test.out 2>&1
eval_tap $? 276 'AdminGetUserDeviceBansV4' test.out

#- 277 AdminBanDeviceV4
# body param: body
echo '{"comment": "dDnxhTzh", "deviceId": "NFHT1k8i", "deviceType": "nj0J6sa9", "enabled": false, "endDate": "48EpLczi", "ext": {"iE3R7vq8": {}, "3IRY0YLg": {}, "pxddfcXq": {}}, "reason": "EqUrxpxE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 277 'AdminBanDeviceV4' test.out

#- 278 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'eaF1jj51' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 278 'AdminGetDeviceBanV4' test.out

#- 279 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'skSdyPVe' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 279 'AdminUpdateDeviceBanV4' test.out

#- 280 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'ZAhxnEXl' \
    --startDate 'jMAZrpFB' \
    --deviceType 'VXnV2RcG' \
    > test.out 2>&1
eval_tap $? 280 'AdminGenerateReportV4' test.out

#- 281 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 281 'AdminGetDeviceTypesV4' test.out

#- 282 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId '6in994SJ' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 282 'AdminGetDeviceBansV4' test.out

#- 283 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'GUGwP16V' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 283 'AdminDecryptDeviceV4' test.out

#- 284 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'Q9HR5DcK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 284 'AdminUnbanDeviceV4' test.out

#- 285 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'Mh6iJfQs' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 285 'AdminGetUsersByDeviceV4' test.out

#- 286 AdminCreateTestUsersV4
# body param: body
echo '{"count": 18}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'AdminCreateTestUsersV4' test.out

#- 287 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["BCsuUdGo", "me9QN7ow", "4w8aceuj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'AdminBulkCheckValidUserIDV4' test.out

#- 288 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "D22D91be", "country": "QiGquEB1", "dateOfBirth": "An4bVWVt", "displayName": "ASRBEplE", "languageTag": "afW9q204", "userName": "HepZvgeT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId '5rGqvUEv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'AdminUpdateUserV4' test.out

#- 289 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "8b0wlHs4", "emailAddress": "aDRrD0HK"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'XtJ6IlbI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 289 'AdminUpdateUserEmailAddressV4' test.out

#- 290 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'wxnvzKJf' \
    > test.out 2>&1
eval_tap $? 290 'AdminDisableUserMFAV4' test.out

#- 291 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'AezlaIQh' \
    > test.out 2>&1
eval_tap $? 291 'AdminListUserRolesV4' test.out

#- 292 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["e0gweHdI", "ERTpRqAu", "CK7MZYnD"], "roleId": "pgDpQnce"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'S8DrntYO' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AdminUpdateUserRoleV4' test.out

#- 293 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["eiYHNEEA", "cOlDvLop", "hQIB0skp"], "roleId": "2jjtR01Q"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'w9FP0OrY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'AdminAddUserRoleV4' test.out

#- 294 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["AUeVMaJM", "L5Pwyfoi", "8KxHoDEJ"], "roleId": "c0IAP1O3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'gHzMFrch' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'AdminRemoveUserRoleV4' test.out

#- 295 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'false' \
    --isWildcard 'false' \
    --limit '74' \
    --offset '69' \
    > test.out 2>&1
eval_tap $? 295 'AdminGetRolesV4' test.out

#- 296 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "roleName": "4D8Nfe0g"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 296 'AdminCreateRoleV4' test.out

#- 297 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'TU4nK2Eq' \
    > test.out 2>&1
eval_tap $? 297 'AdminGetRoleV4' test.out

#- 298 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'QVNo1YwS' \
    > test.out 2>&1
eval_tap $? 298 'AdminDeleteRoleV4' test.out

#- 299 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": true, "roleName": "Uq3NXFsu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'WEEeIeb8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'AdminUpdateRoleV4' test.out

#- 300 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 0, "resource": "NHyXPJew", "schedAction": 75, "schedCron": "G0WQOdpd", "schedRange": ["DUYG6N09", "21IJUUa3", "ppMadESw"]}, {"action": 4, "resource": "grv2LucJ", "schedAction": 2, "schedCron": "mwRkNSTM", "schedRange": ["r7GNQkjs", "NgPizGbs", "HD7GmUOe"]}, {"action": 29, "resource": "RU2z5dl1", "schedAction": 31, "schedCron": "69gW7Ncs", "schedRange": ["NjmDefLq", "zBwi1O2L", "NA5LCYcV"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'UobVhw8O' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminUpdateRolePermissionsV4' test.out

#- 301 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 48, "resource": "gkfOr6uy", "schedAction": 69, "schedCron": "Ur6bW2Ky", "schedRange": ["pd9y86X3", "NDPgurhU", "Sa4u9smA"]}, {"action": 94, "resource": "lU8oEEZt", "schedAction": 30, "schedCron": "a6naA1zk", "schedRange": ["CImMJnf7", "SoriigOl", "DSkYZVsj"]}, {"action": 10, "resource": "QKLLoE7n", "schedAction": 8, "schedCron": "vtvklldr", "schedRange": ["7qULUWV4", "U2VwALuc", "KlF8hc0g"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId '9ry1PhZ3' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'AdminAddRolePermissionsV4' test.out

#- 302 AdminDeleteRolePermissionsV4
# body param: body
echo '["7GXAjFue", "KR4ePLT7", "xFL3Ed8G"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'DhofQkJc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'AdminDeleteRolePermissionsV4' test.out

#- 303 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId '3VAAFhPl' \
    --after 'GlrmFRA8' \
    --before 'HZZ24SV5' \
    --limit '18' \
    > test.out 2>&1
eval_tap $? 303 'AdminListAssignedUsersV4' test.out

#- 304 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["yaJM0tSM", "YJsyuSDH", "U6AZgiON"], "namespace": "uaxg0eQY", "userId": "xQHdOLn8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'Uatre3VN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'AdminAssignUserToRoleV4' test.out

#- 305 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "kgqg9b8g", "userId": "YaCORs2M"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'NdMMutds' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'AdminRevokeUserFromRoleV4' test.out

#- 306 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "ZnzLf9hv", "country": "rzutZwnJ", "dateOfBirth": "r0JSD8U2", "displayName": "NcGJSL9T", "languageTag": "6kWKXVmH", "userName": "2R2yY8SW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'AdminUpdateMyUserV4' test.out

#- 307 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 307 'AdminDisableMyAuthenticatorV4' test.out

#- 308 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'rA9bIoGQ' \
    > test.out 2>&1
eval_tap $? 308 'AdminEnableMyAuthenticatorV4' test.out

#- 309 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 309 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 310 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 310 'AdminGetMyBackupCodesV4' test.out

#- 311 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 311 'AdminGenerateMyBackupCodesV4' test.out

#- 312 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 312 'AdminDisableMyBackupCodesV4' test.out

#- 313 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 313 'AdminDownloadMyBackupCodesV4' test.out

#- 314 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 314 'AdminEnableMyBackupCodesV4' test.out

#- 315 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 315 'AdminSendMyMFAEmailCodeV4' test.out

#- 316 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 316 'AdminDisableMyEmailV4' test.out

#- 317 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code '9to4pT1g' \
    > test.out 2>&1
eval_tap $? 317 'AdminEnableMyEmailV4' test.out

#- 318 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 318 'AdminGetMyEnabledFactorsV4' test.out

#- 319 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'wOK9gqDm' \
    > test.out 2>&1
eval_tap $? 319 'AdminMakeFactorMyDefaultV4' test.out

#- 320 AdminInviteUserV4
# body param: body
echo '{"assignedNamespaces": ["by2iJo3f", "qVNGr7lk", "8FrBWBeR"], "emailAddresses": ["9Hibu0VD", "4SkXlmCu", "wGIdeBMp"], "isAdmin": false, "roleId": "mUGBUBm2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'AdminInviteUserV4' test.out

#- 321 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "1knmIcqq", "policyId": "T8f5SvH8", "policyVersionId": "zj5HE4L7"}, {"isAccepted": true, "localizedPolicyVersionId": "wyGdsNm7", "policyId": "bLv1iG6O", "policyVersionId": "ikQGdG0C"}, {"isAccepted": false, "localizedPolicyVersionId": "U3DUTpRb", "policyId": "hxuLV7D7", "policyVersionId": "uMPzlzS8"}], "authType": "EMAILPASSWD", "country": "2LGbd4Q6", "dateOfBirth": "3UDlrFpJ", "displayName": "IXuu1liG", "emailAddress": "aPDqxJxX", "password": "IyNbx9EZ", "passwordMD5Sum": "i8qkwxDE", "username": "oAkANHo1", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'PublicCreateTestUserV4' test.out

#- 322 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "sHERkiWq", "policyId": "ovkson06", "policyVersionId": "w72KQcMC"}, {"isAccepted": true, "localizedPolicyVersionId": "2vH2WekG", "policyId": "JpQ2y6Tt", "policyVersionId": "4nwzngc9"}, {"isAccepted": false, "localizedPolicyVersionId": "GU8Csrw6", "policyId": "3NLTKJbN", "policyVersionId": "pMmChjRO"}], "authType": "EMAILPASSWD", "code": "UWeBmXhm", "country": "3cDRd7HJ", "dateOfBirth": "SCPXfA5p", "displayName": "LpezBh9s", "emailAddress": "fiWItzC7", "password": "GlvVwCkT", "passwordMD5Sum": "5GaGLJW0", "reachMinimumAge": true, "username": "7zvHFBaI"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'PublicCreateUserV4' test.out

#- 323 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "pZv2vsjo", "policyId": "hh1n5Vhu", "policyVersionId": "olvkIg0d"}, {"isAccepted": false, "localizedPolicyVersionId": "2jZC6y7p", "policyId": "N3fv45wq", "policyVersionId": "Ndq1xWEJ"}, {"isAccepted": true, "localizedPolicyVersionId": "zOYE3VFA", "policyId": "46RXzQTi", "policyVersionId": "DrZ2N5oA"}], "authType": "EMAILPASSWD", "country": "QRni3acN", "dateOfBirth": "W8CQLVCC", "displayName": "WjanFhEM", "password": "IoxCG8Hy", "reachMinimumAge": true, "username": "Jy3xesgk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'RlNfpUrg' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'CreateUserFromInvitationV4' test.out

#- 324 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "MltKeW33", "country": "aICnRI0K", "dateOfBirth": "cYD2R0M4", "displayName": "5geKHwW9", "languageTag": "S93kLbo9", "userName": "jukZ9HP3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicUpdateUserV4' test.out

#- 325 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "TaoWJggJ", "emailAddress": "TxbZ3KiL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'PublicUpdateUserEmailAddressV4' test.out

#- 326 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "ebHXfQCa", "country": "rregKcju", "dateOfBirth": "cBrD2JY1", "displayName": "PvTxIBiu", "emailAddress": "D9Z3x57i", "password": "wRfuhYli", "reachMinimumAge": false, "username": "wniKhFwk", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 327 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "zt3Q9JZl", "password": "Od7ciW74", "username": "pPL5kjAS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'PublicUpgradeHeadlessAccountV4' test.out

#- 328 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 328 'PublicDisableMyAuthenticatorV4' test.out

#- 329 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'LWvj3gBf' \
    > test.out 2>&1
eval_tap $? 329 'PublicEnableMyAuthenticatorV4' test.out

#- 330 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 330 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 331 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 331 'PublicGetMyBackupCodesV4' test.out

#- 332 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 332 'PublicGenerateMyBackupCodesV4' test.out

#- 333 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 333 'PublicDisableMyBackupCodesV4' test.out

#- 334 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 334 'PublicDownloadMyBackupCodesV4' test.out

#- 335 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 335 'PublicEnableMyBackupCodesV4' test.out

#- 336 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'Q4F9ifEe' \
    > test.out 2>&1
eval_tap $? 336 'PublicRemoveTrustedDeviceV4' test.out

#- 337 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 337 'PublicSendMyMFAEmailCodeV4' test.out

#- 338 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 338 'PublicDisableMyEmailV4' test.out

#- 339 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code '6fsdyTDy' \
    > test.out 2>&1
eval_tap $? 339 'PublicEnableMyEmailV4' test.out

#- 340 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 340 'PublicGetMyEnabledFactorsV4' test.out

#- 341 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor '6PMrmk66' \
    > test.out 2>&1
eval_tap $? 341 'PublicMakeFactorMyDefaultV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE