#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..347"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "iFDFptRh", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": false, "allowSpace": true, "allowUnicode": false, "blockedWord": ["FTWTsSwZ", "jViE1J04", "pmK8oLOx"], "description": [{"language": "HXY2hp9Q", "message": ["bhyLOpX3", "gfYZYrJb", "4AvFR6Oi"]}, {"language": "Pc6RVCro", "message": ["43KY8vLQ", "yIafeGIm", "X6innSSW"]}, {"language": "UqUF6dGY", "message": ["AeZFCQZK", "VXXNbCYQ", "ziIArMgM"]}], "isCustomRegex": false, "letterCase": "ejNDYxio", "maxLength": 2, "maxRepeatingAlphaNum": 6, "maxRepeatingSpecialCharacter": 72, "minCharType": 2, "minLength": 52, "regex": "fYzUpdH5", "specialCharacterLocation": "I5ZNYZmn", "specialCharacters": ["kbxdR6aP", "Kr5rO0Ok", "OSwM5afH"]}}, {"field": "AKfOsLRM", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": false, "allowSpace": true, "allowUnicode": true, "blockedWord": ["0hUGcBhh", "8TLducTI", "WBR5DpGs"], "description": [{"language": "oRVLo7vz", "message": ["dFanyv5m", "6ojSQ2Qx", "ATpXkNFX"]}, {"language": "d1Ol7rDz", "message": ["j1ApiH5r", "tqvJz4r4", "SA9vK7Lf"]}, {"language": "6qK5sHFv", "message": ["zpDgLiA6", "kCPIChrE", "1Qww47Ib"]}], "isCustomRegex": true, "letterCase": "a3A8FH1J", "maxLength": 68, "maxRepeatingAlphaNum": 3, "maxRepeatingSpecialCharacter": 48, "minCharType": 94, "minLength": 70, "regex": "CPeLZ6Be", "specialCharacterLocation": "cVUVLnJF", "specialCharacters": ["j7cANRpw", "nT3WeeYP", "n0VEcHZt"]}}, {"field": "d9XNJpfY", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": false, "allowSpace": true, "allowUnicode": false, "blockedWord": ["vr9RXEqG", "md4FDrSN", "tdldY2b2"], "description": [{"language": "GR5YXR4U", "message": ["ij4zcFpF", "sMonz8tb", "GmKQqCti"]}, {"language": "sKpteKjv", "message": ["dXN94xd5", "EVfZZH0c", "klES6JUl"]}, {"language": "6zy4x957", "message": ["TlTJDcan", "n4dSXviI", "aZI5y1fO"]}], "isCustomRegex": true, "letterCase": "wE1MbecY", "maxLength": 64, "maxRepeatingAlphaNum": 85, "maxRepeatingSpecialCharacter": 17, "minCharType": 59, "minLength": 92, "regex": "qHXEz8Vq", "specialCharacterLocation": "h8uWnHOy", "specialCharacters": ["1QXkvmDD", "Fyn86Cmj", "fAjM4b1u"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field 'I9whEGAw' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'hcDMYUFg' \
    --before 'QXKLYGJH' \
    --limit '69' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 46, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 92}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode 'mBjtVRkR' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'false' \
    --banType 'X67M1hXB' \
    --limit '53' \
    --offset '76' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "cQy2ZIie", "comment": "Zqhl4Fhj", "endDate": "QoV1KzRA", "reason": "g13jPlqW", "skipNotif": false, "userIds": ["3aBO5W2d", "DRovtXnY", "IEZltufN"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "qcaA0dEE", "userId": "wSjgfoXn"}, {"banId": "coUqazkv", "userId": "8c9cDuQf"}, {"banId": "hwASWKVC", "userId": "CjKznbUG"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'SnCS57p5' \
    --clientName 'XiOxN6dc' \
    --clientType 'QTilXDfO' \
    --limit '79' \
    --offset '60' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["LYebmTOb", "uM2K4oou", "ZdypGZwo"], "baseUri": "9FjeFvfi", "clientId": "xGrg1TYn", "clientName": "T5KEod47", "clientPermissions": [{"action": 11, "resource": "oBfdR93t", "schedAction": 93, "schedCron": "rjQYG4Rd", "schedRange": ["SAdACjNp", "kUVUiQFM", "Cw9ZkDZD"]}, {"action": 39, "resource": "SUShm89M", "schedAction": 29, "schedCron": "GXxpA7Bc", "schedRange": ["8LDn8yO6", "lcQUBiet", "qDP5Yocq"]}, {"action": 84, "resource": "vU6xVa4Z", "schedAction": 64, "schedCron": "RFTetb84", "schedRange": ["B1jxPlll", "PPglNJtL", "AMWq9rLj"]}], "clientPlatform": "MfjPO2vp", "deletable": true, "description": "UukFwelo", "namespace": "S6n5ex75", "oauthAccessTokenExpiration": 88, "oauthAccessTokenExpirationTimeUnit": "rzHR0c64", "oauthClientType": "XRTwG86C", "oauthRefreshTokenExpiration": 15, "oauthRefreshTokenExpirationTimeUnit": "63Ndw7Af", "parentNamespace": "217DDDak", "redirectUri": "anirD35E", "scopes": ["9ogSdAd2", "cXCosa90", "CJcZPcIC"], "secret": "FlEGpPNg", "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'rlfW7gCf' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'OZUlQDRO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["jwafA62U", "Ix8QmlcE", "VhvKCndh"], "baseUri": "09q0G4v4", "clientName": "6MJZ2MU5", "clientPermissions": [{"action": 80, "resource": "VrLQOL6q", "schedAction": 75, "schedCron": "QgNYOE3x", "schedRange": ["qol0YIBx", "AvjI6O7t", "BvBt5xZj"]}, {"action": 22, "resource": "3CPjeaCp", "schedAction": 55, "schedCron": "bjSkXdtS", "schedRange": ["3YaTITq5", "tDCqDY1O", "J1cU9TgI"]}, {"action": 46, "resource": "EAvFpNOM", "schedAction": 42, "schedCron": "vWvSQXRW", "schedRange": ["IkmGaT0t", "mJopk1Zz", "nNqbHX2R"]}], "clientPlatform": "SgYsuObj", "deletable": true, "description": "jbbKZZJj", "namespace": "m70pOrEU", "oauthAccessTokenExpiration": 33, "oauthAccessTokenExpirationTimeUnit": "5vMa1VqO", "oauthRefreshTokenExpiration": 95, "oauthRefreshTokenExpirationTimeUnit": "ct9L78LQ", "redirectUri": "RTG2tjCL", "scopes": ["oRruFvmh", "L6zPjsHq", "cVgvr9ma"], "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId '96MdUZgU' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 54, "resource": "PDRMrB0e"}, {"action": 78, "resource": "YVOmSq6h"}, {"action": 21, "resource": "7ynEYP80"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'Me0NmefP' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 70, "resource": "u9LVQO4K"}, {"action": 87, "resource": "Sq2BjcG2"}, {"action": 43, "resource": "FJeIHWDH"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId '3kyvhH8d' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '6' \
    --clientId 'dMNW66CQ' \
    --namespace $AB_NAMESPACE \
    --resource 'rTxSpeQz' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 129 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 130 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '31' \
    --offset '1' \
    > test.out 2>&1
eval_tap $? 130 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 131 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '0UkEqVDd' \
    > test.out 2>&1
eval_tap $? 131 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 132 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "tF5OE7UB", "AWSCognitoRegion": "vH8EPZ28", "AWSCognitoUserPool": "O94RAaMA", "AllowedClients": ["QwCfvAaM", "rZtVAJ3T", "AhQUYnf6"], "AppId": "HZKWRAjl", "AuthorizationEndpoint": "AepGRsfi", "ClientId": "bkHasPYZ", "Environment": "LtuGrbmC", "FederationMetadataURL": "iRvK6syE", "GenericOauthFlow": false, "IsActive": false, "Issuer": "7BGf9J4u", "JWKSEndpoint": "QcSsIOFZ", "KeyID": "jgLMKpGE", "NetflixCertificates": {"encryptedPrivateKey": "4GthHrej", "encryptedPrivateKeyName": "HLgFEOl3", "publicCertificate": "L2NXOwLo", "publicCertificateName": "vnNDjO1C", "rootCertificate": "zEsmUz7W", "rootCertificateName": "YbdPsJIu"}, "OrganizationId": "4f9M7gjz", "PlatformName": "2cqvI2Nj", "RedirectUri": "lRC3wBGM", "RegisteredDomains": [{"affectedClientIDs": ["pkxd4Ivd", "0aqlxL2a", "ophUiOPZ"], "domain": "AI9QLLrK", "namespaces": ["XnB4twEJ", "yToOvGc8", "Ovnln4xK"], "roleId": "oQEKeVpl"}, {"affectedClientIDs": ["aH4yyJDU", "KoC8qPJc", "Ilwr9Pqj"], "domain": "KcVdfcZy", "namespaces": ["qLslUWCW", "d51lpchJ", "dxYKUR0L"], "roleId": "V17Z4lnf"}, {"affectedClientIDs": ["gJ9l7mZO", "PLQoc9Dy", "YUzOozm9"], "domain": "DX5nDgVH", "namespaces": ["1YH3SX9Y", "Nruazwij", "dzlz0FJk"], "roleId": "wKS0HVpa"}], "Secret": "7P9UBpt1", "TeamID": "LGIWgsaZ", "TokenAuthenticationType": "nBXEjevV", "TokenClaimsMapping": {"g81zJz9v": "HOfYKZ2R", "AvjRKrN4": "I5K8LSi5", "IyhZM9S3": "byPsEVmM"}, "TokenEndpoint": "uGKhWFA7", "scopes": ["HMBwD9EB", "swSH9zB5", "iJQ0Z6dK"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'SoovkyZk' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 133 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '38im4WIE' \
    > test.out 2>&1
eval_tap $? 133 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 134 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "ZOG1eAnu", "AWSCognitoRegion": "PcuYFF8N", "AWSCognitoUserPool": "sguXwwNI", "AllowedClients": ["FHsxKaME", "ZImvQRX2", "QV3836Bp"], "AppId": "jkt9GMoJ", "AuthorizationEndpoint": "6vnf15Vj", "ClientId": "HBoOFgg9", "Environment": "YoLNlj5g", "FederationMetadataURL": "XkdImvhU", "GenericOauthFlow": true, "IsActive": true, "Issuer": "erVwanxh", "JWKSEndpoint": "5XZIOeqt", "KeyID": "St7dqLqh", "NetflixCertificates": {"encryptedPrivateKey": "Di1dEamI", "encryptedPrivateKeyName": "j8p3ueIe", "publicCertificate": "uNnhXKeo", "publicCertificateName": "sHhPGIZl", "rootCertificate": "bv322itU", "rootCertificateName": "oGOa3R8t"}, "OrganizationId": "abCwZz7t", "PlatformName": "nYQ9LqZy", "RedirectUri": "DYtY8Wm0", "RegisteredDomains": [{"affectedClientIDs": ["vqZUpT6O", "ZhTH25QB", "X2W2xXXP"], "domain": "Xe7cen0K", "namespaces": ["e8Hs4Kmp", "vflRIFHD", "VkxI0uXN"], "roleId": "lSy3B5mZ"}, {"affectedClientIDs": ["7y6N7DZn", "Z0sc2qe8", "O5QQ4JNA"], "domain": "VMLN1GS6", "namespaces": ["6wMCYTnM", "NDytLlCa", "uTWIvAE0"], "roleId": "SnMacPhP"}, {"affectedClientIDs": ["BbfhjoFM", "O3ChkNN8", "Dkc5DJql"], "domain": "Aiq6nJUz", "namespaces": ["z8o3VbVE", "mYYYwbml", "0YVQv6WR"], "roleId": "N6eIHRtL"}], "Secret": "UaADlfjP", "TeamID": "oBxiMzzS", "TokenAuthenticationType": "zSOfxflQ", "TokenClaimsMapping": {"Tm98O3Ns": "N624N7Al", "DG1jR5Lk": "gj0mzx7U", "SDtXz2nN": "543kPVya"}, "TokenEndpoint": "LHz4GDiV", "scopes": ["1SSMEZ7l", "nFYtizrz", "NZGPIz6Y"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'txtunQ3m' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 135 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["EcOR88cF", "bAV0ctPf", "AuEpDVki"], "assignedNamespaces": ["6WdKhZdM", "DuOfyK6r", "dyfPwZ5D"], "domain": "7yUtaDKB", "roleId": "KYreaZZi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'GSkmD5JY' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 136 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "92ULpglu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId '1qEwWoXH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 137 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'n0Py3pM4' \
    > test.out 2>&1
eval_tap $? 137 'RetrieveSSOLoginPlatformCredential' test.out

#- 138 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "iPl4SWox", "apiKey": "4FYfm554", "appId": "OkDwARdb", "federationMetadataUrl": "jW8HTlfo", "isActive": false, "redirectUri": "9hvIeR8b", "secret": "x2Hethji", "ssoUrl": "nb2FTpvT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'Dbzl0lCx' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AddSSOLoginPlatformCredential' test.out

#- 139 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'b4Lc0NZf' \
    > test.out 2>&1
eval_tap $? 139 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 140 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "7iKkkDOJ", "apiKey": "xrSRKkbM", "appId": "NAdxaIqP", "federationMetadataUrl": "ucNSLjIj", "isActive": true, "redirectUri": "bkChLt0R", "secret": "YcVOtR9v", "ssoUrl": "nU6ozBpT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'GH7Jwtl7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateSSOPlatformCredential' test.out

#- 141 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'wCvdRJeB' \
    --platformUserId '2QqIDROO' \
    > test.out 2>&1
eval_tap $? 141 'AdminGetUserByPlatformUserIDV3' test.out

#- 142 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'cgZkR4qd' \
    --after '17' \
    --before '62' \
    --limit '12' \
    > test.out 2>&1
eval_tap $? 142 'GetAdminUsersByRoleIdV3' test.out

#- 143 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'qkXGGgcD' \
    > test.out 2>&1
eval_tap $? 143 'AdminGetUserByEmailAddressV3' test.out

#- 144 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["GWiPcAVT", "WZ6IKTYA", "if32h7QJ"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AdminListUserIDByUserIDsV3' test.out

#- 145 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["gxmzOCSR", "dptDWS8u", "l4ZSpmWh"], "isAdmin": true, "namespace": "oe1P1Kvd", "roles": ["bgYEHOxr", "y8r9ZBhs", "boejGmXP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'AdminInviteUserV3' test.out

#- 146 AdminQueryThirdPlatformLinkHistoryV3
$CLI_EXE \
    --sn iam \
    --op AdminQueryThirdPlatformLinkHistoryV3 \
    --namespace $AB_NAMESPACE \
    --limit '80' \
    --offset '85' \
    --platformUserId 'e4iPLUuL' \
    --platformId 'MTWNxxfy' \
    > test.out 2>&1
eval_tap $? 146 'AdminQueryThirdPlatformLinkHistoryV3' test.out

#- 147 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '83' \
    --offset '74' \
    > test.out 2>&1
eval_tap $? 147 'AdminListUsersV3' test.out

#- 148 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'wPmzaIAE' \
    --endDate 'phRzcgYK' \
    --limit '11' \
    --offset '6' \
    --platformBy 'PzxSORZI' \
    --platformId 'lAQF0osF' \
    --query 'nqtLDeGA' \
    --startDate 'y0ZXIVXH' \
    > test.out 2>&1
eval_tap $? 148 'AdminSearchUserV3' test.out

#- 149 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["d9TyvgkA", "kgscIbXF", "dB71TyuC"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 149 'AdminGetBulkUserByEmailAddressV3' test.out

#- 150 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GihWlpF5' \
    > test.out 2>&1
eval_tap $? 150 'AdminGetUserByUserIdV3' test.out

#- 151 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "KdiLiihk", "country": "iAxFQLdQ", "dateOfBirth": "nYMlK5uI", "displayName": "qGmwd4e3", "languageTag": "PSzXNXRV", "userName": "23GZfMEd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BDCMFYzT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 151 'AdminUpdateUserV3' test.out

#- 152 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fycaAKJw' \
    --activeOnly 'true' \
    --after 'iW6ixUmi' \
    --before 'sH6MgoJu' \
    --limit '60' \
    > test.out 2>&1
eval_tap $? 152 'AdminGetUserBanV3' test.out

#- 153 AdminBanUserV3
# body param: body
echo '{"ban": "x4nFlmGK", "comment": "WLSm4vmt", "endDate": "9DWoeLrU", "reason": "2oGU8iVW", "skipNotif": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'V2KGuyLv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminBanUserV3' test.out

#- 154 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": true, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'M928haJo' \
    --namespace $AB_NAMESPACE \
    --userId 'BdxUVyY8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminUpdateUserBanV3' test.out

#- 155 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "Qr4qaBcH", "emailAddress": "qocgK0cN", "languageTag": "lJZPNsIP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'dRCgZhpz' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminSendVerificationCodeV3' test.out

#- 156 AdminVerifyAccountV3
# body param: body
echo '{"Code": "Q2NtEtUb", "ContactType": "HeYhpGif", "LanguageTag": "NmYbAApX", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Wfp3HomI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 156 'AdminVerifyAccountV3' test.out

#- 157 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'LqW2FPNE' \
    > test.out 2>&1
eval_tap $? 157 'GetUserVerificationCode' test.out

#- 158 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'Q7mLcVnQ' \
    > test.out 2>&1
eval_tap $? 158 'AdminGetUserDeletionStatusV3' test.out

#- 159 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'FxtitQBT' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminUpdateUserDeletionStatusV3' test.out

#- 160 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "IBYV71PR", "country": "AEnPEzAM", "dateOfBirth": "Zp9nBs4M", "displayName": "cbcgAcKt", "emailAddress": "iFdbOKLf", "password": "ycqJykfD", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'CtUAS0jW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 160 'AdminUpgradeHeadlessAccountV3' test.out

#- 161 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IK2kLEWh' \
    > test.out 2>&1
eval_tap $? 161 'AdminDeleteUserInformationV3' test.out

#- 162 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MpHg5Qfj' \
    --after '0.8746899556223062' \
    --before '0.933470221562598' \
    --limit '75' \
    > test.out 2>&1
eval_tap $? 162 'AdminGetUserLoginHistoriesV3' test.out

#- 163 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "tklIZzr1", "newPassword": "ce8dwNfa", "oldPassword": "Ysx2alR9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId '8c9EkvGc' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'AdminResetPasswordV3' test.out

#- 164 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 63, "Resource": "NNKty3Iq", "SchedAction": 100, "SchedCron": "LiFO7o0Y", "SchedRange": ["FiFddqvy", "RfY3jKsf", "w3Ntytvf"]}, {"Action": 73, "Resource": "9mH3hlzD", "SchedAction": 63, "SchedCron": "O3vWhmFZ", "SchedRange": ["B53HHdgw", "0kOgvTXf", "bvq5FIz8"]}, {"Action": 94, "Resource": "g1VYSsTr", "SchedAction": 57, "SchedCron": "0fxh397q", "SchedRange": ["YhRxFWK6", "mZ1fmx9I", "JMFqi98b"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId 'eYieHQv1' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminUpdateUserPermissionV3' test.out

#- 165 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 56, "Resource": "lRYeixaw", "SchedAction": 64, "SchedCron": "RyZvrfTR", "SchedRange": ["gNTGFKOs", "4219UM5n", "z6EtSAf9"]}, {"Action": 68, "Resource": "Yu7tAtwr", "SchedAction": 41, "SchedCron": "DSTwEsWG", "SchedRange": ["EVIh1kVC", "NF55tsiB", "x0RXe6Sy"]}, {"Action": 20, "Resource": "b6Ig4W6G", "SchedAction": 56, "SchedCron": "3veSmVow", "SchedRange": ["dHt8OWIi", "6PJtFz7K", "EzHUIAQX"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'VylbcHrm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminAddUserPermissionsV3' test.out

#- 166 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 2, "Resource": "9L6uPzEK"}, {"Action": 7, "Resource": "XkhUO9D7"}, {"Action": 93, "Resource": "8funEhpB"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'BCA6Veua' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteUserPermissionBulkV3' test.out

#- 167 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '16' \
    --namespace $AB_NAMESPACE \
    --resource 'NrqJRJQl' \
    --userId 'WnYjGbuc' \
    > test.out 2>&1
eval_tap $? 167 'AdminDeleteUserPermissionV3' test.out

#- 168 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TCqx5MjW' \
    --after 'GvUYUWAK' \
    --before 'yrn8179Y' \
    --limit '37' \
    > test.out 2>&1
eval_tap $? 168 'AdminGetUserPlatformAccountsV3' test.out

#- 169 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'tfP2yYCg' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetListJusticePlatformAccounts' test.out

#- 170 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'WIUfFvSf' \
    --userId 'tv5YnWFq' \
    > test.out 2>&1
eval_tap $? 170 'AdminGetUserMapping' test.out

#- 171 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'tyJQTuLX' \
    --userId 'HtOMn2bV' \
    > test.out 2>&1
eval_tap $? 171 'AdminCreateJusticeUser' test.out

#- 172 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "USuI04Lb", "platformUserId": "ssm0alD3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'k5rlArOt' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminLinkPlatformAccount' test.out

#- 173 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "d296Y1yD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'XheAPPaF' \
    --userId 'B83f1Uzf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 173 'AdminPlatformUnlinkV3' test.out

#- 174 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'cVcFKpg4' \
    --userId 'xz1HHL06' \
    --ticket 'e9VlcMJd' \
    > test.out 2>&1
eval_tap $? 174 'AdminPlatformLinkV3' test.out

#- 175 AdminGetThirdPartyPlatformTokenLinkStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetThirdPartyPlatformTokenLinkStatusV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'Bhytab44' \
    --userId 'K9qhJLa1' \
    --platformToken 'nnjrqerP' \
    > test.out 2>&1
eval_tap $? 175 'AdminGetThirdPartyPlatformTokenLinkStatusV3' test.out

#- 176 AdminDeleteUserRolesV3
# body param: body
echo '["pxi6k64Z", "zpeyonMM", "CGNm83pR"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'UIuLkucS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 176 'AdminDeleteUserRolesV3' test.out

#- 177 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "RMD7ZOYa", "roleId": "cRX1HNiC"}, {"namespace": "m3OSjg6f", "roleId": "m6LD35qz"}, {"namespace": "vytZ11K3", "roleId": "RSFN6tAD"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId '2YzQKynE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 177 'AdminSaveUserRoleV3' test.out

#- 178 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'MadDGrng' \
    --userId '2uAXcmhL' \
    > test.out 2>&1
eval_tap $? 178 'AdminAddUserRoleV3' test.out

#- 179 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'H2lCHF9y' \
    --userId 'RV0vqXAA' \
    > test.out 2>&1
eval_tap $? 179 'AdminDeleteUserRoleV3' test.out

#- 180 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "OuAwLyy2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'qWrGAUO7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminUpdateUserStatusV3' test.out

#- 181 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'MNb2Lvgi' \
    > test.out 2>&1
eval_tap $? 181 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 182 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "Z0MYBK7u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'OhHOeeRm' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'AdminUpdateClientSecretV3' test.out

#- 183 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after '91dsVnDu' \
    --before 'V2ueu5rN' \
    --isWildcard 'false' \
    --limit '63' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetRolesV3' test.out

#- 184 AdminCreateRoleV3
# body param: body
echo '{"adminRole": true, "deletable": true, "isWildcard": false, "managers": [{"displayName": "9L9MbfaN", "namespace": "BPG31MtV", "userId": "Y1cPvR5k"}, {"displayName": "IHDAzG0M", "namespace": "8CZTWgcf", "userId": "6bX0Of0M"}, {"displayName": "3EKkiO6c", "namespace": "D4b43ARb", "userId": "Jowlzxtq"}], "members": [{"displayName": "YoENGFXu", "namespace": "tYFuB2ez", "userId": "tfVOXpLY"}, {"displayName": "OPPSMilw", "namespace": "aKH6F2n6", "userId": "1vnAZ6nk"}, {"displayName": "MNc9k6It", "namespace": "NOxoaUCp", "userId": "aHvwQU1z"}], "permissions": [{"action": 97, "resource": "xb7GfRTp", "schedAction": 28, "schedCron": "1IoSHuvh", "schedRange": ["cALBnmLZ", "3U1Rdq2i", "AWvFVmwR"]}, {"action": 11, "resource": "QuKSaGna", "schedAction": 50, "schedCron": "zLKxZguc", "schedRange": ["Y8MAgeps", "vX1KRPWy", "9gnCf8Oh"]}, {"action": 78, "resource": "LVaZ8J6b", "schedAction": 53, "schedCron": "cJAFYH5I", "schedRange": ["Ev64Tol3", "w9UgWnCq", "7ItZJ3qj"]}], "roleName": "HoMRN7F9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 184 'AdminCreateRoleV3' test.out

#- 185 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId 'zIdXuBbJ' \
    > test.out 2>&1
eval_tap $? 185 'AdminGetRoleV3' test.out

#- 186 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'wCnsju4y' \
    > test.out 2>&1
eval_tap $? 186 'AdminDeleteRoleV3' test.out

#- 187 AdminUpdateRoleV3
# body param: body
echo '{"deletable": false, "isWildcard": false, "roleName": "duAs1VCb"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId '8csnBuXw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 187 'AdminUpdateRoleV3' test.out

#- 188 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'LY6iCQro' \
    > test.out 2>&1
eval_tap $? 188 'AdminGetRoleAdminStatusV3' test.out

#- 189 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'nokNhbaW' \
    > test.out 2>&1
eval_tap $? 189 'AdminUpdateAdminRoleStatusV3' test.out

#- 190 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'FqZP2khw' \
    > test.out 2>&1
eval_tap $? 190 'AdminRemoveRoleAdminV3' test.out

#- 191 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'JY6fmcVQ' \
    --after 'f0f1gRHh' \
    --before 'Lo0Y49rO' \
    --limit '4' \
    > test.out 2>&1
eval_tap $? 191 'AdminGetRoleManagersV3' test.out

#- 192 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "9Ya56i6p", "namespace": "PEz1FvOi", "userId": "VTRID010"}, {"displayName": "0VCgkTMg", "namespace": "GvFYtmQk", "userId": "De7JfvX0"}, {"displayName": "pUw34bAX", "namespace": "Y5F3RAaI", "userId": "TBLBHPIJ"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'pYcDMtl8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 192 'AdminAddRoleManagersV3' test.out

#- 193 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "CBZzNgvO", "namespace": "vpsxsi4I", "userId": "HrCidwAi"}, {"displayName": "YhFCsSNt", "namespace": "2OqJFS5S", "userId": "IjUZYSBA"}, {"displayName": "RT7mGVCX", "namespace": "7CaOE78v", "userId": "KHnd7VhK"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'lF6gDuvE' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminRemoveRoleManagersV3' test.out

#- 194 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'lUYMD5UU' \
    --after 'ZXKQj4tu' \
    --before 'fB0UJTI7' \
    --limit '68' \
    > test.out 2>&1
eval_tap $? 194 'AdminGetRoleMembersV3' test.out

#- 195 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "AFcxz17G", "namespace": "wzh86w9y", "userId": "MXV2FB14"}, {"displayName": "skgbxhug", "namespace": "ngi1Ym55", "userId": "dxhEl5PY"}, {"displayName": "jVN2ln6j", "namespace": "oX5PTnpf", "userId": "ZyFbXdM1"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'BI5qwjzw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminAddRoleMembersV3' test.out

#- 196 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "kQQBxCt2", "namespace": "60OJnVJ6", "userId": "oFpvpSfj"}, {"displayName": "Pg7oF9OM", "namespace": "NwdSwyvz", "userId": "6Iqddbtw"}, {"displayName": "lOfk78jx", "namespace": "vq3WsbKP", "userId": "uUXVsfad"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId 'Q4cGrNFL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminRemoveRoleMembersV3' test.out

#- 197 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 43, "resource": "NL2LjgeH", "schedAction": 46, "schedCron": "YnzyFZXZ", "schedRange": ["FataCR4W", "8zHjKQF5", "79Ul7S9X"]}, {"action": 69, "resource": "yp8Jpq5T", "schedAction": 52, "schedCron": "NRWPeMus", "schedRange": ["faWe8VTc", "NVERQGcQ", "cUhgfrqC"]}, {"action": 84, "resource": "1YqsB6lH", "schedAction": 86, "schedCron": "BYELZbG4", "schedRange": ["3acjBpgs", "mykClfSN", "U3iE5TbQ"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 't1AhUtGs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminUpdateRolePermissionsV3' test.out

#- 198 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 65, "resource": "rXedk46a", "schedAction": 71, "schedCron": "XZr8AkAv", "schedRange": ["N8WlYHcQ", "Q536EfpN", "Q13QI9K4"]}, {"action": 34, "resource": "E27Gyjua", "schedAction": 84, "schedCron": "ztriU5fS", "schedRange": ["kn344D8U", "pBxoeLap", "ImtiELkU"]}, {"action": 79, "resource": "dcxmCdaX", "schedAction": 90, "schedCron": "uIzGvfRq", "schedRange": ["Pylo5KER", "9TT4BVM2", "Nb6mNPR6"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'JYbxnhIC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 198 'AdminAddRolePermissionsV3' test.out

#- 199 AdminDeleteRolePermissionsV3
# body param: body
echo '["Yw2QpeBp", "xF1K5fE4", "aVGNGgcz"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId 'kH7O1cAL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 199 'AdminDeleteRolePermissionsV3' test.out

#- 200 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '93' \
    --resource '2M16RlDK' \
    --roleId '5mH8NIhC' \
    > test.out 2>&1
eval_tap $? 200 'AdminDeleteRolePermissionV3' test.out

#- 201 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 201 'AdminGetMyUserV3' test.out

#- 202 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'YvvnrYBK' \
    --extend_exp 'true' \
    --redirect_uri 'ejJUq0Mp' \
    --password 'zdoctuoF' \
    --request_id '3ch1BlOC' \
    --user_name 'xnqwp8Pe' \
    > test.out 2>&1
eval_tap $? 202 'UserAuthenticationV3' test.out

#- 203 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'true' \
    --client_id 'GrrmCfGQ' \
    --linkingToken 'ZM8pRvSb' \
    --password 'BDLPekHN' \
    --username 'Zvgmdxde' \
    > test.out 2>&1
eval_tap $? 203 'AuthenticationWithPlatformLinkV3' test.out

#- 204 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --extend_exp 'false' \
    --linkingToken 'RX6Lww1j' \
    > test.out 2>&1
eval_tap $? 204 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 205 RequestOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op RequestOneTimeLinkingCodeV3 \
    --platformId 'pNRHswtU' \
    > test.out 2>&1
eval_tap $? 205 'RequestOneTimeLinkingCodeV3' test.out

#- 206 ValidateOneTimeLinkingCodeV3
$CLI_EXE \
    --sn iam \
    --op ValidateOneTimeLinkingCodeV3 \
    --oneTimeLinkCode 'tM3Vn0ns' \
    > test.out 2>&1
eval_tap $? 206 'ValidateOneTimeLinkingCodeV3' test.out

#- 207 RequestTokenByOneTimeLinkCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestTokenByOneTimeLinkCodeResponseV3 \
    --client_id '1GPBEQMt' \
    --oneTimeLinkCode 'tAm4OrDj' \
    > test.out 2>&1
eval_tap $? 207 'RequestTokenByOneTimeLinkCodeResponseV3' test.out

#- 208 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 208 'GetCountryLocationV3' test.out

#- 209 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 209 'Logout' test.out

#- 210 RequestGameTokenCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenCodeResponseV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'AQH6GGgs' \
    > test.out 2>&1
eval_tap $? 210 'RequestGameTokenCodeResponseV3' test.out

#- 211 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'wcRswcDI' \
    --userId 'bhP8aiYP' \
    > test.out 2>&1
eval_tap $? 211 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 212 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'kGKZvnuc' \
    > test.out 2>&1
eval_tap $? 212 'RevokeUserV3' test.out

#- 213 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge 'NqSWZd97' \
    --codeChallengeMethod 'plain' \
    --createHeadless 'false' \
    --oneTimeLinkCode 'EVdSPZkZ' \
    --redirectUri 'L3vYU3Of' \
    --scope 'KGnsDiud' \
    --state 'JYu2LQ5x' \
    --targetAuthPage '0V9R0UQS' \
    --useRedirectUriAsLoginUrlWhenLocked 'false' \
    --clientId 'HsKuPFQU' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 213 'AuthorizeV3' test.out

#- 214 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token '5gPGimuf' \
    > test.out 2>&1
eval_tap $? 214 'TokenIntrospectionV3' test.out

#- 215 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 215 'GetJWKSV3' test.out

#- 216 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'KRFrcqLb' \
    --factor 'dqHOo53o' \
    --mfaToken 'QKu07rfd' \
    > test.out 2>&1
eval_tap $? 216 'SendMFAAuthenticationCode' test.out

#- 217 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'UCUcXqD9' \
    --mfaToken 'mL9N5uiK' \
    > test.out 2>&1
eval_tap $? 217 'Change2faMethod' test.out

#- 218 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'RjfbWK3c' \
    --factor 'qlsaDt1V' \
    --mfaToken 'L2j7Lc2q' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 218 'Verify2faCode' test.out

#- 219 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'HKNJwBVt' \
    --userId 'xaoQIht5' \
    > test.out 2>&1
eval_tap $? 219 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 220 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'SyxgEdCs' \
    --clientId 'fyPwUIsy' \
    --redirectUri 'LmajvKWE' \
    --requestId 'l5bO6H4X' \
    > test.out 2>&1
eval_tap $? 220 'AuthCodeRequestV3' test.out

#- 221 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId 'xzMJCVDD' \
    --client_id 'RyLGkjJL' \
    --createHeadless 'true' \
    --device_id 'oHrJzVxj' \
    --macAddress 'TrNRNb7G' \
    --platform_token '8gr0cVGT' \
    > test.out 2>&1
eval_tap $? 221 'PlatformTokenGrantV3' test.out

#- 222 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 222 'GetRevocationListV3' test.out

#- 223 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'GI564hqt' \
    > test.out 2>&1
eval_tap $? 223 'TokenRevocationV3' test.out

#- 224 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --client_id 'VtXeDKn4' \
    --code 'swIHbafd' \
    --code_verifier 'nTSbuKve' \
    --extend_exp 'false' \
    --password 'sTeBnBCu' \
    --redirect_uri '6z52aTyE' \
    --refresh_token 'ZGQLE3et' \
    --username 'pJsYjMwr' \
    --grant_type 'password' \
    > test.out 2>&1
eval_tap $? 224 'TokenGrantV3' test.out

#- 225 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'x9yCuWFW' \
    > test.out 2>&1
eval_tap $? 225 'VerifyTokenV3' test.out

#- 226 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId '2xI5Wv7S' \
    --code 'ozqPsEWy' \
    --error 'FdeS2PW1' \
    --openidAssocHandle 'cMji66Us' \
    --openidClaimedId '8f2O7oMN' \
    --openidIdentity '7vIy62rQ' \
    --openidMode 'dlNW473J' \
    --openidNs 'rjiTkkIH' \
    --openidOpEndpoint 'SQxgxxqp' \
    --openidResponseNonce 'yrJWPrRX' \
    --openidReturnTo 'Ov1g2tir' \
    --openidSig 'Ogy0BkkX' \
    --openidSigned 's9Ox6q01' \
    --state 'RjvkKBc8' \
    > test.out 2>&1
eval_tap $? 226 'PlatformAuthenticationV3' test.out

#- 227 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode 'niOIVSKX' \
    > test.out 2>&1
eval_tap $? 227 'PublicGetInputValidations' test.out

#- 228 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode '26qDCk7u' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 228 'PublicGetCountryAgeRestrictionV3' test.out

#- 229 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 229 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 230 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'Mopinu0o' \
    > test.out 2>&1
eval_tap $? 230 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 231 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["FXahCXCj", "loCHxwxL", "KiXC8aA2"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId '4PKukb4n' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 231 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 232 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'f5vTR8bP' \
    --platformUserId '7Ry20npg' \
    > test.out 2>&1
eval_tap $? 232 'PublicGetUserByPlatformUserIDV3' test.out

#- 233 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'zWeapip5' \
    > test.out 2>&1
eval_tap $? 233 'PublicGetAsyncStatus' test.out

#- 234 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by '5H2SH5zk' \
    --limit '44' \
    --offset '63' \
    --query 'NRgyHfts' \
    > test.out 2>&1
eval_tap $? 234 'PublicSearchUserV3' test.out

#- 235 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "Ppgo19Ug", "acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "slFdyJNo", "policyId": "bJUMcmxX", "policyVersionId": "JqlKA99d"}, {"isAccepted": true, "localizedPolicyVersionId": "wHjyoRIO", "policyId": "sBKbdBAf", "policyVersionId": "9R9QdpcL"}, {"isAccepted": true, "localizedPolicyVersionId": "4YXNrZ0R", "policyId": "ZfgE6usC", "policyVersionId": "OWrQ1riD"}], "authType": "VCPzptZ8", "code": "6jUDYkGN", "country": "vZSDeSvP", "dateOfBirth": "7Ry1MbIj", "displayName": "sNFmHrRo", "emailAddress": "EG7kYLVv", "password": "KgYPEy24", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'PublicCreateUserV3' test.out

#- 236 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field '835L9nrS' \
    --query 'CPGOZoF1' \
    > test.out 2>&1
eval_tap $? 236 'CheckUserAvailability' test.out

#- 237 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["BcfLQ6dn", "6yk8xUrk", "6a0Vt0ja"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'PublicBulkGetUsers' test.out

#- 238 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "2wkciQOh", "languageTag": "4KmX2Ah7"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'PublicSendRegistrationCode' test.out

#- 239 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "yAzP0OQN", "emailAddress": "1HgWyMX9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'PublicVerifyRegistrationCode' test.out

#- 240 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "j5HuSxZP", "languageTag": "ST3GeORH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'PublicForgotPasswordV3' test.out

#- 241 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'LclRcHtO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 241 'GetAdminInvitationV3' test.out

#- 242 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "b0RQSrLh", "policyId": "qYcWidVF", "policyVersionId": "Z9i7C0wX"}, {"isAccepted": true, "localizedPolicyVersionId": "xSskiTVQ", "policyId": "jsvcfnxx", "policyVersionId": "GRB3EdCk"}, {"isAccepted": true, "localizedPolicyVersionId": "njwyG1RE", "policyId": "HgDTEfCu", "policyVersionId": "ePpxLpVP"}], "authType": "EMAILPASSWD", "country": "0HM8ve2D", "dateOfBirth": "QHjwwvlB", "displayName": "pAukqX0Q", "password": "hsfKsWPJ", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId '6CXHNx0n' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'CreateUserFromInvitationV3' test.out

#- 243 UpdateUserV3
# body param: body
echo '{"avatarUrl": "VDDVcc5p", "country": "f4F1NHDg", "dateOfBirth": "sYE2FR3f", "displayName": "CHCv3A28", "languageTag": "Gnl96v04", "userName": "jdbVvlFE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'UpdateUserV3' test.out

#- 244 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "UrrEZbHU", "country": "wWTooBMq", "dateOfBirth": "rC3skioT", "displayName": "nVw4JVkk", "languageTag": "115VWuLe", "userName": "QmlWDqWV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'PublicPartialUpdateUserV3' test.out

#- 245 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "4ARP1Myf", "emailAddress": "xD7U7S6s", "languageTag": "oYAYUfDx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 245 'PublicSendVerificationCodeV3' test.out

#- 246 PublicUserVerificationV3
# body param: body
echo '{"code": "tyteMr45", "contactType": "BuRe1h04", "languageTag": "E7CZ6qVF", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 246 'PublicUserVerificationV3' test.out

#- 247 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "wIOMvraY", "country": "kreYAlS0", "dateOfBirth": "prp4vI5f", "displayName": "tnzVZtDk", "emailAddress": "J9GRbKbi", "password": "NEhfc8zR", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'PublicUpgradeHeadlessAccountV3' test.out

#- 248 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "qRgc9100", "password": "aIk2fOvl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 248 'PublicVerifyHeadlessAccountV3' test.out

#- 249 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "LqkDN0sL", "newPassword": "XpJEcDiR", "oldPassword": "2ZvxCit1"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 249 'PublicUpdatePasswordV3' test.out

#- 250 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'Kbj4Qpia' \
    > test.out 2>&1
eval_tap $? 250 'PublicCreateJusticeUser' test.out

#- 251 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '8mXmKEA4' \
    --redirectUri 'RnYGc9vR' \
    --ticket 'wV6dSBYs' \
    > test.out 2>&1
eval_tap $? 251 'PublicPlatformLinkV3' test.out

#- 252 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "zWK5oAeJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'WzyXq6NM' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'PublicPlatformUnlinkV3' test.out

#- 253 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId '3miDJALv' \
    > test.out 2>&1
eval_tap $? 253 'PublicPlatformUnlinkAllV3' test.out

#- 254 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'sAA7dne7' \
    --ticket 'ZjOReem2' \
    > test.out 2>&1
eval_tap $? 254 'PublicForcePlatformLinkV3' test.out

#- 255 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId 'fIteGhcK' \
    --clientId 'yf4k02AZ' \
    --redirectUri 'KGwZzsuz' \
    > test.out 2>&1
eval_tap $? 255 'PublicWebLinkPlatform' test.out

#- 256 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId '0bmpVGgB' \
    --state 'q2wgu4TN' \
    > test.out 2>&1
eval_tap $? 256 'PublicWebLinkPlatformEstablish' test.out

#- 257 ResetPasswordV3
# body param: body
echo '{"code": "u1dM3M1K", "emailAddress": "z5OtgvBS", "newPassword": "ugQcFhWS"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 257 'ResetPasswordV3' test.out

#- 258 PublicGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId '6aGwx1lc' \
    > test.out 2>&1
eval_tap $? 258 'PublicGetUserByUserIdV3' test.out

#- 259 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ikbsbuje' \
    --activeOnly 'false' \
    --after 'ExmFtVGW' \
    --before 'wvWTNC9V' \
    --limit '78' \
    > test.out 2>&1
eval_tap $? 259 'PublicGetUserBanHistoryV3' test.out

#- 260 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'nzxmcbOz' \
    > test.out 2>&1
eval_tap $? 260 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 261 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'gnbMNk74' \
    > test.out 2>&1
eval_tap $? 261 'PublicGetUserInformationV3' test.out

#- 262 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId '6Zw1eXP3' \
    --after '0.2881154150142833' \
    --before '0.7581988334232864' \
    --limit '30' \
    > test.out 2>&1
eval_tap $? 262 'PublicGetUserLoginHistoriesV3' test.out

#- 263 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'OSeZ8qym' \
    --after 'KAidKJ0c' \
    --before 'yLqcpcGR' \
    --limit '85' \
    > test.out 2>&1
eval_tap $? 263 'PublicGetUserPlatformAccountsV3' test.out

#- 264 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'DLkoIBl3' \
    > test.out 2>&1
eval_tap $? 264 'PublicListJusticePlatformAccountsV3' test.out

#- 265 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "TUxONkhd", "platformUserId": "B7OiZosQ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId '7vxVGdOV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 265 'PublicLinkPlatformAccount' test.out

#- 266 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["DtdO7bJb", "1T2QZWuo", "amrdUBw0"], "requestId": "o4lvNaD3"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId 'NocYLlss' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 266 'PublicForceLinkPlatformWithProgression' test.out

#- 267 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'LV60343J' \
    > test.out 2>&1
eval_tap $? 267 'PublicGetPublisherUserV3' test.out

#- 268 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'feUE5UpC' \
    --password 'SRDCdipi' \
    > test.out 2>&1
eval_tap $? 268 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 269 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'PfoHoEH8' \
    --before 'nZuFrPMP' \
    --isWildcard 'true' \
    --limit '85' \
    > test.out 2>&1
eval_tap $? 269 'PublicGetRolesV3' test.out

#- 270 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'obZIF5fd' \
    > test.out 2>&1
eval_tap $? 270 'PublicGetRoleV3' test.out

#- 271 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 271 'PublicGetMyUserV3' test.out

#- 272 PublicGetLinkHeadlessAccountToMyAccountConflictV3
$CLI_EXE \
    --sn iam \
    --op PublicGetLinkHeadlessAccountToMyAccountConflictV3 \
    --oneTimeLinkCode '1doSjJDP' \
    > test.out 2>&1
eval_tap $? 272 'PublicGetLinkHeadlessAccountToMyAccountConflictV3' test.out

#- 273 LinkHeadlessAccountToMyAccountV3
# body param: body
echo '{"chosenNamespaces": ["hffuKL6b", "2kbYr0My", "APbJg614"], "oneTimeLinkCode": "xk2yaqtj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op LinkHeadlessAccountToMyAccountV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 273 'LinkHeadlessAccountToMyAccountV3' test.out

#- 274 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "AC8061k2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 274 'PublicSendVerificationLinkV3' test.out

#- 275 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'xb4eDc6y' \
    > test.out 2>&1
eval_tap $? 275 'PublicVerifyUserByLinkV3' test.out

#- 276 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId 'RdiqJfsA' \
    --code 'uWaRltSg' \
    --error 'lQpQSVGW' \
    --state 't0Ft6P4o' \
    > test.out 2>&1
eval_tap $? 276 'PlatformAuthenticateSAMLV3Handler' test.out

#- 277 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'Q7UJjMnH' \
    --payload 'fyGRpdjn' \
    > test.out 2>&1
eval_tap $? 277 'LoginSSOClient' test.out

#- 278 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'pZMV5lfj' \
    > test.out 2>&1
eval_tap $? 278 'LogoutSSOClient' test.out

#- 279 RequestGameTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenResponseV3 \
    --code 'MWyhq9Mp' \
    > test.out 2>&1
eval_tap $? 279 'RequestGameTokenResponseV3' test.out

#- 280 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'rbohfa19' \
    > test.out 2>&1
eval_tap $? 280 'AdminGetDevicesByUserV4' test.out

#- 281 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'ULqXGQEl' \
    --endDate 'RHWwg21Y' \
    --limit '53' \
    --offset '7' \
    --startDate 'OYkKdk3v' \
    > test.out 2>&1
eval_tap $? 281 'AdminGetBannedDevicesV4' test.out

#- 282 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'vzBOhNI1' \
    > test.out 2>&1
eval_tap $? 282 'AdminGetUserDeviceBansV4' test.out

#- 283 AdminBanDeviceV4
# body param: body
echo '{"comment": "GxqKKWkG", "deviceId": "SO7GLBp2", "deviceType": "ijiIiD9i", "enabled": false, "endDate": "Z7jiV5Ug", "ext": {"b3XC3N2O": {}, "kzTVqcoO": {}, "ZrXyhBIK": {}}, "reason": "wqBxQSJn"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 283 'AdminBanDeviceV4' test.out

#- 284 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'adgiYFKG' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 284 'AdminGetDeviceBanV4' test.out

#- 285 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 'SwiW11uT' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'AdminUpdateDeviceBanV4' test.out

#- 286 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'DkBHMzjX' \
    --startDate '5h4XgKTp' \
    --deviceType '9or3RcQ8' \
    > test.out 2>&1
eval_tap $? 286 'AdminGenerateReportV4' test.out

#- 287 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 287 'AdminGetDeviceTypesV4' test.out

#- 288 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'sLICCbzK' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 288 'AdminGetDeviceBansV4' test.out

#- 289 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'ff4Xfx9w' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 289 'AdminDecryptDeviceV4' test.out

#- 290 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'WuGkZt57' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 290 'AdminUnbanDeviceV4' test.out

#- 291 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 't85DQZF7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 291 'AdminGetUsersByDeviceV4' test.out

#- 292 AdminCreateTestUsersV4
# body param: body
echo '{"count": 12}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AdminCreateTestUsersV4' test.out

#- 293 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["r9Nb40jP", "Uv5tkUy1", "OQhUzvXP"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'AdminBulkCheckValidUserIDV4' test.out

#- 294 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "pYIf4xor", "country": "QI9YQwiP", "dateOfBirth": "ohGMbkbP", "displayName": "n8VWzEvF", "languageTag": "3xXhOyZU", "userName": "SJGo1NWg"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'cAAUPq4z' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 294 'AdminUpdateUserV4' test.out

#- 295 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "O9uXfGm1", "emailAddress": "AwhTM8zd"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId 'E3iEfuT8' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'AdminUpdateUserEmailAddressV4' test.out

#- 296 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId 'GK8BpVMH' \
    > test.out 2>&1
eval_tap $? 296 'AdminDisableUserMFAV4' test.out

#- 297 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'G67Ofkjg' \
    > test.out 2>&1
eval_tap $? 297 'AdminListUserRolesV4' test.out

#- 298 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["TmFjFsVD", "ddf0mAeg", "RVq6FDrU"], "roleId": "oawiW1bU"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'SxL1EPHm' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'AdminUpdateUserRoleV4' test.out

#- 299 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["dMHp32bq", "jQMQot7B", "HnmJqkgk"], "roleId": "oQ1TXoxc"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'rmViqnwJ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'AdminAddUserRoleV4' test.out

#- 300 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["ePfYqq52", "IEeL5gkQ", "36386Y40"], "roleId": "9lP1jNUj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'xiPFixtQ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminRemoveUserRoleV4' test.out

#- 301 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'false' \
    --limit '87' \
    --offset '18' \
    > test.out 2>&1
eval_tap $? 301 'AdminGetRolesV4' test.out

#- 302 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": false, "roleName": "IZ0LDJxE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 302 'AdminCreateRoleV4' test.out

#- 303 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'y6sT7V6w' \
    > test.out 2>&1
eval_tap $? 303 'AdminGetRoleV4' test.out

#- 304 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'Bdf8AJTY' \
    > test.out 2>&1
eval_tap $? 304 'AdminDeleteRoleV4' test.out

#- 305 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "roleName": "VweJK3JW"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'FBJqNzq4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'AdminUpdateRoleV4' test.out

#- 306 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 3, "resource": "CikCtdeU", "schedAction": 43, "schedCron": "lUFhE1fC", "schedRange": ["U1KuFiET", "waGRQP0N", "O8TWE57w"]}, {"action": 81, "resource": "qA7gy7FY", "schedAction": 42, "schedCron": "7tMafRrL", "schedRange": ["zAmOLK8D", "jiCQyVUg", "yYdi1jum"]}, {"action": 59, "resource": "yG3mpkS5", "schedAction": 72, "schedCron": "5NRCB1LF", "schedRange": ["1svX5z6q", "9o9TD6DC", "yCL4pq6O"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'XtJyDA8c' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 306 'AdminUpdateRolePermissionsV4' test.out

#- 307 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 84, "resource": "wqPIyYCa", "schedAction": 49, "schedCron": "fgC2inQE", "schedRange": ["2bQvIgt2", "wnwKn8OG", "acQeO6mj"]}, {"action": 22, "resource": "9ogWY5ha", "schedAction": 82, "schedCron": "66JijCmS", "schedRange": ["EsgCIi47", "Iob6IP9J", "6tlTCuzL"]}, {"action": 77, "resource": "WHhqcQ12", "schedAction": 81, "schedCron": "XDUvsPDq", "schedRange": ["UxszKdtk", "Lh8VLGmd", "HZKp7xzB"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'hgjChx9D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 307 'AdminAddRolePermissionsV4' test.out

#- 308 AdminDeleteRolePermissionsV4
# body param: body
echo '["n0XUhwrn", "CL3KZ5Ts", "U0HYeUOk"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'oVe8drkK' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 308 'AdminDeleteRolePermissionsV4' test.out

#- 309 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId 'PGBGrjWy' \
    --after '8qsbHvZ0' \
    --before 'AuoiQXdj' \
    --limit '45' \
    > test.out 2>&1
eval_tap $? 309 'AdminListAssignedUsersV4' test.out

#- 310 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["oNfpJJu1", "UOxoFE1p", "e2SHfdxG"], "namespace": "ZFUpdYos", "userId": "SiFRhKsA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'Agoa6Gzn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 310 'AdminAssignUserToRoleV4' test.out

#- 311 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "l2gtGZ1s", "userId": "LUOtEzvJ"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId '5TOdM8az' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 311 'AdminRevokeUserFromRoleV4' test.out

#- 312 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "MLq4uM23", "country": "nAloy0Sr", "dateOfBirth": "Ypo0jHtf", "displayName": "oyLBRItC", "languageTag": "IVy8L0I9", "userName": "AQWyXyno"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 312 'AdminUpdateMyUserV4' test.out

#- 313 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 313 'AdminDisableMyAuthenticatorV4' test.out

#- 314 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'BLdccJj1' \
    > test.out 2>&1
eval_tap $? 314 'AdminEnableMyAuthenticatorV4' test.out

#- 315 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 315 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 316 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 316 'AdminGetMyBackupCodesV4' test.out

#- 317 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 317 'AdminGenerateMyBackupCodesV4' test.out

#- 318 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 318 'AdminDisableMyBackupCodesV4' test.out

#- 319 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 319 'AdminDownloadMyBackupCodesV4' test.out

#- 320 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 320 'AdminEnableMyBackupCodesV4' test.out

#- 321 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 321 'AdminSendMyMFAEmailCodeV4' test.out

#- 322 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 322 'AdminDisableMyEmailV4' test.out

#- 323 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'IA8sA529' \
    > test.out 2>&1
eval_tap $? 323 'AdminEnableMyEmailV4' test.out

#- 324 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 324 'AdminGetMyEnabledFactorsV4' test.out

#- 325 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'GxHB8jAf' \
    > test.out 2>&1
eval_tap $? 325 'AdminMakeFactorMyDefaultV4' test.out

#- 326 AdminInviteUserV4
# body param: body
echo '{"assignedNamespaces": ["VZfgTLuJ", "V95DKeIB", "fEO23l3f"], "emailAddresses": ["BjU3OmU9", "hdejZI8b", "8qlSkNn3"], "isAdmin": true, "namespace": "EJ2I4Ry4", "roleId": "0XHTJaPC"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'AdminInviteUserV4' test.out

#- 327 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "gMoP25pk", "policyId": "DUELppwb", "policyVersionId": "iZRilPDi"}, {"isAccepted": true, "localizedPolicyVersionId": "SLzQQHH9", "policyId": "5ESh7qNR", "policyVersionId": "6eSXwaPp"}, {"isAccepted": false, "localizedPolicyVersionId": "Wmd8ijNw", "policyId": "SgnCq6f8", "policyVersionId": "sJt9ZY9D"}], "authType": "EMAILPASSWD", "country": "SQZnt3Gu", "dateOfBirth": "cNJPM6Uu", "displayName": "H3p0C72N", "emailAddress": "95LC20Um", "password": "O3d7t645", "passwordMD5Sum": "6jv2vHfM", "username": "TAhQzi5l", "verified": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 327 'PublicCreateTestUserV4' test.out

#- 328 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "9ubYDvgv", "policyId": "M1uhWsCp", "policyVersionId": "IIouBPfs"}, {"isAccepted": false, "localizedPolicyVersionId": "G8CxA98o", "policyId": "nHpXkPPU", "policyVersionId": "NjndE9aU"}, {"isAccepted": false, "localizedPolicyVersionId": "dkX95ot1", "policyId": "0fYogyH9", "policyVersionId": "wKJGkfgX"}], "authType": "EMAILPASSWD", "code": "0dvOvnas", "country": "2jgGoKih", "dateOfBirth": "yJPgfTFn", "displayName": "OQCYULeo", "emailAddress": "7TkgNk1I", "password": "UspHD7f0", "passwordMD5Sum": "zVHd90PQ", "reachMinimumAge": true, "username": "VhtgiT29"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 328 'PublicCreateUserV4' test.out

#- 329 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "qw3fYzBI", "policyId": "LyM883HI", "policyVersionId": "xl3SlJ2y"}, {"isAccepted": true, "localizedPolicyVersionId": "D67yrRtz", "policyId": "PLfo0MgN", "policyVersionId": "RkcUoUzf"}, {"isAccepted": false, "localizedPolicyVersionId": "TYVSlqys", "policyId": "3Db1w2iR", "policyVersionId": "9ib8XJ1l"}], "authType": "EMAILPASSWD", "country": "c76aVwQt", "dateOfBirth": "wOmNuLqs", "displayName": "muYqV0kH", "password": "KlBqzvOP", "reachMinimumAge": false, "username": "O5TfLkw9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'k43GHHWZ' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 329 'CreateUserFromInvitationV4' test.out

#- 330 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "dZYBNrsN", "country": "6DvRTF8U", "dateOfBirth": "6W9TstQ7", "displayName": "JDddN204", "languageTag": "DUllBmih", "userName": "rsNYNS3Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 330 'PublicUpdateUserV4' test.out

#- 331 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "tOaGGDv7", "emailAddress": "CGXd08Un"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 331 'PublicUpdateUserEmailAddressV4' test.out

#- 332 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "M1QkG4C1", "country": "zZWJNtD5", "dateOfBirth": "CXpENzyk", "displayName": "IYhHkFkx", "emailAddress": "DA5dfz0u", "password": "gyRt0LG1", "reachMinimumAge": true, "username": "nN1V9mEP", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 332 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 333 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "a8FDELa1", "password": "prEByEt2", "username": "4UZhwwro"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 333 'PublicUpgradeHeadlessAccountV4' test.out

#- 334 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 334 'PublicDisableMyAuthenticatorV4' test.out

#- 335 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'Fu9yEIj5' \
    > test.out 2>&1
eval_tap $? 335 'PublicEnableMyAuthenticatorV4' test.out

#- 336 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 336 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 337 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 337 'PublicGetMyBackupCodesV4' test.out

#- 338 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 338 'PublicGenerateMyBackupCodesV4' test.out

#- 339 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 339 'PublicDisableMyBackupCodesV4' test.out

#- 340 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 340 'PublicDownloadMyBackupCodesV4' test.out

#- 341 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 341 'PublicEnableMyBackupCodesV4' test.out

#- 342 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'de5T46mc' \
    > test.out 2>&1
eval_tap $? 342 'PublicRemoveTrustedDeviceV4' test.out

#- 343 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 343 'PublicSendMyMFAEmailCodeV4' test.out

#- 344 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 344 'PublicDisableMyEmailV4' test.out

#- 345 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'Tp2IGoiN' \
    > test.out 2>&1
eval_tap $? 345 'PublicEnableMyEmailV4' test.out

#- 346 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 346 'PublicGetMyEnabledFactorsV4' test.out

#- 347 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'xEL0yzDu' \
    > test.out 2>&1
eval_tap $? 347 'PublicMakeFactorMyDefaultV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE