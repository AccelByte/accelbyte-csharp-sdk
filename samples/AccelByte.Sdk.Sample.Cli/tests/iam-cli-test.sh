#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..340"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetBansType
eval_tap 0 2 'GetBansType # SKIP deprecated' test.out

#- 3 GetListBanReason
eval_tap 0 3 'GetListBanReason # SKIP deprecated' test.out

#- 4 GetClients
eval_tap 0 4 'GetClients # SKIP deprecated' test.out

#- 5 CreateClient
eval_tap 0 5 'CreateClient # SKIP deprecated' test.out

#- 6 GetClient
eval_tap 0 6 'GetClient # SKIP deprecated' test.out

#- 7 UpdateClient
eval_tap 0 7 'UpdateClient # SKIP deprecated' test.out

#- 8 DeleteClient
eval_tap 0 8 'DeleteClient # SKIP deprecated' test.out

#- 9 UpdateClientPermission
eval_tap 0 9 'UpdateClientPermission # SKIP deprecated' test.out

#- 10 AddClientPermission
eval_tap 0 10 'AddClientPermission # SKIP deprecated' test.out

#- 11 DeleteClientPermission
eval_tap 0 11 'DeleteClientPermission # SKIP deprecated' test.out

#- 12 UpdateClientSecret
eval_tap 0 12 'UpdateClientSecret # SKIP deprecated' test.out

#- 13 GetClientsbyNamespace
eval_tap 0 13 'GetClientsbyNamespace # SKIP deprecated' test.out

#- 14 CreateClientByNamespace
eval_tap 0 14 'CreateClientByNamespace # SKIP deprecated' test.out

#- 15 DeleteClientByNamespace
eval_tap 0 15 'DeleteClientByNamespace # SKIP deprecated' test.out

#- 16 CreateUser
eval_tap 0 16 'CreateUser # SKIP deprecated' test.out

#- 17 GetAdminUsersByRoleID
eval_tap 0 17 'GetAdminUsersByRoleID # SKIP deprecated' test.out

#- 18 GetUserByLoginID
eval_tap 0 18 'GetUserByLoginID # SKIP deprecated' test.out

#- 19 GetUserByPlatformUserID
eval_tap 0 19 'GetUserByPlatformUserID # SKIP deprecated' test.out

#- 20 ForgotPassword
eval_tap 0 20 'ForgotPassword # SKIP deprecated' test.out

#- 21 GetUsersByLoginIds
eval_tap 0 21 'GetUsersByLoginIds # SKIP deprecated' test.out

#- 22 ResetPassword
eval_tap 0 22 'ResetPassword # SKIP deprecated' test.out

#- 23 SearchUser
eval_tap 0 23 'SearchUser # SKIP deprecated' test.out

#- 24 GetUserByUserID
eval_tap 0 24 'GetUserByUserID # SKIP deprecated' test.out

#- 25 UpdateUser
eval_tap 0 25 'UpdateUser # SKIP deprecated' test.out

#- 26 DeleteUser
eval_tap 0 26 'DeleteUser # SKIP deprecated' test.out

#- 27 BanUser
eval_tap 0 27 'BanUser # SKIP deprecated' test.out

#- 28 GetUserBanHistory
eval_tap 0 28 'GetUserBanHistory # SKIP deprecated' test.out

#- 29 DisableUserBan
eval_tap 0 29 'DisableUserBan # SKIP deprecated' test.out

#- 30 EnableUserBan
eval_tap 0 30 'EnableUserBan # SKIP deprecated' test.out

#- 31 ListCrossNamespaceAccountLink
eval_tap 0 31 'ListCrossNamespaceAccountLink # SKIP deprecated' test.out

#- 32 DisableUser
eval_tap 0 32 'DisableUser # SKIP deprecated' test.out

#- 33 EnableUser
eval_tap 0 33 'EnableUser # SKIP deprecated' test.out

#- 34 GetUserInformation
eval_tap 0 34 'GetUserInformation # SKIP deprecated' test.out

#- 35 DeleteUserInformation
eval_tap 0 35 'DeleteUserInformation # SKIP deprecated' test.out

#- 36 GetUserLoginHistories
eval_tap 0 36 'GetUserLoginHistories # SKIP deprecated' test.out

#- 37 UpdatePassword
eval_tap 0 37 'UpdatePassword # SKIP deprecated' test.out

#- 38 SaveUserPermission
eval_tap 0 38 'SaveUserPermission # SKIP deprecated' test.out

#- 39 AddUserPermission
eval_tap 0 39 'AddUserPermission # SKIP deprecated' test.out

#- 40 DeleteUserPermission
eval_tap 0 40 'DeleteUserPermission # SKIP deprecated' test.out

#- 41 GetUserPlatformAccounts
eval_tap 0 41 'GetUserPlatformAccounts # SKIP deprecated' test.out

#- 42 GetUserMapping
eval_tap 0 42 'GetUserMapping # SKIP deprecated' test.out

#- 43 GetUserJusticePlatformAccount
eval_tap 0 43 'GetUserJusticePlatformAccount # SKIP deprecated' test.out

#- 44 PlatformLink
eval_tap 0 44 'PlatformLink # SKIP deprecated' test.out

#- 45 PlatformUnlink
eval_tap 0 45 'PlatformUnlink # SKIP deprecated' test.out

#- 46 GetPublisherUser
eval_tap 0 46 'GetPublisherUser # SKIP deprecated' test.out

#- 47 SaveUserRoles
eval_tap 0 47 'SaveUserRoles # SKIP deprecated' test.out

#- 48 AddUserRole
eval_tap 0 48 'AddUserRole # SKIP deprecated' test.out

#- 49 DeleteUserRole
eval_tap 0 49 'DeleteUserRole # SKIP deprecated' test.out

#- 50 UpgradeHeadlessAccount
eval_tap 0 50 'UpgradeHeadlessAccount # SKIP deprecated' test.out

#- 51 UpgradeHeadlessAccountWithVerificationCode
eval_tap 0 51 'UpgradeHeadlessAccountWithVerificationCode # SKIP deprecated' test.out

#- 52 UserVerification
eval_tap 0 52 'UserVerification # SKIP deprecated' test.out

#- 53 SendVerificationCode
eval_tap 0 53 'SendVerificationCode # SKIP deprecated' test.out

#- 54 Authorization
eval_tap 0 54 'Authorization # SKIP deprecated' test.out

#- 55 GetJWKS
eval_tap 0 55 'GetJWKS # SKIP deprecated' test.out

#- 56 PlatformTokenRequestHandler
eval_tap 0 56 'PlatformTokenRequestHandler # SKIP deprecated' test.out

#- 57 RevokeUser
eval_tap 0 57 'RevokeUser # SKIP deprecated' test.out

#- 58 GetRevocationList
eval_tap 0 58 'GetRevocationList # SKIP deprecated' test.out

#- 59 RevokeToken
eval_tap 0 59 'RevokeToken # SKIP deprecated' test.out

#- 60 RevokeAUser
eval_tap 0 60 'RevokeAUser # SKIP deprecated' test.out

#- 61 TokenGrant
eval_tap 0 61 'TokenGrant # SKIP deprecated' test.out

#- 62 VerifyToken
eval_tap 0 62 'VerifyToken # SKIP deprecated' test.out

#- 63 GetRoles
eval_tap 0 63 'GetRoles # SKIP deprecated' test.out

#- 64 CreateRole
eval_tap 0 64 'CreateRole # SKIP deprecated' test.out

#- 65 GetRole
eval_tap 0 65 'GetRole # SKIP deprecated' test.out

#- 66 UpdateRole
eval_tap 0 66 'UpdateRole # SKIP deprecated' test.out

#- 67 DeleteRole
eval_tap 0 67 'DeleteRole # SKIP deprecated' test.out

#- 68 GetRoleAdminStatus
eval_tap 0 68 'GetRoleAdminStatus # SKIP deprecated' test.out

#- 69 SetRoleAsAdmin
eval_tap 0 69 'SetRoleAsAdmin # SKIP deprecated' test.out

#- 70 RemoveRoleAdmin
eval_tap 0 70 'RemoveRoleAdmin # SKIP deprecated' test.out

#- 71 GetRoleManagers
eval_tap 0 71 'GetRoleManagers # SKIP deprecated' test.out

#- 72 AddRoleManagers
eval_tap 0 72 'AddRoleManagers # SKIP deprecated' test.out

#- 73 RemoveRoleManagers
eval_tap 0 73 'RemoveRoleManagers # SKIP deprecated' test.out

#- 74 GetRoleMembers
eval_tap 0 74 'GetRoleMembers # SKIP deprecated' test.out

#- 75 AddRoleMembers
eval_tap 0 75 'AddRoleMembers # SKIP deprecated' test.out

#- 76 RemoveRoleMembers
eval_tap 0 76 'RemoveRoleMembers # SKIP deprecated' test.out

#- 77 UpdateRolePermissions
eval_tap 0 77 'UpdateRolePermissions # SKIP deprecated' test.out

#- 78 AddRolePermission
eval_tap 0 78 'AddRolePermission # SKIP deprecated' test.out

#- 79 DeleteRolePermission
eval_tap 0 79 'DeleteRolePermission # SKIP deprecated' test.out

#- 80 AdminGetAgeRestrictionStatusV2
eval_tap 0 80 'AdminGetAgeRestrictionStatusV2 # SKIP deprecated' test.out

#- 81 AdminUpdateAgeRestrictionConfigV2
eval_tap 0 81 'AdminUpdateAgeRestrictionConfigV2 # SKIP deprecated' test.out

#- 82 GetListCountryAgeRestriction
eval_tap 0 82 'GetListCountryAgeRestriction # SKIP deprecated' test.out

#- 83 UpdateCountryAgeRestriction
eval_tap 0 83 'UpdateCountryAgeRestriction # SKIP deprecated' test.out

#- 84 AdminSearchUsersV2
eval_tap 0 84 'AdminSearchUsersV2 # SKIP deprecated' test.out

#- 85 AdminGetUserByUserIdV2
eval_tap 0 85 'AdminGetUserByUserIdV2 # SKIP deprecated' test.out

#- 86 AdminUpdateUserV2
eval_tap 0 86 'AdminUpdateUserV2 # SKIP deprecated' test.out

#- 87 AdminBanUserV2
eval_tap 0 87 'AdminBanUserV2 # SKIP deprecated' test.out

#- 88 AdminGetUserBanV2
eval_tap 0 88 'AdminGetUserBanV2 # SKIP deprecated' test.out

#- 89 AdminDisableUserV2
eval_tap 0 89 'AdminDisableUserV2 # SKIP deprecated' test.out

#- 90 AdminEnableUserV2
eval_tap 0 90 'AdminEnableUserV2 # SKIP deprecated' test.out

#- 91 AdminResetPasswordV2
eval_tap 0 91 'AdminResetPasswordV2 # SKIP deprecated' test.out

#- 92 AdminDeletePlatformLinkV2
eval_tap 0 92 'AdminDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 93 AdminPutUserRolesV2
eval_tap 0 93 'AdminPutUserRolesV2 # SKIP deprecated' test.out

#- 94 AdminCreateUserRolesV2
eval_tap 0 94 'AdminCreateUserRolesV2 # SKIP deprecated' test.out

#- 95 PublicGetCountryAgeRestriction
eval_tap 0 95 'PublicGetCountryAgeRestriction # SKIP deprecated' test.out

#- 96 PublicCreateUserV2
eval_tap 0 96 'PublicCreateUserV2 # SKIP deprecated' test.out

#- 97 PublicForgotPasswordV2
eval_tap 0 97 'PublicForgotPasswordV2 # SKIP deprecated' test.out

#- 98 PublicResetPasswordV2
eval_tap 0 98 'PublicResetPasswordV2 # SKIP deprecated' test.out

#- 99 PublicGetUserByUserIDV2
eval_tap 0 99 'PublicGetUserByUserIDV2 # SKIP deprecated' test.out

#- 100 PublicUpdateUserV2
eval_tap 0 100 'PublicUpdateUserV2 # SKIP deprecated' test.out

#- 101 PublicGetUserBan
eval_tap 0 101 'PublicGetUserBan # SKIP deprecated' test.out

#- 102 PublicUpdatePasswordV2
eval_tap 0 102 'PublicUpdatePasswordV2 # SKIP deprecated' test.out

#- 103 GetListJusticePlatformAccounts
eval_tap 0 103 'GetListJusticePlatformAccounts # SKIP deprecated' test.out

#- 104 PublicPlatformLinkV2
eval_tap 0 104 'PublicPlatformLinkV2 # SKIP deprecated' test.out

#- 105 PublicDeletePlatformLinkV2
eval_tap 0 105 'PublicDeletePlatformLinkV2 # SKIP deprecated' test.out

#- 106 AdminGetBansTypeV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeV3 \
    > test.out 2>&1
eval_tap $? 106 'AdminGetBansTypeV3' test.out

#- 107 AdminGetListBanReasonV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListBanReasonV3 \
    > test.out 2>&1
eval_tap $? 107 'AdminGetListBanReasonV3' test.out

#- 108 AdminGetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminGetInputValidations \
    > test.out 2>&1
eval_tap $? 108 'AdminGetInputValidations' test.out

#- 109 AdminUpdateInputValidations
# body param: body
echo '[{"field": "z1Dr3Soq", "validation": {"allowAllSpecialCharacters": true, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "blockedWord": ["CjTrx8v8", "dNCDFgpz", "GnmtywsW"], "description": [{"language": "tP1odOTm", "message": ["ZrsJQxod", "Mp1wrESP", "SsGAiOEs"]}, {"language": "mifQMu3U", "message": ["CMLWvAoY", "eVLwcjHd", "cazOxSkE"]}, {"language": "6vv2hyxB", "message": ["c4vBSKxq", "gLcrWnZj", "HwOpo5gR"]}], "isCustomRegex": true, "letterCase": "eltcKjoZ", "maxLength": 73, "maxRepeatingAlphaNum": 13, "maxRepeatingSpecialCharacter": 38, "minCharType": 27, "minLength": 13, "regex": "3Uoq5ygH", "specialCharacterLocation": "epCVlwy0", "specialCharacters": ["2jx2MKQG", "1urn6PQB", "pA3efRgU"]}}, {"field": "sDNnpEdx", "validation": {"allowAllSpecialCharacters": false, "allowDigit": true, "allowLetter": true, "allowSpace": false, "allowUnicode": false, "blockedWord": ["B42pN2iH", "z75ErbOW", "TWazUF9M"], "description": [{"language": "muk3qDEu", "message": ["jGdHeasg", "XTJuPq2u", "AQmOjzgl"]}, {"language": "UIAtRcF8", "message": ["AjEQzIGI", "Skp2k9gT", "TYQrfCly"]}, {"language": "IdVwYT7R", "message": ["UcMxFVXx", "CDOfJ21t", "s8FissVI"]}], "isCustomRegex": true, "letterCase": "wmu3HcaU", "maxLength": 46, "maxRepeatingAlphaNum": 4, "maxRepeatingSpecialCharacter": 5, "minCharType": 56, "minLength": 56, "regex": "Pp7kDsaj", "specialCharacterLocation": "2wwJnBdX", "specialCharacters": ["i5IPY0m2", "cMYIWkEJ", "zYShtHb9"]}}, {"field": "nI7G7yyR", "validation": {"allowAllSpecialCharacters": false, "allowDigit": false, "allowLetter": true, "allowSpace": true, "allowUnicode": true, "blockedWord": ["i89tjTXL", "iCFqaAsI", "hflvQQ5S"], "description": [{"language": "GRD3SHAF", "message": ["f9DyKJYP", "PVDzzPNV", "PhaQDYlB"]}, {"language": "EzV4Rsfy", "message": ["P2M71VNG", "xZgc94yr", "77eQB6dy"]}, {"language": "8XLTDt1d", "message": ["ABqOm6FV", "sqdCJw8q", "zLONq7Eb"]}], "isCustomRegex": false, "letterCase": "598mAtDz", "maxLength": 42, "maxRepeatingAlphaNum": 84, "maxRepeatingSpecialCharacter": 30, "minCharType": 8, "minLength": 44, "regex": "rI60RlBY", "specialCharacterLocation": "XYjyEQpD", "specialCharacters": ["YIPSDkiD", "UPLYJGKP", "BjbneCAO"]}}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateInputValidations \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 109 'AdminUpdateInputValidations' test.out

#- 110 AdminResetInputValidations
$CLI_EXE \
    --sn iam \
    --op AdminResetInputValidations \
    --field '0590I1Zf' \
    > test.out 2>&1
eval_tap $? 110 'AdminResetInputValidations' test.out

#- 111 ListAdminsV3
$CLI_EXE \
    --sn iam \
    --op ListAdminsV3 \
    --namespace $AB_NAMESPACE \
    --after 'KpwoWrRI' \
    --before 'bMZTPLe4' \
    --limit '70' \
    > test.out 2>&1
eval_tap $? 111 'ListAdminsV3' test.out

#- 112 AdminGetAgeRestrictionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetAgeRestrictionStatusV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 112 'AdminGetAgeRestrictionStatusV3' test.out

#- 113 AdminUpdateAgeRestrictionConfigV3
# body param: body
echo '{"ageRestriction": 17, "enable": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAgeRestrictionConfigV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 113 'AdminUpdateAgeRestrictionConfigV3' test.out

#- 114 AdminGetListCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op AdminGetListCountryAgeRestrictionV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 114 'AdminGetListCountryAgeRestrictionV3' test.out

#- 115 AdminUpdateCountryAgeRestrictionV3
# body param: body
echo '{"ageRestriction": 40}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateCountryAgeRestrictionV3 \
    --countryCode '25nsyVxM' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 115 'AdminUpdateCountryAgeRestrictionV3' test.out

#- 116 AdminGetBannedUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedUsersV3 \
    --namespace $AB_NAMESPACE \
    --activeOnly 'true' \
    --banType 'W0qfdwB0' \
    --limit '10' \
    --offset '14' \
    > test.out 2>&1
eval_tap $? 116 'AdminGetBannedUsersV3' test.out

#- 117 AdminBanUserBulkV3
# body param: body
echo '{"ban": "L8TrYdS4", "comment": "uxsCwVNf", "endDate": "wv2ctSnL", "reason": "F7U7Z9Sr", "skipNotif": true, "userIds": ["aYCbJWuZ", "A7tpsa8d", "yD9lq2Wp"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 117 'AdminBanUserBulkV3' test.out

#- 118 AdminUnbanUserBulkV3
# body param: body
echo '{"bans": [{"banId": "B5u78ktV", "userId": "fKgiZwU5"}, {"banId": "Xty2pKvW", "userId": "g9LxUusl"}, {"banId": "Q9VZv8w1", "userId": "tZJ6p6D2"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUnbanUserBulkV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 118 'AdminUnbanUserBulkV3' test.out

#- 119 AdminGetBansTypeWithNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetBansTypeWithNamespaceV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 119 'AdminGetBansTypeWithNamespaceV3' test.out

#- 120 AdminGetClientsByNamespaceV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsByNamespaceV3 \
    --namespace $AB_NAMESPACE \
    --clientId '4EMff9SZ' \
    --clientName 'DbKAnKeA' \
    --clientType 'GYMsnyRX' \
    --limit '8' \
    --offset '81' \
    > test.out 2>&1
eval_tap $? 120 'AdminGetClientsByNamespaceV3' test.out

#- 121 AdminCreateClientV3
# body param: body
echo '{"audiences": ["FLg91Yge", "nPXLSCDf", "SPGUhhVA"], "baseUri": "ZITooHcK", "clientId": "FOvGiLYw", "clientName": "6NczkjUQ", "clientPermissions": [{"action": 18, "resource": "uEUPlWJS", "schedAction": 28, "schedCron": "CGvpSeap", "schedRange": ["2j9pubYr", "nrhPw856", "PnHvEa8E"]}, {"action": 86, "resource": "jV0dAKcL", "schedAction": 20, "schedCron": "pwraCDDi", "schedRange": ["o6RK8C72", "hA8EpKQo", "qKLQAxN0"]}, {"action": 78, "resource": "96Je7TJ3", "schedAction": 25, "schedCron": "GVbnCvrw", "schedRange": ["File7Snv", "PlttxtRr", "sMIT7rVQ"]}], "clientPlatform": "IMb1fh9X", "deletable": true, "description": "rImHzC6I", "namespace": "nBmSel4t", "oauthAccessTokenExpiration": 27, "oauthAccessTokenExpirationTimeUnit": "NlB3H0jz", "oauthClientType": "kgxlJAbf", "oauthRefreshTokenExpiration": 82, "oauthRefreshTokenExpirationTimeUnit": "q4cVOImu", "redirectUri": "k6a5rK28", "scopes": ["T1hsVGVs", "AId0EjqT", "MQ53ReIh"], "secret": "sCgpUMPy", "twoFactorEnabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateClientV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 121 'AdminCreateClientV3' test.out

#- 122 AdminGetClientsbyNamespacebyIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetClientsbyNamespacebyIDV3 \
    --clientId 'qrxOCaRO' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 122 'AdminGetClientsbyNamespacebyIDV3' test.out

#- 123 AdminDeleteClientV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientV3 \
    --clientId 'MGPT6JS7' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 123 'AdminDeleteClientV3' test.out

#- 124 AdminUpdateClientV3
# body param: body
echo '{"audiences": ["4G3ZDL7W", "S7I8gLMC", "piIXkRHC"], "baseUri": "pDVBipMA", "clientName": "7juee1oI", "clientPermissions": [{"action": 9, "resource": "eVQkzQaO", "schedAction": 50, "schedCron": "CUjXV1oW", "schedRange": ["xa6FKMBI", "VqRhsJnN", "LWM7rvaC"]}, {"action": 24, "resource": "xB2YTpev", "schedAction": 49, "schedCron": "eavy0jgO", "schedRange": ["4iO0ObWl", "xzDrk9Az", "AkNz6KGT"]}, {"action": 93, "resource": "XvimioXG", "schedAction": 60, "schedCron": "qCrrr47f", "schedRange": ["cYaCI1rC", "n6mdr6JM", "lgCXOmTk"]}], "clientPlatform": "CUEHwQcK", "deletable": false, "description": "EzJ09NMl", "namespace": "9gj7s3jh", "oauthAccessTokenExpiration": 23, "oauthAccessTokenExpirationTimeUnit": "cxkMC4TZ", "oauthRefreshTokenExpiration": 97, "oauthRefreshTokenExpirationTimeUnit": "7DHUjnzc", "redirectUri": "1wo0ZnVx", "scopes": ["HlyhYDz0", "8DZIOkl7", "JAeJ4U33"], "twoFactorEnabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientV3 \
    --clientId 'xGtSwyAf' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 124 'AdminUpdateClientV3' test.out

#- 125 AdminUpdateClientPermissionV3
# body param: body
echo '{"permissions": [{"action": 61, "resource": "0aiMOmFS"}, {"action": 2, "resource": "9DY1wM3Y"}, {"action": 56, "resource": "7iRswdiq"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientPermissionV3 \
    --clientId 'Nc5vDNAb' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 125 'AdminUpdateClientPermissionV3' test.out

#- 126 AdminAddClientPermissionsV3
# body param: body
echo '{"permissions": [{"action": 63, "resource": "vV49Hatb"}, {"action": 59, "resource": "iQ15xrQ6"}, {"action": 53, "resource": "Zymy3rgj"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddClientPermissionsV3 \
    --clientId 'BiPNwxjY' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 126 'AdminAddClientPermissionsV3' test.out

#- 127 AdminDeleteClientPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteClientPermissionV3 \
    --action '74' \
    --clientId 'aMsfhkcT' \
    --namespace $AB_NAMESPACE \
    --resource 'AXgjtqcM' \
    > test.out 2>&1
eval_tap $? 127 'AdminDeleteClientPermissionV3' test.out

#- 128 RetrieveAllThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 128 'RetrieveAllThirdPartyLoginPlatformCredentialV3' test.out

#- 129 RetrieveAllActiveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 129 'RetrieveAllActiveThirdPartyLoginPlatformCredentialV3' test.out

#- 130 RetrieveAllSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --limit '76' \
    --offset '11' \
    > test.out 2>&1
eval_tap $? 130 'RetrieveAllSSOLoginPlatformCredentialV3' test.out

#- 131 RetrieveThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op RetrieveThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId '6adZayVc' \
    > test.out 2>&1
eval_tap $? 131 'RetrieveThirdPartyLoginPlatformCredentialV3' test.out

#- 132 AddThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "moDR5rEb", "AWSCognitoRegion": "tMCRXktG", "AWSCognitoUserPool": "dUIPI4rO", "AllowedClients": ["gGK0VlsQ", "OuOsrEB3", "gyq7yYE6"], "AppId": "1NTa95Qu", "AuthorizationEndpoint": "5Yo8DDMl", "ClientId": "q4X5RXo9", "Environment": "yJhPn4ix", "FederationMetadataURL": "ruWezxG5", "GenericOauthFlow": false, "IsActive": true, "Issuer": "KYu47UYC", "JWKSEndpoint": "Y6fkUEQP", "KeyID": "E4zgeZOM", "NetflixCertificates": {"encryptedPrivateKey": "yDeLvWoo", "encryptedPrivateKeyName": "vwtWD1o3", "publicCertificate": "zTA0ljO9", "publicCertificateName": "lZ6NfuX8", "rootCertificate": "SY11l5Vq", "rootCertificateName": "C6VUIahT"}, "OrganizationId": "aUqKJBry", "PlatformName": "f1wdPGr4", "RedirectUri": "eTrGAb4b", "RegisteredDomains": [{"affectedClientIDs": ["E3T9Bkfo", "uY4bjH9F", "kNkkzDJj"], "domain": "X974sfBI", "namespaces": ["FpTJA5xl", "cbAXl3yf", "iLRWuYMB"], "roleId": "gkyROLio"}, {"affectedClientIDs": ["nOOgRksI", "lZ4qy7S3", "Ywz6XE5H"], "domain": "OGOWo5x0", "namespaces": ["Iq62HYUA", "isKcetlX", "O7RP8x7x"], "roleId": "24eJhIyf"}, {"affectedClientIDs": ["bEiporMy", "Yzevvf25", "nBATSsLL"], "domain": "yBFAQrVq", "namespaces": ["DyQky474", "Fg3Yug9F", "nXRQzdBT"], "roleId": "HEPcpLxT"}], "Secret": "hzn1sVVJ", "TeamID": "QOFysDqs", "TokenAuthenticationType": "DrKBcMEy", "TokenClaimsMapping": {"ke89XVPZ": "Mu16Q4Sk", "qZ5x7k8K": "I1MOfucI", "dYZYW6gl": "AyEJknnH"}, "TokenEndpoint": "nMNx1NOy", "scopes": ["npDKViwa", "3pfJjjVB", "yb7rMrGH"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'acQrqmi0' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 132 'AddThirdPartyLoginPlatformCredentialV3' test.out

#- 133 DeleteThirdPartyLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'sT260CYh' \
    > test.out 2>&1
eval_tap $? 133 'DeleteThirdPartyLoginPlatformCredentialV3' test.out

#- 134 UpdateThirdPartyLoginPlatformCredentialV3
# body param: body
echo '{"ACSURL": "66W1wmje", "AWSCognitoRegion": "gPwyTSf4", "AWSCognitoUserPool": "PkH71kbp", "AllowedClients": ["1GA4cydr", "KzSF8dwZ", "i2yfQ4JY"], "AppId": "OOohOGuR", "AuthorizationEndpoint": "PjMqoj6y", "ClientId": "3AHsfoAK", "Environment": "b631DspU", "FederationMetadataURL": "mVTdvftD", "GenericOauthFlow": false, "IsActive": false, "Issuer": "FTF79nqR", "JWKSEndpoint": "XNcPmiM3", "KeyID": "ZvHCs3PQ", "NetflixCertificates": {"encryptedPrivateKey": "JSw448W0", "encryptedPrivateKeyName": "zuGXTfMK", "publicCertificate": "T9o0p3cZ", "publicCertificateName": "ZmgcknZx", "rootCertificate": "i4ikXXUJ", "rootCertificateName": "4yQhbIPK"}, "OrganizationId": "LhdBa0fE", "PlatformName": "ltEdOewY", "RedirectUri": "CqqGfSf6", "RegisteredDomains": [{"affectedClientIDs": ["I2jYzAAT", "fWiWZG1Y", "j9HUIzUW"], "domain": "DMA8L0nF", "namespaces": ["VjYFCUh1", "QLGQeos6", "WUh77rJd"], "roleId": "qT49pB4D"}, {"affectedClientIDs": ["0JwU9ggm", "67ycgMtH", "g91PstE4"], "domain": "HUVuUPTQ", "namespaces": ["24pm4uaN", "wKfrnWfD", "SeNiwYIg"], "roleId": "jMXm9Ga9"}, {"affectedClientIDs": ["5hMeCoXK", "P2OtCg6q", "rjPgctXU"], "domain": "rkx7I55K", "namespaces": ["OaO10zO3", "2P6DkLlj", "mvn9hrJv"], "roleId": "lzMiUtRP"}], "Secret": "UHcbDAnW", "TeamID": "5LluSpFb", "TokenAuthenticationType": "BrIRka1s", "TokenClaimsMapping": {"PyHdCwE8": "OAodHMXX", "W986aSCf": "Q6VvIuML", "zYoaQoUO": "Pi7MIeBj"}, "TokenEndpoint": "vYQbEX5m", "scopes": ["59xWnXKR", "CVGoK3Ty", "uvBpz1Cx"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'swwlmkcR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 134 'UpdateThirdPartyLoginPlatformCredentialV3' test.out

#- 135 UpdateThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"affectedClientIDs": ["DJ9DVhOa", "xrulgUpl", "grWRbQu5"], "assignedNamespaces": ["mlhXkXff", "6JyttIVv", "OXeSpenk"], "domain": "oR2MBQTA", "roleId": "s2ZKr9nM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'eRzBL1AI' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 135 'UpdateThirdPartyLoginPlatformDomainV3' test.out

#- 136 DeleteThirdPartyLoginPlatformDomainV3
# body param: body
echo '{"domain": "wttv0fxD"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op DeleteThirdPartyLoginPlatformDomainV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'uKiAuoiv' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 136 'DeleteThirdPartyLoginPlatformDomainV3' test.out

#- 137 RetrieveSSOLoginPlatformCredential
$CLI_EXE \
    --sn iam \
    --op RetrieveSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId '0BS4g80h' \
    > test.out 2>&1
eval_tap $? 137 'RetrieveSSOLoginPlatformCredential' test.out

#- 138 AddSSOLoginPlatformCredential
# body param: body
echo '{"acsUrl": "QMqlLgYX", "apiKey": "POvHbu6n", "appId": "DQyx0KxY", "federationMetadataUrl": "Ie5ptjrE", "isActive": true, "redirectUri": "dCztOGDZ", "secret": "B9zIwnm4", "ssoUrl": "leB0Hb2X"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AddSSOLoginPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'CeRqx3tA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 138 'AddSSOLoginPlatformCredential' test.out

#- 139 DeleteSSOLoginPlatformCredentialV3
$CLI_EXE \
    --sn iam \
    --op DeleteSSOLoginPlatformCredentialV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'NNqpaa6Q' \
    > test.out 2>&1
eval_tap $? 139 'DeleteSSOLoginPlatformCredentialV3' test.out

#- 140 UpdateSSOPlatformCredential
# body param: body
echo '{"acsUrl": "M6a0kem0", "apiKey": "AfGu82NK", "appId": "hv1FHQxc", "federationMetadataUrl": "GDSdZ4uP", "isActive": true, "redirectUri": "drI99KV2", "secret": "nQr089Mz", "ssoUrl": "tEYZkZGu"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateSSOPlatformCredential \
    --namespace $AB_NAMESPACE \
    --platformId 'jAdhuNf7' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 140 'UpdateSSOPlatformCredential' test.out

#- 141 AdminGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'VDG8HGPM' \
    --platformUserId 'vDVazzYg' \
    > test.out 2>&1
eval_tap $? 141 'AdminGetUserByPlatformUserIDV3' test.out

#- 142 GetAdminUsersByRoleIdV3
$CLI_EXE \
    --sn iam \
    --op GetAdminUsersByRoleIdV3 \
    --namespace $AB_NAMESPACE \
    --roleId 's70sDfIO' \
    --after '49' \
    --before '2' \
    --limit '43' \
    > test.out 2>&1
eval_tap $? 142 'GetAdminUsersByRoleIdV3' test.out

#- 143 AdminGetUserByEmailAddressV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --emailAddress 'tDoEcx26' \
    > test.out 2>&1
eval_tap $? 143 'AdminGetUserByEmailAddressV3' test.out

#- 144 AdminListUserIDByUserIDsV3
# body param: body
echo '{"userIds": ["2ULLjWoG", "gfAxxwHm", "NqS889gk"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminListUserIDByUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 144 'AdminListUserIDByUserIDsV3' test.out

#- 145 AdminInviteUserV3
# body param: body
echo '{"emailAddresses": ["r62m43pS", "SViXHpf9", "oWRQM87R"], "isAdmin": true, "roles": ["7OJ5VrR3", "iok09C7f", "hMDUlZzD"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 145 'AdminInviteUserV3' test.out

#- 146 AdminListUsersV3
$CLI_EXE \
    --sn iam \
    --op AdminListUsersV3 \
    --namespace $AB_NAMESPACE \
    --limit '10' \
    --offset '56' \
    > test.out 2>&1
eval_tap $? 146 'AdminListUsersV3' test.out

#- 147 AdminSearchUserV3
$CLI_EXE \
    --sn iam \
    --op AdminSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'QMGFa8iY' \
    --endDate 'yVxizKFD' \
    --limit '74' \
    --offset '88' \
    --platformBy 'lEuwIuLS' \
    --platformId 'Y9weiRKc' \
    --query 'K27X043Z' \
    --startDate 'CrSTfGYv' \
    > test.out 2>&1
eval_tap $? 147 'AdminSearchUserV3' test.out

#- 148 AdminGetBulkUserByEmailAddressV3
# body param: body
echo '{"listEmailAddressRequest": ["8nTgN2Il", "J4d4WMFe", "7EHSs9Bj"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminGetBulkUserByEmailAddressV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 148 'AdminGetBulkUserByEmailAddressV3' test.out

#- 149 AdminGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId '2R7WT2s2' \
    > test.out 2>&1
eval_tap $? 149 'AdminGetUserByUserIdV3' test.out

#- 150 AdminUpdateUserV3
# body param: body
echo '{"avatarUrl": "AQiSDfCf", "country": "arcZsqE4", "dateOfBirth": "VQ3JS9E1", "displayName": "vjLmvncT", "languageTag": "6AuOpdxY", "userName": "HakI56c8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --userId '1YJJLKir' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 150 'AdminUpdateUserV3' test.out

#- 151 AdminGetUserBanV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserBanV3 \
    --namespace $AB_NAMESPACE \
    --userId 'wlIBYRNb' \
    --activeOnly 'true' \
    --after 'Cv8PQrvq' \
    --before 'ckCyqbKI' \
    --limit '12' \
    > test.out 2>&1
eval_tap $? 151 'AdminGetUserBanV3' test.out

#- 152 AdminBanUserV3
# body param: body
echo '{"ban": "mwiPXyNL", "comment": "KOY0YTw0", "endDate": "2be0hzwm", "reason": "8MTRhQSa", "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'GaH6QaKW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 152 'AdminBanUserV3' test.out

#- 153 AdminUpdateUserBanV3
# body param: body
echo '{"enabled": false, "skipNotif": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserBanV3 \
    --banId 'JcxsRdP2' \
    --namespace $AB_NAMESPACE \
    --userId 'I7CVKFfV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 153 'AdminUpdateUserBanV3' test.out

#- 154 AdminSendVerificationCodeV3
# body param: body
echo '{"context": "H3aufJWg", "emailAddress": "DpbwO8pT", "languageTag": "1YFegf7l"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'WiWU61HX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 154 'AdminSendVerificationCodeV3' test.out

#- 155 AdminVerifyAccountV3
# body param: body
echo '{"Code": "vsC1PnYx", "ContactType": "5d2ps1Ge", "LanguageTag": "Ig4Fri0q", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminVerifyAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'OflBSnl4' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 155 'AdminVerifyAccountV3' test.out

#- 156 GetUserVerificationCode
$CLI_EXE \
    --sn iam \
    --op GetUserVerificationCode \
    --namespace $AB_NAMESPACE \
    --userId 'LmSHwC0P' \
    > test.out 2>&1
eval_tap $? 156 'GetUserVerificationCode' test.out

#- 157 AdminGetUserDeletionStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'RJABpuNB' \
    > test.out 2>&1
eval_tap $? 157 'AdminGetUserDeletionStatusV3' test.out

#- 158 AdminUpdateUserDeletionStatusV3
# body param: body
echo '{"enabled": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserDeletionStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId 'xKoBIxjC' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 158 'AdminUpdateUserDeletionStatusV3' test.out

#- 159 AdminUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "CDelZTdC", "country": "n1jpPhsW", "dateOfBirth": "ZDOE4GKe", "displayName": "Hk6aJbYD", "emailAddress": "Ny2E42W2", "password": "WX875SFS", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --userId 'TGNszx3B' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 159 'AdminUpgradeHeadlessAccountV3' test.out

#- 160 AdminDeleteUserInformationV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'cx7rcdyj' \
    > test.out 2>&1
eval_tap $? 160 'AdminDeleteUserInformationV3' test.out

#- 161 AdminGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'E6ZIxpwu' \
    --after '0.4300140618614532' \
    --before '0.14341039436838876' \
    --limit '37' \
    > test.out 2>&1
eval_tap $? 161 'AdminGetUserLoginHistoriesV3' test.out

#- 162 AdminResetPasswordV3
# body param: body
echo '{"languageTag": "cDzslK1X", "newPassword": "wwwV585w", "oldPassword": "BQKX1pVi"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'JM0S8eVa' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 162 'AdminResetPasswordV3' test.out

#- 163 AdminUpdateUserPermissionV3
# body param: body
echo '{"Permissions": [{"Action": 21, "Resource": "8474nSmP", "SchedAction": 80, "SchedCron": "sjXblgSx", "SchedRange": ["aUsJys54", "GQQKUXvx", "9joh9sLt"]}, {"Action": 92, "Resource": "mYf9eLpd", "SchedAction": 66, "SchedCron": "RfEslX4P", "SchedRange": ["dyhfF0Gn", "AgyEL1HG", "2PLxakK1"]}, {"Action": 9, "Resource": "Z7EytteW", "SchedAction": 0, "SchedCron": "i9zh9lgO", "SchedRange": ["R3RfBMQ8", "ui0JtZFg", "cNB1xUwo"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserPermissionV3 \
    --namespace $AB_NAMESPACE \
    --userId '3ckLpcoH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 163 'AdminUpdateUserPermissionV3' test.out

#- 164 AdminAddUserPermissionsV3
# body param: body
echo '{"Permissions": [{"Action": 25, "Resource": "osY6HXqT", "SchedAction": 86, "SchedCron": "oqblQL3p", "SchedRange": ["2RKLHRsw", "VM8zgEBQ", "Dp7RunCp"]}, {"Action": 44, "Resource": "qcLvrF16", "SchedAction": 43, "SchedCron": "ISbB0n9o", "SchedRange": ["TRlVSacZ", "BiaqUvvI", "pZ0pjzfF"]}, {"Action": 74, "Resource": "nVwUxsnt", "SchedAction": 31, "SchedCron": "6gZnCQVE", "SchedRange": ["M2PSIJxJ", "4iwMa2f2", "9YS4CsWE"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserPermissionsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pZGheHvH' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 164 'AdminAddUserPermissionsV3' test.out

#- 165 AdminDeleteUserPermissionBulkV3
# body param: body
echo '[{"Action": 62, "Resource": "7PEXyXPt"}, {"Action": 26, "Resource": "66WxXS8o"}, {"Action": 32, "Resource": "wcITykyO"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionBulkV3 \
    --namespace $AB_NAMESPACE \
    --userId 'VWVafUTL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 165 'AdminDeleteUserPermissionBulkV3' test.out

#- 166 AdminDeleteUserPermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserPermissionV3 \
    --action '86' \
    --namespace $AB_NAMESPACE \
    --resource '9d037e70' \
    --userId 'BFKXzAjO' \
    > test.out 2>&1
eval_tap $? 166 'AdminDeleteUserPermissionV3' test.out

#- 167 AdminGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op AdminGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'T6NW2o3N' \
    --after '4txD7HPc' \
    --before 'jsQfNJvW' \
    --limit '90' \
    > test.out 2>&1
eval_tap $? 167 'AdminGetUserPlatformAccountsV3' test.out

#- 168 AdminGetListJusticePlatformAccounts
$CLI_EXE \
    --sn iam \
    --op AdminGetListJusticePlatformAccounts \
    --namespace $AB_NAMESPACE \
    --userId 'HuvtA7ih' \
    > test.out 2>&1
eval_tap $? 168 'AdminGetListJusticePlatformAccounts' test.out

#- 169 AdminGetUserMapping
$CLI_EXE \
    --sn iam \
    --op AdminGetUserMapping \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'GWZVvbTb' \
    --userId 'g3vjIPoC' \
    > test.out 2>&1
eval_tap $? 169 'AdminGetUserMapping' test.out

#- 170 AdminCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op AdminCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace '0dnls7q7' \
    --userId 'GR5hyQC7' \
    > test.out 2>&1
eval_tap $? 170 'AdminCreateJusticeUser' test.out

#- 171 AdminLinkPlatformAccount
# body param: body
echo '{"platformId": "f0TAn8I4", "platformUserId": "rXuVpfib"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'icBOqBNn' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 171 'AdminLinkPlatformAccount' test.out

#- 172 AdminPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "XHVqxbrV"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId '55fLba4b' \
    --userId 'ewHHUxRW' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 172 'AdminPlatformUnlinkV3' test.out

#- 173 AdminPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AdminPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'tTcqetmn' \
    --userId 'OX8MhfbM' \
    --ticket 'xPh2HnKh' \
    > test.out 2>&1
eval_tap $? 173 'AdminPlatformLinkV3' test.out

#- 174 AdminDeleteUserRolesV3
# body param: body
echo '["rw3b4vcD", "W45BVYR9", "RRgjh521"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRolesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'IzDQ8Gck' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 174 'AdminDeleteUserRolesV3' test.out

#- 175 AdminSaveUserRoleV3
# body param: body
echo '[{"namespace": "ASPUeE8d", "roleId": "17lTkNhM"}, {"namespace": "JcHdsTAK", "roleId": "pqHPdx8Z"}, {"namespace": "dJXM256x", "roleId": "QwvdARpU"}]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminSaveUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --userId '63WLzmUS' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 175 'AdminSaveUserRoleV3' test.out

#- 176 AdminAddUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'Rf8zrtzs' \
    --userId 'jQeiHMTO' \
    > test.out 2>&1
eval_tap $? 176 'AdminAddUserRoleV3' test.out

#- 177 AdminDeleteUserRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteUserRoleV3 \
    --namespace $AB_NAMESPACE \
    --roleId 'lUfAZVcM' \
    --userId 'zkB4fCVn' \
    > test.out 2>&1
eval_tap $? 177 'AdminDeleteUserRoleV3' test.out

#- 178 AdminUpdateUserStatusV3
# body param: body
echo '{"enabled": true, "reason": "rwFlUMKl"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserStatusV3 \
    --namespace $AB_NAMESPACE \
    --userId '47UWM5NR' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 178 'AdminUpdateUserStatusV3' test.out

#- 179 AdminVerifyUserWithoutVerificationCodeV3
$CLI_EXE \
    --sn iam \
    --op AdminVerifyUserWithoutVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --userId 'bKT9MlbU' \
    > test.out 2>&1
eval_tap $? 179 'AdminVerifyUserWithoutVerificationCodeV3' test.out

#- 180 AdminUpdateClientSecretV3
# body param: body
echo '{"newSecret": "0y1caPz8"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateClientSecretV3 \
    --clientId 'gEEoVnnw' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 180 'AdminUpdateClientSecretV3' test.out

#- 181 AdminGetRolesV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV3 \
    --after 'i7W1t0Kj' \
    --before 'Wdifbhty' \
    --isWildcard 'false' \
    --limit '82' \
    > test.out 2>&1
eval_tap $? 181 'AdminGetRolesV3' test.out

#- 182 AdminCreateRoleV3
# body param: body
echo '{"adminRole": false, "deletable": false, "isWildcard": false, "managers": [{"displayName": "c3h5c6lX", "namespace": "92tgIZ32", "userId": "N3WenTj8"}, {"displayName": "Q8vKjSOH", "namespace": "4T9Nx5rQ", "userId": "qA0fVCCK"}, {"displayName": "MiSCgnLA", "namespace": "TsJswvrt", "userId": "wCDSffvT"}], "members": [{"displayName": "7uvGVkLJ", "namespace": "YknBG8Os", "userId": "VIeUZbXS"}, {"displayName": "FOmfYgGD", "namespace": "Cf0REEyr", "userId": "szqbHmYg"}, {"displayName": "WMPBTyHk", "namespace": "bm8hXElf", "userId": "JpiEcBoW"}], "permissions": [{"action": 70, "resource": "7H0AWFjC", "schedAction": 50, "schedCron": "lSekQkro", "schedRange": ["ZoeBWi9J", "04v89Fbx", "aDXfD5ZW"]}, {"action": 23, "resource": "hoMdcdbY", "schedAction": 38, "schedCron": "rqi7w9nF", "schedRange": ["vgaON0J1", "wnjKcraq", "ho1sPDYE"]}, {"action": 40, "resource": "UnXkV5TU", "schedAction": 91, "schedCron": "6keKM4sO", "schedRange": ["lk3myfHA", "mGRsFSy7", "jOTDz9Ra"]}], "roleName": "8U5t791Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 182 'AdminCreateRoleV3' test.out

#- 183 AdminGetRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV3 \
    --roleId '0vXesfiD' \
    > test.out 2>&1
eval_tap $? 183 'AdminGetRoleV3' test.out

#- 184 AdminDeleteRoleV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV3 \
    --roleId 'c3zKt3U9' \
    > test.out 2>&1
eval_tap $? 184 'AdminDeleteRoleV3' test.out

#- 185 AdminUpdateRoleV3
# body param: body
echo '{"deletable": true, "isWildcard": false, "roleName": "HoAqxvZq"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV3 \
    --roleId '4HgUkLYh' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 185 'AdminUpdateRoleV3' test.out

#- 186 AdminGetRoleAdminStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleAdminStatusV3 \
    --roleId 'yll66xtX' \
    > test.out 2>&1
eval_tap $? 186 'AdminGetRoleAdminStatusV3' test.out

#- 187 AdminUpdateAdminRoleStatusV3
$CLI_EXE \
    --sn iam \
    --op AdminUpdateAdminRoleStatusV3 \
    --roleId 'iQVihXAH' \
    > test.out 2>&1
eval_tap $? 187 'AdminUpdateAdminRoleStatusV3' test.out

#- 188 AdminRemoveRoleAdminV3
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleAdminV3 \
    --roleId 'ExDjyGzw' \
    > test.out 2>&1
eval_tap $? 188 'AdminRemoveRoleAdminV3' test.out

#- 189 AdminGetRoleManagersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleManagersV3 \
    --roleId 'qP87yZK8' \
    --after 'ztvvzfb7' \
    --before 'x4TmCxLJ' \
    --limit '1' \
    > test.out 2>&1
eval_tap $? 189 'AdminGetRoleManagersV3' test.out

#- 190 AdminAddRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "wpcW8Zm0", "namespace": "abvTbwma", "userId": "4egCfXeq"}, {"displayName": "2NE08DRN", "namespace": "u51eS47I", "userId": "Cu0BrKPB"}, {"displayName": "TIS7HKZx", "namespace": "WLNopniS", "userId": "x4IF3gSY"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleManagersV3 \
    --roleId 'NJ7gS4Wb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 190 'AdminAddRoleManagersV3' test.out

#- 191 AdminRemoveRoleManagersV3
# body param: body
echo '{"managers": [{"displayName": "Ge4Ghvb7", "namespace": "FhcHmMNP", "userId": "UrGmzheC"}, {"displayName": "6Yw6qIqM", "namespace": "f0fqsWGI", "userId": "ntptV9vi"}, {"displayName": "K8d2kqHh", "namespace": "Or3mTTAa", "userId": "5OdZPfru"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleManagersV3 \
    --roleId 'fIrBeW98' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 191 'AdminRemoveRoleManagersV3' test.out

#- 192 AdminGetRoleMembersV3
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleMembersV3 \
    --roleId 'ulIrqBCZ' \
    --after 'DHtZl8bv' \
    --before 'Dfy0DOH0' \
    --limit '65' \
    > test.out 2>&1
eval_tap $? 192 'AdminGetRoleMembersV3' test.out

#- 193 AdminAddRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "8ltFtqew", "namespace": "bAFIAbUF", "userId": "Mt7gsiX7"}, {"displayName": "NhwlUUGn", "namespace": "tMt6J7fQ", "userId": "oPNPnMqh"}, {"displayName": "aRvIf2F1", "namespace": "4Kjd1woM", "userId": "gWcf3QHx"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRoleMembersV3 \
    --roleId 'e5vanwkq' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 193 'AdminAddRoleMembersV3' test.out

#- 194 AdminRemoveRoleMembersV3
# body param: body
echo '{"members": [{"displayName": "AHk9nffz", "namespace": "6mQTls4t", "userId": "YvK3v9Bc"}, {"displayName": "2JqH8Jdh", "namespace": "ujNputZ6", "userId": "sosV3gQz"}, {"displayName": "iEodiW4T", "namespace": "GhiSF8hZ", "userId": "gChYjhpm"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveRoleMembersV3 \
    --roleId '8oxjDRgi' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 194 'AdminRemoveRoleMembersV3' test.out

#- 195 AdminUpdateRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 59, "resource": "EymrNNZw", "schedAction": 54, "schedCron": "XeXPIDD0", "schedRange": ["wEr5pvM2", "yGRknXE2", "SfAcsidV"]}, {"action": 22, "resource": "c2cUuidD", "schedAction": 69, "schedCron": "YoeUMajn", "schedRange": ["dZyvmcIL", "reKmj3mR", "kGyIsxrp"]}, {"action": 89, "resource": "3H11Kt7v", "schedAction": 63, "schedCron": "ccoAx0Nr", "schedRange": ["nFPbDGUI", "r8pJEBk4", "irIbBicr"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV3 \
    --roleId 'JPrc3Hkg' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 195 'AdminUpdateRolePermissionsV3' test.out

#- 196 AdminAddRolePermissionsV3
# body param: body
echo '{"permissions": [{"action": 45, "resource": "STS24vO5", "schedAction": 89, "schedCron": "RbfFQcvE", "schedRange": ["2tjIZyVB", "C9ZHKLjl", "MqlQNuT9"]}, {"action": 11, "resource": "IjZn11UB", "schedAction": 17, "schedCron": "e8NCEWzA", "schedRange": ["iTJoE0NF", "wqg694cV", "kwE4LlkN"]}, {"action": 56, "resource": "rxVKF0qN", "schedAction": 70, "schedCron": "Flh1Z9cQ", "schedRange": ["EaBK7T4B", "le6SG4P8", "bSNLNKMz"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV3 \
    --roleId 'lF21xSLw' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 196 'AdminAddRolePermissionsV3' test.out

#- 197 AdminDeleteRolePermissionsV3
# body param: body
echo '["UAhN98tc", "xFyY9bff", "aoR4NnlO"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV3 \
    --roleId '3yCd3FhN' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 197 'AdminDeleteRolePermissionsV3' test.out

#- 198 AdminDeleteRolePermissionV3
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionV3 \
    --action '66' \
    --resource 'Bm8KwSJS' \
    --roleId 'zKHVamqQ' \
    > test.out 2>&1
eval_tap $? 198 'AdminDeleteRolePermissionV3' test.out

#- 199 AdminGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op AdminGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 199 'AdminGetMyUserV3' test.out

#- 200 UserAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op UserAuthenticationV3 \
    --client_id 'tRcIQucw' \
    --extend_exp 'true' \
    --redirect_uri 'f984TXcY' \
    --password 'n5IwKJRR' \
    --request_id 'yjZoNUjR' \
    --user_name 'UiHAbNEa' \
    > test.out 2>&1
eval_tap $? 200 'UserAuthenticationV3' test.out

#- 201 AuthenticationWithPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op AuthenticationWithPlatformLinkV3 \
    --extend_exp 'false' \
    --client_id 'mWvVKJqr' \
    --linkingToken 'K1mCVJbf' \
    --password 'JexsfDFP' \
    --username 'LzDAFfqc' \
    > test.out 2>&1
eval_tap $? 201 'AuthenticationWithPlatformLinkV3' test.out

#- 202 GenerateTokenByNewHeadlessAccountV3
$CLI_EXE \
    --sn iam \
    --op GenerateTokenByNewHeadlessAccountV3 \
    --extend_exp 'false' \
    --linkingToken 'BfLezKoH' \
    > test.out 2>&1
eval_tap $? 202 'GenerateTokenByNewHeadlessAccountV3' test.out

#- 203 GetCountryLocationV3
$CLI_EXE \
    --sn iam \
    --op GetCountryLocationV3 \
    > test.out 2>&1
eval_tap $? 203 'GetCountryLocationV3' test.out

#- 204 Logout
$CLI_EXE \
    --sn iam \
    --op Logout \
    > test.out 2>&1
eval_tap $? 204 'Logout' test.out

#- 205 RequestGameTokenCodeResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenCodeResponseV3 \
    --namespace $AB_NAMESPACE \
    --client_id 'MQPYhTTe' \
    > test.out 2>&1
eval_tap $? 205 'RequestGameTokenCodeResponseV3' test.out

#- 206 AdminRetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op AdminRetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'yOTKC6Of' \
    --userId 'JpgMDKU6' \
    > test.out 2>&1
eval_tap $? 206 'AdminRetrieveUserThirdPartyPlatformTokenV3' test.out

#- 207 RevokeUserV3
$CLI_EXE \
    --sn iam \
    --op RevokeUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'RwNdQ1LE' \
    > test.out 2>&1
eval_tap $? 207 'RevokeUserV3' test.out

#- 208 AuthorizeV3
$CLI_EXE \
    --sn iam \
    --op AuthorizeV3 \
    --codeChallenge '6iE8sNX5' \
    --codeChallengeMethod 'S256' \
    --createHeadless 'true' \
    --redirectUri 'p4D8c0kj' \
    --scope 'j7cuFCGB' \
    --state 'jsiLPW7I' \
    --targetAuthPage '9rADTSFk' \
    --useRedirectUriAsLoginUrlWhenLocked 'true' \
    --clientId 'lbX45C4G' \
    --responseType 'code' \
    > test.out 2>&1
eval_tap $? 208 'AuthorizeV3' test.out

#- 209 TokenIntrospectionV3
$CLI_EXE \
    --sn iam \
    --op TokenIntrospectionV3 \
    --token 'IQw5oZ8O' \
    > test.out 2>&1
eval_tap $? 209 'TokenIntrospectionV3' test.out

#- 210 GetJWKSV3
$CLI_EXE \
    --sn iam \
    --op GetJWKSV3 \
    > test.out 2>&1
eval_tap $? 210 'GetJWKSV3' test.out

#- 211 SendMFAAuthenticationCode
$CLI_EXE \
    --sn iam \
    --op SendMFAAuthenticationCode \
    --clientId 'eJOpP5qB' \
    --factor 'KI6c18QJ' \
    --mfaToken 'TqVCxvJ6' \
    > test.out 2>&1
eval_tap $? 211 'SendMFAAuthenticationCode' test.out

#- 212 Change2faMethod
$CLI_EXE \
    --sn iam \
    --op Change2faMethod \
    --factor 'cRtjqDX4' \
    --mfaToken '3NMrIW9P' \
    > test.out 2>&1
eval_tap $? 212 'Change2faMethod' test.out

#- 213 Verify2faCode
$CLI_EXE \
    --sn iam \
    --op Verify2faCode \
    --code 'NTNqKvjT' \
    --factor 'GwIpVoBa' \
    --mfaToken 'yFCI1lwf' \
    --rememberDevice 'true' \
    > test.out 2>&1
eval_tap $? 213 'Verify2faCode' test.out

#- 214 RetrieveUserThirdPartyPlatformTokenV3
$CLI_EXE \
    --sn iam \
    --op RetrieveUserThirdPartyPlatformTokenV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'TJu9zZI6' \
    --userId 'GJkdcTvr' \
    > test.out 2>&1
eval_tap $? 214 'RetrieveUserThirdPartyPlatformTokenV3' test.out

#- 215 AuthCodeRequestV3
$CLI_EXE \
    --sn iam \
    --op AuthCodeRequestV3 \
    --platformId 'n2K8yqUe' \
    --clientId '3XrsPzpu' \
    --redirectUri 'gxuQcJ3B' \
    --requestId 'ExUZZybr' \
    > test.out 2>&1
eval_tap $? 215 'AuthCodeRequestV3' test.out

#- 216 PlatformTokenGrantV3
$CLI_EXE \
    --sn iam \
    --op PlatformTokenGrantV3 \
    --platformId '9HvgkgFO' \
    --client_id '1qnyyFKg' \
    --createHeadless 'false' \
    --device_id 'upAylfXo' \
    --macAddress '0E0kNhfg' \
    --platform_token 'Ot0W3jFG' \
    > test.out 2>&1
eval_tap $? 216 'PlatformTokenGrantV3' test.out

#- 217 GetRevocationListV3
$CLI_EXE \
    --sn iam \
    --op GetRevocationListV3 \
    > test.out 2>&1
eval_tap $? 217 'GetRevocationListV3' test.out

#- 218 TokenRevocationV3
$CLI_EXE \
    --sn iam \
    --op TokenRevocationV3 \
    --token 'cYkv0DS0' \
    > test.out 2>&1
eval_tap $? 218 'TokenRevocationV3' test.out

#- 219 TokenGrantV3
$CLI_EXE \
    --sn iam \
    --op TokenGrantV3 \
    --client_id 'yGyvINH5' \
    --code 'BK9xGdNE' \
    --code_verifier 'Y6xpwe5x' \
    --extend_exp 'false' \
    --password '3a1jDOzL' \
    --redirect_uri 'WT2KQ8MD' \
    --refresh_token 'TzrCtn1S' \
    --username '7UInS5fL' \
    --grant_type 'authorization_code' \
    > test.out 2>&1
eval_tap $? 219 'TokenGrantV3' test.out

#- 220 VerifyTokenV3
$CLI_EXE \
    --sn iam \
    --op VerifyTokenV3 \
    --token 'OzrlZMJh' \
    > test.out 2>&1
eval_tap $? 220 'VerifyTokenV3' test.out

#- 221 PlatformAuthenticationV3
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticationV3 \
    --platformId 'C2JObdQG' \
    --code 'dDly4Swq' \
    --error '3Jm6jk1T' \
    --openidAssocHandle 'P662gqID' \
    --openidClaimedId '36svDrif' \
    --openidIdentity 'oyKcUYMZ' \
    --openidMode 'DNyNPWwL' \
    --openidNs 'NrVEqrGD' \
    --openidOpEndpoint 'P9sfF6zU' \
    --openidResponseNonce 'yUqnjBJ1' \
    --openidReturnTo 'RFIm4wtX' \
    --openidSig '2D1Zdn3j' \
    --openidSigned 'Snm14YUU' \
    --state '8cPALAjb' \
    > test.out 2>&1
eval_tap $? 221 'PlatformAuthenticationV3' test.out

#- 222 PublicGetInputValidations
$CLI_EXE \
    --sn iam \
    --op PublicGetInputValidations \
    --defaultOnEmpty 'true' \
    --languageCode 'sKhRZvXf' \
    > test.out 2>&1
eval_tap $? 222 'PublicGetInputValidations' test.out

#- 223 PublicGetCountryAgeRestrictionV3
$CLI_EXE \
    --sn iam \
    --op PublicGetCountryAgeRestrictionV3 \
    --countryCode '6jPAlejr' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 223 'PublicGetCountryAgeRestrictionV3' test.out

#- 224 RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 224 'RetrieveAllActiveThirdPartyLoginPlatformCredentialPublicV3' test.out

#- 225 RetrieveActiveOIDCClientsPublicV3
$CLI_EXE \
    --sn iam \
    --op RetrieveActiveOIDCClientsPublicV3 \
    --namespace $AB_NAMESPACE \
    --clientId 'hHbGxJuY' \
    > test.out 2>&1
eval_tap $? 225 'RetrieveActiveOIDCClientsPublicV3' test.out

#- 226 PublicListUserIDByPlatformUserIDsV3
# body param: body
echo '{"platformUserIds": ["A09gFSci", "bga4dgT3", "xDOTuVGz"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicListUserIDByPlatformUserIDsV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'HvzZ2noj' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 226 'PublicListUserIDByPlatformUserIDsV3' test.out

#- 227 PublicGetUserByPlatformUserIDV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByPlatformUserIDV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'ZUlUFmaD' \
    --platformUserId 'p1KlFJdb' \
    > test.out 2>&1
eval_tap $? 227 'PublicGetUserByPlatformUserIDV3' test.out

#- 228 PublicGetAsyncStatus
$CLI_EXE \
    --sn iam \
    --op PublicGetAsyncStatus \
    --namespace $AB_NAMESPACE \
    --requestId 'hv2UTU3u' \
    > test.out 2>&1
eval_tap $? 228 'PublicGetAsyncStatus' test.out

#- 229 PublicSearchUserV3
$CLI_EXE \
    --sn iam \
    --op PublicSearchUserV3 \
    --namespace $AB_NAMESPACE \
    --by 'gbruHjmg' \
    --limit '0' \
    --offset '66' \
    --query '3PozQdZM' \
    > test.out 2>&1
eval_tap $? 229 'PublicSearchUserV3' test.out

#- 230 PublicCreateUserV3
# body param: body
echo '{"PasswordMD5Sum": "ijbJwUDI", "acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "R0n9oxv1", "policyId": "jvk2FGwi", "policyVersionId": "5nsWFGp9"}, {"isAccepted": true, "localizedPolicyVersionId": "vKwGgjTX", "policyId": "4diBycZB", "policyVersionId": "eHG5qJpc"}, {"isAccepted": true, "localizedPolicyVersionId": "ZZnGlIBp", "policyId": "AmnHCCVg", "policyVersionId": "6PXgC4Y2"}], "authType": "engP88Rb", "code": "xaAW2irT", "country": "eEj8Aw9x", "dateOfBirth": "vfW9xmNC", "displayName": "gzAYA2EA", "emailAddress": "PZWKqCsx", "password": "8ajxqX6u", "reachMinimumAge": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 230 'PublicCreateUserV3' test.out

#- 231 CheckUserAvailability
$CLI_EXE \
    --sn iam \
    --op CheckUserAvailability \
    --namespace $AB_NAMESPACE \
    --field 'MRCMX8m9' \
    --query 'lVXGCSDU' \
    > test.out 2>&1
eval_tap $? 231 'CheckUserAvailability' test.out

#- 232 PublicBulkGetUsers
# body param: body
echo '{"userIds": ["hhW87ioM", "HdUgsI9V", "MkQQW82V"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicBulkGetUsers \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 232 'PublicBulkGetUsers' test.out

#- 233 PublicSendRegistrationCode
# body param: body
echo '{"emailAddress": "8Nrdv9Uf", "languageTag": "sk3FdmMM"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 233 'PublicSendRegistrationCode' test.out

#- 234 PublicVerifyRegistrationCode
# body param: body
echo '{"code": "GgaQRPDQ", "emailAddress": "sgXjWkwa"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyRegistrationCode \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 234 'PublicVerifyRegistrationCode' test.out

#- 235 PublicForgotPasswordV3
# body param: body
echo '{"emailAddress": "5XzwMugv", "languageTag": "zrZRvafP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForgotPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 235 'PublicForgotPasswordV3' test.out

#- 236 GetAdminInvitationV3
$CLI_EXE \
    --sn iam \
    --op GetAdminInvitationV3 \
    --invitationId 'W3hgTFWY' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 236 'GetAdminInvitationV3' test.out

#- 237 CreateUserFromInvitationV3
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "FFsRKt6U", "policyId": "DatkeU16", "policyVersionId": "rPH6ryzA"}, {"isAccepted": false, "localizedPolicyVersionId": "KVZMdUsM", "policyId": "amamTIam", "policyVersionId": "W8ntSAV9"}, {"isAccepted": false, "localizedPolicyVersionId": "4sPVSabI", "policyId": "GN6J8bPE", "policyVersionId": "ANxXTNSq"}], "authType": "EMAILPASSWD", "country": "QRUVE7Ll", "dateOfBirth": "k1B9bYti", "displayName": "WFq19ON9", "password": "xynDeXdZ", "reachMinimumAge": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV3 \
    --invitationId 'ckEpqCeW' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 237 'CreateUserFromInvitationV3' test.out

#- 238 UpdateUserV3
# body param: body
echo '{"avatarUrl": "nLMJJVAK", "country": "1mG6RaTw", "dateOfBirth": "SlfGywQ4", "displayName": "Bwxt0kXf", "languageTag": "B9MirhFZ", "userName": "cPkyHdK9"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op UpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 238 'UpdateUserV3' test.out

#- 239 PublicPartialUpdateUserV3
# body param: body
echo '{"avatarUrl": "WgJj2ET3", "country": "jd8Uhwzd", "dateOfBirth": "9hK3Gn6q", "displayName": "41jBDfrG", "languageTag": "gLiERY8p", "userName": "o8L19iLP"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPartialUpdateUserV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 239 'PublicPartialUpdateUserV3' test.out

#- 240 PublicSendVerificationCodeV3
# body param: body
echo '{"context": "hTEFEkTJ", "emailAddress": "mcjFU2sq", "languageTag": "KDfaErx5"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationCodeV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 240 'PublicSendVerificationCodeV3' test.out

#- 241 PublicUserVerificationV3
# body param: body
echo '{"code": "sz0XLezc", "contactType": "8lMhbMPt", "languageTag": "k5EXTwX2", "validateOnly": true}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUserVerificationV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 241 'PublicUserVerificationV3' test.out

#- 242 PublicUpgradeHeadlessAccountV3
# body param: body
echo '{"code": "N0lIxuMY", "country": "CR0fTzLb", "dateOfBirth": "C0PECBuQ", "displayName": "ZxyWVdCf", "emailAddress": "ztehclCT", "password": "Q4qUOkRT", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 242 'PublicUpgradeHeadlessAccountV3' test.out

#- 243 PublicVerifyHeadlessAccountV3
# body param: body
echo '{"emailAddress": "vZ8i3oLz", "password": "QNkD5AYT"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicVerifyHeadlessAccountV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 243 'PublicVerifyHeadlessAccountV3' test.out

#- 244 PublicUpdatePasswordV3
# body param: body
echo '{"languageTag": "DFXeqFcc", "newPassword": "8LAPTTV2", "oldPassword": "3NTInIxA"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdatePasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 244 'PublicUpdatePasswordV3' test.out

#- 245 PublicCreateJusticeUser
$CLI_EXE \
    --sn iam \
    --op PublicCreateJusticeUser \
    --namespace $AB_NAMESPACE \
    --targetNamespace 'xxIovnOe' \
    > test.out 2>&1
eval_tap $? 245 'PublicCreateJusticeUser' test.out

#- 246 PublicPlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'N2chjNkA' \
    --redirectUri 'gx5mzrAv' \
    --ticket 'sby6Qw1q' \
    > test.out 2>&1
eval_tap $? 246 'PublicPlatformLinkV3' test.out

#- 247 PublicPlatformUnlinkV3
# body param: body
echo '{"platformNamespace": "Eeip3UIy"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'PvTfRZ26' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 247 'PublicPlatformUnlinkV3' test.out

#- 248 PublicPlatformUnlinkAllV3
$CLI_EXE \
    --sn iam \
    --op PublicPlatformUnlinkAllV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'cUitdoeO' \
    > test.out 2>&1
eval_tap $? 248 'PublicPlatformUnlinkAllV3' test.out

#- 249 PublicForcePlatformLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicForcePlatformLinkV3 \
    --namespace $AB_NAMESPACE \
    --platformId 'QEUnKPsZ' \
    --ticket 'yooZavCy' \
    > test.out 2>&1
eval_tap $? 249 'PublicForcePlatformLinkV3' test.out

#- 250 PublicWebLinkPlatform
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatform \
    --namespace $AB_NAMESPACE \
    --platformId '8Hw38nlR' \
    --clientId 'HP8PRtE1' \
    --redirectUri 'Y5xexmNn' \
    > test.out 2>&1
eval_tap $? 250 'PublicWebLinkPlatform' test.out

#- 251 PublicWebLinkPlatformEstablish
$CLI_EXE \
    --sn iam \
    --op PublicWebLinkPlatformEstablish \
    --namespace $AB_NAMESPACE \
    --platformId 'lBnpbYf1' \
    --state 'oe8UlsK3' \
    > test.out 2>&1
eval_tap $? 251 'PublicWebLinkPlatformEstablish' test.out

#- 252 ResetPasswordV3
# body param: body
echo '{"code": "8r34Ufqd", "emailAddress": "BEIRM7dk", "newPassword": "o5dTYr1x"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op ResetPasswordV3 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 252 'ResetPasswordV3' test.out

#- 253 PublicGetUserByUserIdV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserByUserIdV3 \
    --namespace $AB_NAMESPACE \
    --userId 'vtreUtIc' \
    > test.out 2>&1
eval_tap $? 253 'PublicGetUserByUserIdV3' test.out

#- 254 PublicGetUserBanHistoryV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserBanHistoryV3 \
    --namespace $AB_NAMESPACE \
    --userId 'X1zrLr5x' \
    --activeOnly 'false' \
    --after 'T247oEtw' \
    --before 'LOcT7v6s' \
    --limit '14' \
    > test.out 2>&1
eval_tap $? 254 'PublicGetUserBanHistoryV3' test.out

#- 255 PublicListUserAllPlatformAccountsDistinctV3
$CLI_EXE \
    --sn iam \
    --op PublicListUserAllPlatformAccountsDistinctV3 \
    --namespace $AB_NAMESPACE \
    --userId 'lvsuTJHG' \
    > test.out 2>&1
eval_tap $? 255 'PublicListUserAllPlatformAccountsDistinctV3' test.out

#- 256 PublicGetUserInformationV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserInformationV3 \
    --namespace $AB_NAMESPACE \
    --userId 'c9XJqliI' \
    > test.out 2>&1
eval_tap $? 256 'PublicGetUserInformationV3' test.out

#- 257 PublicGetUserLoginHistoriesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserLoginHistoriesV3 \
    --namespace $AB_NAMESPACE \
    --userId 'pKNXXS3q' \
    --after '0.23926941867990148' \
    --before '0.44355842772995824' \
    --limit '48' \
    > test.out 2>&1
eval_tap $? 257 'PublicGetUserLoginHistoriesV3' test.out

#- 258 PublicGetUserPlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicGetUserPlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'ho8nWjg6' \
    --after 'fC4NmPaF' \
    --before 'HBmxnOMn' \
    --limit '10' \
    > test.out 2>&1
eval_tap $? 258 'PublicGetUserPlatformAccountsV3' test.out

#- 259 PublicListJusticePlatformAccountsV3
$CLI_EXE \
    --sn iam \
    --op PublicListJusticePlatformAccountsV3 \
    --namespace $AB_NAMESPACE \
    --userId 'fVDOjUaQ' \
    > test.out 2>&1
eval_tap $? 259 'PublicListJusticePlatformAccountsV3' test.out

#- 260 PublicLinkPlatformAccount
# body param: body
echo '{"platformId": "y2MK7JdI", "platformUserId": "Cpng0DE2"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicLinkPlatformAccount \
    --namespace $AB_NAMESPACE \
    --userId 'EhR3wzvV' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 260 'PublicLinkPlatformAccount' test.out

#- 261 PublicForceLinkPlatformWithProgression
# body param: body
echo '{"chosenNamespaces": ["jZARNaK2", "LSQs6eJp", "lkcXr8lG"], "requestId": "1C3Qn0NB"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicForceLinkPlatformWithProgression \
    --namespace $AB_NAMESPACE \
    --userId '5Js4Q0Kf' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 261 'PublicForceLinkPlatformWithProgression' test.out

#- 262 PublicGetPublisherUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetPublisherUserV3 \
    --namespace $AB_NAMESPACE \
    --userId 'X4NlfNh4' \
    > test.out 2>&1
eval_tap $? 262 'PublicGetPublisherUserV3' test.out

#- 263 PublicValidateUserByUserIDAndPasswordV3
$CLI_EXE \
    --sn iam \
    --op PublicValidateUserByUserIDAndPasswordV3 \
    --namespace $AB_NAMESPACE \
    --userId 'AIGmNmzO' \
    --password 'CDCbqoHk' \
    > test.out 2>&1
eval_tap $? 263 'PublicValidateUserByUserIDAndPasswordV3' test.out

#- 264 PublicGetRolesV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRolesV3 \
    --after 'Li6VkNcl' \
    --before 'uGWfotx5' \
    --isWildcard 'true' \
    --limit '12' \
    > test.out 2>&1
eval_tap $? 264 'PublicGetRolesV3' test.out

#- 265 PublicGetRoleV3
$CLI_EXE \
    --sn iam \
    --op PublicGetRoleV3 \
    --roleId 'HdL2cEKl' \
    > test.out 2>&1
eval_tap $? 265 'PublicGetRoleV3' test.out

#- 266 PublicGetMyUserV3
$CLI_EXE \
    --sn iam \
    --op PublicGetMyUserV3 \
    > test.out 2>&1
eval_tap $? 266 'PublicGetMyUserV3' test.out

#- 267 PublicSendVerificationLinkV3
# body param: body
echo '{"languageTag": "xsY4Skb6"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicSendVerificationLinkV3 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 267 'PublicSendVerificationLinkV3' test.out

#- 268 PublicVerifyUserByLinkV3
$CLI_EXE \
    --sn iam \
    --op PublicVerifyUserByLinkV3 \
    --code 'xFrc3w6Z' \
    > test.out 2>&1
eval_tap $? 268 'PublicVerifyUserByLinkV3' test.out

#- 269 PlatformAuthenticateSAMLV3Handler
$CLI_EXE \
    --sn iam \
    --op PlatformAuthenticateSAMLV3Handler \
    --platformId '8FNTJJ4E' \
    --code 'Q4ylRhY0' \
    --error 'fPxQOLpN' \
    --state 'E3rDQFmH' \
    > test.out 2>&1
eval_tap $? 269 'PlatformAuthenticateSAMLV3Handler' test.out

#- 270 LoginSSOClient
$CLI_EXE \
    --sn iam \
    --op LoginSSOClient \
    --platformId 'j1Qua544' \
    --payload '85tlwHeq' \
    > test.out 2>&1
eval_tap $? 270 'LoginSSOClient' test.out

#- 271 LogoutSSOClient
$CLI_EXE \
    --sn iam \
    --op LogoutSSOClient \
    --platformId 'eUCaxrEN' \
    > test.out 2>&1
eval_tap $? 271 'LogoutSSOClient' test.out

#- 272 RequestGameTokenResponseV3
$CLI_EXE \
    --sn iam \
    --op RequestGameTokenResponseV3 \
    --code '1EWWzUVm' \
    > test.out 2>&1
eval_tap $? 272 'RequestGameTokenResponseV3' test.out

#- 273 AdminGetDevicesByUserV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDevicesByUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'pzVH9L2X' \
    > test.out 2>&1
eval_tap $? 273 'AdminGetDevicesByUserV4' test.out

#- 274 AdminGetBannedDevicesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetBannedDevicesV4 \
    --namespace $AB_NAMESPACE \
    --deviceType 'eWoauwrJ' \
    --endDate 'Ryk2jNg9' \
    --limit '4' \
    --offset '55' \
    --startDate 'eFKJtlmL' \
    > test.out 2>&1
eval_tap $? 274 'AdminGetBannedDevicesV4' test.out

#- 275 AdminGetUserDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUserDeviceBansV4 \
    --namespace $AB_NAMESPACE \
    --userId 'TVVq15PF' \
    > test.out 2>&1
eval_tap $? 275 'AdminGetUserDeviceBansV4' test.out

#- 276 AdminBanDeviceV4
# body param: body
echo '{"comment": "9B61PLbc", "deviceId": "9GbpzMyz", "deviceType": "ix5tD64l", "enabled": true, "endDate": "lfk3Kfqm", "ext": {"tHVLNcyF": {}, "yVIvJ22D": {}, "RDZh5w4J": {}}, "reason": "i8oYAiGz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBanDeviceV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 276 'AdminBanDeviceV4' test.out

#- 277 AdminGetDeviceBanV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBanV4 \
    --banId 'JLAE8iGz' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 277 'AdminGetDeviceBanV4' test.out

#- 278 AdminUpdateDeviceBanV4
# body param: body
echo '{"enabled": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateDeviceBanV4 \
    --banId 't2PNv3Oq' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 278 'AdminUpdateDeviceBanV4' test.out

#- 279 AdminGenerateReportV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateReportV4 \
    --namespace $AB_NAMESPACE \
    --endDate 'UibPG2pw' \
    --startDate '5QATfyP0' \
    --deviceType 'FmdCt2lo' \
    > test.out 2>&1
eval_tap $? 279 'AdminGenerateReportV4' test.out

#- 280 AdminGetDeviceTypesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceTypesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 280 'AdminGetDeviceTypesV4' test.out

#- 281 AdminGetDeviceBansV4
$CLI_EXE \
    --sn iam \
    --op AdminGetDeviceBansV4 \
    --deviceId 'jjSZn61M' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 281 'AdminGetDeviceBansV4' test.out

#- 282 AdminDecryptDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminDecryptDeviceV4 \
    --deviceId 'eaRE7mlh' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 282 'AdminDecryptDeviceV4' test.out

#- 283 AdminUnbanDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminUnbanDeviceV4 \
    --deviceId 'S0u1cCKp' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 283 'AdminUnbanDeviceV4' test.out

#- 284 AdminGetUsersByDeviceV4
$CLI_EXE \
    --sn iam \
    --op AdminGetUsersByDeviceV4 \
    --deviceId 'sMS9S7sT' \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 284 'AdminGetUsersByDeviceV4' test.out

#- 285 AdminCreateTestUsersV4
# body param: body
echo '{"count": 78}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateTestUsersV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 285 'AdminCreateTestUsersV4' test.out

#- 286 AdminBulkCheckValidUserIDV4
# body param: body
echo '{"userIds": ["RFOxaF4V", "S1E337pw", "E2GppPUo"]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminBulkCheckValidUserIDV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 286 'AdminBulkCheckValidUserIDV4' test.out

#- 287 AdminUpdateUserV4
# body param: body
echo '{"avatarUrl": "VEMGvsYR", "country": "goBIlnzz", "dateOfBirth": "pXhYdfwk", "displayName": "tFG1Ag0t", "languageTag": "tdY0ZjwI", "userName": "lXmr5QUx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --userId 'Iz1Sr0YA' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 287 'AdminUpdateUserV4' test.out

#- 288 AdminUpdateUserEmailAddressV4
# body param: body
echo '{"code": "QhoaUXHT", "emailAddress": "J9pii31Z"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --userId '9kuQhEdL' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 288 'AdminUpdateUserEmailAddressV4' test.out

#- 289 AdminDisableUserMFAV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableUserMFAV4 \
    --namespace $AB_NAMESPACE \
    --userId '0xLIz66T' \
    > test.out 2>&1
eval_tap $? 289 'AdminDisableUserMFAV4' test.out

#- 290 AdminListUserRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminListUserRolesV4 \
    --namespace $AB_NAMESPACE \
    --userId 'W1Grj0WY' \
    > test.out 2>&1
eval_tap $? 290 'AdminListUserRolesV4' test.out

#- 291 AdminUpdateUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["0GLIpwJQ", "156jhhRs", "bhTFaVjZ"], "roleId": "F74arb4Y"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'SnznK5Qr' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 291 'AdminUpdateUserRoleV4' test.out

#- 292 AdminAddUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["Ii6ksCoy", "xSkgvPDl", "gxIEazSF"], "roleId": "Aj7Sqs1A"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'LCHgoLMs' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 292 'AdminAddUserRoleV4' test.out

#- 293 AdminRemoveUserRoleV4
# body param: body
echo '{"assignedNamespaces": ["wK9bT3cD", "0FfWG1aj", "K4GBso8k"], "roleId": "L67kColj"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRemoveUserRoleV4 \
    --namespace $AB_NAMESPACE \
    --userId 'R7cEEEZb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 293 'AdminRemoveUserRoleV4' test.out

#- 294 AdminGetRolesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRolesV4 \
    --adminRole 'true' \
    --isWildcard 'false' \
    --limit '40' \
    --offset '1' \
    > test.out 2>&1
eval_tap $? 294 'AdminGetRolesV4' test.out

#- 295 AdminCreateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "roleName": "4KVgZXiH"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminCreateRoleV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 295 'AdminCreateRoleV4' test.out

#- 296 AdminGetRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminGetRoleV4 \
    --roleId 'XRyOGjQt' \
    > test.out 2>&1
eval_tap $? 296 'AdminGetRoleV4' test.out

#- 297 AdminDeleteRoleV4
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRoleV4 \
    --roleId 'NSWf84eH' \
    > test.out 2>&1
eval_tap $? 297 'AdminDeleteRoleV4' test.out

#- 298 AdminUpdateRoleV4
# body param: body
echo '{"adminRole": true, "deletable": false, "isWildcard": true, "roleName": "7tIG2oCL"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRoleV4 \
    --roleId 'iCtluabX' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 298 'AdminUpdateRoleV4' test.out

#- 299 AdminUpdateRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 23, "resource": "PbggwysE", "schedAction": 58, "schedCron": "bSX4Pxxl", "schedRange": ["SWGMO5K3", "53oKpBoO", "CC9fuzXa"]}, {"action": 71, "resource": "RfppzQJW", "schedAction": 74, "schedCron": "jOBTlW3o", "schedRange": ["BoF8LnjY", "OKcGCrgG", "tVplfnq0"]}, {"action": 61, "resource": "AGIRd4FP", "schedAction": 87, "schedCron": "TdFbT3mC", "schedRange": ["0u2tVOy0", "azFlXWja", "VO6JhQC1"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateRolePermissionsV4 \
    --roleId 'Zay0yP7a' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 299 'AdminUpdateRolePermissionsV4' test.out

#- 300 AdminAddRolePermissionsV4
# body param: body
echo '{"permissions": [{"action": 91, "resource": "44cAxV8q", "schedAction": 88, "schedCron": "1AoZd5sC", "schedRange": ["rM9fLshO", "z2oWoRwD", "UtbzAN45"]}, {"action": 66, "resource": "uNnlkIMw", "schedAction": 87, "schedCron": "bn8Q4n1M", "schedRange": ["lShfMvCt", "aMzeYd62", "YMzDPFcM"]}, {"action": 64, "resource": "FXsVpc2F", "schedAction": 60, "schedCron": "5DxIJHEN", "schedRange": ["xKu0zwDV", "fTm0fhOG", "dw8PPfeJ"]}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAddRolePermissionsV4 \
    --roleId 'gMMt54WZ' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 300 'AdminAddRolePermissionsV4' test.out

#- 301 AdminDeleteRolePermissionsV4
# body param: body
echo '["c5731QIH", "Wxe5ycId", "MzDZAYjr"]' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminDeleteRolePermissionsV4 \
    --roleId 'eBF5U08D' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 301 'AdminDeleteRolePermissionsV4' test.out

#- 302 AdminListAssignedUsersV4
$CLI_EXE \
    --sn iam \
    --op AdminListAssignedUsersV4 \
    --roleId '7pHJ6NiH' \
    --after 'BqZReMoW' \
    --before 'BzKasGv8' \
    --limit '18' \
    > test.out 2>&1
eval_tap $? 302 'AdminListAssignedUsersV4' test.out

#- 303 AdminAssignUserToRoleV4
# body param: body
echo '{"assignedNamespaces": ["aY8kB0NA", "Hs4BsuE1", "j4o9EN8S"], "namespace": "zyCqXr09", "userId": "SYYimd2c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminAssignUserToRoleV4 \
    --roleId 'mReu6Hqb' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 303 'AdminAssignUserToRoleV4' test.out

#- 304 AdminRevokeUserFromRoleV4
# body param: body
echo '{"namespace": "apWjUQxI", "userId": "u3TtwkDE"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminRevokeUserFromRoleV4 \
    --roleId 'nGwkdn17' \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 304 'AdminRevokeUserFromRoleV4' test.out

#- 305 AdminUpdateMyUserV4
# body param: body
echo '{"avatarUrl": "7WVaivDz", "country": "JSQKb6Q3", "dateOfBirth": "c6OJl4Ub", "displayName": "eLdLjSmL", "languageTag": "uCqdY3MZ", "userName": "yxfTZdoz"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminUpdateMyUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 305 'AdminUpdateMyUserV4' test.out

#- 306 AdminDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyAuthenticatorV4 \
    > test.out 2>&1
eval_tap $? 306 'AdminDisableMyAuthenticatorV4' test.out

#- 307 AdminEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyAuthenticatorV4 \
    --code 'XH9yMLZt' \
    > test.out 2>&1
eval_tap $? 307 'AdminEnableMyAuthenticatorV4' test.out

#- 308 AdminGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyAuthenticatorKeyV4 \
    > test.out 2>&1
eval_tap $? 308 'AdminGenerateMyAuthenticatorKeyV4' test.out

#- 309 AdminGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 309 'AdminGetMyBackupCodesV4' test.out

#- 310 AdminGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminGenerateMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 310 'AdminGenerateMyBackupCodesV4' test.out

#- 311 AdminDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 311 'AdminDisableMyBackupCodesV4' test.out

#- 312 AdminDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminDownloadMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 312 'AdminDownloadMyBackupCodesV4' test.out

#- 313 AdminEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyBackupCodesV4 \
    > test.out 2>&1
eval_tap $? 313 'AdminEnableMyBackupCodesV4' test.out

#- 314 AdminSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op AdminSendMyMFAEmailCodeV4 \
    > test.out 2>&1
eval_tap $? 314 'AdminSendMyMFAEmailCodeV4' test.out

#- 315 AdminDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminDisableMyEmailV4 \
    > test.out 2>&1
eval_tap $? 315 'AdminDisableMyEmailV4' test.out

#- 316 AdminEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op AdminEnableMyEmailV4 \
    --code 'QSa5hcSc' \
    > test.out 2>&1
eval_tap $? 316 'AdminEnableMyEmailV4' test.out

#- 317 AdminGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op AdminGetMyEnabledFactorsV4 \
    > test.out 2>&1
eval_tap $? 317 'AdminGetMyEnabledFactorsV4' test.out

#- 318 AdminMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op AdminMakeFactorMyDefaultV4 \
    --factor 'zqSALfVs' \
    > test.out 2>&1
eval_tap $? 318 'AdminMakeFactorMyDefaultV4' test.out

#- 319 AdminInviteUserV4
# body param: body
echo '{"assignedNamespaces": ["7kG9Rltz", "DdUrrzN5", "emai5vjw"], "emailAddresses": ["RaTwse8e", "BD8nXQiL", "BlPh6et3"], "isAdmin": true, "roleId": "8b1sf87u"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op AdminInviteUserV4 \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 319 'AdminInviteUserV4' test.out

#- 320 PublicCreateTestUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": false, "localizedPolicyVersionId": "dwb9jbZv", "policyId": "jUydpOmO", "policyVersionId": "0QFpgyi3"}, {"isAccepted": false, "localizedPolicyVersionId": "gCbCgvkh", "policyId": "JUhTZkd3", "policyVersionId": "64WDYurh"}, {"isAccepted": true, "localizedPolicyVersionId": "J39mo6Yx", "policyId": "ZTwYfeSN", "policyVersionId": "TPifp0Si"}], "authType": "EMAILPASSWD", "country": "s0BAZP7l", "dateOfBirth": "n3N5L3OB", "displayName": "p04dGvHy", "emailAddress": "XqiOsHD1", "password": "9yZ3zex6", "passwordMD5Sum": "SnYgqkUv", "username": "FFWyPb41", "verified": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateTestUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 320 'PublicCreateTestUserV4' test.out

#- 321 PublicCreateUserV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "bWCM8cb9", "policyId": "FcyaqK8m", "policyVersionId": "jBkSotxE"}, {"isAccepted": false, "localizedPolicyVersionId": "FAhROVyy", "policyId": "0Ci4uyxd", "policyVersionId": "KaotWauh"}, {"isAccepted": true, "localizedPolicyVersionId": "azmAPscn", "policyId": "c5Kz0s3x", "policyVersionId": "lBvbNvji"}], "authType": "EMAILPASSWD", "code": "VVAYZTbh", "country": "J5k9466q", "dateOfBirth": "O4xKZYgG", "displayName": "ZntWZJPM", "emailAddress": "rQU0rTzX", "password": "9xjeFD0f", "passwordMD5Sum": "kRTNOpst", "reachMinimumAge": false, "username": "gBtLmH2c"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicCreateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 321 'PublicCreateUserV4' test.out

#- 322 CreateUserFromInvitationV4
# body param: body
echo '{"acceptedPolicies": [{"isAccepted": true, "localizedPolicyVersionId": "Q7vEo6PW", "policyId": "W2TYsIp6", "policyVersionId": "Zxion42M"}, {"isAccepted": false, "localizedPolicyVersionId": "1yeCBkO4", "policyId": "SlrL2vIl", "policyVersionId": "zHpErFAl"}, {"isAccepted": true, "localizedPolicyVersionId": "qwbJG0gE", "policyId": "722KkLCD", "policyVersionId": "ksfb20JM"}], "authType": "EMAILPASSWD", "country": "MvTrNosE", "dateOfBirth": "bPHnrqnG", "displayName": "e46wQD8Q", "password": "wsmKcX68", "reachMinimumAge": false, "username": "C89yA8Pk"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op CreateUserFromInvitationV4 \
    --invitationId 'FX4LZexI' \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 322 'CreateUserFromInvitationV4' test.out

#- 323 PublicUpdateUserV4
# body param: body
echo '{"avatarUrl": "K2QCr7xu", "country": "NkKAyxUw", "dateOfBirth": "vIYRpMCr", "displayName": "XJ97L4Dq", "languageTag": "Awvi3ure", "userName": "JAviugue"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 323 'PublicUpdateUserV4' test.out

#- 324 PublicUpdateUserEmailAddressV4
# body param: body
echo '{"code": "Wvjxtb8s", "emailAddress": "8i5olAFo"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpdateUserEmailAddressV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 324 'PublicUpdateUserEmailAddressV4' test.out

#- 325 PublicUpgradeHeadlessAccountWithVerificationCodeV4
# body param: body
echo '{"code": "QTNYj6MS", "country": "2FqqAbb0", "dateOfBirth": "FlgMUkMr", "displayName": "033nRDfO", "emailAddress": "dJxpDbVE", "password": "xzYYxeJf", "reachMinimumAge": false, "username": "6WD7b9Gn", "validateOnly": false}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountWithVerificationCodeV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 325 'PublicUpgradeHeadlessAccountWithVerificationCodeV4' test.out

#- 326 PublicUpgradeHeadlessAccountV4
# body param: body
echo '{"emailAddress": "TtUVk8aj", "password": "gYa6GJPC", "username": "VDuAxqvx"}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn iam \
    --op PublicUpgradeHeadlessAccountV4 \
    --namespace $AB_NAMESPACE \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 326 'PublicUpgradeHeadlessAccountV4' test.out

#- 327 PublicDisableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 327 'PublicDisableMyAuthenticatorV4' test.out

#- 328 PublicEnableMyAuthenticatorV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyAuthenticatorV4 \
    --namespace $AB_NAMESPACE \
    --code 'MNVSXPtx' \
    > test.out 2>&1
eval_tap $? 328 'PublicEnableMyAuthenticatorV4' test.out

#- 329 PublicGenerateMyAuthenticatorKeyV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyAuthenticatorKeyV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 329 'PublicGenerateMyAuthenticatorKeyV4' test.out

#- 330 PublicGetMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 330 'PublicGetMyBackupCodesV4' test.out

#- 331 PublicGenerateMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicGenerateMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 331 'PublicGenerateMyBackupCodesV4' test.out

#- 332 PublicDisableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 332 'PublicDisableMyBackupCodesV4' test.out

#- 333 PublicDownloadMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicDownloadMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 333 'PublicDownloadMyBackupCodesV4' test.out

#- 334 PublicEnableMyBackupCodesV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyBackupCodesV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 334 'PublicEnableMyBackupCodesV4' test.out

#- 335 PublicRemoveTrustedDeviceV4
$CLI_EXE \
    --sn iam \
    --op PublicRemoveTrustedDeviceV4 \
    --namespace $AB_NAMESPACE \
    --device_token 'K4ZiW5HL' \
    > test.out 2>&1
eval_tap $? 335 'PublicRemoveTrustedDeviceV4' test.out

#- 336 PublicSendMyMFAEmailCodeV4
$CLI_EXE \
    --sn iam \
    --op PublicSendMyMFAEmailCodeV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 336 'PublicSendMyMFAEmailCodeV4' test.out

#- 337 PublicDisableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicDisableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 337 'PublicDisableMyEmailV4' test.out

#- 338 PublicEnableMyEmailV4
$CLI_EXE \
    --sn iam \
    --op PublicEnableMyEmailV4 \
    --namespace $AB_NAMESPACE \
    --code 'uSi9nGyk' \
    > test.out 2>&1
eval_tap $? 338 'PublicEnableMyEmailV4' test.out

#- 339 PublicGetMyEnabledFactorsV4
$CLI_EXE \
    --sn iam \
    --op PublicGetMyEnabledFactorsV4 \
    --namespace $AB_NAMESPACE \
    > test.out 2>&1
eval_tap $? 339 'PublicGetMyEnabledFactorsV4' test.out

#- 340 PublicMakeFactorMyDefaultV4
$CLI_EXE \
    --sn iam \
    --op PublicMakeFactorMyDefaultV4 \
    --namespace $AB_NAMESPACE \
    --factor 'y57IEfeA' \
    > test.out 2>&1
eval_tap $? 340 'PublicMakeFactorMyDefaultV4' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE