#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..8"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 GetServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op GetServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'sxBn4J2N' \
    --logType '0nsFfY4v' \
    --offset '43' \
    --origin '9oe7rzlc' \
    > test.out 2>&1
eval_tap $? 2 'GetServerLogs' test.out

#- 3 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment 'Wp1Bt3pP' \
    --endDate 'PjzgSLuo' \
    --gameMode 'WcYSPD1s' \
    --limit '0' \
    --next 'Icacq2gi' \
    --partyId 'PSCXHEOn' \
    --podName 'IP5YbbCX' \
    --previous 'bZl4PUN0' \
    --provider 'nrl0ngGI' \
    --region 'YAwQnasz' \
    --sessionId 'uFRMIF2M' \
    --startDate 'v0LB39GN' \
    --status '0iFUhkVD' \
    --userId 'iCr9KyzN' \
    > test.out 2>&1
eval_tap $? 3 'ListTerminatedServers' test.out

#- 4 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'NcR52bij' \
    > test.out 2>&1
eval_tap $? 4 'DownloadServerLogs' test.out

#- 5 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'cOcFbHye' \
    > test.out 2>&1
eval_tap $? 5 'CheckServerLogs' test.out

#- 6 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "ljjG27Ai", "namespace": "oOCQClL3", "pod_name": "SHh8U6nx"}, {"alloc_id": "zg6IKwkW", "namespace": "5nfg4m4V", "pod_name": "F6wU6VAL"}, {"alloc_id": "36qfPekt", "namespace": "3nVcsGaA", "pod_name": "NLmnNXwY"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 6 'BatchDownloadServerLogs' test.out

#- 7 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment 'xXE8HZkO' \
    --endDate '03Ow9jgC' \
    --gameMode 'McYdcNo1' \
    --limit '38' \
    --namespace_ 'u8Xuc2ST' \
    --next 'adYBvCXy' \
    --partyId 'j2YSq2uR' \
    --podName 'ZeGTNWOC' \
    --previous 'PFPg6rDC' \
    --provider 'IPeFihPV' \
    --region 'rWwgiVRX' \
    --sessionId 'CVN0ATf8' \
    --startDate 'dn0rxhOS' \
    --status 'X1CbS4eV' \
    --userId 'rVKuYpRA' \
    > test.out 2>&1
eval_tap $? 7 'ListAllTerminatedServers' test.out

#- 8 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 8 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE