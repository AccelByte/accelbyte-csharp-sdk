#!/usr/bin/env bash

# Copyright (c) 2021 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

# This code is generated by tool. DO NOT EDIT.

# Meta:
# - random seed: 512
# - template file: cli-test.j2

# Instructions:
# - Run the Justice SDK Mock Server first before running this script.

export AB_BASE_URL="http://127.0.0.1:8080"
export AB_CLIENT_ID="admin"
export AB_CLIENT_SECRET="admin"
export AB_NAMESPACE="test"
export AB_APP_NAME="UnitTest"

EXIT_CODE=0

eval_tap() {
  if [ $1 -eq 0 ]; then
    echo "ok $2 - $3"
  else
    EXIT_CODE=1
    echo "not ok $2 - $3"
    sed 's/^/# /g' $4
  fi
  rm -f $4
}

CLI_EXE="AccelByte.Sdk.Sample.Cli"
CLI_TOKEN_FILE="$(dirname "$(which $CLI_EXE)")/token.json"
TEMP_JSON_INPUT="input_json.json"
TEMP_FILE_UPLOAD="file_upload.bin"

echo "TAP version 13"
echo "1..7"

#- 1 Login
$CLI_EXE --op login --lt user --user user --pass user > test.out 2>&1
eval_tap $? 1 'Login' test.out

if [ $EXIT_CODE -ne 0 ]; then
  echo "Bail out! Login failed."
  exit $EXIT_CODE
fi

# echo "foo" > "$CLI_TOKEN_FILE"

#- 2 ListTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListTerminatedServers \
    --namespace $AB_NAMESPACE \
    --deployment 'NZAC1bFh' \
    --endDate 'gn3gyE2s' \
    --gameMode '4VeJFz6g' \
    --limit '48' \
    --next '2mQwDR9l' \
    --partyId 'MW2q9pba' \
    --podName 'K0jHKplC' \
    --previous 'EMLnF1cz' \
    --provider '7O9a4tzA' \
    --region 'VRzg8NS9' \
    --sessionId 'lEbm8P9F' \
    --startDate 'S3nrcFTU' \
    --status 'Z8odStm2' \
    --userId 'DQiErbsk' \
    > test.out 2>&1
eval_tap $? 2 'ListTerminatedServers' test.out

#- 3 DownloadServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op DownloadServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'NluAE7XS' \
    > test.out 2>&1
eval_tap $? 3 'DownloadServerLogs' test.out

#- 4 CheckServerLogs
$CLI_EXE \
    --sn dslogmanager \
    --op CheckServerLogs \
    --namespace $AB_NAMESPACE \
    --podName 'YEU914ut' \
    > test.out 2>&1
eval_tap $? 4 'CheckServerLogs' test.out

#- 5 BatchDownloadServerLogs
# body param: body
echo '{"Downloads": [{"alloc_id": "OgTsevJq", "namespace": "TdWQ6XRP", "pod_name": "kJjEbPeI"}, {"alloc_id": "uCrq4FMf", "namespace": "wXxsg7XH", "pod_name": "DsXrdBbo"}, {"alloc_id": "4JFpTXs7", "namespace": "2VOksrEn", "pod_name": "PnbmDMQW"}]}' > $TEMP_JSON_INPUT
$CLI_EXE \
    --sn dslogmanager \
    --op BatchDownloadServerLogs \
    --reqfile $TEMP_JSON_INPUT \
    > test.out 2>&1
eval_tap $? 5 'BatchDownloadServerLogs' test.out

#- 6 ListAllTerminatedServers
$CLI_EXE \
    --sn dslogmanager \
    --op ListAllTerminatedServers \
    --deployment '43K0kNl3' \
    --endDate 'boPK3zyw' \
    --gameMode 'Q2X1Z8gA' \
    --limit '99' \
    --namespace_ '7OKQnxs4' \
    --next 'xkoybhwT' \
    --partyId 'yf9ZESXS' \
    --podName 'tHospFII' \
    --previous 'UMN9FR6B' \
    --provider 'ktgFT43y' \
    --region '2jkAkvyr' \
    --sessionId 'V9E3V1Uz' \
    --startDate 's9bewUT3' \
    --status 'dKIX8DoJ' \
    --userId '4rgOWKFJ' \
    > test.out 2>&1
eval_tap $? 6 'ListAllTerminatedServers' test.out

#- 7 PublicGetMessages
$CLI_EXE \
    --sn dslogmanager \
    --op PublicGetMessages \
    > test.out 2>&1
eval_tap $? 7 'PublicGetMessages' test.out


# remove artifacts
rm -f "$CLI_TOKEN_FILE"
rm -f "$TEMP_JSON_INPUT"
rm -f "$TEMP_FILE_UPLOAD"

exit $EXIT_CODE