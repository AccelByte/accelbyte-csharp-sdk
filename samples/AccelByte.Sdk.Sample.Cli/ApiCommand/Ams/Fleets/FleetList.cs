// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.


using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Ams.Wrapper;
using AccelByte.Sdk.Api.Ams.Model;
using AccelByte.Sdk.Api.Ams.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Ams
{
    [SdkConsoleCommand("ams", "fleetlist")]
    public class FleetListCommand : ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName { get { return "Ams"; } }

        public string OperationName { get { return "FleetList"; } }

        [SdkCommandArgument("namespace")]
        public string Namespace { get; set; } = String.Empty;

        [SdkCommandArgument("active")]
        public bool? Active { get; set; }

        [SdkCommandArgument("count")]
        public long? Count { get; set; }

        [SdkCommandArgument("desc")]
        public string? Desc { get; set; }

        [SdkCommandArgument("name")]
        public string? Name { get; set; }

        [SdkCommandArgument("offset")]
        public long? Offset { get; set; }

        [SdkCommandArgument("region")]
        public string? Region { get; set; }

        [SdkCommandArgument("sortBy")]
        public string? SortBy { get; set; }

        public FleetListCommand(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Ams.Wrapper.Fleets wrapper = new AccelByte.Sdk.Api.Ams.Wrapper.Fleets(_SDK);

            var opBuilder = AccelByte.Sdk.Api.Ams.Operation.FleetList.Builder;

            if (Active != null)
                opBuilder.SetActive((bool)Active);
            if (Count != null)
                opBuilder.SetCount((long)Count);
            if (Desc != null)
                opBuilder.SetDesc(FleetListDesc.NewValue(Desc));
            if (Name != null)
                opBuilder.SetName((string)Name);
            if (Offset != null)
                opBuilder.SetOffset((long)Offset);
            if (Region != null)
                opBuilder.SetRegion((string)Region);
            if (SortBy != null)
                opBuilder.SetSortBy(FleetListSortBy.NewValue(SortBy));




            FleetList operation = opBuilder.Build(
                Namespace
            );


            AccelByte.Sdk.Api.Ams.Model.ApiFleetListResponse? response = wrapper.FleetList(operation);
            if (response == null)
                return "No response from server.";

            return SdkHelper.SerializeToJson(response);
        }
    }
}