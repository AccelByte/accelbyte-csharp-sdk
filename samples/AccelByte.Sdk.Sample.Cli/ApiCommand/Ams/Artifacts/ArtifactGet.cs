// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.


using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Ams.Wrapper;
using AccelByte.Sdk.Api.Ams.Model;
using AccelByte.Sdk.Api.Ams.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Ams
{
    [SdkConsoleCommand("ams", "artifactget")]
    public class ArtifactGetCommand : ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName { get { return "Ams"; } }

        public string OperationName { get { return "ArtifactGet"; } }

        [SdkCommandArgument("namespace")]
        public string Namespace { get; set; } = String.Empty;

        [SdkCommandArgument("artifactType")]
        public string? ArtifactType { get; set; }

        [SdkCommandArgument("endDate")]
        public string? EndDate { get; set; }

        [SdkCommandArgument("fleetID")]
        public string? FleetID { get; set; }

        [SdkCommandArgument("imageID")]
        public string? ImageID { get; set; }

        [SdkCommandArgument("maxSize")]
        public long? MaxSize { get; set; }

        [SdkCommandArgument("minSize")]
        public long? MinSize { get; set; }

        [SdkCommandArgument("region")]
        public string? Region { get; set; }

        [SdkCommandArgument("startDate")]
        public string? StartDate { get; set; }

        [SdkCommandArgument("status")]
        public string? Status { get; set; }

        public ArtifactGetCommand(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Ams.Wrapper.Artifacts wrapper = new AccelByte.Sdk.Api.Ams.Wrapper.Artifacts(_SDK);

            var opBuilder = AccelByte.Sdk.Api.Ams.Operation.ArtifactGet.Builder;

            if (ArtifactType != null)
                opBuilder.SetArtifactType((string)ArtifactType);
            if (EndDate != null)
                opBuilder.SetEndDate((string)EndDate);
            if (FleetID != null)
                opBuilder.SetFleetID((string)FleetID);
            if (ImageID != null)
                opBuilder.SetImageID((string)ImageID);
            if (MaxSize != null)
                opBuilder.SetMaxSize((long)MaxSize);
            if (MinSize != null)
                opBuilder.SetMinSize((long)MinSize);
            if (Region != null)
                opBuilder.SetRegion((string)Region);
            if (StartDate != null)
                opBuilder.SetStartDate((string)StartDate);
            if (Status != null)
                opBuilder.SetStatus((string)Status);




            ArtifactGet operation = opBuilder.Build(
                Namespace
            );


            List<AccelByte.Sdk.Api.Ams.Model.ApiArtifactResponse>? response = wrapper.ArtifactGet(operation);
            if (response == null)
                return "No response from server.";

            return SdkHelper.SerializeToJson(response);
        }
    }
}