// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.


using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Challenge.Wrapper;
using AccelByte.Sdk.Api.Challenge.Model;
using AccelByte.Sdk.Api.Challenge.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Challenge
{
    [SdkConsoleCommand("challenge", "adminlistschedules")]
    public class AdminListSchedulesCommand : ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName { get { return "Challenge"; } }

        public string OperationName { get { return "AdminListSchedules"; } }

        [SdkCommandArgument("challengeCode")]
        public string ChallengeCode { get; set; } = String.Empty;

        [SdkCommandArgument("namespace")]
        public string Namespace { get; set; } = String.Empty;

        [SdkCommandArgument("dateTime")]
        public DateTime? DateTime { get; set; }

        [SdkCommandArgument("limit")]
        public long? Limit { get; set; }

        [SdkCommandArgument("offset")]
        public long? Offset { get; set; }

        [SdkCommandArgument("userId")]
        public string? UserId { get; set; }

        public AdminListSchedulesCommand(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Challenge.Wrapper.Schedules wrapper = new AccelByte.Sdk.Api.Challenge.Wrapper.Schedules(_SDK);

            var opBuilder = AccelByte.Sdk.Api.Challenge.Operation.AdminListSchedules.Builder;

            if (DateTime != null)
                opBuilder.SetDateTime((DateTime)DateTime);
            if (Limit != null)
                opBuilder.SetLimit((long)Limit);
            if (Offset != null)
                opBuilder.SetOffset((long)Offset);
            if (UserId != null)
                opBuilder.SetUserId((string)UserId);




            AdminListSchedules operation = opBuilder.Build(
                ChallengeCode,
                Namespace
            );


            AccelByte.Sdk.Api.Challenge.Model.ModelListSchedulesResponse? response = wrapper.AdminListSchedules(operation);
            if (response == null)
                return "No response from server.";

            return SdkHelper.SerializeToJson(response);
        }
    }
}