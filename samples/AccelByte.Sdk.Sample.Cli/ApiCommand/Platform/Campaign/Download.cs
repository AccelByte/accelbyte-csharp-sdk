// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.


using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Platform.Wrapper;
using AccelByte.Sdk.Api.Platform.Model;
using AccelByte.Sdk.Api.Platform.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Platform
{
    [SdkConsoleCommand("platform", "download")]
    public class DownloadCommand : ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName { get { return "Platform"; } }

        public string OperationName { get { return "Download"; } }

        [SdkCommandArgument("campaignId")]
        public string CampaignId { get; set; } = String.Empty;

        [SdkCommandArgument("namespace")]
        public string Namespace { get; set; } = String.Empty;

        [SdkCommandArgument("batchName")]
        public string? BatchName { get; set; }

        [SdkCommandArgument("batchNo")]
        public List<int>? BatchNo { get; set; }

        [SdkCommandArgument("withBatchName")]
        public bool? WithBatchName { get; set; }

        public DownloadCommand(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Platform.Wrapper.Campaign wrapper = new AccelByte.Sdk.Api.Platform.Wrapper.Campaign(_SDK);

            var opBuilder = AccelByte.Sdk.Api.Platform.Operation.Download.Builder;

            if (BatchName != null)
                opBuilder.SetBatchName((string)BatchName);
            if (BatchNo != null)
                opBuilder.SetBatchNo((List<int>)BatchNo);
            if (WithBatchName != null)
                opBuilder.SetWithBatchName((bool)WithBatchName);




            Download operation = opBuilder.Build(
                CampaignId,
                Namespace
            );


            Stream? response = wrapper.Download(operation);
            if (response == null)
                return "No response from server.";

            return Helper.ConvertInputStreamToString(response);
        }
    }
}