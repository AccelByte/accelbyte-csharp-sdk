// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Gametelemetry.Wrapper;
using AccelByte.Sdk.Api.Gametelemetry.Model;
using AccelByte.Sdk.Api.Gametelemetry.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Gametelemetry
{
    [SdkConsoleCommand("gametelemetry","geteventsgametelemetryv1adminnamespacesnamespaceeventsget")]
    public class GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGetCommand: ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName{ get { return "Gametelemetry"; } }

        public string OperationName{ get { return "GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet"; } }

        [SdkCommandArgument("namespace")]
        public string Namespace { get; set; } = String.Empty;

        [SdkCommandArgument("endTime")]
        public string? EndTime { get; set; }

        [SdkCommandArgument("eventId")]
        public string? EventId { get; set; }

        [SdkCommandArgument("eventName")]
        public string? EventName { get; set; }

        [SdkCommandArgument("eventPayload")]
        public string? EventPayload { get; set; }

        [SdkCommandArgument("limit")]
        public long? Limit { get; set; }

        [SdkCommandArgument("offset")]
        public long? Offset { get; set; }

        [SdkCommandArgument("startTime")]
        public string? StartTime { get; set; }

        public GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGetCommand(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Gametelemetry.Wrapper.Operations wrapper = new AccelByte.Sdk.Api.Gametelemetry.Wrapper.Operations(_SDK);

            GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet operation = new GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet(
                Namespace,                
                EndTime,                
                EventId,                
                EventName,                
                EventPayload,                
                Limit,                
                Offset,                
                StartTime                
            );            
            
            wrapper.GetEventsGameTelemetryV1AdminNamespacesNamespaceEventsGet(operation);
            return String.Empty;
        }
    }
}