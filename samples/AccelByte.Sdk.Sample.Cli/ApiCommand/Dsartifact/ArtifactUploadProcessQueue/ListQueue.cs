// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.


using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Dsartifact.Wrapper;
using AccelByte.Sdk.Api.Dsartifact.Model;
using AccelByte.Sdk.Api.Dsartifact.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Dsartifact
{
    [SdkConsoleCommand("dsartifact", "listqueue")]
    public class ListQueueCommand : ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName { get { return "Dsartifact"; } }

        public string OperationName { get { return "ListQueue"; } }

        [SdkCommandArgument("limit")]
        public long? Limit { get; set; }

        [SdkCommandArgument("next")]
        public string? Next { get; set; }

        [SdkCommandArgument("previous")]
        public string? Previous { get; set; }

        [SdkCommandArgument("nodeIP")]
        public string NodeIP { get; set; } = String.Empty;

        public ListQueueCommand(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Dsartifact.Wrapper.ArtifactUploadProcessQueue wrapper = new AccelByte.Sdk.Api.Dsartifact.Wrapper.ArtifactUploadProcessQueue(_SDK);

            var opBuilder = AccelByte.Sdk.Api.Dsartifact.Operation.ListQueue.Builder;

            if (Limit != null)
                opBuilder.SetLimit((long)Limit);
            if (Next != null)
                opBuilder.SetNext((string)Next);
            if (Previous != null)
                opBuilder.SetPrevious((string)Previous);




            ListQueue operation = opBuilder.Build(
                NodeIP
            );


            AccelByte.Sdk.Api.Dsartifact.Model.ModelsListQueueResponse? response = wrapper.ListQueue(operation);
            if (response == null)
                return "No response from server.";

            return SdkHelper.SerializeToJson(response);
        }
    }
}