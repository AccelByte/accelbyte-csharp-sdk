// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.


using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Dsartifact.Wrapper;
using AccelByte.Sdk.Api.Dsartifact.Model;
using AccelByte.Sdk.Api.Dsartifact.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Dsartifact
{
    [SdkConsoleCommand("dsartifact", "listterminatedservers")]
    public class ListTerminatedServersCommand : ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName { get { return "Dsartifact"; } }

        public string OperationName { get { return "ListTerminatedServers"; } }

        [SdkCommandArgument("deployment")]
        public string? Deployment { get; set; }

        [SdkCommandArgument("gameMode")]
        public string? GameMode { get; set; }

        [SdkCommandArgument("limit")]
        public long? Limit { get; set; }

        [SdkCommandArgument("next")]
        public string? Next { get; set; }

        [SdkCommandArgument("partyId")]
        public string? PartyId { get; set; }

        [SdkCommandArgument("podName")]
        public string? PodName { get; set; }

        [SdkCommandArgument("previous")]
        public string? Previous { get; set; }

        [SdkCommandArgument("provider")]
        public string? Provider { get; set; }

        [SdkCommandArgument("region")]
        public string? Region { get; set; }

        [SdkCommandArgument("sessionId")]
        public string? SessionId { get; set; }

        [SdkCommandArgument("userId")]
        public string? UserId { get; set; }

        public ListTerminatedServersCommand(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Dsartifact.Wrapper.AllTerminatedServers wrapper = new AccelByte.Sdk.Api.Dsartifact.Wrapper.AllTerminatedServers(_SDK);

            var opBuilder = AccelByte.Sdk.Api.Dsartifact.Operation.ListTerminatedServers.Builder;

            if (Deployment != null)
                opBuilder.SetDeployment((string)Deployment);
            if (GameMode != null)
                opBuilder.SetGameMode((string)GameMode);
            if (Limit != null)
                opBuilder.SetLimit((long)Limit);
            if (Next != null)
                opBuilder.SetNext((string)Next);
            if (PartyId != null)
                opBuilder.SetPartyId((string)PartyId);
            if (PodName != null)
                opBuilder.SetPodName((string)PodName);
            if (Previous != null)
                opBuilder.SetPrevious((string)Previous);
            if (Provider != null)
                opBuilder.SetProvider((string)Provider);
            if (Region != null)
                opBuilder.SetRegion((string)Region);
            if (SessionId != null)
                opBuilder.SetSessionId((string)SessionId);
            if (UserId != null)
                opBuilder.SetUserId((string)UserId);




            ListTerminatedServers operation = opBuilder.Build(
            );


            AccelByte.Sdk.Api.Dsartifact.Model.ModelsListTerminatedServersResponse? response = wrapper.ListTerminatedServers(operation);
            if (response == null)
                return "No response from server.";

            return SdkHelper.SerializeToJson(response);
        }
    }
}