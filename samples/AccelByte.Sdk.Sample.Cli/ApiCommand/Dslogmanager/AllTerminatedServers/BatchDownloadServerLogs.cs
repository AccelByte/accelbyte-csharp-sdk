// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Dslogmanager.Wrapper;
using AccelByte.Sdk.Api.Dslogmanager.Model;
using AccelByte.Sdk.Api.Dslogmanager.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Dslogmanager
{
    [SdkConsoleCommand("dslogmanager", "batchdownloadserverlogs")]
    public class BatchDownloadServerLogsCommand : ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName { get { return "Dslogmanager"; } }

        public string OperationName { get { return "BatchDownloadServerLogs"; } }

        [SdkCommandData("body")]
        public ModelsBatchDownloadLogsRequest Body { get; set; } = new ModelsBatchDownloadLogsRequest();

        public BatchDownloadServerLogsCommand(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Dslogmanager.Wrapper.AllTerminatedServers wrapper = new AccelByte.Sdk.Api.Dslogmanager.Wrapper.AllTerminatedServers(_SDK);

            BatchDownloadServerLogs operation = new BatchDownloadServerLogs(
                Body
            );

            Stream? response = wrapper.BatchDownloadServerLogs(operation);
            if (response == null)
                return "No response from server.";

            return Helper.ConvertInputStreamToString(response);
        }
    }
}