// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.

using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Session.Wrapper;
using AccelByte.Sdk.Api.Session.Model;
using AccelByte.Sdk.Api.Session.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Session
{
    [SdkConsoleCommand("session","adminquerygamesessions")]
    public class AdminQueryGameSessionsCommand: ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName{ get { return "Session"; } }

        public string OperationName{ get { return "AdminQueryGameSessions"; } }

        [SdkCommandArgument("namespace")]
        public string Namespace { get; set; } = String.Empty;

        [SdkCommandArgument("configurationName")]
        public string? ConfigurationName { get; set; }

        [SdkCommandArgument("dsPodName")]
        public string? DsPodName { get; set; }

        [SdkCommandArgument("fromTime")]
        public string? FromTime { get; set; }

        [SdkCommandArgument("gameMode")]
        public string? GameMode { get; set; }

        [SdkCommandArgument("isSoftDeleted")]
        public string? IsSoftDeleted { get; set; }

        [SdkCommandArgument("joinability")]
        public string? Joinability { get; set; }

        [SdkCommandArgument("limit")]
        public long? Limit { get; set; }

        [SdkCommandArgument("matchPool")]
        public string? MatchPool { get; set; }

        [SdkCommandArgument("memberID")]
        public string? MemberID { get; set; }

        [SdkCommandArgument("offset")]
        public long? Offset { get; set; }

        [SdkCommandArgument("order")]
        public string? Order { get; set; }

        [SdkCommandArgument("orderBy")]
        public string? OrderBy { get; set; }

        [SdkCommandArgument("sessionID")]
        public string? SessionID { get; set; }

        [SdkCommandArgument("status")]
        public string? Status { get; set; }

        [SdkCommandArgument("statusV2")]
        public string? StatusV2 { get; set; }

        [SdkCommandArgument("toTime")]
        public string? ToTime { get; set; }

        public AdminQueryGameSessionsCommand(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Session.Wrapper.GameSession wrapper = new AccelByte.Sdk.Api.Session.Wrapper.GameSession(_SDK);

            AdminQueryGameSessions operation = new AdminQueryGameSessions(
                Namespace,                
                ConfigurationName,                
                DsPodName,                
                FromTime,                
                GameMode,                
                IsSoftDeleted,                
                Joinability,                
                Limit,                
                MatchPool,                
                MemberID,                
                Offset,                
                Order,                
                OrderBy,                
                SessionID,                
                Status,                
                StatusV2,                
                ToTime                
            );            
            
            AccelByte.Sdk.Api.Session.Model.ApimodelsGameSessionQueryResponse? response = wrapper.AdminQueryGameSessions(operation);
            if (response == null)
                return "No response from server.";

            return SdkHelper.SerializeToJson(response);
        }
    }
}