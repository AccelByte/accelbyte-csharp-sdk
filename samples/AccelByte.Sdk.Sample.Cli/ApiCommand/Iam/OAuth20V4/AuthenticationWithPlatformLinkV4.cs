// Copyright (c) 2022 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// This code is generated by tool. DO NOT EDIT.


using System;
using System.IO;
using System.Collections.Generic;

using AccelByte.Sdk.Core;
using AccelByte.Sdk.Core.Util;
using AccelByte.Sdk.Sample.Cli.Command;

using AccelByte.Sdk.Api.Iam.Wrapper;
using AccelByte.Sdk.Api.Iam.Model;
using AccelByte.Sdk.Api.Iam.Operation;

namespace AccelByte.Sdk.Sample.Cli.ApiCommand.Iam
{
    [SdkConsoleCommand("iam", "authenticationwithplatformlinkv4")]
    public class AuthenticationWithPlatformLinkV4Command : ISdkConsoleCommand
    {
        private AccelByteSDK _SDK;

        public string ServiceName { get { return "Iam"; } }

        public string OperationName { get { return "AuthenticationWithPlatformLinkV4"; } }

        [SdkCommandArgument("extend_exp")]
        public bool ExtendExp { get; set; } = false;

        [SdkCommandArgument("client_id")]
        public string ClientId { get; set; } = String.Empty;

        [SdkCommandArgument("linkingToken")]
        public string LinkingToken { get; set; } = String.Empty;

        [SdkCommandArgument("password")]
        public string Password { get; set; } = String.Empty;

        [SdkCommandArgument("username")]
        public string Username { get; set; } = String.Empty;

        public AuthenticationWithPlatformLinkV4Command(AccelByteSDK sdk)
        {
            _SDK = sdk;
        }

        public string Run()
        {
            AccelByte.Sdk.Api.Iam.Wrapper.OAuth20V4 wrapper = new AccelByte.Sdk.Api.Iam.Wrapper.OAuth20V4(_SDK);

            var opBuilder = AccelByte.Sdk.Api.Iam.Operation.AuthenticationWithPlatformLinkV4.Builder;



            if (ExtendExp != null)
                opBuilder.SetExtendExp((bool)ExtendExp);


            AuthenticationWithPlatformLinkV4 operation = opBuilder.Build(
                ClientId,
                LinkingToken,
                Password,
                Username
            );


            AccelByte.Sdk.Api.Iam.Model.OauthmodelTokenResponseV3? response = wrapper.AuthenticationWithPlatformLinkV4(operation);
            if (response == null)
                return "No response from server.";

            return SdkHelper.SerializeToJson(response);
        }
    }
}